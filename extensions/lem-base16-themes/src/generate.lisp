(in-package :cl-user)
(defpackage :lem-base16-themes-generate
  (:use :common-lisp)
  (:export
   #:generate
   #:regenerate-themes))

(in-package :lem-base16-themes-generate)

(defparameter *base-dir* (directory-namestring (asdf:system-relative-pathname :lem-base16-themes-generate "lem-base16-themes.asd")))

(defun generate (out)
  (format out ";;; AUTOGENERATED~%~%(in-package :lem-base16-themes)~%")
  (let ((template (merge-pathnames "templates/default.mustache" *base-dir*)))
    (loop :for scheme-dir :in (uiop:subdirectories (merge-pathnames "schemes/" cl-base16:*source-dir*))
          :do (unless (uiop:string-prefix-p "." (first (last (pathname-directory scheme-dir))))
                (loop :for scheme :in (uiop:directory-files scheme-dir)
                      :do (if (string= "yaml" (pathname-type scheme))
                              (format out "~%~A" (mustache:render* template (cl-base16::load-scheme scheme)))))))))

(defun regenerate-themes ()
  (with-open-file (out (merge-pathnames "src/themes.lisp" *base-dir*)
                       :direction :output :external-format :utf-8 :if-exists :supersede)
    (generate out)))
