2018-04-09  Charles A. Roelli  <charles@aurox.ch>

	* lisp/files.el (kept-new-versions): Improve documentation string.

2018-04-09  Eli Zaretskii  <eliz@gnu.org>

	Fix a minor mistake in the ELisp manual

	* doc/lispref/files.texi (Reading from Files): Fix copy/paste
	mistake.  (Bug#31107)

2018-04-06  Eli Zaretskii  <eliz@gnu.org>

	* lisp/files.el (find-file-literally): Doc fix.

2018-04-05  Eli Zaretskii  <eliz@gnu.org>

	Fix typos in doc strings

	* lisp/simple.el (undo-auto--boundary-timer)
	(undo-auto--boundary-ensure-timer): Fix typos in doc strings.

2018-04-05  Nicolas Petton  <nicolas@petton.fr>

	Bump Emacs version to 26.1

	* README:
	* configure.ac:
	* msdos/sed2v2.inp:
	* nt/README.W32: Bump Emacs version to 26.1.

2018-04-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/inline.el: Clarify apparent typos

2018-04-04  Ted Zlatanov  <tzz@lifelogs.com>

	Allow sexp customization type in auth-sources

	* lisp/auth-source.el (auth-sources): Allow sexp customization type.
	Update the :version tag.

	(cherry picked from commit 447da5b0d49b7aa14fa5d6969015770fdf9b9f92)

2018-04-03  Nicolas Petton  <nicolas@petton.fr>

	* etc/NEWS: Remove temporary markup.

	* etc/AUTHORS: Update.

	* ChangeLog.3: Update.

2018-04-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#31022

	* lisp/cus-start.el (temporary-file-directory): Suppress file name
	handlers when calling `shell-command-to-string'.  (Bug#31022)

2018-04-03  Paul Eggert  <eggert@cs.ucla.edu>

	Update "Calendrical Calculations" cites

	* lisp/calendar/calendar.el: Update citations to the book
	"Calendrical Calculations" and its predecessors.

2018-04-02  Noam Postavsky  <npostavs@gmail.com>

	Fix term.el rendering following a window resize (Bug#30544)

	* lisp/term.el (term-reset-size): Reset cached row and column values
	before changing point.

2018-04-02  Philipp Stephani  <phst@google.com>

	* lisp/files.el (auto-save-visited-mode): Don't prompt for filenames.

2018-04-01  Philipp Stephani  <phst@google.com>

	Quote a few backticks in docstrings.

	* lisp/emacs-lisp/macroexp.el (macroexp-progn, macroexp-let*)
	(macroexp-if): Quote backtick in docstrings.

2018-04-01  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits of completion-at-point-functions documentation

	* lisp/minibuffer.el (completion-at-point-functions):
	* doc/lispref/minibuf.texi (Completion in Buffers): Fix wording
	and filling.

	(cherry picked from commit a8ddd05d7d32946b892b9faaba6c9736ed2ad847)

2018-04-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	(completion-at-point-functions): Improve doc

	(cherry picked from commit b56c56f203f8b066dd71e6ae6a254121b3ac3f08)

2018-04-01  Eli Zaretskii  <eliz@gnu.org>

	* lisp/net/shr.el (shr-browse-url): Doc fix.  (Bug#30957)

2018-03-31  Hong Xu  <hong@topbug.net>

	Mention `key-description' as inverse of `kbd' (Bug#30942)

	* lisp/subr.el (kbd): Add `key-description' as inverse of `kbd' in the
	doc.

2018-03-31  Noam Postavsky  <npostavs@gmail.com>

	Document return value of pcase (Bug#30425)

	* doc/lispref/control.texi (Pattern matching case statement):
	* lisp/emacs-lisp/pcase.el (pcase): State that pcase returns nil if no
	patterns match.
	(pcase-exhaustive): State that an error is signaled if no patterns
	match.

2018-03-31  Paul Eggert  <eggert@cs.ucla.edu>

	* doc/emacs/macos.texi: Tweak grammar and capitalization.

2018-03-31  Richard Stallman  <rms@gnu.org>

	Distinguish free from non-free OSes

2018-03-28  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/misc.texi (Amusements): Avoid non-printing character.

2018-03-28  Glenn Morris  <rgm@gnu.org>

	Fix xrefs in pdf Emacs manual

	* doc/emacs/fortran-xtra.texi (ForIndent Cont, ForIndent Num)
	(Fortran Columns):
	* doc/emacs/picture-xtra.texi (Rectangles in Picture):
	Fix recent changes that neglected the splitting of the pdf manuals.

2018-03-28  Michael Albinus  <michael.albinus@gmx.de>

	* doc/misc/org.texi (Installation): Fix clone commands.

2018-03-27  Rasmus  <rasmus@gmx.us>

	Update Org to v9.1.9

	Please note this is a bugfix release. See etc/ORG-NEWS for details.

2018-03-27  Michael Heerdegen  <michael_heerdegen@web.de>

	De-obsolete `if-let' and `when-let'

	For the following release it is planned to make `if-let*' and
	`when-let*' aliases for `if-let' and `when-let'.  For now we revert
	declaring `if-let' and `when-let' obsolete and tweak the docstrings.

	* lisp/emacs-lisp/subr-x.el (if-let*, when-let*): Make docstrings
	refer to those of `if-let' and `when-let'.
	(if-let, when-let): De-obsolete.  Rewrite documentation.

2018-03-26  Glenn Morris  <rgm@gnu.org>

	* lisp/htmlfontify.el (hfy-begin-span-handler): Doc fix.

2018-03-26  Eli Zaretskii  <eliz@gnu.org>

	* doc/lispref/functions.texi (Defining Functions): Improve indexing.

2018-03-25  Aaron Jensen  <aaronjensen@gmail.com>

	Fix crash after frame is freed on macOS (bug#30800)

	* src/nsterm.m (x_free_frame_resources): Clear represented_frame.
	(bug#30800)

2018-03-25  Michael Albinus  <michael.albinus@gmx.de>

	More manual editing

	* doc/emacs/basic.texi:
	* doc/emacs/calendar.texi:
	* doc/emacs/display.texi:
	* doc/emacs/mini.texi:
	* doc/emacs/misc.texi:
	* doc/emacs/picture-xtra.texi:
	* doc/misc/info.texi: Prefer <PageDown> and <PageUp> over
	<next> and <prior>.  Add missing @kindex entries.

	* doc/emacs/custom.texi (Function Keys): Fix and add missing
	key symbols.

2018-03-25  Michael Albinus  <michael.albinus@gmx.de>

	Minor manual changes changes

	* doc/emacs/misc.texi (FFAP): Complete commands.
	(Amusements): Add some @cindex entries.  Add "M-x butterfly".

2018-03-24  Glenn Morris  <rgm@gnu.org>

	* lisp/calculator.el (calculator-paste-decimals): Add version.

2018-03-23  Eli Zaretskii  <eliz@gnu.org>

	More proofreading of the Emacs manual

	* doc/emacs/trouble.texi (DEL Does Not Delete): Improve wording.
	(Screen Garbled): Mention the command name.
	(Bug Criteria): Mention that problems in packages should first be
	reported to the respective maintainers.
	(Checklist): Fix wording.
	(Contributing, Copyright Assignment): Minor copyedits.
	* doc/emacs/misc.texi (Amusements): Remove Landmark.
	* doc/emacs/picture-xtra.texi (Tabs in Picture): Improve wording.
	(Rectangles in Picture): Add a cross-reference to "Registers".
	* doc/emacs/misc.texi (Gnus Group Buffer, Gnus Summary Buffer):
	Mention command names in parentheses.
	(Gnus Summary Buffer): Document "M-r".
	(Network Security): Document that current NSM works with TLS
	encryption.  Fix markup.
	(Document View): Improve wording and fix a typo.
	(DocView Conversion): Rephrase description of
	doc-view-cache-directory.
	(Single Shell): Mention variables that control when shell output
	appears in the echo area.
	(Shell Mode): Improve wording.
	(Shell Prompts): Fix a typo.
	(Shell Ring, Term Mode): Mention command names.
	(History References): Add a cross-reference to "Rebinding".
	(Remote Host): Mention SSH.
	(TCP Emacs server): Improve wording.
	(emacsclient Options): Minor improvements.
	(PostScript): Fix wording.
	(PostScript Variables): Mention that ps-font-size could be a cons.
	(Sorting): Minor improvements.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org

2018-03-23  Noam Postavsky  <npostavs@gmail.com>

	* src/lisp.h (struct Lisp_Buffer_Local_Value): Update commentary.

	* doc/emacs/trouble.texi: Fix location of `emacs-version' index.

2018-03-23  Noam Postavsky  <npostavs@gmail.com>

	Explain more about (defvar foo) form (Bug#18059)

	* doc/lispref/variables.texi (Defining Variables)
	(Using Lexical Binding):
	* doc/lispref/compile.texi (Compiler Errors): Emphasize that omitting
	VALUE for `defvar' marks the variable special only locally.
	* doc/lispref/variables.texi (Using Lexical Binding): Add example of
	using `defvar' without VALUE.

2018-03-22  Charles A. Roelli  <charles@aurox.ch>

	* doc/lispref/buffers.texi (Buffer List): Fix grammar.

	* doc/lispref/anti.texi (Antinews): Fix grammar.

2018-03-22  Glenn Morris  <rgm@gnu.org>

	* lisp/org/ob-lisp.el (org-babel-lisp-eval-fn): Tweak type.

	Avoids type mismatch when relevant library is not present/loaded.

2018-03-22  Glenn Morris  <rgm@gnu.org>

	sql.el defcustom fixes

	* lisp/progmodes/sql.el (sql-login-params): Update.
	Avoids type mismatch with postgres and sqlite login params.
	(sql-postgres-login-params): Bump version.

2018-03-22  Eli Zaretskii  <eliz@gnu.org>

	Document DEFUN attributes

	* doc/lispref/internals.texi (Writing Emacs Primitives): Document
	specification of function attributes in DEFUN.

2018-03-22  Nicolas Petton  <nicolas@petton.fr>

	* etc/NEWS: Add an entry for auth-source-pass.

2018-03-22  Eli Zaretskii  <eliz@gnu.org>

	Fix the MSDOS build

	* msdos/sed2v2.inp (HAVE_SBRK): Define to 1.

2018-03-22  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Improve warning and error messages

	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-read,
	  (eieio-persistent-validate/fix-slot-value): Indicate exactly what
	  went wrong.

2018-03-22  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Adjust eieio persistence tests for expected failure

	* test/lisp/emacs-lisp/eieio-tests/eieio-test-persist.el
	 (eieio-test-persist-hash-and-vector,
	  eieio-test-persist-interior-lists): Persistence does not currently
	 handle deeply-nested objects. Expect current failures, and mark for
	 future fixes.

2018-03-22  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Let eieio-persistent-read read what object-write has written

	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-validate/fix-slot-value):
	  `object-write' may quote lists inside hash tables and vectors, so
	  unquote those lists here.

	This patch allows the eieio-persistent write/restore process to
	perform a clean round trip. It only handles a very specific and
	limited range of object structures, but at least the write and read
	procedures match.

2018-03-22  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Handle possible classtype values in eieio-persistent-read

	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-validate/fix-slot-value):
	  The function `eieio-persistent-slot-type-is-class-p' could return
	  either a single class, or a list of classes.

2018-03-22  Pierre Téchoueyres  <pierre.techoueyres@free.fr>

	Add new tests for eieio persistence

	* test/lisp/emacs-lisp/eieio-tests/eieio-test-persist.el:
	  (hash-equal): New comparison test for hash-tables.
	  (persist-test-save-and-compare): Use test for hash-tables.
	  (eieio-test-persist-hash-and-vector,
	  eieio-test-persist-interior-lists): New tests.

2018-03-22  Glenn Morris  <rgm@gnu.org>

	* lisp/gnus/gnus-cloud.el (gnus-cloud-synced-files): Fix doc & type.

	* lisp/ibuf-ext.el (ibuffer-never-search-content-mode): Fix type.

2018-03-21  Glenn Morris  <rgm@gnu.org>

	* doc/lispref/windows.texi (Selecting Windows): Fix a typo.

2018-03-21  Charles A. Roelli  <charles@aurox.ch>

	* doc/lispref/internals.texi (Writing Emacs Primitives): Fix grammar.

2018-03-21  Alan Mackenzie  <acm@muc.de>

	Firm up documentation of generalized variables

	* doc/lispref/variables.texi (Generalized Variables)
	(Setting Generalized Variables): Define a generalized variable as something
	setf can write to.  Remove the insinuation that hackers have poor memories.
	State explicitly that the list of GVs given is complete.  Remove the
	suggestion that `setf' has superseded, or is in the process of superseding,
	`setq'.  Make minor corrections to the English.

2018-03-21  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of Auto-Revert mode

	* doc/emacs/files.texi (Reverting): Mention that Aut-Revert
	applies to Dired buffers as well.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

2018-03-21  Eli Zaretskii  <eliz@gnu.org>

	Improvements in dired.texi

	* doc/emacs/dired.texi (Dired): Mention that Dired works with
	remote directories.
	(Dired Enter): ls-lisp is used on some remote systems as well.
	(Dired Navigation): Mention and index the command names.
	(Dired Deletion): Document the 'always' value of
	dired-recursive-deletes.  Mention the alternative deletion method.
	(Marks vs Flags): Fix spelling of Auto-Revert mode.  Document what
	marking does on a subdirectory header line.
	(Operating on Files): Document that 'Z' uses gzip or compress.
	(Comparison in Dired): Mention ediff-files.
	(Misc Dired Features): Fix a typo.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

2018-03-21  Noam Postavsky  <npostavs@gmail.com>

	Revert "Support all perl variable declarators and prefixes"

	It highlights normal variable names in perl programs (Bug#30812).
	* lisp/progmodes/perl-mode.el (perl-imenu-generic-expression)
	(perl-font-lock-keywords-2): Restore values prior to Bug#27613 fix.

	Don't merge to master, we will fix Bug#27613 properly there (it's too
	close to release to do that on emacs-26).

2018-03-20  Paul Eggert  <eggert@cs.ucla.edu>

	Port to 32-bit sparc64

	Backport from master.
	Problem reported by Ulrich Mueller; fix suggested by Eli Zaretskii
	and Andreas Schwab (Bug#30855).
	* src/alloc.c (mark_memory): Call mark_maybe_object only on
	pointers that are properly aligned for Lisp_Object.

2018-03-20  Robert Pluim  <rpluim@gmail.com>

	Correct Info link markup

	* lisp/gnus/gnus-agent.el (gnus-agent-auto-agentize-methods):
	Correct markup for Info link.
	* src/minibuf.c (Fcompleting_read): Likewise.

2018-03-20  Nick Helm  <nick@tenpoint.co.nz>

	Improve documentation of 'with-help-window'

	* doc/lispref/help.texi (Help Functions): Change variable name
	to 'buffer-or-name'.

	* lisp/help.el (with-help-window): Change variable name to
	'buffer-or-name' and rewrite the doc string, adding reference
	to 'help-window-setup'.  (Bug#30792)

2018-03-20  Eli Zaretskii  <eliz@gnu.org>

	Minor improvements in building.texi

	* doc/emacs/building.texi (Compilation Shell): Mention that this
	section is for local compilation buffers.
	(Compilation, Compilation Mode): Mention that 'g' is bound to
	'recompile' in compilation buffers.
	(Grep Searching): Add a cross-reference to "Compilation Mode".
	Suggested by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-03-20  Alex Branham  <branham@utexas.edu>

	* lisp/textmodes/bibtex.el (bibtex-mark-entry): activate mark

2018-03-19  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/building.texi (Starting GUD): Mention 'guiler'.

2018-03-19  Eli Zaretskii  <eliz@gnu.org>

	Yet more proofreading of the Emacs manual

	* doc/emacs/building.texi (Compilation, Grep Searching)
	(Debuggers, GUD Customization, Source Buffers)
	(Breakpoints Buffer, Threads Buffer): Minor fixes and updates.
	Suggested by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	* doc/emacs/rmail.texi: Fix broken link.

2018-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix recently-added POP doc glitch

	* doc/emacs/rmail.texi (Remote Mailboxes):
	POP3 → POP, when talking about POP in general.

2018-03-19  Eli Zaretskii  <eliz@gnu.org>

	More proofreading of the Emacs manual

	* doc/emacs/macos.texi (Mac / GNUstep Basics): Fix typos.  Improve
	indexing.
	(Mac / GNUstep Basics, Mac / GNUstep Customization)
	(Mac / GNUstep Events): Improve indexing.

	* doc/emacs/rmail.texi (Rmail): Mention Gnus.
	(Rmail Basics, Rmail Scrolling): Improve cross-references and
	indexing.
	(Rmail Motion): Minor improvements.
	(Rmail Inbox): Remove outdated text about Babyl format.
	(Rmail Files): Formatting changes.  Comment out
	set-rmail-inbox-list in the table of commands, as it is commented
	out in the text that follows.
	(Rmail Output, Rmail Labels, Rmail Reply, Rmail Make Summary):
	Minor copyedits.
	(Rmail Summary Edit): Document
	rmail-summary-scroll-between-messages.
	(Rmail Editing): Improve indexing.
	(Movemail): Fix typos.
	(Remote Mailboxes): Use "POP3" rather than "POP".

2018-03-19  Simen Heggestøyl  <simenheg@gmail.com>

	Fix typo in the Emacs manual's VC chapter

	* doc/emacs/maintaining.texi (VC Directory Buffer): Fix a typo.

2018-03-19  Basil L. Contovounesios  <contovob@tcd.ie>

	Pass json-readtable-error data as a list (bug#30489)

	* lisp/json.el (json-readtable-dispatch): Fix error data.
	* test/lisp/json-tests.el (test-json-read): Check error data is a
	list.

2018-03-17  Noam Postavsky  <npostavs@gmail.com>

	Improve word motion docs (Bug#30815)

	* doc/lispref/positions.texi (Word Motion): Fix reference to
	`char-script-table'.
	* lisp/simple.el (backward-word):
	* src/syntax.c (forward-word): Mention `char-script-table' and add
	link to the 'Word Motion' manual section.

2018-03-15  Michael Albinus  <michael.albinus@gmx.de>

	Replace "carriage-return" by "carriage return" in manuals

	* doc/emacs/msdos.texi:
	* doc/emacs/mule.texi:
	* doc/emacs/screen.texi:
	* doc/lispref/nonascii.texi:
	* doc/misc/calc.texi: Replace "carriage-return" by "carriage
	return".  Suggested by Richard Stallman <rms@gnu.org> in
	emacs-manual-bugs@gnu.org.

2018-03-15  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits in mule.texi

	* doc/emacs/mule.texi (Recognize Coding, Fontsets): Minor changes
	in wording.  Suggested by Richard Stallman <rms@gnu.org> in
	emacs-manual-bugs@gnu.org.

2018-03-14  Eli Zaretskii  <eliz@gnu.org>

	Fix problems caused by fontconfig-2.13.0

	* src/xterm.c (x_term_init): Call fixup_locale after
	xg_initialize, to countermand the call to setlocale in some
	versions of fontconfig.  (Bug#30788)

2018-03-13  Glenn Morris  <rgm@gnu.org>

	Fix some allout.el aliases

	* lisp/allout.el (allout-passphrase-verifier-string)
	(allout-passphrase-hint-string): Fix alias.

2018-03-13  Glenn Morris  <rgm@gnu.org>

	* lisp/progmodes/ada-mode.el (ada-clean-buffer-before-saving): Doc fix.

2018-03-13  Glenn Morris  <rgm@gnu.org>

	Doc fixes re obsolete items

	* doc/emacs/mini.texi (Completion Commands): Small update re mouse.
	* doc/misc/htmlfontify.texi (Customization): Replace obsolete alias.

2018-03-13  Glenn Morris  <rgm@gnu.org>

	Replace an obsolete alias in tpu-mapper

	* lisp/obsolete/tpu-mapper.el (tpu-map-key, tpu-mapper):
	Replace obsolete alias.

2018-03-13  Glenn Morris  <rgm@gnu.org>

	Doc fixes re obsolete items

	* doc/emacs/maintaining.texi (VC Undo):
	* doc/misc/efaq-w32.texi (Font names): Replace obsolete aliases.
	* doc/misc/url.texi (Customization):
	Don't mention url-temporary-directory, it essentially does nothing.
	* lisp/hilit-chg.el
	(highlight-changes-global-changes-existing-buffers): Doc fix.

2018-03-13  Eli Zaretskii  <eliz@gnu.org>

	Minor changes in mule.texi

	* doc/emacs/mule.texi (International, Coding Systems)
	(Bidirectional Editing): Minor wording changes and typo fixes.
	Suggested by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-03-13  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertion violation under visual-order-cursor-movement

	* src/xdisp.c (Fmove_point_visually): Don't let point exceed the
	BEGV..ZV range.  Signal Beginning of buffer error when there's a
	before-string at BEGV.  (Bug#30787)

2018-03-13  Glenn Morris  <rgm@gnu.org>

	Stop mentioning options.el in doc

	* doc/misc/calc.texi (Customizing Embedded Mode):
	Remove mentions of the obsolete (since 22.1) options.el.
	* lisp/progmodes/meta-mode.el: Comment fix.

2018-03-12  Charles A. Roelli  <charles@aurox.ch>

	* lisp/vc/vc-dir.el (vc-dir-unmark): Fix documentation.

2018-03-12  Eli Zaretskii  <eliz@gnu.org>

	* lisp/minibuffer.el (completion-cycle-threshold): Doc fix.

2018-03-12  Eli Zaretskii  <eliz@gnu.org>

	Fix last change in Xref documentation

	* doc/emacs/maintaining.texi (Looking Up Identifiers): More
	accurate wording for the description of xref-etags-mode.

2018-03-11  Eli Zaretskii  <eliz@gnu.org>

	More changes in the Emacs manual

	* doc/emacs/text.texi (Words, Foldout, Table Conversion): Clarify
	text.  Reported by Gijs Hillenius <gijs@hillenius.net> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/msdos.texi (Windows Keyboard):
	* doc/emacs/msdos-xtra.texi (MS-DOS Keyboard):
	* doc/emacs/macos.texi (Mac / GNUstep Basics):
	* doc/emacs/glossary.texi (Glossary):
	* doc/emacs/custom.texi (Function Keys, Init Syntax):
	* doc/emacs/commands.texi (User Input):
	* doc/emacs/basic.texi (Arguments): Fix capitalization of "Meta".
	* doc/emacs/msdos.texi (Windows Keyboard):
	* doc/emacs/dired.texi (Dired Updating):
	* doc/emacs/custom.texi (Init Rebinding): Fix misuses of @key.
	Suggested by Richard Stallman <rms@gnu.org>.

2018-03-11  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of Xref

	* doc/emacs/maintaining.texi (Looking Up Identifiers): Document
	xref-etags-mode.

2018-03-11  Paul Eggert  <eggert@cs.ucla.edu>

	Fix create_process bug breaking eudc-expand-inline

	Problem reported by Thomas Fitzsimmons (Bug#30762).
	* src/process.c (create_process) [HAVE_PTYS]:
	Call setsid even if !PTY_FLAG.

2018-03-10  Noam Postavsky  <npostavs@gmail.com>

	Clarify that nil doesn't match itself as a cl-case clause (Bug#30749)

	* lisp/emacs-lisp/cl-macs.el (cl-case): Mention that the ATOM
	=> (ATOM) short form is only for non-nil ATOMs.

2018-03-10  Charles A. Roelli  <charles@aurox.ch>

	Improve SVG documentation

	* doc/lispref/display.texi (ImageMagick Images): Remove an
	outdated comment that references a fixed bug.
	(SVG Images): Fix grammar, and call functions functions (there are
	no commands in lisp/svg.el).

2018-03-10  Eli Zaretskii  <eliz@gnu.org>

	Document the "URL" keyword in library headers

	* doc/lispref/tips.texi (Library Headers): "URL" is an alias for
	"Homepage".  Suggested by Peter Oliver <p.d.oliver@mavit.org.uk>.
	(Bug#30571)

2018-03-09  Glenn Morris  <rgm@gnu.org>

	* test/lisp/international/mule-tests.el:
	Avoid local variables confusion.

2018-03-09  Bill Wohler  <wohler@newt.com>

	Add missing findex entries for recently removed kindex entries

	* doc/misc/mh-e.texi:

	(cherry picked from commit a56a3fc6849b89a71c9a00afcb088021ccbe94e5)

2018-03-09  Glenn Morris  <rgm@gnu.org>

	Replace the obsolete process-kill-without-query in documentation

	* lisp/comint.el (comint-exec-hook):
	* lisp/term.el (term-exec-hook):
	* lisp/eshell/esh-proc.el (eshell-exec-hook):
	Doc fixes re the obsolete process-kill-without-query.

2018-03-08  Michael Albinus  <michael.albinus@gmx.de>

	Minor change in the manual

	* doc/emacs/display.texi (Useless Whitespace):
	Don't upcase "TAB" and "SPC" when alluding to characters.

2018-03-08  Eli Zaretskii  <eliz@gnu.org>

	More minor changes in the manual

	* doc/emacs/display.texi (Useless Whitespace): Don't upcase "TAB"
	and "SPC" when alluding to characters.  Suggested by Richard
	Stallman <rms@gnu.org>.

	* doc/emacs/buffers.texi (Misc Buffer): Clarify what "read-only"
	means for buffers.
	(Buffers): Define and describe "buffer contents".  Suggested by
	Richard Stallman <rms@gnu.org>.  (Bug#30685)

2018-03-07  Glenn Morris  <rgm@gnu.org>

	Replace some obsolete aliases in code

	* lisp/net/eudc-bob.el (eudc-bob-mail-keymap):
	* lisp/textmodes/reftex-toc.el (reftex-make-separate-toc-frame):
	Replace obsolete aliases.

2018-03-07  Glenn Morris  <rgm@gnu.org>

	Replace some obsolete aliases in documentation

	* doc/misc/efaq-w32.texi (Incoming mail with Rmail):
	* doc/misc/speedbar.texi (Major Display Modes):
	* lisp/mh-e/mh-folder.el (mh-restore-desktop-buffer):
	Doc fixes re obsolete aliases.

2018-03-07  Eli Zaretskii  <eliz@gnu.org>

	Minor improvements in manuals

	* doc/lispref/variables.texi (Local Variables): Make more clear
	that local bindings of 'let' are in effect only within the body.
	Suggested by Marcin Borkowski <mbork@mbork.pl>, see
	http://lists.gnu.org/archive/html/emacs-devel/2018-03/msg00217.html
	for the details.

	* doc/emacs/programs.texi (Matching): Fix a typo.  Reported by
	Alex Branham <alex.branham@gmail.com> in emacs-manual-bugs@gnu.org.
	Improve indexing.

2018-03-07  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits in display.texi

	* doc/emacs/display.texi (Highlight Interactively)
	(Useless Whitespace, Line Truncation, Visual Line Mode): Minor
	changes of wording and typo corrections.  Suggested by Michael
	Albinus <michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

2018-03-07  Glenn Morris  <rgm@gnu.org>

	Remove some unused spam.el variables

	* lisp/gnus/spam.el (spam-ifile-path, spam-ifile-database-path)
	(spam-bogofilter-path, spam-bsfilter-path)
	(spam-spamassassin-path, spam-sa-learn-path):
	Remove variables that are described as obsolete, but are
	really completely unused, and have been for years.

2018-03-07  Glenn Morris  <rgm@gnu.org>

	Replace some obsolete aliases in code

	* lisp/emulation/viper.el (viper-set-hooks):
	* lisp/epa-hook.el (auto-encryption-mode):
	* lisp/term/pc-win.el (set-frame-font): Replace obsolete aliases.
	* lisp/net/quickurl.el (quickurl--assoc-function): New.
	(quickurl-assoc-function): Use it.

2018-03-07  Glenn Morris  <rgm@gnu.org>

	Replace some obsolete aliases in documentation

	* doc/emacs/text.texi (Nroff Mode):
	* doc/misc/efaq.texi (How to add fonts):
	* lisp/gnus/nnheader.el (nnheader-insert-file-contents):
	* lisp/progmodes/pascal.el (pascal-outline-mode):
	Doc fixes re obsolete aliases.

2018-03-06  Glenn Morris  <rgm@gnu.org>

	Obsolete eshell-cmpl-suffix-list

	* lisp/eshell/em-cmpl.el (eshell-cmpl-suffix-list):
	Make obsolete, to match pcomplete-suffix-list.

2018-03-06  Eli Zaretskii  <eliz@gnu.org>

	More minor changes in the Glossary of the Emacs manual

	* doc/emacs/glossary.texi (Glossary): Improve cross-references for
	modifier keys.  Fix typos.  Suggested by Gijs Hillenius
	<gijs@hillenius.net> in emacs-manual-bugs@gnu.org.

2018-03-06  Michael Heerdegen  <michael_heerdegen@web.de>

	Revert last commit

	This reverts commit af4697faa1f5b643f63a9ea61aa205a4c1432e23.  It's
	too late for this to be in the release.

2018-03-06  Michael Heerdegen  <michael_heerdegen@web.de>

	Define if-let* and derivatives as aliases for if-let etc

	This commit reverts declaring `if-let' and `when-let' obsolete in
	favor of the new `if-let*' and `when-let*' versions because of the
	compiler warning mess (Bug#30039).  Instead we make foo-let* aliases
	for foo-let.  The old single-tuple variable spec case is still
	supported for backward compatibility.
	* lisp/emacs-lisp/subr-x.el (if-let, when-let): Don't declare
	obsolete.  Tweak edebug specs.
	(and-let): Renamed from `and-let*' for compatibility with the names
	`if-let' and `when-let'.
	(if-let*, when-let*, and-let*): Define as aliases for `if-let',
	`when-let' and `and-let'.
	* test/lisp/emacs-lisp/subr-x-tests.el (if-let-single-tuple-case-test)
	(when-let-single-tuple-case-test): New tests for the single-binding
	tuple case.
	In the whole file, prefer the names without "*".

2018-03-05  Eli Zaretskii  <eliz@gnu.org>

	Minor fix in Emacs manual's Glossary

	* doc/emacs/glossary.texi (Glossary): Fix outdated text about
	primary selection.  Reported by Gijs Hillenius
	<gijs@hillenius.net> in emacs-manual-bugs@gnu.org.

2018-03-03  Juri Linkov  <juri@linkov.net>

	* lisp/progmodes/grep.el (zrgrep):

	Let-bind grep-use-null-filename-separator to nil (bug#30559).

2018-03-03  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits in doc/emacs/text.texi

	* doc/emacs/text.texi (TeX Mode): Use @code for command markup.
	(HTML Mode): Add a note about "C-x C-v" binding in HTML mode.

2018-03-03  Eli Zaretskii  <eliz@gnu.org>

	Remove outdated comment in syntax.el

	* lisp/emacs-lisp/syntax.el (syntax-ppss-toplevel-pos): Remove
	outdated comment.  (Bug#30617)

2018-03-03  Eli Zaretskii  <eliz@gnu.org>

	Prevent Flyspell from changing unrelated words

	* lisp/textmodes/flyspell.el (flyspell-auto-correct-word): Avoid
	using stale cached data from previous invocations of this command.
	(Bug#30462)

2018-03-03  Eli Zaretskii  <eliz@gnu.org>

	Avoid errors in flymake in builds --without-x

	* lisp/progmodes/flymake.el: Require 'mwheel'.  (Bug#28732)

2018-03-03  Eli Zaretskii  <eliz@gnu.org>

	More improvements of the Emacs manual

	* doc/emacs/rmail.texi (Rmail Reply, Rmail Sorting): Improve
	wording.  Suggested by Daniel Chakraborty
	<danielmchakraborty@gmail.com>.

	* doc/emacs/glossary.texi (Glossary): Add cross-references.
	Improve and clarify wording.  Suggested by Gijs Hillenius
	<gijs@hillenius.net> in emacs-manual-bugs@gnu.org.

	* doc/emacs/text.texi (Org Authoring): Add more supported formats
	to the list.
	(TeX Print): Improve wording.  Slightly rearrange stuff.
	(TeX Misc): Mention doctex-mode-hook.
	(Two-Column): Minor rearrangement of text.  Suggested by Michael
	Albinus <michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

	* doc/emacs/misc.texi (Saving Emacs Sessions):
	* doc/emacs/programs.texi (Program Modes): Remove redundant text
	and index entries.

2018-03-03  Dmitry Gutov  <dgutov@yandex.ru>

	Backport: xref--next-error-function: Move xref's window point

	* lisp/progmodes/xref.el (xref--next-error-function): Move
	xref's window point if it's visible.  When we don't do that,
	navigation can start looping after a while.

	(cherry picked from commit 108ce84432d597f92637ea74bd0a094224d157de)

2018-03-02  Glenn Morris  <rgm@gnu.org>

	mwheel minor consistency fix

	* lisp/mwheel.el (mwheel-scroll-left-function)
	(mwheel-scroll-right-function):
	Change from defcustom to defvar, for consistency with pre-existing.

2018-03-02  Eli Zaretskii  <eliz@gnu.org>

	* src/window.c (Frecenter): Improve commentary.

2018-03-02  Eli Zaretskii  <eliz@gnu.org>

	Fix downloading non-text files in EWW

	* lisp/net/eww.el (eww-download-callback): Bind
	coding-system-for-read to 'no-conversion', to avoid any code- or
	EOL-conversions in downloaded files.  (Bug#30664)

2018-03-02  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Rename some mwheel options, for consistency

	* lisp/mwheel.el (mouse-wheel-tilt-scroll)
	(mouse-wheel-flip-direction): Rename from mwheel-tilt-scroll-p,
	mwheel-flip-direction.
	(mwheel-scroll): Update for option renaming.
	* doc/emacs/frames.texi (Mouse Commands):
	Update for option renaming.

2018-03-01  Glenn Morris  <rgm@gnu.org>

	* lisp/vc/add-log.el (add-change-log-entry): Replace obsolete alias.

2018-03-01  Eli Zaretskii  <eliz@gnu.org>

	Improve the Emacs manual

	* doc/emacs/xresources.texi (Table of Resources): Mention that
	some resources are ignored by toolkit builds.
	* doc/emacs/custom.texi (Key Bindings): Improve indexing.
	(Bug#30530)

2018-03-01  Eli Zaretskii  <eliz@gnu.org>

	* lisp/dired-aux.el (dired-do-create-files): Doc fix.  (Bug#30634)

2018-03-01  Michael Albinus  <michael.albinus@gmx.de>

	Further improvements on manuals

	* doc/emacs/xresources.texi:
	* doc/lispref/display.texi:
	* doc/lispref/keymaps.texi:
	* doc/misc/dbus.texi:
	* doc/misc/efaq-w32.texi: Use "GTK+" where applicable.

	* doc/emacs/xresources.texi (Resources): Mention several use
	of "-xrm".
	(Table of Resources) [verticalScrollBars]: Add reference to Scroll Bars.

2018-03-01  Paul Eggert  <eggert@cs.ucla.edu>

	Require a larger stack size for threads on macOS (bug#30364)

	* src/systhread.c (sys_thread_create)
	[THREADS_ENABLED && HAVE_PTHREAD && DARWIN_OS]:
	Require at least 8MB stack size for x64 and 4MB for x86 on macOS.
	Do not merge to master.

2018-02-28  Glenn Morris  <rgm@gnu.org>

	* doc/lispref/streams.texi (Output Variables): Fix previous.

2018-02-28  Michael Albinus  <michael.albinus@gmx.de>

	Use "GTK+" where applicable in the manual

	* doc/emacs/display.texi (Standard Faces, Standard Faces):
	* doc/emacs/emacs.texi (Top):
	* doc/emacs/files.texi (Visiting):
	* doc/emacs/frames.texi (Scroll Bars):
	* doc/emacs/xresources.texi: Use "GTK+" where applicable.

2018-02-28  Paul Eggert  <eggert@cs.ucla.edu>

	Document print-escape-control-characters

	* doc/lispref/streams.texi, etc/NEWS: Add doc.

2018-02-27  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/killing.texi (Rectangles): Don't use @key for characters.

2018-02-27  Glenn Morris  <rgm@gnu.org>

	* lisp/emulation/viper.el: Unbreak it.

	Since 2017-03-19, M-x viper failed with function void cl-member-if.
	Perhaps it isn't used much.

2018-02-27  Eli Zaretskii  <eliz@gnu.org>

	More fixes in the Emacs manual

	* doc/emacs/xresources.texi (Table of Resources, Lucid Resources):
	Sort the resources.
	(Lucid Resources): Add cross-references.
	(GTK Resource Basics): Fix wording.
	(GTK styles): Add empty lines in a @table.  Suggested by Michael
	Albinus <michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

2018-02-27  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts in 'md5'

	* src/fns.c (extract_data_from_object): Don't crash if called with
	an invalid object.  (Bug#30627)

2018-02-26  Michael Albinus  <michael.albinus@gmx.de>

	Mark keys consistently in manuals

	* doc/emacs/killing.texi:
	* doc/lispintro/emacs-lisp-intro.texi:
	* doc/misc/calc.texi:
	* doc/misc/cc-mode.texi:
	* doc/misc/dired-x.texi:
	* doc/misc/ede.texi:
	* doc/misc/edt.texi:
	* doc/misc/efaq.texi:
	* doc/misc/erc.texi:
	* doc/misc/eshell.texi:
	* doc/misc/gnus-faq.texi:
	* doc/misc/gnus-news.texi:
	* doc/misc/idlwave.texi:
	* doc/misc/ido.texi:
	* doc/misc/mairix-el.texi:
	* doc/misc/message.texi:
	* doc/misc/mh-e.texi:
	* doc/misc/newsticker.texi:
	* doc/misc/org.texi:
	* doc/misc/pcl-cvs.texi:
	* doc/misc/ses.texi:
	* doc/misc/sieve.texi:
	* doc/misc/smtpmail.texi:
	* doc/misc/speedbar.texi:
	* doc/misc/srecode.texi:
	* doc/misc/vhdl-mode.texi:
	* doc/misc/vip.texi:
	* doc/misc/viper.texi: Mark keys consistently.

2018-02-26  Michael Albinus  <michael.albinus@gmx.de>

	Remove @key{} markups from @kindex entries in manuals

	* doc/emacs/basic.texi:
	* doc/emacs/buffers.texi:
	* doc/emacs/building.texi:
	* doc/emacs/calendar.texi:
	* doc/emacs/custom.texi:
	* doc/emacs/dired.texi:
	* doc/emacs/display.texi:
	* doc/emacs/files.texi:
	* doc/emacs/frames.texi:
	* doc/emacs/help.texi:
	* doc/emacs/indent.texi:
	* doc/emacs/killing.texi:
	* doc/emacs/kmacro.texi:
	* doc/emacs/mark.texi:
	* doc/emacs/mini.texi:
	* doc/emacs/misc.texi:
	* doc/emacs/modes.texi:
	* doc/emacs/msdos-xtra.texi:
	* doc/emacs/msdos.texi:
	* doc/emacs/mule.texi:
	* doc/emacs/picture-xtra.texi:
	* doc/emacs/programs.texi:
	* doc/emacs/regs.texi:
	* doc/emacs/rmail.texi:
	* doc/emacs/screen.texi:
	* doc/emacs/search.texi:
	* doc/emacs/sending.texi:
	* doc/emacs/text.texi:
	* doc/emacs/trouble.texi:
	* doc/misc/calc.texi:
	* doc/misc/cc-mode.texi:
	* doc/misc/ediff.texi:
	* doc/misc/ert.texi:
	* doc/misc/eww.texi:
	* doc/misc/forms.texi:
	* doc/misc/gnus.texi:
	* doc/misc/idlwave.texi:
	* doc/misc/info.texi:
	* doc/misc/message.texi:
	* doc/misc/mh-e.texi:
	* doc/misc/newsticker.texi:
	* doc/misc/org.texi:
	* doc/misc/pcl-cvs.texi:
	* doc/misc/rcirc.texi:
	* doc/misc/reftex.texi:
	* doc/misc/sc.texi:
	* doc/misc/sieve.texi:
	* doc/misc/vhdl-mode.texi:
	* doc/misc/vip.texi:
	* doc/misc/viper.texi:
	* doc/misc/woman.texi: Remove @key{} markups from @kindex entries.

2018-02-25  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/display.texi (Standard Faces): Fix markup of index entry.

2018-02-25  Michael Albinus  <michael.albinus@gmx.de>

	Fix @kindex entries in manuals

	* doc/emacs/basic.texi:
	* doc/emacs/buffers.texi:
	* doc/emacs/building.texi:
	* doc/emacs/calendar.texi:
	* doc/emacs/custom.texi:
	* doc/emacs/dired.texi:
	* doc/emacs/display.texi:
	* doc/emacs/files.texi:
	* doc/emacs/frames.texi:
	* doc/emacs/help.texi:
	* doc/emacs/indent.texi:
	* doc/emacs/killing.texi:
	* doc/emacs/kmacro.texi:
	* doc/emacs/mark.texi:
	* doc/emacs/mini.texi:
	* doc/emacs/misc.texi:
	* doc/emacs/modes.texi:
	* doc/emacs/msdos-xtra.texi:
	* doc/emacs/msdos.texi:
	* doc/emacs/mule.texi:
	* doc/emacs/picture-xtra.texi:
	* doc/emacs/programs.texi:
	* doc/emacs/regs.texi:
	* doc/emacs/rmail.texi:
	* doc/emacs/screen.texi:
	* doc/emacs/search.texi:
	* doc/emacs/sending.texi:
	* doc/emacs/text.texi:
	* doc/emacs/trouble.texi:
	* doc/lispref/files.texi:
	* doc/misc/calc.texi:
	* doc/misc/cc-mode.texi:
	* doc/misc/ediff.texi:
	* doc/misc/epa.texi:
	* doc/misc/ert.texi:
	* doc/misc/eww.texi:
	* doc/misc/forms.texi:
	* doc/misc/gnus.texi:
	* doc/misc/info.texi:
	* doc/misc/mairix-el.texi:
	* doc/misc/message.texi:
	* doc/misc/mh-e.texi:
	* doc/misc/newsticker.texi:
	* doc/misc/org.texi:
	* doc/misc/pcl-cvs.texi:
	* doc/misc/rcirc.texi:
	* doc/misc/sc.texi:
	* doc/misc/sieve.texi:
	* doc/misc/vhdl-mode.texi:
	* doc/misc/vip.texi:
	* doc/misc/viper.texi:
	* doc/misc/woman.texi: Fix @kindex entries.  Mark keys consistently.

2018-02-24  Michael Albinus  <michael.albinus@gmx.de>

	Fix @cindex entries in manuals

	* doc/emacs/custom.texi:
	* doc/emacs/dired.texi:
	* doc/emacs/display.texi:
	* doc/emacs/files.texi:
	* doc/emacs/frames.texi:
	* doc/emacs/killing.texi:
	* doc/emacs/maintaining.texi:
	* doc/emacs/misc.texi:
	* doc/emacs/msdos-xtra.texi:
	* doc/emacs/msdos.texi:
	* doc/emacs/search.texi:
	* doc/emacs/text.texi:
	* doc/emacs/trouble.texi:
	* doc/lispintro/emacs-lisp-intro.texi:
	* doc/lispref/strings.texi:
	* doc/lispref/text.texi:
	* doc/misc/cc-mode.texi:
	* doc/misc/efaq.texi:
	* doc/misc/eieio.texi:
	* doc/misc/emacs-mime.texi:
	* doc/misc/gnus.texi:
	* doc/misc/htmlfontify.texi:
	* doc/misc/idlwave.texi:
	* doc/misc/message.texi:
	* doc/misc/mh-e.texi:
	* doc/misc/sem-user.texi:
	* doc/misc/ses.texi:
	* doc/misc/tramp.texi:
	* doc/misc/vhdl-mode.texi: Fix @cindex entries.

2018-02-24  Michael Albinus  <michael.albinus@gmx.de>

	Fix @cindex entries in org.texi

	* doc/misc/org.texi: Fix @cindex entries.  Use consistently
	@code{} for keywords.

2018-02-24  Eli Zaretskii  <eliz@gnu.org>

	Document reserved keys

	* doc/emacs/custom.texi (Key Bindings): Mention keys reserved for
	users.  (Bug#30530)

2018-02-24  Michael Albinus  <michael.albinus@gmx.de>

	* doc/misc/ebrowse.texi: Use @key{} for keys.

2018-02-24  Eli Zaretskii  <eliz@gnu.org>

	* src/keyboard.c (syms_of_keyboard): Doc fix.  (Bug#30588)

2018-02-24  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of X resources

	* doc/emacs/xresources.texi (Table of Resources): Add menu-related
	resources.  Add cross-references to "GTK Resources".

2018-02-23  Glenn Morris  <rgm@gnu.org>

	* lisp/international/mule.el (keyboard-coding-system): Doc fix.

	Since multi-tty, this is always set.

2018-02-23  Paul Eggert  <eggert@cs.ucla.edu>

	Minor doc fixes, mostly for timestamp issues

2018-02-23  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/mini.texi (Completion Styles): Improve indexing.

2018-02-23  Michael Albinus  <michael.albinus@gmx.de>

	Fix @findex and @vindex entries in manuals

	* doc/emacs/building.texi:
	* doc/emacs/calendar.texi:
	* doc/emacs/cmdargs.texi:
	* doc/emacs/mini.texi:
	* doc/emacs/misc.texi:
	* doc/emacs/trouble.texi:
	* doc/emacs/windows.texi:
	* doc/lispintro/emacs-lisp-intro.texi:
	* doc/lispref/edebug.texi:
	* doc/lispref/frames.texi:
	* doc/lispref/os.texi:
	* doc/lispref/windows.texi:
	* doc/misc/cc-mode.texi:
	* doc/misc/dired-x.texi:
	* doc/misc/ediff.texi:
	* doc/misc/mh-e.texi:
	* doc/misc/pcl-cvs.texi:
	* doc/misc/reftex.texi:
	* doc/misc/sc.texi:
	* doc/misc/vhdl-mode.texi:
	* doc/misc/viper.texi: Fix @findex and @vindex entries.

2018-02-22  Alan Mackenzie  <acm@muc.de>

	Document, in the Elisp manual, how to get a character's raw syntax descriptor

	* doc/lispref/syntax.texi (Syntax Table internals): mention the use of `aref'
	to get a character's raw syntax descriptor.

2018-02-22  Eli Zaretskii  <eliz@gnu.org>

	Improvements in the Emacs manual

	* doc/emacs/custom.texi (Customization Groups)
	(Changing a Variable, Browsing Custom, Customizing Faces): Fix
	markup of keys.
	(Changing a Variable, Saving Customizations): Update the
	description of buttons in the Custom buffer.
	(Face Customization): More accurate description.
	(Specific Customization, Examining, Locals): Add blank lines in
	the @table.  Reported by Michael Albinus <michael.albinus@gmx.de>
	in emacs-manual-bugs@gnu.org.

2018-02-22  Glenn Morris  <rgm@gnu.org>

	Tiny doc/misc markup fixes

	* doc/misc/ediff.texi (Patch and Diff Programs):
	* doc/misc/viper.texi (File and Buffer Handling): Fix markup typos.

2018-02-22  Martin Rudalics  <rudalics@gmx.at>

	Skip mouse-face overlap check when mouse-face is hidden (Bug#30519)

	* src/xdisp.c (note_mouse_highlight): Skip check whether
	mouse-face highlighting overlay overlaps other mouse-face
	overlays when mouse-face highlighting is hidden (Bug#30519).

2018-02-22  Eli Zaretskii  <eliz@gnu.org>

	Fix capitalization of "Mail-Followup-To"

	* doc/emacs/sending.texi (Header Editing, Mail Headers):
	Standardize on "Mail-Followup-To" as the capitalization.

2018-02-21  Juri Linkov  <juri@linkov.net>

	* lisp/progmodes/grep.el (grep-compute-defaults):

	Add grep-use-null-filename-separator to grep-host-defaults-alist.
	(Bug#30559)

2018-02-21  Charles A. Roelli  <charles@aurox.ch>

	Semantic manual fixes

	* doc/misc/semantic.texi (Tools): Fix wording and grammar, and
	remove a reference to "document-vars.el" which, in the Emacs
	repository, is part of lisp/cedet/srecode/document.el.

2018-02-21  Eli Zaretskii  <eliz@gnu.org>

	More improvements in the Emacs manual

	* doc/emacs/help.texi (Misc Help):
	* doc/emacs/m-x.texi (M-x):
	* doc/emacs/mini.texi (Minibuffer File, Repetition): Prevent
	breaking of command sequences between lines.  Reported by Wojciech
	Politarczyk <w.politarczyk@gmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/sending.texi (Header Editing): Fix capitalization.

2018-02-21  tino calancha  <tino.calancha@gmail.com>

	* doc/misc/viper.texi (File and Buffer Handling): Add missing '@'

2018-02-21  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation of 'x-underline-at-descent-line'

	* doc/emacs/display.texi (Display Custom):
	* src/nsterm.m (syms_of_nsterm):
	* src/xterm.c (syms_of_xterm):
	* src/w32term.c (syms_of_w32term): Mention the effect of
	'line-spacing' on the underline position.  (Bug#30553)

2018-02-21  Glenn Morris  <rgm@gnu.org>

	* lisp/textmodes/flyspell.el (flyspell-get-word): Doc fix.

2018-02-20  Robert Pluim  <rpluim@gmail.com>

	Correct variable markup in manuals

	* doc/lispref/minibuf.texi (Completion in Buffers): Fix markup.
	* doc/lispref/text.texi (Filling): Likewise.
	* doc/misc/dired-x.texi (Advanced Mark Commands): Likewise.
	* doc/misc/epa.texi (Encrypting/decrypting gpg files): Likewise.
	(Encrypting/decrypting gpg files): Likewise.
	* doc/misc/tramp.texi (External methods): Likewise.
	(Default Method): Likewise.
	* doc/misc/viper.texi (Editing in Insert State): Likewise.
	(File and Buffer Handling): Likewise.
	* doc/misc/gnus.texi (Mail Source Customization): Likewise.
	* doc/misc/url.texi (Customization): Likewise.  Note obsolete
	status of url-temporary-directory.

2018-02-20  Eli Zaretskii  <eliz@gnu.org>

	Improve the "Sending Mail" chapter of Emacs manual

	* doc/emacs/sending.texi (Mail Format, Header Editing)
	(Mail Aliases): Fix capitalization of mail headers.
	(Mail Aliases): Use ~/.mailrc consistently.
	(Mail Misc): More accurate description of disposition.  Suggested
	by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-02-20  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation of 'flyspell-auto-correct-word'

	* lisp/textmodes/flyspell.el (flyspell-get-word): Elaborate in the
	doc string on how the function looks for the word to spell-check.
	(flyspell-word, flyspell-auto-correct-word): Refer to
	'flyspell-get-word' for details about finding the word.
	(Bug#30462)

2018-02-19  Robert Pluim  <rpluim@gmail.com>

	* doc/emacs/misc.texi (Saving Emacs Sessions): Fix markup.

2018-02-19  Eli Zaretskii  <eliz@gnu.org>

	More changes in the Emacs manuals

	* doc/emacs/custom.texi (Customization Groups, Browsing Custom)
	(Custom Themes, Keymaps, Prefix Keymaps, Modifier Keys)
	(Function Keys, Named ASCII Chars, Mouse Buttons, Init Examples):
	Fix punctuation.  Suggested by Stefan Kamphausen
	<stefan.kamphausen@acrolinx.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/basic.texi (Arguments, Repeating): Avoid breaking
	commands between lines.  Reported by Wojciech Politarczyk
	<w.politarczyk@gmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/custom.texi (Init Rebinding): Move index entries about
	rebinding keys from "Init File".  (Bug#30528)

2018-02-18  Eli Zaretskii  <eliz@gnu.org>

	More fixes in the Emacs manual

	* doc/emacs/abbrevs.texi (Defining Abbrevs, Expanding Abbrevs)
	(Editing Abbrevs, Saving Abbrevs): Insert blank lines between
	@item's.
	(Expanding Abbrevs): Add 'unexpand-abbrev' to the list of
	commands.  Suggested by Michael Albinus <michael.albinus@gmx.de>
	in emacs-manual-bugs@gnu.org.

2018-02-18  Eli Zaretskii  <eliz@gnu.org>

	* src/data.c (Faref): Fix a typo in the doc string.  (Bug#30510)

2018-02-18  Michael Albinus  <michael.albinus@gmx.de>

	Minor edit in tramp.texi

	* doc/misc/tramp.texi (Remote shell setup, Windows setup hints):
	Improve @cindex entries.

2018-02-17  Eli Zaretskii  <eliz@gnu.org>

	More improvements in the Emacs manual

	* doc/emacs/maintaining.texi (Xref Commands, Identifier Search)
	(List Identifiers): Insert blank lines between @item's in a
	@table.
	(Etags Regexps): More accurate description of escape sequences.
	(Select Tags Table): Prefer "~/emacs.d/init.el" to "~/.emacs".
	Suggested by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-02-17  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'electric-pair-mode'

	* lisp/elec-pair.el (electric-pair-mode):
	* doc/emacs/programs.texi (Matching): Document the operation of
	electric-pair-mode when there's an active region.  (Bug#30502)

2018-02-17  Charles A. Roelli  <charles@aurox.ch>

	lisp/vc/: documentation fixes

	* lisp/vc/vc.el (vc-region-history): Clarify documentation.
	* lisp/vc/add-log.el (change-log-get-method-definition):
	Indent documentation.

2018-02-17  Robert Pluim  <rpluim@gmail.com>

	Document 'desktop-files-not-to-save'

	* doc/emacs/misc.texi (Saving Emacs Sessions): Add description
	of 'desktop-files-not-to-save'.

	* lisp/desktop.el (desktop-files-not-to-save): Explain that
	the default value excludes buffers visiting remote files.

2018-02-17  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of Profiling features

	* doc/lispref/debugging.texi (Profiling): Improve the description
	of elp.el.  Improve wording of the rest of the section.  (Bug#30491)

	* lisp/emacs-lisp/elp.el (elp-instrument-list): Make the
	interactive invocation work.  Doc fix.

2018-02-17  Eli Zaretskii  <eliz@gnu.org>

	Improve indexing of "performance" in ELisp manual

	* doc/lispref/debugging.texi (Profiling):
	* doc/lispref/edebug.texi (Coverage Testing): Improve indexing of
	features useful for performance analysis.  (Bug#30490)

2018-02-17  Eli Zaretskii  <eliz@gnu.org>

	Minor change in Emacs manual's VC chapter

	* doc/emacs/maintaining.texi (Log Buffer): Mention the "Summary"
	header.  Suggested by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-02-17  Noam Postavsky  <npostavs@gmail.com>

	Avoid memory corruption with specpdl overflow + edebug (Bug#30481)

	If grow_specpdl fails due to outgrowing max_specpdl_size, it will
	signal an error *before* growing the specpdl array.  Therefore, when
	handling the signal, specpdl_ptr points past the end of the specpdl
	array and any further use of of specpdl before unwinding (e.g., if
	edebug binds signal-hook-function) will cause memory corruption.
	* src/eval.c (signal_or_quit): Don't call `signal-hook-function' if
	the specpdl_ptr is already past the end of the specpdl array.
	* test/src/eval-tests.el (eval-tests--exceed-specbind-limit)
	(eval-exceed-specbind-with-signal-hook): New test & helper function.

2018-02-17  Noam Postavsky  <npostavs@gmail.com>

	Document comment-fill-column in the manual (Bug#11636)

	* doc/emacs/programs.texi (Comment Commands)
	(Options for Comments): Mention comment-fill-column.

2018-02-17  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/dired.texi (Marks vs Flags): Copyedits.

2018-02-16  Eli Zaretskii  <eliz@gnu.org>

	More fixes for the Emacs manual

	* doc/emacs/vc1-xtra.texi (Customizing VC): Update the list of
	backends.
	* doc/emacs/maintaining.texi (Version Control): Add SRC to the
	list of VCS.  Remove the description of vc-state-refresh.
	(Version Control Systems): Update the description of CVS.
	(VC Change Log): Amend the list of VCS that don't support
	vc0print-root-log.
	(VCS Changesets, VCS Repositories, Advanced C-x v v)
	(VC Change Log): Mention SRC with RCS where appropriate.
	(VC Directory Commands): More accurate description of
	vc-dir-hide-up-to-date.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

2018-02-16  Robert Cochran  <robert@cochranmail.com>

	Make 'byte-compile-error-on-warn' a safe file variable

	* lisp/emacs-lisp/bytecomp.el (byte-compile-error-on-warn): Mark
	as a safe local variable for boolean values.

2018-02-16  Eli Zaretskii  <eliz@gnu.org>

	Fix the doc string of flyspell-auto-correct-word

	* lisp/textmodes/flyspell.el (flyspell-auto-correct-word): Doc
	fix.  (Bug#30462)

2018-02-16  Eli Zaretskii  <eliz@gnu.org>

	Improve the MS-Windows appendix of the Emacs manual

	* doc/emacs/msdos.texi (Windows Startup): Describe the pinned
	shortcuts for starting Emacs.
	(Text and Binary): Minor wording changes.
	(Windows Files): Mention 'read-file-name-completion-ignore-case'.
	(ls in Lisp): Update the list of supported 'ls' switches.
	Document 'ls-lisp-use-string-collate' and
	'ls-lisp-UCA-like-collation'.
	(Windows HOME): Mention warnings displayed at startup when
	deprecated locations of HOME and/or deprecated names for init
	files are used.
	(Windows Keyboard): Mention delete-selection-mode.

2018-02-16  Eli Zaretskii  <eliz@gnu.org>

	Fix 'vc-git--program-version'

	* lisp/vc/vc-git.el (vc-git--program-version): Fix the function to
	work with Git for Windows.

2018-02-16  Eli Zaretskii  <eliz@gnu.org>

	Fix typos and wording in the Emacs manual

	* doc/emacs/dired.texi (Marks vs Flags, Hiding Subdirectories):
	* doc/emacs/maintaining.texi (Tag Syntax):
	* doc/emacs/building.texi (Commands of GUD, Threads Buffer)
	(Lisp Libraries):
	* doc/emacs/windows.texi (Temporary Displays): Fix typos.
	* doc/emacs/files.texi (Backup Copying): Fix wording.  Reported by
	Stefan Kamphausen <stefan.kamphausen@acrolinx.com> in
	emacs-manual-bugs@gnu.org.

2018-02-16  Michael Albinus  <michael.albinus@gmx.de>

	* doc/emacs/programs.texi (Semantic): Order programming languages.

2018-02-15  Eli Zaretskii  <eliz@gnu.org>

	More improvements for the Emacs manual

	* doc/emacs/programs.texi (Basic Indent, Comment Commands): Fix
	typos.
	* doc/emacs/text.texi (TeX Print, HTML Mode, Enriched Faces): Fix
	typos.
	* doc/emacs/help.texi (Help Files): Improve @uref usage.  Reported
	by Stefan Kamphausen <stefan.kamphausen@acrolinx.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/fortran-xtra.texi (ForIndent Commands): Fix a typo.
	(ForIndent Commands, Fortran Columns): Add empty lines between
	@items in a @table.
	(ForIndent Cont, ForIndent Num, Fortran Columns): Mention
	'column-number-indicator-zero-based'.
	(ForIndent Vars): Fix a typo.
	(Fortran Comments): Fix punctuation.
	(ForIndent Cont, Fortran Autofill): Fix markup of keyboard input.
	* doc/emacs/programs.texi (Comments): Fix a typo.
	(Comment Commands): More accurate description of the commands.
	(Options for Comments): Don't mention "hook".
	(Man Page): Prefer "M-x man" if available.
	(Hideshow): Fix the command key sequence.
	(Semantic): Update supported languages.
	(Semantic, Hungry Delete, Other C Commands): Fix markup of
	commands.
	(Misc for Programs): Fix a typo.
	(Electric C, Hungry Delete): More accurate description of
	mode-line lighters of CC submodes.
	(Asm Mode): Add empty lines between @items in a @table.
	* doc/emacs/programs.texi (Program Modes): Add a few more modes.
	Reported by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/msdos.texi (Windows Misc): A minor rewording.
	Suggested by Isaac Carter <icarter1391@gmail.com> in
	emacs-manual-bugs@gnu.org.

2018-02-14  Eli Zaretskii  <eliz@gnu.org>

	Minor wording change in Emacs manual

	* doc/emacs/killing.texi (Accumulating Text): Fix spelling.
	Reported by lyr3 <lyr3@protonmail.com> in
	emacs-manual-bugs@gnu.org.

2018-02-14  Eli Zaretskii  <eliz@gnu.org>

	Another set of changes for the manual

	* doc/emacs/programs.texi (Program Indent): Add a cross-reference
	to elisp's description of 'pp'.
	(Program Modes): Add a few more programming modes.  Add index
	entries.
	(Basic Indent, Multi-line Indent, C Indent, Comment Commands)
	(Manipulating Comments): Fix markup of keyboard commands.
	* doc/emacs/search.texi (Regexps): Add an example with non-ASCII
	characters.  Suggested by Michael Albinus <michael.albinus@gmx.de>
	in emacs-manual-bugs@gnu.org.

	* doc/lispref/display.texi (Display Tables): Fix the description
	of the 5th extra slot of the display table.  (Bug#13473)

	* doc/emacs/regs.texi (Registers): Simplify wording.

	* doc/emacs/custom.texi (Init Non-ASCII): Remove outdated text
	about perils of encoded keyboard input.

2018-02-14  Michael Albinus  <michael.albinus@gmx.de>

	Improvements on tramp.texi

	* doc/misc/tramp.texi: Use Tramp version in title.  Further
	improvements on user option indexing.  Finish command examples
	with @key{RET} where appropriate.
	(Remote processes): Use 'M-&' for invocation of async shell.
	(Frequently Asked Questions): Add example with simplified syntax.

2018-02-13  Paul Eggert  <eggert@cs.ucla.edu>

	Tramp minor doc fixes

	* doc/misc/tramp.texi (Remote processes): Spelling fix and minor
	wording improvement.

2018-02-13  Eli Zaretskii  <eliz@gnu.org>

	More changes in the Emacs manual

	* doc/emacs/search.texi (Regexp Backslash): Say that
	symbol-constituent characters are determined by the syntax table.
	(Lax Search): Fix example of case-insensitive search.  Fix a
	typo.
	(Unconditional Replace): Improve wording.
	(Regexp Replace): More consistent wording.  Reported by Michael
	Albinus <michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

	* doc/emacs/msdos.texi (Windows HOME): Avoid enumerating all the
	Windows versions.  Reported by Isaac Carter
	<icarter1391@gmail.com> in emacs-manual-bugs@gnu.org.

2018-02-13  Andreas Schwab  <schwab@suse.de>

	* lisp/vc/vc.el (vc-deduce-backend): Use ignore-errors.

2018-02-13  Andreas Schwab  <schwab@suse.de>

	Don't signal error in vc-deduce-backend

	* lisp/vc/vc.el (vc-deduce-backend): Return nil if
	vc-responsible-backend signals an error.

2018-02-13  Michael Albinus  <michael.albinus@gmx.de>

	* doc/misc/tramp.texi: Index more user options.

2018-02-13  Eli Zaretskii  <eliz@gnu.org>

	Minor change in the Emacs manual

	* doc/emacs/building.texi (Lisp Libraries): Explain why nil in
	load-path is not a good idea.  Suggested by James Yoo
	<james.yoo@gmail.com> in emacs-manual-bugs@gnu.org.

2018-02-13  Eli Zaretskii  <eliz@gnu.org>

	NEWS update about 'string-trim'

	* etc/NEWS: Mention changes in string-trim family of functions.
	(Bug#30442)

2018-02-13  Noam Postavsky  <npostavs@gmail.com>

	Clarify TRAMP process-environment interaction (Bug#30419)

	* doc/misc/tramp.texi (Remote processes): Index the
	tramp-remote-process-environment description.  Clarify the effects of
	let-binding process-environment and the motivation for that behavior.

2018-02-12  Juri Linkov  <juri@linkov.net>

	* lisp/progmodes/grep.el (grep-num-matches-found): New variable.

	(grep-mode-line-matches): New defconst.
	(grep-mode-font-lock-keywords): Update the regexp for “Grep finished”
	to include the number of matches found.
	(grep-process-setup): Set grep-num-matches-found to 0.
	(grep-exit-message): New function with body moved from lambda
	in grep-process-setup.  Use grep-num-matches-found to return
	the number of matches found.
	(grep-filter): Increment grep-num-matches-found.
	(grep-mode): Set compilation-mode-line-errors to grep-mode-line-matches.
	(Bug#30397, bug#14017)

2018-02-12  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts in cm.c due to too small TTY frame

	* src/frame.c (frame_windows_min_size): Limit TTY frames to a
	minimum height large enough to allow for a menu bar, the mode
	line, one text line and one echo-area line.  This avoids aborts in
	cm.c:cmcheckmagic.  (Bug#30320)

2018-02-12  Eli Zaretskii  <eliz@gnu.org>

	Another set of improvements in the Emacs manual

	* doc/emacs/msdos-xtra.texi (MS-DOS Keyboard):
	* doc/emacs/msdos.texi (Windows Keyboard):
	* doc/emacs/mark.texi (Using Region):
	* doc/emacs/frames.texi (Menu Mouse Clicks):
	* doc/emacs/macos.texi (Mac / GNUstep Basics): Fix spelling of
	keys.  Reported by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/glossary.texi (Glossary): Document that "c.f." is a
	misspelling.  Reported by Robert Pluim <rpluim@gmail.com>.
	Various minor wording improvements.  Suggested by Toon Claes
	<toon@iotcl.com> in emacs-manual-bugs@gnu.org.
	More minor changes.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

	* doc/emacs/cmdargs.texi (Title X): Improve wording.

	* doc/emacs/building.texi (Grep Searching, Compilation): Avoid
	passive tense.

	* doc/emacs/basic.texi (Moving Point): Move the description of the
	bidi-related effects of the arrow keys from here ...
	* doc/emacs/mule.texi (Bidirectional Editing): ... to here.
	Explain the behavior of arrow keys between paragraphs.

2018-02-12  Michael Albinus  <michael.albinus@gmx.de>

	Fix help in mode-line-mode-menu

	* lisp/bindings.el (mode-line-mode-menu) [auto-revert-tail-mode]:
	Fix help string.

2018-02-11  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of desktop restoring

	* doc/emacs/misc.texi (Saving Emacs Sessions): Document
	'desktop-auto-save-timeout', 'desktop-load-locked-desktop', and
	how to restore desktop in daemon mode.  (Bug#30421)

2018-02-11  Eli Zaretskii  <eliz@gnu.org>

	Improve the Emacs manual's chapter "Frames"

	* doc/emacs/frames.texi (Creating Frames): Add a cross-reference
	to where frame visibility is described.
	(Word and Line Mouse): Clarify wording.
	(Scroll Bars): Qualify scroll-bar behavior.  Reported by Dmitry
	Gutov <dgutov@yandex.ru> in emacs-manual-bugs@gnu.org.

2018-02-10  Andreas Schwab  <schwab@linux-m68k.org>

	Fix unbound mm-uu-entry in mm-uu

	* lisp/gnus/mm-uu.el (mm-uu-dissect): Rename entry to mm-uu-entry.

2018-02-10  Eli Zaretskii  <eliz@gnu.org>

	Improve Emacs user manual in fixit.texi

	* doc/emacs/fixit.texi (Undo): Clarify inaccurate description of
	repeated undo.
	(Transpose): Describe explicitly what happens at EOL.
	(Spelling): Use "spell-checking" consistently.  Clarify wording.
	Suggested by Toon Claes <toon@iotcl.com> in
	emacs-manual-bugs@gnu.org.

2018-02-10  Eli Zaretskii  <eliz@gnu.org>

	Another minor change in the manual

	* doc/emacs/glossary.texi (Glossary): Add popular Latin
	abbreviations, such as "e.g.".

2018-02-10  Eli Zaretskii  <eliz@gnu.org>

	More minor changes in the Emacs manual

	* doc/emacs/xresources.texi (GTK resources):
	* doc/emacs/trouble.texi (Contributing):
	* doc/emacs/frames.texi (Fonts): Use HTTPS URLs instead of HTTP.

	* doc/emacs/docstyle.texi: Add a few @hyphenation directives,
	based on reports in emacs-manual-bugs@gnu.org about incorrect
	hyphenation.

2018-02-10  Eli Zaretskii  <eliz@gnu.org>

	Avoid printing garbled error message from image.el

	* lisp/image.el (image--get-imagemagick-and-warn): Don't use
	apostrophe in the error message, as that message is shown from a
	unibyte buffer, and will run afoul of the default style of showing
	quote characters.  (Bug#30405)

2018-02-09  Eli Zaretskii  <eliz@gnu.org>

	Doc string fix in latin-alt.el

	* lisp/leim/quail/latin-alt.el ("dutch"): Doc fix.  Reported by
	Robert Pluim <rpluim@gmail.com>.

2018-02-09  Eli Zaretskii  <eliz@gnu.org>

	Minor improvements in package.texi

	* doc/emacs/package.texi (Package Menu): Minor wording change.
	(Package Installation): Use HTTPS.  A better @xref to GnuPG
	manual.  Suggested by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-02-09  Eli Zaretskii  <eliz@gnu.org>

	Minor improvement in Emacs user manual

	* doc/emacs/files.texi (Directories): Document that
	'directory-free-space-program' and 'directory-free-space-args' are
	only for local filesystems.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

2018-02-09  Michael Albinus  <michael.albinus@gmx.de>

	* doc/lispref/anti.texi (Antinews): Replace 25.2 with 25.3.

2018-02-09  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of mini-window resizing

	* doc/lispref/minibuf.texi (Minibuffer Windows): Mention
	'message-truncate-lines' for preventing resizing of minibuffer
	windows.  (Bug#19045)
	(Minibuffer Misc): Remove redundant description of
	'max-mini-window-height'.
	* doc/lispref/display.texi (Echo Area Customization): Adjust
	cross-reference.

2018-02-09  Eli Zaretskii  <eliz@gnu.org>

	More changes in the Emacs manual

	* doc/emacs/fixit.texi (Undo): Mention 'revert-buffer'.
	(Fixing Case): Fix punctuation.
	(Spelling): Fix a typo.  Suggested by Toon Claes <toon@iotcl.com>
	in emacs-manual-bugs@gnu.org.

	* doc/emacs/modes.texi (Major Modes): Break a long sentence into
	2.  Reported by Stefan Kamphausen <stefan.kamphausen@acrolinx.com>
	in emacs-manual-bugs@gnu.org.

	* doc/emacs/indent.texi (Just Spaces): Yet another minor
	rewording.

	* doc/emacs/building.texi (Watch Expressions): Improve wording.
	(Multithreaded Debugging): Spell "tool bar" as 2 words.  Reported
	by Alberto Sartori <alberto.sartori@sissa.it> in
	emacs-manual-bugs@gnu.org.
	(Grep Searching): Mention the effect of
	'compilation-mode-line-errors'.  (Bug#30397)

	* doc/emacs/basic.texi (Moving Point): Minor reformatting and
	rewording of what <LEFT> and <RIGHT> do.

2018-02-09  Noam Postavsky  <npostavs@gmail.com>

	Clarify that text-quoting-style doesn't affect *Info* (Bug#24519)

	* src/doc.c (syms_of_doc) <text-quoting-style>: Clarify that info
	manual display is unaffected.

2018-02-09  Noam Postavsky  <npostavs@gmail.com>

	Mention that shell quoting of % on w32 may fail (Bug#19350)

	* doc/lispref/os.texi (Security Considerations): Mention that quoting
	of '%' assumes no '^' in variable names.
	* test/lisp/subr-tests.el (shell-quote-argument-%-on-w32): New test,
	demonstrating what doesn't work.

2018-02-09  Noam Postavsky  <npostavs@gmail.com>

	Fix --no-build-details for w32 and macOS

	* src/w32term.c (w32_initialize_display_info): Handle nil system-name.
	* lisp/term/ns-win.el (window-system-initialization): Don't pass nil
	to `x-open-connection'.

2018-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	* doc/lispref/anti.texi (Antinews): Add some more antinews.

2018-02-08  Paul Eggert  <eggert@cs.ucla.edu>

	Fix crashes when run with --no-build-details

	* src/xrdb.c (get_environ_db):
	* src/xterm.c (same_x_server, x_term_init):
	Don’t assume Fsystem_name returns a string.

2018-02-08  Eli Zaretskii  <eliz@gnu.org>

	More changes for the manual

	* doc/emacs/anti.texi (Antinews): Replace 25.2 with 25.3.
	Reported by Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/custom.texi (Function Keys): Improve wording.
	Suggested by clemens.radermacher@posteo.de in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/misc.texi (History References): Improve punctuation.
	(Terminal emulator): Fix a typo.
	(Term Mode): Remove redundant repeated text.
	(Invoking emacsclient): Improve wording.  Suggested by Alberto
	Sartori <alberto.sartori@sissa.it> in emacs-manual-bugs@gnu.org.

	* doc/emacs/files.texi (Visiting): Fix last change.

2018-02-08  Noam Postavsky  <npostavs@gmail.com>

	Doc fixes for process functions (Bug#30349)

	* doc/lispref/processes.texi (Asynchronous Processes): Explain what
	the 'stopped' state means for a pipe process.
	* src/process.c (Fmake_process, Fmake_pipe_process)
	(Fmake_serial_process, Fmake_network_process):
	* lisp/subr.el (start-process):
	* lisp/net/tls.el (open-tls-stream):
	* lisp/net/starttls.el (starttls-open-stream):
	* lisp/net/gnutls.el (open-gnutls-stream): Remove meaningless phrase
	"specify an output stream" phrase from docstring.

2018-02-07  Basil L. Contovounesios  <contovob@tcd.ie>

	Fix shr and CSS 4 color maps

	* lisp/net/shr-color.el (shr-color-html-colors-alist): Fix typos.
	Add RebeccaPurple.
	* lisp/textmodes/css-mode.el (css--color-map): Add fuchsia-magenta
	and aqua-cyan aliases.
	* test/lisp/textmodes/css-mode-tests.el (css-test-property-values):
	Bump color count.

2018-02-07  Eli Zaretskii  <eliz@gnu.org>

	Yet another round of improvements in the manual

	* doc/emacs/misc.texi (Document View): Improve wording.  Reported
	by lyr3 <lyr3@protonmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/files.texi (Recover): Fix a typo.  Reported by Jorge
	<jorge+list@disroot.org> in emacs-manual-bugs@gnu.org.

	* doc/emacs/anti.texi (Antinews): Fix typos.  Reported by Justin
	Heyes-Jones <justinhj@gmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/mini.texi (Basic Minibuffer): Clarify wording.
	Reported by Vivishek Sudhir <vivishek.sudhir@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/cmdargs.texi (MS-Windows Registry): Improve wording
	regarding registry keys.

	* doc/emacs/macos.texi (Mac OS / GNUstep): Sayu "NeXT Inc."
	Reported by Cena Mayo <cenazoic@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/screen.texi (Screen): More accurate wording.
	Suggested by Miloš Polakovič <milos@alphamail.org> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/indent.texi (Just Spaces): Minor wording change.
	Suggested by David Bonnafous <dbonnafo@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/text.texi (TeX Mode, TeX Editing): Improve and
	simplify wording.  Suggested by root@vxid.pw <root@vxid.pw> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/cmdargs.texi (Window Size X): Minor wording change.

	* doc/emacs/display.texi (Highlight Interactively): Fill text.
	(Optional Mode Line): Fix typos.  Suggested by Alberto Sartori
	<alberto.sartori@sissa.it> in emacs-manual-bugs@gnu.org.

	* doc/emacs/building.texi (Debugger Operation): Clarify wording.

	* doc/emacs/files.texi (Directories, Comparing Files, Diff Mode)
	(Remote Files, File Names, Visiting, Backup Deletion)
	(Customize Save, Interlocking): Improve wording and accuracy of
	the text.
	* doc/emacs/maintaining.texi (VC With A Merging VCS): Don't say
	"his".
	* doc/emacs/arevert-xtra.texi (Auto Reverting Dired): Minor
	wording changes.
	(Supporting additional buffers): Moved to ...
	* doc/lispref/backups.texi (Reverting): ... here.
	* doc/emacs/emacs.texi (Top): Remove "Supporting additional
	buffers" from master menu.
	* doc/emacs/files.texi (Reverting): Mention use of file
	notifications.  Suggested by Michael Albinus
	<michael.albinus@gmx.de> in emacs-manual-bugs@gnu.org.

	* doc/emacs/rmail.texi (Rmail Motion): Clarify what '-' does to
	'M-s'.  Suggested by Arthur Milchior <arthur@milchior.fr> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/cmdargs.texi (Initial Options): Capitalize "Emacs".
	(Action Arguments): Fix a typo.
	(Emacs Invocation): Replace em-dash with a comma.  Suggested by
	Justin Heyes-Jones <justinhj@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/m-x.texi (M-x): Add an example.  Suggested by Alberto
	Sartori <alberto.sartori@sissa.it> in emacs-manual-bugs@gnu.org.

	* doc/emacs/calendar.texi (Calendar/Diary, Calendar Unit Motion):
	Minor wording changes.

2018-02-04  Juri Linkov  <juri@linkov.net>

	* lisp/vc/vc-git.el (vc-git-print-log): Restrict file scope to a single file

	when vc-git-print-log-follow is non-nil (bug#19045).
	(vc-git-print-log-follow): Doc fix.

	* etc/NEWS: Mention 'vc-git-print-log-follow'.

2018-02-04  Michael Albinus  <michael.albinus@gmx.de>

	* doc/emacs/misc.texi (Interactive Shell): Refer to node "Minibuffer File"

	for hints how to type remote file names effectively.

2018-02-04  Eli Zaretskii  <eliz@gnu.org>

	Yet another round of fixing the Emacs manual

	* doc/emacs/cmdargs.texi (Action Arguments): Rearrange text
	describing what happens when Emacs is invoked with several file
	arguments.  Suggested by Grant Rettke <gcr@wisdomandwonder.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/xresources.texi (GTK styles):
	* doc/emacs/mini.texi (Passwords):
	* doc/emacs/frames.texi (Scroll Bars): Use "cannot" instead of
	"can not".

	* doc/emacs/macos.texi (Mac / GNUstep Basics): Clarify the effect
	of ns-right-alternate-modifier when its value is 'none'.
	Suggested by Wanderson Ferreira <iagwanderson@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/calendar.texi (Importing Diary, Appointments): Now
	sub-sections of Diary.
	* doc/emacs/emacs.texi (Top):
	* doc/emacs/calendar.texi (Diary): Adjust menus to the above
	change.  Suggested by Isaac Carter <icarter1391@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/anti.texi (Antinews): Fix grammar.

2018-02-04  Alan Mackenzie  <acm@muc.de>

	* etc/NEWS: Expunge the solecism "allow(s)" + infinitive

2018-02-04  Martin Rudalics  <rudalics@gmx.at>

	Two minor fixes in Antinews

	* doc/emacs/anti.texi (Antinews): Two minor fixes.

2018-02-03  Juri Linkov  <juri@linkov.net>

	* etc/NEWS: Rename image-dired-thumb-job-limit

	to image-dired-queue-active-limit (bug#30279)

2018-02-03  Basil L. Contovounesios  <contovob@tcd.ie>

	* lisp/simple.el (async-shell-command, shell-command): Fix grammar

2018-02-03  Basil L. Contovounesios  <contovob@tcd.ie>

	Fix deferred display of async shell-command buffers

	* lisp/simple.el (shell-command): Display async shell buffer on
	process output for every, not just first, command invocation.  Check
	buffer liveness, not name, before displaying. (bug#30213, bug#30280)

2018-02-03  Eli Zaretskii  <eliz@gnu.org>

	Mention remote file name completion in Emacs manual

	* doc/emacs/mini.texi (Minibuffer File): Describe the behavior of
	"//" with remote file names.  (Bug#29149)

2018-02-03  Eli Zaretskii  <eliz@gnu.org>

	Yest another round of manual copyedits

	* doc/emacs/fixit.texi (Transpose, Spelling): Minor stylistic
	changes.  Suggested by myq larson <myqlarson@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/calendar.texi (Appointments, Time Intervals): Mention
	relevant Org features.  Suggested by Alex Branham
	<alex.branham@gmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/dired.texi (Operating on Files)
	(Shell Commands in Dired, Image-Dired): Minor stylistic edits.
	Suggested by Francis Wright <f.j.wright@live.co.uk> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/commands.texi (User Input): Explain "C-M-a".
	Suggested by Martin Luethi <martin.luethi@geo.uzh.ch> in
	emacs-manual-bugs@gnu.org.

2018-02-03  Eli Zaretskii  <eliz@gnu.org>

	Update xdisp.c commentary

	* src/xdisp.c: Update commentary regarding "asynchronous" entry
	into redisplay.  (Bug#30182)

2018-02-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#30324

	* lisp/net/rlogin.el (rlogin, rlogin-directory-tracking-mode):
	Adapt to changed remote file name syntax.  (Bug#30324)

2018-02-03  Glenn Morris  <rgm@gnu.org>

	Recognize Org as builtin package (bug#30310)

	* lisp/org/org.el: Add Version header so detected as builtin package.
	* test/lisp/org/org-tests.el: New file.

2018-02-02  Eli Zaretskii  <eliz@gnu.org>

	Another round of manual fixups

	* doc/emacs/killing.texi (Killing by Lines): Clarify wording.
	Reported by David Bonnafous <dbonnafo@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/windows.texi (Other Window): Improve wording.
	Reported by Rasmus Sjostrom <ras.sjostrom@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/display.texi (Display Custom): Mention that line
	numbers are not displayed in the minibuffer and tooltips.

	* doc/emacs/mini.texi (Basic Minibuffer): Improve wording.
	* doc/emacs/regs.texi (Registers): More comma removal.  Suggested
	by "root@vxid.pw root@vxid.pw" <root@vxid.pw> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/display.texi (Auto Scrolling): Fix a typo.  Reported
	by Kevin Foley <kfoley15@gmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/display.texi (Scrolling): Fix grammar.
	(Horizontal Scrolling): Mention reasonable limits for hscroll-step
	float values.  Suggested by Jerome Truong <jerometruong@gmail.com>
	in emacs-manual-bugs@gnu.org.

	* doc/emacs/mini.texi (Minibuffer Edit): Add a missing comma.
	* doc/emacs/basic.texi (Position Info, Arguments, Repeating):
	Remove redundant commas.  Suggested by oldgaro
	<oldgaro@protonmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/kmacro.texi (Save Keyboard Macro): Clarify wording.
	Suggested by clemens.radermacher@posteo.de in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/building.texi (Compilation Mode): Improve and simplify
	wording.  Suggested by drone <yoorobot@gmail.com> in
	emacs-manual-bugs@gnu.org.

	* doc/emacs/dired.texi (Dired Enter): Clarify wording.
	(Dired Deletion): Fix a typo.
	(Marks vs Flags): Mention that M-DEL in Dired asks for the mark
	character.  Fix typos.
	* doc/emacs/basic.texi (Moving Point, Erasing, Basic Undo)
	(Arguments): Some additional information about keys.  Reported by
	Francis Wright <f.j.wright@live.co.uk> in
	emacs-manual-bugs@gnu.org.

2018-02-02  Basil L. Contovounesios  <contovob@tcd.ie>  (tiny change)

	* doc/lispref/customize.texi (Custom Themes): Clarify .el preference.


	https://lists.gnu.org/archive/html/emacs-devel/2018-01/msg00824.html.

2018-02-02  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/entering.texi (Entering Emacs): Another wording fix.

2018-02-02  Noam Postavsky  <npostavs@gmail.com>

	* doc/lispref/functions.texi (Inline Functions): Fix typo (Bug#30238).

	* lisp/imenu.el (imenu-generic-expression): Rephrase doc (Bug#30294).

2018-02-01  Eli Zaretskii  <eliz@gnu.org>

	Fix last change of @key markup

	* doc/lispref/display.texi (Specified Space):
	* doc/emacs/programs.texi (C Modes):
	* doc/emacs/killing.texi (Rectangles):
	* doc/emacs/emacs.texi (Top):
	* doc/emacs/display.texi (Useless Whitespace): Don't use @key
	markup for characters and commands, only for keys.

2018-02-01  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/entering.texi (Entering Emacs): Fix markup.

2018-02-01  Michael Albinus  <michael.albinus@gmx.de>

	Revert a1bbc49015 (Bug#30243), do not merge

	* lisp/files.el:
	* test/lisp/net/tramp-tests.el: Revert a1bbc49015.  (Bug#30243)

2018-01-31  Michael Albinus  <michael.albinus@gmx.de>

	Use @key{} where it is missing in the manuals

2018-01-31  Eli Zaretskii  <eliz@gnu.org>

	Another round of manual fixes from proofreading

	* doc/emacs/search.texi (Incremental Search)
	(Nonincremental Search): Mention the menu bar and fix typos.
	Reported by David Bonnafous <dbonnafo@gmail.com> in
	emacs-manual-bugs@gnu.org.
	* doc/emacs/building.texi (Compilation): Improve wording.
	Suggested by drone <yoorobot@gmail.com> in
	emacs-manual-bugs@gnu.org.
	* doc/emacs/kmacro.texi (Basic Keyboard Macro): Clarify text.
	Suggested by Robert Pluim <rpluim@gmail.com> in
	emacs-manual-bugs@gnu.org.
	* doc/emacs/display.texi (Highlight Interactively, Fringes):
	Improve wording.  Suggested by Justin Heyes-Jones
	<justinhj@gmail.com> in emacs-manual-bugs@gnu.org.
	* doc/emacs/commands.texi (User Input, Commands): Add missing
	commas.
	* doc/emacs/screen.texi (Menu Bar): Mention keyboard keys to
	navigate menus.  Suggested by oldgaro <oldgaro@protonmail.com> in
	emacs-manual-bugs@gnu.org.
	* doc/emacs/search.texi (Not Exiting Isearch): Fix a typo.
	Reported by "Kocken, I.J. (Ilja)" <I.J.Kocken@uu.nl> in
	emacs-manual-bugs@gnu.org.
	* doc/emacs/basic.texi (Inserting Text): Mention one more label of
	RET.  Suggested by Francis Wright <f.j.wright@live.co.uk> in
	emacs-manual-bugs@gnu.org.
	* doc/emacs/text.texi (Paragraphs): Clarify text.  Reported by
	Marcin Borkowski <mbork@mbork.pl> in emacs-manual-bugs@gnu.org.
	* doc/emacs/maintaining.texi (Introduction to VC)
	(Why Version Control?, VCS Merging): Fix typos and section
	capitalization.  Suggested by "R. P. Dillon"
	<rpdillon@killring.org> in emacs-manual-bugs@gnu.org.
	* doc/emacs/modes.texi (Major Modes, Choosing Modes): Fix typos.
	Reported by clemens.radermacher@posteo.de in
	emacs-manual-bugs@gnu.org.

2018-01-31  Eli Zaretskii  <eliz@gnu.org>

	* doc/emacs/entering.texi (Entering Emacs): Fix last change.

2018-01-31  Martin Rudalics  <rudalics@gmx.at>

	Document 'window-at-side-p' in the Elisp manual

	* doc/lispref/windows.texi (Windows and Frames): Document
	'window-at-side-p'.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Document external-debugging-output in the Elisp Manual (Bug#24051)

	* doc/lispref/streams.texi (Output Streams): List
	external-debugging-output.
	* src/print.c (Fexternal_debugging_output): Quote `print' in
	docstring.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Fix scroll-margin docstring (Bug#13791)

	* src/xdisp.c (syms_of_xdisp) <scroll-margin>: Explain that entering
	the margin may trigger any sort of auto scrolling, not recentering
	specifically.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Clarify that `ansi-term' is almost the same as `term' (Bug#18106)

	* lisp/term.el (ansi-term): Clarify that it's almost the same as `term'.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Update manual description of locate-file (Bug#23650)

	* doc/lispref/files.texi (Locating Files): Add example of predicate
	when searching for a directory.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Clarify effect of print-gensym (Bug#27776)

	* src/print.c (syms_of_print) <print-gensym>: Clarify that use of #N#
	and #N= constructs depends on the value of `print-circle'.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	* lisp/custom.el (defcustom): Fix docstring (Bug#27891).

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Define cl-type-definition button type as needed (Bug#28899)

	* lisp/emacs-lisp/eieio-opt.el (eieio-help-constructor): Require
	`cl-extra' before using the `cl-type-definition' button type.

2018-01-31  Noam Postavsky  <npostavs@gmail.com>

	Emphasize that GPG passphrase caching is temporary (Bug#29907)

	* doc/misc/epa.texi (Caching Passphrases): Clarify that caching is
	temporary.
	(GnuPG version compatibility): Fix typo.

2018-01-30  Alan Mackenzie  <acm@muc.de>

	Fix @examples in cc-mode.info, where lines were getting glued together.

	This happened because of false @c's in macro lines.

	* doc/misc/cc-mode.texi (Line-up Functions): Remove the unneeded @c from
	macros sssTBasicOffset, sssTsssTBasicOffset, and hereFn.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Minor change in "Mode Line" section of Emacs manual

	* doc/emacs/screen.texi (Mode Line): Mention tooltips shown when
	hovering the mouse over the mode line.  Suggested by Eduardo
	Mercovich <eduardo@mercovich.net> in emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	More fixes in the Emacs manual

	* doc/emacs/screen.texi (Mode Line): Fix markup and
	cross-references.
	(Menu Bar): Correct inaccurate description.
	* doc/emacs/macos.texi (Mac OS / GNUstep, Mac / GNUstep Events):
	* doc/emacs/frames.texi (Scroll Bars):
	* doc/emacs/emacs.texi (Top):
	* doc/emacs/ack.texi (Acknowledgments): Fix spelling of "macOS".
	* doc/emacs/misc.texi (Invoking emacsclient)
	(emacsclient Options): Fix markup of 'emacsclient'.  Suggested by
	Michael Albinus <michael.albinus@gmx.de> in
	emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits in "Distribution" chapter of the Emacs manual

	* doc/emacs/emacs.texi (Distrib): Minor wording changes.
	Suggested by oldgaro <oldgaro@protonmail.com> in
	emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits in "Entering" chapter of Emacs manual.

	* doc/emacs/entering.texi (Entering Emacs): Add a cross-reference
	to MS-Windows startup procedures.  Clarify wording.  Suggested by
	Francis Wright <f.j.wright@live.co.uk> in emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Minor wording change in the Emacs manual

	* doc/emacs/screen.texi (Screen): Minor wording change.  Suggested
	by Wesley Ellis <ellisgen@gmail.com> in emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in the Emacs manual

	* doc/emacs/custom.texi (Customization Groups): Fix a typo.
	Reported by Jonathan Kyle Mitchell <kyle@jonathanmitchell.org> in
	emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Improve the "Basic" chapter of the Emacs manual

	* doc/emacs/basic.texi (Inserting Text): De-confuse text.
	(Position Info): Add a cross-reference to where
	display-line-numbers-mode is described.  Reported by Joshua
	Branson <jbranso@fastmail.com> in emacs-manual-bugs@gnu.org.

2018-01-30  Eli Zaretskii  <eliz@gnu.org>

	Resurrect lost text in lispref

	* doc/lispref/files.texi (File Attributes): Resurrect
	inadvertently lost text.

2018-01-30  Philipp Stephani  <phst@google.com>

	* lisp/emacs-lisp/rx.el (rx): Fix the definition of 'blank'.

2018-01-29  Paul Eggert  <eggert@cs.ucla.edu>

	Proofread os.texi and files.texi

2018-01-29  Eli Zaretskii  <eliz@gnu.org>

	Minor improvements in the "International" chapter of Emacs manual

	* doc/emacs/mule.texi (File Name Coding): Stop enumerating all the
	versions of MS-Windows.
	(Modifying Fontsets, Unibyte Mode, Bidirectional Editing): Improve
	wording.  Reported by Francis Wright <f.j.wright@live.co.uk> in
	emacs-manual-bugs@gnu.org.

2018-01-29  Eli Zaretskii  <eliz@gnu.org>

	Minor improvement in "Text" chapter of Emacs manual

	* doc/emacs/text.texi (Words): Improve wording.  Reported by
	Marcin Borkowski <mbork@mbork.pl> in
	http://lists.gnu.org/archive/html/emacs-devel/2018-01/msg00784.html.

2018-01-28  Martin Rudalics  <rudalics@gmx.at>

	Fix some issues in the emacs/lispref manuals

	* doc/emacs/basic.texi (Continuation Lines):
	* doc/emacs/building.texi (GDB User Interface Layout):
	* doc/emacs/dired.texi (Misc Dired Features):
	* doc/emacs/maintaining.texi (Identifier Search):
	* doc/emacs/mark.texi (Using Region):
	* doc/emacs/misc.texi (Document View, DocView Conversion):
	* doc/emacs/modes.texi (Major Modes):
	* doc/emacs/mule.texi (Input Methods, Unibyte Mode):
	* doc/emacs/sending.texi (Mail Methods): Replace @code by
	@kbd.
	* doc/emacs/frames.texi (Text-Only Mouse):
	* doc/lispref/maps.texi (Standard Keymaps): Replace @kbd by
	@key.
	* doc/lispref/compile.texi (Compiler Errors): Write
	non-@code{nil} instead of non-nil.
	* doc/lispref/debugging.texi (Internals of Debugger):
	'backtrace' is not a command.  'debugger-stack-frame-as-list'
	is an option.
	* doc/lispref/display.texi (Size of Displayed Text):
	'window-lines-pixel-dimensions' has a last argument 'left'.
	* doc/lispref/display.texi (Attribute Functions):
	'set-face-underline' and 'set-face-inverse-video' are
	commands.
	(Tooltips): 'tooltip-frame-parameters' is an option.
	(Bidirectional Display): 'bidi-paragraph-direction' is an
	option.
	* doc/lispref/frames.texi (Cursor Parameters): 'cursor-type'
	is an option.
	(Input Focus): Argument FRAME of 'x-focus-frame' is not
	optional.
	(Child Frames): Both arguments of 'frame-ancestor-p' are
	non-optional.  'iconify-child-frame' is an option.
	* doc/lispref/os.texi (Killing Emacs):
	'kill-emacs-query-functions' is an option.
	* doc/lispref/windows.texi (Mouse Window Auto-selection):
	'mouse-autoselect-window' is an option.

2018-01-28  Eli Zaretskii  <eliz@gnu.org>

	Fix multiple spaces in Emacs manual

	* doc/emacs/search.texi (Lax Search): Fix multiple consecutive
	spaces in printed manual.

2018-01-28  Eli Zaretskii  <eliz@gnu.org>

	* lisp/files.el (save-some-buffers): Doc fix.  (Bug#30215)

2018-01-28  Eli Zaretskii  <eliz@gnu.org>

	Adjudicate comments to "International" chapter of Emacs manual

	* doc/emacs/mule.texi (International Chars)
	(Language Environments, Input Methods, Defining Fontsets)
	(Modifying Fontsets): Minor wording changes and typo fixes.
	Reported by Francis Wright <f.j.wright@live.co.uk> in
	emacs-manual-bugs@gnu.org.

2018-01-28  Noam Postavsky  <npostavs@gmail.com>

	Revert "Signal error for symbol names with strange quotes (Bug#2967)"

	That commit did not make the corresponding change to printing, thus
	breaking the (eq (read (prin1-to-string SYM)) SYM) invariant for those
	symbols.  It's too late in the release cycle to change printing
	behavior, therefore revert the reader change.

	Don't merge to master, the print function will be updated there (see
	"Fix round tripping of read->print for symbols with strange quotes").

2018-01-27  Alan Mackenzie  <acm@muc.de>

	Allow read-passwd to hide characters inserted by C-y.  (Security fix.)

	This fixes bug #30186.  The with-silent-modifications was there to prevent
	records of text property manipulations being put into buffer-undo-list.  These
	had been causing a significant slowdown in CC Mode with C-_ after a large
	C-y.  This CC Mode problem has since been solved by a different workaround.

	* lisp/subr.el (remove-yank-excluded-properties): Remove the invocation of
	with-silent-modifications around the text property manipulations.

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	* etc/PROBLEMS: Document issues with double-buffering.  (Bug#30088)

2018-01-27  Charles A. Roelli  <charles@aurox.ch>

	* lisp/window.el (window-largest-empty-rectangle): Fix grammar.

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	Minor changes in the Emacs manual

	* doc/emacs/search.texi (Search Customizations): Minor wording
	change.
	* doc/emacs/files.texi (Customize Save): Add a cross-reference
	for batch mode.

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	Improve the "Files" chapter of the Emacs manual

	* doc/emacs/files.texi (File Shadowing): Rearrange text to explain
	the notion of shadowing before describing the commands.  Suggested
	by Will Korteland <emacs-devel@korte.land> in
	emacs-manual-bugs@gnu.org.

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	Improve the "Search" chapter of the Emacs manual

	* doc/emacs/search.texi (Regexps, Regexp Backslash): Improve and
	clarify wording.
	(Search Customizations): Fix a typo.  Reported by Will Korteland
	<emacs-devel@korte.land> in emacs-manual-bugs@gnu.org.

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	* src/indent.c (Findent_to): Doc fix.  (Bug#30260)

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'edebug-defun'

	* doc/lispref/edebug.texi (Instrumenting): Document a workaround
	for a failure to instrument due to unknown macros.  (Bug#30243)
	(Bug#10577)

2018-01-27  Eli Zaretskii  <eliz@gnu.org>

	Mention crashes due to Noto Serif Kannada fonts

	* etc/PROBLEMS: Mention crashes due to Noto Serif Kannada fonts,
	and the respective workarounds.  (Bug#30193)

2018-01-27  Noam Postavsky  <npostavs@gmail.com>

	* doc/lispref/searching.texi: Document regexp repetition limit.

	* src/syntax.c (char-syntax): Warn about ignoring text properties (Bug#22765).

2018-01-27  Noam Postavsky  <npostavs@gmail.com>

	Load mm-util as needed for url-file and url-data (Bug#30258)

	* lisp/url/url-file.el (url-file):
	* lisp/url/url-misc.el (url-data): Require `mm-util' before calling
	`mm-disable-multibyte'.
	* test/lisp/url/url-file-resources/file.txt:
	* test/lisp/url/url-file-tests.el:
	* test/lisp/url/url-misc-tests.el: New tests.

2018-01-26  Eli Zaretskii  <eliz@gnu.org>

	Another minor copyedit in the manual's "Scroll Bars"

	* doc/emacs/frames.texi (Scroll Bars): Mention that up/down and
	left/right buttons may be absent from the toolkit scroll bars.
	Reported by Robert Pluim <rpluim@gmail.com> in
	emacs-manual-bugs@gnu.org.

2018-01-26  Eli Zaretskii  <eliz@gnu.org>

	Minor fix in documentation of 'equal'

	* doc/lispref/objects.texi (Equality Predicates): Correct the
	conditions for equality of unibyte and multibyte strings.
	(Bug#30218)

2018-01-26  Eli Zaretskii  <eliz@gnu.org>

	* lisp/dired-x.el (dired-guess-shell-alist-user): Doc fix.  (Bug#30192)

2018-01-26  Eli Zaretskii  <eliz@gnu.org>

	Minor rewording in Emacs manual's "Help Mode" node

	* doc/emacs/help.texi (Help Mode): Minor rewording of description
	of 'help-follow-symbol'.  Suggested by Richard Stallman
	<rms@gnu.org> in emacs-manual-bugs@gnu.org.

2018-01-26  Eli Zaretskii  <eliz@gnu.org>

	Fixes for Emacs manual in frames.texi

	* doc/emacs/frames.texi (Scroll Bars, Mouse Commands)
	(Window Dividers): Minor clarifications and spelling/markup
	changes.  Suggested by Robert Pluim <rpluim@gmail.com> in
	emacs-manual-bugs@gnu.org.

2018-01-24  Glenn Morris  <rgm@gnu.org>

	* doc/misc/cl.texi (Efficiency Concerns): Fix 2012-10-27 typo.

2018-01-24  Robert Pluim  <rpluim@gmail.com>

	Fix a few issues with latest GTK scaling changes

	* src/xfns.c (Fx_display_monitor_attributes_list): Call
	gdk_screen_get_monitor_scale_factor only for GTK versions
	3.10..3.21.
	* src/xterm.c (x_set_offset): Call xg_get_scale for GTK only.

2018-01-24  Robert Pluim  <rpluim@gmail.com>

	Use scaled coordinates when calling into GTK

	This is part two of a two part fix for the GTK scaling
	problems.  See the thread starting at
	http://lists.gnu.org/archive/html/emacs-devel/2018-01/msg00372.html
	for an explanation of why it has been added to Emacs 26.

	* src/gtkutil.c (xg_set_geometry): Scale down the coordinates that we
	pass to gtk_window_move and to gtk_window_parse_geometry.
	* src/xterm.c (x_set_offset): Likewise.

2018-01-24  Robert Pluim  <rpluim@gmail.com>

	Scale monitor dimensions obtained from GTK

	This is part one of a two part fix for the GTK scaling
	problems.  See the thread starting at
	http://lists.gnu.org/archive/html/emacs-devel/2018-01/msg00372.html
	for an explanation of why it has been added to Emacs 26.

	* src/xfns.c (Fx_display_monitor_attributes_list): Take scaling factor
	into account when using GTK to query the monitor dimensions, which
	allows frameset-restore to position frames correctly.

2018-01-22  Rasmus  <rasmus@gmx.us>

	Update Org to v9.1.6

	Please note this is a bugfix release. See etc/ORG-NEWS for details.

2018-01-22  Aaron Jensen  <aaronjensen@gmail.com>

	Use text-pixels values only when saving framesets (Bug#30141)

	* lisp/frameset.el (frameset-persistent-filter-alist): Specify
	that text-pixels values are by default only saved by framesets
	so the parameter is not set when restoring (Bug#30141).

2018-01-21  Eli Zaretskii  <eliz@gnu.org>

	Minor improvement in section "Pages" of the usere manual

	* doc/emacs/text.texi (Pages): Improve wording.  Suggested by Will
	Korteland <emacs-devel@korte.land> in emacs-manual-bugs@gnu.org.

2018-01-21  Eli Zaretskii  <eliz@gnu.org>

	Minor improvements in user manual

	* doc/emacs/trouble.texi (Emergency Escape, Contributing): Clarify
	text.  Suggested by Jonathan Kyle Mitchell <kyle@jonathanmitchell.org>
	in emacs-manual-bugs@gnu.org

2018-01-21  Eli Zaretskii  <eliz@gnu.org>

	Improve the "Mark" chapter of the user manual

	* doc/emacs/mark.texi (Setting Mark, Marking Objects): Improve and
	clarify wording.  Suggested by John Cummings <john@rootabega.net>
	in emacs-manual-bugs@gnu.org.

2018-01-21  Eli Zaretskii  <eliz@gnu.org>

	Improve the "Buffers" chapter of the user manual

	* doc/emacs/buffers.texi (Several Buffers): Correct description of
	prefix arguments.  Clarify "bury".
	(Buffer Menus): Clarify wording.  Reported by John Cummings
	<john@rootabega.net> in emacs-manual-bugs@gnu.org.

2018-01-21  tino calancha  <tino.calancha@gmail.com>

	* lisp/term.el (term-send-input): Fix text duplication in docstring

2018-01-20  Eli Zaretskii  <eliz@gnu.org>

	Improve "Buffers" in the user manual

	Suggested by John Cummings <john@rootabega.net> in
	emacs-manual-bugs@gnu.org:
	* doc/emacs/buffers.texi (Select Buffer): Add cross-references to
	"Windows" and "Frames".
	(Misc Buffer, Kill Buffer): Use BUFFER consistently in commands
	that accept buffer names.
	(Select Buffer): Improve description of "M-g M-g".  Improve
	wording.
	(Misc Buffer, Kill Buffer): Improve wording.
	(Kill Buffer): Fix the response required by kill-some-buffers.
	Mention customizable options that control what clean-buffer-list
	does.
	(Several Buffers): More detail about
	'Buffer-menu-unmark-all-buffers'.

2018-01-20  Eli Zaretskii  <eliz@gnu.org>

	Don't mention 'vc-stay-local' in the user manual

	* doc/emacs/vc1-xtra.texi (CVS Options):
	* doc/emacs/maintaining.texi (VC Directory Buffer): Remove
	references to 'vc-stay-local', which no longer exists.
	(Bug#30138)

2018-01-20  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in calendar.texi

	* doc/emacs/calendar.texi (Writing Calendar Files): Capitalize
	"Filofax".  Reported by Will Korteland <emacs-devel@korte.land>
	in emacs-manual-bugs@gnu.org.

2018-01-20  Eli Zaretskii  <eliz@gnu.org>

	Minor improvement in wording of the Emacs manual

	* doc/emacs/killing.texi (CUA Bindings): Improve wording.
	Suggested by Will Korteland <emacs-devel@korte.land> in
	emacs-manual-bugs@gnu.org.

2018-01-20  Eli Zaretskii  <eliz@gnu.org>

	Revert "Fix tempfile creation when byte compiling"

	This reverts commit 4fd446e9f65e5531b18d4a0c5e08a6eeabc292d8:
	* lisp/emacs-lisp/bytecomp.el (byte-compile-file):
	Put tempfile next to the target file, as was the original intent.

2018-01-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix tempfile creation when byte compiling

	This improves on the recent fix for master failing to build
	on FreeBSD.  Suggested by Stefan Monnier in:
	https://lists.gnu.org/r/emacs-devel/2018-01/msg00600.html
	* lisp/emacs-lisp/bytecomp.el (byte-compile-file):
	Put tempfile next to the target file, as was the original intent.

2018-01-19  Eli Zaretskii  <eliz@gnu.org>

	Improve the Emacs manual as suggested in emacs-manual-bugs

	* doc/emacs/killing.texi (Deletion and Killing): Add
	cross-reference to "Kill Ring".
	* doc/emacs/help.texi (Help Mode, Package Keywords): Improve
	wording.  Suggested by Will Korteland <emacs-devel@korte.land> in
	emacs-manual-bugs@gnu.org.

2018-01-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/bytecomp.el: Tweak last change

	(byte-compile-file): Move comment closer to the code it describes.

2018-01-19  Eli Zaretskii  <eliz@gnu.org>

	Unbreak building Emacs on FreeBSD

	* lisp/emacs-lisp/bytecomp.el (byte-compile-file): Don't create
	the temporary file under temporary-file-directory if the file
	being compiled is specified by an absolute file name.  This avoids
	problems with ACL copying from temporary-file-directory on
	FreeBSD.  For the details, see
	http://lists.gnu.org/archive/html/emacs-devel/2018-01/msg00513.html.

2018-01-19  Eli Zaretskii  <eliz@gnu.org>

	Don't unnecessarily use non-ASCII characters in C sources

	* src/xwidget.c (webkit_javascript_finished_cb):
	* src/gtkutil.c (xg_check_special_colors):
	* src/emacs-module.c (module_make_string):
	* src/alloc.c (SET_STACK_TOP_ADDRESS): Don't use non-ASCII quote
	characters.

2018-01-19  Eli Zaretskii  <eliz@gnu.org>

	Portability fixes in emacs-module-tests

	* test/Makefile.in (abs_top_srcdir): Add variable, needed by
	CPPFLAGS.
	* test/data/emacs-module/mod-test.c: Include <limits.h>.
	(pT, pZ, T_TYPE, Z_TYPE): Compatibility macros, for systems that
	don't support %td and %zu format specs.
	(emacs_module_init): Use compatibility macros to make the error
	messages print meaningful values (and avoid compiler warnings).

2018-01-19  Noam Postavsky  <npostavs@gmail.com>

	Add tests for term.el

	* lisp/term.el (term-mode): Add `name' attribute to
	window-adjust-process-window-size-function value, so that it can be
	removed easily by tests.
	* test/lisp/term-tests.el: New tests.

2018-01-19  Callum Cameron  <cjcameron7@gmail.com>  (tiny change)

	Handle split AnSiT messages for term.el (Bug#17231)

	Check to see if there is an incomplete command at the end of
	term-emulate-terminal's input string, and, if so, save it so the whole
	command can be processed when the next string arrives.
	* lisp/term.el (term-partial-ansi-terminal-message): New variable.
	(term-mode): Make it buffer local.
	(term-handle-ansi-terminal-messages): Prepend it to the received
	message, and set it if a partial message was received.


	Do not merge to master, it will be solved differently there, see
	"Switch term.el to lexical binding, and clean up code a bit".

2018-01-19  Glenn Morris  <rgm@gnu.org>

	* configure.ac (emacs_config_features): Add threads.

2018-01-18  Noam Postavsky  <npostavs@gmail.com>

	Handle case-insensitive filenames for load-path shadows (Bug#5845)

	* lisp/emacs-lisp/shadow.el (load-path-shadows-find): Check for
	shadowing with case-insensitive matching for files of case-insensitive
	directories (as determined by `file-name-case-insensitive-p').
	* test/lisp/emacs-lisp/shadow-tests.el: New test.
	* test/lisp/emacs-lisp/shadow-resources/p1/foo.el:
	* test/lisp/emacs-lisp/shadow-resources/p2/FOO.el: New test files.

2018-01-18  Alan Mackenzie  <acm@muc.de>

	CC Mode: stop distinguishing brace blocks from defun blocks by content.

	Don't merge to master; this is a quick fix for the emacs-26 branch.  This is
	essentially a reversion of the patch from 2017-11-10 which attempted to handle
	C99's compound literals.

	The bug here was triggered when a defun block contained a declaration ending
	in a comma, yet without a semicolon.

	* lisp/progmodes/cc-engine.el (c-guess-basic-syntax): At the CASE 9 test,
	remove from the `or' form the test of a block's contents.

2018-01-17  Philipp Stephani  <phst@google.com>

	Use recommended long options syntax in man page

	* doc/man/emacs.1.in: Specify equals sign for long options, as
	recommended in the manual.

2018-01-17  Glenn Morris  <rgm@gnu.org>

	An overdue update of GNUstep emacs.tiff

	* nextstep/GNUstep/Emacs.base/Resources/emacs.tiff:
	Update to the Emacs 25 icon.
	Converted from hicolor/scalable/apps/emacs.svg using Gimp.
	* nextstep/GNUstep/Emacs.base/Resources/README: Update.

2018-01-17  Glenn Morris  <rgm@gnu.org>

	Add some test skip conditions

	* test/lisp/vc/vc-bzr-tests.el (vc-bzr-test-bug9726)
	(vc-bzr-test-bug9781): Skip if bzr is faulty.
	* test/src/thread-tests.el: Skip if not compiled with threads.

2018-01-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Add documentation to ecomplete.el

	* lisp/ecomplete.el: Add doc strings and document the format.

2018-01-17  Glenn Morris  <rgm@gnu.org>

	* admin/authors.el (authors-aliases): Tighten more entries.

2018-01-17  Glenn Morris  <rgm@gnu.org>

	Small startup fix for current-load-list

	* lisp/startup.el (command-line):
	Avoid current-load-list being non-nil after startup ends.

2018-01-17  Glenn Morris  <rgm@gnu.org>

	authors-aliases is based on regexps, not literals

	* admin/authors.el (authors-aliases): Replace overly-broad entries.

2018-01-15  Charles A. Roelli  <charles@aurox.ch>

	Remove incorrect documentation in comint.el

	* lisp/comint.el (comint-interrupt-subjob, comint-kill-subjob)
	(comint-quit-subjob, comint-stop-subjob): Remove incorrect
	documentation.  (Bug#30079)

2018-01-15  Glenn Morris  <rgm@gnu.org>

	An overdue update of src/emacs-icon.h

	* src/emacs-icon.h: Update to the Emacs 25 icon.  (Bug#30047)
	Converted from hicolor/scalable/apps/emacs.svg using Gimp.

2018-01-14  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedit in ELisp manual

	* doc/lispref/variables.texi (File Local Variables): Improve
	wording of last change.

2018-01-14  Shuguang Sun  <shuguang@gmail.com>

	Fix Bug#29149 in dired-aux.el

	* lisp/dired-aux.el (dired-shell-stuff-it): Handle remote
	commands on w32 properly.  (Bug#29149)

2018-01-14  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29149 in shell.el

	* lisp/shell.el (shell): Change order of `file-local-name' and
	`expand-file-name' calls.  Otherwise, the local file name
	would be extended by a drive letter, even when it is a remote
	file, seen from w32.  (Bug#29149)

2018-01-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* doc/lispref/variables.texi (File Local Variables): Fix last change

2018-01-13  Nicolas Petton  <nicolas@petton.fr>

	* ChangeLog.3: Update

	Update etc/AUTHORS

2018-01-13  Nicolas Petton  <nicolas@petton.fr>

	Fix an entry in authors-aliases

	* admin/authors.el (authors-aliases): Replace regexp from "Max", which
	is too broad, to an email address ("mu@magi.net.ru").

2018-01-13  Eli Zaretskii  <eliz@gnu.org>

	Mention trace.el facilities in the ELisp manual

	* doc/lispref/debugging.texi (Debugging): Mention the trace.el
	library.

2018-01-13  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of safe values of variables

	* doc/lispref/variables.texi (File Local Variables): Mention the
	autoload cookie as a means of defining safe values for variables.
	See http://lists.gnu.org/archive/html/emacs-devel/2018-01/msg00261.html
	for the details.
	* doc/lispref/compile.texi (Compiler Errors): Document
	'byte-compile-error-on-warn'.

2018-01-13  Eli Zaretskii  <eliz@gnu.org>

	Improve the Emacs manual's "Misc" node

	* doc/emacs/misc.texi (Gnus): A more descriptive section name.
	(Invoking emacsclient): Mention how to avoid errors when there's
	no Emacs server.
	(EWW, Embedded WebKit Widgets): Now subsections under
	"Hyperlinking and Web Navigation Features".
	(Amusements): Add "games" to the section name.  Suggested by Alex
	Branham <alex.branham@gmail.com> in emacs-manual-bugs@gnu.org.

	* doc/emacs/emacs.texi (Top): Adjust the top-level menus to the
	above changes.

	* doc/lispref/os.texi (Security Considerations): Fix typos.

2018-01-13  Martin Rudalics  <rudalics@gmx.at>

	In nsterm.m use FRAME_NS_P instead of FRAME_X_P (Bug#30019)

	* src/nsterm.m (x_set_parent_frame): Call FRAME_NS_P instead
	of FRAME_X_P (Bug#30019).

2018-01-12  Nicolas Petton  <nicolas@petton.fr>

	Bump Emacs version to 26.0.91

	* README:
	* configure.ac:
	* msdos/sed2v2.inp:
	* nt/README.W32: Bump Emacs version.

2018-01-12  Nicolas Petton  <nicolas@petton.fr>

	* ChangeLog.3: Update

2018-01-12  Nicolas Petton  <nicolas@petton.fr>

	Update authors

	* admin/authors.el (authors-aliases, authors-valid-file-names): Additions.
	* etc/AUTHORS: Update AUTHORS file.

2018-01-12  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/gnus/message.el (message-do-auto-fill): Prevent do-auto-fill from
	adding extra citation mark (bug#29767, but it is a different bug).

2018-01-11  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of etags

	* doc/emacs/maintaining.texi (Tag Syntax, Create Tags Table):
	Improve documentation of etags options and of source language
	detection.

2018-01-11  Eli Zaretskii  <eliz@gnu.org>

	Teach etags new interpreters for some languages

	* lib-src/etags.c (Erlang_interpreters, Lua_interpreters)
	(Prolog_interpreters, Python_interpreters, Ruby_interpreters): New
	static variables.
	(lang_names): Use them to set interpreters for Erlang, Lua,
	Prolog, Python, and Ruby.
	(find_entries): Support "/usr/bin/env FOO" form of specifying an
	interpreter.

	* test/manual/etags/perl-src/htlmify-cystic: Modify the has-bang
	line to test the "env FOO" interpreter spec.  (Bug#30075)
	* test/manual/etags/ETAGS.good_1:
	* test/manual/etags/ETAGS.good_2:
	* test/manual/etags/ETAGS.good_3:
	* test/manual/etags/ETAGS.good_4:
	* test/manual/etags/ETAGS.good_5:
	* test/manual/etags/ETAGS.good_6: Adapt to latest changes in test
	files.

2018-01-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/generator.el (iter-defun): Add 'doc-string' prop.

	* lisp/emacs-lisp/syntax.el (syntax-propertize): Fix bug#29767

2018-01-10  Charles A. Roelli  <charles@aurox.ch>

	Improve documentation of fill-separate-heterogeneous-words-with-space

	* lisp/textmodes/fill.el
	(fill-separate-heterogeneous-words-with-space): Fix grammar.

2018-01-10  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation of some x-* functions

	* lisp/term/pc-win.el (x-display-pixel-width)
	(x-display-pixel-height, x-display-planes)
	(x-display-color-cells, x-server-max-request-size)
	(x-server-vendor, x-server-version, x-display-screens)
	(x-display-mm-height, x-display-mm-width)
	(x-display-backing-store, x-display-visual-class): Provide doc
	strings, so that 'makedoc' produces non-empty documentation in
	etc/DOC for these functions.  (Bug#30068)

2018-01-10  Philipp Stephani  <phst@google.com>

	Inherit query-on-exit flag to stderr process (Bug#30031)

	* src/process.c (Fmake_process): Have the pipe process honor the
	parent's query-on-exit flag.

	* test/src/process-tests.el (make-process/noquery-stderr): New test.

2018-01-10  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#30057

	* test/lisp/filenotify-tests.el (file-notify--test-tmpdir): New defvar.
	(file-notify--test-cleanup, file-notify--test-make-temp-name)
	(file-notify-test01-add-watch, file-notify-test03-events)
	(file-notify-test05-file-validity)
	(file-notify-test09-watched-file-in-watched-dir)
	(file-notify-test10-sufficient-resources): Use it.  (Bug#30057)

2018-01-10  Glenn Morris  <rgm@gnu.org>

	Tag some unstable tests, and skip by default (bug#24503)

	* Makefile.in (check-all): New phony target.
	* test/Makefile.in (SELECTOR_DEFAULT, SELECTOR_EXPENSIVE):
	Also skip unstable tests.
	(SELECTOR_ALL): New variable.
	(check-all): New phony target.
	* test/lisp/emacs-lisp/eieio-tests/eieio-test-methodinvoke.el
	(eieio-test-method-order-list-6):
	* test/lisp/emacs-lisp/eieio-tests/eieio-tests.el
	(eieio-test-37-obsolete-name-in-constructor):
	Mark as unstable rather than skipping on hydra.nixos.org.

2018-01-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2018-01-05 maint: Add encoding marker for Emacs to non-ASCII sources
	2018-01-04 update-copyright: Handle use of ©
	2018-01-04 pthread_sigmask: Avoid compilation error on mingw
	2018-01-02 stat-time: silence -Wunused-parameter regression
	* build-aux/config.guess, build-aux/config.sub:
	* build-aux/update-copyright, doc/misc/texinfo.tex, lib/gnulib.mk.in:
	* lib/md5.c, lib/md5.h, lib/sha1.c, lib/sha1.h, lib/sha256.c:
	* lib/sha256.h, lib/sha512.c, lib/sha512.h, lib/signal.in.h:
	* lib/stat-time.h: Copy from Gnulib, or regenerate.

2018-01-09  Glenn Morris  <rgm@gnu.org>

	* lisp/epg.el (epg-start-sign): Replace obsolete functions.

2018-01-09  Glenn Morris  <rgm@gnu.org>

	Small fix for erc-logging-enabled

	* lisp/erc/erc-log.el (erc-logging-enabled):
	Respect buffer-locality of erc-enable-logging variable.

2018-01-09  Glenn Morris  <rgm@gnu.org>

	Quieten semantic normal usage

	* lisp/cedet/semantic/lex.el (semantic-flex): Mark obsolete at
	compile time in the normal way, not at run-time.  (Bug#30035)

2018-01-08  Eli Zaretskii  <eliz@gnu.org>

	Avoid irrelevant hyperlink in doc string of 'epa-pinentry-mode'

	* lisp/epa.el (epa-pinentry-mode): Doc fix.  (Bug#30025)

2018-01-08  Michael Albinus  <michael.albinus@gmx.de>

	* doc/misc/tramp.texi (Remote processes): Mention gdb restrictions with I/O.

2018-01-08  Noam Postavsky  <npostavs@gmail.com>

	Query background for gnome terminal version 3.22 (Bug#29716)

	* lisp/term/xterm.el (xterm--version-handler): Use
	xterm--report-background-handler for terminals reporting minor version
	4000 and above.

2018-01-07  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Make pixel-wise scrolling less laggy

	* lisp/pixel-scroll.el (pixel-dead-time, pixel-last-scroll-time):
	New variables.
	(pixel-scroll-up, pixel-scroll-down): Invoke 'scroll-up' or
	'scroll-down' when called within 'pixel-dead-time'.  (Bug#29737)

2018-01-07  Alan Third  <alan@idiocy.org>

	Fix child frame placement issues (bug#29953)

	* src/nsterm.h (NS_PARENT_WINDOW_LEFT_POS):
	(NS_PARENT_WINDOW_TOP_POS): Get the parent frame through the frame
	struct as invisible child windows are detached from their parents in
	NS.
	* src/nsterm.m (x_set_offset): Offscreen frames have `nil' screen
	value, so handle that gracefully.  Child frames with negative left and
	top should be positioned relative to the bottom right of the parent
	frame.

2018-01-06  Alan Mackenzie  <acm@muc.de>

	Describe the precise interaction of complex primitives with the change hooks

	* doc/lispref/text.texi (Change Hooks): Document that most buffer changing
	primitives call before- and after-change-functions in balanced pairs, but that
	some complex primitives call b-c-f once, and a-c-f zero, one, or several
	times.

2018-01-06  Eli Zaretskii  <eliz@gnu.org>

	Fix valgrind report in call-interactively

	* src/callint.c (Fcall_interactively): Don't try to access more
	bytes than are available in the interactive spec.  (Bug#30004)

2018-01-06  Eli Zaretskii  <eliz@gnu.org>

	* src/editfns.c (Fsave_excursion): Doc fix.  (Bug#30001)

2018-01-06  Alan Mackenzie  <acm@muc.de>

	Fix mark-defun when there's no spaces between successive defuns.

	The problem was a parse-partial-sexp call which tried to use the STOPBEFORE
	argument to detect non-syntactic WS.  This fails on a "}", which does not
	begin a sexp.

	* lisp/emacs-lisp/lisp.el (beginning-of-defun--in-emptyish-line-p): Enhance to
	handle BOL being in a string.
	(beginning-of-defun-comments): Call the above function in place of the call
	to parse-partial-sexp.

2018-01-06  Eli Zaretskii  <eliz@gnu.org>

	Fix Dired display and operations on file names with raw bytes

	* src/coding.c (decode_coding): When flushing remaining raw bytes
	from multibyte text, copy 2-byte forms of eight-bit-*
	characters as single characters, not as 2 raw bytes.  (Bug#29189)

2018-01-05  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'gdb-many-windows'

	* doc/emacs/building.texi (GDB User Interface Layout): Add advice
	for using a separate frame for 'gdb-many-windows'.

2018-01-05  Eli Zaretskii  <eliz@gnu.org>

	Fix failures in smerge-mode on MS-Windows

	* lisp/vc/smerge-mode.el (smerge--refine-chopup-region): Use
	utf-8-emacs-unix, not emacs-internal, to make the forced EOL
	convention explicit.
	(smerge-refine-regions): Use utf-8-emacs instead of
	emacs-internal, to allow decoding of non-Unix EOL conventions.
	(Bug#29916)

2018-01-04  Stephen Leake  <stephen_leake@stephe-leake.org>

	Fix description of 'struct' generic function specializer
	Backport:

	* doc/lispref/functions.texi (Generic Functions): Fix description of
	'struct' specializer; it must be the named struct or a child, not a
	parent.

	(cherry picked from commit b6add8c7cfc6d36f9dd8ad99be06bd8ab41cc6f8)

2018-01-04  Charles A. Roelli  <charles@aurox.ch>

	* etc/DEBUG (Getting control to the debugger): Fix grammar.

2018-01-03  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/vc/vc.el (vc-region-history): log-view-vc-fileset holds a list!

2018-01-03  Noam Postavsky  <npostavs@gmail.com>

	Don't bind dframe events on load (Bug#29599)

	* lisp/dframe.el (dframe-setup-hook): New hook.
	(dframe-set-special-events): New function, containing previous
	top-level key binding code.
	(top-level): Add it to dframe-setup-hook.
	(dframe-frame-mode): Run the hook.

2018-01-02  Eli Zaretskii  <eliz@gnu.org>

	* lisp/textmodes/picture.el (picture-mode-exit): Doc fix.  (Bug#29949)

	* lisp/textmodes/picture.el (picture-open-line): Doc fix.  (Bug#29948)

2018-01-01  Eli Zaretskii  <eliz@gnu.org>

	Fix description of 'emacs-internal'

	* doc/lispref/nonascii.texi (Coding System Basics): Correct
	inaccuracy in description of 'emacs-internal'.  (Bug#29916)

2018-01-01  Eli Zaretskii  <eliz@gnu.org>

	Update PROBLEMS with selection-related issues

	* etc/PROBLEMS: Update the entry about large selections and
	klipper.  (Bug#29661)

2018-01-01  Ross Donaldson  <gastove@gmail.com>  (tiny change)

	New customization variable for python-mode indentation (Bug#28475)

	* lisp/progmodes/python.el (python-indent-def-block-scale): New variable.
	(python-indent--calculate-indentation): Let it control how many indent
	levels are inserted for multi-line function signatures.

2018-01-01  Alan Third  <alan@idiocy.org>

	Fix menu keyboard shortcuts on macOS (Bug#29595)

	* src/nsmenu.m (addItemWithWidgetValue)[NS_IMPL_COCOA]: It looks like
	macOS 10.13 no longer ignores long modifier strings, so explicitly use
	an empty string.

2018-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix copyright years by hand

	These are dates that admin/update-copyright did not update, or
	updated incorrectly.

2018-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Update copyright year to 2018

	Run admin/update-copyright.

2018-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2018-01-01 maint: Run 'make update-copyright'
	2017-12-29 Add cross-compilation results for GNU/Hurd.
	2017-12-12 explicit_bzero: port to macOS + Clang 9.0.0

2017-12-31  Gemini Lasswell  <gazally@runbox.com>

	Don't add empty keyboard macro to macro ring (Bug#24992)

	* lisp/kmacro.el (kmacro-end-call-mouse): Don't save a newly defined
	macro if it is empty.

	* test/lisp/kmacro-tests.el (kmacro-tests-end-and-call-macro-mouse):
	Remove expected failure tag.

2017-12-31  Eli Zaretskii  <eliz@gnu.org>

	Allow customization of decoding of "man" command

	* lisp/man.el (Man-coding-system): New defcustom.
	(Man-start-calling): Use it, and also pay attention to user
	overriding coding-system-for-read.  (Bug#29872)

2017-12-31  Daiki Ueno  <ueno@gnu.org>

	* etc/NEWS: Add security consideration note on passphrase input

2017-12-29  Eli Zaretskii  <eliz@gnu.org>

	Fix subtle problem with scroll-down when scroll-margin is nonzero

	* src/window.c (window_scroll_pixel_based): Account for
	scroll-margin when scrolling down, i.e. moving window-start
	towards the beginning of the buffer.  Reported by zhang cc
	<ccsmile2008@outlook.com> in
	http://lists.gnu.org/archive/html/emacs-devel/2017-12/msg00894.html.

2017-12-29  Eli Zaretskii  <eliz@gnu.org>

	Fix problems with indexing in User manual

	* doc/emacs/basic.texi (Continuation Lines, Inserting Text)
	(Moving Point):
	* doc/emacs/help.texi (Help Echo, Package Keywords, Help Mode):
	* doc/emacs/trouble.texi (Quitting):
	* doc/emacs/mark.texi (Setting Mark, Disabled Transient Mark):
	* doc/emacs/custom.texi (Modifier Keys, Init Examples)
	(Creating Custom Themes):
	* doc/emacs/programs.texi (Program Modes, Expressions, Hideshow)
	(Basic Indent, Info Lookup, Symbol Completion):
	* doc/emacs/screen.texi (Echo Area):
	* doc/emacs/xresources.texi (Table of Resources, GTK Names in Emacs):
	* doc/emacs/display.texi (Line Truncation, Cursor Display):
	* doc/emacs/files.texi (File Names, Backup, File Archives):
	* doc/emacs/dired.texi (Operating on Files, Dired Enter):
	* doc/emacs/commands.texi (User Input):
	* doc/emacs/mule.texi (International, Unibyte Mode)
	(International Chars):
	* doc/emacs/vc1-xtra.texi (RCS and SCCS, Version Headers)
	(CVS Options):
	* doc/emacs/modes.texi (Major Modes, Minor Modes):
	* doc/emacs/indent.texi (Just Spaces):
	* doc/emacs/frames.texi (Mouse Avoidance, Mode Line Mouse)
	(Frame Commands):
	* doc/emacs/cmdargs.texi (Initial Options):
	* doc/emacs/abbrevs.texi (Dabbrev Customization):
	* doc/emacs/mini.texi (Completion Example, Completion Commands):
	* doc/emacs/calendar.texi (Writing Calendar Files, Calendar Unit Motion)
	(From Other Calendar):
	* doc/emacs/regs.texi (Text Registers, Bookmarks):
	* doc/emacs/buffers.texi (Several Buffers, Select Buffer):
	* doc/emacs/maintaining.texi (Xref Commands):
	* doc/emacs/windows.texi (Pop Up Window):
	* doc/emacs/text.texi (Text, Org Mode):
	* doc/emacs/killing.texi (Other Kill Commands):
	* doc/emacs/misc.texi (Document View, Gnus Group Buffer)
	(Gnus Summary Buffer, Shell Mode):
	* doc/emacs/cal-xtra.texi (Sexp Diary Entries): Remove or reword
	redundant identical index entries.
	* doc/emacs/custom.texi (Mouse Buttons)
	* doc/emacs/files.texi (Reverting): Fix hyphenation.
	* doc/emacs/emacs.texi (Top): Improve wording of Index menu items.
	* doc/emacs/files.texi (File Conveniences):
	* doc/emacs/programs.texi (MixedCase Words): Make entries that
	belong to Concept Index be indexed with @cindex.  (Bug#29888)

2017-12-29  Alan Mackenzie  <acm@muc.de>

	* lisp/help.el (describe-key): Only (copy-sequence elt) when elt is a list.

2017-12-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/buffer.c (Frestore_buffer_modified_p): Fix bug#29846

	Don't mess with the lock file when inhibit_modification_hooks is set,
	just like we do in prepare_to_modify_buffer_1.

2017-12-28  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'inhibit-modification-hooks' and friends

	* src/buffer.c (Fset_buffer_modified_p)
	(Frestore_buffer_modified_p): Doc fixes.
	* src/insdel.c (syms_of_insdel) <inhibit-modification-hooks>:
	Document in the doc string that this variable also inhibits file
	locks and active region handling.  (Bug#29846)

2017-12-28  David Pathakjee  <dpathakjee@gmail.com>  (tiny change)

	Fix doc string of 'enable-recursive-minibuffers'

	* src/minibuf.c (syms_of_minibuf) <enable-recursive-minibuffers>:
	Doc fix.  (Bug#29873)

2017-12-27  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation of delsel and of killing text

	* doc/emacs/killing.texi (Appending Kills): Make sure the text
	with 2 spaces is not broken between 2 lines.
	* doc/emacs/mark.texi (Using Region): Remove the sentence about
	delsel mode that describes behavior which exists even without
	delsel mode turned on.  Suggested by Petteri Hintsanen
	<petterih@iki.fi> in emacs-manual-bugs@gnu.org.

	* lisp/delsel.el (delete-selection-mode): Doc fix.

2017-12-27  Glenn Morris  <rgm@gnu.org>

	* doc/lispref/strings.texi (Case Conversion):
	Use a TeX font that support ligatures.

2017-12-27  Charles A. Roelli  <charles@aurox.ch>

	* doc/misc/speedbar.texi (Top): Fix grammar.

	* lisp/subr.el (with-silent-modifications): Doc fixes.

2017-12-26  Eli Zaretskii  <eliz@gnu.org>

	Fix curved quotes in printed manual

	* doc/emacs/text.texi (Quotation Marks): Fix curved quote
	characters in the printed version of the manual.

2017-12-25  Paul Eggert  <eggert@cs.ucla.edu>

	Say that "gnus-cloud" is a parody name

2017-12-25  Eli Zaretskii  <eliz@gnu.org>

	More improvements for text.texi

	* doc/emacs/text.texi (Outline Motion): Avoid unneeded
	repetition.  Suggested by Petteri Hintsanen <petterih@iki.fi> in
	emacs-manual-bugs@gnu.org.

2017-12-24  Eli Zaretskii  <eliz@gnu.org>

	Adjudicate review comments for the "Text" chapter of user manual

	* doc/emacs/text.texi (Text): Rearrange text for clarity.  Add
	cross-reference to the Org manual.  Make the cross-reference to
	Outline Mode appear in online manuals as well (the conditional was
	a forgotten remnant from time immemoriam).
	(Paragraphs): Add a note that 'paragraph-start' and
	'paragraph-separate' should not be anchored.
	(Auto Fill): Remove redundant text.  Suggested by Petteri
	Hintsanen <petterih@iki.fi> in emacs-manual-bugs@gnu.org.

2017-12-24  Andreas Schwab  <schwab@linux-m68k.org>

	* lisp/url/url-http.el
	(url-http-wait-for-headers-change-function): Change message to
	url-http-debug.

2017-12-24  Alan Mackenzie  <acm@muc.de>

	In C-h k <mouse-n>, alert user to existence of any matching down-mouse-event

	, and instruct her to hold the mouse button to display its documentation.

	* lisp/help.el (help-downify-mouse-event-type): New function.
	(help-read-key-sequence, describe-key): handle double-click-time being nil or
	t.
	(describe-key): Print out instructions for displaying documentation of
	matching mouse down key sequence command when such exists.

2017-12-23  Andreas Schwab  <schwab@linux-m68k.org>

	* net/eww.el (eww): Handle URLs without host part.

2017-12-23  Alan Mackenzie  <acm@muc.de>

	Make C-h c/k S-mouse-1 display message for mouse-appearance-menu, etc.

	Currently, C-h c/k for S-mouse-1 reports that S-mouse-1 is unbound, ignoring
	that S-down-mouse-1 is bound.  We fix this by reporting on the "latest" mouse
	event of a sequence which is bound.

	* lisp/help.el (help-read-key-sequence): Save all encountered mouse events in
	a list.  Return the latest one which has a binding.

2017-12-23  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes when ':eval' deletes our frame

	* src/xdisp.c (display_mode_element): Signal an error if
	':eval' somehow deletes the frame whose window we are
	redisplaying. (Bug#29726)

2017-12-23  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Fix scrolling up in pixel-scroll.el

	* lisp/pixel-scroll.el (pixel-scroll-up): Do not try to move cursor
	down when EOB is shown at the top.  This function is reverted to
	commit 1bda71ec3b11eeb4d06c3da094a3cb21bac18d5c. (bug#29737)

2017-12-23  Eli Zaretskii  <eliz@gnu.org>

	Fix problems with ligatures in PDF version of ELisp manual

	* doc/lispref/strings.texi (Case Conversion): Avoid problems with
	ligatures in printed versions of the manual.  (Bug#29818)

2017-12-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	(elisp-flymake-byte-compile): Handle killed buffer in sentinel

	* lisp/progmodes/elisp-mode.el (elisp-flymake-byte-compile):
	Don't burp if the source-buffer has been killed.

2017-12-22  Glenn Morris  <rgm@gnu.org>

	Avoid some overfull lines in PDF lispref

	* doc/lispref/commands.texi (Reading One Event):
	* doc/lispref/display.texi (SVG Images):
	* doc/lispref/frames.texi (Size Parameters):
	* doc/lispref/syntax.texi (Categories):
	* doc/lispref/windows.texi (Frame Layouts with Side Windows):
	Avoid overfull lines.

2017-12-22  Glenn Morris  <rgm@gnu.org>

	Avoid some overfull lines in PDF manual

	* doc/emacs/display.texi (Display Custom):
	* doc/emacs/search.texi (Other Repeating Search):
	* doc/emacs/text.texi (Quotation Marks): Avoid overfull lines.

2017-12-22  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/arevert-xtra.texi (Auto Reverting the Buffer Menu):
	Fix ref.

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	* lisp/emacs-lisp/inline.el (define-inline): Add a doc string.

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	Fix doc string of 'footnote-style-alist'

	* lisp/mail/footnote.el (footnote-style-alist): Remove a reference
	to non-existing files from doc string.  (Bug#29759)

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of selecting windows

	* doc/lispref/windows.texi (Basic Windows, Selecting Windows):
	Clarify what selecting a window means for keyboard input, and that
	input focus may need to be considered when selecting windows on
	other frames.  See
	http://lists.gnu.org/archive/html/emacs-devel/2017-12/msg00372.html
	for more details.

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of records

	* doc/lispref/Makefile.in (srcs): Add the forgotten records.texi.
	* doc/lispref/records.texi (Records): Recommend that record type
	names use package-naming conventions.

	* etc/NEWS: Add the naming convention recommendation for record
	types.

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	* etc/NEWS: Mention the removal of pinentry.el.  (Bug#27445)

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	Fix interactive spec of 'semantic-ia-show-variants'

	* lisp/cedet/semantic/ia.el (semantic-ia-show-variants): Fix the
	interactive spec to match the function's expectations.  (Bug#29770)

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation of 'mouse-drag-and-drop-region' and friends

	* doc/emacs/frames.texi (Drag and Drop): Index
	'mouse-drag-and-drop-region-cut-when-buffers-differ',
	'mouse-drag-and-drop-region-show-tooltip', and
	'mouse-drag-and-drop-region-show-cursor'.

	* etc/NEWS: Fix the format of the related entries.

2017-12-22  Eli Zaretskii  <eliz@gnu.org>

	Improve detection of speller version in ispell.el

	* lisp/textmodes/ispell.el (ispell-check-version): Accept more
	general forms of version numbers for Aspell, Hunspell, and
	Enchant, to include various beta and prereleases.  (Bug#29801)

2017-12-22  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Document 'mouse-drag-and-drop-region' options and mention them in NEWS

	* doc/emacs/frames.texi (Drag and Drop):
	* etc/NEWS (times): Document options for
	'mouse-drag-and-drop-region' and mention them in NEWS.

2017-12-22  Martin Rudalics  <rudalics@gmx.at>

	Fix uses of 'nil' and 'non-nil' in manuals and a few more minor issues

	* doc/emacs/building.texi (Grep Searching): Fix doc of
	'grep-save-buffers'.
	(Drag and Drop): Reorder paragraphs.  Fix doc of
	'mouse-drag-and-drop-region'.
	* doc/emacs/frames.texi (Word and Line Mouse):
	* doc/emacs/search.texi (Other Repeating Search):
	* doc/lispref/compile.texi (Compilation Functions):
	* doc/lispref/files.texi (Directory Names):
	* doc/lispref/functions.texi (Advising Named Functions):
	* doc/lispref/keymaps.texi (Controlling Active Maps):
	* doc/lispref/lists.texi (Association Lists):
	* doc/lispref/windows.texi (Quitting Windows): Fix uses of
	'non-nil' and 'nil'.

2017-12-21  Philipp Stephani  <phst@google.com>

	Document that mode commands should be idempotent.

	* doc/lispref/modes.texi (Major Mode Conventions, Minor Mode
	Conventions): Document that the mode commands should be idempotent.

2017-12-21  Alan Mackenzie  <acm@muc.de>

	Fontify a CPP construct correctly when a comment follows without spaces

	Do this by removing a broken optimization in the state cache which put
	category text properties on a character between the end of the CPP construct
	and the beginning of the comment.  This can't work when there's no such
	character.

	* lisp/progmodes/cc-defs.el (c-cpp-delimiter, c-set-cpp-delimiters)
	(c-clear-cpp-delimiters, c-comment-out-cpps, c-with-cpps-commented-out)
	(c-with-all-but-one-cpps-commented-out): Remove.

	* lisp/progmodes/cc-engine.el (c-no-comment-end-of-macro): Return the comment
	start position rather than one character before it.
	(c-invalidate-state-cache, c-parse-state): Remove the invocations of
	c-with-all-but-one-cpps-commented-out and c-with-cpps-commented-out.

	* lisp/progmodes/cc-mode.el (c-neutralize-syntax-in-and-mark-CPP): Rename to
	c-neutralize-syntax-in-CPP and remove the bits which applied category
	properties.

	* lisp/progmodes/cc-langs.el (c-before-font-lock-functions): Incorporate the
	new name of the function c-neutralize-syntax-in-CPP.

2017-12-21  Eli Zaretskii  <eliz@gnu.org>

	Prevent infloop in redisplay on TTY frames

	* src/xdisp.c (extend_face_to_end_of_line): Avoid infloop when
	filling up display margins with the default face's background.
	(Bug#29789)

2017-12-21  Alan Mackenzie  <acm@muc.de>

	Fix loss of documentation face in certain CC Mode doc comment situations

	* lisp/progmodes/cc-fonts.el (c-font-lock-doc-comments): Take into account
	the possibility of font-lock-comment-delimiter-face.  Test rigorously for
	"/**" (etc.) being itself inside a literal, rather than just depending on the
	face of the previous character.

2017-12-21  Daiki Ueno  <ueno@gnu.org>

	Remove pinentry.el

	* lisp/epg.el (epg--start): Remove the use of pinentry.el.
	* lisp/net/pinentry.el: Remove (bug#27445).

2017-12-21  Ted Zlatanov  <tzz@lifelogs.com>

	Special-case %DUMBFW for GnuTLS between 3.2.5 and 3.5.1

	* src/gnutls.c: Introduce HAVE_GNUTLS_EXT__DUMBFW for GnuTLS >= 3.2.5.
	(Fgnutls_available_p): Use it.

2017-12-21  Andy Moreton  <andrewjmoreton@gmail.com>

	Work around GnuTLS version issues with %DUMBFW (tiny change)

	* src/gnutls.c: Introduce HAVE_GNUTLS_EXT_GET_NAME and use it.
	(init_gnutls_functions): Use it.
	(Fgnutls_available_p): Use it (Bug#25061). Fix Vlibrary_cache bug.

2017-12-20  Dmitry Gutov  <dgutov@yandex.ru>

	Merge branch 'widen-less' into emacs-26

2017-12-20  Glenn Morris  <rgm@gnu.org>

	* lisp/erc/erc.el (erc-shorten-server-name): Silence compiler warning.

2017-12-20  Glenn Morris  <rgm@gnu.org>

	Fix some more aliases to user options

	* lisp/cus-edit.el (custom-mode-hook):
	* lisp/erc/erc.el (erc-default-coding-system):
	* lisp/progmodes/python.el (python-indent, python-guess-indent)
	(python-shell-virtualenv-path)
	(python-shell-completion-module-string-code)
	(python-shell-completion-pdb-string-code, python-use-skeletons):
	Define aliases to user options before the options are defined.

2017-12-20  Glenn Morris  <rgm@gnu.org>

	Fix some flymake aliases

	* lisp/progmodes/flymake-proc.el (flymake-xml-program)
	(flymake-compilation-prevents-syntax-check, flymake-master-file-dirs)
	(flymake-master-file-count-limit, flymake-allowed-file-name-masks):
	* lisp/progmodes/flymake.el (flymake-start-syntax-check-on-find-file):
	Define aliases to user options before the options are defined.

2017-12-20  Glenn Morris  <rgm@gnu.org>

	Unbreak a fileio test on non-Mac OS X systems

	* test/src/fileio-tests.el (fileio-tests--symlink-failure):
	Don't use an undefined coding system.

2017-12-20  Robert Pluim  <rpluim@gmail.com>

	Fix updating scrollbar sizes when scaling is in effect

	* src/gtkutil.c (xg_update_scrollbar_pos): Update width of
	scrollbar when scaling is in effect.
	(xg_update_horizontal_scrollbar_pos): Update scrollbar size
	when scaling is in effect.

2017-12-20  Dmitry Gutov  <dgutov@yandex.ru>

	Widen in indent-for-tab-command in the normal case, too

	Fixing this obvious omission.
	* lisp/indent.el (indent--funcall-widened): New function.
	(indent-for-tab-command): Use it.

2017-12-19  Ted Zlatanov  <tzz@lifelogs.com>

	Collect GnuTLS extensions and use them to set %DUMBFW if supported

	* lisp/net/gnutls.el (gnutls-boot-parameters): Use it to set %DUMBFW
	only when it's supported as "ClientHello Padding" (Bug#25061).

	* src/gnutls.c (Fgnutls_available_p): Get extension names and
	put them in the GnuTLS capabilities, using a hard-coded limit
	of 100 since GnuTLS MAX_EXT_TYPES is not exported.

2017-12-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* test/lisp/emacs-lisp/derived-tests.el: Fix copy&paste leftovers

2017-12-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/subr.el (delayed-after-hook-functions): Rename from ...-forms

	(run-mode-hooks): `funcall` the functions instead of `eval`ing the forms.
	* lisp/emacs-lisp/derived.el (define-derived-mode): Push functions
	rather than forms (bug#29679).

2017-12-18  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/shr.el (shr-string-pixel-width): Return pixel-width,
	not position (bug#29734).

2017-12-18  Dmitry Gutov  <dgutov@yandex.ru>

	Replace the mention of c-indent-defun with js-indent-line

	* doc/lispref/text.texi (Mode-Specific Indent):
	Avoid mentioning c-indent-defun in the context of multi-mode
	indentation.

2017-12-17  Charles A. Roelli  <charles@aurox.ch>

	python.el doc fixes

	* lisp/progmodes/python.el (python-shell-accept-process-output):
	(python-shell-comint-end-of-output-p):
	(python-shell-first-prompt-hook):
	(python-info-beginning-of-backslash): Doc fixes.

2017-12-17  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Make 'mouse-drag-and-drop-region' more robust and customizable

	* lisp/mouse.el
	(mouse-drag-and-drop-region-cut-when-buffers-differ): New option
	to permit 'mouse-drag-and-drop-region' to cut text also when source
	and destination buffers differ.
	(mouse-drag-and-drop-region-show-tooltip): New option to toggle
	display of tooltip during mouse dragging on graphic displays.
	(mouse-drag-and-drop-region-show-cursor): New option to toggle
	moving point with mouse cursor during mouse dragging of region.
	(mouse-drag-and-drop-region): New face to highlight original
	text while dragging.
	(mouse-drag-and-drop-region): Make use of new options and face.
	Ignore errors during tracking.

2017-12-17  Oscar Fuentes  <ofv@wanadoo.es>

	Backport: Don't compare arguments that can be nil (Bug#28039)

	copy-region-as-kill can be called passing nil as `beg' and
	`end'. Magit does that, which caused an error when this advice was in
	effect.

	* lisp/ses.el (ses--advice-copy-region-as-kill): avoid comparison
	  unless `beg' and `end' are non-nil.

2017-12-17  Noam Postavsky  <npostavs@gmail.com>

	Don't mess up syntax-ppss cache in electric-pair (Bug#29710)

	In Emacs 25 and above, calling `scan-sexps', `parse-partial-sexp', or
	similar may update the syntax-ppss cache if
	`parse-sexp-lookup-properties' is non-nil.  Therefore, when calling
	any of these functions with a different than normal syntax-table, the
	cache must be cleaned afterwards.
	* lisp/elec-pair.el (electric-pair--with-uncached-syntax): New macro.
	(electric-pair--syntax-ppss, electric-pair--balance-info): Use it.

2017-12-17  Glenn Morris  <rgm@gnu.org>

	* etc/emacs.appdata.xml: Update file format.

2017-12-16  Alan Third  <alan@idiocy.org>

	Use utf-8-hfs-unix on macOS (Bug#29712)

	This is a quick fix for the Emacs 26 release. Do not merge to master.

	* test/src/fileio-tests.el (fileio-tests--symlink-failure): Override
	file-name-coding-system to utf-8-hfs-unix to prevent test failure.

2017-12-16  Alan Mackenzie  <acm@muc.de>

	* lisp/progmodes/cc-defs.el (c-version): Update to 5.33.1.

2017-12-16  Michael Albinus  <michael.albinus@gmx.de>

	Improve fix for Bug#29712

	* test/lisp/net/tramp-tests.el
	(tramp-test32-environment-variables-and-port-numbers):
	Adapt check for systems which do not support "echo -n".  (Bug#29712)

2017-12-16  Eli Zaretskii  <eliz@gnu.org>

	* doc/lispref/sequences.texi (Sequence Functions): Improve indexing.

2017-12-16  Eli Zaretskii  <eliz@gnu.org>

	Avoid reordering of output in 'shr-insert-document'

	* lisp/net/shr.el (shr-string-pixel-width): Preserve point across
	shr-pixel-column invocations.  (Bug#29734)

2017-12-16  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'invisible-p'

	* doc/lispref/display.texi (Invisible Text): Document the return
	value of 'invisible-p'.

	* src/xdisp.c (Finvisible_p): Rename the argument POS.  Doc fix.
	(Bug#29721)

2017-12-16  Martin Rudalics  <rudalics@gmx.at>

	Remove one more check that Vframe_list is non-nil

	* src/dispnew.c (check_glyph_memory): Remove no-longer-needed
	check that Vframe_list is non-nil, as FOR_EACH_FRAME no longer
	assumes that.

2017-12-16  Simen Heggestøyl  <simenheg@gmail.com>

	Fix off-by-one error in 'css--hex-color'

	* lisp/textmodes/css-mode.el (css--hex-color): Fix off-by-one error.

	* test/lisp/textmodes/css-mode-tests.el (css-test-hex-color): New test
	for 'css--hex-color'.

2017-12-16  Aaron Jensen  <aaronjensen@gmail.com>

	Save and restore text-pixel height and width of frames (Bug#28442)

	* lisp/frameset.el (frameset--record-relationships): Record
	text-pixel-height and text-pixel-width of frame.
	(frameset--restore-frame): Restore text-pixel-height and
	text-pixel-width of frame if available.  (Bug#28442)

2017-12-16  Noam Postavsky  <npostavs@gmail.com>

	Partially revert "Mention new strictness for &optional, &rest..."

	The changes to cl argument parsing are not backwards compatible, and
	cause inconvenience when writing macros (e.g., instead of doing '&aux
	,@auxargs', some more complicated conditionals would be required).
	The `cl-defstruct' macro makes use of this convenience when defining
	empty structs (Bug#29728).
	* lisp/emacs-lisp/cl-macs.el (cl--transform-lambda):
	(cl--do-&aux, cl--do-arglist): Undo strict checking of &rest, &key,
	and &aux.
	* test/lisp/emacs-lisp/cl-macs-tests.el (cl-macs-bad-arglist): Remove
	test.

2017-12-15  Glenn Morris  <rgm@gnu.org>

	* lisp/vc/smerge-mode.el (smerge-refine): Respect font-lock-mode.

	* lisp/vc/smerge-mode.el (smerge-refine): Replace obsolete alias.

2017-12-15  Paul Eggert  <eggert@cs.ucla.edu>

	FOR_EACH_FRAME no longer assumes frame-list

	This cleans up a recent fix related to Bug#29661.
	Suggested by Stefan Monnier in:
	https://lists.gnu.org/r/emacs-devel/2017-12/msg00544.html
	* src/frame.c (next_frame, prev_frame, delete_frame):
	Restore debugging checks that Vframe_list is non-nil,
	as FOR_EACH_FRAME no longer has these checks.
	(delete_frame): Remove no-longer-needed checks that Vframe_list is
	non-nil, as FOR_EACH_FRAME no longer assumes that.
	* src/frame.h (FOR_EACH_FRAME): Do not assume Vframe_list is non-nil.

2017-12-15  Eli Zaretskii  <eliz@gnu.org>

	* src/font.c (Ffont_info): Doc fix.  (Bug#29682)

2017-12-15  Basil L. Contovounesios  <contovob@tcd.ie>

	Modernise message.el face spec syntax

	* lisp/gnus/message.el (message-header-to, message-header-cc)
	(message-header-subject, message-header-newsgroups)
	(message-header-other, message-header-name, message-header-xheader)
	(message-separator, message-cited-text, message-mml):
	Use (DISPLAY . PLIST) face spec syntax as recommended in
	`(elisp) Defining Faces'.  (Bug#29405)

2017-12-15  Basil L. Contovounesios  <contovob@tcd.ie>

	Update message.el obsolete face aliases

	* lisp/gnus/message.el: (message-header-to, message-header-cc)
	(message-header-subject, message-header-newsgroups)
	(message-header-other, message-header-name, message-header-xheader)
	(message-separator, message-cited-text, message-mml):
	Use define-obsolete-face-alias.  (Bug#29405)

2017-12-15  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of TERM environment variable

	* doc/emacs/trouble.texi (Checklist):
	* doc/emacs/building.texi (Compilation Shell):
	* doc/emacs/misc.texi (Shell Options): Improve indexing of TERM.
	* doc/emacs/building.texi (Compilation Shell): Mention
	'comint-terminfo-terminal' in conjunction with the TERM value.

2017-12-15  Allen Li  <darkfeline@felesatra.moe>

	Add option to configure comint TERM

	* lisp/comint.el (comint-terminfo-terminal): New defcustom.
	(comint-term-environment): New function for setting terminal options
	(comint-exec-1): Use comint-term-environment.  (Bug#29583)
	* lisp/progmodes/compile.el (compilation-start): Use comint-term-environment.

	* etc/NEWS:
	* doc/emacs/misc.texi (Shell Options): Document the new option.

2017-12-15  Eli Zaretskii  <eliz@gnu.org>

	Better support utf-8-with-signature and utf-8-hfs in XML/HTML

	* lisp/international/mule.el (sgml-xml-auto-coding-function):
	Support UTF-8 with BOM and utf-8-hfs as variants of UTF-8, and
	obey the buffer's encoding if it is one of these variants, instead
	of re-encoding in UTF-8 proper.  (Bug#20623)

2017-12-15  Eli Zaretskii  <eliz@gnu.org>

	* lisp/menu-bar.el (menu-bar-mode): Doc fix.

2017-12-15  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29712 in tramp-tests.el

	* test/lisp/net/tramp-tests.el
	(tramp-test32-environment-variables-and-port-numbers):
	Skip for macOS.  (Bug#29712)

2017-12-15  Martin Rudalics  <rudalics@gmx.at>

	Don't run FOR_EACH_FRAME when there's no frame left (Bug#29961)

	This does not fix Bug#29961 but avoids that Emacs segfaults when
	trying to shut down because it lost connection to the X server.

	* src/dispnew.c (check_glyph_memory):
	* src/frame.c (delete_frame): Don't run FOR_EACH_FRAME when
	there's no frame left (Bug#29961).

2017-12-15  Glenn Morris  <rgm@gnu.org>

	* lisp/textmodes/tex-mode.el: Ensure uncompiled file is loadable.

2017-12-15  Ted Zlatanov  <tzz@lifelogs.com>

	Remember password change for IMAP in Gnus (Bug#29692)

	Reported by Trey Jackson <trey_jackson@mentor.com>.

	* lisp/gnus/mail-source.el (mail-source-fetch-imap): Check
	`mail-source-password-cache' for password.

2017-12-15  Ted Zlatanov  <tzz@lifelogs.com>

	Add %DUMBFW to the default GnuTLS priority strings

	* lisp/net/gnutls.el (gnutls-boot-parameters): Add %DUMBFW to
	the default priority strings (Bug#25061).

	* etc/NEWS: Mention it.

	* doc/misc/emacs-gnutls.texi (Help For Users): Point to the
	GnuTLS priority string documentation URL.

2017-12-15  Glenn Morris  <rgm@gnu.org>

	Small fixes prompted by make check-declare

	* lisp/frame.el (x-focus-frame): Update declaration.
	(ns-mouse-absolute-pixel-position): Fix declaration.
	* lisp/vc/diff-mode.el (diff-refine-hunk):
	Use smerge-refine-regions rather than obsolete alias.
	(smerge-refine-subst): Remove declaration, no longer relevant.

2017-12-15  Glenn Morris  <rgm@gnu.org>

	Fix some custom groups

	* lisp/vc/vc-hooks.el (vc-faces): Rename from vc-state-faces.
	* lisp/vc/cvs-status.el (cvs-status): Unused, remove.

2017-12-14  Alan Mackenzie  <acm@muc.de>

	Fix fontification of first declaration within a C++ lambda form.

	* lisp/progmodes/cc-engine.el (c-looking-at-or-maybe-in-bracelist): Cease
	spuriously recognizing the braces of a lambda form as a brace list when there
	is an "=" preceding the introductory brackets.

2017-12-14  Charles A. Roelli  <charles@aurox.ch>

	* src/data.c (Fadd_variable_watcher): Doc fix.

2017-12-14  Alan Mackenzie  <acm@muc.de>

	Fix misfontification of C++ member initialization list after "throw"

	* lisp/progmodes/cc-engine.el (c-forward-type): Stop recognizing a "type"
	starting with "throw", by using c-opt-type-modifier-prefix-key.

	* lisp/progmodes/cc-langs.el (c-type-modifier-prefix-kwds): New lang const
	which, in C++, doesn't contain "throw", otherwise like c-type-modifier-kwds.
	(c-opt-type-modifier-prefix-key): New lang const and var, a regexp matching
	any keyword in the previous lang const.

2017-12-14  Dmitry Gutov  <dgutov@yandex.ru>

	Consolidate 'widen' calls

	* lisp/progmodes/prog-mode.el (prog-indentation-context):
	Un-document all elements but the first.
	(prog-widen): Remove.
	(http://lists.gnu.org/archive/html/emacs-devel/2017-12/msg00321.html)

	* doc/lispref/text.texi (Mode-Specific Indent): Update.

	* lisp/progmodes/ruby-mode.el (ruby-calculate-indent):
	Don't call widen.

	* lisp/progmodes/python.el
	(python-indent-guess-indent-offset)
	(python-info-current-defun): Replace prog-widen with widen;
	these functions are not called during indentation.
	(python-indent-context)
	(python-indent--calculate-indentation)
	(python-info-dedenter-opening-block-message)
	(python-info-line-ends-backslash-p)
	(python-info-beginning-of-backslash)
	(python-info-continuation-line-p)
	(python-info-current-defun): Remove 'widen' calls.

	* lisp/indent.el (indent-according-to-mode)
	(indent-for-tab-command, indent-region): Move them here.

	* lisp/textmodes/mhtml-mode.el (mhtml-indent-line):
	Bind prog-indentation-context to one-element list.

2017-12-14  Martin Rudalics  <rudalics@gmx.at>

	Fix doc-string of Fbuffer_list

	* src/buffer.c (Fbuffer_list): Fix doc-string.

2017-12-14  Basil L. Contovounesios  <contovob@tcd.ie>

	Don't raise an extraneous frame (bug#29696)

	* lisp/gnus/gnus-art.el (gnus-article-read-summary-keys): Lookup
	summary buffer keys from article buffer without affecting window
	configuration (bug#29696).

2017-12-13  Noam Postavsky  <npostavs@gmail.com>

	Mention new strictness for &optional, &rest in arglists (Bug#29165)

	* etc/NEWS: Explain that '&optional' not followed by a variable is now
	an error.
	* lisp/emacs-lisp/cl-macs.el (cl--transform-lambda, cl--do-&aux)
	(cl--do-arglist): Also reject '&optional', '&rest', or '&aux' not
	followed by a variable for consistency.
	* test/lisp/emacs-lisp/cl-macs-tests.el (cl-macs-bad-arglist): New
	test.

2017-12-13  Alan Mackenzie  <acm@muc.de>

	Don't misfontify "foo ()" inside C++ initialization parentheses as a type

	Also recognize and handle function names introduced by "extern" inside a
	function.

	* lisp/progmodes/cc-engine.el (c-forward-decl-or-cast-1): Add a new element to
	the result list which is t when our declaration is, or is to be treated as,
	being at top level.

	* lisp/progmodes/cc-fonts.el (c-get-fontification-context): Detect being
	inside a C++ uniform initialization and return (not-decl nil) for this case.
	(c-font-lock-declarations): Use the new element 4 of the result of
	c-forward-decl-or-cast-1.

	* lisp/progmodes/cc-langs.el (c-make-top-level-kwds, c-make-top-level-key):
	New lang consts/vars.

2017-12-13  Glenn Morris  <rgm@gnu.org>

	Fixes for defcustoms, prompted by cus-test-opts

	* lisp/files.el (save-some-buffers-default-predicate):
	* lisp/time.el (display-time-world-list):
	* lisp/gnus/gnus-art.el (gnus-article-show-cursor):
	* lisp/progmodes/cc-vars.el (c-noise-macro-with-parens-names):
	* lisp/progmodes/verilog-mode.el (verilog-auto-wire-type):
	* lisp/textmodes/less-css-mode.el (less-css-output-directory)
	(less-css-output-file-name, less-css-input-file-name):
	* lisp/vc/emerge.el (emerge-metachars):
	* lisp/vc/vc-hg.el (vc-hg-symbolic-revision-styles):
	Fix :types.
	* lisp/net/newst-backend.el (newsticker-url-list-defaults): Fix url.

2017-12-13  Glenn Morris  <rgm@gnu.org>

	* lisp/net/newst-backend.el (newsticker--raw-url-list-defaults):
	Update.

	* lisp/htmlfontify.el (hfy-which-etags): Fix it.

2017-12-13  Glenn Morris  <rgm@gnu.org>

	Add missing :version tags revealed by cusver-check

	* lisp/comint.el (comint-move-point-for-matching-input):
	* lisp/epa.el (epa-replace-original-text):
	* lisp/image-dired.el (image-dired-cmd-optipng-program)
	(image-dired-cmd-optipng-options):
	* lisp/emacs-lisp/bytecomp.el (byte-compile-cond-use-jump-table):
	* lisp/gnus/gnus-cloud.el (gnus-cloud-storage-method)
	(gnus-cloud-interactive):
	* lisp/net/mailcap.el (mailcap-user-mime-data):
	* lisp/progmodes/cc-vars.el (c-asymmetry-fontification-flag)
	(c-noise-macro-names, c-noise-macro-with-parens-names):
	* lisp/progmodes/flymake.el (flymake-start-on-flymake-mode)
	(flymake-wrap-around):
	* lisp/progmodes/grep.el (grep-use-null-filename-separator):
	* lisp/progmodes/js.el (js-indent-align-list-continuation):
	* lisp/progmodes/perl-mode.el (perl-flymake-command):
	* lisp/progmodes/python.el (python-flymake-command)
	(python-flymake-command-output-pattern, python-flymake-msg-alist):
	* lisp/progmodes/ruby-mode.el (ruby-flymake-use-rubocop-if-available)
	(ruby-rubocop-config):
	* lisp/textmodes/less-css-mode.el (less-css):
	* lisp/textmodes/tex-mode.el (tex-chktex-program)
	(tex-chktex-extra-flags): Add missing :version tags.

2017-12-13  Glenn Morris  <rgm@gnu.org>

	Escape column-zero doc parens

	* lisp/htmlfontify.el (hfy-display-class):
	* lisp/calendar/icalendar.el (icalendar--do-create-ical-alarm):
	* lisp/net/shr.el (shr-external-rendering-functions):
	* lisp/progmodes/cc-vars.el (c-asymmetry-fontification-flag):
	* lisp/textmodes/tildify.el (tildify-tildify):
	Escape column-zero doc parens.  A shame bug#21871 remains unfixed.

2017-12-12  Alan Third  <alan@idiocy.org>

	Remove ObjC blocks (Bug#23753)

	* src/macfont.m (macfont_get_glyph_for_character):
	(mac_font_get_glyphs_for_variants): Inline Objective-C blocks.

	(cherry picked from commit 4590f1d768adbb2120a2b02c614f7ed3b21a4a3e)

2017-12-12  Eli Zaretskii  <eliz@gnu.org>

	Import the latest IVD_Sequences.txt

	* admin/unidata/IVD_Sequences.txt: New version from
	http://www.unicode.org/ivd/, the 2017-12-12 version of the Unicode
	Ideographic Variation Database.

	* src/macuvs.h: Regenerated.

2017-12-11  Max  <mu@magi.net.ru>  (tiny change)

	Fix dired-do-compress when tar doesn't default to stdin (Bug#29094)

	* lisp/dired-aux.el (dired-compress-file-suffixes): Use argument '-f-'
	to write to stdout rather than relying on the default (the choice of
	default is decided when compiling tar, BSD systems usually set it to a
	tape drive).  Drop '-v', since the output is not used anywhere.

2017-12-11  Noam Postavsky  <npostavs@gmail.com>

	Suppress warnings during elisp completion macroexpansion

	Errors are already suppressed, therefore it is logical to suppress
	warnings as well.  Some macros (e.g., use-package) may produce
	warnings when given the `elisp--witness--lisp' symbol.
	* lisp/progmodes/elisp-mode.el (elisp--local-variables): Let-bind
	warning-minimum-log-level to :emergency.

2017-12-11  Chunyang Xu  <xuchunyang.me@gmail.com>

	* lisp/progmodes/verilog-mode.el (verilog-mode): Fix typo (Bug#24410).

2017-12-11  Michael Albinus  <michael.albinus@gmx.de>

	Make tramp-interrupt-process more robust

	* lisp/net/tramp.el (tramp-interrupt-process): Fall back to
	the default implementation if there's no success.

2017-12-11  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make quail-input-method work when inhibit-read-only is non-nil (bug#29504)

	* lisp/international/quail.el (quail-input-method): Work not only
	when buffer-read-only is nil but also when inhibit-read-only is non-nil
	(bug#29504).

2017-12-10  Eli Zaretskii  <eliz@gnu.org>

	Fix 'fontset-name-p'

	* lisp/international/fontset.el (fontset-name-p): Make the
	function work with full fontset names and fontset alias names.

2017-12-10  Eli Zaretskii  <eliz@gnu.org>

	Fix fontset documentation inconsistencies for bug#29630

	* doc/lispref/display.texi (Face Attributes): Don't document
	:family as accepting a fontset.  Document that :font accepts a
	fontset.

	* lisp/faces.el (set-face-attribute): Doc fix.

2017-12-10  Martin Rudalics  <rudalics@gmx.at>

	Remove sentence from child frames section in Elisp manual

	* doc/lispref/frames.texi (Child Frames): Remove one sentence.
	Suggested by Bob Weiner <rsw@gnu.org>.

2017-12-10  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes in 'font-at' after 'set-fontset-font'

	* src/fontset.c (free_realized_fontsets): Call
	recompute_basic_faces, so that the basic faces are available to
	any Lisp that calls this function, e.g. via set-fontset-font.
	(Bug#29632)

2017-12-10  Ted Zlatanov  <tzz@lifelogs.com>

	* lisp/files-x.el (connection-local-set-profile-variables): Fix docstring.

2017-12-09  Ted Zlatanov  <tzz@lifelogs.com>

	Add /etc/ssl/cert.pem to gnutls-trustfiles for macOS

	Problem reported by Mark Ferlatte (Bug#28603).
	* lisp/net/gnutls.el (gnutls-trustfiles): Add /etc/ssl/cert.pem for macOS.

2017-12-09  Eli Zaretskii  <eliz@gnu.org>

	Fix tool-tip display when display margins are non-zero by default

	* src/buffer.h (bset_left_margin_cols, bset_right_margin_cols):
	New inline functions.
	* src/xfns.c (Fx_show_tip):
	* src/w32fns.c (Fx_show_tip): Force display margins of the tip
	buffer to zero, as it will be displayed in a pseudo-window, which
	doesn't support display margins.  (Bug#29627)

2017-12-09  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Handle hash tables and vectors when reading/writing EIEIO objects

	* lisp/emacs-lisp/eieio.el (eieio-override-prin1): EIEIO objects
	  printed with `prin1' can no longer be read with `read'. Make sure
	  they are printed with object-write instead, even when they're inside
	  hash tables and vectors.
	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-validate/fix-slot-value):
	  Check for written representations of objects inside hash tables and
	  vectors, and reconstruct them.

2017-12-09  Eli Zaretskii  <eliz@gnu.org>

	Improve interactive debugging commands in xdisp.c

	* src/xdisp.c (Fdump_glyph_row, Fdump_tool_bar_row): Allow to
	specify ROW via prefix argument.  Fix the doc strings.

2017-12-09  Eli Zaretskii  <eliz@gnu.org>

	Fix calculation of continuation_pixel_width in display engine

	* src/xdisp.c (display_line): Remove incorrect increment of
	it->continuation_pixel_width when word-wrap is used.  (Bug#29594)

2017-12-09  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'save-abbrevs'.

	* doc/emacs/abbrevs.texi (Saving Abbrevs): Document the 'silently'
	value of 'save-abbrevs'.  Suggested by Alex Branham
	<alex.branham@gmail.com> in emacs-manual-bugs@gnu.org.

2017-12-09  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of Dired

	* doc/emacs/dired.texi (Dired): Mention that the Dired buffer can
	be made modifiable in Wdired.  Suggested by Alex Branham
	<alex.branham@gmail.com> in emacs-manual-bugs@gnu.org.

2017-12-09  Eli Zaretskii  <eliz@gnu.org>

	* lisp/bookmark.el (bookmark-alist): Doc fix.  (Bug#29551)

2017-12-08  Michael Albinus  <michael.albinus@gmx.de>

	Minor Tramp fixes

	* lisp/net/tramp-gvfs.el (tramp-gvfs-do-copy-or-rename-file):
	Fix a bug when renaming.

	* test/lisp/net/tramp-tests.el (tramp-test21-file-links): Extend test.
	(tramp-test42-delay-load, tramp-test42-remote-load-path):
	Skip unless Emacs >= 26.

2017-12-08  Glenn Morris  <rgm@gnu.org>

	* lisp/help-mode.el (help-function-def):
	Allow help-make-xrefs to call with one argument.  (Bug#29611)

2017-12-07  Martin Rudalics  <rudalics@gmx.at>

	Fix doc-string of 'display-buffer-in-side-window'

	* lisp/window.el (display-buffer-in-side-window): In doc-string
	clarify why the window returned gets dedicated to its buffer.

2017-12-06  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29579

	* lisp/files.el (file-name-non-special):
	Inhibit `file-name-handler-alist' only for some operations.
	Add missing operations.  (Bug#29579)

	* lisp/net/tramp-compat.el (tramp-compat-file-name-quote):
	Do not quote if it is quoted already.

	* lisp/net/tramp-smb.el (tramp-smb-handle-insert-directory):
	Use `copy-tree' but `copy-sequence'.

	* lisp/net/tramp.el (tramp-handle-file-truename): Handle several
	trailing slashes correctly.

	* test/lisp/net/tramp-tests.el (tramp-test11-copy-file)
	(tramp-test12-rename-file, tramp-test24-file-acl)
	(tramp-test25-file-selinux, tramp--test-check-files):
	Handle also quoted file names.
	(tramp-test21-file-links): Fix file name quoting test.
	(tramp-test24-file-acl): Be more robust for "smb" method.
	(tramp-test35-make-auto-save-file-name): Enable hidden test cases.

2017-12-06  Rasmus  <rasmus@gmx.us>

	Backport: Update Org to v9.1.4

	Please note this is a bugfix release. See etc/ORG-NEWS for details.

	(cherry picked from commit 567b5efe1f338c10c574758fb968915c5c34c909)

2017-12-06  Martin Rudalics  <rudalics@gmx.at>

	In windows.texi mention special splitting behavior of side and atomic windows

	* doc/lispref/windows.texi (Splitting Windows): Add note about
	and links to side and atomic windows.

2017-12-05  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/gnus/gnus-group.el (gnus-group-mode-map):
	Bind [follow-link] to mouse-face, not 'mouse-face (bug#29538).

2017-12-04  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warning in xterm.c

	* src/xterm.c (x_draw_underwave): Move the declaration of
	'thickness' to the non-USE_CAIRO branch, to avoid compiler
	warning.  (Bug#29567)

2017-12-04  Eli Zaretskii  <eliz@gnu.org>

	* README: Document all the top-level directories.  (Bug#29558)

2017-12-04  Glenn Morris  <rgm@gnu.org>

	Don't enable erc modules on simply loading erc.el

	* lisp/erc/erc.el (erc-modules): Use default :initialize.  (Bug#29417)

2017-12-03  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow shr to use data: URLs without encoding

	* lisp/net/shr.el (shr-image-from-data): Don't bug out on
	image data: URLs that have no base64 encoding like
	(shr-image-from-data
	"text/html,%3Ch1%3EHello%2C%20World!%3C%2Fh1%3E").

2017-12-03  E. Choroba  <choroba@matfyz.cz>  (tiny change)

	Don't add newlines in minibuffer history

	* lisp/simple.el (next-line-or-history-element): Bind
	next-line-add-newlines to nil.  (Bug#29529)

2017-12-03  Syohei YOSHIDA  <syohex@gmail.com>

	modhelp.py: Support Python 3 (Bug#24954)

	* modules/modhelp.py: 'print' statement was removed in Python
	3.  'print' function should be used instead of 'print' statement.

2017-12-03  Noam Postavsky  <npostavs@gmail.com>

	Use forward slashes for python w32 config example (Bug#21656)

	* lisp/progmodes/python.el: Use forward slashes for Windows path
	example, it doesn't require doubling of slashes which reduces chances
	of confusion.

2017-12-03  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug in i18n/l10n optimization

	This fixes a off-by-one buffer overrun bug introduced in
	2017-06-04T15:39:37Z!eggert@cs.ucla.edu.  Problem uncovered by an
	experimental version of Emacs built with -fcheck-pointer-bounds
	and running on Intel MPX hardware.
	* src/editfns.c (styled_format): Avoid overrunning internal buffers.

2017-12-02  Noam Postavsky  <npostavs@gmail.com>

	Let autoload-compute-prefix be set file-locally (Bug#29471)

	* lisp/emacs-lisp/autoload.el (autoload-compute-prefixes): Mark
	boolean values as safe.

2017-12-02  Noam Postavsky  <npostavs@gmail.com>

	Improve edit-kbd-macro prompting in case of remapped keys (Bug#29399)

	* lisp/edmacro.el (edit-kbd-macro): Use substitute-command-keys to
	present the current bindings in the prompt.  Check the the
	non-remapped binding of the entered key sequence as well.

2017-12-02  Lele Gaifax  <lele@metapensiero.it>

	Add tests on electric-indentation and Python multiline strings (Bug#29305)

	* test/lisp/progmodes/python-tests.el
	(python-indent-electric-comma-inside-multiline-string,
	python-indent-electric-comma-after-multiline-string): New tests.

2017-12-02  Noam Postavsky  <npostavs@gmail.com>

	Disable electric indent for python strings (Bug#29305)

	* lisp/progmodes/python.el (python-indent-post-self-insert-function):
	Do nothing when point or beginning of line is in string.

2017-12-02  Yuuki Harano  <masm-emacs@masm11.ddo.jp>  (tiny change)

	Fix buffer overflow in fontname conversion (Bug#29523)

	* src/nsterm.m (ns_xlfd_to_fontname): Fix sscanf format.

2017-12-02  Eli Zaretskii  <eliz@gnu.org>

	Fix byte compilation of files with leading directories

	* lisp/emacs-lisp/bytecomp.el (byte-compile-file): Pass basename
	of target-file to make-temp-file, in case target-file includes a
	leading directory that might not exist under TMPDIR.  See
	http://lists.gnu.org/archive/html/emacs-devel/2017-11/msg00680.html
	for the details.

2017-12-02  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/files.el (make-backup-file-name-1): Fix scoping error.

2017-12-02  Michael Albinus  <michael.albinus@gmx.de>

	Revert Tramp commit from 2017-11-20

	* lisp/net/tramp.el (tramp-drop-volume-letter)
	(tramp-handle-find-backup-file-name): Revert change from
	2017-11-20.  Emacs' `make-backup-file-name-1' handles this
	case now.

2017-12-02  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of buffer-list commands and features

	* doc/emacs/buffers.texi (List Buffers): Add a cross-reference to
	"Several Buffers", to establish a relation between the two
	sections.
	(Buffer Menus): Expand on customizability of alternative buffer
	menu offered by bs.el.  Mention IBuffer.
	Suggested by Alex Branham <alex.branham@gmail.com> in
	emacs-manual-bugs@gnu.org.

2017-12-02  Eli Zaretskii  <eliz@gnu.org>

	Fix backing up remote files in local directories on MS-Windows

	* lisp/files.el (make-backup-file-name-1): Support remote file
	names correctly when they are backed up into a local directory on
	MS-Windows and MS-DOS.  (Bug#29440)

2017-12-02  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/mule.texi (Output Coding): Clarify sendmail coding.

2017-12-01  John Wiegley  <johnw@newartisans.com>

	Revert "Fix backing up remote files in local directories on MS-Windows"

	This reverts commit 8c8b6732882248df4ca3b687e0a4b4e5e4ab3777.

2017-12-01  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in ELisp manual

	* doc/lispref/sequences.texi (Sequence Functions): Fix the example
	of using 'seq-uniq'.  (Bug#29524)

2017-12-01  Eli Zaretskii  <eliz@gnu.org>

	* lisp/composite.el (find-composition): Fix a typo in the doc string.

2017-12-01  Eli Zaretskii  <eliz@gnu.org>

	Fix backing up remote files in local directories on MS-Windows

	* lisp/files.el (make-backup-file-name-1): Support remote file
	names correctly when they are backed up into a local directory on
	MS-Windows and MS-DOS.  (Bug#29440)

2017-12-01  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Fix vertical cursor motion in pixel-scroll.el

	* lisp/pixel-scroll.el (pixel-scroll-up): Move cursor down
	regardless of whether EOB is shown at the top.
	(pixel-scroll-down) Move cursor up regardless of whether BOB
	is shown at the top.  (Bug#29374)

2017-12-01  Basil L. Contovounesios  <contovob@tcd.ie>

	Fix typos in doc strings of message.el

	* lisp/gnus/message.el (message-header-to)
	(message-header-subject, message-header-newsgroups)
	(message-header-other): Fix typos in doc strings.  (Bug#29405)

2017-12-01  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in the Emacs manual

	* doc/emacs/abbrevs.texi (Abbrev Concepts): Fix a typo.  Reported
	by clemens.radermacher@posteo.de in emacs-manual-bugs@gnu.org.

2017-12-01  Eli Zaretskii  <eliz@gnu.org>

	Improve the documentation of 'table-insert-sequence'

	* doc/emacs/text.texi (Table Misc): Fix the description of
	'table-insert-sequence'.  Reported by jack <jackh@gmx.co.uk> in
	emacs-manual-bugs@gnu.org.

2017-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	Port better to QNX

	Problem reported by Elad Lahav on emacs-devel.
	* configure.ac: On QNX, default CC to qcc (a GCC wrapper),
	and default LDFLAGS to -N2MB so that the initial stack size
	is not too small.  Also, fix misspelling of ‘qnxnto’.

2017-11-30  Michael Albinus  <michael.albinus@gmx.de>

	Make tramp-test42-auto-load more robust

	* test/lisp/net/tramp-tests.el (tramp-test42-auto-load):
	Make it more robust.  Don't skip.

2017-11-30  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertions in find-composition

	* src/font.c (font_range): If called with STRING non-nil and FACE
	a NULL pointer, compute face by calling face_at_string_position.
	(Bug#29506)

	* lisp/composite.el (find-composition): Doc fix.

2017-11-29  Glenn Morris  <rgm@gnu.org>

	Restore obsolete method of changing byte-compile-dest-file

	* lisp/emacs-lisp/bytecomp.el (byte-compile-dest-file):
	Restore seven-year obsolete feature that was removed for six months,
	since automake uses it.

2017-11-29  Michael Albinus  <michael.albinus@gmx.de>

	Some minor Tramp corrections

	* lisp/net/tramp.el (tramp-handle-directory-file-name):
	Handle several trailing slashes correctly.
	(tramp-handle-file-selinux-context): New defun.

	* lisp/net/tramp-adb.el (tramp-adb-file-name-handler-alist):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist):
	* lisp/net/tramp-smb.el (tramp-smb-file-name-handler-alist):
	Use `tramp-handle-file-selinux-context'.

	* test/lisp/net/tramp-tests.el (tramp-test06-directory-file-name):
	Extend test.
	(tramp-test17-insert-directory): Make check more robust.
	(tramp-test42-auto-load): Combine several let forms.
	(tramp-test42-delay-load, tramp-test42-recursive-load)
	(tramp-test42-remote-load-path, tramp-test43-unload): Rename.

2017-11-29  Tino Calancha  <tino.calancha@gmail.com>

	* doc/misc/url.texi (http/https): Fix typo

2017-11-29  Glenn Morris  <rgm@gnu.org>

	Remove some bogus definition-prefixes from loaddefs

	* lisp/emacs-lisp/autoload.el (autoload-generate-file-autoloads):
	Don't register a definition prefix from define-erc-module,
	which adds an erc- prefix to its argument.

2017-11-28  Robert Pluim  <rpluim@gmail.com>

	Shell-quote wildcards when invoking 'vc-git-grep'

	* lisp/vc/vc-git.el (vc-git-grep): Apply shell quoting to
	filename wildcards to ensure globbing is done by git rather
	than the shell.  (Bug#29303)

2017-11-28  Kaushal Modi  <kaushal.modi@gmail.com>

	Update documentation of '.dir-locals-2.el'

	See https://lists.gnu.org/r/emacs-devel/2017-11/msg00649.html
	for more details.
	* lisp/files.el (dir-locals-file-2): Remove unused constant.
	* lisp/files.el (dir-locals-file): Mention ".dir-locals-2.el" in
	the doc string.
	* doc/lispref/variables.texi (Directory Local Variables): Mention
	".dir-locals-2.el".
	* etc/NEWS: Replace `dir-locals-file-2' mention with
	`dir-locals-file'.

2017-11-27  Noam Postavsky  <npostavs@gmail.com>

	* src/w32heap.c (DUMPED_HEAP_SIZE) [_WIN64]: Bump to 22 MiB.

2017-11-27  Glenn Morris  <rgm@gnu.org>

	A few small doc fixes for bytecomp.el

	* lisp/emacs-lisp/bytecomp.el (emacs-lisp-file-regexp)
	(byte-compile-dest-file-function, byte-compile-dest-file): Doc fixes.

2017-11-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/lread.c (syms_of_lread): Fix thinko in commit b1573a97e17b5

2017-11-27  Glenn Morris  <rgm@gnu.org>

	* lisp/tree-widget.el (tree-widget-end-guide): Escape it.  (Bug#27797)

2017-11-27  Eli Zaretskii  <eliz@gnu.org>

	Fix ELisp "Warning Tips"

	* doc/lispref/tips.texi (Warning Tips): Clarify when to use
	'require' wrapped by 'eval-when-compile'.  (Bug#29462)

2017-11-27  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29163

	* lisp/net/tramp.el (tramp-autoload-file-name-regexp):
	Do not use "\\'" in regexp.  (Bug#29163)
	(top) Do not run (tramp-register-autoload-file-name-handlers)
	when loading tramp.el.

	* test/lisp/net/tramp-tests.el (tramp--test-mock-p): New defun.
	(tramp-test32-environment-variables-and-port-numbers)
	(tramp-test41-asynchronous-requests): Use it.
	(tramp-test42-auto-load): New test.
	(tramp-test43-recursive-load, tramp-test44-remote-load-path)
	(tramp-test45-delay-load, tramp-test46-unload): Rename.

2017-11-27  Paul Eggert  <eggert@union>

	Harden exec_byte_code against redefining 'error'

	Problem discovered by configuring with --enable-gcc-warnings on
	Ubuntu 17.10 x86-64 with gcc (Ubuntu 7.2.0-8ubuntu3).
	* src/bytecode.c (exec_byte_code): Call the C error function
	instead of the Lisp one, so that the Emacs interpreter does not go
	haywire if the user redefines the Lisp error function.

2017-11-27  Gemini Lasswell  <gazally@runbox.com>

	Fix Edebug specs for if-let* and and-let* (Bug#29236)

	* test/lisp/emacs-lisp/subr-x-tests.el (if-let*, if-let):
	Change Edebug spec to cause Edebug to instrument tests the
	results of which are not bound to symbols (the (VALUEFORM)
	case).
	(and-let*): Change Edebug spec to allow empty body.

	*test/lisp/emacs-lisp/subr-x-tests.el:
	(subr-x-and-let*-test-group-1): Add missing quote to erroneous
	form so Edebug will work on this test.

2017-11-26  Gemini Lasswell  <gazally@runbox.com>

	Fix Edebug's handling of dotted specs (bug#6415)

	* lisp/emacs-lisp/cl-macs.el (cl-destructuring-bind): Use
	cl-macro-list1 instead of cl-macro-list in Edebug spec.

	* lisp/emacs-lisp/edebug.el (edebug-after-dotted-spec): Delete
	unused variable.
	(edebug-dotted-spec): Add docstring.
	(edebug-match-specs): Allow &optional and &rest specs to
	match nothing at the tail of a dotted form. Handle matches of
	dotted form tails which return non-lists.

	* test/lisp/emacs-lisp/edebug-tests.el (edebug-tests-dotted-forms):
	New test.

	* test/lisp/emacs-lisp/edebug-resources/edebug-test-code.el:
	(edebug-test-code-use-destructuring-bind): New function.

2017-11-26  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of "constant" symbols

	* src/font.c (syms_of_font) <font-weight-table, font-slant-table>
	<font-width-table>:
	* src/data.c (syms_of_data) <most-positive-fixnum>
	<most-negative-fixnum>:
	* src/buffer.c (syms_of_buffer) <enable-multibyte-characters>:
	Mention in the doc strings that these variables are read-only.

	* doc/lispref/variables.texi (Creating Buffer-Local): Document
	that making a constant variable buffer-local signals an error.
	* doc/lispref/variables.texi (Constant Variables):
	* doc/lispref/errors.texi (Standard Errors): More accurate and
	up-to-date documentation of which symbols cannot be assigned
	values.

2017-11-26  Paul Eggert  <eggert@cs.ucla.edu>

	maint: shorten https://lists.gnu.org/archive/html/... links

2017-11-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2017-11-23 stat: work around Solaris bug with tv_nsec < 0
	2017-11-12 maint: shorten https://lists.gnu.org/archive/html/... links
	* build-aux/config.sub, doc/misc/texinfo.tex, lib/allocator.h:
	* lib/fstatat.c, lib/intprops.h, lib/lstat.c, lib/signal.in.h:
	* lib/stat-time.h, lib/stdio-impl.h, lib/stdio.in.h:
	* lib/timespec.h, m4/alloca.m4, m4/extern-inline.m4:
	* m4/faccessat.m4, m4/fstatat.m4, m4/gnulib-common.m4:
	* m4/lstat.m4, m4/std-gnu11.m4, m4/sys_types_h.m4:
	* m4/vararrays.m4:
	Copy from Gnulib.

2017-11-26  Paul Eggert  <eggert@cs.ucla.edu>

	Work around GCC bug 80776 on Fedora 27 x86

	* src/buffer.c (Fgenerate_new_buffer_name): Pacify GCC 7.2.1
	20170915 (Red Hat 7.2.1-2) on i686 with -Wformat-overflow -O2 by
	using XINT rather than XFASTINT and by adding an eassume.  This
	works around GCC bug 80776.

2017-11-25  Paul Eggert  <eggert@cs.ucla.edu>

	Tweak copy-file, rename-file doc

	* src/fileio.c (Fcopy_file, Frename_file): Tweak the recent change
	slightly, as NEWNAME is treated as a directory name depending only
	on the contents of the NEWNAME string, and independently of
	whether NEWNAME names a directory (i.e., whether the directory
	exists) (Bug#29362).

2017-11-25  Tom Tromey  <tom@tromey.com>

	Change font-lock-extend-region-multiline handling in mhtml-mode

	Bug#29159
	* lisp/textmodes/mhtml-mode.el (mhtml-mode): Remove
	font-lock-extend-region-multiline from
	font-lock-extend-region-functions.
	(mhtml--extend-font-lock-region): Call font-lock-extend-region-multiline.

2017-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Minor cleanup in tramp-gvfs-handle-file-local-copy

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-local-copy):
	Move error message up.

2017-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Add test for Bug#29423 in Tramp.

	* test/lisp/net/tramp-tests.el (tramp-test17-insert-directory):
	Add test for Bug#29423.

2017-11-25  Eli Zaretskii  <eliz@gnu.org>

	Avoid jumbled order in HTML rendered by shr.el

	* lisp/net/shr.el (shr-render-td): Preserve point, as
	shr-render-td-1 might move it as a side effect of
	save-window-excursion.  (Bug#29348)

2017-11-25  Eli Zaretskii  <eliz@gnu.org>

	Make sure 'dired-filename' property is always put by ls-lisp

	* lisp/ls-lisp.el (ls-lisp-classify): Do not put the
	'dired-filename' text property on the file name here...
	(ls-lisp-classify-file): ...put it here instead.  (Bug#29423)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	A better solution for bug#29347

	* src/thread.c (really_call_select): Don't try to take the global
	lock if the same thread is already holding it.  (Bug#29347)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Avoid a hang after C-g while sit-for on a Unix TTY

	* src/thread.c (acquire_global_lock): Don't try to take the global
	lock if the same thread is already holding it.  (Bug#29347)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Improve the doc string of 'list-packages'

	* lisp/emacs-lisp/package.el (list-packages): Describe in the doc
	string the columns shown by the command.  (Bug#29420)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Improve discoverability of 'defvar' for suppressing warnings

	* doc/lispref/compile.texi (Compiler Errors): Add index entries.
	* doc/lispref/variables.texi (Defining Variables): Mention that
	defvar with no value is used for suppressing compiler warnings.
	(Bug#29400)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Improve discoverability of 'read-buffer-completion-ignore-case'

	* lisp/window.el (switch-to-buffer)
	(switch-to-buffer-other-window, switch-to-buffer-other-frame):
	Mention 'read-buffer' in the doc string.  (Bug#29389)

	* doc/emacs/buffers.texi (Select Buffer): Add a cross-reference to
	where 'read-buffer-completion-ignore-case' is documented.

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of self-insert-uses-region-functions

	* lisp/simple.el (self-insert-uses-region-functions): Clarify the
	doc string.
	* lisp/delsel.el (delete-selection-uses-region-p): Mention
	'self-insert-command' in the doc string.  (Bug#29373)

	* doc/lispref/text.texi (Commands for Insertion): Mention
	'self-insert-uses-region-functions'.
	* doc/lispref/modes.texi (Keymaps and Minor Modes): Add a
	cross-reference to "Commands for Insertion".

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Reflect changes in copy-file and rename-file in doc strings

	* src/fileio.c (Fcopy_file, Frename_file): Mention in the doc
	strings that directory names must end in a slash.  (Bug#29362)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	* lisp/progmodes/cc-vars.el (c-offsets-alist): Doc fix.  (Bug#29407)

2017-11-24  Eli Zaretskii  <eliz@gnu.org>

	Reorder type predicates in ELisp manual

	* doc/lispref/objects.texi (Type Predicates): Restore alphabetical
	order of listed predicates.  (Bug#29411)

2017-11-23  Eli Zaretskii  <eliz@gnu.org>

	Fix backward scrolling in buffers with header-line

	* src/window.c (window_scroll_pixel_based): Account for the
	header-line when comparing Y coordinate with the last_visible_y.
	(Bug#29325)

2017-11-22  Glenn Morris  <rgm@gnu.org>

	* lisp/bindings.el (buffer-file-coding-system):
	Add explicit permanent-local mark.

	* src/fns.c (syms_of_fns) <overriding-plist-environment>: Doc fix.

2017-11-22  Alan Third  <alan@idiocy.org>

	Fix incorrect interaction of drag/drop and double click (bug#29121)

	* src/nsterm.m (EmacsView::performDragOperation): Drag and drop
	doesn't use ns-input-file.

2017-11-22  Glenn Morris  <rgm@gnu.org>

	* lisp/menu-bar.el (menu-bar-options-save):
	Add display-line-numbers-type.

	* lisp/menu-bar.el (menu-bar-options-save):
	Add global-display-line-numbers-mode.  (Bug#28396)

	* lisp/follow.el (follow-mode): Restore mode line lighter.  (Bug#28495)

2017-11-22  Dmitry Gutov  <dgutov@yandex.ru>

	Extract the common part of ruby-flymake-simple and ruby-flymake-rubocop

	* lisp/progmodes/ruby-mode.el (ruby-flymake-simple)
	(ruby-flymake-rubocop):
	Extract the common part as ruby-flymake--helper.
	(ruby--rubocop-flymake-proc): Remove.  Use the first proc
	variable instead.

2017-11-22  Dmitry Gutov  <dgutov@yandex.ru>

	Add Rubocop Flymake backend

	* lisp/progmodes/ruby-mode.el (ruby-flymake-command):
	Inline the value.  There are no known substitutes.
	(ruby-flymake): Rename to `ruby-flymake-simple' and simplify
	the docstring.
	(ruby-flymake-use-rubocop-if-available): New option.
	(ruby--rubocop-flymake-proc): New variable.
	(ruby-rubocop-config): New option.
	(ruby-flymake-rubocop, ruby-flymake-auto): New functions.
	(ruby-mode): Use `ruby-flymake-auto'.

2017-11-21  Noam Postavsky  <npostavs@gmail.com>

	Update nt/INSTALL.W64 (Bug#28601)

	* nt/INSTALL.W64 (Download and install MinGW-w64 and MSYS2): Move
	suggestion about modifying PATH to...
	(Test Emacs): ... here.
	(Run configure): Remove the unnecessary setting of PKG_CONFIG_PATH.
	(Troubleshooting): New section, includes suggestion to check
	PKG_CONFIG_PATH.

2017-11-21  Charles A. Roelli  <charles@aurox.ch>

	Remove incorrect NEWS item about VC state indicator (Bug#28817)

	* etc/NEWS (VC and related modes): Remove news item about the VC
	state indicator.  This should have been done with commit 7882dc6
	of 2016-03-06 'Revert "Use colors in the VC mode lines"'.

2017-11-21  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/byte-run.el (defsubst): Doc fix.

2017-11-21  Alan Mackenzie  <acm@muc.de>

	Make c-defun-name analyze more thoroughly a function type which is a struct

	This fixes bug #29293.

	* lisp/progmodes/cc-cmds.el (c-defun-name): When a struct (etc.) type is
	encountered, check whether it is the return type of a function rather than a
	declaration of the struct itself.  Similarly adapt the cond arm which deals
	with functions properly to recognize struct return types.

2017-11-21  Glenn Morris  <rgm@gnu.org>

	Avoid bogus abbreviated file names if HOME changes

	* lisp/files.el (abbreviate-file-name):
	If HOME changes, ignore `abbreviated-home-dir'.  (Bug#19657#20)
	* test/lisp/files-tests.el (files-test-abbreviated-home-dir): New.

2017-11-21  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/byte-run.el (inline): Give it a doc.

2017-11-21  Jay Kamat  <jaygkamat@gmail.com>  (tiny change)

	Fix erc keep-place module with new defaults (Bug#29111)

	* lisp/erc/erc-goodies.el (erc-keep-place): Allow erc
	keep-place to continue working with
	switch-to-buffer-preserve-window-point set to t, the new default.

2017-11-20  Alan Third  <alan@idiocy.org>

	Add window divider faces to NS (bug#29353)

	* src/nsterm.m (ns_draw_window_divider): Use
	window-divider-first-pixel and window-divider-last-pixel faces.

2017-11-20  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/keyboard.c: Undo last change, meant for master only

2017-11-20  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29149

	* lisp/net/tramp.el (tramp-drop-volume-letter): Handle also
	backup file names.
	(tramp-handle-find-backup-file-name):
	Call `tramp-drop-volume-letter' on the results.  (Bug#29149)

2017-11-20  Martin Rudalics  <rudalics@gmx.at>

	Fix misbehavior when drawing three-pixel high horizontal dividers (Bug#29353)

	* src/xterm.c (x_draw_window_divider):
	* src/w32term.c (w32_draw_window_divider): Fix misbehavior when
	drawing three-pixel high horizontal dividers (Bug#29353).

	The misbehavior was noted by Keith David Bershatsky and analyzed by Alan
	Third.

2017-11-19  Mike Kupfer  <mkupfer@alum.berkeley.edu>

	MH-E: don't automatically download external-body parts

	* lisp/mh-e/mh-mime.el (mh-mime-display-single): Use
	mm-automatic-display-p to verify that a part should be
	displayed before doing the inline checks (SF#475).

2017-11-19  Michael Albinus  <michael.albinus@gmx.de>

	Further fix for Bug#29291

	* test/lisp/net/tramp-tests.el (tramp-test24-file-acl):
	Check for local ACL support.  (Bug#29291)

2017-11-19  Alan Third  <alan@idiocy.org>

	Fix divider frame params on NS (bug#29352)

	* src/nsfns.m (Fx_create_frame): Set right-divider-width and
	bottom-divider-width parameters.

2017-11-19  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

	* lisp/help-fns.el (help-fns--analyze-function):
	Rename from help-fns--analyse-function.
	All uses changed.

2017-11-19  Olaf Rogalsky  <olaf.rogalsky@t-online.de>

	* src/keyboard.c: Make xterm-mouse clicks on mode-line work

	(read_key_sequence): Recompute first_event
	after replay_sequence, since it might have changed (bug#29104).

2017-11-18  Martin Rudalics  <rudalics@gmx.at>

	Don't let delete_frame select a tooltip frame (Bug#27647)

	* src/frame.c (delete_frame): Don't select a tooltip
	frame. (Bug#27647)

2017-11-18  Alan Mackenzie  <acm@muc.de>

	Filter obtrusive events in help-read-key-sequence.

	This fixes most of bug #29272.

	* lisp/help.el (help-read-key-sequence): After a mouse event, pause for 0.01s,
	discarding any events (such as <help-echo>) received in this time, before
	polling for the double-click (etc.) events which may follow.  This fixes the
	infinite loop which occurred whwn <help-echo> events triggered a sit-for
	whilst handling menu events.

2017-11-18  Michael Albinus  <michael.albinus@gmx.de>

	Fix symlink flag in tramp-gvfs-handle-file-attributes

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-attributes):
	Set proper symlink file mode flag.

2017-11-18  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug in tramp-handle-file-truename

	* lisp/net/tramp.el (tramp-handle-file-truename): Expand localname.

	* test/lisp/net/tramp-tests.el (tramp-test21-file-links): Check also
	relative symbolic links.

2017-11-18  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in doc string of electric-indent-functions-without-reindent

	* lisp/electric.el (electric-indent-functions-without-reindent):
	Doc fix.  (Bug#29304)

2017-11-18  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertion violations in echo_area_display

	* src/xdisp.c (echo_area_display): Don't try redisplaying the echo
	area if the selected-frame's mini-window is nil.  (Bug#27647)

2017-11-18  Eli Zaretskii  <eliz@gnu.org>

	Fix case-folding in Occur

	* lisp/replace.el (occur-engine): Bind case-fold-search in each
	buffer we search.  (Bug#29254)

2017-11-18  OGAWA Hirofumi  <hirofumi@mail.parknet.co.jp>  (tiny change)

	Fix quick-calc in C mode with hex values

	* lisp/calc/calc-aent.el (math-read-token): Make sure the match
	against "0[xX][0-9a-fA-F]+" is found at math-exp-pos.  See
	http://lists.gnu.org/archive/html/emacs-devel/2017-11/msg00174.html
	for the details.

2017-11-18  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of dired-next/prev-marked-file

	* lisp/dired.el (dired-next-marked-file, dired-prev-marked-file):
	Doc fixes.  (Bug#29340)

2017-11-17  Eli Zaretskii  <eliz@gnu.org>

	Prevent aborts in line-move-visual

	* src/indent.c (line_number_display_width): Avoid assertion
	violations in init_iterator when the window's buffer was
	temporarily switched without updating window-start.  (Bug#29326)

2017-11-17  Eli Zaretskii  <eliz@gnu.org>

	More fixes in src/.gdbinit

	* src/.gdbinit (pwinx): Update to match 'struct window'.
	(pcursorx): Use "." instead of "->" because the argument is a
	struct, not a pointer.

2017-11-17  Robert Pluim  <rpluim@gmail.com>

	Document how to enter whitespace when using grep-read-files

	* lisp/progmodes/grep.el (lgrep, rgrep, grep-read-files): Explain
	how to enter whitespace when using grep-read-files.  (Bug#29303)
	* lisp/progmodes/project.el (project-find-regexp): Likewise.
	* lisp/vc/vc-git.el (vc-git-grep): Likewise.

2017-11-17  Eli Zaretskii  <eliz@gnu.org>

	Fix .gdbinit following lisp.h changes

	* src/.gdbinit (xsymname, pwinx, pgx, xbuffer, xcar, xcdr, xlist)
	(xprintstr): Adapt to latest changes in Lisp object C structures.
	(Bug#29332)

2017-11-15  Charles A. Roelli  <charles@aurox.ch>

	* lisp/simple.el (shell-command): Doc fixes.

2017-11-15  Noam Postavsky  <npostavs@gmail.com>

	Fix marker adjustment for undo (Bug#29118)

	* lisp/simple.el (primitive-undo): Compare marker against absolute
	value of POS, because the sign of POS is irrelevant to markers.

2017-11-14  Daniel Pittman  <slippycheeze@google.com>

	Fix Bug#28139

	* lisp/net/tramp-sh.el: Set TERM and INSIDE_EMACS environment earlier.
	(tramp-remote-process-environment): Remove TERM and INSIDE_EMACS.
	(tramp-remote-process-environment): Document their special handling.
	(tramp-open-shell): Set TERM and INSIDE_EMACS prior to starting the
	initial remote shell, so that it is also aware of the environment
	in which it is operating.  (Bug#28139)

2017-11-14  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29291

	* test/lisp/net/tramp-tests.el (tramp-test24-file-acl):
	Preserve permissions when copying.  (Bug#29291)

2017-11-14  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#2928

	* test/lisp/net/tramp-tests.el (tramp-test25-file-selinux):
	Enhance test.  (Bug#29287)
	(tramp-test44-delay-load): Fix for older Emacsen.

2017-11-14  Martin Rudalics  <rudalics@gmx.at>

	Make 'mouse-drag-and-drop-region' work with 'mouse-autoselect-window' non-nil

	* lisp/mouse.el (mouse-drag-and-drop-region): Ignore
	'select-window' events to make it work with
	'mouse-autoselect-window'.

2017-11-14  Alexander Gramiak  <agrambot@gmail.com>

	* etc/PROBLEMS: Remove fixed xterm-mouse-mode problems

	See: https://debbugs.gnu.org/cgi/bugreport.cgi?bug=29143#26

2017-11-14  Katsumi Yamaoka  <yamaoka@jpl.org>

	Fix cookie handling (bug#29282)

	* lisp/url/url-cookie.el (url-cookie-handle-set-cookie):
	Regard a Set-Cookie header as it contains a single cookie;
	prefer Max-Age to Expires and convert it to Expires;
	remove support for old time string styles (bug#29282).

2017-11-13  Gemini Lasswell  <gazally@runbox.com>

	Improve documentation of Edebug and macros

	* doc/lispref/edebug.texi (Instrumenting Macro Calls): Improve
	discussion of when it might be necessary to find and evaluate macro
	specifications before instrumenting.
	(Specification List): Clarify what "defining form" means to Edebug
	and when 'def-form' or 'def-body' should be used instead of 'form'
	or 'body'.

2017-11-13  Paul Eggert  <eggert@cs.ucla.edu>

	Port to IBM xlc 12.01

	Work around a compiler bug by using a separate enum for alignment.
	* src/alloc.c (roundup_size): Declare in a separate enum.

2017-11-13  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify by removing HAVE_STRUCT_ATTRIBUTE_ALIGNED

	* configure.ac (HAVE_STRUCT_ATTRIBUTE_ALIGNED): Remove.  No longer
	needed, since we no longer rely on __attribute__ ((aligned (8))).
	All uses removed.
	* src/emacs-module.c (HAVE_STRUCT_ATTRIBUTE_ALIGNED): Remove.
	(lisp_to_value): Simplify now that we no longer need to worry
	whether HAVE_STRUCT_ATTRIBUTE_ALIGNED is false.

2017-11-13  Paul Eggert  <eggert@cs.ucla.edu>

	Use alignas to fix GCALIGN-related bugs

	Use alignas and unions to specify alignments of objects needing
	addresses that are at least a multiple of GCALIGNMENT.  Using
	these standard C facilities should be safer than relying on ad hoc
	and poorly-understood features like GCC’s __attribute__
	((aligned (N))), the root cause for recent porting bugs like
	Bug#29040.  The alignas macro was standardized by C11 and Gnulib
	supports alignas for pre-C11 platforms.  I have tested this on Sun
	Studio 12 sparc (2007) and GCC 4.4.7 x86-64 (2012) as well as on
	more recent platforms like GCC 7.2.1 (2017) on Fedora 26 (both
	x86-64 and x86).
	* lib-src/make-docfile.c (close_emacs_globals): lispsym is now
	just an array of struct Lisp_Symbol, since struct Lisp_Symbol is
	now properly aligned.  All uses changed.
	* src/alloc.c (NEXT_FREE_LISP_STRING): Just use the new u.next
	member; this is simpler and safer than casting a pointer that
	might not be aligned properly.
	(aligned_Lisp_Symbol): Remove.  No longer needed, now that struct
	Lisp_Symbol is aligned properly.  All uses replaced with struct
	Lisp_Symbol.
	* src/lisp.h (GCALIGNED): Remove, as it does not work as expected:
	it can cause the natural alignment to be ignored.  All uses
	replaced by unions with a ‘char alignas (GCALIGNMENT)’ member as
	described below.
	(struct Lisp_Symbol, struct Lisp_Cons, struct Lisp_String):
	Change definition from ‘struct TAG { MEMBERS };’ to
	‘struct TAG { union { struct { MEMBERS } s; char alignas
	(GCALIGNMENT) gcaligned; } u; };’.  This guarantees ‘struct TAG’
	to have an alignment that at least max (GCALIGNMENT, N) where N is
	its old alignment.  All uses like ‘PTR->MEMBER’ changed to
	‘PTR->u.s.MEMBER’; these uses were supposed to be mostly private
	anyway.  Verify that the resulting ‘struct TAG’ is properly
	aligned for Emacs.
	(union vectorlike_header): New member ‘gcaligned’ to guarantee
	that this type, and its containing types like ‘struct Lisp_Subr’,
	‘struct buffer’ and ‘struct thread_state’, are all properly
	aligned for Emacs.
	(struct Lisp_String): New union member ‘next’, for the benefit
	of NEXT_FREE_LISP_STRING.
	(union Aligned_Cons, union Aligned_String): Remove.  All uses
	replaced by struct Lisp_Cons and struct Lisp_String, since they
	are now properly aligned.
	(USE_STACK_CONS, USE_STACK_STRING): Simplify now that we can
	assume struct Lisp_Cons and struct Lisp_String are properly
	aligned.

2017-11-13  Paul Eggert  <eggert@cs.ucla.edu>

	Change vectorlike from struct to union

	* src/lisp.h (vectorlike_headed): Change from struct to union.
	All uses changed.  Since it has only one member, this does not
	change semantics.  This is designed to simplify future changes
	needed to fix bugs like Bug#29040.  All uses changed.

2017-11-12  Tom Tromey  <tom@tromey.com>

	Don't enable cursor-sensor-mode in mhtml-mode

	* lisp/textmodes/mhtml-mode.el (mhtml--last-submode): Update doc
	string.
	(mhtml-mode): Don't call cursor-sensor-mode.

2017-11-12  Eli Zaretskii  <eliz@gnu.org>

	* lisp/files.el (abbreviate-file-name): Doc fix.  (Bug#29267)

2017-11-12  João Távora  <joaotavora@gmail.com>

	Unbreak interactive run of a flymake test (bug#29267)

	See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=19657#20 for the
	technique used here.

	* test/lisp/progmodes/flymake-tests.el (ruby-backend):
	Let-bind abbreviated-home-dir.

2017-11-12  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#29225

	* src/fileio.c (Fset_file_acl): Report error only when
	acl_errno_valid returns true.  (Bug#29225)

	* test/lisp/net/tramp-tests.el (tramp-test24-file-acl)
	(tramp-test25-file-selinux): New tests.
	(tramp-test26-file-name-completion, tramp-test27-load)
	(tramp-test28-process-file, tramp-test29-start-file-process)
	(tramp-test30-interrupt-process, tramp-test31-shell-command)
	(tramp-test32-environment-variables)
	(tramp-test32-environment-variables-and-port-numbers)
	(tramp-test33-explicit-shell-file-name)
	(tramp-test34-vc-registered)
	(tramp-test35-make-auto-save-file-name)
	(tramp-test36-find-backup-file-name)
	(tramp-test37-make-nearby-temp-file)
	(tramp-test38-special-characters)
	(tramp-test38-special-characters-with-stat)
	(tramp-test38-special-characters-with-perl)
	(tramp-test38-special-characters-with-ls, tramp-test39-utf8)
	(tramp-test39-utf8-with-stat, tramp-test39-utf8-with-perl)
	(tramp-test39-utf8-with-ls, tramp-test40-file-system-info)
	(tramp-test41-asynchronous-requests)
	(tramp-test42-recursive-load, tramp-test43-remote-load-path)
	(tramp-test44-delay-load, tramp-test45-unload): Rename.

2017-11-12  Alan Mackenzie  <acm@muc.de>

	CC Mode: Fix defun-open being recognized as brace-list-open at EOB.

	* lisp/progmodes/cc-engine.el (c-looking-at-statement-block): Add handling
	for an open brace at EOB and nested braces inside an unclosed brace block.

2017-11-12  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2017-11-11 faccessat: port to macOS (Bug#29231)
	2017-11-05 fstatat: pacify GCC on unusual platform
	* build-aux/config.guess, build-aux/config.sub:
	* doc/misc/texinfo.tex, lib/faccessat.c, lib/fstatat.c:
	* lib/unistd.in.h, m4/faccessat.m4, m4/unistd_h.m4:
	Copy from Gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.

2017-11-12  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify GCC when configured --with-x-toolkit=no

	Without these changes, Emacs does not build on Fedora 26 x86-64
	when configured --with-x-toolkit=no --enable-gcc-warnings.
	* oldXMenu/Activate.c (XMenuActivate): Add FALLTHROUGH.
	* src/xterm.c (x_dispatch_event): Define only if
	USE_X_TOOLKIT || USE_MOTIF || USE_GTK.

2017-11-12  Eli Zaretskii  <eliz@gnu.org>

	* lisp/find-dired.el (find-grep-dired): Doc fix.  (Bug#29262)

2017-11-12  João Távora  <joaotavora@gmail.com>

	Fix more flymake-diag-region eob corner cases and add tests (bug#29201)

	* lisp/progmodes/flymake.el (flymake-diag-region): Correct
	more eob corner cases.

	* test/lisp/progmodes/flymake-tests.el
	(eob-region-and-trailing-newline): New test.

2017-11-11  Basil L. Contovounesios  <contovob@tcd.ie>

	Keep Man sections in natural order (bug#28998)

	* lisp/man.el (Man-build-section-alist): Reverse sections.

2017-11-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/minibuffer.el: Install a workaround for bug#16274

	* lisp/minibuffer.el (completion--nth-completion): Avoid signaling an
	error when `md` is applied to another table.

2017-11-11  Eli Zaretskii  <eliz@gnu.org>

	Fix comparisons with tip_frame in GTK builds

	* src/xterm.c (x_update_begin, x_new_font):
	* src/xfns.c (Fx_display_monitor_attributes_list):
	* src/frame.c (Fframe_list) [USE_GTK]: Don't consider tip_frame a
	tooltip frame unless its 'tooltip' parameter is non-nil.  (Bug#26747)

2017-11-11  Eli Zaretskii  <eliz@gnu.org>

	Improve the documentation of M-n for entering file names

	* lisp/files.el (find-file, find-file-other-window)
	(find-file-other-frame): Mention file-name-at-point-functions in
	the doc string.  Reported by Florian Weimer <fw@deneb.enyo.de> in
	http://lists.gnu.org/archive/html/emacs-devel/2017-11/msg00224.html.

	* doc/emacs/mini.texi (Minibuffer History): Document
	file-name-at-point-functions and its effect on M-n when typing
	file names in the minibuffer.
	* doc/emacs/files.texi (File Names):
	* doc/emacs/mini.texi (Minibuffer File): Add a cross-reference to
	"Minibuffer History", where special features of M-n regarding
	files are described.

2017-11-11  Eli Zaretskii  <eliz@gnu.org>

	Fix desktop auto-save timer when linum-mode is used

	* lisp/desktop.el (desktop-read): Use toplevel value of
	window-configuration-change-hook when deciding whether desktop
	auto-saving is enabled.  Suggested by Peter Neidhardt
	<pe.neidhardt@googlemail.com>.  (Bug#28945)

2017-11-11  Olaf Rogalsky  <olaf.rogalsky@t-online.de>

	Fix "C-h k" in xterm-mouse-mode

	* lisp/help.el (help-read-key-sequence): Support "C-h k" for
	xterm-mouse-mode by calling read-key-sequence-vector instead of
	read-event.  (Bug#29150)

2017-11-11  Paul Eggert  <eggert@cs.ucla.edu>

	Fix off-by-1 bug in --enable-checking=stringbytes

	Evidently nobody builds Emacs with --enable-checking=all,
	which is no surprise as it is so slow as to be unusable nowadays.
	Perhaps we should remove the slowest checks, or move them into
	another category, or speed them up, or something.
	* src/alloc.c (SDATA_SIZE) [GC_CHECK_STRING_BYTES]: Fix off-by-one
	error in size calculation, which caused a failure when
	--enable-checking=stringbytes was used.  I introduced this bug in
	2016-09-08T01:08:45!eggert@cs.ucla.edu "Port flexible array
	members to GCC + valgrind".

2017-11-10  Alan Mackenzie  <acm@muc.de>

	Correct the indentation of C99's compound literals.

	* lisp/progmodes/cc-engine.el (c-looking-at-statement-block): Amend so that
	if there is only syntactic whitespace in a brace block, it is regarded as a
	statement block.  Also, if there is no semicolon or comma delimiter, treat as
	a statement block when there is a keyword.
	(c-guess-basic-syntax): CASE 9 test: Regard a brace as starting a brace block
	when its contents indicate a brace block.

2017-11-10  Eli Zaretskii  <eliz@gnu.org>

	Improve the doc string of 'dired-isearch-filter-filenames'

	* lisp/dired-aux.el (dired-isearch-filter-filenames): Doc fix.
	(Bug#29215)

2017-11-10  Eli Zaretskii  <eliz@gnu.org>

	* lisp/isearch.el (search-invisible): Doc fix.  (Bug#29222)

2017-11-10  Eli Zaretskii  <eliz@gnu.org>

	Fix display of line numbers in GTK builds

	* src/xdisp.c (should_produce_line_number) [USE_GTK]: Make sure
	tip_frame is indeed a tooltip frame, before disabling line numbers
	on it.  (Bug#27647)

	* src/dispextern.h (tip_frame): Add commentary describing the
	kludgey usage of this variable in GTK builds.

2017-11-10  João Távora  <joaotavora@gmail.com>

	Fix previous change to flymake-diag-region (bug#29174)

	* lisp/progmodes/flymake.el (flymake-diag-region):
	Pass line and col to commit.

2017-11-09  João Távora  <joaotavora@gmail.com>

	flymake-diag-region really returns nil if region is invalid (bug#29174)

	Reported by Lele Gaifax <lele@metapensiero.it>.

	* lisp/progmodes/flymake.el (flymake-diag-region): Really
	return nil if the region is invalid.

2017-11-09  João Távora  <joaotavora@gmail.com>

	Flymake correctly highlights whole last line if eob (bug#29201)

	If a line/column pair indicates an end-of-buffer position, flymake
	should behave like the case where the last line of the buffer is
	referenced without a column indication.  This behavior is currently
	to highlight the whole last line.

	* lisp/progmodes/flymake.el (flymake-diag-region): Correct
	conditions of fallback to the fallback-eol local function.

2017-11-09  João Távora  <joaotavora@gmail.com>

	Protect Flymake checkdoc backend against checkdoc errors (bug#29176)

	The function checkdoc-current-buffer may error if there are unbalanced
	parens, for example, but this shouldn't disable the
	elisp-flymake-checkdoc backend.

	* lisp/progmodes/elisp-mode.el (elisp-flymake-checkdoc): Use
	ignore-errors.

2017-11-09  João Távora  <joaotavora@gmail.com>

	Sort entries of the Flymake diagnostics buffer (bug#29175)

	Reported by Lele Gaifax <lele@metapensiero.it>.

	* lisp/progmodes/flymake.el
	(flymake--diagnostics-buffer-entries): Sort results of flymake-diagnostics.

2017-11-09  Alan Mackenzie  <acm@muc.de>

	Correctly indent C++14 brace lists which are a second argument to a function.

	In particular, don't indent contained brace lists in "staircase" fashion.
	This fixes bug #28623.

	* lisp/progmodes/cc-engine.el (c-looking-at-or-maybe-in-bracelist): When
	testing for being enclosed in parens, recognize also a brace directly
	following a comma, as well as a brace being the first thing inside the paren.
	Enhance the return value, by indicating when we're directly inside an open
	paren.
	(c-inside-bracelist-p): Add an extra argument ACCEPT-IN-PARAM which indicates
	whether we will accept a bracelist directly inside an open parenthesis.
	Simplify the manipulation of PAREN-STATE by dispensing with variable LIM and
	using c-pull-open-brace.  Enhance the return value, respecting the new argument.
	(c-guess-basic-syntax): Save a copy of the initial parse-state in the new
	variable STATE-CACHE.  Use this variable in place of C-STATE-CACHE throughout
	the function.  At CASE 7B, call c-inside-bracelist-p with extra argument nil.
	At CASE 9, call that function with extra argument t.

2017-11-09  Eli Zaretskii  <eliz@gnu.org>

	Fix redisplay of overlay-arrows on GUI frames

	* src/xdisp.c (try_window_reusing_current_matrix)
	(try_cursor_movement): Disallow these optimizations if the buffer
	has overlay arrow(s) shown on the fringe(s).  (Bug#29198)

2017-11-09  João Távora  <joaotavora@gmail.com>

	Protect Flymake tests against older Ruby and Perl (bug#29187)

	* test/lisp/progmodes/flymake-tests.el (perl-backend): Search
	for the error from the bottom.
	(ruby-backend): Protect against situation of bug#29187

2017-11-09  Paul Eggert  <eggert@cs.ucla.edu>

	Fix URL cookie expiration bug

	Problem reported by Damien Cassou (Bug#29223).
	* lisp/url/url-cookie.el (url-cookie-expired-p):
	Fix typo in previous change, which caused unexpired cookies
	to be treated as expired and vice versa.

2017-11-09  Paul Eggert  <eggert@cs.ucla.edu>

	Use GCALIGNED properly for GCC

	Apparently GCC requires that ‘__attribute__ ((aligned (8)))’ must
	immediately follow the ‘struct’ keyword when aligning a structure.
	The attribute silently does not work if it follows a tag after the
	‘struct’ keyword.  Who knew?  Anyway, this patch is designed to
	fix a SIGSEGV problem reported by John Mastro (Bug#29183).
	* lib-src/make-docfile.c (close_emacs_globals):
	* src/buffer.c (buffer_defaults, buffer_local_symbols):
	* src/lisp.h (DEFUN):
	* src/thread.c (main_thread):
	Put 'GCALIGNED' immediately after 'struct'.

2017-11-09  Glenn Morris  <rgm@gnu.org>

	In f90.el, set fill-paragraph-function to a useful value

	* lisp/progmodes/f90.el (f90-mode-map) <menu>: Add fill-paragraph.
	(f90-mode): Set fill-paragraph-function.
	(f90-fill-paragraph): New command.

2017-11-08  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Fix to 2fddfb7ce7

	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-convert-list-to-object):
	  Fix bogus paren wrapping.

2017-11-08  Glenn Morris  <rgm@gnu.org>

	* admin/gitmerge.el (gitmerge-resolve-unmerged): Fix doc typo.

2017-11-08  Charles A. Roelli  <charles@aurox.ch>

	Further workaround for faulty localtime() under macOS 10.6

	* lisp/org/org-clock.el (org-clock--oldest-date): Fix an issue
	when compiling on macOS 10.6 with a western time zone (a
	continuation of Bug#27736).  In particular, see:

	https://debbugs.gnu.org/cgi/bugreport.cgi?bug=27736#74

	and the first commit that attempted to work around this problem,
	"Workaround for faulty localtime() under macOS 10.6", bd49b6f1 of
	2017-09-30.

2017-11-08  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Handle object string name in eieio-persistent-convert-list-object

	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-convert-list-to-object):
	  Starting to phase out the printing of object names in
	  `object-write', handle either case.

2017-11-08  Ryan C. Thompson  <rct@thompsonclan.org>

	Fix handling of nil PRED2 arg for completion-table-with-predicate

	* lisp/minibuffer.el (completion-table-with-predicate): Don't act as
	if strict is non-nil when pred2 is nil (Bug#27841).
	* test/lisp/minibuffer-tests.el
	(completion-table-with-predicate-test): Add a test for Bug#27841.

2017-11-07  K. Handa  <handa@gnu.org>

	Describe Lao rendering problem

	* etc/PROBLEMS: Describe a workaround for the problem of Lao rendering
	by OpenTyype font.

2017-11-07  K. Handa  <handa@gnu.org>

	Fix docstring of arabic-shaper-ZWNJ-handling

	* lisp/language/misc-lang.el (arabic-shaper-ZWNJ-handling): Adjusted
	the doctstring for addition of :set (bug#28312).

2017-11-07  Antonin Houska  <ah@melesmeles.cz>  (tiny change)

	Handle single-line comments correctly (Bug#26049)

	* lisp/newcomment.el (comment-region-internal): Previously, the
	comment text had to contain at least one line break character for the
	ending extra line to be added.  Make the behavior more consistent by
	looking for end of line instead.
	(comment-region-internal): Remove trailing white space from the
	comment's initial line.

2017-11-07  Glenn Morris  <rgm@gnu.org>

	* test/lisp/net/tramp-tests.el (tramp-test16-file-expand-wildcards):
	Clean up properly.

2017-11-06  Stefan Monnier  <monnier@iro.umontreal.ca>

	* etc/PROBLEMS: Add URL to relevant issues for xterm+evil bug

2017-11-06  Martin Rudalics  <rudalics@gmx.at>

	Document new treatment of 'comment-auto-fill-only-comments'

	* doc/lispref/text.texi (Auto Filling): Add reference to Emacs
	manual.  Add description of 'comment-auto-fill-only-comments'.
	* etc/NEWS: Mention new treatment of
	'comment-auto-fill-only-comments'.

2017-11-05  Michael Albinus  <michael.albinus@gmx.de>

	Do not load Tramp unless `tramp-mode' is non-nil

	* lisp/net/tramp.el (tramp-autoload-file-name-handler): Load Tramp only if
	`tramp-mode' is non-nil.
	(tramp-unload-file-name-handlers): Unload also
	`tramp-autoload-file-name-handler'.

	* test/lisp/net/tramp-tests.el (tramp-test42-delay-load): Extend test.

2017-11-05  Michael Albinus  <michael.albinus@gmx.de>

	Prefer `customize-set-variable' in tramp.texi

	* doc/misc/tramp.texi (Configuration, Default Method, Default User)
	(Default Host, Remote shell setup, Auto-save and Backup)
	(Ad-hoc multi-hops, Frequently Asked Questions):
	Prefer `customize-set-variable' over `custom-set-variables'.

2017-11-05  Eli Zaretskii  <eliz@gnu.org>

	Fix last change in hscroll_window_tree

	* src/xdisp.c (hscroll_window_tree): When hscroll suspension is
	being disabled, set the frame's garbaged flag less eagerly.
	(Bug#29002)

2017-11-05  Philipp Stephani  <phst@google.com>

	Ediff: add some missing documentation

	* lisp/vc/ediff.el (ediff-files, ediff-files3, ediff-buffers)
	(ediff-buffers3, ediff-merge-directories)
	(ediff-merge-directories-with-ancestor)
	(ediff-merge-directory-revisions)
	(ediff-merge-directory-revisions-with-ancestor)
	(ediff-windows-wordwise, ediff-windows-linewise)
	(ediff-regions-wordwise, ediff-regions-linewise)
	(ediff-merge-files, ediff-merge-files-with-ancestor)
	(ediff-merge-buffers, ediff-merge-buffers-with-ancestor)
	(ediff-merge-revisions, ediff-merge-revisions-with-ancestor)
	(ediff-patch-file, ediff-revision): Document missing arguments.
	(ediff-patch-buffer, ediff-revision): Add second space after
	period.
	(ediff-files-command, ediff3-files-command, ediff-merge-command)
	(ediff-merge-with-ancestor-command, ediff-directories-command)
	(ediff-directories3-command, ediff-merge-directories-command): Add
	documentation for the command line functions.

2017-11-05  Justin Timmons  <justinmtimmons@gmail.com>  (tiny change)

	Support python virtualenv on w32 (Bug#24464)

	According to the virtualenv docs only POSIX systems follow the
	structure "/path/to/venv/bin/", while windows systems use
	"/path/to/venv/Scripts" for the location of the binary files, most
	importantly including the python interpreter (see:
	https://virtualenv.pypa.io/en/stable/userguide/#windows-notes).
	* lisp/progmodes/python.el (python-shell-calculate-exec-path): Use the
	"/path/to/venv/Scripts" for `windows-nt' machines.

2017-11-05  Noam Postavsky  <npostavs@gmail.com>

	Improve dired deletion error handling (Bug#28797)

	* lisp/dired.el (dired-internal-do-deletions): Use
	`error-message-string' to produce a human readable error message.

2017-11-05  Noam Postavsky  <npostavs@gmail.com>

	Don't replace user input when completion prefix is empty (Bug#18951)

	* lisp/pcomplete.el (pcomplete-parse-arguments): Only replace user
	input if we produced a non-empty common completion stub.

2017-11-05  Eli Zaretskii  <eliz@gnu.org>

	Return non-nil from gnutls-available-p under GnuTLS 2.x

	* doc/misc/emacs-gnutls.texi (Help For Users): Update the
	documentation of 'gnutls-available-p'.

	* etc/NEWS (GnuTLS): Mention the change in the value returned by
	'gnutls-available-p'.

	* src/gnutls.c (Fgnutls_available_p): Return non-nil when GnuTLS
	2.x is available.  (Bug#29147)

2017-11-05  João Távora  <joaotavora@gmail.com>

	Fix Flymake help-echo functions across windows (bug#29142)

	* lisp/progmodes/flymake.el (flymake--highlight-line): Use
	with-selected-window.
	(flymake-goto-next-error): Call help-echo with a window and an
	overlay.

2017-11-05  João Távora  <joaotavora@gmail.com>

	Add tests for Flymake backends for Ruby and Perl

	* test/lisp/progmodes/flymake-tests.el (perl-backend)
	(ruby-backend): New tests.
	(warning-predicate-rx-perl, warning-predicate-function-perl):
	Delete tests.

	* test/lisp/progmodes/flymake-resources/test.pl: Include an
	error the test file.

	* test/lisp/progmodes/flymake-resources/test.rb: file.

2017-11-05  João Távora  <joaotavora@gmail.com>

	Add a Flymake backend for Perl

	Define a simple backend in perl-mode.el, which cperl-mode.el also
	uses.

	* lisp/progmodes/cperl-mode.el (cperl-mode): Add to
	flymake-diagnostic-functions.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc-allowed-file-name-masks): Disable legacy backend
	for perl files.

	* lisp/progmodes/perl-mode.el (perl-flymake-command): New
	defcustom.
	(perl--flymake-proc): New buffer-local variable.
	(perl-flymake): New function.
	(perl-mode): Add to flymake-diagnostic-functions.

2017-11-05  João Távora  <joaotavora@gmail.com>

	Add a Flymake backend for Ruby

	* lisp/progmodes/ruby-mode.el (ruby-flymake-command): New
	defcustom.
	(ruby--flymake-proc): New buffer-local variable.
	(ruby-flymake): New function.
	(ruby-mode): Add flymake-diagnostic-functions.

2017-11-05  Lele Gaifax  <lele@metapensiero.it>

	Add a Flymake backend for Python (bug#28808)

	Implement new Flymake backend with related customizable settings.

	* lisp/progmodes/python.el (python-flymake-command)
	(python-flymake-command-output-pattern)
	(python-flymake-msg-alist): New defcustom.
	(python--flymake-parse-output): New function, able to parse
	python-flymake-command output accordingly to
	python-flymake-command-output-pattern.
	(python-flymake): New function implementing the backend
	interface using python--flymake-parse-output for the real
	work.
	(python-mode): Add python-flymake to flymake-diagnostic-functions.

2017-11-05  Michael Albinus  <michael.albinus@gmx.de>

	Allow "%" in Tramp host names

	* lisp/net/tramp-gvfs.el (tramp-gvfs-url-file-name): Hexify also host.

	* lisp/net/tramp.el (tramp-host-regexp): Allow "%" in host names.

2017-11-04  Noam Postavsky  <npostavs@users.sourceforge.net>

	Use hybrid malloc for FreeBSD (Bug#28308)

	FreeBSD aarch64 does not provide sbrk, so gmalloc cannot be used; when
	using system malloc dumping does not work correctly (allocated data is
	invalid after dumping).
	* configure.ac: Set hybrid_malloc for freebsd.
	* src/gmalloc.c (gdefault_morecore) [!HAVE_SBRK]: Don't call sbrk.

2017-11-04  Charles A. Roelli  <charles@aurox.ch>

	Add html-, mhtml- and python-mode support to semantic symref

	* lisp/cedet/semantic/symref/grep.el
	(semantic-symref-filepattern-alist): Fix the entry for
	'html-mode', which used a regexp-like syntax where only glob
	syntax is permitted.  As a result, 'xref-find-references' (M-?)
	can now find references in HTML files.  Also duplicate the same
	entry for the sake of 'mhtml-mode', and add a new one for
	'python-mode'.
	(semantic-symref-derive-find-filepatterns): In the documentation,
	clarify that returned patterns must follow the glob syntax.  Fix
	an 'if' test that always evaluates to nil.
	(semantic-symref-tool-grep):
	(semantic-symref-perform-search): Fix typos.

2017-11-04  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'window-scroll-functions'

	* doc/lispref/windows.texi (Window Hooks): Clarify the values of
	arguments of 'window-scroll-functions' functions.

	* src/xdisp.c (syms_of_xdisp) <window-scroll-functions>: Doc fix.

2017-11-04  Eli Zaretskii  <eliz@gnu.org>

	Fix subtle problems in tabulated-list-mode with line numbers

	* lisp/emacs-lisp/tabulated-list.el
	(tabulated-list-watch-line-number-width): Call
	tabulated-list-init-header instead of tabulated-list-revert.
	(tabulated-list-window-scroll-function): New function.
	(tabulated-list-mode): Put 'tabulated-list-window-scroll-function'
	on the buffer-local 'window-scroll-functions' list.

2017-11-04  Eli Zaretskii  <eliz@gnu.org>

	Make gdb-non-stop-setting default to nil on MS-Windows

	* lisp/progmodes/gdb-mi.el (gdb-non-stop-setting): Now nil on
	MS-Windows.

2017-11-04  Mike Gulick  <mike.gulick@mathworks.com>  (tiny change)

	Fix gdb-mi prompt after "attach PID" command

	* lisp/progmodes/gdb-mi.el (gdbmi-bnf-console-stream-output): Set
	gdb-first-done-or-error non-nil.  (Bug#29020)

2017-11-04  Eli Zaretskii  <eliz@gnu.org>

	Fix doc string of 'window-configuration-change-hook'

	* src/window.c (syms_of_window) <window-configuration-change-hook>:
	Doc fix.  (Bug#29049)

2017-11-04  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of window hooks

	* doc/lispref/windows.texi (Window Hooks): Fix the description of
	window-configuration-change-hook.  (Bug#29049)
	<run-window-scroll-functions, run-window-configuration-change-hook>:
	Document these functions.

2017-11-04  Eli Zaretskii  <eliz@gnu.org>

	Fix hscroll suspension after cursor motion

	* src/xdisp.c (hscroll_window_tree): Trigger a thorough redisplay
	of the window when temporary suspension of hscrolling is
	disabled.  (Bug#29002)

2017-11-03  Alan Mackenzie  <acm@muc.de>

	Introduce a function to CC Mode which displays the current function name

	Remove an erroneous interactive specification from two functions.

	* lisp/progmodes/cc-cmds.el (c-display-defun-name): New command.
	(c-defun-name, c-cpp-define-name): Remove interactive specification.

	* lisp/progmodes/cc-mode.el (c-mode-base-map): Add binding C-c C-z for the new
	command.

	* doc/misc/cc-mode.texi (Other Commands): Add documentation for the new
	command.

2017-11-03  Eli Zaretskii  <eliz@gnu.org>

	Fix typos in ediff-wind.el

	* lisp/vc/ediff-wind.el (ediff-setup-windows-multiframe-merge):
	Fix typos in commentary.  (Bug#29138)

2017-11-03  João Távora  <joaotavora@gmail.com>

	Examine tex-chktex--process in the correct buffer

	As in other Flymake backends, the process sentinel might run in
	arbitrary buffers where this variable's value doesn't make sense.

	For a way to trigger a problem due to this, see discussion starting in
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00645.html

	* lisp/textmodes/tex-mode.el (tex-chktex): Use
	with-current-buffer.

2017-11-03  Stephen Leake  <stephen_leake@stephe-leake.org>

	* nt/INSTALL.W64: Update to current mingw64 install instructions

2017-11-03  João Távora  <joaotavora@gmail.com>

	Don't resignal errors in flymake-diag-region

	* lisp/progmodes/flymake.el (flymake-diag-region): Use
	flymake-log instead of flymake-error.

2017-11-03  João Távora  <joaotavora@gmail.com>

	New xref-quit-and-goto-xref command bound to TAB (bug#28814)

	This is like xref-goto-xref, but quits the *xref* window just before
	the user jump to ref.

	* lisp/progmodes/xref.el (xref--show-location): Handle 'quit
	value for SELECT.
	(xref-goto-xref): Take optional QUIT arg.
	(xref-quit-and-goto-xref): New command.
	(xref--xref-buffer-mode-map): Bind "Q" and "TAB" to
	xref-quit-and-goto-xref.

	* doc/emacs/maintaining.texi (Xref Commands): Describe new bindings in
	*xref*.

	* etc/NEWS (Xref): Describe new binding.

2017-11-03  João Távora  <joaotavora@gmail.com>

	Allow split-window-sensibly to split threshold in further edge case

	As a fallback, and to avoid creating a frame, split-window-sensibly
	would previously disregard split-height-threshold if the window to be
	split is the frame's root window.

	This change generalizes that: it disregards the threshold if the
	window to be split is the frame's only _usable_ window (it is either
	the only one, as before, or all the other windows are dedicated to
	some buffer and thus cannot be touched).

	This is required for the fix to bug#28814.

	* lisp/window.el (split-height-threshold): Adjust doc to match
	split-window-sensibly.
	(split-window-sensibly): Also disregard threshold if all other
	windows are dedicated.

2017-11-03  João Távora  <joaotavora@gmail.com>

	Honor window-switching intents in xref-find-definitions (bug#28814)

	When there is more than one xref to jump to, and an *xref* window
	appears to help the user choose, the original intent to open a
	definition in another window or frame is remembered when the choice to
	go to or show a reference is finally made.

	* lisp/progmodes/xref.el (xref--show-pos-in-buf): Rewrite.
	(xref--original-window-intent): New variable.
	(xref--original-window): Rename from xref--window and move up
	here for clarity.
	(xref--show-pos-in-buf): Rewrite.  Don't take SELECT arg here.
	(xref--show-location): Handle window selection decision here.
	(xref--window): Rename to xref--original-window.
	(xref-show-location-at-point): Don't attempt window management here.
	(xref--show-xrefs): Ensure display-action intent is saved.

2017-11-03  Paul Pogonyshev  <pogonyshev@gmail.com>

	* lisp/emacs-lisp/generator.el (iter-do): Add a debug declaration.

2017-11-03  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/flymake.el (flymake-start): Fix dead buffer case

	Don't try to flymake-start within a buffer that doesn't exist any more.

2017-11-03  Basil L. Contovounesios  <contovob@tcd.ie>

	Fix buffer name comparison in async shell-command

	* lisp/simple.el (shell-command): Keep track of output-buffer
	by its name, not by its object.  (Bug#28997)

2017-11-03  Paul Eggert  <eggert@cs.ucla.edu>

	Change GCALIGNMENT back to an integer literal

	* src/lisp.h (GCALIGNMENT): Change it back to a macro
	that expands to a literal integer constant, for older GCC.
	I had mistakenly thought that only MSVC had the problem.
	Problem repored by Eli Zaretskii (Bug#29040#69).

2017-11-03  Paul Eggert  <eggert@cs.ucla.edu>

	* src/lisp.h (GCALIGNED): Clarify comment (Bug#29040).

2017-11-03  Hong Xu  <hong@topbug.net>

	Improve the doc of eshell-cmpl-* custom variables (Bug#25069)

	* lisp/eshell/em-cmpl.el (eshell-cmpl--custom-variable-docstring): New
	function to generate the docstring for custom variables derived from
	pcomplete-* variables.
	(eshell-cmpl-file-ignore, eshell-cmpl-dir-ignore)
	(eshell-cmpl-ignore-case, eshell-cmpl-autolist)
	(eshell-cmpl-suffix-list, eshell-cmpl-recexact)
	(eshell-cmpl-man-function, eshell-cmpl-compare-entry-function)
	(eshell-cmpl-expand-before-complete, eshell-cmpl-cycle-completions)
	(eshell-cmpl-cycle-cutoff-length, eshell-cmpl-restore-window-delay)
	(eshell-command-completion-function, eshell-cmpl-command-name-function)
	(eshell-default-completion-function, eshell-cmpl-use-paring): Use it
	to set the docstring.

2017-11-02  Alan Third  <alan@idiocy.org>

	Fix mouse-scrollbar offset on GNUstep and old macOS (bug#29053)

	* src/nsterm.m (EmacsScroller::mouseDown,
	EmacsScroller::mouseDragged): Take scroller buttons into account when
	calculating scroller knob position.

2017-11-02  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2017-10-29 timespec: prefer ‘assume’ to ‘assure’
	2017-10-27 timespec.h: use "assure" to avoid a spurious warning
	2017-10-09 getopt-posix: Fix build failure if ac_cv_header_getopt_h=no
	* build-aux/config.guess, build-aux/config.sub:
	* lib/timespec.h, lib/unistd.in.h:
	Copy from Gnulib.

2017-11-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix alignment portability problems

	Do not assume that the natural alignment of Lisp objects is a
	multiple of GCALIGNMENT.  This improves on the portability of the
	recent fix for Bug#29040.
	* lib-src/make-docfile.c (close_emacs_globals):
	* src/buffer.c (buffer_defaults, buffer_local_symbols):
	* src/lisp.h (DEFUN):
	* src/thread.c (main_thread):
	Use GCALIGNED, not alignas (GCALIGNMENT).
	* src/alloc.c (COMMON_MULTIPLE):
	Move back here from lisp.h, since it is no longer used elsewhere.
	* src/lisp.h (GCALIGNMENT): No longer a macro, since we need not
	worry about MSVC.  Omit no-longer-needed consistency check.
	* src/thread.c (THREAD_ALIGNMENT): Remove.

2017-11-02  Simen Heggestøyl  <simenheg@gmail.com>

	Fix completion of colon after CSS property (Bug#29056)

	* lisp/textmodes/css-mode.el (css-completion-at-point): Don't insert
	": ;" after completing a CSS property unless the rest of the line is
	empty.

2017-11-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/alloc.c (sweep_symbols): Tweak last change

	Avoid the double-free without the extra check.  Add an explanatory comment.

2017-11-02  Martin Rudalics  <rudalics@gmx.at>

	In frame parameters documentation mention desktop saving/restoring

	* doc/lispref/frames.texi (Frame Parameters): Mention that
	applications have to care about which parameters they want to
	get saved and restored by the desktop library.

2017-11-02  Martin Rudalics  <rudalics@gmx.at>

	Don't have frameset save the 'client' parameter (Bug#29067)

	* lisp/frameset.el (frameset-persistent-filter-alist): Never
	save 'client' parameter (Bug#29067).

2017-11-02  Gemini Lasswell  <gazally@runbox.com>

	Handle generic variables in cl-defgeneric Edebug spec

	*lisp/emacs-lisp/cl-generic.el (cl-defgeneric): Fix Edebug spec to
	match (setf name) and replace incorrect cl-lambda-list with listp
	(Bug#27747).

2017-11-02  Noam Postavsky  <npostavs@gmail.com>

	Give a more sensible message if file-attributes fails (Bug#29070)

	* lisp/server.el (server-ensure-safe-dir): Don't claim the directory
	is a file if we fail to get anything from `file-attributes'.

2017-11-01  Andreas Schwab  <schwab@linux-m68k.org>

	Avoid wrong value from file-attributes on Linux kernel before 3.6

	* src/dired.c (file_attributes): Handle unsupported fstat on O_PATH
	descriptors.  (bug#29070)

2017-11-01  Noam Postavsky  <npostavs@gmail.com>

	Fix customization of debugger-print-function (Bug#29077)

	* lisp/emacs-lisp/debug.el (debugger-print-function): The :options
	keyword has no effect for :type 'function, use :type '(choice ...)
	instead.

2017-10-31  Eli Zaretskii  <eliz@gnu.org>

	Avoid duplicate calls to xfree for the same pointer

	* src/alloc.c (sweep_symbols): Avoid freeing an already freed
	pointer to a symbol's buffer-local value.  (Bug#29066)

2017-10-31  Phil Sainty  <psainty@orcon.net.nz>

	Don't clobber docstrings of explicitly-defined mode hook variables

	* lisp/emacs-lisp/derived.el (define-derived-mode):
	* lisp/emacs-lisp/easy-mmode.el (define-minor-mode): When defining the
	mode hook variable, do not clobber pre-existing docstrings.

2017-10-31  Martin Rudalics  <rudalics@gmx.at>

	Avoid fullscreen ediff control frames by default (Bug#29026)

	* lisp/vc/ediff-wind.el (ediff-control-frame-parameters):
	Add parameter to avoid fullscreen control frames (Bug#29026).

2017-10-31  Katsumi Yamaoka  <yamaoka@jpl.org>

	Fix the bug#24034 change (revno 9eb028f) causing infloop (bug#29047)

	* lisp/net/shr.el (shr-fill-line): Copy only face and image-displayer
	properties to gaps (bug#29047).

2017-10-30  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in the ELisp manual

	* doc/lispref/functions.texi (Obsolete Functions): Fix a typo.
	(Bug#29068)

2017-10-30  Martin Rudalics  <rudalics@gmx.at>

	Fix doc and doc-strings for minibuffer window related functions (Bug#28978)

	These fixes were suggested by Drew Adams.

	* src/window.c (Fminibuffer_selected_window): Disambiguate
	doc-string.
	* doc/lispref/minibuf.texi (Intro to Minibuffers)
	(Minibuffer Windows, Recursive Mini, Minibuffer Misc):  Avoid
	the term "currently active minibuffer window".  Disambiguate
	documentation of `minibuffer-selected-window'.

2017-10-30  Alan Mackenzie  <acm@muc.de>

	Fix "Args out of range" error in c-determine-limit.  Fixes bug #28598.

	* lisp/progmodes/cc-engine.el (c-determine-limit-get-base): If the candidate
	position for BASE is below point-min, scan forward to the end of the current
	literal.
	(c-determine-limit): Add an extra arm to the final cond form, testing for BASE
	being at point-min.

2017-10-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/perl-mode.el: Fix electric indentation with RET

	(perl-electric-noindent-p): The `eolp' check should not apply to RET.
	Reported in https://emacs.stackexchange.com/questions/36337.

2017-10-29  Tom Tromey  <tom@tromey.com>

	Extend mhtml submode region when in comment

	* lisp/textmodes/mhtml-mode.el (mhtml-syntax-propertize): Extend
	submode when start happens to be in a comment.

2017-10-29  Tom Tromey  <tom@tromey.com>

	Fix mthml submode lighting at end of buffer

	* lisp/textmodes/mhtml-mode.el (mhtml--submode-lighter): Handle end of
	buffer correctly.

2017-10-29  Tom Tromey  <tom@tromey.com>

	Remember more variables in mhtml-mode

	* lisp/textmodes/mhtml-mode.el (mhtml--crucial-variable-prefix): Add
	"completion-" and "major-mode".
	(mhtml--variable-prefix): Remove "major-mode".

2017-10-29  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	* etc/NEWS (EUDC): Deprecate BBDB 2.x backward compatibility.

2017-10-29  Martin Rudalics  <rudalics@gmx.at>

	Fix minibuffer window related docs and strings (Bug#28978)

	* src/frame.c (Vdefault_minibuffer_frame): Fix doc-string.
	* src/window.c (Fminibuffer_selected_window): Fix doc-string.
	* doc/lispref/frames.texi (Buffer Parameters): Rewrite
	description of `minibuffer' parameter.
	* doc/lispref/minibuf.texi (Minibuffer Windows): Reorder
	entries and partly rewrite section.
	(Minibuffer Misc): Clarify description of
	`minibuffer-selected-window'.
	* etc/NEWS: Mention new semantics of 'minibuffer' frame
	parameter.

2017-10-29  Mark Oteiza  <mvoteiza@udel.edu>

	Add ChkTeX flymake backend for latex-mode

	* lisp/textmodes/tex-mode.el (tex-flymake): New custom group.
	(tex-chktex-program, tex-chktex-extra-flags): New custom variables.
	(latex-mode): Add backend to flymake-diagnostic-functions.
	(tex-chktex--process): New variable.
	(tex-chktex-command, tex-chktex): New functions.

2017-10-29  Glenn Morris  <rgm@gnu.org>

	Fix doc typos

	* lisp/simple.el (line-move-ignore-invisible):
	* lisp/sort.el (sort-regexp-fields):
	* lisp/cedet/ede.el (project-add-file):
	* lisp/gnus/message.el (message-bogus-recipient-p):
	* lisp/international/mule.el (define-coding-system):
	* lisp/progmodes/ebrowse.el (ebrowse-member-buffer-object-menu):
	* lisp/progmodes/xscheme.el (xscheme-allow-output-p)
	(scheme-interaction-mode, scheme-debugger-mode)
	(xscheme-yank-pop, xscheme-yank-push): Doc fixes.

2017-10-29  Glenn Morris  <rgm@gnu.org>

	Fix some duplicate word typos

	* doc/misc/ede.texi (ede-target):
	* doc/misc/flymake.texi (Using Flymake):
	* doc/misc/gnus.texi (The namazu Engine): Fix typos.

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	* doc/lispref/commands.texi (Adjusting Point): Fix wording. (Bug#29042)

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	Avoid segfaults in 64-bit Windows builds

	* src/lisp.h (COMMON_MULTIPLE): Move here from alloc.c.
	* src/thread.c (THREAD_ALIGNMENT): New macro.
	(main_thread): Use THREAD_ALIGNMENT to align propertly.  (Bug#29040)

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	Fix conversion of pixel coordinates to buffer position

	* src/dispnew.c (buffer_posn_from_coords): Adapt to
	auto-hscroll-mode == current-line.

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	Fix doc strings in desktop.el

	* lisp/desktop.el (desktop-auto-save-timeout)
	(desktop-auto-save-set-timer): Doc fixes.  (Bug#28945)

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	Add Index to ERT manual

	* doc/misc/ert.texi: Add @syncodeindex directives.
	(Index): New node.
	(Top): Add Index to the top-level menus.
	Add index entries to all nodes.

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	Make manuals and NEWS consistent

	* etc/NEWS: Fix markings on several entries, and rearrange others
	as needed.

	* doc/emacs/programs.texi (Hideshow): Document the new
	outline-like bindings.
	* doc/emacs/search.texi (Query Replace): Document 'u' and 'U'.

2017-10-28  Martin Rudalics  <rudalics@gmx.at>

	Don't allow (minibuffer-window-active-p nil) to return t

	* lisp/window.el (minibuffer-window-active-p): Return t
	only if WINDOW is a live window.

2017-10-28  Eli Zaretskii  <eliz@gnu.org>

	Clarify obsolescence message for 'whitespace-tab'

	* lisp/whitespace.el (whitespace-tab): Make the obsolescence
	message more clear about the replacement.

2017-10-28  Glenn Morris  <rgm@gnu.org>

	Fix some duplicate words typos

	* lisp/erc/erc.el (erc-hide-current-message-p):
	* lisp/progmodes/flymake-proc.el (flymake-proc-diagnostic-type-pred):
	* doc/lispref/display.texi (Bidirectional Display, Delayed Warnings):
	* doc/lispref/functions.texi (Defining Functions):
	* doc/lispref/os.texi (Terminal-Specific):
	* doc/misc/sem-user.texi (Analyzer Debug):
	* doc/misc/srecode.texi (Special Variables): Fix typos.

2017-10-28  Glenn Morris  <rgm@gnu.org>

	* lisp/button.el (button-activate): Fix doc typo.

	* lisp/calendar/todo-mode.el (todo-toggle-mark-item): Fix doc typo.

2017-10-28  Glenn Morris  <rgm@gnu.org>

	Fix some doc typos

	* lisp/calendar/todo-mode.el (todo-next-item)
	(todo-previous-item, todo-toggle-item-header):
	* lisp/window.el (move-to-window-group-line):
	* src/editfns.c (Fformat):
	* test/lisp/calendar/todo-mode-tests.el (todo-test-move-item05):
	Fix doc typos.

2017-10-27  Ken Brown  <kbrown@cornell.edu>

	Fix startup display on Cygwin

	* src/xterm.c (x_make_frame_visible) [CYGWIN]: Restore code that
	forces input to be read.  (Bug#24091)

2017-10-27  Eli Zaretskii  <eliz@gnu.org>

	* src/fileio.c (Fset_default_file_modes): Fix typo in doc string.

	* lisp/dired.el (dired-find-alternate-file): Doc fix.  (Bug#28963)

2017-10-27  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of how faces are applied to display stings

	* doc/lispref/display.texi (Displaying Faces): Describe how the
	faces of the "underlying" text affect overlay and display strings.
	(Display Margins): Add a cross-reference to "Displaying Faces".

2017-10-27  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Improve pixel-scroll-mode

	Scroll vertically by number of pixels returned by
	'frame-char-height' with or without horizontally scrolled.
	(Bug#28922)

	* lisp/pixel-scroll.el (pixel-resolution-fine-flag): When t, scroll
	by number of pixels returned by 'frame-char-height'.
	(pixel-scroll-up): Scroll by 'frame-char-height'. Fix algorithm to
	move cursor to avoid unexpected jump.
	(pixel-scroll-down): Scroll by 'frame-char-height'.
	(pixel-bob-at-top-p): Consider number of pixels that is about to
	scroll.
	(pixel-posn-y-at-point): Consider existence of an overlay string.
	Return nil when horizontally scrolled.
	(pixel-point-at-top-p): Consider number of pixels that is about to
	scroll. Use different algorithm when horizontally scrolled.
	(pixel-point-at-bottom-p): Consider number of pixels that is about
	to scroll. Return nil when horizontally scrolled.
	(pixel-scroll-pixel-down): Move cursor when horizontally scrolled.
	(pixel--whistlestop-line-up): Change cosmetics and move cursor when
	horizontally scrolled.
	(pixel-line-height): Call 'pixel-visual-line-height' instead of
	'line-pixel-height'.
	(pixel-visual-line-height): New function to return height in pixels
	of text line where cursor is with or without horizontally scrolled,
	considering response of display engine.
	(pixel-visible-pos-in-window): New function to return position of
	a char shown on text line where cursor is on screen with or without
	horizontally scrolled.

2017-10-27  Daniel Lublin  <daniel@lublin.se>  (tiny change)

	Support Certification Authority Authorization in dns-mode.el

	* lisp/textmodes/dns-mode.el (dns-mode-types): Add "CAA".
	(Bug#28911)

2017-10-27  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of set-default-file-modes

	* src/fileio.c (Fset_default_file_modes): Doc fix.  (Bug#28875)

	* doc/lispref/files.texi (Changing Files): Clarify how the bits in
	the argument of set-default-file-modes are used for setting file
	permissions.

2017-10-27  Ulf Jasper  <ulf.jasper@web.de>

	Fix documentation of `newsticker-new-item-functions' (bug#29023).

	* lisp/net/newst-backend.el (newsticker-new-item-functions),
	(newsticker-new-item-functions-sample),
	(newsticker-download-enclosures): Fix docstring, rename
	variable feed to feedname (bug#29023).

	* doc/misc/newsticker.texi (Automatic Processing)
	(Automatic Processing): Fix documentation of
	`newsticker-new-item-functions' (bug#29023).

2017-10-27  Tino Calancha  <tino.calancha@gmail.com>

	Require seq in rmc.el

	* lisp/emacs-lisp/rmc.el: Require seq (Bug#28975).
	* test/lisp/emacs-lisp/rmc-tests.el (test-read-multiple-choice): Add test.

2017-10-27  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make an example code introduced in the Gnus info work (bug#29008)

	You can find it in the bottom of (info "(gnus)Foreign Groups").
	NOTE: this change is worth being merged to the trunk.

	* lisp/gnus/gnus-group.el (gnus-read-ephemeral-emacs-bug-group):
	Allow a string for bug# (bug#29008).

2017-10-27  Katsumi Yamaoka  <yamaoka@jpl.org>

	Enable gnus-read-ephemeral-* to run multiple times (bug#29008)

	NOTE: *DO NOT* merge this change to the trunk.

	* lisp/gnus/gnus-group.el (gnus-read-ephemeral-gmane-group)
	(gnus-read-ephemeral-bug-group): Make it work for any number of times
	for the case `url-automatic-caching' is set (bug#29008).

2017-10-27  Paul Eggert  <eggert@cs.ucla.edu>

	Port thread.c to OpenBSD ARM

	Problem reported by Jeremie Courreges-Anglas (Bug#29005).
	* src/thread.c (main_thread): Align to GCALIGNMENT.

2017-10-26  Alan Mackenzie  <acm@muc.de>

	Fix another "wrong side of point" error in CC Mode.

	This fixes (a follow-up to) bug #28850.
	A internal generated form for scanning text to fontify had a LIMIT parameter.
	It also locally bound LIMIT to a value possibly beyond the original LIMIT,
	allowing point to move beyond the original LIMIT, and to create the wrong side
	error.  Fix it by checking point is not beyond LIMIT in the outer context
	before using it.

	* lisp/progmodes/cc-fonts.el (c-make-font-lock-search-form): Add a new
	parameter CHECK-POINT which, when non-nil, directs the function to generate a
	check on point.
	(c-make-font-lock-context-search-function): Invoke the above function with new
	argument value t.

2017-10-26  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#28959

	* lisp/net/tramp.el (tramp-handle-find-backup-file-name):
	Use `tramp-tramp-file-p' rather than `tramp-file-name-p'.  Add
	hop to backup file name.  (Bug#28959)

	* test/lisp/net/tramp-tests.el (tramp-test34-find-backup-file-name):
	New test.
	(tramp-test35-make-nearby-temp-file)
	(tramp-test36-special-characters)
	(tramp-test36-special-characters-with-stat)
	(tramp-test36-special-characters-with-perl)
	(tramp-test36-special-characters-with-ls, tramp-test37-utf8)
	(tramp-test37-utf8-with-stat, tramp-test37-utf8-with-perl)
	(tramp-test37-utf8-with-ls, tramp-test38-file-system-info)
	(tramp-test39-asynchronous-requests)
	(tramp-test40-recursive-load, tramp-test41-remote-load-path)
	(tramp-test42-delay-load, tramp-test43-unload): Rename.

2017-10-26  Paul Eggert  <eggert@cs.ucla.edu>

	Fix duplicate .o file on QNX

	* configure.ac (CYGWIN_OBJ): Leave empty on QNX.
	Problem reported by Elad Lahav in:
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00750.html

2017-10-26  Dmitry Gutov  <dgutov@yandex.ru>

	Fix two js indentation problems

	Fix intentation problems reported in
	https://github.com/mooz/js2-mode/issues/463.
	* lisp/progmodes/js.el (js--continued-expression-p):
	Check syntax state after /.
	(js--multi-line-declaration-indentation):
	Check syntax state before "const".

2017-10-25  Phillip Lord  <phillip.lord@russet.org.uk>

	Update documentation for windows build

	* admin/nt/dist-build/README-scripts: New File.

2017-10-25  Alan Mackenzie  <acm@muc.de>

	Fix a "wrong side of point" error in CC Mode.  Fixes bug #28850.

	The cause was a scanning over a bracket pair taking us beyond the supplied
	LIMIT parameter in c-forward-declarator.

	* lisp/progmodes/cc-engine.el (c-forward-declarator): Add three checks (<
	(point) limit) whilst dealing with tokens after the declared identifier.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarators): Don't supply a LIMIT
	argument to `c-forward-declarator' (twice), since we want to fontify up till
	the end of a declarator, not an arbitrary jit-lock chunk end.

2017-10-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	Fix autoload of flymake from elisp-mode during bootstrap (bug#28994)

	* lisp/loadup.el: add `progmodes` to load-path so we can find flymake.el.
	* lisp/kmacro.el: Require `replace` since we use query-replace-map.
	* lisp/replace.el: Require `text-mode` since we use text-mode-map.

2017-10-25  Alan Third  <alan@idiocy.org>

	Fix non-native fullscreen on NS (bug#28872)

	* src/nsterm.m (EmacsView::updateFrameSize): Handle case where
	FRAME_TOOLBAR_HEIGHT returns a negative number.  Force WM to set size
	of frame.

2017-10-25  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#28982

	* admin/MAINTAINERS: Add test/lisp/url/url-tramp-tests.el.

	* lisp/url/url-tramp.el (url-tramp-convert-url-to-tramp)
	(url-tramp-convert-tramp-to-url): Adapt to recent Tramp changes.

	* test/lisp/url/url-tramp-tests.el: New file.  (Bug#28982)

2017-10-25  Phillip Lord  <phillip.lord@russet.org.uk>

	Fix windows build errors

	* admin/nt/dist-build/build-zips.sh: Correct name of zip file, build
	  64 bit first

2017-10-25  Noam Postavsky  <npostavs@gmail.com>

	Fix compile warning for non-w32 builds

	Since 2017-07-25 "ls-lisp: Add an unload function and enable lexical
	binding", the non-w32 builds would treat the undeclared
	w32-collate-ignore-punctuation variable as lexical.
	* lisp/ls-lisp.el (top-level): Declare it as a dynamic variable.

2017-10-25  David Glasser  <glasser@davidglasser.net>  (tiny change)

	Display commit in package description, if available (Bug#28637)

	MELPA includes a :commit field in its
	packages (https://github.com/melpa/package-build/pull/6).  You can use
	this to tell if MELPA has processed a recently-merged change.  This
	commit adds that metadata to the package description buffer.

	* lisp/emacs-lisp/package.el: Display commit in package description.

2017-10-24  Paul Eggert  <eggert@cs.ucla.edu>

	Port to QNX

	Simplified version of a patch proposed by Elad Lahav in:
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00716.html
	which is based on a previous patch I proposed in:
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00707.html
	* configure.ac (opsys, CFLAGS, LIBS_SYSTEM, hybrid_malloc)
	(system_alloc, FIRST_PTY_LETTER, CYGWIN_OBJ):
	Set appropriately for QNX.
	* src/unexelf.c [__QNX__]: Include <sys/elf.h> instead of <elf.h>.
	(unexec): Check for sbrk failure, and fall back on old BSS end.

2017-10-24  Paul Eggert  <eggert@cs.ucla.edu>

	* configure.ac: Tweak libcurses diagnostic.

2017-10-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Scripts to automate windows binary distribution

	* admin/nt/dist-build/README-windows-binaries,
	  admin/nt/dist-build/build-dep-zips.py,
	  admin/nt/dist-build/build-zips.sh: New Files

2017-10-24  Gemini Lasswell  <gazally@runbox.com>

	Fix Edebug specs for map-let and with-maps-do

	* lisp/emacs-lisp/map.el (map-let): Fix Edebug spec (bug#24777).
	* test/lisp/emacs-lisp/map-tests.el (with-maps-do): Fix Edebug spec.

2017-10-24  Michael Albinus  <michael.albinus@gmx.de>

	* test/lisp/net/tramp-tests.el (tramp-test41-delay-load): New test.

	(tramp-test42-unload): Rename.

2017-10-24  Glenn Morris  <rgm@gnu.org>

	* admin/authors.el (authors-canonical-author-name):
	Ignore name issues in "lax" ChangeLogs.

	* test/lisp/progmodes/sql-tests.el
	(sql-tests-postgres-list-databases-error): Silence compiler.

2017-10-23  Michael Albinus  <michael.albinus@gmx.de>

	Further work on Bug#28889

	* lisp/net/tramp.el (tramp-set-syntax): New defun.
	(tramp-syntax): Use it.  Change :package-version.  (Bug#28889)

2017-10-23  Michael Albinus  <michael.albinus@gmx.de>

	Improve Tramp backward compatibility

	* lisp/net/tramp-compat.el (tramp-compat-tramp-file-name-slots):
	New defmacro.
	* lisp/net/tramp.el (with-parsed-tramp-file-name): Use it.

2017-10-23  Michael Albinus  <michael.albinus@gmx.de>

	Improve backward compatibility of tramp-tests.el

	* test/lisp/net/tramp-tests.el (tramp--test-emacs26-p): Fix docstring.
	(tramp-test41-unload): Skip unless Emacs >= 26.

2017-10-23  Martin Rudalics  <rudalics@gmx.at>

	Fix some ‘window-normalize-’ prefixed functions (Bug#28947)

	* lisp/window.el (window-normalize-buffer): Fix case where
	BUFFER-OR-NAME is a string specifying a dead buffer.  Fix
	doc-string (Bug#28947).
	(window-normalize-frame, window-normalize-window): Fix
	doc-strings (Bug#28947).

2017-10-23  Paul Eggert  <eggert@cs.ucla.edu>

	Port to OpenIndiana

	Problem reported by Nelson H. F. Beebe (Bug#28893).
	Also see Bug#23748, Bug#9736, and Bug#5735.
	* configure.ac (tputs_library): Prefer libcurses to libtermcap,
	since OpenIndiana libtermcap lacks tparm.

2017-10-22  Alexander Gramiak  <agrambot@gmail.com>

	Don't fill keywords after Emacs Lisp docstring

	This approach does mean that keywords that have spaces before them
	inside of docstrings aren't filled, but I think this is should be fine
	until Bug#28937 is fixed.

	* lisp/emacs-lisp/lisp-mode.el (lisp-fill-paragraph): Add a colon to
	paragraph-start unconditionally, but require that it follows at least
	one space.  (Bug#24622)
	* test/lisp/emacs-lisp/lisp-tests.el: New tests for Bug#24622 and
	Bug#7751.

2017-10-22  Alan Mackenzie  <acm@muc.de>

	Refactor c-forward-token-2 with new function c-forward-over-token-and-ws.

	Use the new function directly in several places where c-forward-token-2
	wouldn't move over the last token in the buffer.  This caused an infinite loop
	in c-restore-<>-properties.

	* lisp/progmodes/cc-engine.el (c-forward-over-token-and-ws): New function,
	extracted from c-forward-token-2.
	(c-forward-token-2): Refactor, calling the new function.
	(c-restore-<>-properties): Fix infinite loop.
	(c-forward-<>-arglist-recur, c-in-knr-argdecl)
	(c-looking-at-or-maybe-in-bracelist): Call the new function directly in place
	of c-forward-token-2.

	* lisp/progmodes/cc-cmds.el (c-defun-name) Call the new function directly in
	place of c-forward-token-2.

	* lisp/progmodes/cc-fonts.el (c-font-lock-enclosing-decls): Call the new
	function directly in place of c-forward-token-2.

2017-10-22  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid unnecessary rounding errors in timestamps

	Avoid the rounding errors of float-time when it’s easy.  E.g.,
	replace (< (float-time a) (float-time b)) with (time-less-p a b).
	* lisp/desktop.el (desktop-save):
	* lisp/ecomplete.el (ecomplete-add-item):
	* lisp/epg.el (epg-wait-for-completion):
	* lisp/files.el (dir-locals-find-file, dir-locals-read-from-dir):
	* lisp/image-dired.el (image-dired-get-thumbnail-image)
	(image-dired-create-thumb-1):
	* lisp/info.el (info-insert-file-contents):
	* lisp/ls-lisp.el (ls-lisp-format-time):
	* lisp/net/ange-ftp.el (ange-ftp-file-newer-than-file-p)
	(ange-ftp-verify-visited-file-modtime):
	* lisp/net/rcirc.el (rcirc-ctcp-sender-PING):
	* lisp/textmodes/remember.el (remember-store-in-mailbox):
	* lisp/url/url-cookie.el (url-cookie-expired-p):
	Bypass float-time to avoid rounding errors.

	* lisp/files.el (dir-locals-find-file):

2017-10-22  Paul Eggert  <eggert@cs.ucla.edu>

	Fix xdg timestamp error on 32-bit Emacs

	* lisp/xdg.el (xdg-thumb-mtime): Return an Emacs timestamp,
	not an integer.  This avoids signaling an error on 32-bit
	Emacs, where timestamps typically do not fit into fixnums
	(Bug#28921).

2017-10-22  John Williams  <jrw@pobox.com>  (tiny change)

	Test that advice doesn't trigger bytecomp warnings (Bug#28803)

	* test/lisp/emacs-lisp/bytecomp-tests.el
	(bytecomp-tests--test-no-warnings-with-advice): New test.

2017-10-21  Noam Postavsky  <npostavs@gmail.com>

	Another fix for unsafe directory error message (Bug#865)

	* lisp/server.el (server-ensure-safe-dir): Put file owner's uid, not
	current user's for the wrong owner case.  Show expanded file name in
	error message.

2017-10-21  Noam Postavsky  <npostavs@gmail.com>

	Handle https url for debbugs mbox (Bug#28831)

	In 2017-09-13 "Prefer HTTPS to FTP and HTTP in documentation",
	gnus-bug-group-download-format-alist was updated to use https for the
	debbugs.gnu.org mbox links, but gnus-read-ephemeral-bug-group assumed
	http links.
	* lisp/gnus/gnus-group.el (gnus-read-ephemeral-bug-group): Use
	url-parse functions to get the host name, instead of ad-hoc regexps.

2017-10-21  Noam Postavsky  <npostavs@gmail.com>

	Ignore string properties when saving eshell history (Bug#28700)

	* lisp/eshell/em-hist.el (eshell-write-history): Remove properties
	before inserting history strings.
	(eshell-read-history): Remove obsolete comment.
	* test/lisp/eshell/em-hist-tests.el (eshell-write-readonly-history):
	New test.

2017-10-21  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#28889

	* lisp/net/tramp.el: Change autoload cookie to tramp-autoload cookie.
	(tramp-completion-file-name-regexp-default)
	(tramp-completion-file-name-handler-alist)
	(tramp-completion-file-name-handler): Remove autoload cookie.
	(tramp-initial-completion-file-name-regexp): Remove.
	(tramp-autoload-file-name-regexp): New defconst.
	(tramp-register-autoload-file-name-handlers): Use it.
	(with-parsed-tramp-file-name): Adapt docstring.  Compute
	`tramp-file-name' slots.  (Bug#28889)

2017-10-21  Glenn Morris  <rgm@gnu.org>

	Update describe-function for recent Fdocumentation change

	* lisp/help-fns.el (describe-function-1):
	Handle Fdocumentation returning either void or invalid.

2017-10-21  Charles A. Roelli  <charles@aurox.ch>

	Make flymake's mouse-wheel interaction portable (Bug#28732)

	* lisp/progmodes/flymake.el (flymake--mode-line-format): Bind
	'mouse-wheel-down-event' and 'mouse-wheel-up-event' instead of
	'mouse-4' and 'mouse-5'.  Update the tooltip text accordingly, and
	remove a stray newline in it.

2017-10-21  Nick Helm  <nick@tenpoint.co.nz>

	Prevent eldoc from changing the mode line

	* lisp/emacs-lisp/eldoc.el (eldoc-minibuffer-message): Don't
	change the mode line if it is not displayed.  (Bug#28697)

2017-10-21  Eli Zaretskii  <eliz@gnu.org>

	Fix doc strings in simple.el

	* lisp/simple.el (shell-command-saved-pos)
	(region-extract-function, region-bounds): Doc fixes.  (Bug#28609)

2017-10-21  Phil Sainty  <psainty@orcon.net.nz>

	Avoid creating inconsistent buffer states in term-char-mode

	* lisp/term.el (term-mode, term-char-mode, term-line-mode)
	(term-emulate-terminal): Make buffer read-only in 'term-char-mode',
	except for the process filter's output.  Use 'read-only-mode-hook' to
	track and restore the user-set state of 'buffer-read-only' for
	'term-line-mode'.  (Bug#24837)
	(term-char-mode-buffer-read-only): New user option.
	(term-line-mode-buffer-read-only): New buffer-local variable.
	(term-line-mode-buffer-read-only-update): New function.
	(term-char-mode, term-line-mode): Use 'term-set-goto-process-mark'
	in pre-command-hook, and 'term-goto-process-mark-maybe' in
	post-command-hook to counter-act unexpected changes to point when
	using 'term-char-mode'.
	(term-char-mode-point-at-process-mark): New user option.
	(term-goto-process-mark): New buffer-local variable.
	(term-set-goto-process-mark): New function.
	(term-goto-process-mark-maybe): New function.
	(term-process-mark): New function.

	* etc/NEWS: Mention the new behavior and user options.

2017-10-21  Bahodir Mansurov  <bahodir@mansurov.org>  (tiny change)

	New input method 'usbek-cyrillic'

	* lisp/leim/quail/cyrillic.el (uzbek-cyrillic): New input method.
	(Bug#28848)

	* etc/NEWS: Mention the new input method.

2017-10-21  Eli Zaretskii  <eliz@gnu.org>

	Document 'minibuffer-with-setup-hook'

	* doc/lispref/minibuf.texi (Minibuffer Misc): Document
	minibuffer-with-setup-hook.  (Bug#28877)

2017-10-21  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify make-progress-reporter vs float-time

	* lisp/subr.el (make-progress-reporter): Remove no-longer-needed
	doc and code for the case where float-time is not supported,
	since float-time is always present now.

2017-10-21  Paul Eggert  <eggert@cs.ucla.edu>

	Fix two more minor Gnus typos

	* lisp/gnus/mail-source.el (mail-source-delete-old-incoming):
	The old code had two minor bugs: first, it multiplied by 1/65536
	instead of by 1/86400.  Second, it called current-time twice and
	glued part of the two results together, resulting in a race.
	Fix both bugs by simplifying the code and using
	time-to-number-of-days.

2017-10-21  Paul Eggert  <eggert@cs.ucla.edu>

	Fix two minor Gnus typos

	* lisp/gnus/gnus-sum.el (gnus-summary-import-article):
	Remove unused local, and fix use of local that was never assigned to.

2017-10-21  Glenn Morris  <rgm@gnu.org>

	Tweak Fdocumentation's error for an undefined function

	* src/doc.c (Fdocumentation): Restore the pre-25 behavior
	of signalling a void-function error for an undefined function.
	This seems cleaner than Emacs 25's "invalid-function: nil" error,
	which was (probably) an unintended consequence of changes to
	Findirect_function.

2017-10-21  Glenn Morris  <rgm@gnu.org>

	Tweak format of list of old files in NEWS header

	* etc/NEWS: Stop list of old NEWS files growing without limit.
	* admin/admin.el (set-version): Handle either NEWS header format.

2017-10-20  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/help-fns.el (describe-function-1):
	Fix help-fns-test-dangling-alias.  (Bug#28918)

	(cherry picked from commit e1d42f8f4a945669ff8b5159a569cb4b18f56e18)

2017-10-20  Glenn Morris  <rgm@gnu.org>

	Fix flymake's loading of subr-x

	* lisp/progmodes/flymake.el, test/lisp/progmodes/flymake-tests.el:
	No need to load subr-x at run-time.

2017-10-20  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#28896

	* lisp/net/tramp-adb.el (tramp-adb-handle-rename-file):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-do-copy-or-rename-file):
	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file): Handle FILENAME
	being a directory.  (Bug#28896)

	* test/lisp/net/tramp-tests.el (tramp-test11-copy-file)
	(tramp-test12-rename-file): Test also FILENAME being a directory.

2017-10-20  João Távora  <joaotavora@gmail.com>

	Skip a Flymake test for old gcc versions

	Fixes: 28906

	* test/lisp/progmodes/flymake-tests.el
	(different-diagnostic-types): Skip this test for gcc versions
	< 5.

2017-10-20  Eli Zaretskii  <eliz@gnu.org>

	Make :align-to account for display-line-numbers

	These changes also update the various bundled packages to use
	new feature, and better support customizations of the line-number
	face.
	* src/xdisp.c (calc_pixel_width_or_height): Improve commentary.
	Make :align-to count from the end of the line-number display when
	the offset or the width form reference that of the text area.
	(Bug#28855)

	* src/indent.c (Fline_number_display_width): Implement support for
	the PIXELWISE argument being 'columns'.  Update the doc string.
	(syms_of_indent): New symbol 'columns'.

	* lisp/ruler-mode.el (ruler-mode-window-col, ruler-mode-ruler):
	Call line-number-display-width with last argument 'columns'.

	* lisp/proced.el (proced-header-line): Call
	line-number-display-width with 2nd arg 'columns', which also fixes
	a problem when display-line-numbers is nil.

	* lisp/emacs-lisp/tabulated-list.el
	(tabulated-list-line-number-width): Call line-number-display-width
	with 2nd arg 'columns.
	(tabulated-list-entry-lnum-width): Remove unneeded defvar.
	(tabulated-list-print, tabulated-list-print-entry): No need to
	account for the value of tabulated-list-entry-lnum-width.
	(tabulated-list--current-lnum-width): New defvar.
	(tabulated-list-watch-line-number-width): New function.
	(tabulated-list-mode): Bind tabulated-list--current-lnum-width
	locally, and set up tabulated-list-watch-line-number-width as
	pre-redisplay-functions hook.

	* doc/lispref/display.texi (Size of Displayed Text): Document the
	'columns' value of the PIXELWISE argument.
	(Pixel Specification): Update and improve the documentation of the
	supported forms.

2017-10-20  João Távora  <joaotavora@gmail.com>

	Augment Flymake API for third-party extensions

	See
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00619.html

	* doc/misc/flymake.texi (Flymake error types): Rewrite
	example.
	(Flymake utility functions): Augment with new API.

	* lisp/progmodes/flymake.el (flymake-diagnostics): New function.
	(flymake--diag-accessor): New helper macro.
	(flymake-diagnostic-buffer, flymake-diagnostic-text)
	(flymake-diagnostic-beg, flymake-diagnostic-end)
	(flymake-diagnostic-backend): Accessors for diagnostic objects.
	(flymake--overlays): Use flymake-diagnostic property.
	(flymake--highlight-line): Simplify.  Only set
	flymake-diagnostic property.
	(flymake--handle-report, flymake-goto-next-error): Use
	flymake-diagnostic property.
	(flymake-show-diagnostic): Use diagnostic object.
	(flymake--diagnostics-buffer-entries): Use
	flymake-diagnostics.

2017-10-20  Glenn Morris  <rgm@gnu.org>

	Improve treatment of Fortran's "class default"

	* lisp/progmodes/f90.el (f90-start-block-re, f90-no-block-limit):
	Handle "class default".  (Bug#28786)
	* test/automated/f90.el (f90-test-bug25039): Add "class default".

2017-10-20  João Távora  <joaotavora@gmail.com>

	Flymake backends must check proc obsoleteness in source buffer

	Flymake backends that rely on sentinels running asynchronously and
	checking buffer-local variables that hold running processes should
	check for obsoleteness in the correct buffers, otherwise a (harmless)
	warning might be triggered.

	* doc/misc/flymake.texi (An annotated example backend):
	Check buffer-local proc in the current buffer.

	* lisp/progmodes/elisp-mode.el (elisp-flymake-byte-compile):
	Check buffer-local proc in the current buffer.

2017-10-19  Michael Albinus  <michael.albinus@gmx.de>

	Skip an rsync test in tramp-tests.el

	* test/lisp/net/tramp-tests.el (tramp-test17-dired-with-wildcards):
	Skip for "rsync".

2017-10-19  Martin Rudalics  <rudalics@gmx.at>

	On Windows default a frame's border width to zero (Bug#28873)

	* src/w32fns.c (Fx_create_frame): Default `border-width' to zero
	as everywhere else, see Bug#28873.

2017-10-19  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

	* lisp/cedet/semantic/analyze/refs.el:
	(semantic-analyze-proto-impl-toggle): Fix recently-introduced
	misspelling of pop-to-buffer-same-window.

2017-10-19  Bastian Beischer  <bastian.beischer@gmail.com>  (tiny change)

	Use pop-to-buffer-same-window instead of switch-to-buffer

	* lisp/cedet/semantic/decorate/include.el
	(semantic-decoration-include-visit):
	Use pop-to-buffer-same-window instead of switch-to-buffer
	(bug#28645).

	* lisp/cedet/semantic/analyze/refs.el
	(semantic-analyze-proto-impl-toggle): Same.

	* lisp/cedet/semantic/senator.el (senator-go-to-up-reference):
	Same.

	* lisp/cedet/semantic/mru-bookmark.el (semantic-mrub-visit):
	Same.

	* lisp/cedet/semantic/complete.el (semantic-complete-jump):
	Same.

2017-10-18  Eli Zaretskii  <eliz@gnu.org>

	Fix the MSDOS build.

	* msdos/sed1v2.inp (GETADDRINFO_A_LIBS, LIBLCMS2, XDBE_LIBS)
	(XDBE_FLAGS, HYBRID_MALLOC, LIBSYSTEMD_CFLAGS)
	(LIBSYSTEMD_LIBS): Edit to empty.
	(LIBRESOLV, DEPFLAGS, MKDEPDIR, YMF_PASS_LDFLAGS)
	(PRE_EDIT_LDFLAGS, POST_EDIT_LDFLAGS): Remove editing.
	Remove editing of lines that are no longer present in
	src/Makefile.in.
	* msdos/sed2v2.inp (NEED_MKTIME_INTERNAL)
	(NEED_MKTIME_WORKING): Define to 1.
	(HAVE_STRUCT_DIRENT_D_TYPE): Define to 1 for
	DJGPP >= 2.05.
	(HAVE_STRUCT_ATTRIBUTE_ALIGNED): Define to 1.
	Define PACKAGE_VERSION, not VERSION.
	(FLEXIBLE_ARRAY_MEMBER): Define to empty.
	(HAVE_DECL_*_UNLOCKED): Define to 0.
	(HAVE___BUILTIN_FRAME_ADDRESS): Define to 1.
	(PENDING_*): Don't define, as Gnulib no longer supports that.
	Instead, define _IOERR as it is in libc/file.h.
	* msdos/sed3v2.inp: Use $(CURDIR) instead of $(shell cd) to
	determine the current directory.
	(UPDATE_MANIFEST, UTILITIES): Don't edit.
	* msdos/sedlisp.inp (FIND_DELETE): Edit to "-delete".
	* msdos/sedlibmk.inp (AUTO_DEPEND): Define to yes.
	(HYBRID_MALLOC): Edit to empty.
	(am__cd): Don't edit.
	(../config.status): Replaces $(top_builddir)/config.status.
	Define OMIT_GNULIB_MODULE_foo = true for modules not built for
	MS-DOS.  Convert GL_GENERATE_xxx_H_TRUE and
	GL_GENERATE_xxx_H_FALSE into values of GL_GENERATE_xxx_H.
	* msdos/mainmake.v2 (src): Use 'compile-one-process', and make
	the command line shorter to fit into 126-char limit of
	command.com.
	* config.bat: Generate src/deps/*.d files.  Rename more files
	like djtar on plain DOS would.
	Don't rename src/dir.h: it is long gone.  Edit
	lib/gnulib.mk.in using the same scripts as for
	lib/Makefile.in.
	* msdos/depfiles.bat: Create *.d files, not *.Po.

	* src/thread.c (Fmake_thread) [!THREADS_ENABLED]: Improve the
	error message.
	* src/thread.h [MSDOS]: Include <signal.h>.
	* src/sysselect.h (select) [MSDOS]: Undefine, to avoid
	compilation errors.
	* src/sysdep.c (block_interrupt_signal, restore_signal_mask):
	Expose to MSDOS build.
	* src/process.c (update_processes_for_thread_death)
	[!subprocess]: No-op implementation.
	[HAVE_SETRLIMIT]: Move inclusion of sys/resource.h and
	declaration of nofile_limit outside "#ifdef subprocesses", as
	it's needed for MSDOS.
	* src/msdos.c (faccessat): Declare fullname[].
	* src/msdos.h (ENOTSUP): Define to be identical to ENOSYS.
	Include termhooks.h.
	* src/conf_post.h [WINDOWSNT]: Include ms-w32.h only on
	WINDOWSNT, not DOS_NT.

	* admin/admin.el (set-version): Set version on PACKAGE_VERSION.

2017-10-18  Eli Zaretskii  <eliz@gnu.org>

	Fix line number display after 'widen'

	* src/xdisp.c (maybe_produce_line_number): Don't use data cached
	by line-number-mode on the first redisplay after the buffer is
	widened.  (Bug#28879)

2017-10-18  Alan Third  <alan@idiocy.org>

	Remove resizable attribute on macOS undecorated frames (bug#28512)

	* src/nsterm.m (FRAME_DECORATED_FLAGS): Remove Cocoa specific #define.
	(initFrameFromEmacs): Remove Cocoa specific window style attributes.

2017-10-18  Martin Rudalics  <rudalics@gmx.at>

	Fix handling of `border-width' in `frameset--restore-frame' (Bug#28873)

	* lisp/frameset.el (frameset--restore-frame): Don't process
	`border-width' parameter via ‘modify-frame-parameters’
	(Bug#28873).

2017-10-18  Tino Calancha  <tino.calancha@gmail.com>

	Mention how to send CC to > 1 address in a bug report

	* admin/notes/bugtracker (* More detailed information):
	mention how to CC to more than 1 address (Bug#28833).

2017-10-18  Paul Eggert  <eggert@cs.ucla.edu>

	Improve format-time-string doc

	* doc/lispref/os.texi (Time Parsing): Fix some errors in the
	documentation for format-time-string.  Document ^, #, %s, and %z
	with colons.  Say that unrecognized sequences are output as-is.
	* src/editfns.c (Fformat_time_string): %S can stand for 60.
	Also mention unrecognized sequences.

2017-10-17  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'line-number-display-width'

	* doc/lispref/display.texi (Size of Displayed Text): Document the
	additional 2 columns used for line-number display.

	* src/indent.c (Fline_number_display_width): Doc fix.  (Bug#28248)

2017-10-17  İ. Göktuğ Kayaalp  <self@gkayaalp.com>

	Implement vc-default-dir-extra-headers for vc-rcs

	Add a do-nothing implementation for vc-rcs to suppress the message which
	the default function adds to the vc-dir buffer (Bug#28570).
	* lisp/vc/vc-rcs.el (vc-rcs-dir-extra-headers): New function.

2017-10-17  Martin Rudalics  <rudalics@gmx.at>

	In NEWS give advice on use of `switch-to-buffer' (Bug#28645)

	* etc/NEWS: Mention that applications should prefer
	`pop-to-buffer-same-window' to `switch-to-buffer'.  (Bug#28645)

2017-10-17  Tino Calancha  <tino.calancha@gmail.com>
	    Noam Postavsky  <npostavs@gmail.com>

	Dont update primary selection with winner-undo

	* lisp/winner.el (winner-set):
	Dont update primary selection when select-enable-primary
	is non-nil (Bug#28631).

2017-10-17  Paul Eggert  <eggert@cs.ucla.edu>

	Work around ImageMagick bug 825

	This should fix several bugs reported recently against Emacs
	(Bug#28518, Bug#28626, Bug#28632, Bug#28633, Bug#28770).
	* src/image.c (imagemagick_load_image):
	Do not call MagickWandTerminus.

2017-10-17  Noam Postavsky  <npostavs@gmail.com>

	Document rectangle-preview option more (Bug#27974)

	* lisp/rect.el (string-rectangle):
	* etc/NEWS.25: Mention `rectangle-preview'.

2017-10-17  Paul Eggert  <eggert@cs.ucla.edu>

	Do not reject https://gnu.org in commit messages

	* build-aux/git-hooks/commit-msg: Do not reject commit messages
	containing http: or ftp: URLs to gnu.org or fsf.org.  Instead,
	rewrite the messages to use https: URLs.

2017-10-16  Gemini Lasswell  <gazally@runbox.com>

	Fix Edebug spec for cl-defun (bug#24255)

	* lisp/emacs-lisp/cl-macs.el: Modify the Edebug spec for
	`cl-lambda-list' to support destructuring argument lists.
	(cl-defun, cl-defmacro): Fix spelling errors in docstrings.
	* lisp/textmodes/rst.el: Remove alternate version of Edebug
	specs for `cl-lambda-list' and `cl-type-spec'.

2017-10-16  Eli Zaretskii  <eliz@gnu.org>

	Fix errors in kmacro.el post-command-hook

	* lisp/kmacro.el (kmacro-step-edit-active): Initialize to nil to
	avoid 'void-variable' errors.  (Bug#28818)
	* test/lisp/kmacro-tests.el
	(kmacro-tests-step-edit-cleans-up-hook): Now succeeds.  (Bug#18708)

2017-10-16  Eli Zaretskii  <eliz@gnu.org>

	Fix range-error in image-dired.el

	* lisp/image-dired.el (image-dired-create-thumb-1): Avoid
	overflowing an Emacs integer on 32-bit hosts.  (Bug#28809)

2017-10-16  Eli Zaretskii  <eliz@gnu.org>

	Fix 'line-number-display-width' in hscrolled windows

	* src/indent.c (line_number_display_width): Make sure a line
	number is generated even when the first line of the window is
	completely hscrolled out of view.  (Bug#28854)

2017-10-16  Michael Albinus  <michael.albinus@gmx.de>

	Fix error in tramp-smb-handle-insert-directory

	* lisp/net/tramp-smb.el (tramp-smb-handle-insert-directory):
	Insert size information only when FULL-DIRECTORY-P is non-nil.

2017-10-16  Andy Moreton  <andrewjmoreton@gmail.com>

	Don't reject PBM header whitespace unnecessarily

	* lisp/image.el (image-type-header-regexps):
	Allow two or more CRs or LFs in initial whitespace sequences.  See:
	http://netpbm.sourceforge.net/doc/pbm.html

2017-10-16  Paul Eggert  <eggert@cs.ucla.edu>

	Fix regression in display of PPM images

	Problem reported by Roland Winkler (Bug#28824#35).
	Based on a patch proposed by Andy Moreton (Bug#28824#38).
	* src/image.c (pbm_scan_index): New function.
	(pbm_load): Use it to decode raw data correctly when its top bit
	is set.

2017-10-16  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Require subr-x when compiling nnimap.el

	* lisp/gnus/nnimap.el (require): For the when-let* macro.

2017-10-15  Noam Postavsky  <npostavs@gmail.com>

	Fix ert-test finding by symbol (Bug#28849)

	In 2017-07-28 "* lisp/subr.el (define-symbol-prop): New function", the
	symbol used for ert tests in load-history was changed from
	`ert-deftest' to `ert--test', but a couple of other places were not
	updated accordingly.
	* lisp/emacs-lisp/ert.el (ert-find-test-other-window): Pass
	`ert--test' as the TYPE to `find-function-do-it'.
	(top-level): Use `ert--test' as the key to the
	`find-function-regexp-alist' entry.

2017-10-15  Noam Postavsky  <npostavs@gmail.com>

	Don't remember old debugger window (Bug#17882)

	* lisp/emacs-lisp/debug.el (debug): Unset debugger-previous-window
	when `debugger-will-be-back' is nil.

2017-10-15  Noam Postavsky  <npostavs@gmail.com>

	Disable python native completion on w32 (Bug#28580)

	* lisp/progmodes/python.el
	(python-shell-completion-native-disabled-interpreters): For windows-nt
	systems, put an empty string to match interpreters.

2017-10-15  Noam Postavsky  <npostavs@gmail.com>

	Let select-frame-by-name choose any frame when called from lisp (Bug#25521)

	* lisp/frame.el (select-frame-by-name): Choose from the whole list of
	frames in the non-interactive part, if not found on the current
	display.

2017-10-15  Eli Zaretskii  <eliz@gnu.org>

	* lisp/dired-aux.el (dired-create-directory): Doc fix.

2017-10-15  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warnings in optimized builds

	* src/process.c (Fmake_network_process):
	* src/image.c (xbm_scan, gif_load):
	* src/fileio.c (Frename_file):
	* src/data.c (Fmake_local_variable):
	* src/buffer.c (fix_start_end_in_overlays):
	* lib-src/etags.c (process_file_name): Mark variables with UNINIT
	to avoid compiler warnings in optimized builds.

2017-10-15  K. Handa  <handa@gnu.org>

	Improve customization of arabic-shaper-ZWNJ-handling.

	Make the effect of customizing arabic-shaper-ZWNJ-handling appear
	immediately.
	* lisp/language/misc-lang.el (arabic-shaper-ZWNJ-handling): Add :set
	value.
	* src/composite.c (Fclear_composition_cache): New function.
	(syms_of_composite): Defsubr it.

2017-10-15  Charles A. Roelli  <charles@aurox.ch>

	Improve customization type of 'mouse-drag-and-drop-region'

	* lisp/mouse.el (mouse-drag-and-drop-region): Provide a more
	precise customization type.

2017-10-15  Paul Eggert  <eggert@day>

	Encourage https: in commit messages

	* CONTRIBUTE: Prefer https: when citing.
	* build-aux/git-hooks/commit-msg:
	Diagnose http: and ftp: URLs to FSF or GNU hosts.

2017-10-14  Martin Rudalics  <rudalics@gmx.at>

	Fix wording in Elisp manual's child frames section (Bug#28819)

	* doc/lispref/frames.texi (Child Frames): Fix wording (Bug#28819).

2017-10-14  Eli Zaretskii  <eliz@gnu.org>

	Another fix for C mode fontification of w32 source files

	* .dir-locals.el (c-mode) <c-noise-macro-names>: Add
	"CALLBACK", to correctly fontify functions with this attribute.

2017-10-14  Eli Zaretskii  <eliz@gnu.org>

	Fix fontification of ALIGN_STACK functions

	* .dir-locals.el (c-mode) <c-noise-macro-names>: Add
	"ALIGN_STACK", to correctly fontify functions with this attribute.

2017-10-14  Eli Zaretskii  <eliz@gnu.org>

	Make sure thread stack is properly aligned on MS-Windows

	* src/systhread.c: Include w32term.h instead of windows.h.
	(w32_beginthread_wrapper): Add ALIGN_STACK attribute, to ensure
	the thread's stack is correctly aligned.
	* src/w32term.h (ALIGN_STACK): Update commentary.

2017-10-14  Paul Eggert  <eggert@cs.ucla.edu>

	Do not under-align pseudovectors

	Problem reported by Fabrice Popineau in:
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00357.html
	Also see diagnosis by Eli Zaretskii in:
	https://lists.gnu.org/archive/html/emacs-devel/2017-10/msg00476.html
	* src/alloc.c (vector_alignment):
	Now a multiple of alignof (max_align_t).

2017-10-13  Simen Heggestøyl  <simenheg@gmail.com>

	Fix indentation bug in multi-line CSS selectors

	* lisp/textmodes/css-mode.el (css--colon-inside-selector-p): Fix
	indentation of multi-line CSS selectors that include both a
	pseudo-class and parenthesis.

	* test/manual/indent/css-mode.css: Add test for the above change.

2017-10-13  Andreas Schwab  <schwab@linux-m68k.org>

	gnutls_mac_get_nonce_size has been added in gnutls 3.3

	* src/gnutls.c (HAVE_GNUTLS_MAC_GET_NONCE_SIZE)
	[GNUTLS_VERSION_NUMBER >= 0x030300]: Define.
	(gnutls_mac_get_nonce_size): Depend on
	HAVE_GNUTLS_MAC_GET_NONCE_SIZE.
	(Fgnutls_macs): Use 0 for :mac-algorithm-noncesize if
	!HAVE_GNUTLS_MAC_GET_NONCE_SIZE.

2017-10-13  Paul Eggert  <eggert@cs.ucla.edu>

	* CONTRIBUTE: Suggest American English.

2017-10-12  Eli Zaretskii  <eliz@gnu.org>

	Fix this-command-keys for "M-x foo" commands

	* src/keyboard.c (Fset__this_command_keys): Don't assume KEYS is a
	unibyte string.  (Bug#28798)

2017-10-12  Paul Eggert  <eggert@cs.ucla.edu>

	Let rename-file rename dirs across filesystems

	Problem diagnosed by Andreas Schwab (Bug#28792#65).
	This fixes a bug that I introduced in
	2017-09-10T22:39:24@eggert@cs.ucla.edu
	"Fix race with rename-file etc. with dir NEWNAME".
	* src/fileio.c (Frename_file): Copy a source directory across
	file system boundaries even if its name does not end in slash.

2017-10-12  João Távora  <joaotavora@gmail.com>

	Simplify Flymake user documentation

	Fix some confusing parts of Flymake user documentation, like a
	repeated listing of situations leading to a syntax check.
	Documentation is now divided into three chapters only: "Using
	Flymake", "Extending Flymake", and a chapter for the legacy backend.

	Obsolete mention of "errors" and "lines" is replaced by
	"diagnostics/problems" and "regions" where appropriate.

	* doc/misc/flymake.texi (Overview of Flymake): Delete chapter.
	(Using Flymake): Merge with chapter "Overview of Flymake".
	(Installing Flymake): Delete chapter.
	(Flymake mode, Running the syntax check)
	(Navigating to error lines): Delete sections.
	(Syntax check statuses): Review and augment with x-references.
	(Backend exceptions): Mention shortcut in menu.

	* lisp/progmodes/flymake.el (flymake-menu): Tweak minor mode
	menu to not speak of "errors".
	(flymake-goto-next-error, flymake-goto-prev-error): Fix
	wording.

2017-10-12  Eli Zaretskii  <eliz@gnu.org>

	* etc/NEWS: Mention the new version of Org.

2017-10-12  Noam Postavsky  <npostavs@gmail.com>

	Don't use (format "%s" ...) for string copying (Bug#28774)

	As of 2017-10-04 'Speed up (format "%s" STRING) and the like', (format
	"%s" STRING) no longer produces a new string.
	* lisp/ido.el (ido-completions): Use `copy-sequence' to make a new
	string, so that we can add text properties to (copies of) symbol
	names.

2017-10-11  Alan Third  <alan@idiocy.org>

	Make frame-list-z-order on NS match Windows behavior (bug#28788)

	* src/nsfns.m (Fns_frame_list_z_order): If terminal isn't a frame,
	ignore it rather than returning nil.

2017-10-11  Nicolas Petton  <nicolas@petton.fr>

	Bump Emacs version to 26.0.90

	* README:
	* configure.ac:
	* msdos/sed2v2.inp:
	* nt/README.W32: Bump Emacs version.

2017-10-11  Nicolas Petton  <nicolas@petton.fr>

	Update authors.el

	* admin/authors.el (authors-valid-file-names)
	(authors-renamed-files-alist): Additions.

2017-10-11  Nicolas Petton  <nicolas@petton.fr>

	* admin/authors.el (authors-aliases): Additions.

	* ChangeLog.3: Update.

2017-10-11  Radon Rosborough  <radon.neon@gmail.com>

	Fix docstring style for 'functionp'

	* src/eval.c (functionp): Make docstring start with verb.
	(Bug#28781)

2017-10-11  Michael Albinus  <michael.albinus@gmx.de>

	Format shell commands in tramp.texi

	* doc/misc/tramp.texi (Obtaining Tramp, Remote shell setup):
	Format shell commands better.

2017-10-10  João Távora  <joaotavora@gmail.com>

	Unbreak the button in the Flymake diagnostics buffer again

	Adding the 'keymap' property enabled RET but broke the mouse-action.

	* lisp/progmodes/flymake.el
	(flymake--diagnostics-buffer-entries): Use 'action' instead of 'keymap'.

2017-10-10  Mark Oteiza  <mvoteiza@udel.edu>

	Add mode map to Flymake diagnostic button

	* lisp/progmodes/flymake.el (flymake--diagnostics-buffer-entries): Add
	keymap propery.

2017-10-10  João Távora  <joaotavora@gmail.com>

	Tweak the Flymake diagnostics buffer again

	* lisp/progmodes/flymake.el
	(flymake-diagnostics-buffer-mode-map): Don't bind [mouse-1].
	(flymake-show-diagnostic): Rename from
	flymake-show-diagnostic-at-point.  Really use another window.
	(flymake-goto-diagnostic): Rename from
	flymake-goto-diagnostic-at-point.
	(flymake--diagnostics-buffer-entries): Use a button just for
	the message bit.

2017-10-10  Mark Oteiza  <mvoteiza@udel.edu>

	Simplify Flymake diagnostics buffer UX

	Don't create text-buttons unnecessarily, just bind RET and SPC in the
	diagnostics buffer to a command that figures out which diagnostic it
	was invoked on.

	* lisp/progmodes/flymake.el
	(flymake--diagnostics-buffer-mode-keymap): Renamed from
	flymake--diagnostics-buffer-button-keymap.
	(flymake-show-diagnostic-at-point): Don't take a button.
	(flymake-goto-diagnostic-at-point): Don't pass button to
	flymake-show-diagnostic-at-point.
	(flymake--diagnostics-buffer-entries): Simplify.

2017-10-10  João Távora  <joaotavora@gmail.com>

	First stab at a Flymake diagnostics buffer

	The diagnostics buffer summarizes the diagnostics of a buffer in a
	tabulated list and is permanently updated after each Flymake check.

	* lisp/progmodes/flymake.el (flymake--handle-report): Call
	flymake-show-diagnostics-buffer under certain conditions.
	(flymake-menu, flymake--diagnostics-buffer-source)
	(flymake--diagnostics-buffer-button-keymap)
	(flymake-show-diagnostic-at-point)
	(flymake-goto-diagnostic-at-point)
	(flymake--diagnostics-buffer-entries)
	(flymake-diagnostics-buffer-mode)
	(flymake--diagnostics-buffer-name)
	(flymake-show-diagnostics-buffer): New definitions.

2017-10-10  João Távora  <joaotavora@gmail.com>

	* etc/NEWS (Flymake): Rewrite entry.

2017-10-10  Eli Zaretskii  <eliz@gnu.org>

	Improve the Flymake manual

	* doc/misc/flymake.texi: Add a 'coding' cookie.  Add a
	@syncodeindex directive for @vindex.  Use 2 spaces between
	sentences.  Lower-case @cindex entries.
	(Overview of Flymake): Fix use of @itemize and @pxref.  Fix
	punctuation and markup.
	(Backend exceptions): Use @emph instead of @dfn.  Add more
	indexing.
	(Customizable variables, Extending Flymake): Improve wording.
	(Flymake error types): Fix usage of @itemize.  Improve wording.
	(Backend functions): Fix punctuation.  Fix markup.  Add a
	cross-reference to ELisp manual.
	(Flymake utility functions): Add a cross-reference to ELisp manual.
	(An annotated example backend): Fix punctuation and typos.
	(Flymake mode, Running the syntax check)
	(Navigating to error lines, Backend exceptions)
	(Customizable variables, Flymake error types, Backend functions)
	(Flymake utility functions, Proc customization variables)
	(Locating a master file, Locating the buildfile)
	(Starting the syntax check process, Parsing the output)
	(Interaction with other modes): Fix indexing.  Add index entries
	for functions, variables, and concepts.

2017-10-10  João Távora  <joaotavora@gmail.com>

	Fix two Flymake bugs

	* lisp/progmodes/flymake.el (define-fringe-bitmap): Protect
	against --without-x.
	(flymake--mode-line-format): Ensure mode-line's mouse-4 and mouse-5 work
	in their own windows.

2017-10-10  João Távora  <joaotavora@gmail.com>

	Don't log "emergencies" in the Flymake legacy backend

	* lisp/progmodes/flymake-proc.el (flymake-proc--panic)
	(flymake-proc-legacy-flymake): Don't log "emergencies"

2017-10-10  João Távora  <joaotavora@gmail.com>

	Add full documentation on new Flymake API

	Also, as a minor addition to this API, set flymake-text
	on the diagnostic overlay.  This enables a good example in
	the section "Customization Flymake annotations".

	* doc/misc/flymake.texi (Overview of Flymake)
	(Syntax check statuses): Rework.
	(Backend exceptions): Rename from "Troubleshooting"
	(Customizable variables): Add flymake-start-on-flymake-mode. Rework.
	(Extending Flymake): Write chapter.
	(Customizing Flymake annotations, Flymake backends)
	(Flymake utility functions, An annotated example backend):
	New sections and subsections

	* lisp/progmodes/flymake.el (flymake-diagnostic-functions)
	(flymake-diagnostic-types-alist): Rework docstring.
	(flymake--highlight-line): Set and use flymake-text property in overlay.
	(flymake-goto-next-error, flymake-goto-prev-error): Fix funny quotes.

2017-10-10  João Távora  <joaotavora@gmail.com>

	Fix some Flymake docstrings and messages

	* lisp/progmodes/flymake.el
	(flymake-start-on-flymake-mode): fix typo.
	(flymake-mode): Add docstring.
	(flymake-mode-line-format): Fix help-echo indications. mouse-2
	describes flymake-mode.

2017-10-10  João Távora  <joaotavora@gmail.com>

	Make three new Flymake commands for debugging common problems

	* lisp/progmodes/flymake.el (flymake-running-backends)
	(flymake-disabled-backends)
	(flymake-reporting-backends): Make interactive.
	(flymake--collect): Take optional arg.

2017-10-09  Nicolas Petton  <nicolas@petton.fr>

	* admin/authors.el (authors-renamed-files-alist): addition.

2017-10-09  Paul Eggert  <eggert@cs.ucla.edu>

	Fix PWD check on DOS_NT

	* src/sysdep.c (get_current_dir_name_or_unreachable):
	Do not consider a file name like "a:b" to be absolute on DOS_NT.

2017-10-09  Paul Eggert  <eggert@cs.ucla.edu>

	Fix unlikely overflows with wd length

	* src/sysdep.c (get_current_dir_name_or_unreachable):
	Avoid integer overflow if working directory name is absurdly long.
	When allocating memory for getcwd, do not exceed MAXPATHLEN.

2017-10-09  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/gnus/message.el: Improve last commit

	(message-clone-locals): Don't mistakenly match other variables whose
	name happens to include "message-default-charset".

2017-10-09  Ken Olum  <kdo@cosmos.phy.tufts.edu>

	Fix problems when editing raw undecoded message (Bug#28671)

	* lisp/mail/rmailedit.el (rmail-cease-edit): If rmail-old-mime-state
	is set, meaning that we are editing the raw message, do not
	encode it again.  Delete old body after, not before, inserting
	new, to avoid moving marker at beginning of next message.

2017-10-09  Eli Zaretskii  <eliz@gnu.org>

	Avoid encoding errors in message.el

	* lisp/gnus/message.el (message-clone-locals): Don't clone
	message-default-charset.  (Bug#25645)

2017-10-09  Eli Zaretskii  <eliz@gnu.org>

	Improve doc string and prompt of 'grep-read-files'

	* lisp/progmodes/grep.el (grep-read-files): Clarify in the doc
	string and in the prompt that shell wildcards can be used.
	Suggested by Allen Li <vianchielfaura@gmail.com>.  (Bug#28615)

2017-10-09  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertion violations when line numbers are displayed

	* src/xdisp.c (redisplay_window): Clear the window's desired glyph
	matrix before calling try_window with the same starting	point.
	This avoids assertion violations when switching from a buffer
	without line numbers to a buffer with line numbers.  (Bug28710)

2017-10-09  João Távora  <joaotavora@gmail.com>

	Be lazy when starting Flymake checks

	Don't start the check immediately if the buffer is not being
	displayed.  Wait until it is, using window-configuration-change-hook.

	This enables the user to batch-enable flymake-mode on many buffers and
	not have that operation exhaust system resources for checking each
	one.  Likewise, an editing or save operation in a currently
	non-displayed buffer does not immediately start a check.

	* lisp/progmodes/flymake.el (flymake-start-on-flymake-mode):
	Rename from flymake-start-syntax-check-on-find-file.
	(flymake-start-syntax-check-on-find-file): Obsolete alias for
	flymake-start-on-flymake-mode.
	(flymake-start): Redesign.  Affect the global post-command-hook
	and local window-configuraiton-change-hook.
	(flymake--schedule-timer-maybe)
	(flymake-after-change-function, flymake-after-save-hook): Pass
	t to flymake-start.

	* test/lisp/progmodes/flymake-tests.el (flymake-tests--call-with-fixture)
	(dummy-backends, recurrent-backend): Start flymake check
	explicitly and immediately.

2017-10-09  Eli Zaretskii  <eliz@gnu.org>

	Fix last change in frameset.el

	* lisp/frameset.el (frameset-filter-font-param): Fix a thinko in
	filtering the 'font' parameter.  (Bug#17352)

2017-10-09  Martin Rudalics  <rudalics@gmx.at>

	Describe how window dividers can replicate vertical borders (Bug#27830)

	* doc/emacs/frames.texi (Scroll Bars): Describe how window
	dividers can be used to replicate vertical borders when scroll
	bars are disabled (Bug#27830).
	* doc/emacs/frames.texi (Window Dividers): Mention their use
	in replicating vertical borders.

2017-10-09  Alexander Gramiak  <agrambot@gmail.com>

	Add line-number faces to the display-line-numbers group

	See https://lists.gnu.org/r/emacs-devel/2017-10/msg00151.html
	and its resulting thread.

	* lisp/display-line-numbers.el (display-line-numbers): Add to the
	convenience group.
	* lisp/faces.el (line-number):
	(line-number-current-line): Add to the display-line-numbers group.

2017-10-09  Alexander Gramiak  <agrambot@gmail.com>

	Increase xterm click count only within double-click-fuzz

	* lisp/xt-mouse.el (xterm-mouse-event): Save the last click's position
	and check it against the current click's position.  (Bug#28658)

2017-10-08  Alan Third  <alan@idiocy.org>

	Change pause in fullscreen toggling for NS port (bug#28496)

	* lisp/frame.el (toggle-frame-fullscreen): Replace sit-for with
	sleep-for, and reduce time.

2017-10-08  Michael Albinus  <michael.albinus@gmx.de>

	Handle PARENTS properly in tramp-*-handle-make-directory

	* lisp/net/tramp-adb.el (tramp-adb-handle-make-directory):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-make-directory):
	Handle PARENTS properly.

	* test/lisp/net/tramp-tests.el (tramp-test13-make-directory):
	Extend test.

2017-10-08  Paul Eggert  <eggert@cs.ucla.edu>

	Improve test for unreachable dirs

	* src/sysdep.c (get_current_dir_name_or_unreachable):
	New function, with most of the old contents of
	emacs_get_current_dir_name.
	(emacs_get_current_dir_name): Use it.  Use a simpler
	test for unreachable directory strings, and also apply
	it to getcwd etc. (Bug#27871)

2017-10-08  Paul Eggert  <eggert@cs.ucla.edu>

	* src/xsmfns.c (x_session_initialize): Fix memory leak.

2017-10-08  K. Handa  <handa@gnu.org>

	New option for handling ZWNJ in Arabic text rendering

	Provide a new option 'arabic-shaper-ZWNJ-handling' that controls how
	to display ZWNJ in Arabic text rendering (Bug#28339).
	* lisp/language/misc-lang.el: Register arabic-shape-gstring in
	composition-function-table.
	(arabic-shaper-ZWNJ-handling): New variable.
	(arabic-shape-log): New variable.
	(arabic-shape-gstring): New function.
	* lisp/composite.el (lgstring-remove-glyph): New function.

2017-10-08  Noam Postavsky  <npostavs@gmail.com>

	Make python prettify symbols into a defvar (Bug#28713)

	* lisp/progmodes/python.el (python-prettify-symbols-alist): New
	variable.
	(python--prettify-symbols-alist): Make into obsolete alias for
	`python-prettify-symbols-alist'.

2017-10-07  Alan Third  <alan@idiocy.org>

	Fix fullscreen crash on macOS (bug#28496)

	* lisp/frame.el (toggle-frame-fullscreen): Wait for animation to
	complete on macOS.

2017-10-07  Alan Third  <alan@idiocy.org>

	Fix crash when closing fullscreen frame on macOS (bug#28661)

	* src/nsterm.m (EmacsView::windowWillResize): Return new frame size
	unmodified if the frame isn't live.

2017-10-07  Michael Albinus  <michael.albinus@gmx.de>

	Support gio tool in Tramp

	"gvfs-<command>" utilities have been deprecated in GVFS 1.31.1.  We
	must use "gio <command>" tool instead.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-gio-mapping): New defconst.
	(tramp-gvfs-handle-file-notify-add-watch): Support also "gio monitor"
	(tramp-gvfs-gio-tool-p): New defun.
	(tramp-gvfs-send-command): Use it.  Call gio tool if available.

2017-10-07  João Távora  <joaotavora@gmail.com>

	Fix flymake-goto-next-error when message has %-constructs

	* lisp/progmodes/flymake.el (flymake-goto-next-error): Fix
	message call.  Add missing period in docstring.

2017-10-07  Piotr Trojanek  <piotr.trojanek@gmail.com>

	* src/gnutls.c (syms_of_gnutls): Remove duplicated call to DEFSYM.

2017-10-07  Eli Zaretskii  <eliz@gnu.org>

	Move the entry about 'format' into Incompatible Lisp Changes

	* etc/NEWS: Move the entry about 'format' refraining from allocating
	new strings into Incompatible Lisp Changes.  (Bug#28625)

2017-10-07  Eli Zaretskii  <eliz@gnu.org>

	Fix glitches in displaying TTY menus

	* src/dispnew.c (update_frame_line): Accept an additional argument
	UPDATING_MENU_P; if non-zero, home the cursor before updating a
	frame's line.  All callers changed.
	(update_frame_1): Accept an additional argument UPDATING_MENU_P,
	and pass it to update_frame_line.  All callers changed.
	(update_frame_with_menu): Call update_frame_1 with last argument
	non-zero.  (Bug#17497)

2017-10-06  Gemini Lasswell  <gazally@runbox.com>

	Create new Edebug spec for docstrings and use it in closures

	Since (:documentation FORM) can be used to create a docstring
	when lexical-binding is on, allow for that possibility in Edebug
	specs (bug#24773).
	* lisp/emacs-lisp/edebug.el: Define an Edebug spec for docstrings
	called lambda-doc and modify the Edebug specs for defun and
	defmacro to use it.
	(edebug-instrument-function): Check for generic functions first,
	to fix bug where edebug-step-in didn't work on methods now that
	cl-defgeneric has an Edebug spec.
	* lisp/subr.el (lambda): Modify Edebug spec to use lambda-doc.
	* lisp/emacs-lisp/cl-generic.el (cl-defgeneric): Add Edebug spec
	(bug#27747).
	(cl-defmethod): Use lambda-doc in Edebug spec.
	* lisp/emacs-lisp/cl-macs.el: Modify Edebug spec for
	cl-declarations-or-string to use lambda-doc, and modify Edebug
	spec for cl-lambda-expr to use cl-declarations-or-string.
	* lisp/emacs-lisp/pcase.el (pcase-lambda): Modify Edebug spec to
	use lambda-doc, as well as &define and def-body which are
	necessary for using Edebug on code wrapped by lambda.
	* lisp/emacs-lisp/generator.el (iter-defun, iter-lambda): Add
	Edebug specs.

2017-10-06  Eli Zaretskii  <eliz@gnu.org>

	Avoid byte-compilation warnings in message.el

	* lisp/gnus/message.el: Require 'subr-x' when compiling, to
	avoid compiler warnings.

2017-10-06  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug in recent styled_format change

	Problem reported by Kaushal Modi in:
	https://lists.gnu.org/r/emacs-devel/2017-10/msg00141.html
	* src/editfns.c (styled_format): Fix bug where USE_SAFE_ALLOCA was
	not always followed by SAFE_FREE.  This bug was introduced in my
	patch 2017-09-26T23:31:57Z!eggert@cs.ucla.edu entitled "Avoid some
	unnecessary copying in Fformat etc."

2017-10-06  João Távora  <joaotavora@gmail.com>

	Cleanup emacs-lisp-mode's use of Flymake

	* lisp/progmodes/elisp-mode.el (elisp-flymake--checkdoc-1):
	Delete.
	(elisp-flymake-checkdoc): Incorporate old
	elisp-flymake--checkdoc-1.
	(elisp-flymake--byte-compile-done): Simplify.  Don't cleanup
	here.
	(elisp-flymake-byte-compile): Remove spurious interactive spec.
	Simplify.  Cleanup on every possible exit.

2017-10-06  João Távora  <joaotavora@gmail.com>

	Fix @include directive in Flymake doc

	* doc/misc/flymake.texi: Don't @include a relative path.

2017-10-06  Mark Oteiza  <mvoteiza@udel.edu>

	Move read-multiple-choice to its own library

	* lisp/emacs-lisp/rmc.el: New file.
	* lisp/emacs-lisp/subr-x.el (read-multiple-choice): Remove.
	* lisp/gnus/message.el:
	* lisp/net/nsm.el: Change required library.

2017-10-06  Piotr Trojanek  <piotr.trojanek@gmail.com>

	* src/process.c (syms_of_process): Remove duplicated call to DEFSYM.

	Fixes: Bug#28721

2017-10-06  Lele Gaifax  <lele@metapensiero.it>

	Fix typos in Flymake documentation

	* doc/misc/flymake.texi (Syntax check statuses)
	(Adding support for a new syntax check tool)
	(Implementation overview, Locating the buildfile): Fix typos.

	* lisp/progmodes/flymake-proc.el (flymake-proc--report-fn)
	(flymake-proc--find-possible-master-files):Fix typos.
	(flymake-proc--panic)
	(flymake-proc-legacy-flymake): Fix function reference in doc.

	* lisp/progmodes/flymake.el (flymake-error)
	(flymake-diagnostic-functions): Fix typos.
	(flymake-diagnostic-types-alist): Rephrase and fix typos.
	(flymake--backend-state): Fix typos and rephrase.
	(flymake--handle-report): Delete empty line.
	(flymake--disable-backend)
	(flymake--run-backend): Fix typos.
	(flymake-goto-next-error, flymake-goto-prev-error): Rephrase.

2017-10-06  Eli Zaretskii  <eliz@gnu.org>

	Revert last change in 'shr-descend'

	* lisp/net/shr.el (shr-descend): Revert the part of the last
	change which introduced calls to shr-indirect-call into this
	function.  Add a comment explaining the rationale for that.
	(Bug#28402)

2017-10-06  João Távora  <joaotavora@gmail.com>

	Don't error when turning on Flymake with no known backends

	Leave it to the mode line indicator to inform the user that there
	is still some configuration to do.

	* lisp/progmodes/flymake.el (flymake-mode): Simplify.

2017-10-06  João Távora  <joaotavora@gmail.com>

	Delete a Flymake obsolete alias that can't possibly work

	The function `flymake-ler-make-ler' can't possibly work as an backward
	compatible interface to existing extensinos (even purely hypothetical
	ones, since none are known).  This is because every diagnostic
	considered by Flymake has to passed to a report-fn function.

	* lisp/progmodes/flymake.el (flymake-ler-make-ler): Delete.

2017-10-06  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug with unmounted directory on GNU/Linux

	* src/sysdep.c (emacs_get_current_dir_name): Do not use
	get_current_dir_name result unless it is absolute (Bug#27871).


2017-10-05  Nicolas Petton  <nicolas@petton.fr>

	Update authors.el

	* admin/authors.el (authors-renamed-files-alist)
	(authors-valid-file-names): Additions.

2017-10-05  Gemini Lasswell  <gazally@runbox.com>

	Fix dynamic binding wrapper in iter-lambda (bug#25965)

	* lisp/emacs-lisp/generator.el (cps--make-dynamic-binding-wrapper):
	Remove extra evaluation of form.
	* test/lisp/emacs-lisp/generator-tests.el
	(cps-iter-lambda-with-dynamic-binding): New test.

2017-10-05  Rasmus  <rasmus@gmx.us>

	Update Org to v9.1.2

	Please note this is a bugfix release.  See etc/ORG-NEWS for details.

2017-10-05  Alan Mackenzie  <acm@muc.de>

	Fix irregularities with CC Mode fontification, particularly with "known types"

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarators): Introduce a new
	optional parameter, template-class.  In "class <X = Y>", fontify "Y" as a
	type.
	(c-font-lock-single-decl): New variable template-class, set to non-nil when we
	have a construct like the above.  Pass this as argument to
	c-font-lock-declarators.
	(c-font-lock-cut-off-declarators): Check more rigorously that a declaration
	being processed starts before the function's starting position.
	(c-complex-decl-matchers): Remove the redundant clause which fontified "types
	preceded by, e.g., "struct"".

	* lisp/progmodes/cc-langs.el (c-template-typename-kwds)
	(c-template-typename-key): New lang defconsts and defvar.

2017-10-05  Eli Zaretskii  <eliz@gnu.org>

	Fix breakage due to recent change in tabulated-list-print-entry

	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-printer):
	Update the doc string.
	(tabulated-list-print-entry): Revert to using only 2 arguments.
	Update the doc string.
	(tabulated-list-entry-lnum-width): New defvar.
	(tabulated-list-print): Compute the width of line-number display
	once, then store that value in tabulated-list-entry-lnum-width,
	for tabulated-list-printer to use.  (Bug#28704)

2017-10-05  Gemini Lasswell  <gazally@runbox.com>

	* lisp/ses.el (ses-print-cell): Fix alignment of text cells.  (Bug#27653)

2017-10-05  Alexander Gramiak  <agrambot@gmail.com>

	Set xterm click count to 1 even with no last click

	* lisp/xt-mouse.el (xterm-mouse-event): Move the check for
	the last click so that click-count is initialized properly.
	Handle the value of t for double-click-time.
	(Bug#28658)

2017-10-05  Vasilij Schneidermann  <mail@vasilij.de>

	Support indirection for all shr-tag-* calls

	The 'shr-external-rendering-functions' variable was previously only
	honored in the shr-descend function, now all direct calls to the
	shr-tag-* functions have been replaced by a call to
	'shr-indirect-call' which tries using an alternative rendering
	function first.

	* lisp/net/shr.el (shr-indirect-call): New helper function.
	(shr-descend, shr-tag-object, shr-tag-video):
	(shr-collect-extra-strings-in-table): Fix callers to call via
	shr-indirect-call.  (Bug#28402)

2017-10-05  Eli Zaretskii  <eliz@gnu.org>

	Speed up list-packages when 'visual' line numbers are displayed

	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-printer):
	Update the doc string.
	(tabulated-list-print-entry): Accept an additional optional
	argument INDENT.  Update the doc string.
	(tabulated-list-print): Compute the width of line-number display
	once, then call tabulated-list-printer with that value as 3rd
	argument.  (Bug#28704)

2017-10-05  João Távora  <joaotavora@gmail.com>

	Misc. minor adjustments to Flymake

	- Add a half-decent minor-mode menu;
	- Fix "waiting for backends" mode line message;
	- Adjust the flymake-diag-region API;
	- Autoload the flymake-log macro;
	- Auto-disable the legacy backend in more situations;
	- Fix a couple of warnings in legacy backend.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Use new
	flymake-diag-region.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc-legacy-flymake): Do error when no
	buffer-file-name or not writable.
	(flymake-proc-legacy-flymake)
	(flymake-proc-simple-cleanup): Don't reference flymake-last-change-time

	* lisp/progmodes/flymake.el (flymake-diag-region):
	Autoload.  Take buffer as first argument.

	* lisp/progmodes/flymake.el (flymake-switch-to-log-buffer):
	New command.
	(flymake-menu): Add a simple menu.
	(flymake--mode-line-format): Use menu.  Fix message.  Switch to
	log buffer when clicking exceptional warnings.

2017-10-05  Johan Bockgård  <bojohan@gnu.org>

	Fix search for ~/.Xdefaults-HOSTNAME

	* src/xrdb.c (get_environ_db): Fix typo when handling
	~/.Xdefaults-HOSTNAME (Bug#28708).

2017-10-04  Paul Eggert  <eggert@cs.ucla.edu>

	Speed up (format "%s" STRING) and the like

	Although the Lisp manual said that ‘format’ returns a
	newly-allocated string, this was not true for a few cases like
	(format "%s" ""), and fixing the documentation to allow reuse of
	arguments lets us improve performance in common cases like
	(format "foo") and (format "%s" "foo") (Bug#28625).
	* doc/lispref/strings.texi (Formatting Strings):
	* etc/NEWS:
	Say that the result of ‘format’ might not be newly allocated.
	* src/callint.c (Fcall_interactively):
	* src/dbusbind.c (XD_OBJECT_TO_STRING):
	* src/editfns.c (Fmessage, Fmessage_box):
	* src/xdisp.c (vadd_to_log, Ftrace_to_stderr):
	Just use Fformat or Fformat_message, as that’s simpler and no
	longer makes unnecessary copies.
	* src/editfns.c (styled_format): Remove last argument, as it
	is no longer needed: all callers now want it to behave as if it
	were true.  All remaining callers changed.  Make this function
	static again.  Simplify the function now that we no longer
	need to worry about whether the optimization is allowed.

2017-10-04  Alan Mackenzie  <acm@muc.de>

	Fontify untyped function declarations in C Mode correctly.

	Also correct two bugs where deleting WS at a BOL could leave an untyped
	function declaration unfontified.

	* lisp/progmodes/cc-engine.el (c-find-decl-spots): Don't set the flag
	"top-level" when we're in a macro.
	(c-forward-decl-or-cast-1): Recognize top-level "foo(bar)" or "foo()" in C
	Mode as a implicitly typed function declaration.
	(c-just-after-func-arglist-p): Don't get confused by "defined (foo)" inside a
	macro.  It's not a function plus arglist.

	* lisp/progmodes/cc-langs.el (c-cpp-expr-functions-key): New defconst and
	defvar.

	* lisp/progmodes/cc-mode.el (c-fl-decl-end): After c-forward-declarator, move
	over any following parenthesis expression (i.e. parameter list).
	(c-change-expand-fl-region): When c-new-END is at a BOL, include that line in
	the returned region, to cope with deletions at column 0.

2017-10-04  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp.el (tramp-tramp-file-p): Use `string-match-p'.

	Reported by Clément Pit-Claudel <cpitclaudel@gmail.com>.

2017-10-04  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes on C-g when several threads wait for input

	* src/thread.h (m_getcjmp): New member of 'struct thread_state'.
	(getcjmp): Define to current thread's 'm_getcjmp'.
	* src/thread.c (maybe_reacquire_global_lock): Switch to main
	thread, since this is called from a SIGINT handler, which always
	runs in the context of the main thread.
	* src/lisp.h (sys_jmp_buf, sys_setjmp, sys_longjmp): Move the
	definitions before thread.h is included, as thread.h now uses
	sys_jmp_buf.
	* src/keyboard.c (getcjmp): Remove declaration.
	(read_char): Don't call maybe_reacquire_global_lock here.
	(handle_interrupt): Call maybe_reacquire_global_lock here, if
	invoked from the SIGINT handler, to make sure
	quit_throw_to_read_char runs with main thread's Lisp bindings and
	uses the main thread's jmp_buf buffer.  (Bug#28630)

2017-10-04  Paul Eggert  <eggert@cs.ucla.edu>

	Warn if --without-pop is now the default

	* configure.ac (with_pop): Set to no-by-default if defaulting to "no".
	Warn about the change if defaulting to "no".  Update URLs.

2017-10-04  Paul Eggert  <eggert@cs.ucla.edu>

	--with-pop is now the default only on MS-Windows

	Problem reported by N. Jackson (Bug#28597).
	This improves an earlier suggestion by Robert Pluim (Bug#28597#47).
	* INSTALL, configure.ac, etc/NEWS:
	Make --with-pop the default only on native MS-Windows.

2017-10-03  Michael Albinus  <michael.albinus@gmx.de>

	Add support for `file-system-info' in Tramp

	* lisp/net/tramp.el (tramp-file-name-for-operation):
	Add `file-system-info'.

	* lisp/net/tramp-adb.el (tramp-adb-handle-file-system-info): New defun.
	(tramp-adb-file-name-handler-alist): Use it.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-system-attributes)
	(tramp-gvfs-file-system-attributes-regexp): New defconst.
	(tramp-gvfs-handle-file-system-info): New defun.
	(tramp-gvfs-file-name-handler-alist): Use it.
	(tramp-gvfs-get-directory-attributes): Fix property name.
	(tramp-gvfs-get-root-attributes): Support also file system attributes.

	* lisp/net/tramp-sh.el (tramp-sh-handle-file-system-info): New defun.
	(tramp-sh-file-name-handler-alist): Use it.
	(tramp-sh-handle-insert-directory): Insert size information.
	(tramp-get-remote-df): New defun.

	* lisp/net/tramp-smb.el (tramp-smb-handle-file-system-info): New defun.
	(tramp-smb-file-name-handler-alist): Use it.
	(tramp-smb-handle-insert-directory): Insert size information.

	* test/lisp/net/tramp-tests.el (tramp-test37-file-system-info):
	New test.
	(tramp-test38-asynchronous-requests)
	(tramp-test39-recursive-load, tramp-test40-remote-load-path)
	(tramp-test41-unload): Rename.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Merge branch 'scratch/flymake-refactor-clean-for-emacs-26' into emacs-26

2017-10-03  João Távora  <joaotavora@gmail.com>

	Start rewriting Flymake manual

	Missing the parts pertaining to the new customization API.

	* doc/misc/flymake.texi (Overview of Flymake): Rewrite a bit.
	(Installing Flymake): Delete most of this.
	(Running the syntax check): Mention flymake-start.
	(Navigating to error lines): Rewrite.
	(Viewing error messages): Commente out.
	(Syntax check statuses, Troubleshooting): Rewrite a bit.
	(Customizable variables): New section under "Using
	Flymake".  Don't mention any proc variables here.
	(Configuring Flymake): Delete
	(Proc backend): New chapter
	(Proc customization variables): New chapter.

	* doc/misc/flymake.texi (Overview of Flymake): Rewrite a bit.
	(Installing Flymake): Mostly scratch. Flymake comes with Emacs.
	(Running the syntax check): Simplify.
	(Viewing error messages): Dekete,
	(Syntax check statuses): Rewrite.
	(Troubleshooting): Simplify.
	(Customizable variables): Rewrite.
	(Extending Flymake): New chapter, empty for now.
	(The legacy Proc backend): New chapter.
	(Proc customizable variables)
	(Adding support for a new syntax check tool)
	(Implementation overview)
	(Making a temporary copy)
	(Locating a master file)
	(Getting the include directories)
	(Locating the buildfile)
	(Starting the syntax check process)
	(Parsing the output)
	(Interaction with other modes)
	(Example---Configuring a tool called via make)
	(Example---Configuring a tool called directly): Rewrite a bit.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Minimal tweak as an attempt to future-proof Flymake API

	Discussed with Stefan that this should allow Flymake to request more
	from backends in the future, while also allowing backends to report
	more accurately.

	* lisp/progmodes/elisp-mode.el (elisp-flymake-checkdoc)
	(elisp-flymake-byte-compile): Adjust to new API.

	* lisp/progmodes/flymake-proc.el ()
	(flymake-proc-legacy-flymake): Adjust to new API.

	* lisp/progmodes/flymake.el (flymake-diagnostic-functions):
	Review API again.
	(flymake--handle-report): Allow other keys.  Change ACTION to
	REPORT-ACTION.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Integrate Flymake elisp checkers into elisp-mode.el directly

	* lisp/progmodes/elisp-mode.el (emacs-lisp-mode): Use
	elisp-flymake-checkdoc and elisp-flymake-byte-compile.
	(elisp-flymake--checkdoc-1, elisp-flymake-checkdoc)
	(elisp-flymake--byte-compile-done)
	(elisp-flymake--byte-compile-process)
	(elisp-flymake-byte-compile): Rename from flymake-elisp
	counterparts in deleted flymake-elisp.el
	(elisp-flymake--batch-compile-for-flymake): New helper.
	(checkdoc-create-error-function)
	(checkdoc-autofix-flag)
	(checkdoc-generate-compile-warnings-flag)
	(checkdoc-diagnostic-buffer): Forward declare.

	* lisp/progmodes/flymake-elisp.el: Delete.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Hook Flymake onto proper checkdoc and byte-compile interfaces

	The interfaces in bytecomp.el and checkdoc.el are mostly boilerplate,
	with little knowledge of actual internals or thought given to the
	usefulness of said interfaces in contexts other than Flymake's.

	* lisp/emacs-lisp/bytecomp.el
	(byte-compile-log-warning-function): New variable.
	(byte-compile-log-warning): Use it.
	(byte-compile--log-warning-for-byte-compile): New function.

	* lisp/emacs-lisp/checkdoc.el
	(checkdoc-create-error-function): New variable.
	(checkdoc-create-error): Use it.
	(checkdoc--create-error-for-checkdoc): New function.xo

	* lisp/progmodes/flymake-elisp.el (flymake-elisp--checkdoc-1):
	Use checkdoc-create-error-function.
	(flymake-elisp--batch-byte-compile): Use
	byte-compile-log-warning-function.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Tweak Flymake autoloads and dependencies

	* lisp/progmodes/elisp-mode.el (emacs-lisp-mode): Add to
	flymake-diagnostic-functions here.

	* lisp/progmodes/flymake-elisp.el[top]: Don't add to
	emacs-lisp-mode-hook.  Don't call flymake-elisp-setup-backends in
	every buffer.  (flymake-elisp-checkdoc) (flymake-elisp-byte-compile):
	Autoload.  (flymake-elisp-setup-backends): Remove.

	* lisp/progmodes/flymake.el: Add some top-level comments.
	(flymake-make-diagnostic)
	(flymake-mode, flymake-mode-on, flymake-mode-off): Add autoloads

	Where to fixup this shit?

2017-10-03  João Távora  <joaotavora@gmail.com>

	Capitalize "Flymake" in docstrings and comments

	* lisp/progmodes/flymake-elisp.el (flymake-elisp-checkdoc)
	(flymake-elisp-setup-backends): Capitalize "Flymake"

	* lisp/progmodes/flymake-proc.el:
	(flymake-proc-reformat-err-line-patterns-from-compile-el)
	(flymake-proc--panic, flymake-proc-legacy-flymake)
	(flymake-start-syntax-check, flymake-proc-compile)
	(define-obsolete-variable-alias): Capitalize "Flymake"

	* lisp/progmodes/flymake.el (flymake-fringe-indicator-position)
	(flymake-make-diagnostic, flymake-delete-own-overlays)
	(flymake-diagnostic-functions)
	(flymake-diagnostic-types-alist, flymake-is-running)
	(flymake-make-report-fn, flymake-mode-on, flymake-mode-off)
	(flymake-goto-next-error, flymake-goto-prev-error): Capitalize "Flymake"

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake backends can report multiple times per check

	Rewrote a significant part of the Flymake backend API.  Flymake now
	ignores the return value of backend functions: a function can either
	returns or errors.  If it doesn't error, a backend is no longer
	constrained to call REPORT-FN exactly once.  It may do so any number
	of times, cumulatively reporting diagnostics.  Flymake keeps track of
	outdated REPORT-FN instances and disconsiders obsolete reports.
	Backends should avoid reporting obsolete data by canceling any
	ongoing processing at every renewed call to the backend function.

	Consolidated flymake.el internal data structures to require less
	buffer-local variables.  Adjusted Flymake's mode-line indicator to the
	new semantics.

	Adapted and simplified the implementation of elisp and legacy
	backends, fixing potential race conditions when calling backends in
	rapid succession.

	Added a new test for a backend that calls REPORT-FN multiple
	times.  Simplify test infrastructure.

	* lisp/progmodes/flymake-elisp.el (flymake-elisp-checkdoc)
	(flymake-elisp-byte-compile): Error instead of returning nil
	if not in emacs-lisp-mode.
	(flymake-elisp--byte-compile-process): New buffer-local variable.
	(flymake-elisp-byte-compile): Mark (and kill) previous process
	obsolete process before starting a new one.  Don't report if
	obsolete process.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--current-process): New buffer-local variable.
	(flymake-proc--processes): Remove.
	(flymake-proc--process-filter): Don't bind
	flymake-proc--report-fn.
	(flymake-proc--process-sentinel): Rewrite.  Don't report if
	obsolete process.
	(flymake-proc-legacy-flymake): Rewrite.  Mark (and kill)
	previous process obsolete process before starting a new
	one.  Integrate flymake-proc--start-syntax-check-process
	helper.
	(flymake-proc--start-syntax-check-process): Delete.
	(flymake-proc-stop-all-syntax-checks): Don't use
	flymake-proc--processes, iterate buffers.
	(flymake-proc-compile):

	* lisp/progmodes/flymake.el (subr-x): Require it
	explicitly.
	(flymake-diagnostic-functions): Reword docstring.
	(flymake--running-backends, flymake--disabled-backends)
	(flymake--diagnostics-table): Delete.
	(flymake--backend-state): New buffer-local variable and new defstruct.
	(flymake--with-backend-state, flymake--collect)
	(flymake-running-backends, flymake-disabled-backends)
	(flymake-reporting-backends): New helpers.
	(flymake-is-running): Use flymake-running-backends.
	(flymake--handle-report): Rewrite.
	(flymake-make-report-fn): Ensure REPORT-FN runs in the correct
	buffer or not at all.
	(flymake--disable-backend, flymake--run-backend): Rewrite.
	(flymake-start): Rewrite.
	(flymake-mode): Set flymake--backend-state.
	(flymake--mode-line-format): Rewrite.

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--wait-for-backends): New helper.
	(flymake-tests--call-with-fixture): Use it.
	(included-c-header-files): Fix whitespace.
	(flymake-tests--diagnose-words): New helper.
	(dummy-backends): Rewrite for new semantics.  Use cl-letf.
	(flymake-tests--assert-set): Use quote.
	(recurrent-backend): New test.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake uses proper idle timers

	Also, flymake-no-changes-timeout can be set to nil to disable
	automatic periodic checks.  But even in that situation the idle timer
	still runs at a reduced rate to detect changes in the variable and
	revert that decision.

	* lisp/progmodes/flymake.el (flymake-no-changes-timeout): Improve doc.
	(flymake-last-change-time): Delete.
	(flymake--schedule-timer-maybe): New helper.
	(flymake-after-change-function): Use it.
	(flymake-on-timer-event): Delete
	(flymake-mode): Don't scheduler timer.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake variable flymake-diagnostic-functions now a special hook

	* lisp/progmodes/flymake-proc.el: Use add-hook to affect
	flymake-diagnostic-functions.

	* lisp/progmodes/flymake-elisp.el
	(flymake-elisp-setup-backends): Use add-hook.

	* lisp/progmodes/flymake.el (flymake-diagnostic-functions):
	Revise docstring.
	(flymake-start): Use run-hook-wrapped.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Batch of minor Flymake cleanup actions agreed to with Stefan

	Discussed with Stefan, in no particular order

	- Remove aliases for symbols thought to be internal to flymake-proc.el
	- Don’t need :group in defcustom and defface in flymake.el
	- Fix docstring of flymake-make-diagnostic
	- Fix docstring of flymake-diagnostic-functions to clarify keywords.
	- Mark overlays with just the property ’flymake, not ’flymake-overlay
	- Tune flymake-overlays for performance
	- Make flymake-mode-on and flymake-mode-off obsolete
	- Don’t use hash-table-keys unless necessary.
	- Copyright notice in flymake-elisp.

	Added some more

	- Clarify docstring of flymake-goto-next-error
	- Clarify a comment in flymake--run-backend complaining about ert-deftest.
	- Prevent compilation warnings in flymake-proc.el
	- Remove doctring from obsolete aliases

	Now the changelog:

	* lisp/progmodes/flymake-elisp.el: Proper copyright notice.

	* lisp/progmodes/flymake-proc.el (flymake-warning-re)
	(flymake-proc-diagnostic-type-pred)
	(flymake-proc-default-guess)
	(flymake-proc--get-file-name-mode-and-masks): Move up to
	beginning of file to shoosh compiler warnings
	(define-obsolete-variable-alias): Delete many obsolete aliases.

	* lisp/progmodes/flymake.el (flymake-error-bitmap)
	(flymake-warning-bitmap, flymake-note-bitmap)
	(flymake-fringe-indicator-position)
	(flymake-start-syntax-check-on-newline)
	(flymake-no-changes-timeout, flymake-gui-warnings-enabled)
	(flymake-start-syntax-check-on-find-file, flymake-log-level)
	(flymake-wrap-around, flymake-error, flymake-warning)
	(flymake-note): Don't need :group in these defcustom and defface.
	(flymake--run-backend): Clarify comment
	(flymake-mode-map): Remove.
	(flymake-make-diagnostic): Fix docstring.
	(flymake--highlight-line, flymake--overlays): Identify flymake
	overlays with just ’flymake.
	(flymake--overlays): Reverse order of invocation for
	cl-remove-if-not and cl-sort.
	(flymake-mode-on)
	(flymake-mode-off): Make obsolete.
	(flymake-goto-next-error, flymake-goto-prev-error): Fix docstring.
	(flymake-diagnostic-functions): Clarify keyword arguments in
	docstring.

	Maybe squash in that one where I remove many obsoletes

2017-10-03  João Távora  <joaotavora@gmail.com>

	Explicitly add a(n empty) keymap for Flymake

	Too early to decide what will be in it, if anything.  Though "M-n" and
	"M-p" would be great.

	* lisp/progmodes/flymake-ui.el (flymake-mode-map): New variable

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake uses some new fringe bitmaps

	Also fix behavior whereby flymake wouldn't react to a change in the
	variable.

	* lisp/progmodes/flymake-ui.el (flymake-error-bitmap)
	(flymake-warning-bitmap): Update bitmaps.
	(flymake-note-bitmap): New defcustom.
	(flymake-double-exclamation-mark): New bitmap.
	(flymake-error, flymake-warning, flymake-note)
	(flymake--highlight-line): 'bitmap property must be a symbol.
	Also set default face to flymake-error.
	(flymake--fringe-overlay-spec): Bitmap property can be a
	variable symbol.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Remove old flymake-display-err-menu-for-current-line, it's useless

	See https://lists.gnu.org/r/emacs-devel/2017-09/msg00949.html

	* lisp/progmodes/flymake-ui.el
	(flymake-popup-current-error-menu): Remove.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Treat Flymake errors as just another type of diagnostic

	* lisp/progmodes/flymake.el (flymake--diag-errorp): Remove.
	(flymake--handle-report, flymake-popup-current-error-menu):
	Don't use it.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Fix three Flymake bugs when checking C header files

	The first of these problems is longstanding: if an error-less B.h is
	included from error-ridden A.h, flymake's legacy parser will panic
	(and disable itself) since it sees a non-zero exit for a clean file.
	To fix this, recommend returning 'true' in the documentation for the
	check-syntax target.

	Another problem was introduced by the parser rewrite.  For error
	patterns spanning more than one line, point may be left in the middle
	of a line and thus render other patterns useless.  Those patterns were
	written for the old line-by-line parser.  To make them useful again,
	move to the beginning of line in those situations.

	The third problem was also longstanding and happened on newer GCC's:
	The "In file included from" prefix confused
	flymake-proc-get-real-file-name.  Fix this.

	Also updated flymake--diag-region to fallback to highlighting a full
	line less often.

	Add automatic tests to check this.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Fix bug when patterns
	accidentally spans more than one line.  Don't create
	diagnostics without error messages.
	(flymake-proc-real-file-name-considering-includes): New
	helper.
	(flymake-proc-allowed-file-name-masks): Use it.

	* lisp/progmodes/flymake.el (flymake-diag-region): Make COL
	argument explicitly optional.  Only fall back to full line in extreme
	cases.

	* test/lisp/progmodes/flymake-tests.el
	(included-c-header-files): New test.
	(different-diagnostic-types): Update.

	* test/lisp/progmodes/flymake-resources/Makefile
	(check-syntax): Always return success (0) error code.
	(CC_OPTS): Add -Wextra

	* test/lisp/progmodes/flymake-resources/errors-and-warnings.c
	(main): Rewrite comments.

	* test/lisp/progmodes/flymake-resources/errors-and-warnings.c:
	Include some dummy header files.

	* test/lisp/progmodes/flymake-resources/no-problems.h: New file.

	* test/lisp/progmodes/flymake-resources/some-problems.h: New file.

	* doc/misc/flymake.texi (Example---Configuring a tool called
	via make): Recommend adding "|| true" to the check-syntax target.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Add interactive flymake-start function

	* lisp/progmodes/flymake.el (flymake-on-timer-event)
	(flymake-after-change-function, flymake-mode): Call
	flymake-start.
	(flymake-start): Rename from flymake--start-syntax-check.

2017-10-03  João Távora  <joaotavora@gmail.com>

	A couple of Flymake backends for emacs-lisp-mode

	Loading flymake-elisp.el doesn't setup flymake-mode to turn on
	automatically, but it affects emacs-lisp-mode-hook so that
	flymake-diagnostic-functions is setup with a suitable buffer-local
	value.  The variable flymake-diagnostic-funtions in every live
	emacs-lisp-mode buffer is also adjusted.

	* lisp/progmodes/flymake.el (top): Require flymake-elisp.

	* lisp/progmodes/flymake-elisp.el: New file.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Fancy Flymake mode-line construct displays status

	Imitates compilation-mode's mode-line a bit, and uses its faces.

	* lisp/progmodes/flymake.el
	(flymake-error, flymake-warning, flymake-note): Add
	mode-line-face to these flymake error types.
	(flymake-note): Notes don't need a noisy fringe bitmap.
	(flymake-lighter): Delete.
	(flymake--update-lighter): Delete.
	(flymake--mode-line-format): New function and variable.
	(flymake--diagnostics-table): New buffer-local variable.
	(flymake--handle-report): Don't update "lighters".  Affect
	flymake--diagnostics-table.
	(flymake--run-backend): Init flymake--diagnostics-table for backend.
	(flymake-mode): Use flymake--mode-line-format.
	(flymake-mode): Don't update lighter.
	(flymake--highlight-line): Be more careful when overriding a
	nil default overlay property.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Tweak Flymake commands flymake-goto-[next/prev]-error

	Add filters, useful for backends like the upcoming
	flymake-elisp-checkdoc backend, for example, which litters everything
	with low-priority notes.

	Also re-implement wraparound for flymake-goto-next-error. Manual
	mentions this, so it's probably a good idea to keep it.  Added a new
	customization variable flymake-wrap-around to control it.

	* lisp/progmodes/flymake.el (flymake-goto-prev-error)
	(flymake-goto-next-error): Accept FILTER argument.
	(flymake-wrap-around): New variable.
	(flymake-goto-next-error): Wrap around according to flymake-wrap-around.

	* test/lisp/progmodes/flymake-tests.el
	(different-diagnostic-types, dummy-backends): Pass FILTER to
	flymake-goto-prev-error.
	(different-diagnostic-types)
	(dummy-backends): Use flymake-wrap-around.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake's flymake-proc.el backend slightly easier to debug

	Misc cleanup in flymake-proc.el

	Improve description of what this file contains.

	Better name for the backend function.  Fix the case where it is run
	interactively.

	Keep the output buffer alive iff the external process panics.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc-legacy-flymake): Rename from
	flymake-proc-start-syntax-check.  Allow running interactively.
	(flymake-start-syntax-check): Obsolete alias for
	flymake-proc-legacy-flymake.
	(flymake-proc-start-syntax-check): Delete.
	(flymake-diagnostic-functions): Include flymake-proc-legacy-flymake
	(flymake-proc--process-sentinel): Keep output buffer alive.
	Clarify with comments.
	(flymake-proc--diagnostics-for-pattern)
	(flymake-proc--process-sentinel)
	(flymake-proc--safe-delete-directory)
	(flymake-proc--start-syntax-check-process): Use condition-case-unless-debug.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Simplify Flymake logging and erroring

	Use display-warning and a dedicated *Flymake log* buffer.

	To ease readability, flymake log messages are now prefixed with a
	common prefix and the buffer that originated them.

	Some situations of over-zealous logging are fixed.

	Use byte-compiler info, if available, to determine whence the
	flymake-related log message is coming.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Improve log message.
	(flymake-proc--panic): Always flymake-log an error
	(flymake-proc--safe-delete-file)
	(flymake-proc--safe-delete-directory):
	Downgrade warning
	(flymake-proc-start-syntax-check): Simplify slightly.
	(flymake-proc--start-syntax-check-process): Simplify.
	(flymake-proc--init-find-buildfile-dir)
	(flymake-proc--init-create-temp-source-and-master-buffer-copy):
	No need to warn twice.

	* lisp/progmodes/flymake.el (flymake-log): Convert to macro.
	(flymake--log-1): New helper.
	(flymake-log-level): Deprecate.
	(flymake-error): New helper.
	(flymake-ler-make-ler, flymake--handle-report, flymake-mode):
	Use flymake-error.
	(flymake-on-timer-event)
	(flymake--handle-report, flymake--disable-backend)
	(flymake--run-backend, flymake-start, flymake-mode-on)
	(flymake-mode-off, flymake-after-change-function)
	(flymake-after-save-hook, flymake-find-file-hook): Adjust
	flymake-log calls.

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--call-with-fixture): Only log errors.

2017-10-03  Philipp Stephani  <phst@google.com>

	Work around deprecation of gtk_style_context_get_background_color

	* src/gtkutil.c (xg_check_special_colors): Replace call to
	gtk_style_context_get_background_color with its definition.

2017-10-03  João Távora  <joaotavora@gmail.com>

	New Flymake API variable flymake-diagnostic-functions

	Lay groundwork for multiple active backends in the same buffer.

	Backends are lisp functions called when flymake-mode sees fit.  They
	are responsible for examining the current buffer and telling
	flymake.el, via return value, if they can syntax check it.
	Backends should return quickly and inexpensively, but they are also
	passed a REPORT-FN argument which they may or may not call
	asynchronously after performing more expensive work.

	REPORT-FN's calling convention stipulates that a backend calls it with
	a list of diagnostics as argument, or, alternatively, with a symbol
	denoting an exceptional situation, usually some panic resulting from a
	misconfigured backend.  In keeping with legacy behavior,
	flymake.el's response to a panic is to disable the issuing backend.

	The flymake--diag object representing a diagnostic now also keeps
	information about its source backend.  Among other uses, this allows
	flymake to selectively cleanup overlays based on which backend is
	updating its diagnostics.

	* lisp/progmodes/flymake-proc.el (flymake-proc--report-fn):
	New dynamic variable.
	(flymake-proc--process): New variable.
	(flymake-can-syntax-check-buffer): Remove.
	(flymake-proc--process-sentinel): Simplify.  Use
	unwind-protect.  Affect flymake-proc--processes here.
	Bind flymake-proc--report-fn.
	(flymake-proc--process-filter): Bind flymake-proc--report-fn.
	(flymake-proc--post-syntax-check): Delete
	(flymake-proc-start-syntax-check): Take mandatory
	report-fn.  Rewrite.  Bind flymake-proc--report-fn.
	(flymake-proc--process-sentinel): Rewrite and simplify.
	(flymake-proc--panic): New helper.
	(flymake-proc--start-syntax-check-process): Record report-fn
	in process.  Use flymake-proc--panic.
	(flymake-proc-stop-all-syntax-checks): Use mapc.  Don't affect
	flymake-proc--processes here.  Record interruption reason.
	(flymake-proc--init-find-buildfile-dir)
	(flymake-proc--init-create-temp-source-and-master-buffer-copy):
	Use flymake-proc--panic.
	(flymake-diagnostic-functions): Add
	flymake-proc-start-syntax-check.
	(flymake-proc-compile): Call
	flymake-proc-stop-all-syntax-checks with a reason.

	* lisp/progmodes/flymake.el (flymake-backends): Delete.
	(flymake-check-was-interrupted): Delete.
	(flymake--diag): Add backend slot.
	(flymake-delete-own-overlays): Take optional filter arg.
	(flymake-diagnostic-functions): New user-visible variable.
	(flymake--running-backends, flymake--disabled-backends): New
	buffer-local variables.
	(flymake-is-running): Now a function, not a variable.
	(flymake-mode-line, flymake-mode-line-e-w)
	(flymake-mode-line-status): Delete.
	(flymake-lighter):  flymake's minor-mode "lighter".
	(flymake-report): Delete.
	(flymake--backend): Delete.
	(flymake--can-syntax-check-buffer): Delete.
	(flymake--handle-report, flymake--disable-backend)
	(flymake--run-backend, flymake--run-backend):  New helpers.
	(flymake-make-report-fn): Make a lambda.
	(flymake--start-syntax-check): Iterate
	flymake-diagnostic-functions.
	(flymake-mode): Use flymake-lighter.  Simplify.  Initialize
	flymake--running-backends and flymake--disabled-backends.
	(flymake-find-file-hook): Simplify.

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--call-with-fixture): Use flymake-is-running the
	function.  Check if flymake-mode already active before activating it.
	Add a thorough test for flymake multiple backends

	* lisp/progmodes/flymake.el (flymake--start-syntax-check):
	Don't use condition-case-unless-debug, use condition-case

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--assert-set): New helper macro.
	(dummy-backends): New test.

2017-10-03  João Távora  <joaotavora@gmail.com>

	More Flymake cleanup before advancing to backend redesign

	Diagnostics are reported for buffers, not necessarily files.  It’s the
	backend’s responsibility to compute the buffer where the diagnostic is
	applicable.  For now, this has to match the buffer where flymake-mode
	is active and which is at the origin of the backend call.

	flymake.el knows nothing about line/column diagnostics (except for
	backward-compatible flymake-ler-make-ler, which must yet be tested).
	It’s also the backend’s reponsibility to compute a BEG and END
	positions for the diagnostic in the relevant buffer.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Convert LINE/COL to
	region here.  Check file buffer here.
	(flymake-proc--process-sentinel): Don’t kill output buffer if
	high enough log level.

	* lisp/progmodes/flymake.el (flymake-diag-region): Make this a utility
	function.  (flymake--highlight-line): Diagnostic has region now.
	(flymake-popup-current-error-menu): Don’t add file and line numbers to
	already this silly menu.  (flymake--fix-line-numbers): Remove.
	(flymake-report): No need to fix diagnostics here.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Protect Flymake's eager checks against commands like fill-paragraph

	If flymake-start-syntax-check-on-newline is t, check should start as
	soon as a newline is seen by after-change-functions.  But don't rush
	it: since the buffer state might not be final, we might end up with
	invalid diagnostic regions after some commands silently insert and
	delete newlines (looking at you, fill-paragraph).

	* lisp/progmodes/flymake.el (flymake-after-change-function): Pass
	`deferred' to flymake--start-syntax-check.
	(flymake--start-syntax-check): Take optional `deferred' arg.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake highlights GCC info/notes as detected by flymake-proc.el

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Rewrite (using cl-loop) to
	honour more sophisticated flymake-proc-diagnostic-type-pred.
	(flymake-warning-re): Is now an obsolete alias for
	flymake-proc-diagnostic-type-pred.
	(flymake-proc-diagnostic-type-pred): Rename and augment from
	flymake-proc-warning-predicate.  (flymake-proc-warning-predicate):
	Delete.

	* lisp/progmodes/flymake.el (flymake-note): New face.
	(flymake-diagnostic-types-alist): Simplify.
	(flymake-note): New overlay category.
	(flymake--lookup-type-property): Only lookup single keys, not lists.
	(flymake--diag-errorp): Rewrite.
	(flymake--highlight-line): Use flymake--lookup-type-property.

	* test/lisp/progmodes/flymake-tests.el
	(different-diagnostic-types): Rename from errors-and-warnings.
	Check notes.
	(flymake-tests--call-with-fixture): Use
	flymake-proc-diagnostic-type-pred.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake checks file names before considering diagnostics

	The error patterns for gcc picked up errors for the Makefile itself,
	for example.  These shouldn't count as actual errors.

	* lisp/progmodes/flymake.el (flymake-report): Check
	matching file names.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Echo Flymake error messages when navigating errors interactively

	Perhaps binding M-n and M-p to flymake-goto-next-error and
	flymake-goto-prev-error also wouldn't be a bad idea.

	* lisp/progmodes/flymake.el (flymake-goto-next-error): Use
	target overlay's help-echo.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Add a new Flymake test for multiple errors and warnings

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--call-with-fixture): Save excursion.
	(errors-and-warnings): New test.

	* test/lisp/progmodes/flymake-resources/errors-and-warnings.c:
	New test fixture.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake warning face easier to distinguish

	A orange wavy underline is very hard to tell from a red wavy
	underline.

	* lisp/progmodes/flymake.el (flymake-warning): Change color to
	"deep sky blue"

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake's flymake-proc.el parses column numbers from gcc/javac errors

	Column numbers are not a great way of marking diagnostic regions, but
	that's probably all that can be expected from the flymake-proc.el
	backend.  For now, try (end-of-thing 'sexp) to discover the
	diagnostic's end position.

	* lisp/progmodes/flymake-proc.el ()
	(flymake-proc-err-line-patterns): Also parse column numbers,
	if available, for gcc/javac warnings.

2017-10-03  João Távora  <joaotavora@gmail.com>

	New Flymake variable flymake-diagnostic-types-alist and much cleanup

	A new user-visible variable is introduced where different diagnostic
	types can be categorized.  Flymake backends can also contribute to
	this variable.  Anything that doesn’t match an existing error type
	is considered.

	The variable’s alists are used to propertize the overlays pertaining
	to each error type.  The user can override the built-in properties by
	either by modifying the alist, or by modifying the properties of a
	special "category" symbol, named by the `flymake-category' entry in
	the alist.

	The `flymake-category' entry is especially useful for, say, the author
	of foo-flymake-backend, who issues diagnostics of type :foo-note, that
	should behave like notes, except with no fringe bitmap:

	   (add-to-list 'flymake-diagnostic-types-alist
	                '(:foo-note
	                  . ((flymake-category . flymake-note)
	                     (bitmap . nil))))

	For essential properties like `severity', `priority', etc, a default
	value is produced.  Some properties like `evaporate' cannot be
	overriden.

	* lisp/progmodes/flymake.el (flymake--diag): Rename from
	flymake-ler.
	(flymake-ler-make): Obsolete alias for flymake-diagnostic-make
	(flymake-ler-errorp): Rewrite using flymake--severity.
	(flymake--place-overlay): Delete.
	(flymake--overlays): Now a cl-defun with &key args.  Document.
	Use `overlays-at' if BEG is non-nil and END is nil.
	(flymake--lookup-type-property): New helper.
	(flymake--highlight-line): Rewrite.
	(flymake-diagnostic-types-alist): New API variable.
	(flymake--diag-region)
	(flymake--severity, flymake--face)
	(flymake--fringe-overlay-spec): New helper.
	(flymake-popup-current-error-menu): Use new flymake-overlays.
	(flymake-popup-current-error-menu, flymake-report): Use
	flymake--diag-errorp.
	(flymake--fix-line-numbers): Use flymake--diag-line.
	(flymake-goto-next-error): Pass :key to flymake-overlays

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Use flymake-diagnostic-make.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Refactor Flymake tests in preparation for more tests

	Introduce a slightly more generic fixture macro.

	Also make flymake-tests.el friendlier to interactive runs, by not
	killing buffers visited by the user.

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--call-with-fixture): New helper from
	flymake-tests--current-face.  Don't kill file buffers already
	being visited before the test starts.
	(flymake-tests--with-flymake): New macro.
	(flymake-tests--current-face): Delete.
	(warning-predicate-rx-gcc, warning-predicate-function-gcc)
	(warning-predicate-rx-perl, warning-predicate-function-perl):
	Use flymake-test--with-flymake.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Allow running Flymake tests from interactive sessions

	* test/lisp/progmodes/flymake-tests.el (flymake-tests-data-directory):
	Expand to reasonable value if no
	EMACS_TEST_DIRECTORY. (flymake-tests--current-face): Work around
	"weirdness" of bug 17647 with read-event.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake diagnostics now apply to arbitrary buffer regions

	Make Flymake UI some 150 lines lighter

	Strip away much of the original implementation's complexity in
	manipulating objects representing diagnostics as well as creating and
	navigating overlays.

	Lay some groundwork for a more flexible approach that allows for
	different classes of diagnostics, not necessarily line-based.
	Importantly, one overlay per diagnostic is created, whereas the
	original implementation had one per line, and on it it concatenated
	the results of errors and warnings.

	This means that currently, an error and warning on the same line are
	problematic and the warning might be overlooked but this will soon be
	fixed by setting appropriate priorities.

	Since diagnostics can highlight arbitrary regions, not just lines, the
	faces were renamed.

	Tests pass and backward compatibility with interactive functions is
	maintained, but probably any third-party extension or customization
	relying on more than a trivial set of flymake.el internals has stopped
	working.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--diagnostics-for-pattern): Use new flymake-ler-make
	constructor syntax.

	* lisp/progmodes/flymake.el (flymake-ins-after)
	(flymake-set-at, flymake-er-make-er, flymake-er-get-line)
	(flymake-er-get-line-err-info-list, flymake-ler-set-file)
	(flymake-ler-set-full-file, flymake-ler-set-line)
	(flymake-get-line-err-count, flymake-get-err-count)
	(flymake-highlight-err-lines, flymake-overlay-p)
	(flymake-make-overlay, flymake-region-has-flymake-overlays)
	(flymake-find-err-info)
	(flymake-line-err-info-is-less-or-equal)
	(flymake-add-line-err-info, flymake-add-err-info)
	(flymake-get-first-err-line-no)
	(flymake-get-last-err-line-no, flymake-get-next-err-line-no)
	(flymake-get-prev-err-line-no, flymake-skip-whitespace)
	(flymake-goto-line, flymake-goto-next-error)
	(flymake-goto-prev-error, flymake-patch-err-text): Delete
	functions no longer used.
	(flymake-goto-next-error, flymake-goto-prev-error): Rewrite.
	(flymake-report): Rewrite.
	(flymake-popup-current-error-menu): Rewrite.
	(flymake--highlight-line): Rename from
	flymake-highlight-line.  Call `flymake--place-overlay.
	(flymake--place-overlay): New function.
	(flymake-ler-errorp): New predicate.
	(flymake-ler): Simplify.
	(flymake-error): Rename from
	flymake-errline.
	(flymake-warning): Rename from flymake-warnline.
	(flymake-warnline, flymake-errline): Obsoletion aliases.

	* test/lisp/progmodes/flymake-tests.el (warning-predicate-rx-gcc)
	(warning-predicate-function-gcc, warning-predicate-rx-perl)
	(warning-predicate-function-perl): Use face `flymake-warning'.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Move symbols in flymake-proc.el to separate namespace

	Every symbol in this flymake now starts with the prefix flymake-proc-.

	Make obsolete aliases for (almost?) every symbol.

	Furthermore, many flymake-proc.el symbols are prefixed with
	"flymake-proc--", that is they were considered internal.

	Some customization variables, interactive functions, and other symbols
	considered useful to user customizations or third-party libraries are
	considered "public" or "external" and so use a "flymake-proc-" prefix.

	* lisp/progmodes/flymake-proc.el: Every symbol renamed.

	* test/lisp/progmodes/flymake-tests.el
	(flymake-tests--current-face): Use
	flymake-proc-warning-predicate, not flymake-warning-predicate.

	* lisp/progmodes/flymake-proc.el
	(flymake-proc--get-project-include-dirs-function)
	(flymake-proc--get-project-include-dirs-imp)
	(flymake-proc--get-include-dirs-dot) (flymake-proc--get-tex-args)
	(flymake-proc--find-make-buildfile)
	(flymake-proc--get-syntax-check-program-args)
	(flymake-proc--init-create-temp-source-and-master-buffer-copy)
	(flymake-proc--init-find-buildfile-dir)
	(flymake-proc--get-full-nonpatched-file-name)
	(flymake-proc--get-full-patched-file-name) (flymake-proc--base-dir,
	flymake-proc--temp-master-file-name) (flymake-proc--master-file-name)
	(flymake-proc--temp-source-file-name)
	(flymake-proc--delete-temp-directory) (flymake-proc--kill-process)
	(flymake-proc--start-syntax-check-process)
	(flymake-proc--compilation-is-running)
	(flymake-proc--safe-delete-directory) (flymake-proc--safe-delete-file)
	(flymake-proc--get-program-dir) (flymake-proc--restore-formatting)
	(flymake-proc--clear-project-include-dirs-cache)
	(flymake-proc--project-include-dirs-cache)
	(flymake-proc--get-system-include-dirs)
	(flymake-proc--get-project-include-dirs)
	(flymake-proc--add-project-include-dirs-to-cache)
	(flymake-proc--get-project-include-dirs-from-cache)
	(flymake-proc--post-syntax-check) (flymake-proc--process-sentinel)
	(flymake-proc--process-filter) (flymake-proc--create-master-file)
	(flymake-proc--find-buffer-for-file)
	(flymake-proc--copy-buffer-to-temp-buffer)
	(flymake-proc--read-file-to-temp-buffer)
	(flymake-proc--save-buffer-in-file) (flymake-proc--replace-region,
	flymake-proc--check-include)
	(flymake-proc--check-patch-master-file-buffer)
	(flymake-proc--master-file-compare)
	(flymake-proc--find-possible-master-files)
	(flymake-proc--included-file-name, flymake-proc--same-files)
	(flymake-proc--fix-file-name, flymake-proc--find-buildfile)
	(flymake-proc--clear-buildfile-cache)
	(flymake-proc--add-buildfile-to-cache)
	(flymake-proc--get-buildfile-from-cache)
	(flymake-proc--find-buildfile-cache)
	(flymake-proc--get-real-file-name-function)
	(flymake-proc--get-cleanup-function) (flymake-proc--get-init-function)
	(flymake-proc--get-file-name-mode-and-masks)
	(flymake-proc--processes): Rename to internal symbol from
	flymake-proc- version.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Completely rewrite Flymake's subprocess output processing

	Instead of parsing and matching regexps line-by-line, insert
	subprocess output in a separate buffer and parse using
	`search-forward-regexp'.  This eventually enables multi-line error
	patterns and simplifies code all around.  Store per-check information
	in the subprocess using `process-get' and `process-put'.  Treat error
	messages, warnings, etc. more generically as "diagnostics".  Create
	these objects as soon as possible, reusing existing `flymake-ler'
	structure.  Fix some whitespace.

	* lisp/progmodes/flymake.el (cl-lib): Require also when
	loading.
	(flymake--fix-line-numbers): Rename from
	flymake-fix-line-numbers.  Simplify.
	(flymake-report): Call flymake--fix-line-numbers.  Rearrange
	plain diagnostics list into alist format expected by
	flymake-highlight-err-lines.

	* lisp/progmodes/flymake-proc.el (flymake-process-filter): Insert
	process output and parse in dedicated output buffer.
	(flymake-proc--diagnostics-for-pattern): New helper function.
	(flymake-process-sentinel): Call flymake-post-syntax-check with
	collected diagnostics.  Kill output buffer.
	(flymake-post-syntax-check): Receive diagnostics as third argument.
	(flymake-parse-output-and-residual, flymake-new-err-info)
	(flymake-parse-residual, flymake-parse-err-lines)
	(flymake-split-output, flymake-proc-parse-line)
	(flymake-output-residual): Delete.
	(flymake-start-syntax-check-process): Use make-process.	 Setup
	dedicated an output buffer

2017-10-03  João Távora  <joaotavora@gmail.com>

	Flymake provides flymake-report re-entry point for backends

	* lisp/progmodes/flymake-proc.el (flymake-post-syntax-check):
	Simplify.  Call flymake-report.

	* lisp/progmodes/flymake.el (flymake-report): New function.

2017-10-03  João Távora  <joaotavora@gmail.com>

	Split Flymake into flymake.el into flymake-proc.el (again!)

	After deciding that this work would continue on master only, which
	caused two commits named

	   Revert "Split flymake.el into flymake-proc.el and flymake-ui.el"

	and

	   Revert "Add flymake-backends defcustom"

	to be added to the emacs-26 branch, further discussion reversed that
	decision.

	   See:

	     https://lists.gnu.org/r/emacs-devel/2017-09/msg01020.html
	     https://lists.gnu.org/r/emacs-devel/2017-09/msg01030.html

	This means that those two commits MUST be merged to master AFTER ALL.

	flymke-proc.el contains the main syntax-checking backend, while
	flymake.el keeps mostly the UI part.

	* lisp/progmodes/flymake-proc.el: New file.  Require flymake.

	* lisp/progmodes/flymake.el: Require flymake-proc.el at the end.

2017-10-03  Nicolas Petton  <nicolas@petton.fr>

	Update authors.el

	* admin/authors.el (authors-ignored-files, authors-valid-file-names)
	(authors-renamed-files-alist): Additions.

2017-10-03  Noam Postavsky  <npostavs@gmail.com>

	Give more helpful messages for python completion setup failures

	* lisp/progmodes/python.el (python-shell-completion-native-setup): In
	case the completion setup failed with some exception, print out the
	exception type and message.  If libedit is detected, raise an
	exception, since this is known to fail.

2017-10-02  Eli Zaretskii  <eliz@gnu.org>

	Fix the --without-x build

	* src/frame.c (Ficonify_frame) [HAVE_WINDOW_SYSTEM]: Use
	frame_parent only in GUI builds to avoid compilation errors in
	--without-x builds.  (Bug#28611)

2017-10-02  Paul Eggert  <eggert@day>

	Fix customization of zoneinfo-style-world-list

	A customizable variable's initial value cannot depend on that of
	another customizable variable, since the variables are initialized
	in other than textual order.  Problem reported by N. Jackson
	(Bug#24291).
	* lisp/time.el (display-time-world-list): Default to t,
	a special value that expands to zoneinfo-style-word-list
	if that works, and to legacy-style-word-list otherwise.
	(time--display-world-list): New function.
	(display-time-world, display-time-world-timer): Use it.

2017-10-02  Alan Mackenzie  <acm@muc.de>

	Fix a CC Mode brace stack cache bug.

	* lisp/progmodes/cc-engine.el (c-update-brace-stack): Call
	c-beginning-of-current-token after a failing search operation, to ensure we
	don't cache a point inside a token.

2017-10-02  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/PROBLEMS: Document Bug#26638.

2017-10-02  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer HTTPS to HTTP for gnu.org

	This fixes some URLs I omitted from my previous pass,
	notably those in lists.gnu.org.  Although lists.gnu.org
	does not yet support TLS 1.1, TLS 1.0 is better than nothing.
	* lisp/erc/erc.el (erc-official-location):
	* lisp/mail/emacsbug.el (report-emacs-bug):
	Use https:, not http:.

2017-10-02  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This is mostly to change http: to https: in licenses.
	* COPYING, build-aux/config.guess, build-aux/config.sub:
	* doc/emacs/doclicense.texi, doc/emacs/gpl.texi:
	* doc/lispintro/doclicense.texi, doc/lispref/doclicense.texi:
	* doc/lispref/gpl.texi, doc/misc/doclicense.texi:
	* doc/misc/gpl.texi, etc/COPYING, leim/COPYING:
	* lib-src/COPYING, lib/COPYING, lisp/COPYING, lwlib/COPYING:
	* msdos/COPYING, nt/COPYING, src/COPYING:
	Copy from Gnulib.

2017-10-01  Simen Heggestøyl  <simenheg@gmail.com>

	Keep eww buffer current when looking up CSS on MDN

	* lisp/textmodes/css-mode.el (css-lookup-symbol): Keep the eww buffer
	current when looking up CSS documentation on MDN.  This fixes a bug
	where the eww buffer's content sometimes get mangled when switching
	buffers mid-render.

2017-10-01  Charles A. Roelli  <charles@aurox.ch>

	Workaround for faulty localtime() under macOS 10.6

	* lisp/org/org-clock.el (org-clock--oldest-date): Only execute
	'decode-time' on times later than year -2**31 under macOS 10.6.
	See Bug#27706.

2017-10-01  Alan Mackenzie  <acm@muc.de>

	Doc amendment for syntax-ppss.

	* doc/lispref/syntax.texi (Position Parse): Note, twice, that syntax-ppss is
	equivalent to parse-partial-sexp from the beginning of THE VISIBLE PART OF the
	buffer.  Final part of the fix for bug #22983.

2017-10-01  Charles A. Roelli  <charles@aurox.ch>

	Remove incorrect NEWS entry about 'find-library'

	* etc/NEWS (Changes in Emacs 26.1): Remove an entry about
	'find-library' taking a prefix argument to pop to a different
	window.  This behavior was added in "Allow a prefix argument to
	find-library to pop to a different window" (commit e1f2d14a), and
	then removed in "New commands: find-library-other-window,
	find-library-other-frame" (commit 021430f4).

2017-10-01  Alan Mackenzie  <acm@muc.de>

	Remove inadvertent changes to syntax.texi in last commit.

	* doc/lispref/syntax.texi (Position Parse): revert changes.

2017-10-01  Alan Mackenzie  <acm@muc.de>

	Amend documentation for text-quoting-style becoming a user option.

	* doc/lispref/control.texi (Signaling Errors):
	* doc/lispref/display.texi (Displaying Messages):
	* doc/lispref/strings.texi (Formatting Strings):
	Edit for brevity, farming out the details to the new
	Text Quoting Style node.
	* doc/lispref/help.texi (Text Quoting Style): New section.
	Move detailed discussion of text-quoting-style here.
	Add discussion about how to output grave accent and apostrophe in
	documentation and messages.  Adjust xrefs to point to this section
	when appropriate.
	* etc/NEWS: text-quoting-style semantics have not changed.

2017-10-01  Alan Mackenzie  <acm@muc.de>

	Make the value nil in text-quoting-style mean what it does in Emacs 25.

	This is a partial reversion of yesterday's commit by the same author, which
	changed the meaning of nil and introduced the new value t.

	* src/doc.c (text_quoting_style, text-quoting-style)
	(internal--text-quoting-flag): Revert yesterday's changes.

	* lisp/cus-start.el: (top level): Amend the entry for text-quoting-style.

	* etc/NEWS: Amend the entry for text-quoting-style.

	* doc/lispref/control.texi (Signalling Errors)
	* doc/lispref/display.texi (Displaying Messages)
	* doc/lispref/strings.texi (Formatting Strings): Bind text-quoting-style to
	grave rather than nil to inhibit translation of quotes.

	* doc/lispref/help.texi (Keys in Documentation): Revert the description of the
	proposed new default, t.

2017-10-01  Alan Mackenzie  <acm@muc.de>

	Make text-quoting-style customizable.  Introduce t and new meaning for nil.

	A value of nil for text-quoting-style now means "no translation".  t means
	"Use curved quotes if displayable".

	* src/doc.c (text-quoting-style (function)): modify for new semantics.
	(text-quoting-style (variable)): Amend the doc string, set the default value
	to t.

	* lisp/cus-start.el: (top level): Create a customize entry for
	text-quoting-style in group display.

	* etc/NEWS: Amend the entry for text-quoting-style.

	* doc/emacs/display.texi (Text Display): Describe the translation of ASCII
	quotes to curved quotes, and how to influence or inhibit it.

	* doc/lispref/control.texi (Signalling Errors)
	* doc/lispref/display.texi (Displaying Messages)
	* doc/lispref/strings.texi (Formatting Strings): Describe binding
	text-quoting-style to nil to inhibit unwanted quote translation.

	* doc/lispref/help.texi (Keys in Documentation): Change text-quoting-style
	from a variable to a user option.  Describe its changed set of values.  State
	that it can be customized freely.

2017-10-01  Michael Albinus  <michael.albinus@gmx.de>

	eshell.texi improvements

	* doc/misc/eshell.texi (Built-ins): eshell/sudo is a compiled
	Lisp function in `em-tramp.el'.  Mention also $*, $1, $2, ...
	(Aliases): Add $*, $1, $2, ... to the variable index.

2017-08-15  Alan Third  <alan@breton-build.holly.idiocy.org>

	Fix ns-win.el on GNUstep

	* lisp/term/ns-win.el: Appkit version check only works on macOS, so
	don't try it when not using Cocoa.

2017-10-01  Martin Rudalics  <rudalics@gmx.at>

	Fix reference style in org.texi

	* doc/misc/org.texi (A Texinfo example): Fix reference style.

2017-10-01  Martin Rudalics  <rudalics@gmx.at>

	Improve handling of iconification of child frames (Bug#28611)

	* src/frame.c (Ficonify_frame): Handle `iconify-child-frame' option.
	(syms_of_frame): New symbols Qiconify_top_level and Qmake_invisible.
	(iconify_child_frame): New option.
	* lisp/cus-start.el (iconify-child-frame): Add customization
	properties.
	* doc/lispref/frames.texi (Child Frames): Describe new option
	`iconify-child-frame'.  Don't index "top-level frame" twice.

2017-10-01  Noam Postavsky  <npostavs@gmail.com>

	Revert "Don't lose arguments to eshell aliases (Bug#27954)"

	It broke the established argument handling methods provided by eshell
	aliases (Bug#28568).
	* doc/misc/eshell.texi (Aliases): Fix example, call out use of
	arguments in aliases.
	* lisp/eshell/em-alias.el (eshell-maybe-replace-by-alias): Ignore
	ARGS.

2017-10-01  Noam Postavsky  <npostavs@gmail.com>

	Make "unsafe directory" error message more informative (Bug#865)

	* lisp/server.el (server-ensure-safe-dir): Produce a description for
	each "unsafe" condition.

2017-10-01  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Fix slot typecheck in eieio-persistent

	* lisp/emacs-lisp/eieio-base.el (eieio-persistent-slot-type-is-class-p):
	  An `or' form can specify multiple potential classes (or null) as
	  valid types for a slot, but previously only the final element of the
	  `or' was actually checked. Now returns all valid classes in the `or'
	  form.
	  (eieio-persistent-validate/fix-slot-value): Check if proposed value
	  matches any of the valid classes.
	* test/lisp/emacs-lisp/eieio-tests/eieio-test-persist.el
	  (eieio-test-multiple-class-slot): Test this behavior.

2017-09-30  Dmitry Gutov  <dgutov@yandex.ru>

	Fix semantic-ia-fast-jump

	* lisp/cedet/semantic/ia.el (semantic-ia--fast-jump-helper):
	Use `pop-to-buffer-same-window' (bug#28645).

2017-09-30  Kaushal Modi  <kaushal.modi@gmail.com>

	Bind vc-region-history

	* lisp/vc/vc-hooks.el (vc-prefix-map):
	Bind `vc-region-history' to 'C-x v h', which was earlier bound to
	`vc-insert-headers' (Bug#27644).
	* doc/emacs/maintaining.texi (VC Change Log): Mention the new binding.
	* doc/emacs/vc1-xtra.texi (Version Headers): Remove the association of
	'C-x v h' with `vc-insert-headers'.
	(https://lists.gnu.org/r/emacs-devel/2017-09/msg00957.html)

2017-09-30  Allen Li  <vianchielfaura@gmail.com>  (tiny change)

	Exit macro definition on undefined keys

	* lisp/subr.el (undefined): Error out of kmacro definition, if any.
	(Bug#28008)

2017-09-30  Tim Landscheidt  <tim@tim-landscheidt.de>  (tiny change)

	Reset bidi-paragraph-direction on article rendering

	* lisp/gnus/gnus-art.el (gnus-request-article-this-buffer): Reset
	bidi-paragraph-direction on article rendering.  (Bug#28454)

2017-09-30  Eli Zaretskii  <eliz@gnu.org>

	Fix url-http use of url-current-object

	* lisp/url/url-http.el (url-http): Bind url-current-object before
	calling url-http-find-free-connection.  (Bug#28515)

2017-09-30  Andy Moreton  <andrewjmoreton@gmail.com>

	Avoid assertions in vc-hg.el on MS-Windows

	* lisp/vc/vc-hg.el (vc-hg--pcre-to-elisp-re)
	(vc-hg--slurp-hgignore, vc-hg--read-repo-requirements)
	(vc-hg-state-fast): Use file-name-absolute-p and directory-name-p
	instead of relying on Unix file-name syntax.  This avoids
	assertion violations on MS-Windows.

2017-09-30  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'copy-sequence'

	* src/fns.c (Fcopy_sequence):
	* doc/lispref/sequences.texi (Sequence Functions): Mention the
	exception when copying an empty sequence.  (Bug#28627)

2017-09-30  Eli Zaretskii  <eliz@gnu.org>

	Minor update of ack.texi

	* doc/emacs/ack.texi (Acknowledgments): Update Eli Zaretskii's
	contributions.

2017-09-30  N. Jackson  <nljlistbox2@gmail.com>  (tiny change)

	* doc/emacs/emacs.texi (Acknowledgments): Add more contributors.

2017-09-30  Eli Zaretskii  <eliz@gnu.org>

	Improve indexing of multi-file/buffer Isearch commands

	* doc/emacs/maintaining.texi (Identifier Search): Change wording
	of index entries to make them different from those for multi-file
	isearch commands.  (Bug#28584)
	* doc/emacs/search.texi (Other Repeating Search): Index the
	multi-* commands.  (Bug#28584)  Rearrange the indexing to keep
	each index entry close to its subject.

2017-09-30  Mark Oteiza  <mvoteiza@udel.edu>

	Add CAM02 JCh and CAM02-UCS J'a'b' conversions

	* src/lcms.c (rad2deg, parse_jch_list, parse_jab_list, xyz_to_jch):
	(jch_to_xyz, jch_to_jab, jab_to_jch): New functions.
	(lcms-jch->xyz, lcms-jch->xyz, lcms-jch->jab, lcms-jab->jch): New Lisp
	functions.
	(lcms-cam02-ucs): Refactor.
	(syms_of_lcms2): Declare new functions.
	* test/src/lcms-tests.el (lcms-roundtrip, lcms-ciecam02-gold):
	(lcms-jmh->cam02-ucs-silver): New tests.
	* etc/NEWS: Mention new functions.

2017-09-30  Eli Zaretskii  <eliz@gnu.org>

	Fix uses of @kindex in the Emacs manual

	* doc/emacs/programs.texi (Expressions, Semantic, Hungry Delete):
	* doc/emacs/mark.texi (Global Mark Ring)
	(Disabled Transient Mark):
	* doc/emacs/buffers.texi (Select Buffer):
	* doc/emacs/mule.texi (File Name Coding): Fix @kindex entries
	which used @key.  Reported by Marcin Borkowski <mbork@mbork.pl>.

2017-09-30  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-09-28 string: code style
	2017-09-25 sys_types: update URL
	2017-09-23 install-sh: do not assume / = //
	2017-09-21 mktime: port to OpenVMS
	* build-aux/install-sh, m4/mktime.m4, m4/string_h.m4:
	* m4/sys_types_h.m4: Copy from Gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-09-30  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer HTTPS to HTTP for gnu.org

	This catches some URLs I missed in my previous scan,
	or perhaps were added after the scan.

2017-09-30  Noam Postavsky  <npostavs@gmail.com>

	Wait for frame visibility with timeout in w32term too

	* src/w32term.c (syms_of_w32term) [x-wait-for-event-timeout]: New
	variable.
	(x_make_frame_visible): Wait for frame to become visible according to
	its value.
	(input_signal_count): Remove.

2017-09-30  Noam Postavsky  <npostavs@gmail.com>

	Bring back the busy wait after x_make_frame_visible (Bug#25521)

	But wait specfically for a MapNotify event, and only for a
	configurable amount of time.
	* src/xterm.c (syms_of_xterm) [x-wait-for-event-timeout]: New
	variable.
	(x_wait_for_event): Use it instead of hardcoding the wait to 0.1s.
	(x_make_frame_visible): Call x_wait_for_event at the end.
	* etc/NEWS: Announce x_wait_for_event.

2017-09-29  Eli Zaretskii  <eliz@gnu.org>

	Fix last doc string change in simple.el

	* lisp/simple.el (shell-command-saved-pos)
	(region-extract-function, region-bounds): Doc fixes.  (Bug#28609)

2017-09-29  Eli Zaretskii  <eliz@gnu.org>

	Revert "bug#28609: simple.el"

	This reverts commit a75ab3b3fb8ab69ef38a94403d061f88f3b5b63e.

2017-09-29  Devon Sean McCullough  <Emacs-Hacker2017@jovi.net>

	bug#28609: simple.el

	Correct grammar; also, call a pair a pair.

	(cherry picked from commit 25ef543a97a80718cc4eb33734d393420a43f41e)

2017-09-29  Rasmus  <rasmus@gmx.us>

	Merge branch 'emacs-26' into scratch/org-mode-merge

2017-09-29  Noam Postavsky  <npostavs@gmail.com>

	Fix ert backtrace saving for non-`signal'ed errors (Bug#28333)

	* lisp/emacs-lisp/ert.el (ert--run-test-debugger): Take the frames
	above the `debugger' frame, rather than assuming there will be a
	`signal' frame.

2017-09-28  Alan Third  <alan@idiocy.org>

	Revert "Fix build on macOS (bug#28571)"

	This reverts commit fec63089d53d2196b0348086aeed70277fbc02c0.

	Prematurely pushed.

2017-09-28  Alan Third  <alan@idiocy.org>

	Fix build on macOS (bug#28571)

	* src/conf_post.h (HAVE_FUTIMENS, HAVE_FUTIMESAT, HAVE_UTIMENSAT)
	[DARWIN_OS]: Undefine.

2017-09-28  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for `css-current-defun-name'

	* test/lisp/textmodes/css-mode-tests.el (css-test-current-defun-name)
	(css-test-current-defun-name-nested)
	(css-test-current-defun-name-complex): New tests for
	`css-current-defun-name'.

2017-09-28  Martin Rudalics  <rudalics@gmx.at>

	In w32fullscreen_hook don't add decorations to undecorated frames

	* src/w32term.c (w32fullscreen_hook): Do not add (or try to
	remove) decorations for undecorated frames.

2017-09-28  João Távora  <joaotavora@gmail.com>

	Revert "Split flymake.el into flymake-proc.el and flymake-ui.el"

	In other words, re-coalesce the two files,
	lisp/progmodes/flymake-proc.el and lisp/progmodes/flymake-ui.el, back
	into a single one, lisp/progmodes/flymake.el.

	The changesets "Prefer HTTPS to FTP and HTTP in documentation" and
	"allow nil init in flymake-allowed-file-name-masks to disable flymake"
	are kept in place in the new lisp/progmodes/flymake.el.

	This reverts Git commit eb34f7f5a29e7bf62326ecb6e693f28878be28cd.

	Don't merge this back to master as development happening there builds
	upon this work. See also
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00932.html.

2017-09-28  João Távora  <joaotavora@gmail.com>

	Revert "Add flymake-backends defcustom"

	This reverts Git commit 13993c46a21495167517f76d2e36b6c09ac5e89e.

	Don't merge this back to master as development happening there builds
	upon this work. See also
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00932.html

2017-09-27  Paul Eggert  <eggert@cs.ucla.edu>

	* src/editfns.c (styled_format): Fix typo in previous change.

2017-09-27  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid some unnecessary copying in Fformat etc.

	This patch is just for performance; it should not affect behavior.
	On my platform, it made the microbenchmark (format "%S" load-path)
	run about 45% faster.  It should also speed up calls like (message
	"%s" STRING).
	* src/callint.c (Fcall_interactively):
	* src/dbusbind.c (XD_OBJECT_TO_STRING):
	* src/editfns.c (Fmessage, Fmessage_box):
	* src/xdisp.c (vadd_to_log, Ftrace_to_stderr):
	Use styled_format instead of Fformat or Fformat_message,
	to avoid unnecessary copying.
	* src/editfns.c (styled_format): New arg NEW_RESULT.
	All uses changed.  Reuse an input string if it has the
	right value and if !NEW_RESULT.
	* src/lisp.h (style_format): New decl.

2017-09-26  John Wiegley  <johnw@newartisans.com>

	lisp/simple.el: Indicate when a list of pairs is meant in a docstring

2017-09-26  Devon Sean McCullough  <Emacs-Hacker2017@jovi.net>

	bug#28609: simple.el

	Correct grammar; also, call a pair a pair.

2017-09-26  Dmitry Gutov  <dgutov@yandex.ru>

	Use a separate syntax-ppss cache for narrowed buffers

	* lisp/emacs-lisp/syntax.el (syntax-ppss-wide):
	New variable, to contain the data from `syntax-ppss-last' and
	`syntax-ppss-cache'.
	(syntax-ppss-cache, syntax-ppss-last): Remove.
	(syntax-ppss-narrow, syntax-ppss-narrow-start): New variables.
	(syntax-ppss-flush-cache): Flush both caches.
	(syntax-ppss--data): Return the appropriate last result and
	buffer cache for the current restriction.
	(syntax-ppss, syntax-ppss-debug): Use it (bug#22983).

2017-09-26  Joerg Behrmann  <behrmann@physik.fu-berlin.de>  (tiny change)

	Improve python3-compatibility of fallback completion (Bug#28499)

	* lisp/progmodes/python.el (python-eldoc-setup-code): Use
	inspect.getfullargspec instead of inspect.getargspec to avoid a
	deprecation warning on every usage of eldoc in python-mode.

2017-09-26  Noam Postavsky  <npostavs@gmail.com>

	Fix subr-x-tests when running from elc

	* test/lisp/emacs-lisp/subr-x-tests.el (subr-x-and-let*-test-group-1):
	Use `eval' around the `should-error' cases.

2017-09-26  Noam Postavsky  <npostavs@gmail.com>

	* lisp/eshell/esh-util.el (eshell-condition-case): Add debug declaration.

2017-09-26  Noam Postavsky  <npostavs@gmail.com>

	Make sh-indentation into an alias for sh-basic-offset (Bug#21751)

	* lisp/progmodes/sh-script.el (sh-indentation): Redefine as obsolete
	variable alias for `sh-basic-offset'.
	(sh-mode, sh-smie--indent-continuation)
	(sh-smie-rc-rules, sh-basic-indent-line): Replace `sh-indentation'
	with `sh-basic-offset'.

2017-09-26  Noam Postavsky  <npostavs@gmail.com>

	Fix loading of smie-config rules (Bug#24848)

	* lisp/emacs-lisp/smie.el (smie-config--setter): Use `set-default'
	instead of `setq-default'.
	(smie-config): Use `custom-initialize-set' instead of
	`custom-initialize-default' as the :initialize argument.

	* lisp/progmodes/sh-script.el (sh-learn-buffer-indent): Mention that
	we call `smie-config-guess' so that the user will have a chance to
	find the correct docstring to consult.  Remove hedging comments
	regarding use of abnormal hooks.

2017-09-26  Dmitry Gutov  <dgutov@yandex.ru>

	Reset default-directory inside *xref-grep* buffer

	* lisp/progmodes/xref.el (xref-collect-matches):
	Reset default-directory, too. (Bug#28575)

2017-09-25  Michael Albinus  <michael.albinus@gmx.de>

	* test/lisp/net/tramp-tests.el (tramp-test21-file-links): Special
	code for smb.

2017-09-25  Mark Oteiza  <mvoteiza@udel.edu>

	Loosen strict parsing requirement for desktop files

	There are other desktop-looking files, for instance those having to do
	with MIME typess, that would benefit from being able to be read by this
	function.  It helps to have some flexibility.
	* lisp/xdg.el (xdg-desktop-read-file): Remove an error condition.
	* test/lisp/xdg-tests.el: Remove a test.

2017-09-25  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/xdg.el (xdg-thumb-uri): Fix doc string.

2017-09-25  Martin Rudalics  <rudalics@gmx.at>

	Fix documentation of `make-frame' and related variables and hooks

	* lisp/frame.el (before-make-frame-hook)
	(after-make-frame-functions, frame-inherited-parameters)
	(make-frame): Fix doc-strings.
	* doc/lispref/frames.texi (Creating Frames): Fix description
	of `make-frame' and related variables and hooks.

2017-09-24  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Accept new `always' value for option `buffer-offer-save'

	Also revert ee512e9a82

	* lisp/files.el (buffer-offer-save): In addition to nil and t, now
	  allows a third symbol value, `always'. A buffer where this option is
	  set to `always' will always be offered for save by
	  `save-some-buffers'.
	  (save-some-buffers): Check the exact value of this buffer-local
	  variable. No longer check the buffer name, or the value of
	  `write-contents-functions'.
	* doc/lispref/buffers.texi (Killing Buffers): Note change in manual.
	* doc/lispref/files.texi (Saving Buffers): Remove note about buffer
	  names.
	* etc/NEWS: Mention in NEWS.

2017-09-24  Alan Third  <alan@idiocy.org>

	Improve new NS scrolling variable names

	* src/nsterm.m (ns-use-system-mwheel-acceleration): Replace with
	'ns-use-mwheel-acceleration'.
	(ns-touchpad-scroll-line-height): Replace with
	'ns-mwheel-line-height'.
	(ns-touchpad-use-momentum): Replace with 'ns-use-mwheel-momentum'.
	* etc/NEWS: Change variable names.

2017-09-24  Philipp Stephani  <phst@google.com>

	Document 'replace-buffer-contents' in the manual.

	* doc/lispref/text.texi (Replacing): New node.

2017-09-23  Alan Third  <alan@idiocy.org>

	Fix undecorated frame resizing issues on NS (bug#28512)

	* src/nsterm.m (EmacsView::updateFrameSize): Don't wait for the
	toolbar on undecorated frames.
	(EmacsView::initFrameFromEmacs): Group window flags correctly.

2017-09-23  Eli Zaretskii  <eliz@gnu.org>

	Fix doc string of 'dired-listing-switches'

	* lisp/dired.el (dired-listing-switches): Fix the quoting
	example.  (Bug#28569)

2017-09-23  Eli Zaretskii  <eliz@gnu.org>

	Documentation improvements for 'display-line-numbers'

	* doc/emacs/display.texi (Display Custom): Document a few more
	options for display-line-numbers.  (Bug#28533)  Fix a typo.

2017-09-22  Eli Zaretskii  <eliz@gnu.org>

	Fix last change in bat-mode.el

	* lisp/progmodes/bat-mode.el (bat-font-lock-keywords): Fix last
	change.  (Bug#28311)

2017-09-22  Eli Zaretskii  <eliz@gnu.org>

	Fix restoring in GUI sessions desktop saved in TTY sessions

	* lisp/frameset.el (frameset-filter-font-param): New function.
	(frameset-persistent-filter-alist): Use it for processing the
	'font' frame parameter.  (Bug#17352)

2017-09-22  Eli Zaretskii  <eliz@gnu.org>

	Improve syntax highlighting in bat-mode

	* lisp/progmodes/bat-mode.el (bat-font-lock-keywords): Improve
	font-locking of environment variables.  Suggested by Achim Gratz
	<Stromeko@nexgo.de>.  (Bug#28311)  (Bug#18405)

2017-09-22  Eli Zaretskii  <eliz@gnu.org>

	Document the 'list-FOO' convention

	* doc/lispref/tips.texi (Coding Conventions): Document the
	list-FOO convention.

2017-09-22  Mark Oteiza  <mvoteiza@udel.edu>

	Expose viewing conditions in CAM02-UCS metric

	Also add tests from the colorspacious library.  Finally, catch an
	errant calculation, where degrees were not being converted to radians.
	* src/lcms.c (deg2rad, default_viewing_conditions):
	(parse_viewing_conditions): New functions.
	(lcms-cam02-ucs): Add comments pointing to references used.  Expand
	the docstring and explain viewing conditions.  JCh hue is given in
	degrees and needs to be converted to radians.
	(lcms-d65-xyz): Remove.  No need to duplicate this in Lisp or make the
	API needlessly impure.
	* test/src/lcms-tests.el: Reword commentary.
	(lcms-rgb255->xyz): New function.
	(lcms-cri-cam02-ucs): Fix let-binding.
	(lcms-dE-cam02-ucs-silver): New test, assimilated from colorspacious.

2017-09-21  Alan Third  <alan@idiocy.org>

	Revert "Set frame size to actual requested size (bug#18215)"

	This reverts commit d31cd79b40dbd5459b16505a4ee4340210499277.

	See bug#28536. I misunderstood bug#18215. It wasn't a bug.

2017-09-21  Gemini Lasswell  <gazally@runbox.com>

	Add tests for Edebug

	* test/lisp/emacs-lisp/edebug-tests.el: New file.
	* test/lisp/emacs-lisp/edebug-resources/edebug-test-code.el: New file.

2017-09-21  Gemini Lasswell  <gazally@runbox.com>

	Catch more messages in ert-with-message-capture

	* lisp/emacs-lisp/ert-x.el (ert-with-message-capture): Capture
	messages from prin1, princ and print.
	(ert--make-message-advice): New function.
	(ert--make-print-advice): New function.

2017-09-21  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Support setting region from secondary selection and vice versa

	* lisp/mouse.el (secondary-selection-exist-p): New function to
	allow callers to tell existence of the secondary selection
	in current buffer.
	(secondary-selection-to-region): New function to set
	beginning and end of the region from those of the secondary
	selection.
	(secondary-selection-from-region): New function to set
	beginning and end of the secondary selection from those of
	the region.  (Bug#27530)

	* etc/NEWS: Mention the new functions.

2017-09-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix new copy-directory bug with empty dirs

	Problem reported by Afdam Plaice (Bug#28520) and by Eli Zaretskii
	(Bug#28483#34).  This is another bug that I introduced in my
	recent copy-directory changes.
	* lisp/files.el (copy-directory): Work with empty subdirectories, too.
	* test/lisp/files-tests.el (files-tests--copy-directory):
	Test for this bug.

2017-09-20  Eli Zaretskii  <eliz@gnu.org>

	* doc/lispref/strings.texi (Formatting Strings): Improve indexing.

2017-09-20  Eli Zaretskii  <eliz@gnu.org>

	Fix 2 testsuite tests for MS-Windows

	* test/lisp/ibuffer-tests.el (test-buffer-list): Don't try to
	create files with "*" in their names.
	* test/src/editfns-tests.el (format-time-string-with-zone): Adapt
	results to MS-Windows build.  Reported by Fabrice Popineau
	<fabrice.popineau@gmail.com>.

2017-09-20  Mark Oteiza  <mvoteiza@udel.edu>

	Rename timer-list to list-timers

	* doc/emacs/anti.texi (Antinews):
	* doc/lispref/os.texi (Timers):
	* etc/NEWS:
	* lisp/emacs-lisp/timer-list.el:
	(timer-list-mode): Rename timer-list to list-timers.

2017-09-19  Alan Third  <alan@idiocy.org>

	Provide native touchpad scrolling on macOS

	* etc/NEWS: Describe changes.
	* lisp/term/ns-win.el (mouse-wheel-scroll-amount,
	mouse-wheel-progressive-speed): Set to smarter values for macOS
	touchpads.
	* src/nsterm.m (emacsView::mouseDown): Use precise scrolling deltas to
	calculate scrolling for touchpads and mouse wheels.
	(syms_of_nsterm): Add variables 'ns-use-system-mwheel-acceleration',
	'ns-touchpad-scroll-line-height' and 'ns-touchpad-use-momentum'.
	* src/keyboard.c (make_lispy_event): Pass on .arg when relevant.
	* src/termhooks.h (event_kind): Update comments re. WHEEL_EVENT.
	* lisp/mwheel.el (mwheel-scroll): Use line count.
	* lisp/subr.el (event-line-count): New function.

2017-09-19  Eli Zaretskii  <eliz@gnu.org>

	Fix MinGW64 build broken by recent MinGW64 import libraries

	* configure.ac (W32_LIBS): Put -lusp10 before -lgdi32, as latest
	MinGW64 import libraries require that.  (Bug#28493)

	* src/Makefile.in: Adjust commentary to the new order of w32
	libraries.

2017-09-19  Eli Zaretskii  <eliz@gnu.org>

	Fix crashes in 'move-point-visually' in minibuffer windows

	* src/xdisp.c (Fmove_point_visually): Fix off-by-one error in
	comparing against the last valid glyph_row of a window glyph
	matrix.  (Bug#28505)

2017-09-19  Eli Zaretskii  <eliz@gnu.org>

	* src/emacs.c (usage_message): Don't mention 'find-file'.

2017-09-19  Eli Zaretskii  <eliz@gnu.org>

	Fix a minor inaccuracy in the Emacs manual

	* doc/emacs/cmdargs.texi (Action Arguments): Don't mention
	'find-file', as the implementation has changed.  Reported by
	Everton J. Carpes <everton.carpes@gmail.com> in
	https://lists.gnu.org/r/help-gnu-emacs/2017-09/msg00146.html.

2017-09-19  Eli Zaretskii  <eliz@gnu.org>

	Fix errors in flyspell-post-command-hook

	* lisp/textmodes/ispell.el (ispell-get-decoded-string): Handle the
	case of a nil Nth element of the language dictionary slot.  This
	avoids errors in 'flyspell-post-command-hook' when switching
	dictionaries with some spell-checkers.  (Bug#28501)

2017-09-19  Michael Albinus  <michael.albinus@gmx.de>

	Work on Tramp's file-truename

	* lisp/net/tramp-sh.el (tramp-perl-file-truename):
	Check also for symlinks.
	(tramp-sh-handle-file-truename): Move check for a symlink
	cycle to the end.  Do not blame symlinks which look like a
	remote file name.

	* lisp/net/tramp.el (tramp-handle-file-truename): Expand result.

2017-09-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug with make-directory on MS-Windows root

	* lisp/files.el (files--ensure-directory): Treat any error, not
	just file-already-exists, as an opportunity to check whether DIR
	is already a directory (Bug#28508).

2017-09-19  Tom Tromey  <tom@tromey.com>

	Fix log-view-diff-common when point is after last entry

	Bug#28466
	* lisp/vc/log-view.el (log-view-diff-common): If point is after last
	entry, look at the previous revision.

2017-09-18  Ken Brown  <kbrown@cornell.edu>

	Adapt fileio-tests--symlink-failure to Cygwin

	* test/src/fileio-tests.el (fileio-tests--symlink-failure)
	[CYGWIN]: Skip the case of a symlink target starting with '\';
	this is treated specially on Cygwin.

2017-09-18  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Ignore buffers whose name begins with a space in save-some-buffers

	* lisp/files.el (save-some-buffers): Consider these buffers
	  "internal", and don't prompt the user to save them.
	* doc/lispref/files.texi: Document.

2017-09-18  Michael Albinus  <michael.albinus@gmx.de>

	Improve tramp-interrupt-process robustness

	* lisp/net/tramp.el (tramp-interrupt-process): Wait, until the
	process has disappeared.

2017-09-18  Michael Albinus  <michael.albinus@gmx.de>

	Minor Tramp doc update

	* doc/misc/tramp.texi (Frequently Asked Questions):
	Mention `vc-handled-backends'.

2017-09-18  Mark Oteiza  <mvoteiza@udel.edu>

	Fix gensym

	* lisp/subr.el (gensym): Actually implement the default prefix.
	* test/lisp/subr-tests.el (subr-tests--gensym): New test.

2017-09-18  Rasmus  <rasmus@gmx.us>

	Update Org to v9.1.1

	Please see etc/ORG-NEWS for major changes.

2017-09-18  Michael Albinus  <michael.albinus@gmx.de>

	Cleanup in files-tests.el

	* test/lisp/files-tests.el (files-tests--make-directory)
	(files-tests--copy-directory): Cleanup temporary directories.

2017-09-18  Paul Eggert  <eggert@cs.ucla.edu>

	Remove old cl-assert calls in 'newline'

	* lisp/simple.el (newline): Remove cl-assert calls
	that didn't seem to be helping us debug Bug#18913,
	and that caused problems as reported in Bug#28280.
	Suggested by Glenn Morris (Bug#28280#8).

2017-09-18  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid crash with C-g C-g in GC

	Problem reported by Richard Stallman (Bug#17406).
	Based on fix suggested by Eli Zaretskii (Bug#28279#16).
	* src/term.c (tty_send_additional_strings):
	Use only safe accessors, to avoid crash when C-g C-g in GC.

2017-09-18  Paul Eggert  <eggert@cs.ucla.edu>

	Fix format-time-string %Z bug with negative tz

	* src/editfns.c (tzlookup): Fix sign error in %Z when a purely
	numeric zone is negative (Bug#28746).
	* test/src/editfns-tests.el (format-time-string-with-zone):
	Add test for this bug.

2017-09-18  Paul Eggert  <eggert@cs.ucla.edu>

	message-citation-line-format %Z is now tz name

	* etc/NEWS:
	* lisp/gnus/message.el (message-citation-line-format):
	Fix doc to match new behavior (Bug#28476).

2017-09-18  Mark Oteiza  <mvoteiza@udel.edu>

	Use doc-view or pdf-tools on any window-system

	* lisp/net/mailcap.el (mailcap-mime-data): Simply check for
	window-system.

2017-09-18  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug with min and max and NaNs

	* src/data.c (minmax_driver): Fix bug with (min 0 NaN), which
	mistakenly yielded 0.  Also, pacify GCC in a better way.
	* test/src/data-tests.el (data-tests-min): Test for the bug.

2017-09-17  Paul Eggert  <eggert@cs.ucla.edu>

	Fix recently-introduced copy-directory bug

	Problem reported by Andrew Christianson (Bug#28451):
	* lisp/files.el (copy-directory): If COPY-CONTENTS, make the
	destination directory if it does not exist, even if it is a
	directory name.  Simplify, and omit unnecessary test for an
	already-existing non-directory target, since make-directory
	diagnoses that for us now.
	* test/lisp/files-tests.el (files-tests--copy-directory):
	Test for this bug.

2017-09-17  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2017-09-16 manywarnings: port to GCC on 64-bit MS-Windows
	2017-09-13 all: Replace many more http URLs by https URLs
	* build-aux/config.guess, build-aux/config.sub:
	* build-aux/gitlog-to-changelog, doc/misc/texinfo.tex:
	* lib/allocator.h, lib/count-leading-zeros.h:
	* lib/count-trailing-zeros.h, lib/dup2.c, lib/filevercmp.c:
	* lib/fstatat.c, lib/fsync.c, lib/ftoastr.c, lib/ftoastr.h:
	* lib/intprops.h, lib/signal.in.h, lib/stdio-impl.h, lib/stdio.in.h:
	* lib/unistd.in.h, lib/utimens.c, m4/alloca.m4, m4/extern-inline.m4:
	* m4/fstatat.m4, m4/gnulib-common.m4, m4/manywarnings.m4:
	* m4/std-gnu11.m4, m4/sys_types_h.m4, m4/vararrays.m4:
	Copy from Gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-09-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix compatibility problem in Tramp

	* lisp/net/tramp.el (tramp-interrupt-process): Better error handling.

	* lisp/net/tramp-compat.el (default-toplevel-value): Move up.
	(top): Do not call `tramp-change-syntax' anymore.
	(tramp-compat-directory-name-p): New defalias.

	* lisp/net/tramp-adb.el (tramp-adb-handle-copy-file):
	* lisp/net/tramp-sh.el (tramp-sh-handle-copy-directory):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-copy-file): Use it.

	* test/lisp/net/tramp-tests.el (tramp-test28-interrupt-process):
	Modify test.

2017-09-17  Eli Zaretskii  <eliz@gnu.org>

	Avoid GCC 7 compilation warning in eval.c

	* src/eval.c (push_handler_nosignal): Use CACHEABLE to work around
	GCC compilation warning.  Suggested by Paul Eggert <eggert@cs.ucla.edu>
	in https://lists.gnu.org/r/emacs-devel/2017-09/msg00492.html.

2017-09-17  Michael Albinus  <michael.albinus@gmx.de>

	Adapt Tramp version.  Do not merge

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.3.26.1".
	(customize-package-emacs-version-alist): Add Tramp version
	integrated in Emacs 26.1.

2017-09-17  Tom Tromey  <tom@tromey.com>

	Search for Syntax section when viewing MDN

	* lisp/textmodes/css-mode.el (css--mdn-after-render): Also search for
	"Syntax" section.

2017-09-17  Tom Tromey  <tom@tromey.com>

	Allow smerge-keep-current to work for empty hunks

	Bug#25555
	* lisp/vc/smerge-mode.el (smerge-get-current): Allow point to be at
	match-end.
	* test/lisp/vc/smerge-mode-tests.el: New file.

2017-09-17  Tom Tromey  <tom@tromey.com>

	Call vc-setup-buffer in vc-git-log-{in,out}going

	Bug#28427:
	* lisp/vc/vc-git.el (vc-git-log-incoming, vc-git-log-outgoing): Call
	vc-setup-buffer.

2017-09-17  Stefan Monnier  <monnier@iro.umontreal.ca>

	Fix last change to textmodes/page-ext.el

	* lisp/textmodes/page-ext.el (pages-directory): Make buffer writable
	while we build it (bug#28431).

2017-09-16  Glenn Morris  <rgm@gnu.org>

	* test/src/lcms-tests.el (lcms-cri-cam02-ucs): Skip if lcms2 not present.

2017-09-16  Glenn Morris  <rgm@gnu.org>

	* test/src/lcms-tests.el (lcms-whitepoint): Skip if lcms2 not present.

	(cherry picked from commit 8081df26911c63aadfce4ee8f6a7223d814baeaf)

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation warning in etags.c

	* lib-src/etags.c (etags_mktmp) [DOS_NT]: Don't dereference a NULL
	pointer.  Reported by Richard Copley <rcopley@gmail.com>.

2017-09-16  Mark Oteiza  <mvoteiza@udel.edu>

	Add lisp variable lcms-d65-xyz

	This serves as the default optional argument for functions in this
	library.
	* src/lcms.c (lcms-d65-xyz): New variable.
	(lcms-cam02-ucs): Use it.  Use better word in docstring.  Fix bug
	color1 -> color2.
	* test/src/lcms-tests.el: Add some tests for lcms-cri-cam02-ucs.
	(lcms-colorspacious-d65): New variable.

2017-09-16  Gemini Lasswell  <gazally@runbox.com>

	* lisp/emacs-lisp/cl-macs.el (cl-letf): Fix Edebug spec (bug#24765)

2017-09-16  Andy Moreton  <andrewjmoreton@gmail.com>

	Avoid MinGW64 compiler warnings in unexw32.c

	* src/unexw32.c (pDWP) [MINGW_W64]: Define to "16llx" only for the
	64-bit build.

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Start emacs-26 release branch

	* configure.ac:
	* nt/README.W32:
	* README:
	* msdos/sed2v2.inp: Increment Emacs version to 26.0.60.

	* lisp/cus-edit.el (customize-changed-options-previous-release):
	Update value to "25.3".

2017-09-16  Alan Mackenzie  <acm@muc.de>

	Cope better with C++ and Objective-C protection keywords in class declarations

	This fix fixes the fontification of a method inside a class at the time it is
	typed, when there is a protection keyword clause preceding it.

	* lisp/progmodes/cc-engine.el (c-forward-keyword-clause): Handle protection
	keywords.
	(c-looking-at-decl-block): Avoid scanning forward over protection keyword
	clauses too eagerly.

	* lisp/progmodes/cc-langs.el (c-protection-key c-post-protection-token): New
	lang defconsts and defvars.

	* lisp/progmodes/cc-mode.el (c-fl-decl-start): When we encounter a protection
	keyword following a semicolon or brace, move forward over it before attempting
	to parse a type.

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Fix order of sorted overlays returned by 'overlays-at'

	* src/buffer.c (Foverlays_at): If SORTED is non-nil, reverse the
	list of results, to have their order as per the documentation.
	(Bug#28390)

	* etc/NEWS: Mention the change in the behavior of overlays-at.

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Disable execution of unsafe Lisp by Enriched Text mode

	* src/xdisp.c (handle_display_spec): If the display property is
	wrapped in 'disable-eval' form, disable Lisp evaluation while
	processing this property.
	(handle_single_display_spec): Accept new argument ENABLE_EVAL_P.
	If that argument is false, don't evaluate Lisp while processing
	display properties.

	* lisp/textmodes/enriched.el
	(enriched-allow-eval-in-display-props): New defcustom.
	(enriched-decode-display-prop): If
	enriched-allow-eval-in-display-props is nil, wrap the display
	property with 'disable-eval' to disable Lisp evaluation when the
	display property is processed for display.  (Bug#28350)
	* lisp/gnus/mm-view.el (mm-inline-text): Re-enable processing of
	enriched text.

	* doc/lispref/display.texi (Display Property): Document the
	'disable-eval' wrapping of 'display' properties.
	* doc/emacs/text.texi (Enriched Properties): Document
	'enriched-allow-eval-in-display-props'.

	* etc/NEWS: Describe the security issues with Enriched Text mode
	and their solution.

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Avoid MinGW64 compilation warning in w32.c

	* src/w32.c (sys_strerror): Provide a prototype for MinGW64.

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Fix MS-Windows build broken by recent changes in lcms.c

	* src/lcms.c [WINDOWSNT]: Define types for cmsWhitePointFromTemp
	and cmsxyY2XYZ function pointers.
	(init_lcms_functions) [WINDOWSNT]: Load cmsWhitePointFromTemp and
	cmsxyY2XYZ from liblcms2.
	(cmsWhitePointFromTemp, cmsxyY2XYZ) [WINDOWSNT]: Redirect to the
	corresponding function pointers.
	(Flcms_temp_to_white_point): Minor stylistic changes.  Doc fix.
	(syms_of_lcms2): Defsubr Slcms_temp_to_white_point.

2017-09-16  Eli Zaretskii  <eliz@gnu.org>

	Avoid GCC 7 compilation warning in data.c

	* src/data.c (minmax_driver): Use UNINIT to avoid compilation
	warnings.  Reported by Fabrice Popineau
	<fabrice.popineau@centralesupelec.fr>.

2017-09-16  Mark Oteiza  <mvoteiza@udel.edu>

	Add lcms-temp->white-point and initial tests

	* src/lcms.c (lcms-temp->white-point): New function.
	* test/src/lcms-tests.el: New file.

2017-09-16  Mark Oteiza  <mvoteiza@udel.edu>

	Use cl-print in timer list

	* lisp/emacs-lisp/timer-list.el (timer-list): Use cl-print
	for handling functions.
	(timer-list-mode): Capitalize major mode name.  Set bidi direction
	as in tabulated-list-mode.

2017-09-15  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Make landscape layout with geometry package rather than a PostScript special.

	* lisp/calendar/cal-tex.el (cal-tex-preamble): Make 12pt the
	default class option.
	(cal-tex-year, cal-tex-cursor-month-landscape): Pass landscape
	request to `cal-tex-insert-preamble' function call within the
	class option string.
	(cal-tex-cursor-month): Don't pass any longer "12pt" argument
	to `cal-tex-insert-preamble' function, as it is default.
	(cal-tex-insert-preamble): Suppress landscape and size
	argument, and replace them by a class-options string
	argument. Do not insert any longer "\special{landscape}" in
	case of landscape layout, as the job is made by the geometry
	package.

2017-09-15  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/json.el (json-read-keyword): Revert previous change to catch EOL.

2017-09-15  Eli Zaretskii  <eliz@gnu.org>

	One more attempt to avoid GCC 7 warnings in dispnew.c

	* src/dispnew.c (adjust_glyph_matrix): Use eassume instead of
	eassert, to avoid compilation warnings about NULL pointer
	dereferences.

2017-09-15  Mark Oteiza  <mvoteiza@udel.edu>

	Fix color-distance docstring

	Also feed the translated color to the metric argument.
	* src/xfaces.c (color-distance): Reword docstring to be more helpful.
	Avoid duplicating effort in lcms2 by passing the translated 16 bit RGB
	instead of the function's color arguments.

2017-09-15  Michael Albinus  <michael.albinus@gmx.de>

	Improve Tramp behavior according to bug#27986

	* lisp/net/tramp-adb.el (tramp-adb-handle-copy-file):
	* lisp/net/tramp-sh.el (tramp-sh-handle-copy-directory):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-copy-file): Check, that NEWNAME is a
	directory name when existing.  Use `file-name-as-directory'
	where appropriate.

2017-09-15  Mark Oteiza  <mvoteiza@udel.edu>

	More JSON optimization

	Last I checked, inlining json-skip-whitespace didn't make much
	difference.  However, changing defsubsts to define-inline results
	in roughly 15% reduction in read time on a 200K file.
	* lisp/json.el (json-advance, json-peek, json-pop):
	(json-skip-whitespace): Inline with define-inline.
	(json-read-keyword): Don't use whitespace syntax.
	(json-add-to-object): Simpler condition.

2017-09-15  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes due to invalid error forms from sentinels/filters

	* src/process.c (exec_sentinel_error_handler): Make sure the error
	form passed to cmd_error_internal is a cons cell.  (Bug#28430)

2017-09-15  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warnings with GCC 7 on MS-Windows

	* src/w32term.c (w32_setup_relief_color, construct_mouse_click)
	(w32_read_socket): Initialize variables to shut up bogus
	compilation warnings from GCC 7.
	* src/unexw32.c (COPY_CHUNK, COPY_PROC_CHUNK): Cast to DWORD_PTR
	to avoid compiler warnings about printing signed values using %x
	format spec.
	* src/dispnew.c (adjust_glyph_matrix): Add eassert to avoid
	compiler warning about possible NULL pointer dereference.
	* src/lisp.h (pI): Tweak the definition some more for MinGW64.

2017-09-15  Martin Rudalics  <rudalics@gmx.at>

	Define gnutls_rnd for WINDOWSNT and HAVE_GNUTLS3 case only

	* src/fns.c (gnutls_rnd): Define for WINDOWSNT and HAVE_GNUTLS3
	case only to avoid unused macros warning otherwise.

2017-09-15  Martin Rudalics  <rudalics@gmx.at>

	In w32heap.c bump up DUMPED_HEAP_SIZE

	* src/w32heap.c (DUMPED_HEAP_SIZE): Bump up DUMPED_HEAP_SIZE
	to 13*1024*1024 for 32-bit non-wide-integer builds.

2017-09-15  Mark Oteiza  <mvoteiza@udel.edu>

	Bind n,p in timer-list

	* lisp/emacs-lisp/timer-list.el (timer-list-mode-map): Bind n and p
	to next- and previous-line, respectively.

2017-09-14  Glenn Morris  <rgm@gnu.org>

	* lisp/net/tls.el (tls-program): Fix :version.

2017-09-14  Eli Zaretskii  <eliz@gnu.org>

	* configure.ac (--with-lcms2, --without-lcms2): New options.

2017-09-14  Eli Zaretskii  <eliz@gnu.org>

	Avoid 64-bit compilation warnings in unexw32.c

	* src/unexw32.c (pDWP): New macro.
	(COPY_CHUNK, COPY_PROC_CHUNK): Declare 'count' as DWORD_PTR.  Use
	pDWP for printing values that can be either 32-bit or 64-bit wide.

2017-09-14  Eli Zaretskii  <eliz@gnu.org>

	Fix warnings about formats in printf-like functions on MS-Windows

	* src/lisp.h (pI) [__MINGW32__]: Provide definition that will
	hopefully DTRT with both MinGW64 and mingw.org's MinGW.  See
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00171.html
	for the details.
	* src/conf_post.h (PRINTF_ARCHETYPE) [MINGW_W64]: Separate
	definition specific to MinGW64.
	(PRINTF_ARCHETYPE) [__MINGW32__]: For mingw.org's MinGW, use
	__mingw_printf__ in ANSI-compatible mode.

2017-09-14  Eli Zaretskii  <eliz@gnu.org>

	Support lcms2 in MS-Windows builds

	* lisp/term/w32-win.el (dynamic-library-alist): Include
	association for the lcms2 library.

	* src/lcms.c [WINDOWSNT]: Include windows.h and w32.h.  Use
	DEF_DLL_FN to define pointers to dynamically loaded lcms2
	functions.
	(cmsCIE2000DeltaE, cmsCIECAM02Init, cmsCIECAM02Forward)
	(cmsCIECAM02Done): New macros.
	(init_lcms_functions, Flcms2_available_p): New functions.
	(Flcms_cie_de2000, Flcms_cam02_ucs) [WINDOWSNT]: Call
	init_lcms_functions.
	(syms_of_lcms2): Defsubr lcms2-available-p.
	* src/w32fns.c (syms_of_w32fns): DEFSYM Qlcms2.

	* configure.ac: Include lcms2 in the final report and in
	emacs_config_features.

	* nt/INSTALL:
	* nt/INSTALL.W64: Update with the information about lcms2 library.

2017-09-14  Paul Eggert  <eggert@cs.ucla.edu>

	Port renameat_noreplace to openSUSE 12.3

	Problem reported by M. Nomiya in:
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00363.html
	* src/sysdep.c (renameat_noreplace):
	Call renameat2 only if CYGWIN.

2017-09-14  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer HTTPS to FTP and HTTP in documentation

	Most of this change is to boilerplate commentary such as license URLs.
	This change was prompted by ftp://ftp.gnu.org's going-away party,
	planned for November.  Change these FTP URLs to https://ftp.gnu.org
	instead.  Make similar changes for URLs to other organizations moving
	away from FTP.  Also, change HTTP to HTTPS for URLs to gnu.org and
	fsf.org when this works, as this will further help defend against
	man-in-the-middle attacks (for this part I omitted the MS-DOS and
	MS-Windows sources and the test tarballs to keep the workload down).
	HTTPS is not fully working to lists.gnu.org so I left those URLs alone
	for now.

2017-09-14  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer HTTPS to HTTP for gnu.org

	This patch just changes code files; a followup companion patch
	(much larger) will affect the commentary.  This part is
	separated out to make it easier to review.
	* .dir-locals.el (change-log-mode):
	* lisp/org/org-info.el (org-info-other-documents)
	(org-info-map-html-url):
	* lisp/org/ox-html.el (org-html-creator-string):
	* lisp/startup.el (fancy-startup-text, fancy-about-text)
	(fancy-splash-head):
	* test/lisp/ffap-tests.el (ffap-other-window--bug-25352):
	* test/lisp/thingatpt-tests.el (thing-at-point-test-data):
	Use HTTPS instead of HTTP.

2017-09-13  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for color.el

	* lisp/color.el (color-name-to-rgb, color-complement): Clarify in
	docstrings that RGB triplets should use four digits per component.
	(color-rgb-to-hsl): Break line to avoid "Hidden behind deeper element"
	warning.

	* test/lisp/color-tests.el: New file.

2017-09-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Make gnutls-verify-error work again with url-retrieve-synchronously

	* lisp/url/url-gw.el (url-open-stream): Only use :nowait if
	we're doing async connections (bug#26835).

	* lisp/url/url-parse.el (url): Add an asynchronous slot.

	* lisp/url/url.el (url-asynchronous): New variable.
	(url-retrieve-internal): Store the value.
	(url-retrieve-synchronously): Bind the variable.

2017-09-13  Michael Albinus  <michael.albinus@gmx.de>

	Improve backward compatibility of tramp-tests

	* test/lisp/net/tramp-tests.el (seq): Don't require.
	(tramp--test-emacs26-p): New defun.
	(tramp-test10-write-region, tramp-test11-copy-file)
	(tramp-test12-rename-file, tramp-test15-copy-directory)
	(tramp-test21-file-links): Use it.
	(tramp-test16-file-expand-wildcards): Use `copy-sequence'.

2017-09-13  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/trampver.el (customize-package-emacs-version-alist):

	Add Tramp version integrated in Emacs 25.3.

2017-09-13  Mark Oteiza  <mvoteiza@udel.edu>

	Add clarification to if-let* docstring

	Also make its behavior consistent with and-let* in that empty bindings
	results in success, not failure.
	* lisp/emacs-lisp/subr-x.el: Edit docstring, change else to then.

2017-09-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Make fully qualified domain names more fully qualified

	* lisp/gnus/message.el (message-make-fqdn): Don't try to use a
	system-name without any periods as a fully qualified domain name.

2017-09-13  Paul Eggert  <eggert@cs.ucla.edu>

	Remove unused file lib/getopt_.h

	* lib/getopt_.h: Remove.  It was renamed to lib/getopt.in.h etc.
	on 2011-01-08, but I forgot to remove the old file.

2017-09-13  Mark Oteiza  <mvoteiza@udel.edu>

	Remove "baroque" use of prefix argument from gensym

	'cl-gensym' was simply moved here, but let us take an opportunity to
	shed some historical baggage.
	* lisp/subr.el (gensym): Remove special treatment of PREFIX as a
	number.  Use "g" as prefix to differentiate from cl-gensym defaults.
	* doc/lispref/symbols.texi (Creating Symbols): Update accordingly.
	* lisp/emacs-lisp/cl-macs.el (cl--gensym-counter, cl-gensym): Restore.

2017-09-13  Mark Oteiza  <mvoteiza@udel.edu>

	Provide an lcms2 feature

	* src/lcms.c (syms_of_lcms2): Provide "lcms2".

2017-09-13  Mark Oteiza  <mvoteiza@udel.edu>

	Add lcms2 interface

	configure.ac: Add boilerplate for configuring and detecting liblcms2.
	etc/NEWS: Mention new configure option and color-distance change.
	src/Makefile.in: Add references to lcms.c and liblcms.
	src/emacs.c: Define lcms2 symbols.
	src/lcms.c: New file.
	src/lisp.h: Add declaration for lcms2.
	src/xfaces.c: Add optional METRIC argument.

2017-09-13  Mark Oteiza  <mvoteiza@udel.edu>

	Add other D series white points and some simple conversions

	* lisp/color.el (color-d75-xyz, color-d55-xyz, color-d50-xyz): New
	constants.
	(color-xyz-to-xyy, color-xyy-to-xyz, color-lab-to-lch):
	(color-lch-to-lab): New functions.

2017-09-13  Mark Oteiza  <mvoteiza@udel.edu>

	Permit non-integral color gradients

	* lisp/color.el (color-gradient): Float the step-number.

2017-09-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	Protect against malformed MIME messages that cause inf-loop (bugfix)

	* lisp/gnus/gnus-art.el (gnus-article-mime-handles):
	Protect against malformed MIME messages that cause inf-loop.

2017-09-13  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from Gnulib

	This incorporates:
	2017-09-13 all: prefer https: URLs
	This just changes http: to https: in comments,
	in files copied from Gnulib.

2017-09-13  Dmitry Gutov  <dgutov@yandex.ru>

	Call vc-resynch-buffer in vc-git-resolve-when-done

	* lisp/vc/vc-git.el (vc-git-resolve-when-done):
	Call vc-resynch-buffer on the current file (bug#28121).
	Move its autoload to before this function.

2017-09-13  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Allow write-contents-functions to short-circuit buffer save

	Bug#28412

	* lisp/files.el (basic-save-buffer): Re-arrange function so that
	  write-contents-functions are run earlier. If they return non-nil,
	  consider the buffer saved without requiring the buffer to be
	  visiting a file.
	  (save-some-buffers): This function should consider any buffer with a
	  buffer-local value for write-contents-functions eligible for
	  saving.
	* test/lisp/files-tests.el (files-test-no-file-write-contents): New
	  test.
	* doc/lispref/files.texi (Saving Buffers): Mention in docs.
	* etc/NEWS: And in NEWS.

2017-09-12  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/NEWS.25: Copy from emacs-25 etc/NEWS.

2017-09-12  Paul Eggert  <eggert@cs.ucla.edu>

	Less chatter for ’make info/dir’

	* Makefile.in (${srcdir}/info/dir): Tweak shell command so
	that an ordinary make says just "GEN info/dir" rather than
	also having a seemingly-unrelated mv line.

2017-09-12  Paul Eggert  <eggert@cs.ucla.edu>

	Tweak Gnus doc re gnus-copy-file

	* doc/misc/gnus.texi (Saving Articles):
	Document behavior with directory name targets (Bug#27986).
	Problem reported by Katsumi Yamaoka in:
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00216.html

2017-09-12  Mark Oteiza  <mvoteiza@udel.edu>

	Update uses of if-let and when-let

	* lisp/dom.el (dom-previous-sibling):
	* lisp/emacs-lisp/package.el (package--with-work-buffer):
	(package--sort-deps-in-alist, package--sort-by-dependence):
	(package-install-from-archive, package-install):
	(package-menu-execute, package-menu--populate-new-package-list):
	* lisp/filenotify.el (file-notify--rm-descriptor):
	(file-notify--event-watched-file, file-notify--event-file-name):
	(file-notify--event-file1-name, file-notify-rm-watch):
	(file-notify-valid-p):
	* lisp/gnus/message.el (message-toggle-image-thumbnails):
	* lisp/gnus/nnimap.el (nnimap-request-move-article):
	* lisp/ibuf-ext.el (ibuffer-repair-saved-filters):
	* lisp/mpc.el (mpc-format):
	* lisp/net/eww.el (eww-tag-meta, eww-process-text-input):
	(eww-save-history):
	* lisp/net/shr.el (shr-tag-base, shr-tag-object, shr-make-table-1):
	* lisp/progmodes/prog-mode.el (prettify-symbols--post-command-hook):
	* lisp/svg.el (svg-remove):
	* lisp/textmodes/css-mode.el (css--named-color):
	(css--colon-inside-funcall):
	* lisp/textmodes/sgml-mode.el (html-current-buffer-classes):
	(html-current-buffer-ids): Use if-let* and when-let* instead.

2017-09-12  Mark Oteiza  <mvoteiza@udel.edu>

	Implement and-let*

	This also includes changes to if-let and when-let.  The single tuple
	special case is ambiguous, and binding a symbol to nil is not as
	useful as binding it to its value outside the lexical scope of the
	binding.  (Bug#28254)
	* etc/NEWS: Mention.
	* lisp/emacs-lisp/subr-x.el (internal--listify):
	(internal--build-binding-value-form): Extend to account for
	solitary symbols and (EXPR) items in binding varlist.
	(if-let*, when-let*): Nix single tuple case and incumbent
	bind-symbol-to-nil behavior.
	(and-let*): New macro.
	(if-let, when-let): Mark obsolete.  Redefine in terms of if-let*, so
	they implicitly gain the new features without breaking existing code.
	* test/lisp/emacs-lisp/subr-x-tests.el: Adjust tests for: lack of
	single-tuple special case, lack of binding solitary symbols to nil,
	and the introduction of uninterned symbols for (EXPR) bindings.  Add
	SRFI-2 test suite adapted to Elisp.

2017-09-12  Eli Zaretskii  <eliz@gnu.org>

	Fix minor typos in the Emacs manual

	* doc/emacs/text.texi (Org Organizer):
	* doc/emacs/ack.texi (Acknowledgments): Fix spelling of Org nodes.

2017-09-12  Paul Eggert  <eggert@cs.ucla.edu>

	Merge Emacs 25.3 fixes

	The security patches released for Emacs 25.3 were less drastic
	than what we had immediately put into master.  Adjust master to
	match 25.3 (Bug#28350).
	* lisp/textmodes/enriched.el (enriched-translations):
	Re-enable FUNCTION and display translations that are safe.
	(enriched-handle-display-prop): Bring back.
	(enriched-decode-display-prop): Bring back, but disable
	the unsafe part.

2017-09-12  Alan Mackenzie  <acm@muc.de>

	Don't match C++ template delims starting within a token.  FIxes bug #28418.

	* lisp/progmodes/cc-engine.el (c-restore-<>-properties): After failing an
	attempted match from the start of a token (in particular, "<<"), move to the
	next token rather than the nex character before searching for the next "<".

2017-09-12  Mark Oteiza  <mvoteiza@udel.edu>

	Move gensym to core Elisp

	* doc/lispref/symbols.texi (Creating Symbols): Mention gensym right
	after make-symbol.
	* etc/NEWS: Mention.
	* lisp/emacs-lisp/cl-macs.el (cl--gensym-counter): Alias to
	gensym-counter.
	(cl-gensym): Alias to gensym.
	* lisp/emacs-lisp/cl.el: Remove gensym from list of aliases.
	* lisp/emacs-lisp/edebug.el (edebug-make-enter-wrapper):
	* lisp/emacs-lisp/ert-x.el (ert-with-message-capture):
	(ert--expand-should-1, ert--expand-should):
	(ert--should-error-handle-error):
	* lisp/emacs-lisp/generator.el (cps--gensym):
	* lisp/emacs-lisp/gv.el (setf):
	* lisp/emacs-lisp/inline.el (inline--do-letlisteval):
	* lisp/emacs-lisp/pcase.el (pcase--make-docstring, pcase-dolist):
	(pcase--funcall, pcase--u1): Use gensym.
	* lisp/subr.el (gensym-counter): New variable.
	(gensym): New function, assimilated from cl-lib.

2017-09-12  Mark Oteiza  <mvoteiza@udel.edu>

	Fix cl-gentemp

	* lisp/emacs-lisp/cl-macs.el (cl--gentemp-counter): New variable.
	(cl-gentemp): Use it.  Change prefix to "T".

2017-09-12  Sam Steingold  <sds@gnu.org>

	gnus-score-file-name: Do not append empty suffix.

2017-09-12  Michael Albinus  <michael.albinus@gmx.de>

	Extend tramp-tests according to bug#27986

	* test/lisp/net/tramp-tests.el (tramp-test11-copy-file)
	(tramp-test12-rename-file, tramp-test15-copy-directory)
	(tramp-test21-file-links): Extend tests.
	(tramp-test13-make-directory, tramp-test14-delete-directory):
	Specifiy error symbol in `should-error'.

2017-09-12  Mark Oteiza  <mvoteiza@udel.edu>

	Add cl-print method for hash tables

	* lisp/emacs-lisp/cl-print.el (cl-print-object): New method.

2017-09-12  Mark Oteiza  <mvoteiza@udel.edu>

	Add docstrings to cl-print entry points

	* lisp/emacs-lisp/cl-print.el (cl-print-compiled): Fix docstring.
	(cl-prin1, cl-prin1-to-string): Add docstrings.

2017-09-12  Glenn Morris  <rgm@gnu.org>

	Improve reproducibility of generated leim-list.el

	* lisp/international/quail.el (quail-update-leim-list-file):
	Sort the quail directory listing, for more stable output.

2017-09-11  Mark Oteiza  <mvoteiza@udel.edu>

	Include sxhash of object with printed bytecode

	This printing, while succint, is rather opaque.  At least give an
	immediate clue of whether different byte code printouts are for the
	same or different byte code objects.
	* lisp/emacs-lisp/cl-print.el (cl-print-object): Add object sxhash to
	printed token "#<bytecode>".

2017-09-11  Eli Zaretskii  <eliz@gnu.org>

	Update documentation of 'max-lisp-eval-depth'

	* doc/lispref/eval.texi (Eval): Update the documented default
	value of 'max-lisp-eval-depth'.

2017-09-11  Eli Zaretskii  <eliz@gnu.org>

	Another place to produce debugging output in etags

	* lib-src/etags.c (Ruby_functions): One more place to print
	debugging output under --debug.

2017-09-11  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of etags-related features

	* doc/emacs/maintaining.texi (Looking Up Identifiers): Document
	'xref-prompt-for-identifier'.  (Bug#28403)
	(Etags Regexps): Document \D back references in etags regexps.

2017-09-11  Alan Third  <alan@idiocy.org>

	Fix macOS compatibility versions for vibrant dark theme (bug#28415)

	* src/nsterm.m (ns_set_appearance, EmacsView::initFrameFromEmacs):
	Change macOS compatibility from 10.9 to 10.10.

2017-09-11  Michael Albinus  <michael.albinus@gmx.de>

	Further optimization in Tramp's file name decomposition

	* lisp/net/tramp.el (tramp-syntax): Recompute all file name
	components.  Call `custom-set-variables' after loading.
	(tramp-build-prefix-format, tramp-build-prefix-regexp)
	(tramp-build-method-regexp)
	(tramp-build-postfix-method-format)
	(tramp-build-postfix-method-regexp)
	(tramp-build-prefix-ipv6-format)
	(tramp-build-prefix-ipv6-regexp)
	(tramp-build-postfix-ipv6-format)
	(tramp-build-postfix-ipv6-regexp)
	(tramp-build-postfix-host-format)
	(tramp-build-postfix-host-regexp)
	(tramp-build-file-name-regexp)
	(tramp-build-completion-file-name-regexp): New defuns.
	(tramp-prefix-format, tramp-prefix-regexp)
	(tramp-method-regexp, tramp-postfix-method-format)
	(tramp-postfix-method-regexp, tramp-prefix-ipv6-format)
	(tramp-prefix-ipv6-regexp, tramp-postfix-ipv6-format)
	(tramp-postfix-ipv6-regexp, tramp-postfix-host-format)
	(tramp-postfix-host-regexp)
	(tramp-remote-file-name-spec-regexp)
	(tramp-file-name-structure, tramp-file-name-regexp)
	(tramp-completion-file-name-regexp): Convert defuns into defvars.
	(tramp-prefix-regexp-alist)
	(tramp-postfix-method-regexp-alist)
	(tramp-prefix-ipv6-regexp-alist)
	(tramp-postfix-ipv6-regexp-alist)
	(tramp-postfix-host-regexp-alist)
	(tramp-remote-file-name-spec-regexp-alist): Remove.
	(tramp-build-remote-file-name-spec-regexp)
	(tramp-build-file-name-structure): Simplify.
	(tramp-completion-file-name-regexp-alist): New defconst.
	(tramp-tramp-file-p, tramp-dissect-file-name)
	(tramp-make-tramp-file-name)
	(tramp-completion-make-tramp-file-name)
	(tramp-rfn-eshadow-update-overlay-regexp)
	(tramp-register-file-name-handlers)
	(tramp-completion-handle-file-name-all-completions)
	(tramp-completion-dissect-file-name, tramp-clear-passwd):
	* lisp/net/tramp-ftp.el (tramp-ftp-file-name-handler):
	* lisp/net/tramp-sh.el (tramp-sh-handle-vc-registered)
	(tramp-compute-multi-hops): Use variables but functions for
	file name components.

	* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
	Use variables but functions for file name components.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Port tramp-tests to new copy-directory behavior

	* test/lisp/net/tramp-tests.el (tramp-test15-copy-directory):
	Use directory name as arg for copy-directory when we want
	the special behavior.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Adjust thumbs to new rename-file behavior

	* etc/NEWS: Mention this.
	* lisp/thumbs.el (thumbs-rename-images): Treat the destination
	as special only if it is a directory name.  When there is
	a marked list, turn the destination into a directory name
	if it is not already.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Adjust ob-tangle to new copy-file behavior

	* lisp/org/ob-tangle.el (org-babel-tangle-publish):
	Port to new copy-file behavior.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Make gnus-copy-file act like copy-file etc.

	* etc/NEWS: Mention this.
	* lisp/gnus/gnus-util.el (gnus-copy-file): Treat the destination
	as special only if it is a directory name.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Make write-file act like copy-file etc.

	Change write-file to be consistent with the new behavior
	of copy-file, etc.
	* etc/NEWS: Mention this.
	* lisp/files.el (write-file): Treat the destination as special
	only if it is a directory name.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Make copy-directory act like copy-file etc.

	Do the special dance with the destination only if it is a
	directory name, for consistency with copy-file etc. (Bug#27986).
	* doc/emacs/files.texi (Copying and Naming):
	* doc/lispref/files.texi (Create/Delete Dirs):
	* etc/NEWS: Document this.
	* lisp/files.el (copy-directory): Treat NEWNAME as special
	only if it is a directory name.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Fix some make-directory bugs

	* lisp/files.el (files--ensure-directory): New function.
	(make-directory): Use it to avoid bugs when (make-directory FOO t)
	is invoked on a non-directory, or on a directory hierarchy that
	is being built by some other process while Emacs is running.
	* test/lisp/files-tests.el (files-tests--make-directory): New test.

2017-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Fix race with rename-file etc. with dir NEWNAME

	This changes the behavior of rename-file etc. slightly.
	The old behavior mostly disagreed with the documentation, and had
	a race condition bug that could allow attackers to modify victims'
	write-protected directories (Bug#27986).
	* doc/lispref/files.texi (Changing Files): Document that in
	rename-file etc., NEWFILE is special if it is a directory name.
	* etc/NEWS: Document the change in behavior.
	* src/fileio.c (directory_like): Remove.  All uses removed.
	(expand_cp_target): Test only whether NEWNAME is a directory name,
	not whether it is currently a directory.  This avoids a race.
	(Fcopy_file, Frename_file, Fadd_name_to_file, Fmake_symbolic_link):
	Document behavior if NEWNAME is a directory name.
	(Frename_file): Simplify now that the destdir behavior occurs
	only when NEWNAME is a directory name.
	* test/lisp/net/tramp-tests.el (tramp-test11-copy-file)
	(tramp-test12-rename-file, tramp--test-check-files):
	Adjust tests to match new behavior.

2017-09-10  Eli Zaretskii  <eliz@gnu.org>

	Extend --debug printouts in etags

	* lib-src/etags.c (regex_tag_multiline, readline): Under
	"--debug", print tags found via regexps.

2017-09-10  Eli Zaretskii  <eliz@gnu.org>

	Add --debug option to etags

	* lib-src/etags.c (make_tag): Print found tags under --debug.
	(longopts): Add --debug.

2017-09-10  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

	* lisp/progmodes/cc-langs.el:
	(c-ambiguous-overloadable-or-identifier-prefixes): Rename from
	c-ambiguous-overloadable-or-identifier-prefices.  Caller changed.

2017-09-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-09-08 stddef: Avoid conflict with system-defined max_align_t
	2017-08-24 warnings: fix compilation with old autoconf
	2017-08-23 glob: merge from glibc with Zanella glob changes
	2017-08-17 random: Fix test compilation failure on Cygwin 1.5.25
	* doc/misc/texinfo.tex, lib/flexmember.h, lib/stddef.in.h:
	* lib/stdlib.in.h, m4/manywarnings.m4, m4/stdlib_h.m4:
	* m4/warnings.m4:
	Copy from Gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-09-10  Ken Brown  <kbrown@cornell.edu>

	Implement renameat_noreplace on recent Cygwin

	* src/sysdep.c [CYGWIN]: Include cygwin/fs.h.
	(renameat_noreplace) [RENAME_NOREPLACE]: Use renameat2.
	(Bug#27986)

2017-09-10  Eli Zaretskii  <eliz@gnu.org>

	Avoid warnings about file names in autoloads on MS-Windows

	* configure.ac (srcdir) [mingw32]: Downcase the drive letter, to
	avoid warnings from find-file-noselect when making autoloads.  For
	the details, see
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00049.html.

2017-09-10  Mark Oteiza  <mvoteiza@udel.edu>

	Avoid looking at localized strings

	* lisp/xdg.el (xdg-desktop-read-group): Add condition to catch
	localized strings.
	* test/lisp/xdg-tests.el (xdg-desktop-parsing): Add test to ensure
	parsing l10n strings doesn't error but is essentially a no-op.

2017-09-10  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/NEWS.25: Document 25.3 changes.

2017-09-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove unsafe enriched mode translations

	* lisp/gnus/mm-view.el (mm-inline-text):
	Do not worry about enriched or richtext type.
	* lisp/textmodes/enriched.el (enriched-translations):
	Remove translations for FUNCTION, display (Bug#28350).
	(enriched-handle-display-prop, enriched-decode-display-prop): Remove.

2017-09-09  Paul Eggert  <eggert@cs.ucla.edu>

	Be more consistent about "directory name" in manual

	This clarifies the documentation, partly in response to the
	discussion in Bug#27986.

2017-09-09  Eli Zaretskii  <eliz@gnu.org>

	Remove more compilation warnings in MinGW64 build

	* src/w32.c (faccessat, map_w32_filename):
	* src/w32fns.c (w32_wnd_proc):
	* src/w32term.c (w32_horizontal_scroll_bar_handle_click)
	(w32_scroll_bar_handle_click): Use FALLTHROUGH to avoid compiler
	warnings with GCC 7 and later.

2017-09-09  Paul Eggert  <eggert@cs.ucla.edu>

	Improve --enable-gcc-warnings for MinGW64

	This partially reverts my 2016-05-30 patch.  Apparently MinGW64
	still requires pacifications that GCC 7.1.1 x86-64 (Fedora 26)
	does not.  Also, pacify tparam.c, which isn’t used on Fedora.
	* lib-src/etags.c (process_file_name, TeX_commands):
	* src/buffer.c (fix_overlays_before):
	* src/data.c (Fmake_variable_buffer_local, cons_to_unsigned)
	(cons_to_signed):
	* src/editfns.c (Ftranslate_region_internal):
	Prefer UNINIT to some stray value, as this simplifies
	code-reading later.
	* src/eval.c (CACHEABLE): New macro.
	(internal_lisp_condition_case): Use it.
	* src/tparam.c (tparam1): Use FALLTHROUGH to pacify GCC.

2017-09-09  Eli Zaretskii  <eliz@gnu.org>

	Fix font-lock in Compilation mode

	* lisp/progmodes/compile.el (compilation-face): Restore function
	lost during recent changes.  (Bug#28349)

2017-09-09  Mark Oteiza  <mvoteiza@udel.edu>

	Add function to read all entries in a group

	Use that to extend xdg-desktop-read-file.  Also fix a bug where all
	entries in all groups were read and returned by xdg-desktop-read-file.
	* lisp/xdg.el (xdg-desktop-read-group): New function.
	(xdg-desktop-read-file): Use it.
	* test/data/xdg/malformed.desktop: New file.
	* test/data/xdg/test.desktop: Add another section.
	* test/lisp/xdg-tests.el (xdg-desktop-parsing): Test presence of a key
	in another group.  Test reading a prescribed group.  Test detecting a
	malformed key=value.

2017-09-09  Gemini Lasswell  <gazally@runbox.com>

	Reduce Tramp's memory usage

	Construct Tramp syntax strings and regular expressions once instead
	of every time they are used, and store them in alists keyed by Tramp
	syntax.
	* lisp/net/tramp.el (tramp-build-remote-file-name-spec-regexp)
	(tramp-build-file-name-structure): New functions.
	(tramp-prefix-format-alist, tramp-prefix-regexp-alist)
	(tramp-method-regexp-alist)
	(tramp-postfix-method-format-alist)
	(tramp-postfix-method-regexp-alist)
	(tramp-prefix-ipv6-format-alist, tramp-prefix-ipv6-regexp-alist)
	(tramp-postfix-ipv6-format-alist)
	(tramp-postfix-ipv6-regexp-alist)
	(tramp-postfix-host-format-alist)
	(tramp-postfix-host-regexp-alist)
	(tramp-remote-file-name-spec-regexp-alist)
	(tramp-file-name-structure-alist): New constants.
	(tramp-lookup-syntax): New function.
	(tramp-prefix-format, tramp-prefix-regexp, tramp-method-regexp)
	(tramp-postfix-method-format, tramp-postfix-method-regexp)
	(tramp-prefix-ipv6-format, tramp-prefix-ipv6-regexp)
	(tramp-postfix-ipv6-format, tramp-postfix-ipv6-regexp)
	(tramp-postfix-host-format, tramp-postfix-host-regexp)
	(tramp-remote-file-name-spec-regexp, tramp-file-name-structure):
	Use it.

2017-09-09  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation warnings in MinGW64 build using GCC 7

	Reported by Richard Copley <rcopley@gmail.com>.
	* src/w32heap.c (init_heap): Declare enable_lfh only for
	mingw.org's MinGW build.

	* src/w32console.c (w32con_write_glyphs):
	* src/unexw32.c (get_section_info, COPY_CHUNK, unexec): Fix some
	mismatches of data type vs format spec.

	* src/w32fns.c (compute_tip_xy):
	* src/w32proc.c (stop_timer_thread):
	* src/w32notify.c (remove_watch):
	* src/eval.c (internal_lisp_condition_case):
	* src/editfns.c (Ftranslate_region_internal):
	* src/data.c (Fmake_variable_buffer_local, cons_to_unsigned)
	(cons_to_signed):
	* src/buffer.c (fix_overlays_before): Initialize variables to
	avoid compiler warnings.

	* lib-src/etags.c (TeX_commands, process_file_name): Initialize
	variables to avoid compilation warnings.

2017-09-09  Eli Zaretskii  <eliz@gnu.org>

	Avoid infloop when scrolling under scroll-preserve-screen-position

	* src/window.c (window_scroll_pixel_based): If screen position is
	to be preserved, make sure its recorded Y coordinate is outside
	the scroll margin.  (Bug#28342)

2017-09-09  Michael Albinus  <michael.albinus@gmx.de>

	Clarification in tramp-texi

	* doc/misc/tramp.texi (Connection caching): Two connections are
	regarded as different now when they differ in the port number only.

2017-09-09  Miles Bader  <miles@gnu.org>

	* admin/quick-install-emacs: Tweak configure.ac parsing

2017-09-09  Miles Bader  <miles@gnu.org>

	Use text-property buttons in rcirc-markup-urls

	* lisp/net/rcirc.el (rcirc-markup-urls): Use `make-text-button'
	instead of `make-button'; the former is much more efficient in large
	buffers, and for the purposes of rcirc, changes no functionality.

2017-09-08  Eli Zaretskii  <eliz@gnu.org>

	Fix line-pixel-height for lines of variable height

	* src/xdisp.c (Fline_pixel_height): Start moving from the
	beginning of the screen line, to capture the full metrics of the
	line.  (Bug#28391)

2017-09-08  Alex Branham  <branham@utexas.edu>  (tiny change)

	New variable 'dired-confirm-killing-deleted-buffers'

	* lisp/dired-x.el (dired-clean-confirm-killing-deleted-buffers):
	New variable.
	* lisp/dired.el (dired-clean-up-after-deletion): Kill buffers
	visiting deleted files without confirming if
	dired-clean-confirm-killing-deleted-buffers is nil.  (Bug#28373)
	* etc/NEWS: Document the change.

2017-09-08  Alfred M. Szmidt  <ams@gnu.org>  (tiny change)

	Support SVN files with svn:externals property

	* lisp/vc/vc-svn.el (vc-svn-parse-status): Don't ignore files
	marked with the svn:externals property.

2017-09-08  Alfred M. Szmidt  <ams@gnu.org>  (tiny change)

	List locally removed files in vc-dir with SVN back-end

	* lisp/vc/vc-svn.el (vc-svn-after-dir-status): List files marked
	with ?! as needs-update.

2017-09-08  Ken Olum  <kdo@cosmos.phy.tufts.edu>

	Fix Rmail editing with reapplying encoding to message body

	* lisp/mail/rmailedit.el (rmail-cease-edit):  If no
	content-type in edited headers, look for one in original
	headers and add it to edited headers.  (Bug #26918)
	Use a marker to track start of new body, so that
	content-transfer-encoding gets applied only to body.  (Bug #27353).
	Ensure blank line at end of message after encoding, not
	before.

2017-09-08  Eli Zaretskii  <eliz@gnu.org>

	Document last change in dired.el

	* etc/NEWS (Dired): Document the last change in dired.el.
	(Bug#27435)

2017-09-08  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Make mouse clicks in Dired more customizable

	* lisp/dired.el (dired-mouse-find-file): Allow callers to
	specify functions to visit file/directory.
	(dired-mouse-find-file-other-window)
	(dired-mouse-find-file-other-frame): New functions to visit
	files in another window/frame.  (Bug#27435)

2017-09-08  Eli Zaretskii  <eliz@gnu.org>

	Avoid compiler warnings on MS-Windows with GCC 6 and 7

	* src/w32font.c (SUBRANGE): Use unsigned arithmetic for
	bit-shifting, to avoid compiler warnings.
	(w32font_text_extents): Tell GCC NGLYPHS is non-negative, to avoid
	a warning.  For details of the warning, see
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00093.html.
	* src/term.c (keys) [WINDOWSNT]: Don't define, as it is not used
	in that build.
	* src/sound.c (sound_perror): Ifdef away on WINDOWSNT, as this
	function is not used in that build.

	* configure.ac: Disable -Wsuggest-attribute=format on MS-Windows.

2017-09-08  Eli Zaretskii  <eliz@gnu.org>

	Fix 'directory-file-name' on DOS_NT systems as well

	* src/fileio.c (directory_file_name) [DOS_NT]: Fix the DOS_NT case
	to be consistent with last change.

	* test/src/fileio-tests.el (fileio-tests--odd-symlink-chars):
	Disable on MS-Windows.
	(fileio-tests--directory-file-name-dos-nt)
	(fileio-tests--file-name-as-directory-dos-nt): New tests.

2017-09-08  Wilson Snyder  <wsnyder@wsnyder.org>

	Fix various verilog-mode.el issues.

	* lisp/progmodes/verilog-mode.el (verilog-expand-dirnames): Fix expanding
	"*/*", msg2284. Reported by Jonathan Ferguson.
	(ignore-errors): Fix ignore-errors error on Emacs 22.3, bug1177. Reported
	by Victor Lau.
	(verilog-getopt, verilog-getopt-file) (verilog-library-flags,
	verilog-substitute-file-name-path): Support -F in verilog getopt files,
	bug1171. Reported by George Cuan.
	(verilog-do-indent): Fix misindenting symbols starting with t,
	bug1169. Reported by Hoai Tran.
	(verilog-read-auto-template-middle): Fix slow template matching on
	AUTOINST. Reported by Jeffrey Huynh.
	(verilog-pretty-expr): The extra whitespace addition before "=" operators
	is now done only if the whole assignment block contains the 2-character
	"<=" operator.  Remove the unused argument _myre.  Use `unless',
	`save-excursion' and `when' functions where possible.  Internal variables
	refactored for clarity.  Follow elisp convention for closing parentheses.
	By Kaushal Modi.
	(verilog-get-lineup-indent-2): Update docstring.  Internal variables
	refactored for clarity.  Earlier EDPOS argument was expected to be a
	marker; it is now renamed to END and is now expected to be a position.
	Use `when' instead of `if'.  By Kaushal Modi.
	(electric-verilog-terminate-line): Remove the unused second argument from
	`verilog-pretty-expr' call.  By Kaushal Modi.
	(verilog-calc-1): Fix indentation of a virtual class definition after a
	typedef class, bug1080.  By Kaushal Modi.

2017-09-08  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't use summary window to visit group buffer (bugfix)

	* lisp/gnus/gnus-sum.el (gnus-summary-jump-to-group): Make sure that
	the window to open the group buffer doesn't visit the summary buffer.
	This fixes a bug: `gnus-summary-next-article' sometimes causes an error
	by trying to select nonexistent summary window.

2017-09-08  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug: (directory-file-name "///") returned "//"

	* src/fileio.c (directory_file_name): For "///" and longer,
	return "/", not "//", as per POSIX.
	* test/src/fileio-tests.el (fileio-tests--directory-file-name)
	(fileio-tests--file-name-as-directory): New tests.

2017-09-08  Paul Eggert  <eggert@cs.ucla.edu>

	Remove obsolete vc-mistrust-permissions doc

	* doc/emacs/vc1-xtra.texi (RCS and SCCS): Remove documentation
	for vc-mistrust-permissions, which no longer exists.

2017-09-07  Alan Third  <alan@idiocy.org>

	Set frame size to actual requested size (bug#18215)

	* src/nsterm.m (x_set_window_size): Don't use
	FRAME_TEXT_TO_PIXEL_WIDTH or FRAME_TEXT_TO_PIXEL_HEIGHT.

2017-09-07  Paul Eggert  <eggert@cs.ucla.edu>

	autogen.sh: omit bogus chatter if no .git

	Problem reported by Angelo Graziosi in:
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00045.html
	* autogen.sh (git_config): Do not execut 'git' if $do_git fails.

2017-09-07  Glenn Morris  <rgm@gnu.org>

	Skip emacsclient tests if --enable-profiling was used

	* test/lib-src/emacsclient-tests.el
	(emacsclient-test-call-emacsclient): Make it a macro.
	Handle "Profiling timer expired" return from emacsclient.  (Bug#28319)
	(emacsclient-test-alternate-editor-allows-arguments)
	(emacsclient-test-alternate-editor-allows-quotes): Update for above.

2017-09-06  Eli Zaretskii  <eliz@gnu.org>

	Fix a minor markup problem in ELisp manual

	* doc/lispref/functions.texi (Mapping Functions): Fix the order of
	@example and @group.  For the details, see
	https://lists.gnu.org/r/bug-texinfo/2017-09/msg00007.html.

2017-09-06  Mark Oteiza  <mvoteiza@udel.edu>

	Add XDG desktop file parsing and tests

	* lisp/xdg.el: Add support for Desktop Entry Specification.
	(xdg--user-dirs-parse-line): Check if file is readable.
	(xdg-desktop-group-regexp, xdg-desktop-entry-regexp): New variables.
	(xdg--desktop-parse-line, xdg-desktop-read-file, xdg-desktop-strings):
	New functions.
	* test/lisp/xdg-tests.el:
	* test/data/xdg/test.desktop:
	* test/data/xdg/wrong.desktop: New files.

2017-09-06  Glenn Morris  <rgm@gnu.org>

	Allow for adjusting line length of test backtraces

	* test/Makefile.in (TEST_BACKTRACE_LINE_LENGTH): New option.
	(%.log): Respect backtrace line length.

2017-09-06  Glenn Morris  <rgm@gnu.org>

	Allow customizing line length of ert backtraces in batch mode

	* lisp/emacs-lisp/ert.el (ert-batch-backtrace-right-margin):
	Make it a user option.
	(ert-run-tests-batch): Handle ert-batch-backtrace-right-margin nil.

2017-09-06  Glenn Morris  <rgm@gnu.org>

	Minor emacsclient-tests simplification

	* test/lib-src/emacsclient-tests.el (emacsclient-test-emacs):
	Simplify.  Also work when running installed.

2017-09-06  Alan Third  <alan@idiocy.org>

	Revert "Force screen update after drawing cursor glyph (bug#23774)"

	This reverts commit 1b492fa5456e2b6face8d0856f11d17e432693b0.

	See bug#28358

2017-09-05  Mark Oteiza  <mvoteiza@udel.edu>

	Refactor some loops in mailcap.el

	* lisp/net/mailcap.el (mailcap-mime-types):
	(mailcap-file-default-commands): Convert nested maps to loops.

2017-09-05  Glenn Morris  <rgm@gnu.org>

	emacsclient-tests: remove some debug statements

	* test/lib-src/emacsclient-tests.el
	(emacsclient-test-call-emacsclient): Remove debug statements.

2017-09-05  Simen Heggestøyl  <simenheg@gmail.com>

	Handle non-zero exit status from psql more gracefully

	* lisp/progmodes/sql.el (sql-postgres-list-databases): Handle non-zero
	exit statuses from `psql -ltX' more gracefully by returning nil.

	* test/lisp/progmodes/sql-tests.el
	(sql-tests-postgres-list-databases-error): New test.

2017-09-05  Eli Zaretskii  <eliz@gnu.org>

	Avoid losing Ctrl-C keystrokes in compilation mode on MS-Windows

	* src/w32proc.c (sys_kill): Preserve the up/down state of the
	Ctrl key across the simulated Ctrl-C keystroke.  (Bug#28348)

2017-09-05  Andreas Schwab  <schwab@linux-m68k.org>

	* src/image.c (Fimagemagick_types): Doc fix.

2017-09-05  Mark Oteiza  <mvoteiza@udel.edu>

	Move soundex.el test to a proper test

	* test/lisp/soundex-tests.el: New file.
	* lisp/soundex.el: Use lexical-binding.  Remove commented test.

2017-09-05  Mark Oteiza  <mvoteiza@udel.edu>

	Add tests for mailcap.el

	* test/data/mailcap/mime.types: New file.
	* test/lisp/net/mailcap-tests.el: New file.

2017-09-05  Michael Albinus  <michael.albinus@gmx.de>

	Doc precisment about remote link targets

	* doc/lispref/files.texi (Truenames): Explain handling of
	targets of `file-truename' and `make-symbolic-link', which
	look like a remote file name.

	* etc/NEWS: Precise examples for symlinks which look like
	remote file names.  MUSTBENEW of `write-region' is not
	propagated to file name handlers.

2017-09-05  John Wiegley  <johnw@newartisans.com>

	Remove an opinionated section on "What Eshell is not"

	I don't find this information to accurately reflect possible use cases
	for Eshell; plus, it doesn't offer much in the way of information,
	just opinion.

2017-09-05  Ken Brown  <kbrown@cornell.edu>

	Fix configure test for Xpm

	Problem reported by Ashish Shukla in
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00020.html.
	* configure.ac (HAVE_XPM) [HAVE_X11]: Include X11/xpm.h instead of
	noX/xpm.h in configure test.

2017-09-04  Paul Eggert  <eggert@cs.ucla.edu>

	Revert recent float→double Motif change

	Problem reported by Martin Rudalics in:
	https://lists.gnu.org/r/emacs-devel/2017-09/msg00014.html
	* src/xterm.c (xm_scroll_callback, xaw_jump_callback)
	(x_set_toolkit_scroll_bar_thumb)
	(x_set_toolkit_horizontal_scroll_bar_thumb):
	Go back to using ‘float’ temporaries rather than ‘double’.
	Although quite possibly this masks an underlying bug,
	we lack time to look into that now.

2017-09-04  Glenn Morris  <rgm@gnu.org>

	emacsclient-tests: add some debug statements

	* test/lib-src/emacsclient-tests.el
	(emacsclient-test-call-emacsclient): Add debug statements.

2017-09-04  Michael Albinus  <michael.albinus@gmx.de>

	Work on Tramp's (symbolic) links

	* doc/misc/tramp.texi (Traces and Profiles): Mention the
	backtrace when tramp-verbose is greater than or equal to 10.

	* lisp/net/tramp-adb.el (tramp-adb-file-name-handler-alist):
	Use `tramp-handle-add-name-to-file'.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist): Use
	`tramp-handle-add-name-to-file' and `tramp-handle-file-truename'.

	* lisp/net/tramp-sh.el (tramp-sh-handle-make-symbolic-link): Improve.

	* lisp/net/tramp-smb.el (tramp-smb-errors):
	Add "NT_STATUS_CONNECTION_DISCONNECTED" and
	"NT_STATUS_OBJECT_PATH_SYNTAX_BAD".
	(tramp-smb-file-name-handler-alist): Use `tramp-handle-file-truename'.
	(tramp-smb-do-file-attributes-with-stat): Return non-nil only
	if one of the attributes is non-nil.
	(tramp-smb-handle-file-local-copy): Use `file-truename'.
	(tramp-smb-handle-file-truename): Move to tramp.el.
	(tramp-smb-handle-insert-directory): Show symlinks.
	(tramp-smb-handle-make-symbolic-link): Improve.
	(tramp-smb-read-file-entry): Handle extended file modes in Samba.

	* lisp/net/tramp.el (tramp-handle-add-name-to-file)
	(tramp-handle-file-truename): New defuns.

	* test/lisp/net/tramp-tests.el (tramp-test21-file-links): Extend test.
	(tramp--test-check-files): Make check for "smb".

2017-09-04  Mark Oteiza  <mvoteiza@udel.edu>

	Embed JSON readtable into json-read

	Also unroll dispatch into a cond.
	* lisp/json.el (json-readtable): Remove.
	(json-readtable-dispatch): New macro.  Assimilate json-readtable.
	(json-read): Use the macro.

2017-09-04  Mark Oteiza  <mvoteiza@udel.edu>

	Hexify strings in EWW search queries

	Previously, inputting "cats & dogs" would lose dogs because the
	ampersand signifies a query parameter.  Instead, hexify each word while
	preserving quotes with split-string.
	* lisp/net/eww.el (eww--dwim-expand-url): Join hexified words together
	with + separators, instead of replacing whitespace with +.

2017-09-03  Glenn Morris  <rgm@gnu.org>

	emacsclient-tests: call-process may return non-integer

	* test/lib-src/emacsclient-tests.el
	(emacsclient-test-alternate-editor-allows-arguments)
	(emacsclient-test-alternate-editor-allows-quotes):
	Handle non-integer return from call-process.

2017-09-03  Eli Zaretskii  <eliz@gnu.org>

	* lisp/simple.el (visual-line-mode): Doc fix.  (Bug#28337)

2017-09-03  Alan Third  <alan@idiocy.org>

	Force screen update after drawing cursor glyph (bug#23774)

	* src/nsterm.m (ns_draw_window_cursor): Force a screen update after
	drawing the glyph over the cursor.

2017-09-03  Alan Mackenzie  <acm@muc.de>

	Correct the fontification of quote marks after buffer changes in CC Mode.

	* lisp/progmodes/cc-defs.el
	(c-search-forward-char-property-with-value-on-char): New macro.

	* lisp/progmodes/cc-mode.el (c-parse-quotes-before-change)
	(c-parse-quotes-after-change): Rewrite the functions, simplifying
	considerably, and removing unnecessary optimizations.
	Invalidate two caches after manipulating text properties.

2017-09-03  Alan Mackenzie  <acm@muc.de>

	Fix fontification of "operator~" in C++ Mode.

	* lisp/progmodes/cc-langs.el (c-ambiguous-overloadable-or-identifier-prefices)
	(c-ambiguous-overloadable-or-identifier-prefix-re): New c-lang-defconsts/vars.

	* lisp/progmodes/cc-engine.el (c-forward-name): Do not try to parse "~" (and
	two other symbols) as a cast without good evidence.  Prefer an overloaded
	operator in ambiguous cases.

2017-09-03  Martin Rudalics  <rudalics@gmx.at>

	In delete_frame do not delete terminal for any toolkit build

	* src/frame.c (delete_frame): Neither delete terminal for
	non-GTK toolkit builds (Bug#5802, Bug#21509, Bug#23499,
	Bug#27816).

2017-09-02  Philipp Stephani  <phst@google.com>

	Improve error messages for improper plists (Bug#27726)

	* src/fns.c (Fplist_put, Flax_plist_get, Flax_plist_put)
	(Fplist_member, syms_of_fns): Use ‘plistp’ as pseudo-predicate for
	improper plists instead of ‘listp.’

	* test/src/fns-tests.el (plist-get/odd-number-of-elements)
	(lax-plist-get/odd-number-of-elements)
	(plist-put/odd-number-of-elements)
	(lax-plist-put/odd-number-of-elements)
	(plist-member/improper-list): Add unit tests.

2017-09-02  Eli Zaretskii  <eliz@gnu.org>

	Fix decrypting in plstore.el on MS-Windows

	* lisp/plstore.el (plstore-open): Bind coding-system-for-read to
	raw-text, instead of using insert-file-contents-literally.
	(Bug#28114)

2017-09-02  Eli Zaretskii  <eliz@gnu.org>

	* src/fileio.c (Fexpand_file_name): Doc fix.  (Bug#27982)

2017-09-02  Eli Zaretskii  <eliz@gnu.org>

	Rewrite Antinews for Emacs 26

	* doc/lispref/anti.texi (Antinews): Rewrite for Emacs 26.
	* doc/lispref/elisp.texi (Top): Update the top-level menu's
	Antinews entry.
	* doc/emacs/anti.texi (Antinews): Rewrite for Emacs 26.
	* doc/emacs/emacs.texi (Top): Update the top-level menu's Antinews
	entry.

	* etc/NEWS: Rearrange some entries in a more reasonable order.

2017-09-02  Reuben Thomas  <rrt@sc3d.org>

	Fix a mis-binding in a test

	* test/lisp/progmodes/python-tests.el
	(python-shell-calculate-process-environment-3): Fix binding of
	process-environment.  A level of parens was missing.

	This was found after Glenn Morris noticed a similar problem with the
	patch for Bug#28319.

2017-09-02  Reuben Thomas  <rrt@sc3d.org>

	Fix a mis-binding and a bad defun name in a test (Bug#28319)

	test/lib-src/emacs-client-tests.el (call-emacsclient): Rename
	emacsclient-test-call-emacsclient.
	(emacsclient-test-alternate-editor-allows-arguments)
	(emacsclient-test-alternate-editor-allows-quotes): Fix let-binding of
	process-environment.

	Thanks to Glenn Morris for noticing these errors.

2017-09-02  Glenn Morris  <rgm@gnu.org>

	* test/Makefile.in (check-no-automated-subdir): Silence by default.

	* test/Makefile.in (ELFILES): Sort, for a reproducible order.

2017-09-01  Mark Oteiza  <mvoteiza@udel.edu>

	Turn off checkdoc complaint about default argument order

	* etc/NEWS: Mention change.
	* lisp/emacs-lisp/checkdoc.el (checkdoc-arguments-in-order-flag):
	Disable by default, note version.

2017-09-01  Reuben Thomas  <rrt@sc3d.org>

	Stop emacsclient tests hanging (Bug#28319)

	* test/lib-src/emacsclient-tests.el
	(emacsclient-test-alternate-editor-allows-arguments): Use a
	non-existent file to communicate with server, so that any existing
	default server will not be hijacked (in fact, the test does
	not need a server).
	(emacsclient-test-alternate-editor-allows-quotes): Likewise.

2017-09-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/obsolete/html2text.el: Don't require CL

	(html2text-clean-anchor): Mark unused arg.

2017-09-01  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't remove undisplayers from inlined MIME parts (bugfix)

	* lisp/gnus/gnus-art.el (gnus-mime-buttonize-attachments-in-header):
	Don't remove undisplayers from inlined MIME parts (bugfix);
	Simplify criterion that finds attachments.

2017-08-31  Mark Oteiza  <mvoteiza@udel.edu>

	Make ucs-names a hash table (Bug#28302)

	* etc/NEWS: Mention the type change.
	* lisp/descr-text.el (describe-char): Use gethash to access ucs-names.
	Hardcode BEL's name into the function instead of needlessly mapping
	over the hash table in the spirit of rassoc.
	* lisp/international/mule-cmds.el (ucs-names): Fix variable and
	function docstrings.  Initialize a hash table for ucs-names--the
	number of entries is 42845 here.  Switch to hash-table
	getters/setters.
	(mule--ucs-names-annotation): Use hash-table getter.
	(char-from-name): Upcase the string if ignore-case is truthy.
	* lisp/leim/quail/latin-ltx.el: Use maphash instead of dolist.

2017-08-31  Alan Third  <alan@idiocy.org>

	Remove unneeded version checks (bug#28222)

	* src/macfont.h (CGContextSetFontSmoothingStyle): Remove version
	check.
	* src/macfont.m (macfont_draw): Remove version check, and test for
	existence of CGContextSetFontSmoothingStyle.

2017-08-31  Alan Mackenzie  <acm@muc.de>

	Fix a glitch in CC Mode's syntactic whitespace cache.

	* lisp/progmodes/cc-engine.el (c-forward-sws): Deal correctly with a block
	comment close at the end of a macro.

2017-08-31  Alan Mackenzie  <acm@muc.de>

	Correct the fontification of C++ Mode enclosed declarations.

	* lisp/progmodes/cc-fonts.el (c-font-lock-enclosing-decls): abolish the
	spurious check that the character before the start of an enclosed declaration
	must be ; or }.  It might also be {.

2017-08-31  Martin Rudalics  <rudalics@gmx.at>

	In xterm.c fix some recently introduced compiler warnings

	* src/xterm.c (xaw_jump_callback)
	(x_set_toolkit_scroll_bar_thumb): Fix some recently introduced
	-Wdouble-promotion warnings.

2017-08-31  Martin Rudalics  <rudalics@gmx.at>

	Restrict fix of Bug#24963 and Bug#25887 to GTK builds

	* src/xterm.c (handle_one_xevent): Restrict earlier fix of
	Bug#24963 and Bug#25887 to avoid that a non-GTK Emacs won't
	react to state changes received via ConfigureNotify.

2017-08-31  Katsumi Yamaoka  <yamaoka@jpl.org>

	Respect directory a user enters (bug#28299)

	* lisp/gnus/mm-decode.el (mm-save-part):
	Respect directory a user enters (bug#28299).

2017-08-31  Samuel Freilich  <sfreilich@google.com>

	Do not split line before width of fill-prefix

	When auto-filling a paragraph, don't split a line before the width of the
	fill-prefix, creating a subsequent line that is as long or longer (Bug#20774).
	* lisp/simple.el (do-auto-fill): Only consider break-points that are later in
	the line than the width of the fill-prefix.  This is a more general solution
	than the previous logic, which only skipped over the exact fill-prefix.  The
	fill-prefix doesn't necessarily match the prefix of the first line of a
	paragraph in adaptive-fill-mode.

2017-08-31  Noam Postavsky  <npostavs@gmail.com>

	Support lazy loading for autogenerated usage docstrings too (Bug#27748)

	* lisp/emacs-lisp/bytecomp.el (byte-compile-file-form-defmumble):
	Consider any documentation that ended up in code as a docstring (e.g.,
	autogenerated (fn ARG1 ARG2) type things), not just what the user
	passed.

2017-08-31  Noam Postavsky  <npostavs@gmail.com>

	Drop docstrings from cl-defsubst produced inline bodies (Bug#27748)

	* lisp/emacs-lisp/cl-macs.el (cl-defsubst): Use macroexp-parse-progn
	to drop the docstring.  Add a simple docstring to the compiler-macro.

2017-08-30  Paul Eggert  <eggert@cs.ucla.edu>

	Quote file-truename symlink to "../foo:bar:"

	Problem reported by Michael Albinus (Bug#28264#19).
	* lisp/files.el (files--splice-dirname-file): Fix bug where
	a relative symlink to "../foo:bar:" did not quote the result.

2017-08-30  Reuben Thomas  <rrt@sc3d.org>

	Add support for arguments in emacsclient's ALTERNATE_EDITOR (Bug #25082)

	* lib-src/emacsclient.c (fail): Parse ALTERNATE_EDITOR, or
	corresponding command-line argument, into quote- or space-separated
	tokens.  If a token starts with a quote, then it naturally is expected
	to end with a quote; escaping is not supported. This is enough to cope
	with the typical case of requiring the initial path to be quoted,
	common on Windows where it may contain spaces.
	* etc/NEWS: Document.
	* doc/emacs/misc.texi: Likewise.
	* doc/man/emacsclient.1: Tweak to remove the implication that only an
	editor can be specified (the manual already mentions a “command”).
	Fix a small error where “EDITOR” is referred to rather than
	“ALTERNATE_EDITOR”.
	* test/lib-src/emacsclient-tests.el: Add tests.

2017-08-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/man.el (Man-softhyphen-to-minus): Avoid string-as-multibyte.

2017-08-30  Devon Sean McCullough  <Emacs-Hacker2017@jovi.net>  (tiny change)

	Correct "hide others" shortcut on macOS (bug#28215)

	* lisp/term/ns-win.el: Fix shortcut for ns-do-hide-others.

2017-08-30  Eli Zaretskii  <eliz@gnu.org>

	Sync NEWS with the documentation

	* etc/NEWS: Mark entries according to documentation.

	* doc/lispref/functions.texi (Mapping Functions): Document 'mapcan'.

2017-08-30  Michael Albinus  <michael.albinus@gmx.de>

	Improve symlinks for Tramp

	* lisp/files.el (files--splice-dirname-file): Quote whole file.

	* lisp/net/tramp-sh.el (tramp-sh-handle-make-symbolic-link):
	Do not expand TARGET, it could be remote.
	(tramp-sh-handle-file-truename): Check for cyclic symlink also
	in case of readlink.  Quote result if it looks remote.
	(tramp-sh-handle-file-local-copy): Use `file-truename'.

	* test/lisp/net/tramp-tests.el (tramp-test08-file-local-copy)
	(tramp-test09-insert-file-contents): Test also file missing.
	(tramp-test21-file-links): Extend test.

2017-08-30  Martin Rudalics  <rudalics@gmx.at>

	Preserve display's foreground color when clearing internal borders (Bug#28278)

	* src/xterm.c (x_after_update_window_line): Preserve display's
	foreground color when clearing internal borders (Bug#28278).

2017-08-30  Noam Postavsky  <npostavs@gmail.com>

	Use cl-print for all values printed by `describe-variable'

	* lisp/help-fns.el (describe-variable): Use cl-prin1 for original and
	global values too.

2017-08-30  Noam Postavsky  <npostavs@gmail.com>

	Minor simplification for byte-compile-constant-push

	* lisp/emacs-lisp/bytecomp.el (byte-compile-constant): Move the meat
	of the code from here...
	(byte-compile-constant-push): ... to here.  No need to bind
	byte-compile--for-effect anymore.

2017-08-30  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer file-name-quote to concat "/:"

	Suggested by Michael Albinus (Bug#28264#13).
	* lisp/files.el (files--splice-dirname-file): Use file-name-quote
	rather than attempting to do it by hand.

2017-08-30  Paul Eggert  <eggert@cs.ucla.edu>

	* configure.ac: fix typo in previous change

2017-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	Be more conservative in link time optimization doc

	While testing --enable-link-time-optimization with GCC 7.1.1
	I ran into a serious GCC code-generation bug which makes me
	think that --enable-link-time-optimization should be
	discouraged for typical installs (Bug#28213).  See:
	https://bugzilla.redhat.com/show_bug.cgi?id=1486455

2017-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	Make garbage collection more conservative

	Check for a pointer anywhere within the object, as opposed to just
	the start of the object.  This is needed for gcc -Os -flto on
	x86-64 (Bug#28213).  This change means that the garbage collector
	is more conservative, and will incorrectly keep objects that it
	does not need to, but that is better than incorrectly discarding
	objects that should be kept.
	* src/alloc.c (ADVANCE, VINDEX): Now functions, not macros;
	this is easier to debug.
	(setup_on_free_list): Rename from SETUP_ON_FREE_LIST.
	Now a function with two args, not a macro with three.
	All callers changed.
	(live_string_holding, live_cons_holding, live_symbol_holding)
	(live_misc_holding, live_vector_holding, live_buffer_holding):
	New functions, which check for any object containing the addressed
	byte, not just for an object at the given address.
	(live_string_p, live_cons_p, live_symbol_p, live_misc_p)
	(live_vector_p, live_buffer_p):
	Redefine in terms of the new functions.
	(live_float_p): Refactor slightly to match the new functions.
	(mark_maybe_object, mark_maybe_pointer): Use the new functions.
	Don’t bother checking mark bits, as mark_object already does that,
	and omitting the checks here simplifies the code.  Although
	mark_maybe_object can continue to insist that tagged pointers
	still address the start of the object, mark_maybe_pointer now is
	more conservative and checks for pointers anywhere into an object.

2017-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	Improve stack-top heuristic

	This is needed for gcc -Os -flto on x86-64; otherwise, GC misses part
	of the stack when scanning for heap roots, causing Emacs to crash
	later (Bug#28213).  The problem is that Emacs's hack for getting an
	address near the stack top does not work when link-time optimization
	moves stack variables around.
	* configure.ac (HAVE___BUILTIN_FRAME_ADDRESS): New macro.
	* lib-src/make-docfile.c (DEFUN_noinline): New constant.
	(write_globals, scan_c_stream): Support noinline.
	* src/alloc.c (NEAR_STACK_TOP): New macro.
	(SET_STACK_TOP_ADDRESS): Use it.
	(flush_stack_call_func, Fgarbage_collect): Now noinline.

2017-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	Align stack bottom properly.

	This is needed for gcc -Os -flto on x86-64 (Bug#28213).
	* src/emacs.c (main): Align stack-bottom variable as a pointer,
	since mark_memory requires this.

2017-08-29  Eli Zaretskii  <eliz@gnu.org>

	Avoid spinning waiting for git-gui.exe on Windows

	* src/w32proc.c (waitpid): If GetExitCodeProcess returns
	STILL_ACTIVE, and we were called with WNOHANG, pretend that the
	process exited.  (Bug#28268)

2017-08-29  Eli Zaretskii  <eliz@gnu.org>

	Document '--module-assertions'

	* doc/emacs/cmdargs.texi (Initial Options): Document the
	'--module-assertions' command-line option.
	* doc/lispref/loading.texi (Dynamic Modules): Add a
	cross-reference to the description of '--module-assertions'.

	* etc/NEWS: Update the NEWS entry for --module-assertions.

2017-08-29  Alan Third  <alan@idiocy.org>

	Add news entry about new macOS features

	* etc/NEWS: Add entry about ns-appearance, ns-transparent-titlebar and
	ns-use-thin-smoothing.

2017-08-29  Alan Third  <alan@idiocy.org>

	Fix cross macOS version building (bug#28222)

	* src/macfont.h (CGContextSetFontSmoothingStyle): Function
	declaration.
	* src/macfont.m (macfont_draw): Limit new code to macOS 10.8 and up.

2017-08-29  Ben Bonfil  <bonfil@gmail.com>  (tiny change)

	Enable thin font smoothing in macOS (bug#28222)

	* src/nsterm.m (syms_of_nsterm): Define var ns-use-thin-smoothing.
	* src/macfont.m (macfont_draw): Use font smoothing.

2017-08-29  Eli Zaretskii  <eliz@gnu.org>

	Minor improvement in documentation of display-line-numbers

	* doc/emacs/display.texi (Display Custom): Document the
	display-line-numbers-mode and related options.

2017-08-29  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborting in 'waitpid' on MS-Windows

	* src/w32proc.c (waitpid): Don't allow quitting if called with
	WNOHANG in OPTIONS.  (Bug#28268)

2017-08-29  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/sh-script.el: Test "in-string" of the right char!

	(sh-syntax-propertize-function): Fix off-by-one error.
	Fixes bug#23526.

2017-08-29  Rasmus  <rasmus@gmx.us>

	Update Org to v9.0.10

	Please see etc/ORG-NEWS for major changes. Note, this is a bugfix
	release.

2017-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	Silence false alarms for symlinks to sources

	Problem reported by Glenn Morris (Bug#28264).
	* lisp/files.el (files--splice-dirname-file): New function.
	(file-truename, file-chase-links): Use it.

2017-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify remove_slash_colon

	* src/process.c (remove_slash_colon): Simplify
	and avoid a special case for "/:" by itself.

2017-08-28  Tassilo Horn  <tsdh@gnu.org>

	Remove font family from minibuffer-prompt face

	* etc/themes/tsdh-light-theme.el (tsdh-light): Remove font family from
	minibuffer-prompt face.

2017-08-28  Michael Albinus  <michael.albinus@gmx.de>

	Further fixes in tramp-smb.el

	* lisp/net/tramp-smb.el (tramp-smb-handle-file-truename): New defun.
	(tramp-smb-file-name-handler-alist): Use it.
	(tramp-smb-handle-make-symbolic-link): Unquote target.

	* test/lisp/net/tramp-tests.el
	(tramp--test-ignore-make-symbolic-link-error): New defmacro.
	(tramp-test18-file-attributes, tramp-test21-file-links)
	(tramp--test-check-files): Use it.

2017-08-28  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t assume -g3 in .gdbinit

	* src/.gdbinit (EMACS_INT_WIDTH, USE_LSB_TAG):
	Use reasonable defaults if not in the symbol table.

2017-08-28  Robert Pluim  <rpluim@gmail.com>  (tiny change)

	Use string-match to check for dotfiles in ido

	* lisp/ido.el (ido-make-file-list): Use string-match to check
	for dotfiles instead of substring, as when using tramp
	simplified syntax ido-temp-list may contain empty strings.

2017-08-28  Mark Oteiza  <mvoteiza@udel.edu>

	Font-lock FDO desktop files correctly

	Single and double quotes do not have a special meaning in
	desktop files.
	https://standards.freedesktop.org/desktop-entry-spec/latest/
	* etc/NEWS: Mention new mode.
	* lisp/files.el (auto-mode-alist): Split out an entry for handling
	the .desktop extension with conf-desktop-mode.
	* lisp/textmodes/conf-mode.el (conf-desktop-font-lock-keywords): New
	variable with rules for booleans and format specifiers.
	(conf-unix-mode): Remove desktop file entry example from docstring.
	(conf-desktop-mode): New derived major mode.

2017-08-27  Tom Tromey  <tom@tromey.com>

	Fix auto-fill bug in js-mode

	* lisp/progmodes/js.el (js-do-auto-fill): New function.
	(js-mode): Set normal-auto-fill-function.
	* test/lisp/progmodes/js-tests.el (js-mode-fill-comment-bug): New
	test.

2017-08-27  Noam Postavsky  <npostavs@gmail.com>

	Disable completion while entering python multiline statements

	The "legacy" completion mechanism sends newlines to the running python
	process to get the list of completions, which confuses things if the
	user is in the middle of entering a multiline statement (Bug#28051).
	It's better to disable completion in this case.
	* lisp/progmodes/python.el (python-shell--block-prompt): New variable.
	(python-shell-prompt-set-calculated-regexps): Set it.
	(python-shell-completion-at-point): Return 'ignore' as the completion
	function when the current prompt is a block prompt.

2017-08-27  Michael Albinus  <michael.albinus@gmx.de>

	Tramp cleanup

	* lisp/net/tramp-sh.el (tramp-sh-extra-args): Remove compat code.
	(tramp-sh-handle-make-symbolic-link): More robust check for
	TARGET remoteness.

	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory):
	Disable copying by tar temporarily, it doesn't work reliably.
	(tramp-smb-do-file-attributes-with-stat): Resolve symlink.
	(tramp-smb-handle-make-symbolic-link): Fix implementation.

	* lisp/net/tramp.el (tramp-handle-file-symlink-p): Simplify.

	* test/lisp/net/tramp-tests.el (tramp-test21-file-links):
	Extend test.

2017-08-27  Glenn Morris  <rgm@gnu.org>

	Fix previous xterm.h change for non-gtk builds

	* src/xterm.h (GTK_CHECK_VERSION) [!USE_GTK]: Define it.

2017-08-27  Philipp Stephani  <phst@google.com>

	Fix GdkSettings-related deprecation warnings

	* src/gtkutil.c (xg_initialize): Don’t set deprecated and ignored
	gtk-menu-bar-accel setting in new versions of GTK+.  Use g_object_set
	instead of deprecated gtk_settngs_set_string_property otherwise.

2017-08-27  Philipp Stephani  <phst@google.com>

	Always use gtk_window_move in new versions

	* src/gtkutil.c (my_log_handler): Don’t define in new versions of
	GTK+.
	(xg_set_geometry): Always use gtk_window_move in new versions of GTK+.

	* src/xterm.c (syms_of_xterm): Document that x-gtk-use-window-move
	is ignored.

	* lisp/subr.el (x-gtk-use-window-move): Make obsolete.

2017-08-27  Charles A. Roelli  <charles@aurox.ch>

	Fix 'diff-goto-source' when buffer is narrowed (Bug#21262)

	* lisp/vc/diff-mode.el (diff-find-file-name): Save the current
	narrowing, and widen the buffer before searching for the name of the
	file corresponding to the diff.

	With thanks to Noam Postavsky.

2017-08-27  Philipp Stephani  <phst@google.com>

	Remove use of a deprecated GTK+ function in new versions

	* src/gtkutil.c (xg_make_tool_item): Use gtk_widget_set_focus_on_click
	if available

2017-08-27  Philipp Stephani  <phst@google.com>

	Stop using deprecated GdkScreen monitor functions in newer GDK

	* src/xfns.c (Fx_display_monitor_attributes_list): Use GdkMonitor
	objects instead of the deprecated GdkScreen functions in GDK 3.22+

2017-08-27  Philipp Stephani  <phst@google.com>

	Use GdkSeat in new GDK versions

	* src/gtkutil.c (xg_event_is_for_scrollbar): Use GdkSeat instead of
	GdkDeviceManager in GDK 3.20+

2017-08-27  Philipp Stephani  <phst@google.com>

	* src/xterm.c (XTflash): Don’t use gdk_cairo_create in GDK 3.22+

2017-08-27  Philipp Stephani  <phst@google.com>

	Remove call of deprecated GDK function

	* src/xterm.h (XSync): Don’t call gdk_window_process_all_updates in
	GDK 3.22 or later.

2017-08-27  Alan Mackenzie  <acm@muc.de>

	Amend the CC Mode macro cache to cope with changes at the macro start

	Fixes bug #28233.

	* lisp/progmodes/cc-engine.el (c-invalidate-macro-cache): Fix an off-by-1
	error.

2017-08-27  Paul Eggert  <eggert@cs.ucla.edu>

	Fix over-protection of byte-compiled files

	Problem reported by Sven Joachim (Bug#28244).
	Also, fix similar problem for autoload files.
	* lisp/emacs-lisp/autoload.el (autoload--save-buffer):
	Set temp file modes to the buffer-file-name file modes (or 666
	if not available) as adjusted by umask.
	* lisp/emacs-lisp/bytecomp.el (byte-compile-file):
	Set temp file modes to 666 as adjusted by umask.

2017-08-27  Tom Tromey  <tom@tromey.com>

	Refine conf-toml-mode font-lock

	Bug#28218
	* lisp/textmodes/conf-mode.el (conf-toml-font-lock-keywords): Use
	conf-toml-recognize-section.  Use \s- in variable regexp.
	(conf-toml-recognize-section): New function.

2017-08-27  Paul Eggert  <eggert@cs.ucla.edu>

	Do not munge contents of local symbolic links

	This lets Emacs deal with arbitrary local symlinks without
	mishandling their contents (Bug#28156).  For example,
	(progn (shell-command "ln -fs '~' 'x'") (rename-file "x" "/tmp/x"))
	now consistently creates a symbolic link from '/tmp/x' to '~'.
	Formerly, it did that only if the working directory was on the
	same filesystem as /tmp; otherwise, it expanded the '~' to
	the user's home directory.
	* lisp/dired.el (dired-get-filename): Use files--name-absolute-system-p
	instead of rolling our own code.
	* lisp/files.el (files--name-absolute-system-p): New function.
	(file-truename, file-chase-links): Use it to avoid mishandling
	symlink contents that begin with ~.
	(copy-directory, move-file-to-trash):
	Use concat rather than expand-file-name, to avoid mishandling
	symlink contents that begin with ~.
	* src/fileio.c (Fmake_symbolic_link): Do not expand leading "~" in the
	target unless interactive.  Strip leading "/:" if interactive.
	(emacs_readlinkat): Do not prepend "/:" to the link target if
	it starts with "/" and contains ":" before NUL.
	* test/src/fileio-tests.el (try-link): Rename from try-char,
	and accept a string instead of a char.  All uses changed.
	(fileio-tests--symlink-failure): Also test leading ~, and "/:",
	to test the new behavior.

2017-08-27  Reuben Thomas  <rrt@sc3d.org>

	Remove invalid regexp for shell builtins for wksh

	* lisp/progmodes/sh-script.el (sh-builtins): Shell built-ins have to
	be literal strings, so remove a regexp for wksh. In any case, it’s a
	defunct proprietary shell.

2017-08-26  Paul Eggert  <eggert@cs.ucla.edu>

	Improve doc for file-name-absolute-p.

2017-08-26  Michael Albinus  <michael.albinus@gmx.de>

	Fix Tramp part of Bug#28156

	* lisp/files.el (file-name-non-special): Use `file-name-quote'
	instead prefixing "/:", the file could already be quoted.

	* lisp/net/tramp.el (tramp-error): Handle null arguments.
	(tramp-handle-make-symbolic-link):
	* lisp/net/tramp-sh.el (tramp-sh-handle-make-symbolic-link)
	(tramp-sh-handle-add-name-to-file):
	* lisp/net/tramp-smb.el (tramp-smb-handle-add-name-to-file)
	(tramp-smb-handle-make-symbolic-link): Adapt implementation to
	stronger semantics in Emacs.  (Bug#28156)

	* test/lisp/net/tramp-tests.el (tramp-test21-file-links):
	Extend test.

2017-08-26  Eli Zaretskii  <eliz@gnu.org>

	Fix bugs merged with bug#25428

	* lisp/simple.el (auto-fill-mode, visual-line-mode): Doc fix.
	(Bug#13926)  (Bug#25434)  (Bug#25435)

2017-08-26  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of Info virtual files and nodes

	* lisp/info.el (Info-virtual-files, Info-virtual-nodes): Doc fix.
	(Bug#28237)

2017-08-26  Eli Zaretskii  <eliz@gnu.org>

	* lisp/delsel.el (delete-selection-mode): Doc fix.  (Bug#25428)

2017-08-26  Grégory Mounié  <Gregory.Mounie@imag.fr>  (tiny change)

	Support multi-lingual detection of SEE ALSO man sections

	* lisp/man.el (Man-see-also-regexp): Add support for SEE ALSO
	section detection in several langages: French, German, Spanish,
	Portuguese, Italian, Polish, Turkish, Japanese, Chinese.  (Bug#28142)

2017-08-26  Paul Eggert  <eggert@cs.ucla.edu>

	Improve expand-file-name doc

	* doc/lispref/files.texi (Relative File Names, Directory Names)
	(File Name Expansion):
	* doc/lispref/minibuf.texi (Reading File Names):
	Document expand-file-name behavior with ~ more clearly
	and accurately.
	* doc/misc/org.texi (Batch execution): Simplify example
	script so that it does not need expand-file-name and thus
	will not mishandle file names with leading ~.

2017-08-26  Jefferson Carpenter  <jeffersoncarpenter2@gmail.com>  (tiny change)

	Support all perl variable declarators and prefixes (Bug#27613)

	* lisp/progmodes/perl-mode.el (perl-imenu-generic-expression)
	(perl-font-lock-keywords-2): Match declators 'anon', 'argument', 'has',
	'local', 'state', 'supersede', 'let', and 'temp'.

2017-08-25  Paul Eggert  <eggert@cs.ucla.edu>

	Fix file-attributes race on GNU hosts

	* doc/lispref/files.texi (File Attributes):
	Document file-attributes atomicity.
	* etc/NEWS: Document the fix.
	* src/dired.c (file_attributes): New args DIRNAME and FILENAME,
	for diagnostics.  All callers changed.  On platforms like
	GNU/Linux that support O_PATH, fix a race condition in
	file-attributes and similar functions, so that these functions do
	not return nonsense if a directory entry is replaced while getting
	its attributes.  On non-GNU platforms, do a better (though not
	perfect) job of detecting the race, and return nil if detected.

2017-08-25  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify expand_and_dir_to_file

	* src/fileio.c (expand_and_dir_to_file): Simplify by omitting 2nd
	argument, since in practice it always has the default value.  All
	callers changed.  Prefer C99 style decls in nearby code.

2017-08-25  Eli Zaretskii  <eliz@gnu.org>

	Fix file-name completion on network shares

	* src/w32.c (faccessat): Don't assume that F_OK is non-zero.
	(Bug#28207)

2017-08-25  Reuben Thomas  <rrt@sc3d.org>

	Fix a FIXME with an exegetical comment

	* lisp/progmodes/sh-script.el (sh-builtins): Explain why we have a
	regexp for wksh builtins.

2017-08-25  Reuben Thomas  <rrt@sc3d.org>

	Minor docstring language fix

	* lisp/progmodes/sh-script.el (sh-show-indent): Remove spurious “the”.

2017-08-25  Reuben Thomas  <rrt@sc3d.org>

	Remove old commented code from sh-script.el

	* lisp/progmodes/sh-script.el (sh-abbrevs): Remove commented function
	and variable, commented since 2001.

2017-08-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/package.el: Don't let failure stop us

	(package-activate-1): Don't throw an error for missing deps.
	(package-unpack): Don't bother compiling if activation failed.
	(package-initialize): Report failures but keep activating other packages.

2017-08-25  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer ‘double’ for FP temps in xterm.c

	* src/xterm.c (xm_scroll_callback, xaw_jump_callback)
	(x_set_toolkit_scroll_bar_thumb)
	(x_set_toolkit_horizontal_scroll_bar_thumb): Prefer ‘double’ to
	‘float’ for individual local floating-point temporaries.

2017-08-24  Reuben Thomas  <rrt@sc3d.org>

	Avoid using string-to-multibyte in ispell.el

	* lisp/textmodes/ispell.el (ispell-get-decoded-string): Use
	decode-coding-string instead. Note that decode-coding-string returns a
	string that satisfies multibyte-string-p even if its input is pure
	ASCII and the third argument is t, so the result of
	ispell-get-decoded-string is always a multibyte string.

2017-08-24  Tino Calancha  <tino.calancha@gmail.com>

	Store the regexp just when there are matches

	* lisp/hi-lock.el (hi-lock-set-pattern): When font-lock-mode is
	disabled and there are no matches do not store REGEXP
	in hi-lock-interactive-patterns.

2017-08-24  Tino Calancha  <tino.calancha@gmail.com>

	Keep face available if there are no matches

	If font-lock-mode is disabled in the current buffer, and
	there are no matches for REGEXP, then keep FACE available
	for a next search.
	* lisp/hi-lock.el (hi-lock-set-pattern): Add FACE into
	hi-lock--unused-faces if font-lock-mode is disabled and
	there are no matches.
	* test/lisp/hi-lock-tests.el (hi-lock-test-set-pattern): Add test.

2017-08-24  Michael Albinus  <michael.albinus@gmx.de>

	Minor improvements for tramp-interrupt-process, documentation

	* doc/lispref/processes.texi (Signals to Processes):
	* etc/NEWS: Document interrupt-process-functions.

	* lisp/net/tramp.el (tramp-interrupt-process): Test also for
	`process-live-p'.

	* src/process.c (Vinterrupt_process_functions): Fix docstring.

	* test/lisp/net/tramp-tests.el (tramp-test28-interrupt-process):
	Extend test.

2017-08-24  Reuben Thomas  <rrt@sc3d.org>

	Fix a comment whitespace typo.

	src/fileio.c: A double space was added after "..", used in a code
	example. Make it a single space.

2017-08-24  Reuben Thomas  <rrt@sc3d.org>

	Remove old commented code and obsolete comments

	* lisp/files.el (locate-dominating-files): Remove old commented
	implementation from 9 years ago.  Since the current version
	appears (at least to me) not just more efficient but clearer than the
	version removed, also delete a comment in the new version referring to
	the old version. Remove old commented heuristic code,
	and explanatory comments.

2017-08-24  Reuben Thomas  <rrt@sc3d.org>

	Remove old duplicate commented code

	* lisp/files.el (file-relative-name): Remove old commented version,
	replaced 14 years ago in commit 753ad9889.

2017-08-24  Tom Tromey  <tom@tromey.com>

	Add conf-toml-mode

	* etc/NEWS: Mention conf-toml-mode.
	* lisp/files.el (auto-mode-alist): Add entry for .toml.
	* lisp/textmodes/conf-mode.el (conf-toml-mode-syntax-table)
	(conf-toml-font-lock-keywords): New defvars.
	(conf-toml-mode): New mode.

2017-08-23  Alan Third  <alan@idiocy.org>

	Use lisp type in log message (bug#28176)

	* src/nsimage.m (ns_load_image): Use make_number on index.

2017-08-23  Alan Third  <alan@idiocy.org>

	Fix PNGs on macOS (bug#28176)

	* src/nsimage.m (ns_load_image): Remove index check.
	(EmacsImage::getAnimatedBitmapImageRep): New function.
	(EmacsImage::getMetadata): Use getAnimatedBitmapImageRep.
	(EmacsImage::setFrame): Use getAnimatedBitmapImageRep and check index
	is valid.

2017-08-23  Alan Third  <alan@idiocy.org>

	Add ability to change macOS WM theme (bug#27973)

	* src/frame.c (make_frame, frame_parms, syms_of_frame)
	[NS_IMPL_COCOA]: Add ns-appearance and ns-transparent-titlebar
	options.
	* src/frame.h (ns_appearance_type) [NS_IMPL_COCOA]: Add enum to
	represent NSAppearance options.
	(struct frame) [NS_IMPL_COCOA]: Add ns_appearance and
	ns_transparent_titlebar frame parameters.
	* src/nsfns.m (ns_frame_parm_handlers) [NS_IMPL_COCOA]: Add
	ns_set_appearance and ns_set_transparent_titlebar handlers.
	(Sx_create_frame): Handle ns-appearance and ns-transparent-titlebar
	frame parameters.
	(Qdark): Add new symbol for use with ns-appearance.
	* src/nsterm.h (ns_set_appearance, ns_set_transparent_titlebar)
	[NS_IMPL_COCOA]: Add prototypes.
	* src/nsterm.m (ns_set_appearance, ns_set_transparent_titlebar)
	[NS_IMPL_COCOA]: New functions.
	(initFrameFromEmacs) [NS_IMPL_COCOA]: Handle ns-appearance and
	ns-transparent-titlebar frame parameters.
	* doc/lispref/frames.texi (Window Management Parameters): Document
	ns-apperance and ns-transparent-titlebar.

2017-08-22  Alan Mackenzie  <acm@muc.de>

	When looking for the end of a declarator, prevent macros fouling up the search

	The practical implication of this bug was a random jit-lock chunk remaining
	entirely unfontified.

	* lisp/progmodes/cc-mode.el (c-fl-decl-end): If point starts inside a macro,
	restrict two forward searches to the end of that macro.

2017-08-22  Michael Albinus  <michael.albinus@gmx.de>

	Test `file-expand-wildcards' for Tramp

	* lisp/net/tramp-compat.el (tramp-advice-file-expand-wildcards):
	Remove, not needed anymore.

	* test/lisp/net/tramp-tests.el (top): Require seq.el.
	(tramp-test16-directory-files): Simplify.
	(tramp-test16-file-expand-wildcards): New test.
	(tramp-test28-interrupt-process): Skip for older Emacsen.

2017-08-22  Alexander Gramiak  <agrambot@gmail.com>

	Add tests for cl-macs.el (Bug#27559)

	* test/lisp/emacs-lisp/cl-lib-tests.el (cl-lib-test-loop): Remove
	duplicate.
	(cl-loop-destructuring-with): Move to cl-macs-tests.el.
	* test/lisp/emacs-lisp/cl-macs-tests.el: New file.

2017-08-22  Noam Postavsky  <npostavs@gmail.com>

	Optimize skkdic conversion (Bug#28043)

	The primary speedup comes from the optimizing lookup-nested-alist and
	set-nested-alist for the case where the key is a string.  This brings
	the time down to less than half the original.

	* lisp/international/mule-util.el (lookup-nested-alist)
	(set-nested-alist): Use `assq' instead of `assoc' when KEYSEQ is a
	string.

	* lisp/international/ja-dic-cnv.el (skkdic-collect-okuri-nasi)
	(skkdic-convert-okuri-nasi): Use progress-reporter functions instead
	of calculating ratio of work done inline.

	(skkdic-reduced-candidates): Call `char-category-set' on the first
	character of the string directly, instead of using a regexp for the
	character category.
	(skkdic--japanese-category-set): New constant.
	(skkdic-collect-okuri-nasi): Just set
	`skkdic-okuri-nasi-entries-count' at once at the end rather than
	updating it throughout the loop.

	(skkdic-convert-postfix skkdic-convert-prefix)
	skkdic-get-candidate-list, skkdic-collect-okuri-nasi)
	(skkdic-extract-conversion-data): Use `match-string-no-properties'
	instead of `match-string'.

2017-08-22  Reuben Thomas  <rrt@sc3d.org>

	Treat tests in lib-src like tests in src

	* test/Makefile.in (test_template): Depend on a .c source file for a
	test under lib-src, as for src.  (Thanks, Glenn Morris for pointing me
	in the right direction.)

2017-08-22  Paul Eggert  <eggert@cs.ucla.edu>

	Port /bin/sh scripts to Solaris 10

	Its /bin/sh builtin ‘test’ command does not support -e.
	* autogen.sh, build-aux/git-hooks/pre-commit:
	* build-aux/gitlog-to-emacslog, make-dist:
	Use test -r, not test -e.

2017-08-21  Eli Zaretskii  <eliz@gnu.org>

	Avoid losing the buffer restriction in flyspell-mode

	* src/intervals.c (get_local_map): Don't allow C-g to quit as long
	as we have the buffer widened, to make sure the restriction is
	preserved.  (Bug#28161)

2017-08-21  Sven Joachim  <svenjoac@gmx.de>

	Fix the 'versionclean' target in src/Makefile

	* src/Makefile.in (versionclean): Don't accidentally remove
	emacs-module.h.  (Bug#28169)

2017-08-21  Michael Albinus  <michael.albinus@gmx.de>

	Implement `interrupt-process-functions'

	* lisp/net/tramp.el (tramp-interrupt-process): Rename from
	`tramp-advice-interrupt-process'.  Adapt according to changed API.
	(top): Add it to `interrupt-process-functions'.

	* src/process.c (Finternal_default_interrupt_process): New defun.
	(Finterrupt_process): Change implementation, based on
	Vinterrupt_process_functions.
	(Vinterrupt_process_functions): New defvar.

	* test/lisp/net/tramp-tests.el (tramp-test40-unload): Do not
	test removal of advice.

2017-08-21  Eli Zaretskii  <eliz@gnu.org>

	Avoid floating-point exceptions while drawing underwave

	* src/w32term.c (x_get_scale_factor):
	* src/xterm.c (x_get_scale_factor): Don't let the scale factors
	become less than 1.  Reported by Yuri D'Elia <wavexx@thregr.org> in
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00459.html.

2017-08-21  Sam Steingold  <sds@gnu.org>

	mark flymake-mode as safe local variable when the value is nil

2017-08-21  Sam Steingold  <sds@gnu.org>

	allow nil init in flymake-allowed-file-name-masks to disable flymake

	(flymake-allowed-file-name-masks): Update doc and :type.
	(flymake-get-file-name-mode-and-masks): Handle nil init.

2017-08-20  Dmitry Gutov  <dgutov@yandex.ru>

	Remove the workaround for bug#20719

	* lisp/cedet/semantic/symref/grep.el
	(semantic-symref-grep-use-template): Remove the workaround for
	bug#20719, it's been fixed for a while now.

2017-08-20  Dmitry Gutov  <dgutov@yandex.ru>

	Fix byte-compilation warnings in semantic/symref/grep

	* lisp/cedet/semantic/symref/grep.el (greppattern): Remove.
	(grepflags): Rename to semantic-symref-grep-flags.
	(semantic-symref-grep-expand-keywords): Update accordingly.
	(semantic-symref-grep-use-template): Remove the last two
	arguments to make sure they don't shadow the (not renamed)
	global variables.
	(semantic-symref-perform-search)
	(semantic-symref-parse-tool-output-one-line): Use slot names
	instead of keywords, like the byte-compiler wants us to.

2017-08-20  Dmitry Gutov  <dgutov@yandex.ru>

	Simplify eldoc-message

	* lisp/emacs-lisp/eldoc.el (eldoc-message): Simplify.
	Don't use ARGS because no callers pass them.  Discussed in bug#27230.

2017-08-20  Noam Postavsky  <npostavs@gmail.com>

	Work around w32-python-2.x bug to fix prompt detection (Bug#21376)

	* lisp/progmodes/python.el (python-shell-prompt-detect): Don't put
	carriage returns into the temporary file when running in unbuffered
	mode, the w32 build of python 2.7 chokes on them.

2017-08-20  Reuben Thomas  <rrt@sc3d.org>

	Add missing require

	* lisp/textmodes/ispell.el: Require subr-x. (Thanks, Eli Zaretskii.)

2017-08-20  Michael Albinus  <michael.albinus@gmx.de>

	Implement `interrupt-process' for remote processes (Bug#28066)

	* lisp/net/tramp-sh.el (tramp-sh-handle-start-file-process):
	Support sending signals remotely.
	(tramp-open-connection-setup-interactive-shell):
	Trace "remote-tty" connection property.

	* lisp/net/tramp.el (tramp-advice-interrupt-process): New defun.
	(top): Add advice to `interrupt-process'.  (Bug#28066)

	* test/lisp/net/tramp-tests.el (tramp-test28-interrupt-process):
	New test.
	(tramp-test29-shell-command)
	(tramp-test30-environment-variables)
	(tramp-test30-environment-variables-and-port-numbers)
	(tramp-test31-explicit-shell-file-name)
	(tramp-test32-vc-registered)
	(tramp-test33-make-auto-save-file-name)
	(tramp-test34-make-nearby-temp-file)
	(tramp-test35-special-characters)
	(tramp-test35-special-characters-with-stat)
	(tramp-test35-special-characters-with-perl)
	(tramp-test35-special-characters-with-ls, tramp-test36-utf8)
	(tramp-test36-utf8-with-stat, tramp-test36-utf8-with-perl)
	(tramp-test36-utf8-with-ls)
	(tramp-test37-asynchronous-requests)
	(tramp-test38-recursive-load, tramp-test39-remote-load-path)
	(tramp-test40-unload): Rename.
	(tramp-test40-unload): Test also removal of advice.

2017-08-20  Reuben Thomas  <rrt@sc3d.org>

	Document Enchant support

	* doc/emacs/fixit.texi: Mention Enchant.
	* doc/misc/efaq.texi: Likewise.
	* etc/NEWS: Add an item on Enchant support.

2017-08-20  Reuben Thomas  <rrt@sc3d.org>

	Remove old comments and a redundant FIXME

	* lisp/textmodes/ispell.el (ispell-process-line): Remove some old
	commented code, a redundant FIXME, and outdated usage instructions.

2017-08-20  Reuben Thomas  <rrt@sc3d.org>

	Add Enchant support to ispell.el (Bug#17742)

	* lisp/textmodes/ispell.el (ispell-program-name): Add “enchant”.
	(ispell-really-enchant): Add variable.
	(ispell-check-version): If using Enchant, check it’s new enough (at
	least 1.6.1).  (Like the ispell check, this is absolute: cannot work
	without.)
	(ispell-enchant-dictionary-alist): Add variable.
	(ispell-find-enchant-dictionaries): Add function, based on
	ispell-find-aspell-dictionaries.
	(ispell-set-spellchecker-params): Allow dictionary auto-detection for
	Enchant, and call ispell-find-enchant-dictionaries to find them.  Use
	old ispell name to locale mapping code for Enchant too.
	(ispell-send-replacement): Make it work with Enchant.

2017-08-20  Noam Postavsky  <npostavs@gmail.com>

	* lisp/term.el (term-mode): Use `window-text-height' (Bug#5615).

2017-08-20  Noam Postavsky  <npostavs@gmail.com>

	Stop printing '4' in .elc files after 'define-symbol-prop' calls

	* lisp/emacs-lisp/bytecomp.el (byte-compile-define-symbol-prop):
	Return nil in case we have compiled the form, to prevent a redundant
	constant from getting added to the compiled output.

2017-08-20  Paul Eggert  <eggert@cs.ucla.edu>

	Change recent symlink tests to just test ASCII

	* test/src/fileio-tests.el (fileio-tests--symlink-failure):
	Be less ambitious about testing non-ASCII chars and encoding
	errors, as there are too many portability issues.

2017-08-20  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t adjust CRLF in file names

	* doc/misc/gnus.texi (Non-ASCII Group Names):
	* etc/NEWS:
	* test/lisp/net/tramp-tests.el (tramp--test-utf8):
	Use utf-8-unix, not utf-8, for default-file-name-coding-system, so
	that CRLF in file names is left alone.
	* lisp/international/mule-cmds.el (set-default-coding-systems):
	Do not alter CRLF in file name coding systems.
	(prefer-coding-system): Ignore differences in CRLF processing when
	checking whether we used the user-specified file name coding system.
	* test/src/fileio-tests.el: New file.

2017-08-19  Eli Zaretskii  <eliz@gnu.org>

	Make list-processes support display-line-numbers

	* lisp/simple.el (process-menu-mode): Move the call to
	tabulated-list-init-header from here...
	(list-processes--refresh): ...to here.  (Bug#27895)

2017-08-19  Eli Zaretskii  <eliz@gnu.org>

	Improve support of display-line-numbers in package.el

	* lisp/emacs-lisp/package.el (package-menu--refresh): Redisplay
	the header.  (Bug#27895)
	* lisp/emacs-lisp/tabulated-list.el
	(tabulated-list-line-number-width): Fix the case when
	display-line-numbers is nil.

2017-08-19  Eli Zaretskii  <eliz@gnu.org>

	Improve support of display-line-numbers in tabulated-list-mode

	* lisp/emacs-lisp/tabulated-list.el
	(tabulated-list-line-number-width): New function.
	(tabulated-list-init-header, tabulated-list-print-entry): Use it.
	(Bug#27895)

2017-08-19  Martin Rudalics  <rudalics@gmx.at>

	Fix one more issue reported by Alex (Bug#27999)

	* doc/lispref/windows.texi (Preserving Window Sizes)
	(Window Parameters): Use the term `window-preserved-size'
	instead of `preserved-size' (Bug#27999).

2017-08-19  Martin Rudalics  <rudalics@gmx.at>

	Rename `no-delete-other-window' to `no-delete-other-windows'

2017-08-19  Martin Rudalics  <rudalics@gmx.at>

	Fix two side window problems noted by Alex (Bug#27999)

	* lisp/window.el (display-buffer-in-side-window): Fix doc-string
	typo.
	(delete-other-windows): Rename the `no-delete-other-window'
	parameter to `no-delete-other-windows' (see the discussion in
	Bug#27999 for the rationale of this change).
	* doc/lispref/windows.texi (Deleting Windows)
	(Frame Layouts with Side Windows, Window Parameters): Rename
	`no-delete-other-window' to `no-delete-other-windows'.

2017-08-19  Alex Schroeder  <alex@gnu.org>

	Use define-minor-mode for rcirc-omit-mode

2017-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	Clarify behavior of symlinks and directories

	* doc/lispref/files.texi (Saving Buffers): Document how functions
	like rename-file work with symlinks and directories.  This patch
	attempts to document the current behavior better, in preparation
	for possibly changing it.  See Bug#27986.

2017-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix recently-introduced file descriptor leak

	* src/fileio.c (Fmake_temp_file_internal):
	Don’t leak a file descriptor if write_region signals an error.

2017-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	Improve make-temp-file performance on local files

	* lisp/files.el (make-temp-file): Let make-temp-file-internal do
	the work of inserting the text.
	* src/fileio.c (Fmake_temp_file_internal): New arg TEXT.
	All callers changed.

2017-08-19  Noam Postavsky  <npostavs@gmail.com>

	Don't lose arguments to eshell aliases (Bug#27954)

	* lisp/eshell/em-alias.el (eshell-maybe-replace-by-alias): Use ARGS.

2017-08-19  Ted Zlatanov  <tzz@lifelogs.com>

	* lisp/files.el (make-temp-file): Fix directory use case.

2017-08-19  Ted Zlatanov  <tzz@lifelogs.com>

	Fix and document make-temp-file optional text parameter

	* lisp/files.el (make-temp-file): Fix initial TEXT parameter.
	(files--make-magic-temp-file): Support optional TEXT parameter.
	* etc/NEWS: Document it.
	* doc/lispref/files.texi: Document it.
	* test/lisp/auth-source-tests.el: Minor reformat.

2017-08-19  Ted Zlatanov  <tzz@lifelogs.com>

	* test/lisp/auth-source-tests.el: Avoid `string-join' to be simple.

	* test/lisp/auth-source-tests.el: Minor cleanups to use CL.

2017-08-19  João Távora  <joaotavora@gmail.com>

	Fix default value of electric-pair-pairs and electric-pair-text-pairs

	(Bug#24901)

	A previous change, titled "Add support for curly quotation marks to
	electric-pair-mode", attempted to add these characters to the default
	value of these variables.  But it did so in a quoted list, preventing
	evaluation of the relevant expressions and resulting in an invalid
	format.

	* lisp/elec-pair.el (electric-pair-pairs, electric-pair-text-pairs):
	Use backquote and comma.

2017-08-19  Noam Postavsky  <npostavs@gmail.com>

	* lisp/elec-pair.el (electric-pair-text-pairs): Don't autoload (Bug#24901).

	* lisp/progmodes/elisp-mode.el (emacs-lisp-mode): Require `elec-pair'
	explicitly in the interactive case.

2017-08-19  Mats Lidell  <mats.lidell@cag.se>

	* etc/tutorials/TUTORIAL.sv: synced with TUTORIAL

2017-08-19  Ted Zlatanov  <tzz@lifelogs.com>

	Add auth-source tests and codify its API better

	The auth-source behavior was unclear in some API use cases, so these
	extra tests codify and test it. For details see
	https://github.com/DamienCassou/auth-password-store/issues/29

	* lisp/files.el (make-temp-file): Add new initial TEXT parameter.
	* test/lisp/auth-source-tests.el (auth-source-test-searches): Add
	  auth-source tests and simplify them with the new `make-temp-file'.

2017-08-18  Eli Zaretskii  <eliz@gnu.org>

	Don't call the same hook twice due to obsolete aliases

	* lisp/international/robin.el (robin-activate):
	* lisp/international/quail.el (quail-activate):
	* lisp/international/mule-cmds.el (deactivate-input-method):
	* lisp/emulation/viper-init.el (viper-deactivate-input-method):
	Don't call the same hook twice, when the obsolete and the
	advertised symbols are aliased.  (Bug#28118)

2017-08-18  Felipe Ochoa  <felipe@fov.space>  (tiny change)

	A new face for show-paren in expression mode

	* lisp/faces.el (show-paren-match-expression): Define the new face.
	* lisp/paren.el (show-paren-function): Apply the different face
	when in expression mode.  (Bug#28047)

2017-08-18  Eli Zaretskii  <eliz@gnu.org>

	Non-ASCII support for man page section and header names

	* lisp/man.el (Man-name-regexp, Man-page-header-regexp)
	(Man-heading-regexp): Replace ASCII character classes by
	equivalent classes that allow non-ASCII characters.  Suggested by
	Grégory Mounié <Gregory.Mounie@imag.fr>.  (Bug#27978)

2017-08-18  Eli Zaretskii  <eliz@gnu.org>

	Implement HiDPI support for underwave on MS-Windows

	* src/w32term.c (x_get_scale_factor): New function.
	(w32_draw_underwave): Use it.
	* src/xterm.c (x_draw_underwave): Offset the wave starting point
	to make it identical with original code.

2017-08-18  Stephen Pegoraro  <spegoraro@tutive.com>  (tiny change)

	Support HiDPI displays for wave style underlines

	* src/xterm.c (x_draw_underwave): Compute height, length and thickness
	based on scale factor.
	(x_get_scale_factor): New function.

2017-08-18  Bastien  <bzg@gnu.org>

	Delete library-of-babel.org

	* etc/org/library-of-babel.org: Delete file.

2017-08-18  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/files.texi (Copying and Naming): Avoid confusing texi2pdf.

2017-08-18  Noam Postavsky  <npostavs@gmail.com>

	Remove custom version parsing from epg-config.el (Bug#27963)

	* lisp/epg-config.el (epg-config--compare-version)
	(epg-config--parse-version): Remove.
	(epg-check-configuration): Use `version<=' instead.

2017-08-18  Mark Oteiza  <mvoteiza@udel.edu>

	Treat control characters in JSON strings as invalid

	* lisp/json.el (json-peek): Reduce to following-char.
	(json-pop, json-read): Zero (null char) means end of file.
	(json-read-escaped-char): Delimit URL properly.
	(json-read-string): Signal error for ASCII control characters.
	* test/lisp/json-tests.el (test-json-peek): Check for zero instead of
	:json-eof symbol.
	(test-json-read-string): New test for control characters in JSON
	strings.

2017-08-17  Eli Zaretskii  <eliz@gnu.org>

	Support Posix semantics of 'rename' on MS-Windows

	* src/w32.c (sys_rename_replace): Support Posix semantics of
	'rename': return an error if OLD is a directory while NEW is not,
	or vice versa.

2017-08-17  Eli Zaretskii  <eliz@gnu.org>

	* src/w32.c (sys_rename_replace): Support renaming a directory.

2017-08-17  Eli Zaretskii  <eliz@gnu.org>

	Fix the MS-Windows build

	* nt/gnulib-cfg.mk (OMIT_GNULIB_MODULE_open): Omit Gnulib module
	'open'.

	* lib-src/etags.c (O_CLOEXEC) [WINDOWSNT]: Restore definition.

2017-08-17  João Távora  <joaotavora@gmail.com>

	Add flymake-backends defcustom

	* lisp/progmodes/flymake-proc.el (flymake-proc-can-syntax-check-buffer):
	Rename from flymake-can-syntax-check-file.  Suitable for adding to
	flymake-backends.
	(flymake-proc-start-syntax-check): Rename from
	flymake-start-syntax-check.  Don't check again if buffer can be
	checked.
	(add-to-list flymake-backends): Hook only flymake-ui.el

	* lisp/progmodes/flymake-ui.el (flymake-backends): New
	defcustom.
	(flymake-on-timer-event, flymake-after-change-function)
	(flymake-after-save-hook, flymake-find-file-hook): Call new
	flymake--start-syntax-check-buffer and
	flymake--can-syntax-check-buffer.
	(flymake-mode): Call flymake--can-syntax-check-buffer and set
	flymake-backend.
	(flymake--backend): New buffer-local variable.

2017-08-17  João Távora  <joaotavora@gmail.com>

	Split flymake.el into flymake-proc.el and flymake-ui.el

	flymake.el is now a stub that requires both files.

	* lisp/progmodes/flymake-proc.el: New file.

	* lisp/progmodes/flymake-ui.el: New file.

	* lisp/progmodes/flymake.el: Split into flymake-ui.el and
	  flymake-proc.el.  Require both files.

2017-08-17  Michael Albinus  <michael.albinus@gmx.de>

	Set `default-directory' for watchdog in tramp-test.el

	* test/lisp/net/tramp-tests.el (tramp-test36-asynchronous-requests):
	Set `default-directory' for watchdog.

2017-08-17  Andreas Schwab  <schwab@suse.de>

	* lisp/term/konsole.el: New file.

2017-08-17  Noam Postavsky  <npostavs@gmail.com>

	* lisp/woman.el (woman-push, woman-pop): Remove.  (Bug#27962)

	(woman2-RS): Use plain `push' instead of `woman-push'.
	(woman2-RE): Conditionally `pop' instead of `woman-pop'.

2017-08-16  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Merge from Gnulib; use ‘open’ for O_CLOEXEC

	This incorporates:
	2017-08-15 renameat: ensure declaration in <stdio.h> on NetBSD
	2017-08-15 extensions: enable NetBSD specific extensions
	2017-08-14 open: support O_CLOEXEC
	2017-08-13 reallocarray: new module
	* admin/merge-gnulib (AVOIDED_MODULES): Remove ‘open’, since
	it now supports O_CLOEXEC and this simplifies Emacs.
	* build-aux/config.guess, lib/fcntl.in.h, lib/stdio.in.h:
	* lib/stdlib.in.h, m4/extensions.m4, m4/stdlib_h.m4:
	Copy from Gnulib.
	* lib/cloexec.c, lib/cloexec.h, lib/open.c:
	* m4/mode_t.m4, m4/open-cloexec.m4, m4/open.m4:
	New files, copied from Gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib-src/etags.c (O_CLOEXEC) [WINDOWSNT]:
	Remove, as Gnulib does this for us.
	* src/filelock.c (create_lock_file):
	* src/sysdep.c (emacs_open, emacs_pipe):
	Don’t worry about O_CLOEXEC == 0, as Gnulib no longer sets it to 0.

2017-08-16  Alan Third  <alan@idiocy.org>
	    Charles A. Roelli  <charles@aurox.ch>

	Allow use of run-time OS version checks on macOS (bug#27810)

	* src/nsterm.h (NSWindowTabbingMode): Define in pre-Sierra macOS.
	(MAC_OS_X_VERSION_10_6, MAC_OS_X_VERSION_10_7, MAC_OS_X_VERSION_10_8,
	MAC_OS_X_VERSION_10_9, MAC_OS_X_VERSION_10_12, HAVE_NATIVE_FS): Remove
	defines.
	(NSWindowStyleMaskFullScreen,
	NSWindowCollectionBehaviorFullScreenPrimary,
	NSApplicationPresentationFullScreen,
	NSApplicationPresentationAutoHideToolbar): Define in macOS 10.6.
	* src/nsterm.m (colorForEmacsRed, colorUsingDefaultColorSpace,
	check_native_fs, ns_read_socket, ns_select, runAlertPanel,
	initFrameFromEmacs, windowDidMiniaturize, windowDidEnterFullScreen,
	windowDidExitFullScreen, isFullscreen, updateCollectionBehavior,
	toggleFullScreen, constrainFrameRect, scrollerWidth, syms_of_nsterm):
	Allow use of run-time checks and replace version check macros.
	* src/nsfns.m (ns_screen_name): Use run-time OS version checks.
	* src/macfont.m (macfont_draw): Use run-time OS version checks.
	* src/nsmenu.m (menuWillOpen): Use run-time OS version checks.

2017-08-16  Alan Third  <alan@idiocy.org>

	Add multiframe image support to NS port (bug#21714)

	* src/nsimage.m (ns_load_image): Handle multiple frames.
	(EmacsImage::getMetadata, EmacsImage::setFrame): New functions.
	* src/nsterm.h (EmacsImage::getMetadata, EmacsImage::setFrame): New
	function prototypes.

2017-08-16  Tino Calancha  <tino.calancha@gmail.com>

	files-tests.el: Remove unused lexical variable

	* test/lisp/files-tests.el (file-test--do-local-variables-test);
	Remove unused var 'files-test-queried'.

2017-08-16  Michael Albinus  <michael.albinus@gmx.de>

	* doc/emacs/files.texi (Copying and Naming): Mention

	restrictions to add-name-to-file and make-symbolic-link on
	remote systems.

2017-08-16  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/ange-ftp.el (ange-ftp-skip-msgs): Further support ftp-ssl.

2017-08-16  Noam Postavsky  <npostavs@gmail.com>

	Add tests for previous commit

	* test/lisp/progmodes/elisp-mode-tests.el
	(elisp-mode-tests--face-propertized-string): New function.
	(elisp--highlight-function-argument-indexed)
	(elisp--highlight-function-argument-keyed-1)
	(elisp--highlight-function-argument-keyed-2): New tests.

2017-08-16  Thierry Volpiatto  <thierry.volpiatto@gmail.com>

	Fix eldoc highlighting for &key args (Bug#27272)

	* lisp/progmodes/elisp-mode.el (elisp--highlight-function-argument):
	Only switch to keyword-based searching if INDEX point beyond `&key' in
	the argument list.  All arguments prior to the `&key' are position
	based.  Additionally, be more strict about what is a keyword when
	searching for the current keyword.

2017-08-15  Paul Eggert  <eggert@cs.ucla.edu>

	Do not assume regular Git .git/hooks dir

	Apparently Gitlab doesn’t create .git/hooks, like regular Git does.
	Problem reported by Ted Zlatanov in:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00380.html
	* autogen.sh (git_sample_hook_src): New function.  Use it to work
	even if .git/hooks or its samples do not exist.

2017-08-15  Paul Eggert  <eggert@cs.ucla.edu>

	New manual section "Copying and Naming"

	* doc/emacs/files.texi (Copying and Naming):
	New section, split off from Misc File Ops and containing the
	operations that copy, name or rename files.  This fixes some
	confusion caused by the incorrect phrase "The same rule applies
	to all the remaining commands in this section" in the old manual.
	This change does not affect the confusion about directories (see
	Bug#27986 for ongoing discussion).

2017-08-15  Eli Zaretskii  <eliz@gnu.org>

	Fix the MS-Windows build

	* src/fileio.c (Frename_file): Don't use ENOTSUP if it is equal to
	ENOSYS.  (Bug#28097)  (Bug#27986)

2017-08-15  Ted Zlatanov  <tzz@lifelogs.com>

	* .gitlab-ci.yml: run "autogen.sh autoconf" to avoid Git.

	* .gitlab-ci.yml: add Git to the installed packages.

2017-08-15  Simen Heggestøyl  <simenheg@gmail.com>

	Support indentation of detached Less CSS rulesets

	* lisp/textmodes/css-mode.el (css-smie-rules): Provide better support
	for indentation of detached rulesets passed to Less mixins.

	* test/manual/indent/less-css-mode.less: New file.

2017-08-15  Simen Heggestøyl  <simenheg@gmail.com>

	Fixes and tweaks for the new Less CSS mode

	* etc/NEWS: Add an entry for the new mode.

	* lisp/textmodes/less-css-mode.el (less-css): Tweak docstring.
	(less-css-lessc-command): Tweak docstring. Don't mark it as
	safe. Don't autoload.
	(less-css-compile-at-save, less-css-lessc-options)
	(less-css-output-directory): Tweak docstrings. Don't autoload.
	(less-css-output-file-name): Tweak docstring. Don't mark it as safe.
	(less-css-input-file-name): Tweak docstring. Don't autoload.
	(less-css-compile-maybe): Use `when' for one-armed `if'.
	(less-css--output-path): Tweak docstring.
	(less-css--maybe-shell-quote-command): Remove function.
	(less-css-compile): Don't autoload. Tweak docstring and message. Fix
	compiler warning. Use `string-join' instead of `mapconcat'.
	(less-css-font-lock-keywords): Use `font-lock-variable-name-face' for
	variables.
	(less-css-mode-syntax-table, less-css-mode-map): New variables.
	(less-css-mode): Change status line mode name from "LESS" to
	"Less". Tweak docstring. Move syntax table definitions to
	`less-css-mode-syntax-table'.
	(less-css-indent-line): Remove function.

2017-08-15  Steve Purcell  <steve@sanityinc.com>

	New major mode: Less CSS mode

	* lisp/textmodes/less-css-mode.el: New file.

2017-08-15  Tino Calancha  <tino.calancha@gmail.com>

	archive-int-to-mode: Fix order of testing S_ISUID, S_ISGID bits

	* lisp/arc-mode.el (archive-int-to-mode):
	Swap order of 2048 and 1024 tests (Bug#28092).
	* test/lisp/arc-mode-tests.el (arc-mode-test-archive-int-to-mode):
	Update test.

2017-08-15  Paul Eggert  <eggert@cs.ucla.edu>

	Improve rename-file port to macOS

	* src/fileio.c (Frename_file): On macOS, renameat_noreplace can
	fail with errno == ENOTSUP on file systems where it is not
	supported, according to the Apple documentation.

2017-08-15  Noam Postavsky  <npostavs@gmail.com>

	Speed up ./configure with more caching (Bug#27960)

	* configure.ac: Cache the 'GTK compiles', 'GSettings is in gio',
	'LN_S', '-znocombreloc', 'sysinfo', 'gcc autodepends', '-b link',
	'Xkb', 'Xpm preprocessor', 'tputs library' 'GLib', 'signals via
	characters', and 'Windows API header' checks.  Remove pause after
	warning about GTK bug.

2017-08-15  Paul Eggert  <eggert@cs.ucla.edu>

	Improve rename-file behavior on macOS

	Problem reported by Philipp Stephani (Bug#27986).
	* src/fileio.c (Frename_file):
	Worry about file name case sensitivity only if CYGWIN or DOS_NT.
	* src/sysdep.c (renameat_noreplace): Use renameatx_np on macOS,
	since this provides the necessary atomicity guarantees.

2017-08-14  Glenn Morris  <rgm@gnu.org>

	Clean up temp files after some tests

	* test/lisp/emacs-lisp/bytecomp-tests.el
	(bytecomp-tests--with-temp-file): Also delete .elc file if present.
	* test/lisp/progmodes/etags-tests.el
	(etags-buffer-local-tags-table-list): Delete temp file at end.

2017-08-14  Eli Zaretskii  <eliz@gnu.org>

	Implement renameat_noreplace for MS-Windows

	* src/sysdep.c (renameat_noreplace) [WINDOWSNT]: Implement minimal
	emulation for MS-Windows.  (Bug#27986)

2017-08-14  Eli Zaretskii  <eliz@gnu.org>

	Fix 'rename' on MS-Windows

	* src/w32.c (sys_rename_replace): Use the FORCE argument only if
	the primitive rename errors out with EEXIST.

2017-08-14  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/ange-ftp.el (ange-ftp-skip-msgs): Support ftp-ssl.

2017-08-14  Mark Oteiza  <mvoteiza@udel.edu>

	Tiny JSON performance improvement

	Get rid of some needless uses of apply.  Measuring with
	  (benchmark-run 10 (json-read-file "test.json"))
	showed 1.5-2.5% reduction of execution time.
	* lisp/json.el (json-peek): Nix let-binding.
	(json-read-string): Use concat for making a string from chars.
	(json-read-array): Use cond and more appropriate conversion instead
	of blindly applying.

2017-08-13  Paul Eggert  <eggert@cs.ucla.edu>

	Be consistent in spelling 'ok-if-already-exists'.

2017-08-13  Alexander Gramiak  <agrambot@gmail.com>

	Use 'header-line-highlight' face in proced and erc

	* lisp/erc/erc-list.el (erc-list-button):
	* lisp/proced.el (proced-format): Use the 'header-line-highlight
	face.  (Bug#28033)

2017-08-13  Ulf Jasper  <ulf.jasper@web.de>

	Remove feeds with dead uris from newsticker--raw-url-list-defaults

	* lisp/net/newst-backend.el (newsticker--raw-url-list-defaults):
	  Remove feeds with dead uris.

2017-08-13  Eli Zaretskii  <eliz@gnu.org>

	Fix vertical cursor motion when cursor is on the fringe

	* lisp/simple.el (line-move-visual): Fix an off-by-one error in
	setting temporary-goal-column when newline overflows into the
	fringe.  Support that use case in R2L paragraphs as well.

2017-08-13  Eli Zaretskii  <eliz@gnu.org>

	Fix vertical cursor motion across too wide images

	* src/indent.c (Fvertical_motion): If lines are truncated and we
	end up beyond the right margin of the window, don't assume we are
	in the next screen line, unless VPOS actually says so.  (Bug#28071)

2017-08-13  Tino Calancha  <tino.calancha@gmail.com>

	Add test suites for arc-mode and tar-mode

	* test/lisp/arc-mode-tests.el (arc-mode-test-archive-int-to-mode)
	* test/lisp/tar-mode-tests.el (tar-mode-test-tar-grind-file-mode):
	New tests.

2017-08-13  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/tar-mode.el (tar-grind-file-mode): Fix docstring

2017-08-13  Ulf Jasper  <ulf.jasper@web.de>

	Fix uri of Emacs Wiki

	* lisp/net/newst-backend.el (newsticker--raw-url-list-defaults): Fix
	  uri of Emacs Wiki.  (Bug#27981)

2017-08-13  Paul Eggert  <eggert@cs.ucla.edu>

	Fix make-temp-file bug with ""/"."/".." prefix

	The bug with "." and ".." has been present for a while; I
	introduced the bug with "" earlier today in my patch for Bug#28023.
	* lisp/files.el (make-temp-file): Do not use expand-file-name if
	PREFIX is empty or "." or "..", as it does the wrong thing.
	Compute absolute-prefix here ...
	(files--make-magic-temp-file): ... instead of here ...
	* src/fileio.c (Fmake_temp_file_internal): ... or here.

	* lisp/files.el (make-temp-file): If the prefix is empty, append
	"/" to the absolute prefix so that the new files are children
	rather than siblings of temporary-file-directory.  This fixes a
	bug introduced in the previous change.
	* test/lisp/files-tests.el (files-test-make-temp-file-empty-prefix):
	New test, for the bug.

2017-08-13  Paul Eggert  <eggert@cs.ucla.edu>

	Improve make-temp-file performance on local files

	For the motivation behind this patch, please see Bug#28023 and:
	http://emacshorrors.com/posts/make-temp-name.html
	Although, given the recent changes to Tramp, the related security
	problem in make-temp-file is already fixed, make-temp-file still has
	several unnecessary system calls.  In the typical case on GNU/Linux,
	this patch replaces 8 syscalls (symlink, open, close, readlinkat, uname,
	getpid, unlink, umask) by 2 (open, close).
	* admin/merge-gnulib (GNULIB_MODULES): Add tempname, now
	that Emacs is using it directly.
	* configure.ac (AUTO_DEPEND): Remove AC_SYS_LONG_FILE_NAMES;
	no longer needed.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lisp/files.el (files--make-magic-temp-file): Rename from
	make-temp-file.
	(make-temp-file): Use make-temp-file-internal for
	non-magic file names.
	* src/fileio.c: Include tempname.h.
	(make_temp_name_tbl, make_temp_name_count)
	(make_temp_name_count_initialized_p, make_temp_name): Remove.
	(Fmake_temp_file_internal): New function.
	(Fmake_temp_name): Use it.
	* src/filelock.c (get_boot_time): Use Fmake_temp_file_internal
	instead of make_temp_name.

2017-08-12  Paul Eggert  <eggert@cs.ucla.edu>

	Document internal-use naming conventions

	* doc/lispref/functions.texi (Function Names):
	* doc/lispref/variables.texi (Tips for Defining):
	Document naming conventions for internal-use functions and vars.
	See Bug#28023#59.

2017-08-12  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify re and document 'autoconf.sh all'

	* GNUmakefile (ALL_IF_GIT): Remove; no longer needed, now that
	./autogen.sh defaults to "all".  All uses removed.
	* README: Mention autoconf.sh's effect on Git configuration.

2017-08-12  Paul Eggert  <eggert@cs.ucla.edu>

	Default autogen.sh to 'all'

	This addresses a problem noted by RMS in:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00052.html
	* autogen.sh (do_git): Set to true if this script is invoked
	with no arguments and there is a .git subdirectory.

2017-08-12  Paul Eggert  <eggert@cs.ucla.edu>

	Adjust jka-compr to recent Tramp changes.

	* lisp/jka-compr.el (jka-compr-write-region):
	Two new args LOCKNAME and MUSTBENEW.

2017-08-12  Eli Zaretskii  <eliz@gnu.org>

	Improve doc strings of 2 functions in simple.el

	* lisp/simple.el (beginning-of-visual-line)
	(move-beginning-of-line): Doc fix.  Reported by
	Justin Burkett <justin@burkett.cc>.

2017-08-12  Eli Zaretskii  <eliz@gnu.org>

	Fix completion on directory names on MS-DOS/MS-Windows

	* src/msdos.c (faccessat):
	* src/w32.c (faccessat): Support relative file names, and add D_OK
	to 'mode' if the argument is a directory.  This unbreaks file-name
	completion when the completion result is a directory.

2017-08-12  Michael Albinus  <michael.albinus@gmx.de>

	Implement EXCL of write-region for Tramp

	* lisp/net/ange-ftp.el (ange-ftp-write-region):
	* lisp/net/tramp-adb.el (tramp-adb-handle-write-region)
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-write-region):
	* lisp/net/tramp-sh.el (tramp-sh-handle-write-region)
	* lisp/net/tramp-smb.el (tramp-smb-handle-write-region):
	Implement MUSTBENEW.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-do-copy-or-rename-file)
	* lisp/net/tramp-sh.el (tramp-sh-handle-make-symbolic-link)
	(tramp-sh-handle-add-name-to-file)
	(tramp-do-copy-or-rename-file)
	* lisp/net/tramp-smb.el (tramp-smb-handle-make-symbolic-link):
	Adapt error message for `file-already-exists'.

	* src/lisp.h:
	* src/eval.c (call8): New function.

	* src/fileio.c (write_region): Pass also lockname and
	mustbenew to the file name handler.

	* test/lisp/net/tramp-tests.el (tramp-test10-write-region):
	Add tests for MUSTBENEW.

2017-08-12  Eli Zaretskii  <eliz@gnu.org>

	Adapt Proced display to display-line-numbers

	* lisp/proced.el (proced-header-line): Account for the width taken
	by display-line-numbers.  (Bug#27895)

2017-08-12  Eli Zaretskii  <eliz@gnu.org>

	Adapt tabulated list when display-line-number is turned on

	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-mode): Add
	a hook to revert the display when display-line-numbers is turned
	on.  (Bug#27895)

2017-08-12  Eli Zaretskii  <eliz@gnu.org>

	Use Gnulib 'tempname' on MS-Windows

	* lib-src/ntlib.h (mkdir, open): Remove redefinitions.  They are
	now in nt/inc/ms-w32.h.
	* lib-src/ntlib.c (sys_mkdir, sys_open): New functions.
	(mkostemp): Remove.

	* src/w32.c (mkostemp): Remove.
	(sys_mkdir): Accept a second (unused) argument.
	* src/fileio.c (Fmake_directory_internal): Remove the WINDOWSNT
	specific call to mkdir.  (Bug#28023)

	* nt/inc/ms-w32.h (mkdir): Remove from "#ifdef emacs" and redefine
	to accept 2 arguments.
	(open): Remove from "#ifdef emacs".
	* nt/mingw-cfg.site (ac_cv_func_mkostemp): Remove.
	* nt/gnulib-cfg.mk (OMIT_GNULIB_MODULE_mkostemp)
	(OMIT_GNULIB_MODULE_tempname): Remove.

2017-08-12  Alexander Gramiak  <agrambot@gmail.com>

	Add new face 'header-line-highlight'

	* lisp/faces.el: Define the face.
	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-init-header):
	* lisp/info.el (Info-fontify-node): Use the new face.
	* doc/emacs/display.texi (Standard Faces):
	* etc/NEWS: Document the new face.  (Bug#28033)

2017-08-12  Arash Esbati  <arash@gnu.org>

	Make a case-sensitive match for strings

	* lisp/textmodes/reftex.el (reftex-typekey-check): Temporarily
	let-bind `case-fold-search' to nil in order to be case-sensitive
	when matching a string.  (Bug#27518)

2017-08-11  Stephen Berman  <steve@rosalinde.fritz.box>

	Fix a minor todo-mode regression

	* lisp/calendar/todo-mode.el (todo-get-overlay): Wrap in
	save-excursion.  This fixes a regression introduced by the fix
	for bug#27609, whereby trying to raise the priority of the
	first item or lower the priority of the last item, which
	should be noops, moves point to the item's start.  Clarify
	comment.

	* test/lisp/calendar/todo-mode-tests.el
	(todo-test-raise-lower-priority): Add test cases for trying to
	raise first item and lower last item.
	(with-todo-test): Clear abbreviated-home-dir, since we change HOME.
	(todo-test-toggle-item-header02): Remove ":expected-result
	:failed" and tests of point after todo-next-item, since the
	effect when using Todo mode is not reproducible in the test
	environment.  Add commentary about this.

2017-08-11  Paul Eggert  <eggert@cs.ucla.edu>

	Improve performance for rename-file etc.

	Although this does not fix Bug#27986, it is a step forward.
	I plan to propose a more-significant patch later.
	* lisp/files.el (directory-name-p): Move from here ...
	* src/fileio.c (Fdirectory_name_p): ... to here.
	(directory_like, cp_like_target): New static functions.
	(Fcopy_file, Frename_file, Fadd_name_to_file)
	(Fmake_symbolic_link):
	Use them, to avoid directory-testing syscalls on file names that
	must be directories if they exist.  Omit unnecessary
	initializations and CHECK_STRING calls.
	(Frename_file): Don't call file_name_case_insensitive_p
	twice on the same file.  Compare both file names expanded, instead
	of the old name expanded and the new one unexpanded.

2017-08-11  Noam Postavsky  <npostavs@gmail.com>

	Respect buffer-local value of tags-table-list (Bug#27772)

	* lisp/progmodes/etags.el (visit-tags-table-buffer): Save the current
	buffer around the `tags-table-including' calls so as to get buffer
	local variables from the right buffer later.
	* test/lisp/progmodes/etags-tests.el (etags-visit-tags-table-buffer):
	New test.
	* test/lisp/progmodes/etags-tests.el (etags-tests--test-dir): New
	constant.
	(etags-bug-158, etags-bug-23164): Use it so that when running the test
	interactively, setting EMACS_TEST_DIRECTORY is not needed.

2017-08-10  Tom Tromey  <tom@tromey.com>

	Fix auto-filling regression

	Bug#28003
	* lisp/newcomment.el (comment-indent-new-line): Check
	comment-auto-fill-only-comments.  Reverts earlier change.
	* lisp/simple.el (internal-auto-fill): Call auto-fill-function, not
	do-auto-fill.

2017-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-08-09 tempname: do not depend on secure_getenv
	2017-08-08 extensions: add _OPENBSD_SOURCE
	2017-08-06 manywarnings: Add support for C++
	2017-08-06 warnings, manywarnings: Add support for multiple languages
	* admin/merge-gnulib: Don't use m4/manywarnings-c++.m4.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib/secure_getenv.c, m4/secure_getenv.m4: Remove.
	* lib/tempname.c, m4/extensions.m4, m4/manywarnings.m4, m4/warnings.m4:
	Copy from gnulib.

2017-08-09  Eli Zaretskii  <eliz@gnu.org>

	Fix crashing emacs-module tests on MS-Windows

	* src/w32fns.c (syms_of_w32fns) <w32-disable-abort-dialog>: New
	variable.
	(emacs_abort): If w32-disable-abort-dialog is non-nil, abort right
	away, without displaying the Abort dialog, which waits for the user.

	* test/src/emacs-module-tests.el (module--test-assertion): Run the
	inferior Emacs with the w32 abort dialog disabled.  Expect the
	status of the aborted Emacs sub-process to be 3 on MS-Windows and
	2 on MS-DOS.

2017-08-09  Tino Calancha  <tino.calancha@gmail.com>

	dired-delete-file:  Dont't ask for empty dirs

	* lisp/dired.el (dired--yes-no-all-quit-help): New defun.
	(dired-delete-file): Use it.  Dont't ask for empty dirs (Bug#27940).

	* test/lisp/dired-tests.el (dired-test-with-temp-dirs):
	New auxiliar macro.
	(dired-test-bug27940): Add new test.

2017-08-09  Tino Calancha  <tino.calancha@gmail.com>

	Ask files for deletion in buffer order: top first, botton later

	* lisp/dired.el (dired-do-flagged-delete, dired-do-delete):
	Call `nreverse' t invert the output of `dired-map-over-marks'.

2017-08-09  Alexander Gramiak  <agrambot@gmail.com>

	Use help-mode xrefs in describe-font

	* lisp/international/mule-diag.el (describe-font): Use help-setup-xref
	(Bug#27890).

2017-08-09  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't try to jump to non-existent part (bug#28013)

	* lisp/gnus/gnus-art.el (gnus-article-edit-part): Don't try to jump to
	the next part if there is the only one part in the article (bug#28013).

2017-08-08  Mark Oteiza  <mvoteiza@udel.edu>

	Replace some uses of eval

	There are a number of places where eval is used unnecessarily to get
	or set the value of a symbol.
	* lisp/calendar/calendar.el (diary-date-forms): Use default-value in
	custom setter.
	* lisp/desktop.el (desktop-clear): Use set-default instead.
	* lisp/international/ogonek.el (ogonek-read-encoding): Use
	symbol-value.

2017-08-08  Mark Oteiza  <mvoteiza@udel.edu>

	Convert uses of looking-at in viper-ex to following-char

	* lisp/emulation/viper-ex.el (viper-get-ex-token): Bind
	(following-char) and use it in the subsequent cond's clauses.
	(viper-ex, ex-quit, viper-get-ex-file): Use following-char instead.
	Convert single branch ifs to when

2017-08-08  Mark Oteiza  <mvoteiza@udel.edu>

	Some cleanup in message.el

	* lisp/gnus/message.el (message-cross-post-insert-note):
	(message-strip-forbidden-properties): Mark unused args.
	(message-canlock-generate): Remove extinct variable
	sha1-maximum-internal-length.
	(message-make-mail-followup-to): Use loop's thereis clause.

2017-08-08  Paul Eggert  <eggert@cs.ucla.edu>

	Document make-temp-name magic limitations

	* doc/lispref/files.texi (Unique File Names):
	* src/fileio.c (Fmake_temp_name): Document that make-temp-name
	does not guarantee uniqueness on magic file names.

2017-08-08  Tom Tromey  <tom@tromey.com>

	Show number of errors in compilation-mode mode-line

	Bug#25354
	* lisp/progmodes/compile.el (compilation-num-errors-found): Provide
	default value.
	(compilation-num-warnings-found, compilation-num-infos-found): New
	defvars.
	(compilation-mode-line-errors): New defconst.
	(compilation-face): Remove.
	(compilation-type, compilation--note-type): New functions.
	(compilation-parse-errors): Call compilation--note-type.
	(compilation-start): Include compilation-mode-line-errors in
	mode-line-process.
	(compilation-setup): Initialize compilation-num-* variables to 0.
	(compilation-handle-exit): Include compilation-mode-line-errors in
	mode-line-process.
	* doc/emacs/building.texi (Compilation): Document new feature.

2017-08-08  Mark Oteiza  <mvoteiza@udel.edu>

	Do some cleanup in mailcap.el

	* lisp/net/mailcap.el: Use lexical-binding.
	(mailcap--set-user-mime-data, mailcap-possible-viewers): Use pcase
	destructuring.
	(mailcap-mime-data): Remove some entries for ancient functions.
	(mailcap-parse-mailcaps, mailcap-mime-info): Nix single-branch ifs.
	(mailcap-parse-mimetype-file): Just use append.
	(mailcap-command-p): Remove unused function.

2017-08-08  Tino Calancha  <tino.calancha@gmail.com>

	query-replace: Undo replacements performed with 'comma

	During a `query-replace', the char ',' replaces the character
	at point and doesn't move point;  right after, the char 'u'
	must undo such replacement (Bug#27268).
	* lisp/replace.el (replace--push-stack):
	New macro extracted from `perform-replace'.
	(perform-replace): Use it.
	* test/lisp/replace-tests.el (query-replace--undo): Add test.

2017-08-08  Noam Postavsky  <npostavs@gmail.com>

	Don't define gv expanders in compiler's runtime (Bug#27016)

	This prevents definitions being compiled from leaking into the current
	Emacs doing the compilation.
	* lisp/emacs-lisp/gv.el (gv-define-expander): Use function-put instead
	of `put' with `eval-and-compile'.
	* test/lisp/emacs-lisp/gv-tests.el: New tests.

2017-08-08  Noam Postavsky  <npostavs@gmail.com>

	Let the cl-typep effects of defclass work during compilation (Bug#27718)

	* lisp/emacs-lisp/eieio.el (defclass): Use `define-symbol-prop'
	instead of `put'.
	* test/lisp/emacs-lisp/eieio-tests/eieio-tests.el
	(eieio-tests--dummy-function): Remove.
	(eieio-test-25-slot-tests, eieio-test-23-inheritance-check): Don't
	expect to fail if compiled.

2017-08-08  Stefan Monnier  <monnier@IRO.UMontreal.CA>
	    Noam Postavsky  <npostavs@gmail.com>

	Let `define-symbol-prop' take effect during compilation

	* src/fns.c (syms_of_fns): New variable `overriding-plist-environment'.
	(Fget): Consult it.
	* lisp/emacs-lisp/bytecomp.el (byte-compile-close-variables): Let-bind
	it to nil.
	(byte-compile-define-symbol-prop): New function, handles compilation
	of top-level `define-symbol-prop' and `function-put' calls by putting
	the symbol setting into `overriding-plist-environment'.

2017-08-08  Gemini Lasswell  <gazally@runbox.com>

	Add a test of handling of circular values to testcover-tests

	* test/lisp/emacs-lisp-testcover-resources/testcases.el
	(testcover-testcase-cyc1): New function.
	(testcover-tests-circular-lists-bug-24402): New test.

2017-08-08  Noam Postavsky  <npostavs@gmail.com>

	Don't error on circular values in testcover

	* lisp/emacs-lisp/testcover.el (testcover-after, testcover-1value):
	Consider circular lists to be non-equal instead of signaling error.

2017-08-08  Alexander Gramiak  <agrambot@gmail.com>

	Catch argument and macroexpansion errors in ert

	This kludge catches errors caused by evaluating arguments in ert's
	should, should-not, and should-error macros; it also catches
	macroexpansion errors inside of the above macros (Bug#24402).

	* lisp/emacs-lisp/ert.el: (ert--should-signal-hook): New function.
	(ert--expand-should-1): Catch macroexpansion errors.
	* test/lisp/emacs-lisp/ert-tests.el (ert-test-should-error-argument)
	(ert-test-should-error-macroexpansion): Tests for argument and
	expansion errors.

2017-08-07  Reuben Thomas  <rrt@sc3d.org>

	Revert "Add Enchant support to ispell.el (Bug#17742)"

	This reverts commit 7136e6723d87b51ae3089f5ceef6b14621bfaf87.

2017-08-07  Reuben Thomas  <rrt@sc3d.org>

	Revert "Add support for arguments in ALTERNATE_EDITOR to emacsclient"

	This reverts commit 28f1fe97daa13e13714e6c43c9a6fbb0c0e99a26.

2017-08-07  Reuben Thomas  <rrt@sc3d.org>

	Add support for arguments in ALTERNATE_EDITOR to emacsclient

	* lib-src/emacsclient.c (fail): Parse ALTERNATE_EDITOR, or
	corresponding command-line argument, into space-separated tokens.
	* etc/NEWS: Document.
	* test/lib-src/emacsclient-tests.el: Add a test.

2017-08-07  Reuben Thomas  <rrt@sc3d.org>

	Add Enchant support to ispell.el (Bug#17742)

	* lisp/textmodes/ispell.el (ispell-program-name): Add “enchant”.
	(ispell-really-enchant): Add variable.
	(ispell-check-version): If using Enchant, check it’s new enough (at
	least 1.6.1).  (Like the ispell check, this is absolute: cannot work
	without.)
	(ispell-enchant-dictionary-alist): Add variable.
	(ispell-find-enchant-dictionaries): Add function, based on
	ispell-find-aspell-dictionaries.
	(ispell-set-spellchecker-params): Allow dictionary auto-detection for
	Enchant, and call ispell-find-enchant-dictionaries to find them.  Use
	old ispell name to locale mapping code for Enchant too.
	(ispell-send-replacement): Make it work with Enchant.

2017-08-07  Reuben Thomas  <rrt@sc3d.org>

	Allow async command output buffer to be shown only on output

	* lisp/simple.el (async-shell-command-display-buffer): Add
	defcustom.
	(shell-command): Use the new defcustom to determine whether to show
	the buffer immediately, or add a process filter that shows it only
	when there is some output.
	* etc/NEWS: Document the new variable.
	* doc/emacs/misc.texi: Likewise.

	Thanks to Juri Linkov and Eli Zaretskii for advice and guidance.

2017-08-07  Eli Zaretskii  <eliz@gnu.org>

	Fix infinite recursion under prettify-symbols-mode and linum-mode

	* src/xdisp.c (get_overlay_strings_1)
	(handle_single_display_spec, push_prefix_prop): Invalidate the
	composition information before starting to iterate on a string.
	Otherwise we might think in set_iterator_to_next that we are
	delivering characters from a composition, and do all kinds of
	nonsensical things, like over-step the string end.  (Bug#27761)

2017-08-07  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/gnus/gnus-bcklg.el (gnus-backlog-request-article): Fix thinko.

2017-08-07  Martin Rudalics  <rudalics@gmx.at>

	Fix doc-string of `delete-other-windows'

	* lisp/window.el (delete-other-windows): Fix doc-string.

2017-08-07  Paul Eggert  <eggert@cs.ucla.edu>

	Fix a couple more make-temp-file races

	* lisp/files.el (basic-save-buffer-2, move-file-to-trash):
	Use make-temp-name, not make-temp-file with retry.
	(basic-save-buffer-2): Use condition-case, instead of
	unwind-protect with a success flag.

2017-08-07  Noam Postavsky  <npostavs@gmail.com>

	Merge null and without-null regexp alists (Bug#27840, Bug#27873)

	* lisp/progmodes/grep.el (grep-mode-font-lock-keywords): Allow for NUL
	characters following filename in grep context lines.
	(grep--regexp-alist-column, grep--regexp-alist-bin-matcher)
	(grep-with-null-regexp-alist, grep-fallback-regexp-alist): Remove.
	(grep-regexp-alist): Recombine their contents here.
	(grep-mode):
	* lisp/cedet/semantic/symref/grep.el
	(semantic-symref-parse-tool-output-one-line):
	* lisp/progmodes/xref.el (xref-collect-matches): Use the variable
	`grep-regexp-alist' rather than the function.

2017-08-07  Paul Eggert  <eggert@cs.ucla.edu>

	Fix some crashes on self-modifying Elisp code

	Prompted by a problem report by Alex in:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00143.html
	* src/eval.c (For, Fprogn, Fsetq, FletX, eval_sub):
	Compute XCDR (x) near XCAR (x); although this doesn't fix any bugs,
	it is likely to run a bit faster with typical hardware caches.
	(Fif): Use Fcdr instead of XCDR, to avoid crashing on
	self-modifying S-expressions.
	(Fsetq, Flet, eval_sub): Count the number of arguments as we go
	instead of trusting an Flength prepass, to avoid problems when the
	code is self-modifying.
	(Fquote, Ffunction, Fdefvar, Fdefconst): Prefer !NILP to CONSP
	where either will do.  This is mostly to document the fact that
	the value must be a proper list.  It's also a tiny bit faster on
	typical machines nowadays.
	(Fdefconst, FletX): Prefer XCAR+XCDR to Fcar+Fcdr when either will do.
	(eval_sub): Check that the args are a list as opposed to some
	other object that has a length. This prevents e.g. (if . "string")
	from making Emacs dump core in some cases.
	* test/src/eval-tests.el (eval-tests--if-dot-string)
	(eval-tests--let-with-circular-defs, eval-tests--mutating-cond):
	New tests.

2017-08-06  Eli Zaretskii  <eliz@gnu.org>

	* etc/tutorials/TUTORIAL.he: Update to match recent changes to TUTORIAL.

2017-08-06  Tino Calancha  <tino.calancha@gmail.com>

	Minor tweak in a dired test

	* test/lisp/dired-tests.el (dired-test-bug27968):
	Ensure the new header has different length than the original one.

2017-08-06  Tino Calancha  <tino.calancha@gmail.com>

	dired-delete-file: Do not TAB complete the user answer

	This action might delete directories containing valuable information.
	Before previous commit, we prompted users with `yes-or-no-p'
	which doesn't TAB complete the user answer.  Let's play safe and
	keep requiring full answers.
	* lisp/dired.el (dired-delete-file): Use `read-string'
	instead of `completing-read' to read the user answers.

2017-08-06  Tino Calancha  <tino.calancha@gmail.com>

	dired-do-delete: Allow to delete dirs recursively without prompts

	* lisp/dired.el (dired-delete-file): Accept 2 additional answers:
	'all', to delete all directories recursively and no prompt anymore.
	'quit', to cancel directory deletions (Bug#27940).
	Show help message when user inputs 'help'.
	(dired-do-flagged-delete): Bind locally dired-recursive-deletes
	so that we can overwrite its global value.
	Wrapp the loop within a catch '--delete-cancel to catch when
	the user abort the directtry deletion.
	* doc/emacs/dired.texi (Dired Deletion): Update manual.
	* etc/NEWS (Changes in Specialized Modes and Packages in Emacs 26.1):
	Announce this change.

2017-08-06  Paul Eggert  <eggert@cs.ucla.edu>

	Fix a couple of make-temp-file races

	* lisp/emacs-lisp/autoload.el (autoload--save-buffer):
	* lisp/emacs-lisp/bytecomp.el (byte-compile-file):
	Use make-temp-file, not make-temp-name, to avoid an unlikely race
	that could lose data.  Remove the deletion hook as quickly as
	possible after the file is renamed; though a race still remains
	here, it is smaller than before.

2017-08-06  Tino Calancha  <tino.calancha@gmail.com>

	Dired w/ eshell-ls: Handle shell wildcards in file name

	* lisp/eshell/em-ls.el (eshell-ls--insert-directory):
	Use eshell-extended-glob (Bug#27844).
	* test/lisp/dired-tests.el (dired-test-bug27844): Add test.

2017-08-06  Tino Calancha  <tino.calancha@gmail.com>

	dired-revert: save line numbers instead of positions

	Positions might change if the length of one dired header line
	changes; this happen, for instance, if we add new files.
	Instead, line numbers are invariant under shrinks/enlargements
	of the file header.
	https://lists.gnu.org/r/emacs-devel/2017-07/msg01092.html
	* lisp/dired.el (dired-save-positions): Save the line numbers at point.
	(dired-restore-positions): Use forward-line to restore the original
	position (Bug#27968).
	* test/lisp/dired-tests.el (dired-test-bug27968): Add test.

2017-08-06  Tom Tromey  <tom@tromey.com>

	Respect comment-auto-fill-only-comments

	Respect comment-auto-fill-only-comments when auto-filling and a
	comment syntax is defined.

	* lisp/newcomment.el (comment-indent-new-line): Do not check
	comment-auto-fill-only-comments.
	* lisp/simple.el (internal-auto-fill): New defun.
	* src/cmds.c (internal_self_insert): Call Qinternal_auto_fill, not
	auto_fill_function.
	(syms_of_cmds): Define Qinternal_auto_fill.

2017-08-05  Richard Stallman  <rms@gnu.org>

	* etc/tutorials/TUTORIAL: Update.

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Unify CNS11643-15 in a way that avoids segfaults

	* lisp/international/mule-conf.el: Redo unification of
	cns11643-15.  (Bug#27964)
	(chinese-cns11643-15): Add the missing :unify-map attribute.

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Avoid segfaults while producing Punct.el

	* lisp/international/mule-conf.el: Undo unification of
	cns11643-15, as that causes segfaults during bootstrap.
	(Bug#27964)

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Make header line in some modes be sensitive to display-line-numbers

	* lisp/ruler-mode.el (ruler-mode-ruler, ruler-mode-window-col):
	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-init-header)
	(tabulated-list-print-entry): Account for the width taken by
	line-number display.  (Bug#27895)

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Fix a bug in 'generate-new-buffer-name'

	* src/buffer.c (Fgenerate_new_buffer_name): Test IGNORE for being
	nil before calling string-equal, since the latter will compare
	"nil and 'nil' as equal.  (Bug#27966)

	* test/src/buffer-tests.el
	(test-generate-new-buffer-name-bug27966): New test.

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Unify CNS11643-15

	* lisp/international/mule-conf.el (chinese-cns11643-15): Add a
	unify-charset form for it.  (Bug#27964)

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Improve test of error message when Emacs cannot be suspended

	* lisp/term/x-win.el (x-win-suspend-error):
	* lisp/term/ns-win.el (ns-suspend-error): Improve the error
	message.  (Bug#27901)

2017-08-05  Alexander Gramiak  <agrambot@gmail.com>

	Make "C-h o" show faces as well as variables

	* lisp/faces.el (describe-face): Return (buffer-string).  Reorder
	the placement of variables/faces in describe-symbol, to put more
	emphasis on the variable entry rather than the face.  (Bug#24543)

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Fix files-tests.el for MS-Windows

	* test/lisp/files-tests.el
	(files-tests--file-name-non-special--subprocess): Fix this test
	for MS-Windows.

2017-08-05  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'region-extract-function'

	* lisp/simple.el (region-extract-function): Rename the argument to
	METHOD.  Doc fix.  (Bug#27927)

2017-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-08-04 manywarnings: port to 64-bit GCC builds of Emacs
	2017-08-01 manywarnings: port to 32-bit GCC bug
	* lib/gnulib.mk.in: Regenerate.
	* m4/manywarnings.m4: Copy from gnulib.

2017-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Port recent rename changes to Ubuntu 14.04

	* src/sysdep.c (renameat_noreplace) [!RENAME_NOREPLACE]:
	Don’t use syscall.  Problem reported by Tino Calancha (Bug#27946#10).

2017-08-05  Tino Calancha  <tino.calancha@gmail.com>

	insert-directory-wildcard-in-dir-p: Tweak regexp

	This function must return non-nil for a wildcard like '/*/*.txt'.
	* lisp/files.el (insert-directory-wildcard-in-dir-p): Adjust regexp.
	* test/lisp/files-tests.el (files-tests--insert-directory-wildcard-in-dir-p):
	Add test.

2017-08-04  Toby S. Cubitt  <tsc25@cantab.net>

	Implement iterator generator for avl-trees.

	* lisp/emacs-lisp/avl-tree.el (avl-tree-iter): New iter-defun.

2017-08-04  Tino Calancha  <tino.calancha@gmail.com>

	ls-lisp: Drop eshell dependencies

	Use 'file-expand-wildcards' instead of 'eshell-extended-glob' to
	expand the wildcards.
	Suggested by Fabrice Popineau in:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00108.html
	* lisp/ls-lisp.el (ls-lisp--dired): Use file-expand-wildcards.

2017-08-04  Tino Calancha  <tino.calancha@gmail.com>

	Fix dired-test-bug27631 on MS-Windows

	Skip the test if Dired use 'ls' emulation with lisp.  The same
	bug is tested in their respective test suites: ls-lisp-tests.el
	and em-ls-tests.el.
	* test/lisp/dired-tests.el (dired-test-bug27631): Skip test if 'ls-lisp'
	or 'eshell' features are enabled.

2017-08-04  Eli Zaretskii  <eliz@gnu.org>

	Fix dired-test-bug25609 on MS-Windows

	* test/lisp/dired-tests.el (dired-test-bug25609): On MS-Windows,
	pass temporary files through file-truename, to avoid bogus
	failures due to file-name comparison as strings.

2017-08-04  Tino Calancha  <tino.calancha@gmail.com>

	Fix 2 tests that fail in MS-Windows

	https://lists.gnu.org/r/emacs-devel/2017-08/msg00018.html
	* test/lisp/vc/ediff-ptch-tests.el (ediff-ptch-test-bug26084):
	Add comments to explain the test logic.
	Pass '--binary' option to 'patch' program in windows environments.
	Check explicitly that a backup is created before compare file contents.

	* test/lisp/dired-tests.el (dired-test-bug25609):
	Declare variable 'dired-dwim-target' right before the test.
	Add comments to explain the test logic.
	Ensure, before test the bug condition, that we are displaying the
	2 dired buffers created in this test, and no other dired buffer
	is shown.

2017-08-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/shell.el (explicit-shell-file-name): Mention shell-file-name

	* lisp/files.el (insert-directory): Don't hardcode "-c".
	* lisp/term.el (term, ansi-term): Use shell-file-name.

2017-08-04  Paul Eggert  <eggert@cs.ucla.edu>

	Fix version numbers for some GnuTLS features

	Problem reported by Glenn Morris (Bug#27708#58).
	* src/gnutls.c (HAVE_GNUTLS_X509_SYSTEM_TRUST):
	New macro.  Use it instead of low-level version number checks.
	(HAVE_GNUTLS_AEAD): Move here from gnutls.h, and rename from
	HAVE_GNUTLS3_AEAD.  All uses changed.  Indent preprocessor lines.
	* src/gnutls.h (HAVE_GNUTLS3_CIPHER, HAVE_GNUTLS3_DIGEST)
	(HAVE_GNUTLS3_HMAC): Remove, since these were available
	before GnuTLS 3.0.0 and the code checks them only if HAVE_GNUTLS3
	is defined.  Remove all uses; this simplifies the code a bit.

2017-08-04  Paul Eggert  <eggert@cs.ucla.edu>

	Port recent rename changes to RHEL 7 + NFS

	Problem reported by Ted Zlatanov in:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00082.html
	* src/fileio.c (Frename_file): On RHEL 7 + NFS, renameat2 can fail
	with errno == EINVAL when it is not supported.  So treat that case
	like errno == ENOSYS.  Also, when ok_if_already_exists is neither
	nil nor an integer, just call plain rename; this avoids an extra
	syscall to renameat2 when the latter fails with errno == EINVAL or
	ENOSYS or ENOENT.

2017-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Port GnuTLS usage to Ubuntu 16.04.2 LTS

	* src/gnutls.h (HAVE_GNUTLS3_AEAD): Define only if GnuTLS 3.5.1 or
	later, as opposed to the old 3.4.0 or later.

2017-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify configuration of HAVE_GNUTLS3 etc.

	There's only one GnuTLS, so configuring these symbols at
	'configure' time is overkill.  Simplify things by moving their
	configuration to src/gnutls.h (Bug#27708).
	* configure.ac (HAVE_GNUTLS3, HAVE_GNUTLS3_HMAC, HAVE_GNUTLS3_AEAD)
	(HAVE_GNUTLS3_CIPHER, HAVE_GNUTLS3_DIGEST): Move these definitions
	from here ...
	* src/gnutls.h: ... to here, and simplify.

2017-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Default to --with-mailutils if it is installed

	* configure.ac (with_mailutils): Default to 'yes' if GNU Mailutils
	is installed.  See:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00054.html

2017-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	Clarify when autogen.sh should run only autoconf

	* Makefile.in (configure, bootstrap): Run ‘./autogen.sh autoconf’,
	not plain ‘./autogen.sh’, to make it clear that only
	autoconf-related tools should be run here.

2017-08-02  Toon Claes  <toon@iotcl.com>

	.gitlab-ci.yml: Use stretch Debian image instead of unstable

2017-08-02  Stephen Berman  <stephen.berman@gmx.net>

	Add debugging messages to a Dired test

	* test/lisp/dired-tests.el (dired-test-bug27243-01): Log
	positions saved and restored by dired-revert to try and find
	out why the test fails on Hydra.

2017-08-02  Tino Calancha  <tino.calancha@gmail.com>

	ls-lisp: Autoload call instead of cookie

	* lisp/ls-lisp.el (eshell-extended-glob): autoload call instead of cookie.

2017-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	When renaming a file, ask only if EEXIST or ENOSYS

	* src/fileio.c (Frename_file): Avoid calling Ffile_directory_p
	more than once on FILE.  Use renameat_noreplace, so that we can
	ask the user (and unlink and retry) only if this fails with errno
	== EEXIST or ENOSYS.  This avoids the need to ask the user for
	permission to do an operation that will fail anyway.  Simplify
	computation of ok_if_already_exists for subsidiary functions.
	* src/filelock.c (rename_lock_file): Prefer renameat_noreplace
	if it works, as this avoids the need to link and unlink.
	* src/lisp.h (renameat_noreplace): New decl.
	* src/sysdep.c [HAVE_LINUX_FS_H]: Include linux/fs.h and sys/syscall.h.
	(renameat_noreplace): New function.

2017-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	When creating a link, ask only if EEXIST

	* src/fileio.c (Fadd_name_to_file, Fmake_symbolic_link):
	Ask the user (and unlink and retry) only if link creation fails
	with errno == EEXIST.  This avoids the need to ask the user for
	permission to do an operation that will fail anyway.

2017-08-02  Tino Calancha  <tino.calancha@gmail.com>

	dired-align-file: Inherit text properties in inserted spaces

	* lisp/dired.el (dired-align-file): Inherit text
	properties in inserted spaces (Bug#27899).
	* test/lisp/dired-tests.el (dired-test-bug27899): Add test.

2017-08-02  Tino Calancha  <tino.calancha@gmail.com>

	Don't assume /bin/sh as the 'sh' location in the local host

	* lisp/dired.el (dired-insert-directory): Use executable-find in
	a local host.

2017-08-02  Tino Calancha  <tino.calancha@gmail.com>

	Move dired tests using ls emulation to different files

	Suggested in:
	https://lists.gnu.org/r/emacs-devel/2017-08/msg00018.html
	* test/lisp/dired-tests.el (dired-test-bug27693)
	(dired-test-bug27762, dired-test-bug27817)
	(dired-test-bug27631, dired-test-bug27843): Delete those
	parts requiring either ls-lisp or eshell-ls.

	* test/lisp/ls-lisp-tests.el (ls-lisp-test-bug27762)
	(ls-lisp-test-bug27631, ls-lisp-test-bug27693):
	Add all dired tests using ls-lisp here.

	* test/lisp/eshell/em-ls-tests.el (em-ls-test-bug27631)
	(em-ls-test-bug27817, em-ls-test-bug27843): New test file.  Add
	all dired tests using eshell-ls here.

2017-08-02  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/ls-lisp-tests.el: Rename it from ls-lisp.el

2017-08-02  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/gnus/mm-uu.el (mm-uu-org-src-code-block-extract):
	Say the handle is already decoded.
	cf. <yw.87lgnh5cfv.fsf@alex.chromebook> in the info-gnus-english list.

2017-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t worry about unlink if errno == ENOENT

	* src/fileio.c (Fdelete_file):
	* src/keyboard.c (Fopen_dribble_file): Do not report failure to
	remove a file if unlink fails with errno == ENOENT.  This can
	happen even if Emacs is the only program removing the file, in
	case an NFS cache overflows.  The file does not exist if errno ==
	ENOENT, so it is OK to proceed.

2017-08-01  Tino Calancha  <tino.calancha@gmail.com>

	Fix misalignment in Dired when dired-directory is a cons

	* lisp/dired.el (dired--need-align-p, dired--align-all-files):
	New defuns.
	(dired-internal-noselect): Call dired--align-all-files when
	dired-directory is a cons (Bug#27762).
	* test/lisp/dired-tests.el (dired-test-bug27762): Test should pass.

2017-08-01  Eli Zaretskii  <eliz@gnu.org>

	Fix some dired-tests.el on MS-Windows

	* test/lisp/dired-tests.el (dired-test-bug27243-01)
	(dired-test-bug27243-02): On MS-Windows, pass test-dir through
	file-truename, to avoid bogus failures due to file-name comparison
	as strings.

2017-08-01  Tino Calancha  <tino.calancha@gmail.com>

	Insert subdir content if dir-or-list is a string w/o wildcards

	* lisp/eshell/em-ls.el (eshell-ls--insert-directory):
	Append '("-d") into 'eshell-ls-dired-initial-args'
	if 'dired-directory' is a cons or there are wildcars (Bug#27843).
	* test/lisp/dired-tests.el (dired-test-bug27843): Add test.

2017-08-01  Stephen Berman  <stephen.berman@gmx.net>

	Update todo-mode defcustoms in a less hideous way

	* lisp/calendar/todo-mode.el (todo-reevaluate-filelist-defcustoms)
	(todo-reevaluate-default-file-defcustom)
	(todo-reevaluate-category-completions-files-defcustom)
	(todo-reevaluate-filter-files-defcustom): Delete these functions.
	(todo-update-filelist-defcustoms): New function.  This replaces
	todo-reevaluate-filelist-defcustoms, using the 'custom-type'
	property instead of re-evaluating the defcustoms.
	(todo-add-file, todo-rename-file, todo-delete-file)
	(todo-delete-category, todo-move-category)
	(todo-convert-legacy-files, todo-check-file): Replace call of
	todo-reevaluate-filelist-defcustoms by
	todo-update-filelist-defcustoms.
	(todo-show, todo-category-completions): Replace call of
	todo-reevaluate-* function by use of 'custom-type' property.

2017-08-01  Tino Calancha  <tino.calancha@gmail.com>

	Add more should form calls in a failing dired test

	Some dired tests fail intermittently in hydra.  Add few
	more should form calls for debugging.
	See:
	https://lists.gnu.org/r/emacs-devel/2017-07/msg01092.html
	* test/lisp/dired-tests.el (dired-test-bug27243-01): Add few more should
	forms for debugging.

2017-08-01  Michael Albinus  <michael.albinus@gmx.de>

	Follow SAUNA recommendations for display-line-numbers-type

	* lisp/display-line-numbers.el (display-line-numbers-type): Do not autoload.

	* lisp/menu-bar.el (display-line-numbers-type): Declare.

2017-07-31  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid most stat calls when completing file names

	* admin/merge-gnulib (GNULIB_MODULES): Add d-type.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* m4/d-type.m4: New file, copied from gnulib.
	* src/dired.c (DT_UNKNOWN, DT_DIR, DT_LINK)
	[!HAVE_STRUCT_DIRENT_D_TYPE]: New constants.
	(dirent_type): New function.
	(file_name_completion): Use it, to avoid unnecessary calls to
	stat-like functions on GNU/Linux and other platforms with d_type.
	(file_name_completion_stat): Just follow the link; there is no
	need to try first with AT_SYMLINK_NOFOLLOW since the directory
	entry was already checked to exist.

2017-07-31  Tino Calancha  <tino.calancha@gmail.com>

	dired-tests: Unload tested features after test them

	Some tests are for Dired with ls-lisp or eshell-ls.
	Requiring these features add an advice on `dired' and
	might affect other tests.
	Do not require these features at the top of the file; require
	then inside the tests and unload then at the end.
	* test/lisp/dired-tests.el (dired-test-bug27693)
	(dired-test-bug7131, dired-test-bug27817, dired-test-bug27631):
	require ls-lisp and/or eshell-ls inside the test; unload the
	features at the end.

2017-07-31  Michael Albinus  <michael.albinus@gmx.de>

	Small adaptions for directory wildcards

	* lisp/dired.el (dired-insert-directory): Remove "--dired"
	when there are wildcards, and the directory is remote.

	* test/lisp/net/tramp-tests.el (tramp--test-make-temp-name):
	Adapt docstring.
	(tramp-test17-dired-with-wildcards): Skip for all methods but
	those from tamp-sh.p.

2017-07-31  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/dired.el (dired-trivial-filenames): Use \` and \' to match
	string bounds.

2017-07-31  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-07-30 Don't interpret EOVERFLOW to mean nonexistence
	* lib/tempname.c: Copy from gnulib.

2017-07-30  Tino Calancha  <tino.calancha@gmail.com>

	ls-lisp: Do not require em-glob at top of the file

	Require em-glob inside 'ls-lisp--dired'.  This is necessary to
	not break the Emacs build.
	See following thread for details:
	https://lists.gnu.org/r/emacs-devel/2017-07/msg01083.html
	* lisp/ls-lisp.el (dired-goto-next-file)
	(dired-read-dir-and-switches, eshell-extended-glob):
	Add function declarations.
	* lisp/eshell/em-ls.el (dired-goto-next-file): Fix function declaration.

2017-07-30  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/dired.el (dired-insert-directory): Move `file-remote-p' check up.

	* test/lisp/net/tramp-tests.el (tramp-test17-dired-with-wildcards): New test.

2017-07-30  Simen Heggestøyl  <simenheg@gmail.com>

	Change default CSS property face

	* lisp/textmodes/css-mode.el (css-property): Inherit from
	`font-lock-keyword-face' instead of `font-lock-variable-name-face' to
	distinguish CSS properties from variables.

2017-07-30  Tino Calancha  <tino.calancha@gmail.com>

	Dired: Handle posix wildcards in directory part

	Allow Dired to handle calls like
	\(dired \"~/foo/*/*.el\"), that is, with wildcards within
	the directory part of the file argument (Bug#27631).
	* lisp/files.el (insert-directory-wildcard-in-dir-p): New predicate.
	(insert-directory-clean): New defun extracted from insert-directory.
	(insert-directory)
	* lisp/dired.el (dired-internal-noselect)
	(dired-insert-directory): Use the new predicate; when it's true,
	handle the directory wildcards with a shell call.
	* lisp/eshell/em-ls.el (eshell-ls-use-in-dired): Add/remove both advices.
	(eshell-ls-unload-hook): New defun.  Use it in
	eshell-ls-unload-hook instead of an anonymous function.
	(eshell-ls--dired)
	* lisp/ls-lisp.el (ls-lisp--dired):
	Advice dired to handle wildcards in the directory part with both
	eshell-ls and ls-lisp.
	* etc/NEWS: Announce it.
	* doc/emacs/dired.texi (Dired Enter): Update manual.
	* test/lisp/dired-tests.el (dired-test-bug27631): Add test.

2017-07-29  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/find-lisp.el: Enable lexical binding

	* lisp/find-dired.el: Enable lexical binding

2017-07-29  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/kmacro.el: Use lexical binding.

2017-07-29  Mark Oteiza  <mvoteiza@udel.edu>

	Use lexical-binding in dired-aux.el

	* lisp/dired.el: Use lexical binding.
	(dired-do-shell-command): Remove unused bindings.

2017-07-29  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/ido.el: Use lexical binding.

	* lisp/whitespace.el: Use lexical binding.

2017-07-29  Stephen Berman  <stephen.berman@gmx.net>

	artist.el: Avoid error with keyboard command invocation

	* lisp/textmodes/artist.el (artist-mouse-choose-operation):
	Call x-popup-menu with t instead of last-nonmenu-event as the
	value of the position argument; this allows invoking the
	command from the keyboard without raising an error (bug#27819).

2017-07-29  Stephen Berman  <stephen.berman@gmx.net>

	Preserve point under 'dired-auto-revert-buffer' (third case)

	* lisp/files.el (find-file): Use pop-to-buffer-same-window
	instead of switch-to-buffer.  This preserves Dired window
	point when dired-auto-revert-buffer is non-nil.  (Bug#27243)

	* test/lisp/dired-tests.el (dired-test-bug27243-01)
	(dired-test-bug27243-02, dired-test-bug27243-03): New tests.
	The first two replace a previous test that combined them; that
	test intermittently fails in the Hydra build system, so maybe
	separating the two cases will help locate the point of
	failure.  The third test involves find-file but is here
	because it, like the others, is testing the effect of
	dired-auto-revert-buffer.

2017-07-29  Allen Li  <vianchielfaura@gmail.com>  (tiny change)

	Do not unset user key remaps in dired-x

	* lisp/dired-x.el (dired-x-bind-find-file): Don't map any keys if user
	sets dired-x-hands-off-my-keys.  (Bug#27828)

2017-07-29  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'occur'

	* doc/emacs/search.texi (Other Repeating Search):
	* lisp/replace.el (occur): Make the documentation of 'occur' be
	more accurate when matches overlap.  (Bug#27818)

2017-07-29  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits of comments in faces.el

	* lisp/faces.el (face-font-family-alternatives): More info about
	requirements from "Monospace Serif".

2017-07-29  Paul Eggert  <eggert@cs.ucla.edu>

	Do not worry about paxctl on newer NetBSD

	Problem reported privately by Thomas Klausner.
	* configure.ac (emacs_uname_r): New var.  Use it to avoid paxctl
	on newer NetBSD platforms, where it is not needed.  Also use it to
	simplify Cygwin diagnostic.

2017-07-29  Eli Zaretskii  <eliz@gnu.org>

	Clarify documentation of ':inherit' face attribute

	* doc/lispref/display.texi (Face Attributes): Document the special
	treatment of 'unspecified' in the ':inherit' attribute.

2017-07-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/password-cache.el (password-data): Use a hash-table

	* lisp/auth-source.el (auth-source-magic): Remove.
	(auth-source-forget+, auth-source-forget-all-cached): Adjust to new
	format of password-data.
	(auth-source-format-cache-entry): Just use a cons.

	(password-cache-remove, password-cache-add, password-reset)
	(password-read-from-cache, password-in-cache-p): Adjust accordingly.

	(Bug#26699)

2017-07-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/subr.el (define-symbol-prop): New function

	(symbol-file): Make it find symbol property definitions.

	* lisp/emacs-lisp/pcase.el (pcase-defmacro):
	* lisp/emacs-lisp/ert.el (ert-set-test): Use it instead of `put'.
	(ert-describe-test): Adjust call to symbol-file accordingly.

2017-07-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/subr.el (method-files): Move function to cl-generic.el

	* lisp/emacs-lisp/cl-generic.el (cl-generic-p): New function.
	(cl--generic-method-files): New function, moved from subr.el.
	* lisp/emacs-lisp/edebug.el (edebug-instrument-function): Use them.
	* test/lisp/emacs-lisp/cl-generic-tests.el:
	* test/lisp/subr-tests.el: Move and adjust method-files tests accordingly.

2017-07-28  Eli Zaretskii  <eliz@gnu.org>

	Preserve this-command-keys across recursive-edit invocations

	* src/minibuf.c (read_minibuf, read_minibuf_unwind): Save and
	restore this-command-keys, to preserve it across recursive-edit.
	(Bug#27470)

2017-07-28  Eli Zaretskii  <eliz@gnu.org>

	Improve doc string of 'locate-dominating-file'

	* lisp/files.el (locate-dominating-file): Doc fix.  (Bug#27798)

2017-07-28  Drew Adams  <drew.adams@oracle.com>

	New commands 'apropos-local-variable', 'apropos-local-value'

	* lisp/apropos.el (apropos-local-variable, apropos-local-value):
	New functions.  (Bug#27424)

	* doc/emacs/help.texi (Apropos): Document 'apropos-local-variable'
	and 'apropos-local-value'.
	* etc/NEWS: Mention the new commands.

2017-07-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/loadhist.el (unload-feature): Remove ad-hoc ELP code

	* lisp/emacs-lisp/elp.el (loadhist-unload-element): Un-instrument functions.

2017-07-27  Alan Mackenzie  <acm@muc.de>

	Fix C++ class initializers not always being fontified at mode start.

	The problem here happened when an "outer list" of declarations moved beyond an
	"inner list" containing class initializers.  These weren't being checked for
	by the code.

	Also, fix places in c-get-fontification-context where point is undefined.

	* lisp/progmodes/cc-fonts.el (c-get-fontification-context): when argument
	not-front-decl is set, test for class initializers.  Also, anchor point in
	places where it is moved and is otherwise undefined.

2017-07-27  Alan Mackenzie  <acm@muc.de>

	Fix variables in C++ "for" statement not always being fontified.

	The error happened when there was a comma inside template delimiters.

	* lisp/progmodes/cc-fonts.el (c-get-fontification-context): In "for"
	statements, recognize template delimiters containing "," and "&".

2017-07-27  Michael Albinus  <michael.albinus@gmx.de>

	Add watchdog process to tramp-test36-asynchronous-requests

	* test/lisp/net/tramp-tests.el (tramp--test-timeout-handler):
	New defun.
	(tramp-test36-asynchronous-requests): Use a watchdog process,
	listening for SIGUSR1.

2017-07-27  Alan Mackenzie  <acm@muc.de>

	CC Mode: Fix declarator being cut off from terminator by end of jit-lock chunk

	If a declarator is so cut off, extend the fontification chunk to include it.

	* lisp/progmodes/cc-mode.el (c-fl-decl-end): New function.
	(c-change-expand-fl-region, c-context-expand-fl-region): Use the new function.

2017-07-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/vc/smerge-mode.el: Avoid N² blow up in degenerate cases

	(smerge--refine-long-words): New var.
	(smerge--refine-chopup-region): Use it.

2017-07-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/url/url-cookie.el: Use lexical-binding

	(url-cookie-host-can-set-p): Remove unused var `last'.
	Use string-suffix-p.
	(url-cookie-list): De morgan.
	(url-cookie-quit): Remove.
	(url-cookie-mode): Inherit from special-mode.
	(url-cookie-mode-map): Simplify accordingly.

2017-07-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/calendar/todo-mode.el (todo-print-buffer-function): Rework docstring.

	* lisp/ruler-mode.el (ruler-mode-ruler): Document problem.

2017-07-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-generic.el (cl-generic-define-method):

	Record this as the function's definition site if it's the first def.

2017-07-26  Glenn Morris  <rgm@gnu.org>

	* doc/lispref/loading.texi (When to Autoload): New section.

2017-07-26  Glenn Morris  <rgm@gnu.org>

	Stop using unibyte buffers for ert backtraces

	* lisp/emacs-lisp/ert.el
	(ert-results-pop-to-backtrace-for-test-at-point):
	Set multibyte true, not false.  This copies a
	debugger-setup-buffer change from 2009-08-30, and stops the
	"Backtrace for" header line containing ^X and ^Y.

2017-07-26  Dmitry Gutov  <dgutov@yandex.ru>

	Fix semantic-symref-parse-tool-output-one-line after 644cdd1aa0

	* lisp/cedet/semantic/symref/grep.el
	(semantic-symref-grep--line-re): Delete.
	(semantic-symref-parse-tool-output-one-line):
	Use regexp and group numbers from (grep-regexp-alist).

2017-07-26  Grégoire Jadi  <daimrod@omecha.info>

	Fix cl-defmethod indentation

	* lisp/emacs-lisp/cl-generic.el (cl-defmethod):
	Declare (indent defun).  Fixes bug#23994.

2017-07-26  Martin Rudalics  <rudalics@gmx.at>

	Fix two customization types in frame.el

	* lisp/frame.el (window-divider-default-bottom-width)
	(window-divider-default-right-width): Fix customization types.

2017-07-26  Tino Calancha  <tino.calancha@gmail.com>

	Dired: Support eshell-ls from the beginning if the user wants to

	* lisp/dired.el (dired-insert-directory): Check for eshell-ls
	as well (Bug#27817).
	* test/lisp/dired-tests.el (dired-test-bug27817): Add test.

2017-07-26  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/progmodes/sh-script.el (sh-mode): Recognize mkshrc.

2017-07-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/eieio-compat.el (eieio--defgeneric-init-form):

	Adjust to change in cl-generic-ensure-function.

2017-07-25  Tino Calancha  <tino.calancha@gmail.com>

	ls-lisp: Add an unload function and enable lexical binding

	Enable lexical binding.
	* lisp/ls-lisp.el (ls-lisp-unload-function): New defun.
	* test/lisp/ls-lisp-tests.el (ls-lisp-unload): Add test.

2017-07-25  Tino Calancha  <tino.calancha@gmail.com>

	register-read-with-preview: Quit if user input C-g or ESC

	* lisp/register.el (register-read-with-preview):
	Quit if user input C-g or ESC (bug#27634).
	* doc/emacs/regs.texi (Registers): Update manual.
	* test/lisp/register-tests.el (register-test-bug27634): Add test.

2017-07-25  Mark Oteiza  <mvoteiza@udel.edu>

	Recognize MirBSD Korn shell rc file

	* lisp/files.el (auto-mode-alist): Add .mkshrc to the list.

2017-07-25  Glenn Morris  <rgm@gnu.org>

	* configure.ac: Be explicit about ImageMagick version in summary.

2017-07-25  Andreas Schwab  <schwab@linux-m68k.org>

	Properly align global lispsym

	* lib-src/make-docfile.c (close_emacs_globals): Wrap struct
	Lisp_Symbols inside struct.
	* src/alloc.c (sweep_symbols): Update use of lispsym.
	* src/lisp.h (builtin_lisp_symbol): Likewise.

2017-07-25  Paul Eggert  <eggert@cs.ucla.edu>

	Do not use ImageMagick 7 and later

	Suggested by Glenn Morris (Bug#25967#15).
	* configure.ac (IMAGEMAGICK_MODULE): Reject 7 and later.

2017-07-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/perl-mode.el: Add support for indented here docs

	* lisp/progmodes/perl-mode.el (perl-syntax-propertize-function):
	Recognize the new <<~ syntax for indented here docs.
	(perl-syntax-propertize-special-constructs): Adjust search of the
	end of here docs accordingly.

	* test/manual/indent/perl.perl: Add test for indented here docs.

2017-07-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	(loadhist-unload-element): Move ERT and cl-generic methods

	* lisp/loadhist.el (loadhist-unload-element): Don't define cl-generic
	and ert methods here.
	(loadhist-unload-element) <(head define-type)>: Remove unused var `slots'.

	* lisp/emacs-lisp/cl-generic.el (loadhist-unload-element): Define
	unload method for cl-defmethod.
	(cl-generic-ensure-function): Remove redundant `defalias'.

	* lisp/emacs-lisp/ert.el (ert-set-test): Move the current-load-list
	setting here...
	(ert-deftest): ...from here.
	(loadhist-unload-element): Define unload method for ert-deftest.

2017-07-24  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#27371

	* lisp/loadhist.el (loadhist-unload-element): Declare for
	different entry types of `load-history'.
	(loadhist--restore-autoload): New variable.
	(loadhist--unload-function): New defun.
	(unload-feature): Use `loadhist-unload-element'.  Recommended by
	Stefan Monnier.  (Bug#27371)

	* test/lisp/net/tramp-tests.el (tramp-test39-unload):
	Check, that the `tramp-file-name' structure has been unloaded.

2017-07-24  Grégoire Jadi  <gjadi@omecha.info>

	Ensure that we parse images right in shr.el

	* lisp/net/shr.el (shr-image-fetched): Go back to the
	beginning of the buffer before trying to parse the image
	fetched.

2017-07-24  Paul Eggert  <eggert@cs.ucla.edu>

	Update .gitignore for Valgrind and no Automake

	* .gitignore: Remove .deps/ since we no longer use Automake.
	Add vgcore.*[0-9], for debugging Emacs with Valgrind+GDB.

2017-07-24  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-07-23 Rename module 'strftime' to 'nstrftime'
	* admin/merge-gnulib (GNULIB_MODULES): Add nstrftime, remove strftime.
	* build-aux/config.guess: Copy from gnulib.
	* lib/nstrftime.c: Rename from lib/strftime.c.
	* m4/nstrftime.m4: Rename from m4/strftime.m4.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.

2017-07-23  Philipp Stephani  <phst@google.com>

	Add 'rx' pattern for pcase.

	* lisp/emacs-lisp/rx.el (rx): New pcase macro.
	* test/lisp/emacs-lisp/rx-tests.el (rx-pcase): Add unit test.

2017-07-23  Mark Oteiza  <mvoteiza@udel.edu>

	Use a named function for global minor mode turn-on argument

	* lisp/display-line-numbers.el (turn-on-display-line-numbers-mode):
	New function.
	(global-display-line-numbers-mode): Use it.

2017-07-23  Charles A. Roelli  <charles@aurox.ch>

	Enable GUI Emacs without 'make install' on macOS (Bug #27645)

	* nextstep/INSTALL: Correct it, and mention that Emacs can be run
	from 'src/emacs'.

	* src/nsterm.m (applicationDidFinishLaunching:): When Emacs is
	launched outside of a macOS application bundle, change its
	activation policy from the default 'prohibited' to 'regular'.

2017-07-23  Alan Mackenzie  <acm@muc.de>

	Convert CC Mode's c-found-types from an obarray to a hash table.

	* lisp/progmodes/cc-engine.el (c-clear-found-types): create a hash table
	rather than an obarray.
	(c-copy-found-types): Remove.
	(c-add-type, c-unfind-type, c-check-type, c-list-found-types): Amend to use
	the new hash table.
	(c-forward-<>-arglist): Use copy-hash-table rather than c-copy-found-types.

2017-07-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix image/svg+xml display in shr

	* lisp/net/shr.el (shr-put-image): Display svg images as svg
	(bug#27799).  I suspect the previous change was checked in by
	accident in conjuction with some other svg changes.

2017-07-23  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/display-line-numbers.el (display-line-numbers-type): Autoload it.

2017-07-23  Glenn Morris  <rgm@gnu.org>

	Don't automatically enable Gconf if Gsettings was found

	* configure.ac (HAVE_GCONF) [HAVE_GSETTINGS]:
	Don't test for Gconf unless specifically requested.
	Gconf was deprecated in favor of Gsettings several years ago.

2017-07-23  Glenn Morris  <rgm@gnu.org>

	* configure.ac (MODULES_SUFFIX): Always give it a value.

	This prevents a Makefile thinko like "rm *${MODULE_SUFFIX}".

2017-07-23  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/frames.texi (Fonts): Mention Gsettings.

2017-07-22  Michael Albinus  <michael.albinus@gmx.de>

	Add line numbers display to the Options menu

	* lisp/menu-bar.el (toggle-display-line-numbers): Remove.
	(menu-bar-display-line-numbers-mode): New defun.
	(menu-bar-showhide-line-numbers-menu): New defvar.
	(menu-bar-showhide-menu): Use `menu-bar-showhide-line-numbers-menu'

2017-07-22  Noam Postavsky  <npostavs@gmail.com>

	Signal error for symbol names with strange quotes (Bug#2967)

	* src/lread.c (read1): Signal an error when a symbol starts with a
	non-escaped quote-like character.
	* test/src/lread-tests.el (lread-tests--funny-quote-symbols): New
	test.
	* etc/NEWS: Announce change.

2017-07-22  Noam Postavsky  <npostavs@gmail.com>

	Revert "Let delete-selection-mode work with popup-menu commands (Bug#27569)"

	It turns out that this change is not needed, and it leaves several
	command loops settings not done.

	https://lists.gnu.org/r/emacs-devel/2017-07/msg00757.html
	https://lists.gnu.org/r/emacs-devel/2017-07/msg00840.html

2017-07-22  Alexander Gramiak  <agrambot@gmail.com>

	Add a minor mode interface for display-line-numbers

	* lisp/cus-start.el: Use the new display-line-numbers group.
	* lisp/display-line-numbers.el: New file.

	* doc/emacs/custom.texi (Init Rebinding): Re-add entry that used to
	belong to linum-mode.
	* doc/emacs/modes.texi (Minor Modes): Summarize the mode.
	* etc/NEWS: Document display-line-numbers-mode and its customization
	variables, and mention that display-line-numbers-width is
	buffer-local.

	* src/xdisp.c (syms_of_xdisp) <display-line-numbers-width>: Fix a
	typo.

2017-07-22  vividsnow  <vividsnow@gmail.com>  (tiny change)

	Support indented HERE-DOCs in cperl-mode

	* lisp/progmodes/cperl-mode.el (cperl-find-pods-heres): Support
	indented here-docs.  (Bug#27254) (Bug#27697)

2017-07-22  Eli Zaretskii  <eliz@gnu.org>

	Document the support for "scrollBar" X resource

	* doc/emacs/xresources.texi (Table of Resources): Document the new
	'scrollBar' setting.
	* etc/NEWS: Document the new 'scrollBar' setting.

2017-07-22  Matthew Bauer  <mjbauer95@gmail.com>  (tiny change)

	Add 'scroll-bar-mode' to settings in 'x-apply-session-resources'

	* lisp/startup.el (x-apply-session-resources): Add scroll-bar-mode
	settings.

2017-07-22  Alexander Kuleshov  <kuleshovmail@gmail.com>

	Update ld-script mode (bug#27629)

	* lisp/progmodes/ld-script.el: (ld-script-keywords): New commands
	NOCROSSREFS_TO and HIDDEN added.  Fix documentation sections
	numbers for PROVIDE/PROVIDE_HIDDEN commands.
	(ld-script-builtins): New builtin function LOG2CEIL added.

2017-07-22  Eli Zaretskii  <eliz@gnu.org>

	Index 'rectangle' in the ELisp manual

	* doc/lispref/text.texi (Registers): Index the "rectangle" value.
	(Bug#27541)

2017-07-22  Eli Zaretskii  <eliz@gnu.org>

	* lisp/subr.el (add-to-history): Doc fix.  (Bug#27494)

2017-07-22  Eli Zaretskii  <eliz@gnu.org>

	Doc fixes for kmacro.el functions

	* lisp/kmacro.el (kmacro-start-macro, kmacro-call-macro)
	(kmacro-end-and-call-macro): Don't use "permanent name", as that
	could be misinterpreted.  (Bug#27492)

2017-07-22  Charles A. Roelli  <charles@aurox.ch>

	ElDoc: add docstrings and minor refactoring

	* lisp/emacs-lisp/eldoc.el (eldoc-edit-message-commands): Add
	docstring.
	(turn-on-eldoc-mode): Fix capitalization.
	(eldoc--supported-p): Add docstring.
	(eldoc-schedule-timer): Add docstring and use
	'eldoc--supported-p'.
	(eldoc-message): Add docstring and make calling convention
	clearer.
	(eldoc--message-command-p):
	(eldoc-pre-command-refresh-echo-area):
	(eldoc-display-message-p):
	(eldoc-display-message-no-interference-p):
	(eldoc-print-current-symbol-info):
	(eldoc-docstring-format-sym-doc):
	(eldoc-add-command, eldoc-add-command-completions):
	(eldoc-remove-command, eldoc-remove-command-completions):
	Add docstring.  (Bug#27230)

2017-07-22  Fabrice Bauzac  <libnoon@gmail.com>  (tiny change)

	Mention 'C-M-i' as key binding for 'ispell-complete-word'

	* doc/emacs/fixit.texi (Spelling): ispell-complete-word
	can also be invoked by C-M-i.  (Bug#27349)

2017-07-22  Fabrice Bauzac  <libnoon@gmail.com>  (tiny change)

	Fix the eww-search-words description in the Emacs manual

	* doc/emacs/search.texi (Word Search):
	Include the key binding for eww-search-words in the manual.
	Fix the spelling of the 'eww-search-words' command.

2017-07-22  Andrew L. Moore  <slewsys@gmail.com>

	Introduce defcustom 'executable-prefix-env'

	* lisp/progmodes/executable.el (executable-prefix): Update the doc
	string.
	(executable-prefix-env): New defcustom.
	(executable-set-magic): Use executable-prefix-env.

	* etc/NEWS: Document the new variable.

2017-07-22  Glenn Morris  <rgm@gnu.org>

	* test/lisp/ibuffer-tests.el: Delete temporary files.

2017-07-21  Glenn Morris  <rgm@gnu.org>

	Further attempt to avoid hang in network-stream-tests

	* test/lisp/net/network-stream-tests.el (connect-to-tls-ipv6-nowait):
	Limit the time we wait for the external process.

2017-07-21  Glenn Morris  <rgm@gnu.org>

	Stop skipping many ibuffer tests by default

	* test/lisp/ibuffer-tests.el (ibuffer-0autoload):
	Rename so it sorts first.
	(ibuffer-save-filters, ibuffer-filter-inclusion-1)
	(ibuffer-filter-inclusion-2, ibuffer-filter-inclusion-3)
	(ibuffer-filter-inclusion-4, ibuffer-filter-inclusion-5)
	(ibuffer-filter-inclusion-6, ibuffer-filter-inclusion-7)
	(ibuffer-filter-inclusion-8, ibuffer-decompose-filter)
	(ibuffer-and-filter, ibuffer-or-filter, ibuffer-format-qualifier)
	(ibuffer-unary-operand): Require ibuf-ext so tests not skipped.

2017-07-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use lexical-binding in todo-mode.el

	Adjust code accordingly and make various minor improvements.

	* lisp/calendar/todo-mode.el: Enable lexical-binding.
	(dayname, monthname, day, month, year): Make forward defvars
	of these keywords from macros defined in calendar.el; wrap
	them in with-no-warnings.
	(todo-files, todo-files-function, todo-date-pattern)
	(todo-mode-line-function, todo-show, todo-forward-category)
	(todo-edit-item--header, todo-set-category-number)
	(todo-adjusted-category-label-length)
	(todo-total-item-counts, todo-filter-items)
	(todo-print-buffer-function, todo-convert-legacy-date-time)
	(todo-category-number, todo-category-completions)
	(todo-read-file-name, todo-read-category)
	(todo-validate-name, todo-read-date)
	(todo-set-show-current-file, todo-modes-set-1)
	(todo-modes-set-2, todo-modes-set-3, todo-mode):
	Use #' instead of ' to quote functions.
	(todo-files): Use \' instead of $ in regexp.
	(todo--files-type-list): New function.
	(todo-default-todo-file, todo-category-completions-files)
	(todo-filter-files, todo-multiple-filter-files)
	(todo-reevaluate-default-file-defcustom)
	(todo-reevaluate-category-completions-files-defcustom)
	(todo-reevaluate-filter-files-defcustom): Use it.
	(todo-show, todo-rename-file, todo-move-category)
	(todo-edit-item--text, todo-edit-quit, todo-edit-item--header)
	(todo-item-undone, todo-unarchive-items, todo-search)
	(todo-filter-items, todo-filter-items-1, todo-find-item)
	(todo-category-select, todo-read-date)
	(todo-nondiary-marker-matcher, todo-date-string-matcher)
	(todo-diary-expired-matcher, todo-convert-legacy-files)
	(todo-read-category): Reformat to avoid code hiding behind a
	more deeply embedded element.
	(todo-forward-category, todo-set-category-number):
	Use 'funcall' instead of 'apply'.
	(todo-toggle-mark-item, todo-edit-item--diary-inclusion)
	(todo-edit-category-diary-inclusion)
	(todo-insert-sort-button, todo-insert-category-line)
	(todo-multiple-filter-files): Mark unused local variables.
	(todo-edit-item--header, todo-move-item, todo-print-buffer)
	(todo-edit-item--header, todo-move-item, todo-check-file)
	(todo-edit-item--next-key): Remove unused local variables.
	(todo-insert-sort-button, todo-insert-category-line):
	Use a closure instead of a backquoted lambda.
	(todo-update-categories-display, todo-print-buffer): Simplify code.
	(todo-print-buffer-function): Document calling convention.
	(todo-category-completions): Use cl-pushnew instead of add-to-list.
	(todo-mode-map, todo-archive-mode-map)
	(todo-categories-mode-map, todo-filtered-items-mode-map):
	Remove superfluous call of suppress-keymap, since it's already
	in the parent special-mode-map.

2017-07-21  Tino Calancha  <tino.calancha@gmail.com>

	dired: Revert buffer when DIRNAME is a cons

	* lisp/dired.el (dired-internal-noselect): Revert buffer if DIR-OR-LIST
	is a cons, or dired-directory is a cons and DIR-OR-LIST a string (Bug#7131).
	Update the comments.
	* test/lisp/dired-tests.el (dired-test-bug7131): Test should pass.

2017-07-21  Tino Calancha  <tino.calancha@gmail.com>

	Handle when dired-directory is a cons in some Dired functions

	* lisp/dired-aux.el (dired-rename-subdir-1)
	* lisp/dired-x.el (dired-mark-omitted):
	Handle when dired-directory is a cons.

2017-07-21  Noam Postavsky  <npostavs@gmail.com>

	Make eshell-next-prompt more reliable (Bug#27405)

	* lisp/eshell/em-prompt.el (eshell-next-prompt): Search for
	`eshell-prompt-regexp' (and `read-only' text-property if
	`eshell-highlight-prompt' is set) rather than trying to use
	`forward-paragraph'.
	(eshell-previous-prompt): Don't count prompt on current line.

2017-07-21  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify recent gnutls.c changes

	* src/gnutls.c (clear_storage) [HAVE_GNUTLS3_AEAD]: Remove.
	All uses replaced by calls to explicit_bzero; that’s clear enough.
	(gnutls_symmetric_aead) [HAVE_GNUTLS3_AEAD]: Simplify by
	coalescing duplicate actions.  There is no need to invoke
	SAFE_FREE before calling ‘error’.

2017-07-20  Michael Albinus  <michael.albinus@gmx.de>

	Stylistic changes in tramp-cache.el

	* lisp/net/tramp-cache.el (tramp-get-file-property)
	(tramp-set-file-property): Use `bound-and-true-p'.  Add
	counter variables to `tramp-cache-unload-hook'.

2017-07-20  Glenn Morris  <rgm@gnu.org>

	* admin/notes/hydra: Small updates.

2017-07-20  Glenn Morris  <rgm@gnu.org>

	Make tramp unloading handle debug counter variables

	* lisp/net/tramp-cache.el (tramp-get-file-property)
	(tramp-set-file-property): Add counter variables to tramp-unload-hook.

2017-07-20  Eli Zaretskii  <eliz@gnu.org>

	Fix hscrolling calculations when display-line-numbers is set

	* src/xdisp.c (move_it_in_display_line_to): Account for line
	numbers in hscrolled lines.  (Bug#27756)

2017-07-20  Katsumi Yamaoka  <yamaoka@jpl.org>

	Fix the bogus change made 13 years ago (bug#27084)

	* lisp/gnus/gnus-sum.el (gnus-summary-toggle-header):
	Fix the way to test if there is no visible header (bug#27084).

2017-07-20  Noam Postavsky  <npostavs@gmail.com>

	Use grep's --null option (Bug#6843)

	* lisp/progmodes/grep.el (grep-use-null-filename-separator): New option.
	(grep--regexp-alist-column, grep--regexp-alist-bin-matcher)
	(grep-with-null-regexp-alist, grep-fallback-regexp-alist): New
	constants, replacing `grep-regexp-alist'.
	(grep-regex-alist): Mark the variable obsolete, add a new function of
	the same name to replace it.
	(grep-compute-defaults): Compute default for
	`grep-use-null-filename-separator'.
	(grep-mode): Set compilation-error-regexp-alist (buffer locally) to the
	value of `grep-with-null-regexp-alist' or `grep-fallback-regexp-alist'
	according to `grep-use-null-filename-separator'.
	* lisp/progmodes/xref.el (xref-collect-matches): Call
	`grep-regex-alist' instead of the obsolete variable.  Don't hardcode
	grep-regexp-alist match groups.
	* etc/NEWS: Announce new use of --null.  Move 'grep-save-buffers'
	item under "Grep" heading as well.

2017-07-19  Philipp Stephani  <phst@google.com>

	* src/gnutls.c (clear_storage): Define only if needed.

2017-07-19  Stephen Berman  <stephen.berman@gmx.net>

	Adjust todo-quit to recent change in dired

	* lisp/calendar/todo-mode.el (todo-quit): Use quit-window instead of
	bury-buffer to exit todo-mode.  This restores the desired behavior
	of not immediately returning to the exited todo-mode buffer on
	quitting another buffer, which a dired bug fix had changed (see
	https://lists.gnu.org/r/emacs-devel/2017-07/msg00739.html).

2017-07-19  Tino Calancha  <tino.calancha@gmail.com>

	Add test for bugs 7131, 27762

	Require 'ls-lisp' at top of the file.
	* test/lisp/dired-tests.el (dired-test-bug7131, dired-test-bug27762):
	New tests.
	(dired-test-bug27693): Delete Dired buffer at the end.

2017-07-18  Michael Albinus  <michael.albinus@gmx.de>

	* admin/notes/hydra: Mention environment variable EMACS_HYDRA_CI.

2017-07-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/nadvice.el (advice--defalias-fset): Strip advices

	This tries to make sure that (defalias F (symbol-function F)) stays a no-op.

2017-07-18  Glenn Morris  <rgm@gnu.org>

	Use a more specific test for running on hydra.nixos.org

	* lisp/emacs-lisp/ert.el (ert-summarize-tests-batch-and-exit):
	* test/Makefile.in (WRITE_LOG):
	* test/lisp/filenotify-tests.el:
	* test/lisp/emacs-lisp/eieio-tests/eieio-test-methodinvoke.el
	(eieio-test-method-order-list-6):
	* test/lisp/emacs-lisp/eieio-tests/eieio-tests.el
	(eieio-test-37-obsolete-name-in-constructor):
	* test/lisp/net/tramp-tests.el: Replace NIX_STORE with EMACS_HYDRA_CI.

2017-07-18  Eli Zaretskii  <eliz@gnu.org>

	Avoid infloop due to Eshell's "smart" redisplay

	* src/xdisp.c (pos_visible_p): Save and restore the window's
	mode-line and header-line height.  (Bug#27752)

2017-07-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-lib.el (cl--old-struct-type-of): Accept `[]'

2017-07-18  Eli Zaretskii  <eliz@gnu.org>

	Fix indentation when display-line-numbers is non-nil

	* src/xdisp.c (x_produce_glyphs): Fix a typo in deciding whether
	to go one more tab stop to display a TAB.  (Bug#27743)

2017-07-18  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use gtk_widget_get_scale_factor on old GTK3 versions

	* src/gtkutil.c (xg_get_scale): gtk_widget_get_scale_factor is
	only present since GTK 3.10.

2017-07-18  Noam Postavsky  <npostavs@gmail.com>

	Let delete-selection-mode work with popup-menu commands (Bug#27569)

	* lisp/menu-bar.el (popup-menu): Run `pre-command-hook' with
	`this-command' set to the selected command.

2017-07-18  Paul Eggert  <eggert@cs.ucla.edu>

	Port gnutls.c to older (buggier?) GnuTLS

	Problem reported for GnuTLS 3.2.1 by Glenn Morris in:
	https://lists.gnu.org/r/emacs-devel/2017-07/msg00716.html
	https://lists.gnu.org/r/emacs-devel/2017-07/msg00742.html
	Although I don't see how this bug can occur with vanilla GnuTLS 3.2.1,
	perhaps hydra was using a modified GnuTLS.
	* src/gnutls.c (Fgnutls_ciphers): Don't assume GNUTLS_CIPHER_NULL
	is at the end of the list returned by gnutls_cipher_list,
	or that the earlier ciphers all have non-null names.

2017-07-17  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Fix relocation with named cell referred to by a one-symbol formula.

	* lisp/ses.el (ses-replace-name-in-formula): Fix bug for it to
	work also with one symbol formulas.

	* test/lisp/ses-tests.el
	(ses-tests-renaming-cell-with-one-symbol-formula): Add new
	test for renaming with relocating a one symbol formula.

2017-07-17  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Fix symbol completion and document it.

	* doc/misc/ses.texi (Configuring what printer function
	applies): Add description of keys for completing local printer
	symbols and listing local printers in a help buffer.
	(Formulas): Add decription for key to list the named cell
	symbols in a help buffer.

	* lisp/ses.el (ses-completion-keys): New constant.
	(ses--completion-table): New defvar.
	(ses--list-orig-buffer): New defvar.
	(ses-mode-edit-map): Fixed for symbol completion, plus add
	help functions to list named cells or local printers.
	(ses-edit-cell-complete-symbol)
	(ses--edit-cell-completion-at-point-function): New defuns for
	completion during formula edition.
	(ses-edit-cell): Redefine dynamically edit keymap for
	completion keys to point at the right function.
	(ses-read-printer-complete-symbol)
	(ses--read-printer-completion-at-point-function): New defuns
	for completion during printer edition.
	(ses-read-printer): Redefine dynamically edit keymap for
	completion keys to point at the right function.
	(ses-list-local-printers): New defun.
	(ses-list-named-cells): New defun.

2017-07-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Move comments around

2017-07-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Make scaling work (?) on pre-GTK3 systems

	* src/gtkutil.c (xg_get_gdk_scale): Reinstate function.
	(xg_get_scale): Use it on non-GTK3 systems.

2017-07-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Always return the GDK scale

	* src/gtkutil.c (xg_get_scale): Return the GDK scale always.

2017-07-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove usage of the GDK_SCALE variable

	* src/gtkutil.c (xg_get_gdk_scale): Remove.
	(xg_get_default_scrollbar_height)
	(xg_get_default_scrollbar_width): Pass in a frame to check for
	scaling.
	(xg_frame_set_char_size): Use the API for querying scale
	instead of looking at the GDK_SCALE variable.
	(xg_get_default_scrollbar_width): Ditto.
	(xg_get_default_scrollbar_height): Ditto.
	(xg_update_scrollbar_pos): Ditto.

	* src/xfns.c (x_set_scroll_bar_default_height): Pass in the
	frame to get the width.

2017-07-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Get positions of menus and tooltips right on HiDPI

	* src/gtkutil.c (xg_get_scale): New function.
	(xg_show_tooltip): Use it.

	* src/xmenu.c (create_and_show_popup_menu): Put menus in the
	right place.

2017-07-17  Eli Zaretskii  <eliz@gnu.org>

	Allow user control on what starts and ends a paragraph for bidi

	* src/buffer.h (struct buffer): New members
	bidi_paragraph_separate_re_ and bidi_paragraph_start_re_.
	* src/buffer.c (bset_bidi_paragraph_start_re)
	(bset_bidi_paragraph_separate_re): New setters/
	(Fbuffer_swap_text): Swap the values of bidi-paragraph-start-re and
	bidi-paragraph-separate-re.
	(init_buffer_once): Init the values of bidi-paragraph-start-re and
	bidi-paragraph-separate-re.
	(syms_of_buffer) <bidi-paragraph-start-re, bidi-paragraph-separate-re>:
	New per-buffer variables.
	* src/bidi.c (bidi_at_paragraph_end, bidi_find_paragraph_start):
	Support bidi-paragraph-start-re and bidi-paragraph-separate-re.
	(bidi_move_to_visually_next): Handle correctly the case when the
	separator matches an empty string.  (Bug#27526)

	* doc/emacs/mule.texi (Bidirectional Editing):
	* doc/lispref/display.texi (Bidirectional Display): Document
	bidi-paragraph-start-re and bidi-paragraph-separate-re.

	* etc/NEWS: Mention bidi-paragraph-start-re and
	bidi-paragraph-separate-re.

2017-07-17  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/emacs-lisp/map.el (map-put): Fix redundancy in docstring.

2017-07-17  Tino Calancha  <tino.calancha@gmail.com>

	alist-get: Add optional arg TESTFN

	If TESTFN is non-nil, then it is the predicate to lookup
	the alist.  Otherwise, use 'eq' (Bug#27584).
	* lisp/subr.el (alist-get): Add optional arg FULL.
	* lisp/emacs-lisp/map.el (map-elt, map-put): Add optional arg TESTFN.
	* lisp/emacs-lisp/gv.el (alist-get): Update expander.
	* doc/lispref/lists.texi (Association Lists): Update manual.
	* etc/NEWS: Announce the changes.
	* test/lisp/emacs-lisp/map-tests.el (test-map-put-testfn-alist)
	(test-map-elt-testfn): New tests.

2017-07-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix `tramp-test39-unload'

	* test/lisp/net/tramp-tests.el (tramp--test-instrument-test-case-p)
	(tramp--test-instrument-test-case): Rename.  Adapt all callees.
	(tramp-test36-asynchronous-requests): Bind `timer-max-repeats'.
	(tramp-test39-unload): Expect it to pass.  Ignore buffer-local
	variables and autoload functions; they are not removed.  Check
	also for `-function(s)'.

2017-07-17  Stephen Berman  <stephen.berman@gmx.net>

	Preserve point under 'dired-auto-revert-buffer' (second case)

	* lisp/dired.el (dired): Use pop-to-buffer-same-window instead
	of switch-to-buffer.  This preserves Dired window point when
	dired-auto-revert-buffer is non-nil.  (Bug#27243)

	* test/lisp/dired-tests.el (dired-test-bug27243): New test.

2017-07-17  Martin Rudalics  <rudalics@gmx.at>

	Have Fgnutls_available_p return Qnil when GNUTLS is undefined

	* src/gnutls.c (Fgnutls_available_p): Return Qnil when GNUTLS is
	undefined to allow --with-gnutls=no builds to proceed.

2017-07-17  Paul Eggert  <eggert@cs.ucla.edu>

	* src/gnutls.c: Restore some comments.

2017-07-17  Paul Eggert  <eggert@cs.ucla.edu>

	Use memset, not bzero

	* src/ftcrfont.c (ftcrfont_glyph_extents): Use memset instead
	of the (less-portable) bzero.

2017-07-17  Paul Eggert  <eggert@cs.ucla.edu>

	Use explicit_bzero to clear GnuTLS keys

	* admin/merge-gnulib (GNULIB_MODULES): Add explicit_bzero.
	* lib/explicit_bzero.c, m4/explicit_bzero.m4: New files.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* src/gnutls.c (clear_storage): New function.
	(gnutls_symmetric_aead): Use it instead of memset.

2017-07-17  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-07-16 explicit_bzero: new module
	2017-07-15 getdtablesize: Add minimal support for OpenVMS.
	* lib/getdtablesize.c, lib/string.in.h, m4/getdtablesize.m4:
	* m4/string_h.m4:
	Copy from Gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-07-17  Dieter Deyke  <dieter.deyke@gmail.com>

	Fix vc-src-dir-status-files

	* lisp/vc/vc-src.el (vc-src-dir-status-files): Fix broken
	copy-paste from b1a765b3 (bug#27641).

2017-07-16  Wilfred Hughes  <me@wilfred.me.uk>

	Fix mismatched parens

	* etc/NEWS.21: Remove excess parenthesis in code example

2017-07-16  Alan Third  <alan@idiocy.org>

	Add missing declare-function for new function

	* lisp/frame.el: Add declare function for
	ns-mouse-absolute-pixel-position.

2017-07-16  R. Bernstein  <rocky@gnu.org>

	Realgud for tango themes

2017-07-16  Noam Postavsky  <npostavs@gmail.com>

	Fix test when running from test/lisp/subr-tests.elc

	* test/lisp/subr-tests.el (subr-test-backtrace-simple-tests): Don't
	assume a lambda expression will be `equal' to its quoted form.  That's
	not true if the lambda expression has been compiled.

2017-07-15  Alan Third  <alan@idiocy.org>

	Fix some frame handling issues on NS

	* lisp/frame.el (mouse-absolute-pixel-position): Use new NS function.
	* src/nsfns.m (Sns_mouse_absolute_pixel_position): New function.
	* src/nsterm.m (x_make_frame_visible): Re-establish parent-child
	relationship if it's broken.

2017-07-15  Tino Calancha  <tino.calancha@gmail.com>

	ls-lisp: Fix file size format

	* lisp/ls-lisp.el (ls-lisp-filesize-d-fmt, ls-lisp-filesize-f-fmt)
	(ls-lisp-filesize-b-fmt): Add space in front (Bug#27693).
	* test/lisp/dired-tests.el (dired-test-bug27693): Add test.

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Avoid link errors with older versions of GnuTLS

	* src/gnutls.c (Fgnutls_ciphers, gnutls_symmetric_aead)
	(Fgnutls_macs, Fgnutls_digests): Conditionally compile code that
	calls GnuTLS functions which might be unavailable in older
	versions of GnuTLS.

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Improve comments in faces.el

	* lisp/faces.el (face-font-family-alternatives): Improve
	commentary.

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Improve some GnuTL error messages

	* src/gnutls.c (gnutls_symmetric_aead, gnutls_symmetric):
	* src/fns.c (Fsecure_hash_algorithms): Fix error messages.

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Fix the Elisp manual wrt GnuTL cryptography

	* doc/lispref/elisp.texi (Top): Update the master menu.
	* doc/lispref/text.texi (GnuTLS Cryptography): Add a @menu, to
	avoid errors in makeinfo.

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation of gnutls.c with older GnuTLS

	* src/gnutls.c (syms_of_gnutls): Condition some defsubr's
	on HAVE_GNUTLS3, to avoid compilation errors when GnuTLS
	v3.X is not available.  Reported by Colin Baxter <m43cap@yandex.com>.

2017-07-15  rocky  <rb@dustyfeet.com>

	Realgud for two more light themes

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Rearrange MS-Windows code that dynamically loads GnuTLS functions

	* src/gnutls.c [WINDOWSNT]: Reorganize definitions and loading
	of functions using the same preprocessing directives as in the code.

2017-07-15  Eli Zaretskii  <eliz@gnu.org>

	Fix the MS-Windows build broken in gnutls.c

	* src/gnutls.c (Fgnutls_available_p) [WINDOWSNT]: Move the DLL
	loading code to after 'capabilities' has been calculated.  Remove
	redundant comments.

2017-07-15  Lars Ingebrigtsen  <larsi@gnus.org>

	src/image.c (compute_image_size): Remove superfluous checks.

	* src/image.c (compute_image_size): Remove superfluous checks.

2017-07-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Make combinations of :width/:max-height image specs work reliably

	* doc/lispref/display.texi (ImageMagick Images): Document
	:width/:max-height combinations (etc) (bug #25583).

	* src/image.c (compute_image_size): Handle :width/:max-height
	(etc) combinations consistently (by letting "max" win and
	preserve ratio).

	* test/manual/image-size-tests.el (image-size-tests): Add
	tests for :width/:max-height (etc) combinations.

2017-07-15  Glenn Morris  <rgm@gnu.org>

	Fix recent theme changes

	* etc/themes/manoj-dark-theme.el, etc/themes/tsdh-dark-theme.el:
	Fix typos in recent changes.

2017-07-15  Paul Eggert  <eggert@cs.ucla.edu>

	GnuTLS integer-overflow and style fixes

	This tweaks the recently-added GnuTLS improvements so that
	they avoid some integer-overflow problems and follow typical
	Emacs style a bit better.
	* configure.ac (HAVE_GNUTLS3_HMAC, HAVE_GNUTLS3_AEAD)
	(HAVE_GNUTLS3_CIPHER): Use AC_CACHE_CHECK so that the
	configure-time results are displayed.
	* src/fns.c (extract_data_from_object): Return char *, not char
	const *, since one gnutls caller wants a non-const pointer.  Use
	CONSP rather than !NILP when testing for conses.  Use CAR_SAFE
	instead of rolling our own code.  Prefer signed types to unsigned
	when either will do.  Report problems for lengths out of range,
	instead of silently mishandling them.
	* src/gnutls.c (emacs_gnutls_strerror): New function, to simplify
	callers.  All callers of gnutls_sterror changed.
	(Fgnutls_boot): Check for integers out of range rather than
	silently truncating them.
	(gnutls_symmetric_aead): Check for integer overflow in size
	calculations.
	(gnutls_symmetric_aead, Fgnutls_macs, Fgnutls_digests):
	Prefer signed to unsigned integers where either	will do.
	(gnutls_symmetric_aead, gnutls_symmetric):
	Work even if ptrdiff_t is wider than ‘long’.
	(gnutls_symmetric, Fgnutls_hash_mac, Fgnutls_hash_digest):
	Check for integer overflow in algorithm selection.

2017-07-14  Noam Postavsky  <npostavs@gmail.com>

	* .gitlab-ci.yml: Don't install a C++ compiler.  Suppress apt interaction.

2017-07-14  Eli Zaretskii  <eliz@gnu.org>

	Fix the MS-Windows build due to added GnuTLS functions

	* src/gnutls.c [WINDOWSNT]: Add DEF_DLL_FN for new functions.
	(init_gnutls_functions) [WINDOWSNT]: Add LOAD_DLL_FN for new
	functions.  Add #define redirections for new functions.
	(gnutls_symmetric_aead): Fix format specs to be more portable when
	printing ptrdiff_t arguments.
	* src/fns.c (gnutls_rnd) [WINDOWSNT]: Redirect to w32_gnutls_rnd
	wrapper.
	* src/gnutls.h [WINDOWSNT]: Add prototype for w32_gnutls_rnd.

	* test/lisp/net/gnutls-tests.el (gnutls-tests-tested-macs)
	(gnutls-tests-tested-digests, gnutls-tests-tested-ciphers): Call
	gnutls-available-p, otherwise GnuTLS functions might not be loaded
	from the DLL on MS-Windows.

2017-07-14  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/bytecomp.el: Fix bug#14860.

	* lisp/emacs-lisp/bytecomp.el (byte-compile--function-signature): New fun.
	Dig into advice wrappers to find the "real" signature.
	(byte-compile-callargs-warn, byte-compile-arglist-warn): Use it.
	(byte-compile-arglist-signature): Don't bother with "new-style" arglists,
	since bytecode functions are now handled in byte-compile--function-signature.

	* lisp/files.el (create-file-buffer, insert-directory):
	Remove workaround introduced for (bug#14860).

	* lisp/help-fns.el (help-fns--analyse-function): `nadvice` is preloaded.

	* lisp/help.el (help-function-arglist):
	Dig into advice wrappers to find the "real" signature.

2017-07-14  Ted Zlatanov  <tzz@lifelogs.com>

	GnuTLS HMAC and symmetric cipher support

	    * etc/NEWS: Add news for new feature.

	    * doc/lispref/text.texi (GnuTLS Cryptography): Add
	    documentation.

	    * configure.ac: Add macros HAVE_GNUTLS3_DIGEST,
	    HAVE_GNUTLS3_CIPHER, HAVE_GNUTLS3_AEAD, HAVE_GNUTLS3_HMAC.

	    * src/fns.c (Fsecure_hash_algorithms): Add function to list
	    supported `secure-hash' algorithms.
	    (extract_data_from_object): Add data extraction function that
	    can operate on buffers and strings.
	    (secure_hash): Use it.
	    (Fsecure_hash): Mention `secure-hash-algorithms'.

	    * src/gnutls.h: Include gnutls/crypto.h.

	    * src/gnutls.c (Fgnutls_ciphers, gnutls_symmetric_aead)
	    (gnutls_symmetric, Fgnutls_symmetric_encrypt, Fgnutls_symmetric_decrypt)
	    (Fgnutls_macs, Fgnutls_digests, Fgnutls_hash_mac, Fgnutls_hash_digest)
	    (Fgnutls_available_p): Implement GnuTLS cryptographic integration.

	    * test/lisp/net/gnutls-tests.el: Add tests.

2017-07-14  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-lib.el (cl--random-time): Remove as well

	It's also defined in cl-extra.el.

2017-07-14  Paul Eggert  <eggert@cs.ucla.edu>

	Do not convert ij and IJ to compatibility chars

	* lisp/leim/quail/latin-alt.el: Omit lines for ij and IJ in Dutch.
	Problem reported by James Cloos (Bug#518#10).

2017-07-14  Toon Claes  <toon@iotcl.com>

	Remove Turkish ligatures from Dutch input method

	* lisp/leim/quail/latin-alt.el: Remove Turkish ligatures (Bug#518).

2017-07-14  Paul Eggert  <eggert@cs.ucla.edu>

	Improve stack-overflow heuristic on GNU/Linux

	Problem reported by Steve Kemp (Bug#27585).
	* src/eval.c (near_C_stack_top): Remove.  All uses replaced
	by current_thread->stack_top.
	(record_in_backtrace): Set current_thread->stack_top.
	This is for when the Lisp interpreter calls itself.
	* src/lread.c (read1): Set current_thread->stack_top.
	This is for recursive s-expression reads.
	* src/print.c (print_object): Set current_thread->stack_top.
	This is for recursive s-expression printing.
	* src/thread.c (mark_one_thread): Get stack top first.
	* src/thread.h (struct thread_state.stack_top): Now void *, not char *.

2017-07-14  Paul Eggert  <eggert@cs.ucla.edu>

	Remove duplicate cl--random-state definition

	* lisp/emacs-lisp/cl-lib.el (cl--random-state): Remove.
	This variable is now defined in cl-extra.el (Bug#27617).

2017-07-14  Michael Albinus  <michael.albinus@gmx.de>

	Adjust timer in tramp-test36-asynchronous-requests

	* test/lisp/net/tramp-tests.el (tramp-test36-asynchronous-requests):
	Adjust timer if it takes too much time.

2017-07-14  Eli Zaretskii  <eliz@gnu.org>

	Always display rmail progress report under user control

	* lisp/mail/rmail.el (rmail-show-message-1): Delete the second
	copy of '(message "Showing message %d..." msg)'.  (Bug#27535)

2017-07-14  Eli Zaretskii  <eliz@gnu.org>

	Avoid byte-compilation warnings for advised functions

	* lisp/files.el (insert-directory, create-file-buffer): Add an
	advertised-calling-convention form to shut up byte-compilation
	warnings.  (Bug#14860)

2017-07-14  Eli Zaretskii  <eliz@gnu.org>

	Add assertion related to display-line-numbers

	* src/xdisp.c (maybe_produce_line_number): Add assertion for the
	condition regarding IT->glyph_row->used[TEXT_AREA] expected by the
	code.  (Bug#27668)

2017-07-14  Eli Zaretskii  <eliz@gnu.org>

	Prevent display corruption when display-line-numbers is set

	* src/xdisp.c (try_window_reusing_current_matrix): If giving up
	due to display-line-numbers, clear the window's desired glyph
	matrix before returning, as the following call to try_window will
	call display_line, which expects rows of the desired matrix
	cleared.  (Bug#27668)

2017-07-14  Eli Zaretskii  <eliz@gnu.org>

	Revert "Use fixed-pitch font for display-line-numbers"

	This reverts commit d014a5e15c1110af77e7a96f06ccd0f0cafb099f.
	* lisp/faces.el (line-number): Don't use a fixed-pitch font, by
	popular demand.  For relevant discussions, see

	 https://lists.gnu.org/r/emacs-devel/2017-07/msg00433.html
	 https://lists.gnu.org/r/emacs-devel/2017-07/msg00445.html

2017-07-14  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-07-13 Improve cross-compilation guesses for native Windows
	2017-07-11 More systematic m4 quoting and indentation
	2017-07-10 Make sure $host and $host_os are defined when used
	2017-07-03 stdioext: Port to OpenVMS
	2017-06-24 xalloc-oversized: port to icc
	* doc/misc/texinfo.tex, lib/fpending.c, lib/stdio-impl.h:
	* lib/xalloc-oversized.h, m4/dirfd.m4, m4/gettimeofday.m4:
	* m4/lstat.m4, m4/mktime.m4, m4/pselect.m4, m4/putenv.m4:
	* m4/stdint.m4, m4/strtoimax.m4, m4/utimes.m4:
	Copy from Gnulib.

2017-07-13  Alan Mackenzie  <acm@muc.de>

	C++ Mode.  Fix anomaly occurring when a ">" is deleted then reinserted.

	This fontification anomaly happened because after deleting the ">",
	c-forward-<>-arglist parses the preceding identifier as a putative type but
	stores it in c-found-types before it becomes clear it is not an unambiguous
	type.  c-forward-<>-arglist fails, leaving the spurious type id in
	c-found-types.  Fix this by "binding" c-found-types "to itself" in
	c-forward-<>-arglist, and restoring the original value when that function call
	fails.

	* lisp/progmodes/cc-engine.el (c-copy-found-types): New function.
	(c-forward-<>-arglist): Record the original value of c-found-types at the
	beginning of the function, and restore it at the end on failure.

	* lisp/progmodes/cc-mode.el (c-unfind-coalesced-tokens): Rewrite more
	accurately.

2017-07-13  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Add tests for SES, and fix one more cell renaming bug.

	* lisp/ses.el (ses-relocate-all): In case of insertion, do not
	relocate value for named cells as they keep the same symbol.
	(ses-rename-cell): Set new cell name symbol to cell value --- do not
	rely on recalculating.  Push cells with updated data --- cell name,
	cell reference list, or cell formula --- to deferred write list.

	* test/lisp/ses-tests.el: New file, with 7 tests for SES.

2017-07-12  Alan Mackenzie  <acm@muc.de>

	Fix some bugs in c-defun-name.  This fixes bug #25623.

	* lisp/progmodes/cc-cmds.el (c-defun-name): Fix some bugs to do with structs,
	etc.

2017-07-12  Vasilij Schneidermann  <mail@vasilij.de>

	Make prog-mode-map the parent of c-mode-base-map.  Fixes bug #26658.

	* lisp/progmodes/cc-mode.el (top level): Make prog-mode-map the parent of
	c-mode-base-map if possible.

2017-07-12  Alan Mackenzie  <acm@muc.de>

	CC Mode: create and use c-set-keymap-parent.

	* lisp/progmodes/cc-defs.el (c-set-keymap-parent): New macro.

	* lisp/progmodes/cc-mode.el (top-level): Remove cc-bytecomp-defun for
	set-keymap-parents.
	(c-make-inherited-keymap): Use c-set-keymap-parent in place of inline code.

2017-07-12  Martin Rudalics  <rudalics@gmx.at>

	Minor tweaks of new line number display variables

	* src/xdisp.c (Vdisplay_line_numbers): Tweak doc-string.
	(Vdisplay_line_number_width): Rename to
	Vdisplay_line_numbers_width.
	(maybe_produce_line_number): Comply with above rename.
	* lisp/cus-start.el (standard):
	* lisp/frame.el (top-level):
	* etc/NEWS: Comply with renaming of
	`display-line-number-width' to `display-line-numbers-width'.

2017-07-12  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertion violations in close_infile_unwind

	* src/lread.c (close_infile_unwind): A temporary band-aid solution
	for bug#27642: allow 'infile' be NULL.

2017-07-11  Eli Zaretskii  <eliz@gnu.org>

	Use fixed-pitch font for display-line-numbers

	* lisp/faces.el (line-number): Use a fixed-pitch font by default,
	even if the default face uses a variable-pitch font.  Reported by
	James Cloos <cloos@jhcloos.com>.

2017-07-11  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of display-line-numbers

	* src/xdisp.c (syms_of_xdisp) <display-line-numbers>: Improve the
	doc string.  Suggested by Alex <agrambot@gmail.com>.

2017-07-11  Nicolas Petton  <nicolas@petton.fr>

	Add an optional testfn parameter to assoc

	* src/fns.c (assoc): New optional testfn parameter used for comparison
	when provided.
	* test/src/fns-tests.el (test-assoc-testfn): Add tests for the new
	'testfn' parameter.
	* src/buffer.c:
	* src/coding.c:
	* src/dbusbind.c:
	* src/font.c:
	* src/fontset.c:
	* src/gfilenotify.c:
	* src/image.c:
	* src/keymap.c:
	* src/process.c:
	* src/w32fns.c:
	* src/w32font.c:
	* src/w32notify.c:
	* src/w32term.c:
	* src/xdisp.c:
	* src/xfont.c: Add a third argument to Fassoc calls.
	* etc/NEWS:
	* doc/lispref/lists.texi: Document the new 'testfn' parameter.

2017-07-10  Michael Albinus  <michael.albinus@gmx.de>

	Use `with-demoted-errors' in Tramp

	* lisp/net/tramp.el (tramp-with-demoted-errors): New defmacro.

	* lisp/net/tramp-sh.el (tramp-sh-handle-vc-registered): Use it.

2017-07-10  Michael Albinus  <michael.albinus@gmx.de>

	Add Quick Start Guide to Tramp manual

	* doc/misc/tramp.texi: Use consequently "@value{tramp}" and
	"MS Windows".
	(Quick Start Guide): New node.

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.3-pre".

2017-07-10  Glenn Morris  <rgm@gnu.org>

	Fix failing module tests on GNU/Linux

	* test/src/emacs-module-tests.el
	(module--test-assertions--load-non-live-object)
	(module--test-assertions--call-emacs-from-gc):
	Avoid test failures due to backtraces.

2017-07-10  Paul Eggert  <eggert@cs.ucla.edu>

	Fix core dump in substitute-object-in-subtree

	Without this fix, (substitute-object-in-subtree #0=(#0# 'a) 'a)
	would dump core, since the C code would recurse indefinitely through
	the infinite structure.  This patch adds an argument to the function,
	and renames it to lread--substitute-object-in-subtree as the function
	is not general-purpose and should not be relied on by outside code.
	See Bug#23660.
	* src/intervals.c (traverse_intervals_noorder): ARG is now void *,
	not Lisp_Object, so that callers need not cons unnecessarily.
	All callers changed.  Also, remove related #if-0 code that was
	“temporary” in the early 1990s and has not been compilable for
	some time.
	* src/lread.c (struct subst): New type, for substitution closure data.
	(seen_list): Remove this static var, as this info is now part of
	struct subst.  All uses removed.
	(Flread__substitute_object_in_subtree): Rename from
	Fsubstitute_object_in_subtree, and give it a 3rd arg so that it
	doesn’t dump core when called from the top level with an
	already-cyclic structure.  All callers changed.
	(SUBSTITUTE): Remove.  All callers expanded and then simplified.
	(substitute_object_recurse): Take a single argument SUBST rather
	than a pair OBJECT and PLACEHOLDER, so that its address can be
	passed around as part of a closure; this avoids the need for an
	AUTO_CONS call.  All callers changed.  If the COMPLETED component
	is t, treat every subobject as potentially circular.
	(substitute_in_interval): Take a struct subst * rather than a
	Lisp_Object, for the closure data.  All callers changed.
	* test/src/lread-tests.el (lread-lread--substitute-object-in-subtree):
	New test, to check that the core dump does not reoccur.

2017-07-10  Philipp Stephani  <phst@google.com>

	Minor simplification of module_free_global_ref

	* src/emacs-module.c (module_free_global_ref): Remove unused variable
	'hashcode'.  Inline variable 'value' that's only used once.

2017-07-10  Philipp Stephani  <phst@google.com>

	Re-add a useful assertion

	* src/emacs-module.c (module_free_global_ref): Re-add assertion that
	the reference count is zero.  This assertion was removed in commit
	8afaa1321f8088bfb877fe4b6676e8517adb0bb7, but it's not included in the
	test performed by XFASTINT before, because the previous reference
	count could have been zero already in the case of a buggy
	implementation.  This assertion might have detected Bug#27587.

2017-07-10  Valentin Gatien-Baron  <vgatien-baron@janestreet.com>  (tiny change)

	Fix bug in module_free_global_ref (Bug#27587)

	* src/emacs-module.c (module_free_global_ref): Actually remove entry
	from hash table.

2017-07-09  Philipp Stephani  <phst@google.com>

	Further improve electric quote support for Markdown (Bug#24709)

	Markdown sets both 'comment-start' and 'comment-use-syntax' to non-nil
	values.  Therefore 'electric-quote-mode' recognized it as a
	programming mode.  Fix this by first checking whether the current
	major mode is derived from 'text-mode'.

	* lisp/electric.el (electric-quote-post-self-insert-function): Treat
	'text-mode' as stronger signal than comment syntax.

	* test/lisp/electric-tests.el (electric-quote-markdown-in-text)
	(electric-quote-markdown-in-code): Adapt unit tests.

2017-07-09  Philipp Stephani  <phst@google.com>

	Remove pointless code in 'electric-quote-mode'

	* lisp/electric.el (electric-quote-post-self-insert-function): Remove
	pointless form.

2017-07-09  Philipp Stephani  <phst@google.com>

	Refactor 'electric-quote-mode'

	* lisp/electric.el (electric-quote-post-self-insert-function): Remove
	local variable 'start', which was misnamed and only used once.

2017-07-09  Saulius Menkevičius  <saulius.menkevicius@gmail.com>  (tiny change)

	Avoid crashes on MS-Windows starting 64-bit .NET executables

	* src/w32proc.c (w32_executable_type): Don't assume that the
	import directory in a DLL will always be non-NULL.  (Bug#27527)

2017-07-09  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warning in files.el

	* lisp/files.el (auto-save-visited-file-name): Avoid obsoletion
	warning due to its use in auto-save-visited-mode.

2017-07-09  Eli Zaretskii  <eliz@gnu.org>

	Improve indexing of VC-related stuff in the Emacs manual

	* doc/emacs/maintaining.texi (Version Control): Add a "VC" index
	entry.  (Bug#27627)

2017-07-09  Eli Zaretskii  <eliz@gnu.org>

	Speed up display of line numbers for very large buffers

	* src/xdisp.c (maybe_produce_line_number): Speed up line counting
	using values cached by mode-line display of line numbers.
	(Bug#27622)

2017-07-09  Alexander Kuleshov  <kuleshovmail@gmail.com>

	Define internal_border_parts for window systems only (Bug#27615)

	* src/keyboard.c: (internal_border_parts): Define only
	when HAVE_WINDOW_SYSTEM is enabled.  (Bug#27615)

2017-07-09  R. Bernstein  <rocky@gnu.org>

	Add realgud faces faces to whiteboard...

	Adjust wheatgrass to use underline for enabled/disabled breakpoints

2017-07-08  Noam Postavsky  <npostavs@gmail.com>

	Optimize UCS normalization tests

	Brings the the time for `ucs-normalize-part1' from 200s down to 130s.
	* test/lisp/international/ucs-normalize-tests.el
	(ucs-normalize-tests--parse-column): Use character instead of string
	of length 1 for terminator.  Convert return value into string since
	all callers need that form anyway.
	(ucs-normalize-tests--normalization-equal-p): Rename from
	ucs-normalize-tests--normalize.  Use dedicated buffer instead of
	messing with narrowing.  Take string to compare against and insert it
	into buffer so that compare-buffer-substrings can be used instead of
	allocating a new string from buffer contents.
	(ucs-normalize-tests--normalization-chareq-p): New macro, specialized
	for comparing single character.
	(ucs-normalize-tests--rule1-holds-p)
	(ucs-normalize-tests--rule2-holds-p): Turn into defsubst.
	(ucs-normalize-tests--rule1-failing-for-partX): Use `eq' instead of
	`='.

2017-07-08  Noam Postavsky  <npostavs@gmail.com>

	Update failing lines for UCS normalize tests

	* test/lisp/international/ucs-normalize-tests.el
	(ucs-normalize-tests--failing-lines-part2): Update for new
	admin/unidata/NormalizationTest.txt version.

2017-07-08  Noam Postavsky  <npostavs@gmail.com>

	Semi-automate the procedure for updating UCS normalize test bad lines

	* test/lisp/international/ucs-normalize-tests.el: Remove incorrect
	commentary describing a manual procedure for producing the updated
	failing lines, it did not actually work.  Replace it with pointer to
	new function which prints the updated values.
	(ucs-normalize-tests--rule1-holds-p): Renamed from
	ucs-normalize-tests--invariants-hold-p.
	(ucs-normalize-tests--rule2-holds-p): Renamed from
	ucs-normalize-tests--invariants-rule2-hold-p.
	(ucs-normalize-tests--rule1-failing-for-partX): Renamed from
	ucs-normalize-tests--invariants-failing-for-part.
	(ucs-normalize-tests--rule1-failing-for-lines): Renamed from
	ucs-normalize-tests--invariants-failing-for-lines.
	(ucs-normalize-tests--part2-rule1-failed-lines): New variable.
	(ucs-normalize-part2): Set it.
	(ucs-normalize-part1): Always run through to end of test before
	checking for failures.
	(ucs-normalize-tests--insert-failing-lines)
	(ucs-normalize-check-failing-lines): New functions, used to update
	the *--failing-lines-part* variables.

2017-07-08  Paul Eggert  <eggert@cs.ucla.edu>

	* lisp/cus-start.el (standard): Spelling fix.

2017-07-08  Philipp Stephani  <phst@google.com>

	Module assertions: check for garbage collections

	It's technically possible to write a user pointer finalizer that calls
	into Emacs module functions.  This would be disastrous because it
	would allow arbitrary Lisp code to run during garbage collection.
	Therefore extend the module assertions to check for this case.

	* src/emacs-module.c (module_assert_thread): Also check whether a
	garbage collection is in progress.

	* test/data/emacs-module/mod-test.c (invalid_finalizer)
	(Fmod_test_invalid_finalizer): New test module functions.
	(emacs_module_init): Register new test function.

	* test/src/emacs-module-tests.el (module--test-assertion)
	(module--with-temp-directory): New helper macros.
	(module--test-assertions--load-non-live-object): Rename existing
	unit test, use helper macros.
	(module--test-assertions--call-emacs-from-gc): New unit test.

2017-07-08  Eli Zaretskii  <eliz@gnu.org>

	Capitalize the menu entry for display-line-numbers

	* lisp/menu-bar.el (menu-bar-showhide-menu): Capitalize menu item
	for display-line-numbers.  Suggested by Martin Rudalics
	<rudalics@gmx.at>.

2017-07-08  Eli Zaretskii  <eliz@gnu.org>

	Update Unicode data and files to Unicode 10.0

	* admin/notes/unicode:
	* admin/unidata/README:
	* admin/unidata/BidiBrackets.txt:
	* admin/unidata/BidiMirroring.txt:
	* admin/unidata/Blocks.txt:
	* admin/unidata/IVD_Sequences.txt:
	* admin/unidata/NormalizationTest.txt:
	* admin/unidata/SpecialCasing.txt:
	* admin/unidata/UnicodeData.txt:
	* lisp/international/characters.el:
	* lisp/international/fontset.el (script-representative-chars):
	* lisp/international/mule-cmds.el (ucs-names): Update per Unicode 10.0.

2017-07-08  Alexander Gramiak  <agrambot@gmail.com>

	Support '=' in Scheme and Lisp tags in 'etags'

	* lib-src/etags.c (get_lispy_tag): New function.
	(L_getit, Scheme_functions): Use get_lispy_tag (Bug#5624).
	* test/manual/etags/CTAGS.good:
	* test/manual/etags/ETAGS.good_1:
	* test/manual/etags/ETAGS.good_2:
	* test/manual/etags/ETAGS.good_3:
	* test/manual/etags/ETAGS.good_4:
	* test/manual/etags/ETAGS.good_5:
	* test/manual/etags/ETAGS.good_6:
	* test/manual/etags/Makefile:
	* test/manual/etags/el-src/TAGTEST.EL: Update tests.
	* test/manual/etags/scm-src/test.scm: New tests for Scheme.

2017-07-08  Alexander Kuleshov  <kuleshovmail@gmail.com>

	Avoid compiler warnings in xdisp.c debugging code

	* src/xdisp.c (dump_glyph, dump_glyph_row, Fdump_glyph_matrix):
	Use pD directives for ptrdiff_t values instead of pI, to avoid
	compilation warnings on 64-bit hosts.  (Bug#27597)

2017-07-08  Eli Zaretskii  <eliz@gnu.org>

	Commentary enhancement in frame.el

	* lisp/frame.el: Explain how to test whether a variable needs to
	be added to the list of those which are watched for buffer
	redisplay.

2017-07-08  Eli Zaretskii  <eliz@gnu.org>

	Support display of line numbers natively

	This merges branch 'line-numbers'.
	* src/buffer.c (disable_line_numbers_overlay_at_eob): New
	function.
	* src/lisp.h (disable_line_numbers_overlay_at_eob): Add prototype.
	* src/dispextern.h (struct it): New members pt_lnum, lnum,
	lnum_bytepos, lnum_width, and lnum_pixel_width.
	* src/indent.c (line_number_display_width): New function,
	refactored from line-number width calculations in vertical-motion.
	(Fvertical_motion): Call line_number_display_width when the width
	of line-number display is needed.
	(Fline_number_display_width): New defun.
	(syms_of_indent): Defsubr it.
	* src/indent.c (Fvertical_motion): Help C-n/C-p estimate correctly
	the width used up by line numbers by looking near the window-start
	point.  If window-start is outside of the accessible portion,
	temporarily widen the buffer.
	* src/term.c (produce_glyphs): Adjust tab stops for the horizontal
	space taken by the line-number display.
	* src/xdisp.c (display_count_lines_logically)
	(display_count_lines_visually, maybe_produce_line_number)
	(should_produce_line_number, row_text_area_empty): New functions.
	(try_window_reusing_current_matrix): Don't use this method when
	display-line-numbers is in effect.
	(try_window_id, try_cursor_movement): Disable these optimizations
	when the line-number-current-line face is different from
	line-number face and for relative line numbers.
	(try_window_id, redisplay_window, try_cursor_movement): For
	visual line-number display, disable the same redisplay
	optimizations as for relative.
	(x_produce_glyphs): Adjust tab stops for the horizontal
	space taken by the line-number display.
	(hscroll_window_tree): Adjust hscroll calculations to line-number
	display.
	(DISP_INFINITY): Renamed from INFINITY to avoid clashes with
	math.h; all users changed.
	(set_cursor_from_row): Fix calculation of cursor X coordinate in
	R2L rows with display-produced glyphs at the beginning.
	(display_line): Use should_produce_line_number to determine
	whether a line number should be produced for each glyph row, and
	maybe_produce_line_number to produce line numbers.
	Don't display line numbers in the minibuffer and in tooltip
	frames.
	Call row_text_area_empty to verify that a glyph
	row's text area is devoid of any glyphs that came from a buffer or
	a string.  This fixes a bug with empty-lines indication
	disappearing when line numbers or line-prefix are displayed.
	(syms_of_xdisp) <display-line-numbers, display-line-numbers-widen>
	<display-line-number-width>: New buffer-local variables.
	<display-line-numbers-current-absolute>: New variable.

	* lisp/cus-start.el (standard): Provide customization forms for
	display-line-numbers and its sub-features.
	* lisp/faces.el (line-number, line-number-current-line): New faces.
	* lisp/frame.el: Add display-line-numbers, display-line-numbers-widen,
	display-line-numbers-current-absolute, and
	display-line-number-width to the list of variables that should
	trigger redisplay of the current buffer.
	* lisp/menu-bar.el (menu-bar-showhide-menu): Add menu-bar item to
	turn display-line-numbers on and off.
	(toggle-display-line-numbers): New function.
	* lisp/simple.el (last--line-number-width): New internal variable.
	(line-move-visual): Use it to adjust temporary-goal-column when
	line-number display changes its width.

	* doc/emacs/basic.texi (Position Info): Add cross-reference to
	"Display Custom", for line-number display.
	* doc/emacs/custom.texi (Init Rebinding):
	* doc/emacs/modes.texi (Minor Modes): Remove references to
	linum-mode.
	* doc/emacs/display.texi (Display Custom): Describe the
	line-number display.
	* doc/lispref/display.texi (Size of Displayed Text): Document
	line-number-display-width.

	* etc/NEWS: Document display-line-numbers and its customizations.

2017-07-08  Paul Eggert  <eggert@cs.ucla.edu>

	Fix more ungetc bugs with encoding errors

	* src/lread.c (infile): New variable, replacing ...
	(instream): ... this.  All uses changed.
	(readbyte_from_stdio): New function, which deals with lookahead.
	(readbyte_from_file, Fget_file_char): Use it.
	(Fget_file_char): When misused, signal an error instead of
	relying on undefined behavior.
	(close_infile_unwind): New function.
	(Fload): Use it.
	(readevalloop): 2nd arg is now struct infile *, not FILE *.
	All callers changed.
	(read1): Handle lookahead when copying doc strings with
	encoding errors.

2017-07-08  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid ungetc when loading charset maps from files

	* src/charset.c (read_hex): New args LOOKAHEAD and TERMINATOR,
	replacing the old EOF.  All callers changed.  This avoids the
	need to call ungetc.

2017-07-08  Paul Eggert  <eggert@cs.ucla.edu>

	Fix ungetc bug when reading an encoding error

	* src/lread.c (readchar, read_emacs_mule_char): Fix off-by-one
	error when reading an encoding error from a file, e.g., a symbol
	in an .elc file whose name is "\360\220\200\360".

2017-07-07  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/wid-edit.el (widget-color--choose-action): Use a closure

	* lisp/window.el (display-buffer--special-action): Use a closure.

2017-07-07  Stephen Berman  <stephen.berman@gmx.net>

	Add new todo-mode.el tests

	* test/lisp/calendar/todo-mode-tests.el (with-todo-test):
	Declare an Edebug spec.  Restore pre-test-run state of test files.
	(todo-test--show, todo-test--move-item)
	(todo-test--insert-item): New functions.
	(todo-test-get-archive): Remove, as subsumed by
	todo-test--show.  Adjust all callers.
	(todo-test--is-current-buffer): Rename from
	todo-test-is-current-buffer and adjust uses.
	(todo-test-item-highlighting): Use todo-test--show.
	(todo-test-revert-buffer01, todo-test-revert-buffer02)
	(todo-test-raise-lower-priority)
	(todo-test-todo-mark-unmark-category, todo-test-move-item01)
	(todo-test-move-item02, todo-test-move-item03)
	(todo-test-move-item04, todo-test-move-item05)
	(todo-test-toggle-item-header01)
	(todo-test-toggle-item-header02)
	(todo-test-toggle-item-header03)
	(todo-test-toggle-item-header04)
	(todo-test-toggle-item-header05)
	(todo-test-toggle-item-header06)
	(todo-test-toggle-item-header07): New tests.

	* test/lisp/calendar/todo-mode-resources/todo-test-1.toda:
	* test/lisp/calendar/todo-mode-resources/todo-test-1.todo:
	Modify to accommodate new tests.

2017-07-07  Stephen Berman  <stephen.berman@gmx.net>

	todo-mode.el: Fix handling of hidden item headers (bug#27609)

	* lisp/calendar/todo-mode.el (todo--item-headers-hidden): New variable.
	(todo-toggle-item-header): Use it.  Make this command a noop
	if the file has no items.
	(todo-move-item, todo-item-done): Instead of concatenating the
	items to move into one string, make a list of them to
	facilitate handling hidden headers.  Adjust insertion accordingly.
	(todo-archive-done-item): Handle hidden headers in archive file.
	(todo-unarchive-items): Handle hidden headers in todo file.
	(todo-backward-item): Use todo--item-headers-hidden and handle
	moving backward work when item date-time headers are hidden.
	(todo-remove-item): Delete date-time header overlay.
	(todo-get-overlay, todo-insert-with-overlays): Make them work
	with hidden date-time headers.
	(todo-modes-set-2): Make todo--item-headers-hidden buffer local.

2017-07-07  Stephen Berman  <stephen.berman@gmx.net>

	Fix several todo-mode bugs found while debugging bug#27609

	* lisp/calendar/todo-mode.el (todo-toggle-mark-item): Calculate
	current category only once.
	(todo-mark-category): Update number of marked items to avoid
	spurious duplication in todo-categories-with-marks alist and
	corruption of the todo-categories alist.  Handle empty line
	when there are no todo items and done items are shown.
	(todo-set-item-priority): Make noop if called from
	todo-raise-item-priority or todo-lower-item-priority when
	point is on a done todo item or an empty line.
	(todo-move-item): Use markers instead of integer positions to
	correctly handle deleting the now moved items from the source
	category (without markers an infinite loop arises when moving
	marked item to a preceding category).
	(todo-unarchive-items): Put point on the (first) restored done
	item, instead of leaving it at the end of the done items
	separator string.
	(todo-revert-buffer): Ensure buffer remains read-only after
	reverting.

2017-07-07  Eli Zaretskii  <eliz@gnu.org>

	Exclude blank columns from value of line-number-display-width

	* src/indent.c (Fline_number_display_width): Don't add 2 to the
	number of columns we return, to make this consistent with
	display-line-number-width.

2017-07-07  Eli Zaretskii  <eliz@gnu.org>

	Fix vertical-motion across the place where line-number width changes

	* src/indent.c (line_number_display_width): New function,
	refactored from line-number width calculations in vertical-motion.
	(Fvertical_motion): Call line_number_display_width when the width
	of line-number display is needed.
	(Fline_number_display_width): New defun.
	(syms_of_indent): Defsubr it.

	* doc/lispref/display.texi (Size of Displayed Text): Document
	line-number-display-width.

	* etc/NEWS: Mention line-number-display-width.

	* lisp/simple.el (last--line-number-width): New internal variable.
	(line-move-visual): Use it to adjust temporary-goal-column when
	line-number display changes its width.

2017-07-07  Martin Rudalics  <rudalics@gmx.at>

	Remove Vwindow_text_change_functions and related code

	Vwindow_text_change_functions had been provided for implementing
	line numbers but apparently was never functional or in use.

	* src/xdisp.c (redisplay_window): Remove handling of
	Vwindow_text_change_functions.
	(syms_of_xdisp): Remove Qwindow_text_change_functions.
	(Vwindow_text_change_functions): Remove variable.
	* doc/lispref/hooks.texi (Standard Hooks): Remove entry for
	`window-text-change-functions'.

2017-07-07  Mark Oteiza  <mvoteiza@udel.edu>

	Convert more uses of looking-at to following-char

	More followup to Karl Fogel's commit a84da83c1.
	* lisp/dired-aux.el (dired-add-entry, dired-subdir-hidden-p):
	* lisp/dired-x.el (dired-mark-unmarked-files, dired-mark-sexp):
	* lisp/help-fns.el (doc-file-to-man, doc-file-to-info):
	* lisp/proced.el (proced-toggle-marks):
	* lisp/progmodes/f90.el (f90-indent-line):
	* lisp/ses.el (ses-load):
	* lisp/tar-mode.el (tar-expunge): Replace instances of looking-at with
	char comparisons using following-char.

2017-07-07  Noam Postavsky  <npostavs@gmail.com>

	Don't skip epg tests (Bug#23561)

	* test/lisp/epg-tests.el (with-epg-tests): Ignore REQUIRE-PASSPHRASE
	parameter, since we supply the passphrase via pinentry-program for all
	GPG versions (as of 2017-02-28 "Fix epg-tests with dummy-pinentry
	program (Bug#23619)").
	(epg-tests-program-alist-for-passphrase-callback): Remove.

2017-07-06  Eli Zaretskii  <eliz@gnu.org>

	Implement line numbers that disregard narrowing

	* src/xdisp.c (display_count_lines_logically): New function,
	counts line numbers disregarding narrowing.  Suggested by Andy
	Moreton <andrewjmoreton@gmail.com>.
	(maybe_produce_line_number): Call display_count_lines_logically
	instead of display_count_lines.  Adapt BEGV, ZV, etc. to
	display-line-numbers-widen.
	(syms_of_xdisp) <display-line-numbers-widen>: New buffer-local
	variable.

	* lisp/cus-start.el (standard): Provide a customization form for
	display-line-numbers-widen.
	* lisp/frame.el: Add display-line-numbers-widen,
	display-line-numbers-current-absolute, and
	display-line-number-width to the list of variables that should
	trigger redisplay of the current buffer.

	* doc/emacs/display.texi (Display Custom): Document
	display-line-numbers-widen.

2017-07-06  Noam Postavsky  <npostavs@gmail.com>

	Fix lisp-comment-indent for single-semicolon case

	* lisp/emacs-lisp/lisp-mode.el (lisp-comment-indent): Only check for
	open paren if we're looking at multiple comment characters.
	* test/lisp/emacs-lisp/lisp-mode-tests.el (lisp-comment-indent-1)
	(lisp-comment-indent-2): New tests.

2017-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

	* lisp/org/org-table.el (org-table-sort-lines):
	Fix misspelling in prompt.
	* lisp/org/ox-ascii.el (org-ascii--describe-datum):
	Fix misspelling in call to org-element-lineage.

2017-07-06  Noam Postavsky  <npostavs@gmail.com>

	Don't put whitespace between open paren and comment in Lisp modes (Bug#19740)

	* lisp/emacs-lisp/lisp-mode.el (lisp-comment-indent): If current
	line's code ends in open paren, set comment indentation exactly to
	column following it.
	(lisp-mode-variables): Set `comment-indent-function' to
	`lisp-comment-indent'.

2017-07-06  Noam Postavsky  <npostavs@gmail.com>

	Allow comment-indent-functions to specify exact indentation (Bug#385)

	* lisp/newcomment.el (comment-choose-indent): Interpret a cons of two
	integers as indicating a range of acceptable indentation.
	(comment-indent): Don't apply `comment-inline-offset',
	`comment-choose-indent' already does that.
	(comment-indent-function):
	* doc/emacs/programs.texi (Options for Comments): Document new
	acceptable return values.
	* etc/NEWS: Announce it.

2017-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	Check for integer overflow in xbm images

	* src/image.c (XBM_TK_OVERFLOW): New constant.
	(xbm_scan): Check for integer overflow instead of relying on
	undefined behavior.  Check that octal digits are actually octal.

2017-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	Convert hex digits more systematically

	This makes the code a bit smaller and presumably faster, as
	it substitutes a single lookup for conditional jumps.
	* src/character.c (hexdigit): New constant.
	(syms_of_character) [HEXDIGIT_IS_CONST]: Initialize it.
	* src/character.h (HEXDIGIT_CONST, HEXDIGIT_IS_CONST): New macros.
	(hexdigit): New decl.
	(char_hexdigit): New inline function.
	* src/charset.c: Do not include c-ctype.h.
	* src/charset.c (read_hex):
	* src/editfns.c (styled_format):
	* src/image.c (xbm_scan):
	* src/lread.c (read_escape):
	* src/regex.c (ISXDIGIT) [emacs]:
	Use char_hexdigit insted of doing it by hand.

2017-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t use -Woverride-init

	I have some further changes in mind that would also need to
	disable the -Woverride-init warnings.  In practice these warnings
	seem to be more trouble than they’re worth, so disable them in the
	cc command line.
	* configure.ac: Disable -Woverride-init here ...
	* src/bytecode.c: ... rather than here.

2017-07-05  Glenn Morris  <rgm@gnu.org>

	* lisp/progmodes/python.el (auto-mode-alist): Add .pyi.  (Bug#27847)

	* lisp/org/ox-html.el (org-html-infojs-template): Update copyright.

2017-07-05  Glenn Morris  <rgm@gnu.org>

	Small fix for bug-reference.el

	* lisp/progmodes/bug-reference.el (bug-reference-bug-regexp):
	Autoload safety property.  (Bug#27481)

2017-07-05  Michael Albinus  <michael.albinus@gmx.de>

	Suppress timers in Tramp

	* lisp/net/tramp.el (tramp-file-name-handler): Don't trigger timers.

	* test/lisp/net/tramp-tests.el
	(tramp-test36-asynchronous-requests): Trigger timers.
	(tramp-test37-recursive-load, tramp-test38-remote-load-path):
	Set `default-directory' to a trustworthy value.

2017-07-05  rocky  <rb@dustyfeet.com>

	Add realgud face definitions

	Add realgud faces to tdsh-dark-theme

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-awk.el: Mark unused args

	* lisp/progmodes/cc-bytecomp.el: Mark unused args

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-defs.el (lookup-syntax-properties): Move ...

	... before first use

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-vars.el: Mark unused args

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-langs.el: Mark unused args

	(c-primary-expr-regexp): Remove unused vars ambiguous-prefix-ops and
	unambiguous-prefix-ops.

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-engine.el: Mark unused args

	(c-beginning-of-statement-1, c-guess-basic-syntax):
	Remove unused var c-in-literal-cache.
	(c-debug-sws-msg): Silence byte-compiler, even if we don't use the arg.
	(c-append-to-state-cache): Remove unused var `bra+1s'.
	(c-remove-stale-state-cache): Remove unused var `pps-point-state'.
	(c-invalidate-state-cache-1): Remove unused var `pa'.
	(c-forward-decl-or-cast-1): Change comments so they don't look like
	outline headers.
	(c-restricted-<>-arglists, c-parse-and-markup-<>-arglists):
	Declare before first use.
	(c-forward-decl-or-cast-1): Remove unused var `backup-kwd-sym'.
	(c-backward-over-enum-header): Remove unused var `up-sexp-pos'.

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-cmds.el: Remove unused vars

	(c-syntactic-context): Declare as dynbound.
	(c-beginning-of-defun, c-end-of-defun): Remove unused var `start'.

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-guess.el: Remove unused var

	(c-guess-view-reorder-offsets-alist-in-style): Remove redundantly bound
	and computed variable `guessed-syntactic-symbols'.

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-align.el: Mark unused arguments

2017-07-05  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-mode.el: Mark unused arguments

	(c-parse-quotes-before-change, c-parse-quotes-after-change):
	Remove unused vars.

2017-07-05  Noam Postavsky  <npostavs@gmail.com>

	Mention `ffap-url-unwrap-local' in find-file-at-point's docstring (Bug#27564)

	* lisp/ffap.el (find-file-at-point): Mention `ffap-url-unwrap-local'
	and `ffap-url-unwrap-remote'.

2017-07-05  Noam Postavsky  <npostavs@gmail.com>

	Fix infloop in uncomment-region-default (Bug#27112)

	When `comment-continue' has only blanks, `comment-padright' produces a
	regexp that matches the empty string, so `uncomment-region-default'
	will loop infinitely.
	* lisp/newcomment.el (comment-padright): Only return a regexp if STR
	has nonblank characters.

2017-07-04  Eli Zaretskii  <eliz@gnu.org>

	Fix display of current line number in visual mode

	* src/xdisp.c (maybe_produce_line_number): Fix visual-mode display
	of current line when line-number-current-line face was customized.
	Reported by Filipe Silva <filipe.silva@gmail.com>.

2017-07-03  Philipp Stephani  <phst@google.com>

	Use hook instead of face list to inhibit electric quoting

	This is more flexible and doesn't couple electric quoting to font
	locking.
	Give that 'electric-quote-code-faces' was just introduced, remove it
	without formal deprecation.

	* lisp/electric.el (electric-quote-inhibit-functions): New abnormal
	hook variable.
	(electric-quote-post-self-insert-function): Run the hook.  Remove
	use of old 'electric-quote-code-faces' variable.

	* test/lisp/electric-tests.el (electric-quote-markdown-in-text)
	(electric-quote-markdown-in-code): Adapt unit tests.

2017-07-03  Ingo Lohmar  <i.lohmar@gmail.com>

	Offer non-aligned indentation in lists in js-mode (Bug#27503)

	* lisp/progmodes/js.el (js--proper-indentation):
	New customization option 'js-indent-align-list-continuation'.
	Affects argument lists as well as arrays and object properties.
	* test/manual/indent/js-indent-align-list-continuation-nil.js:
	Test the change.

2017-07-03  Eli Zaretskii  <eliz@gnu.org>

	Avoid errors in vertical-motion when buffer is narrowed

	* src/indent.c (Fvertical_motion): If need to start from
	window-start, and it is outside of the accessible portion,
	temporarily widen the buffer.  This avoids errors in evil-mode.
	Reported by James Nguyen <james@jojojames.com>.

2017-07-03  Michael Albinus  <michael.albinus@gmx.de>

	(Re-)activate remote tests of filenotify-tests.el

	* test/lisp/filenotify-tests.el
	(file-notify-test-remote-temporary-file-directory):
	Declare default host for mock method.  Offer home directory
	for mock method if it doesn't exist.
	(file-notify-test09-watched-file-in-watched-dir-remote):
	Remove, it doesn't work reliably.

2017-07-03  Noam Postavsky  <npostavs@gmail.com>

	Reset ansi escape context before printing eshell prompt (Bug#27407)

	* lisp/eshell/em-prompt.el (eshell-emit-prompt): Reset
	`ansi-color-context-region'.

2017-07-03  Noam Postavsky  <npostavs@gmail.com>

	Let ansi-color overlay hooks work in eshell (Bug#27407)

	* lisp/ansi-color.el (ansi-color-make-extent): Add
	`ansi-color-freeze-overlay' to `insert-behind-hooks' as well.
	* lisp/eshell/esh-mode.el (eshell-output-filter): Let-bind
	`inhibit-modification-hooks' to nil while inserting the string.

2017-07-03  Noam Postavsky  <npostavs@gmail.com>

	Fix and simplify ansi escape detection (Bug#21381)

	* lisp/ansi-color.el (ansi-color-regexp, ansi-color-drop-regexp):
	Remove.
	(ansi-color-control-seq-regexp): New constant, matches all escape
	sequences.
	(ansi-color-filter-apply, ansi-color-apply)
	(ansi-color-filter-region, ansi-color-apply-on-region): Use it instead
	of matching color sequences separately from ignored sequences.
	Differentiate color sequences simply by checking the last character.

2017-07-03  Damien Cassou  <damien@cassou.me>

	Add absolute optional parameter to line-number-at-pos (Bug#26417)

	* lisp/simple.el (line-number-at-pos): Add a second optional
	  argument 'absolute'.
	* test/lisp/simple-tests.el: Add tests for 'line-number-at-pos'.

2017-07-03  R. Bernstein  <rocky@gnu.org>

	Add realgud faces

2017-07-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix tramp-tests.el for hydra

	* test/Makefile.in: Remove instrumentation for tramp-tests.

	* test/lisp/net/tramp-tests.el (tramp-test36-asynchronous-requests):
	Remove instrumentation.  Wrap with a timeout.  Give hydra
	another timer value.  Set `default-directory' in timer.

2017-07-03  Bastien  <bzg@gnu.org>

	Merge branch 'master' into scratch/org-mode-merge

	Merge branch 'master' into scratch/org-mode-merge

2017-07-03  Tino Calancha  <tino.calancha@gmail.com>

	dired-do-shell-command: Fix check for wildcards

	* lisp/dired-aux.el (dired-do-shell-command): Replace just '?', '*'
	and '`?' i.e., keep the whitespaces.
	* test/lisp/dired-aux-tests.el (dired-test-bug27496): Add test.

2017-07-02  Noam Postavsky  <npostavs@gmail.com>

	Split shr-copy-url dwim behavior into separate functions (Bug#26826)

	* lisp/net/shr.el (shr-url-at-point, shr-probe-url)
	(shr-probe-and-copy-url, shr-maybe-probe-and-copy-url): New functions,
	split out from `shr-copy-url'.
	(shr-copy-url): Only copy the url, don't fetch it.
	(shr-map): Bind 'w' and 'u' to `shr-maybe-probe-and-copy-url', which
	has the same behavior as the old `shr-copy-url'.
	* etc/NEWS: Announce changes.

2017-07-02  Alex Branham  <branham@utexas.edu>  (tiny change)

	Make eww-search-words prompt for query if nothing selected

	* lisp/net/eww.el (eww-search-words): Make eww-search-words prompt the
	user for a search query if the region is inactive or if the region is
	just whitespace.

2017-07-02  Noam Postavsky  <npostavs@gmail.com>

	* lisp/emacs-lisp/cl-print.el (cl-print-compiled-button): t by default.

	* lisp/emacs-lisp/debug.el (debugger-insert-backtrace):
	* lisp/help-fns.el (describe-variable): No need to let-bind
	`cl-print-compiled-button' to t anymore.

2017-07-02  Philipp Stephani  <phst@google.com>

	Electric quotes: Improve support for Markdown mode (Bug#24709)

	Introduce a new user option 'electric-quote-context-sensitive'.  If
	non-nil, have ' insert an opening quote if sensible.

	Also introduce a new variable 'electric-quote-code-faces'.  Major
	modes such as 'markdown-mode' can add faces to this list to treat text
	as inline code and disable electric quoting.

	* lisp/electric.el (electric-quote-context-sensitive): New user
	option.
	(electric-quote-code-faces): New variable.
	(electric-quote-post-self-insert-function): Treat ' as ` if
	desired and applicable; disable electric quoting for given faces.

	* test/lisp/electric-tests.el (electric-quote-opening-single)
	(electric-quote-closing-single, electric-quote-opening-double)
	(electric-quote-closing-double)
	(electric-quote-context-sensitive-backtick)
	(electric-quote-context-sensitive-bob-single)
	(electric-quote-context-sensitive-bob-double)
	(electric-quote-context-sensitive-bol-single)
	(electric-quote-context-sensitive-bol-double)
	(electric-quote-context-sensitive-after-space-single)
	(electric-quote-context-sensitive-after-space-double)
	(electric-quote-context-sensitive-after-letter-single)
	(electric-quote-context-sensitive-after-letter-double)
	(electric-quote-context-sensitive-after-paren-single)
	(electric-quote-context-sensitive-after-paren-double)
	(electric-quote-markdown-in-text)
	(electric-quote-markdown-in-code): New unit tests.

2017-07-02  Michael Albinus  <michael.albinus@gmx.de>

	* doc/misc/tramp.texi: Replace ftp:// and http:// URLs by https://.

2017-07-02  Eli Zaretskii  <eliz@gnu.org>

	Avoid off-by-one errors in column C-n/C-p calculations

	* src/indent.c (Fvertical_motion): Help C-n/C-p estimate correctly
	the width used up by line numbers by looking near the window-start
	point.

2017-07-02  Tino Calancha  <tino.calancha@gmail.com>

	Ask confirmation for all suspicious wildcards

	* lisp/dired-aux.el (dired-do-shell-command): Check that all
	the wildcards are right.  Otherwise, ask for confirmation (Bug#27496).

2017-07-02  Tino Calancha  <tino.calancha@gmail.com>

	Extend dired-do-shell-command substitutions

	Substitute "`?`" inside command with the current file name.
	See details in:
	https://lists.gnu.org/r/emacs-devel/2017-06/msg00618.html
	* lisp/dired-aux.el (dired-quark-subst-regexp, dired-star-subst-regexp):
	Mark as obsolete.
	(dired-isolated-string-re): New defun.
	(dired--star-or-qmark-p): New predicate.
	(dired-do-shell-command): Use dired--star-or-qmark-p.  Substitute "`?`"
	with the current file name.
	* doc/emacs/dired.texi (Shell Commands in Dired): Update manual.

2017-07-02  Alan Mackenzie  <acm@muc.de>

	Fix bug in yesterday's CC Mode commit.

	* lisp/progmodes/cc-mode.el (c-quoted-number-head-before-point): Check a
	search has succeded before using the match data.
	(c-quoted-number-head-before-point, c-quoted-number-head-after-point):
	Specify that the position of the extremity of the head or tail is in the
	match data.

2017-07-02  Philipp Stephani  <phst@google.com>

	Remove FIXME comments about sentinel values

	These FIXMEs can't be addressed because they would require breaking
	changes to the module API.  Furthermore, other module functions don't
	return sentinel values as well, so users generally have to call
	non_local_exit_check anyway.

	* src/emacs-module.c (module_set_user_ptr)
	(module_set_user_finalizer, module_vec_set, module_vec_size): Remove
	FIXME comments.

2017-07-02  Philipp Stephani  <phst@google.com>

	Adapt Lisp reference to reader changes

	The reader now warns about some unescaped character literals, but
	still allows them for compatibility reasons.  Slightly adapt the
	manual to forbid them officially.

	* doc/lispref/objects.texi (Basic Char Syntax): Document that
	backslashes are now required before some characters.

2017-07-02  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#27502

	* lisp/autorevert.el (auto-revert-find-file-function): New defun.
	(find-file-hook): Use it.  (Bug#27502)
	(auto-revert-remove-current-buffer): New defun.
	(auto-revert-mode, auto-revert-buffers): Use it.

2017-07-02  Noam Postavsky  <npostavs@gmail.com>

	Let test summary go through even if some logs were not generated

	* lisp/emacs-lisp/ert.el (ert-summarize-tests-batch-and-exit): Check
	for existence of log files before reading.

2017-07-01  Philipp Stephani  <phst@google.com>

	* src/module-env-25.h (copy_string_contents): Fix comment.

2017-07-01  Philipp Stephani  <phst@google.com>

	Also mark module init function as noexcept if possible

	* src/emacs-module.h.in (emacs_module_init): Mark as noexcept if
	possible.

2017-07-01  Philipp Stephani  <phst@google.com>

	Improve C++98 compatibility

	* src/emacs-module.h.in (emacs_funcall_exit): Lose trailing comma.
	C++98 doesn't allow trailing commas in enumerations.

2017-07-01  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits of manuals regarding bidi conformance

	* doc/emacs/mule.texi (Bidirectional Editing):
	* doc/lispref/display.texi (Bidirectional Display): Update the
	bidi conformance text.

2017-07-01  Alan Mackenzie  <acm@muc.de>

	Make C++ digit separators work.  Amend the handling of single quotes generally

	Single quotes, even in strings and comments, are now marked with the
	"punctuation" syntax-table property, except where they are validly bounding a
	character literal.  They are font locked with font-lock-warning-face except
	where they are valid.  This is done in C, C++, ObjC, and Java Modes.

	* lisp/progmodes/cc-defs.el (c-clear-char-property-with-value-on-char-function)
	(c-clear-char-property-with-value-on-char, c-put-char-properties-on-char): New
	functions/macros.

	* lisp/progmodes/cc-fonts.el (c-font-lock-invalid-single-quotes): New function.
	(c-basic-matchers-before): invoke c-font-lock-invalid-single-quotes.

	* lisp/progmodes/cc-langs.el (c-get-state-before-change-functions): Remove
	c-before-after-change-digit-quote from wherever it occurs.  Insert
	c-parse-quotes-before-change into the entries for the languages where it is
	needed.
	(c-before-font-lock-functions): Remove c-before-after-change-digit-quote from
	wherever it occurs.  Insert c-parse-quotes-after-change into the entries for
	the languages which need it.
	(c-has-quoted-numbers): New lang-defconst/-defvar.

	* lisp/progmodes/cc-mode.el (c-before-after-change-digit-quote): Remove.
	(c-maybe-quoted-number-head, c-maybe-quoted-number-tail)
	(c-maybe-quoted-number): New defconsts.
	(c-quoted-number-head-before-point, c-quoted-number-tail-after-point)
	(c-quoted-number-straddling-point, c-parse-quotes-before-change)
	(c-parse-quotes-after-change): New functions.

2017-07-01  Noam Postavsky  <npostavs@gmail.com>

	Ignore mouse-movement for describe-key-briefly (Bug#12204)

	* lisp/help.el (help-read-key-sequence): Add optional argument ot
	ignore `mouse-movement' events.
	(describe-key-briefly): Use it.
	* doc/emacs/help.texi (Key Help):
	* etc/NEWS: Mention that mouse movement is ignored.

2017-07-01  Noam Postavsky  <npostavs@gmail.com>

	Refactor key describing commands

	* lisp/help.el (help-read-key-sequence, help--analyze-key): New
	functions, extracted from `describe-key' and `describe-key-briefly'.
	(describe-key, describe-key-briefly): Use them.

2017-07-01  Eli Zaretskii  <eliz@gnu.org>

	Improve display of tabs with line numbers

	* src/xdisp.c (x_produce_glyphs): Improve calculation of next tab
	stop in hscrolled lines.  Prevent aborts in compute_line_metrics.

2017-07-01  Alan Third  <alan@idiocy.org>

	Fix threads on NS (bug#25265)

	src/nsterm.h (ns_select): Compiler doesn't like sigmask being const.
	(ns_run_loop_break) [HAVE_PTHREAD]: New function.
	src/nsterm.m (ns_select): Call thread_select from within ns_select.
	(ns_run_loop_break) [HAVE_PTHREAD]: New function.
	(ns_send_appdefined): Don't wait for main thread when sending app
	defined event.
	src/process.c (wait_reading_process_output): Call thread_select from
	within ns_select.
	src/systhread.c (sys_cond_broadcast) [HAVE_NS]: Break ns_select out of
	its event loop using ns_run_loop_break.

2017-07-01  Eli Zaretskii  <eliz@gnu.org>

	Avoid slow redisplay under 'visual' mode of line numbers

	* src/xdisp.c (display_count_lines_visually): Avoid very slow
	redisplay when this function is invoked very far from point.
	Reported by Alex <agrambot@gmail.com>.

2017-07-01  Noam Postavsky  <npostavs@gmail.com>

	* lisp/help-fns.el (describe-variable): Let-bind cl-print-compiled-button.

2017-07-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-extra.el (cl--random-state): New defstruct

	(cl--random-state, cl--random-time): Move from cl-lib.el.
	(cl-random): Use struct accessors.
	(cl-random-state-p): Remove, provided by the defstruct.
	(cl-make-random-state): Rewrite to struct constructor.

2017-07-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/debug.el (debugger-list-functions): Remove obsolete msg

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of faces related to display-line-numbers

	* lisp/faces.el (line-number, line-number-current-line): Warn
	against using non-monospaced fonts.

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Fix relative-number display with non-nil display-line-number-width

	* src/xdisp.c (maybe_produce_line_number): Don't treat a zero
	value of display-line-number-width as acceptable.
	Handle the case of 'relative' with display-line-number-width
	non-nil and smaller than the absolute line number requires.
	Reported by Alex <agrambot@gmail.com>.

2017-06-30  Michael Albinus  <michael.albinus@gmx.de>

	Release Tramp 2.3.2

	* doc/misc/tramp.texi (Android shell setup): Show default file name.
	Structure section.

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.2".

	* test/lisp/net/tramp-tests.el (tramp-test-temporary-file-directory):
	Offer home directory for mock method if it doesn't exist.

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Add documentation for display-line-numbers

	* doc/emacs/custom.texi (Init Rebinding):
	* doc/emacs/modes.texi (Minor Modes): Remove references to
	linum-mode.
	* doc/emacs/display.texi (Display Custom): Describe the
	line-number display.
	(Optional Mode Line): Fix the index entry to not conflict with
	that in "Display Custom".
	* doc/emacs/basic.texi (Position Info): Add cross-reference to
	"Display Custom", for line-number display.

	* src/xdisp.c (syms_of_xdisp): <display-line-numbers>: Mention
	display-line-numbers-disable in the doc string.

	* lisp/cus-start.el (standard): Fix lst change.

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Support displaying zero as the number of the current line

	* src/xdisp.c (syms_of_xdisp)
	<display-line-numbers-current-absolute>: New variable.
	<display-line-numbers>: Doc fix.
	(maybe_produce_line_number): Support nil value of
	display-line-numbers-current-absolute.

	* lisp/cus-start.el (standard): Add customization form for
	display-line-numbers-current-absolute.

	* etc/NEWS: Document recently introduced features.

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Speed up the visual-mode relative line numbers

	* src/xdisp.c (display_count_lines_visually): Introduce a
	shortcut: if a relative line number was already calculated for
	this iterator object, just increase it instead of the
	expensive call to move_it_to.  Argument list changed to pass a
	pointer to the iterator object.
	(maybe_produce_line_number): Adjust for change in signature of
	display_count_lines_visually.  Record the relative line number and
	the corresponding byte position in the iterator object also in the
	'visual' mode.

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Fix hscrolling with line numbers on TTY frames

	* src/xdisp.c (hscroll_window_tree): Correct the X offset
	calculations on TTY frames.
	* src/term.c (produce_glyphs): Use it->lnum_pixel_width instead of
	a kludge using it->lnum_width.

2017-06-30  Eli Zaretskii  <eliz@gnu.org>

	Fix TAB display when the line-number face uses a smaller/larger font

	* src/dispextern.h (struct it): New member lnum_pixel_width.
	* src/xdisp.c (maybe_produce_line_number): Compute the width of
	the line-number display in pixels.
	(x_produce_glyphs): Use it->lnum_pixel_width instead of a kludge
	that used it->lnum_width and made assumptions about pixel width.

2017-06-30  Noam Postavsky  <npostavs@gmail.com>

	Escape NUL bytes in X selections (Bug#6991)

	* lisp/term/w32-win.el (w32--set-selection):
	* lisp/select.el (xselect--encode-string): Replace NUL bytes with
	"\0".
	* doc/emacs/killing.texi: Document new behavior.
	* etc/NEWS (times): Announce it.

2017-06-30  Noam Postavsky  <npostavs@gmail.com>

	Hide byte code in backtraces (Bug#6991)

	* lisp/emacs-lisp/debug.el (debugger-print-function): New defcustom,
	defaulting to `cl-print'.
	(debugger-insert-backtrace, debugger-setup-buffer): Use it instead of
	`prin1'.
	* etc/NEWS: Announce it.

2017-06-30  Noam Postavsky  <npostavs@gmail.com>

	Don't redundantly cl-print arglist in function docstring again

	* lisp/emacs-lisp/cl-print.el (cl-print-object): Don't print arglist
	part of docstring.
	* test/lisp/emacs-lisp/cl-print-tests.el (cl-print-tests-1): Update
	test accordingly.

2017-06-30  Noam Postavsky  <npostavs@gmail.com>

	Escape control characters in backtraces (Bug#6991)

	* src/print.c (syms_of_print): Add new variable,
	print-escape-control-characters.
	(print_object): Print control characters with octal escape codes when
	print-escape-control-characters is true.
	* lisp/subr.el (backtrace):
	* lisp/emacs-lisp/debug.el (debugger-setup-buffer): Bind
	`print-escape-control-characters' to t.

2017-06-30  Noam Postavsky  <npostavs@gmail.com>

	Improve ert backtrace recording

	Change ert to use the new `backtrace-frames' function instead of
	collecting frames one by one with `backtrace-frame'.  Additionally,
	collect frames starting from `signal' instead the somewhat arbitrary
	"6 from the bottom".  Skipping 6 frames would skip the expression that
	actually caused the signal that triggered the debugger.  Possibly 6
	was chosen because in the case of a failed test, the triggering frame
	is an `ert-fail' call, which is not so interesting.  But in case of a
	test throwing an error, this drops the `error' call which is too much.

	* lisp/emacs-lisp/debug.el (debugger-make-xrefs): Remove.
	* lisp/emacs-lisp/ert.el (ert--make-xrefs-region): Bring in relevant
	code from `debugger-make-xrefs'.
	(ert--print-backtrace): Add DO-XREFS parameter, delegate to
	`debugger-insert-backtrace'.
	(ert--run-test-debugger): Record the backtrace frames starting from
	the instigating `signal' call.
	(ert-run-tests-batch): Pass nil for `ert--print-backtrace's new
	DO-XREFS parameter.
	(ert-results-pop-to-backtrace-for-test-at-point): Pass t as DO-XREFS
	to `ert--print-backtrace' and remove call to `debugger-make-xrefs'.
	* test/lisp/emacs-lisp/ert-tests.el (ert-test-record-backtrace): Check
	the backtrace list instead of comparing its string representation.
	Expect `signal' to be the first frame.

2017-06-30  Noam Postavsky  <npostavs@gmail.com>

	Operate on frame list instead of printed backtrace

	* lisp/emacs-lisp/debug.el (debugger-insert-backtrace): New function,
	prints the given backtrace frames.
	(debugger-setup-buffer): Use it instead of editing the backtrace
	buffer text.

2017-06-29  Eli Zaretskii  <eliz@gnu.org>

	Minor fixes

	* src/xdisp.c (maybe_produce_line_number): Fix bug that caused
	line numbers to be displayed in empty lines beyond ZV.
	(x_produce_glyphs): Start fixing TAB display in truncated lines.

2017-06-29  Michael Albinus  <michael.albinus@gmx.de>

	Improve timer handling when Tramp accepts output

	* lisp/net/tramp-compat.el: Avoid compiler warning.

	* lisp/net/tramp-sh.el (tramp-sh-file-name-handler):
	Remove lock machinery.

	* lisp/net/tramp.el (tramp-locked, tramp-locker): Move up.
	(tramp-file-name-handler): Add lock machinery from
	`tramp-sh-file-name-handler'.  Allow timers to run.
	(tramp-accept-process-output): Remove nasty workaround.
	Suppress timers.

	* test/lisp/net/tramp-tests.el (shell-command-sentinel):
	Suppress run in tests.
	(tramp--instrument-test-case-p): New defvar.
	(tramp--instrument-test-case): Use it in order to allow nested calls.
	(tramp--test-message, tramp--test-backtrace): New defsubst,
	will be used for occasional test instrumentation.
	(tramp-test00-availability, tramp-test31-vc-registered): Use them.
	(tramp-test28-shell-command)
	(tramp--test-shell-command-to-string-asynchronously): Suppress
	nasty messages.  Don't overwrite sentinel.
	(tramp-test36-asynchronous-requests): Rewrite major parts.
	Expect :passed.

2017-06-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/url/url-history.el: Use lexical-binding

	(url-completion-function): Mark as obsolete.
	Mark unused args accordingly.

2017-06-28  Noam Postavsky  <npostavs@gmail.com>

	Don't assume url structs are vectors (Bug#27333)

	* lisp/url/url-history.el (url-history-update-url): Use `url-p'
	instead of `vectorp'.

2017-06-28  Mark Oteiza  <mvoteiza@udel.edu>

	Replace with dolist some uses of while

	* lisp/calc/calc-units.el (calc-permanent-units):
	(math-compare-unit-names, math-simplify-units-quotient):
	(math-build-units-table-buffer): Use dolist to replace extra bindings
	and some while loops.

2017-06-28  Noam Postavsky  <npostavs@gmail.com>

	Make tcl-auto-fill-mode obsolete (Bug#10772)

	* lisp/progmodes/tcl.el (tcl-auto-fill-mode): Declare obsolete.
	* etc/NEWS: Announce it.

2017-06-28  Noam Postavsky  <npostavs@gmail.com>

	Don't read eshell/which output from *Help* buffer (Bug#26894)

	* lisp/help-fns.el (help-fns--analyse-function)
	(help-fns-function-description-header): New functions, extracted from
	describe-function-1.
	(describe-function-1): Use them.
	* lisp/eshell/esh-cmd.el (eshell/which): Use
	`help-fns-function-description-header' instead of
	`describe-function-1'.

2017-06-27  Eli Zaretskii  <eliz@gnu.org>

	Support default-text-properties

	* src/xdisp.c (should_produce_line_number): Call get-char-property
	at ZV as well, to support default-text-properties.

2017-06-27  Eli Zaretskii  <eliz@gnu.org>

	Avoid segfaults when some display vector is an empty string

	* src/xdisp.c (next_element_from_display_vector): Don't try
	accessing the dpvec[] array if its size is zero.  (Bug#27504)

2017-06-26  Eli Zaretskii  <eliz@gnu.org>

	Initial support for visually-relative line numbers

	Works very slowly.

	* src/xdisp.c (display_count_lines_visually): New function.
	(maybe_produce_line_number): Support 'visual' mode of line-number
	display.
	* src/xdisp.c (maybe_produce_line_number): Update IT's metrics
	also when glyph_row is NULL.  This is important for move_it_*
	functions.
	(syms_of_xdisp) <display-line-number-width>: Now buffer-local.
	(try_window_id, redisplay_window, try_cursor_movement): For
	'visual' line-number display, disable the same redisplay
	optimizations as for 'relative'.

	* lisp/cus-start.el (standard): Add new value for the
	customization form of display-line-numbers.

2017-06-26  Eli Zaretskii  <eliz@gnu.org>

	Update IT's metrics while simulating display

	* src/xdisp.c (maybe_produce_line_number): Update IT's metrics
	also when glyph_row is NULL.  This is important for move_it_*
	functions.

2017-06-26  Teemu Likonen  <tlikonen@iki.fi>

	Fix bug in handling GnuPG's TRUST_MARGINAL status

	* lisp/epg.el (epg--status-TRUST_MARGINAL): Change symbol `marginal'
	to `good'.

2017-06-26  Tino Calancha  <tino.calancha@gmail.com>

	Prefer `when' instead of 1-branch `if'

	* lisp/dired-aux.el (dired-do-shell-command): Store condition value
	in local variable ok.
	Use `when' instead of 1-branch `if'.

2017-06-26  Tino Calancha  <tino.calancha@gmail.com>

	Use #' instead of (function ...)

	* lisp/dired-aux.el (dired-do-chxxx, dired-clean-directory)
	(dired-mark-confirm, dired-query, dired-byte-compile)
	(dired-load, dired-update-file-line, dired-after-subdir-garbage)
	(dired-relist-file, dired-rename-subdir, dired-do-create-files)
	(dired-mark-read-file-name, dired-do-copy, dired-do-symlink)
	(dired-do-hardlink, dired-do-rename, dired-do-rename-regexp)
	(dired-do-copy-regexp, dired-do-hardlink-regexp)
	(dired-do-symlink-regexp, dired-create-files-non-directory)
	(dired-upcase, dired-downcase)

	* lisp/dired.el (dired-mode, dired-copy-filename-as-kill)
	(dired-internal-do-deletions, dired-internal-do-deletions):
	Prefer #' instead of (function ...).

2017-06-26  Tino Calancha  <tino.calancha@gmail.com>

	Don't quote lambda forms

	* lisp/dired.el (dired-re-maybe-mark, dired-map-over-marks)
	(dired-mark, dired-desktop-buffer-misc-data)

	* lisp/dired-aux.el (dired-do-create-files, dired-do-create-files-regexp)
	(dired-create-files-non-directory, dired-insert-subdir-validate)
	(dired-alist-sort, dired-do-shell-command): Don't quote lambda forms.

2017-06-26  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-fonts.el: Remove/mark unused vars

	(c-font-lock-declarators): Remove unused vars `id-end', `paren-depth',
	and `brackets-after-id'.
	(c-font-lock-objc-methods): Mark unused args.

2017-06-25  Paul Eggert  <eggert@cs.ucla.edu>

	Omit null-pointer test in intervals.h FRAME

	* src/intervals.h (ROOT_INTERVAL_P, ONLY_INTERVAL_P)
	(INTERVAL_LAST_POS): Omit unnecessary parens.
	(LENGTH): Omit test for null pointer.  The argument is never null.
	The unnecessary test causes GCC 7.1.0 to assume that the argument
	might be null, and therefore to issue false alarms when the
	argument is dereferenced in other expressions.

2017-06-25  Paul Eggert  <eggert@cs.ucla.edu>

	Parenthesize frame.h macro definitions

	* src/frame.h (FRAME_TOOL_BAR_POSITION)
	(FRAME_VERTICAL_SCROLL_BAR_TYPE, FRAME_HAS_VERTICAL_SCROLL_BARS)
	(FRAME_HAS_VERTICAL_SCROLL_BARS_ON_LEFT)
	(FRAME_HAS_VERTICAL_SCROLL_BARS_ON_RIGHT)
	(FRAME_OVERRIDE_REDIRECT, FRAME_UNDECORATED, FRAME_PARENT_FRAME)
	(FRAME_SKIP_TASKBAR, FRAME_NO_FOCUS_ON_MAP)
	(FRAME_NO_ACCEPT_FOCUS, FRAME_NO_SPECIAL_GLYPHS, FRAME_Z_GROUP)
	(FRAME_Z_GROUP_NONE, FRAME_Z_GROUP_ABOVE, FRAME_Z_GROUP_BELOW)
	(FRAME_HAS_HORIZONTAL_SCROLL_BARS): Parenthesize macro definiens
	to allow arbitrary expression arguments.

2017-06-25  Paul Eggert  <eggert@cs.ucla.edu>

	Port recent frame changes to GCC 7

	* src/frame.c (keep_ratio): New arg P.  Caller changed.  Since it
	is non-null, it avoids a GCC 7 warning that FRAME_PARENT_FRAME
	might return null.  This also avoids a run-time test.

2017-06-25  Eli Zaretskii  <eliz@gnu.org>

	Minor aesthetic fix of last change.

2017-06-25  Eli Zaretskii  <eliz@gnu.org>

	Allow to disable display of line numbers beyond EOB

	* src/buffer.c (disable_line_numbers_overlay_at_eob): New
	function.
	* src/lisp.h (disable_line_numbers_overlay_at_eob): Add prototype.
	* src/xdisp.c (should_produce_line_number): When at ZV, call
	disable_line_numbers_overlay_at_eob to determine whether line
	numbers should be displayed beyond ZV.

2017-06-25  Michael Albinus  <michael.albinus@gmx.de>

	Fix Android 6/7 problems in Tramp

	* lisp/net/tramp-adb.el (tramp-adb-ls-toolbox-regexp): Fix link part.
	(tramp-adb-handle-directory-files-and-attributes)
	(tramp-adb-handle-file-name-all-completions): Insert "."  and
	".." only when needed.
	(tramp-adb-get-ls-command): Force one column output for toybox.

2017-06-25  Stefan-W. Hahn  <stefan.hahn@s-hahn.de>  (tiny change)

	* lisp/subr.el (setq-local): Add debug declaration (Bug#27408).

2017-06-25  Eli Zaretskii  <eliz@gnu.org>

	Fix line number display for overlay/display strings with newlines

	* src/xdisp.c (maybe_produce_line_number): Fix the condition for
	producing space glyphs instead of a line number to include the
	case of display strings and overlays.

2017-06-25  Alan Mackenzie  <acm@muc.de>

	Make CC Mode load cl-lib rather than cl in Emacs 26.

	* lisp/progmodes/cc-cmds.el (c-declaration-limits): Remove unused local
	variable.

	* lisp/progmodes/cc-defs.el (c--mapcan-status): Remove.
	(c--cl-library): New variable.
	(Top level): Amend the form which requires library cl or cl-lib.
	(c--mapcan, c--set-difference, c--intersection, c--macroexpand-all)
	(c--delete-duplicate): Amend to use c--cl-library instead of
	c--mapcan-status.

	* lisp/progmodes/cc-engine.el (c-syntactic-skip-backward)
	(c-back-over-compound-identifier): Remove unused local variables.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Remove an unused
	local variable.

	* lisp/progmodes/cc-langs.el (Top level): Amend to use c--cl-library instead
	of c--mapcan-status.

	* lisp/progmodes/cc-styles.el (Top level): Add a cc-bytecomp-defun to try to
	silence a compiler warning.

2017-06-25  Martin Rudalics  <rudalics@gmx.at>

	Provide additional support for child frames

	Provide mouse dragging and resizing of frames.  Allow resizing
	frames proportionally.  Provide additional functionality for
	child frames.  Minor bug fixes.

	* lisp/frame.el (frame-border-width, frame-pixel-width)
	(frame-pixel-height): Alias to `frame-internal-border-width',
	`frame-native-width' and `frame-native-height'.
	(frame-inner-width, frame-inner-height, frame-outer-width)
	(frame-outer-height): New functions.
	* lisp/minibuffer.el (completion-auto-help): Fix typo.
	* lisp/mouse.el (mouse-drag-line, mouse-drag-mode-line)
	(mouse-drag-header-line): Allow moving a frame by dragging the
	mode line of its bottommost window (on a minibuffer-less frame)
	or the header line of its topmost window.
	(mouse-drag-vertical-line): Mention argument in doc-string.
	(mouse-resize-frame, mouse-drag-frame, mouse-drag-left-edge)
	(mouse-drag-top-left-corner, mouse-drag-top-edge)
	(mouse-drag-top-right-corner, mouse-drag-right-edge)
	(mouse-drag-bottom-right-corner, mouse-drag-bottom-edge)
	(mouse-drag-bottom-left-corner): New functions for resizing a
	frame by dragging its internal border together with
	corresponding key bindings.
	* lisp/tooltip.el (tooltip-frame-parameters): Add
	'no-special-glyphs' to default parameters and update version
	tag.
	* lisp/window.el (frame-auto-hide-function): Add choice to make
	frame invisible and update version tag.
	(window--delete): Handle 'auto-hide-function' frame parameter.
	(window--maybe-raise-frame): Respect 'no-focus-on-map' and
	'no-accept-focus' frame parameters.
	(display-buffer--action-function-custom-type): Add
	`display-buffer-in-child-frame'.
	(display-buffer): Mention `display-buffer-in-child-frame' in
	doc-string.
	(display-buffer-in-child-frame): New action function for
	`display-buffer'.
	(window--sanitize-margin): Return zero when MARGIN cannot be
	sanitized.
	(fit-frame-to-buffer): Major rewrite to handle child frames and
	'fit-frame-to-buffer-sizes' and 'fit-frame-to-buffer-margins'
	frame parameters.
	(window-largest-empty-rectangle--maximums-1)
	(window-largest-empty-rectangle--maximums)
	(window-largest-empty-rectangle--disjoint-maximums)
	(window-largest-empty-rectangle): New functions.

	* src/dispextern.h (WINDOW_WANTS_MODELINE_P)
	(WINDOW_WANTS_HEADER_LINE_P): Remove.  Functionality is now
	provided by corresponding functions window_wants_modeline and
	window_wants_header_line in window.c.  Adjust users.
	* src/dispnew.c (adjust_glyph_matrix)
	(buffer_posn_from_coords): Use window_wants_modeline and
	window_wants_header_line instead of WINDOW_WANTS_MODELINE_P and
	WINDOW_WANTS_HEADER_LINE_P.
	* src/frame.c (keep_ratio): New function.
	(adjust_frame_size): Call keep_ratio for each of F's child
	frames.
	(make_frame): Initialize no_special_glyphs slot.
	(frame_internal_border_part): New function.
	(Fframe_pixel_width, Fframe_pixel_height, Fborder_width): Rename
	to Fframe_native_width, Fframe_native_height mand
	Fframe_internal_border_width.
	(frame_parm_table): Add Qno_special_glyphs entry.
	(frame_float_type): New enumeration type.
	(frame_float): New function to handle frame size and position
	ratios.
	(x_set_frame_parameters): Handle size and position ratios.
	(x_set_no_special_glyphs): New function
	(x_figure_window_size): Handle size and position ratios.
	(syms_of_frame): Add Qdisplay_monitor_attributes_list,
	Qno_special_glyphs, Qframe_edges, Qkeep_ratio, Qwidth_only,
	Qheight_only, Qleft_only and Qtop_only.
	* src/frame.h (internal_border_part): New enumeration type.
	(struct frame): New slot no_special_glyphs.
	(FRAME_NO_SPECIAL_GLYPHS): New macro.
	* src/gtkutil.c (xg_frame_restack): Return immediately for
	GTK versions before 2.18.0.
	* src/keyboard.c (internal_border_parts): New array constant.
	(make_lispy_position): For frames with border dragging enabled
	return internal border part.
	(syms_of_keyboard): New symbols Qdrag_internal_border,
	Qleft_edge, Qtop_left_corner, Qtop_edge, Qtop_right_corner,
	Qright_edge, Qbottom_right_corner, Qbottom_edge and
	Qbottom_left_corner.
	* src/minibuf.c (read_minibuf_unwind): When exiting the
	minibuffer deal with frames that have the 'minibuffer-exit'
	parameter set.
	(syms_of_minibuf): New symbol Qminibuffer_exit.
	* src/nsfns.m (frame_parm_handler): Add entry for
	x_set_no_special_glyphs.
	(Fx_create_frame): Handle 'no-special-glyphs' parameter.
	Intitialize new cursor types for dragging frame borders.
	* src/nsterm.h (struct ns_output): Add new cursor types for
	dragging frame borders.
	* src/w32fns.c (w32_frame_parm_handlers): Add entry for
	x_set_no_special_glyphs.
	(Fx_create_frame): Handle 'no-special-glyphs' parameter.
	Intitialize new cursor types for dragging frame borders.
	* src/w32term.h (struct w32_output): Add new cursor types for
	dragging frame borders.
	* src/window.c (coordinates_in_window)
	(Fwindow_line_height, window_internal_height): Use
	window_wants_modeline and window_wants_header_line instead of
	WINDOW_WANTS_MODELINE_P and WINDOW_WANTS_HEADER_LINE_P.
	(Fwindow_lines_pixel_dimensions): New function.
	(window_parameter): New function.
	(Fwindow_parameter): Call window_parameter.
	(window_wants_mode_line, window_wants_header_line): New
	functions replacing the macros WINDOW_WANTS_MODELINE_P and
	WINDOW_WANTS_HEADER_LINE_P from dispextern.h.
	(syms_of_window): New symbols Qmode_line_format and
	Qheader_line_format.
	* src/window.h: Reorganize and re-comment macros.  Use
	window_wants_modeline and window_wants_header_line instead of
	WINDOW_WANTS_MODELINE_P and WINDOW_WANTS_HEADER_LINE_P.
	(MINI_NON_ONLY_WINDOW_P, MINI_ONLY_WINDOW_P): Minor rewrite.
	(WINDOW_BUFFER): New macro.
	(WINDOW_BOX_LEFT_EDGE_COL, WINDOW_BOX_RIGHT_EDGE_COL): Remove.
	* src/xdisp.c (window_text_bottom_y, window_box_height)
	(window_box, start_display)
	(compute_window_start_on_continuation_line)
	(try_cursor_movement, redisplay_window)
	(try_window_reusing_current_matrix, try_window_id)
	(display_line, expose_window): Use window_wants_modeline and
	window_wants_header_line instead of WINDOW_WANTS_MODELINE_P and
	WINDOW_WANTS_HEADER_LINE_P.
	(pos_visible_p, display_mode_lines): Respect W's
	'mode-line-format' and 'header-line-format' window parameters.
	(init_iterator): Use window_wants_modeline and
	window_wants_header_line instead of WINDOW_WANTS_MODELINE_P and
	WINDOW_WANTS_HEADER_LINE_P.  For tip frames respect
	no_special_glyphs value.
	(note_mouse_highlight): Set frame border cursors when on
	internal border.
	(x_draw_right_divider, x_draw_bottom_divider): Try to improve
	drawing of window dividers.
	* src/xfns.c (mouse_cursor): Add entries for border parts.
	(mouse_cursor_types): Add entries for cursor types to drag
	frame borders.
	(INSTALL_CURSOR): Add entries for new cursor types to drag
	frame borders.
	(Fx_create_frame): Handle 'no-special-glyphs' parameter.
	(x_frame_parm_handlers): Add entry for
	x_set_no_special_glyphs.
	(Vx_window_left_edge_shape, Vx_window_top_left_corner_shape)
	(Vx_window_top_edge_shape, Vx_window_top_right_corner_shape)
	(Vx_window_right_edge_shape)
	(Vx_window_bottom_right_corner_shape)
	(Vx_window_bottom_edge_shape)
	(Vx_window_bottom_left_corner_shape): New variables.
	(x_frame_restack): Call xg_frame_restack only for GTK versions
	starting with 2.18.0.
	* src/xterm.c (x_free_frame_resources): Remove new cursors for
	dragging frame borders.
	* src/xterm.h (struct x_output): Add new cursor types for
	dragging frame borders.

	* doc/lispref/display.texi (Size of Displayed Text): Document
	`window-lines-pixel-dimensions'.
	* doc/lispref/elisp.texi (Top): Add entry for "Mouse Dragging
	Parameters".
	* doc/lispref/frames.texi (Frame Size): Replace
	frame-pixel-width/-height by frame-native-width/-height.  Add
	frame-inner-width/-height and frame-outer-width/-height docs.
	(Position Parameters): Describe specifying position as ratios.
	Clarify remark about positions relative to bottom/ridge display
	edge.
	(Size Parameters): Describe specifying sizes as ratios.
	Describe 'fit-frame-to-buffer-margins' and
	'fit-frame-to-buffer-sizes' parameters.
	(Layout Parameters): Describe 'no-special-glyphs' parameter.
	(Frame Interaction Parameters): Describe 'auto-hide-function',
	'minibuffer-exit' and 'keep-ratio' parameters.
	(Mouse Dragging Parameters): New section describing
	'drag-internal-border', 'drag-with-header-line',
	'drag-with-mode-line', 'snap-width', 'top-visible' and
	'bottom-visible' parameters.
	(Management Parameters): Mention that `override-redirect' has
	no effect on MS Windows.
	(Font and Color Parameters): Mention child frames for `alpha'
	parameter.
	(Child Frames): Rewrite section with description and cross
	references to new frame parameters added.
	* doc/lispref/modes.texi (Mode Line Basics): Mention
	'mode-line-format' and 'header-line-format' window parameters.
	* doc/lispref/windows.texi (Resizing Windows): Mention effect
	of `fit-frame-to-buffer-margins' for child frames.
	(Display Action Functions): New action function
	`display-buffer-in-child-frame'.
	(Quitting Windows): Mention `make-frame-invisible' as optional
	value of `frame-auto-hide-function' and `auto-hide-function'
	frame paameter.
	(Coordinates and Windows): Describe new function
	`window-largest-empty-rectangle'.
	(Window Parameters): Describe new parameters 'mode-line-format'
	and 'header-line-format'.  Index all window parameters described
	in this section.

2017-06-25  Paul Eggert  <eggert@cs.ucla.edu>

	Adjust lm-verify to accept current notices

	Problem reported by Mike Kupfer in:
	https://lists.gnu.org/r/emacs-devel/2017-06/msg00512.html
	* lisp/emacs-lisp/lisp-mnt.el (lm-crack-copyright):
	Do not require later lines in a copyright notice to have more
	indentation than earlier lines.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Minor change in NEWS.

	Improve documentation in NEWS.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Move additional hscrolling code into a suitable 'if'

	* src/xdisp.c (hscroll_window_tree): Make additional calculations
	regarding glyphs produced for line numbers conditional on
	line-number display.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Partial fix of hscroll of truncated lines with line numbers

	* src/xdisp.c (x_produce_glyphs, hscroll_window_tree): Adjust
	hscroll calculations to line-number display.
	* src/term.c (produce_glyphs): Adjust tab stop to window's
	hscroll.  These two changes fix horizontal scrolling when line
	numbers are displayed.  But there's still a bug: the horizontal
	shift of lines that begin with a TAB is different from the rest.
	* src/xdisp.c (move_it_in_display_line_to): Call
	should_produce_line_number to determine whether a line number
	should be produced for this screen line.

2017-06-24  Noam Postavsky  <npostavs@gmail.com>

	Don't change byte-compile-delete-errors at runtime (Bug#27340)

	* lisp/emacs-lisp/eieio-core.el: Confine `cl-declaim' calls to compile
	time.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Allow Lisp program to disable line-number display for specific lines

	* etc/NEWS: Update the documentation.

	* src/xdisp.c (syms_of_xdisp) <display-line-numbers-disable>: New
	symbol.
	(should_produce_line_number): New function.
	(display_line): Use should_produce_line_number to determine
	whether a line number should be produced for each glyph row.

2017-06-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/net/html2text.el: Move to obsolete/.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Support a separate face for displaying the current line's number

	* lisp/faces.el (line-number-current-line): New face.

	* src/xdisp.c (syms_of_xdisp) <line-number-current-line>: New
	symbol.
	(try_window_id, try_cursor_movement): Disable these optimizations
	when the line-number-current-line face is different from
	line-number face.
	(maybe_produce_line_number): Display the current line in the
	line-number-current-line face, if it's different from line-number.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Change display of current line in relative mode

	* src/xdisp.c (maybe_produce_line_number): In relative mode
	display the current line number as its absolute value, not as zero.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Rename display-line-width

	* etc/NEWS:
	* src/xdisp.c (syms_of_xdisp, maybe_produce_line_number):
	* lisp/cus-start.el: Rename display-line-width to
	display-line-number-width.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Fix tab stops when line numbers are displayed

	* src/xdisp.c (x_produce_glyphs):
	* src/term.c (produce_glyphs): Adjust tab stops for the horizontal
	space taken by the line-number display.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Fix crashes on TTY frames due to negative lnum_width.

	Don't display line numbers in the minibuffer and in tooltip frames.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Fix problems with line-number updates in Follow mode

	* src/xdisp.c (redisplay_window): If forced window-start requires
	to move a window's point, and the window is under relative
	line-number display, force another round of redisplay to update
	the relative line numbers.  This fixes follow-mode "redisplay" of
	its window group.

	* lisp/frame.el: Add display-line-numbers to the list of variables
	that should trigger redisplay of the current buffer.

2017-06-24  Eli Zaretskii  <eliz@gnu.org>

	Fix display of line numbers with fonts larger than the default

	* src/xdisp.c (maybe_produce_line_number): Update the metrics in
	IT, not in IT->glyph_row, since the latter gets overwritten in
	display_line.  Fixes display of line numbers when the font used
	for them is larger than that of the default face.

2017-06-23  Eli Zaretskii  <eliz@gnu.org>

	Fix background color beyond EOB and cursor display

	* src/xdisp.c: 	(maybe_produce_line_number): Use the default face
	for background of the blank glyphs in the line-number area which
	are drawn beyond EOB.
	(display_line): Reset the glyph row's displays_text_p flag only on
	empty lines that don't display line numbers.  This fixes cursor
	display beyond EOB.  Fix the bidi information in the glyphs
	produced for line numbers.  Set the avoid_cursor_p flag of glyphs
	produced for line numbers.

2017-06-23  Eli Zaretskii  <eliz@gnu.org>

	Fix display of indicate-empty-lines when line numbers are displayed

	* src/xdisp.c (row_text_area_empty): New function.
	(display_line): Call row_text_area_empty to verify that a glyph
	row's text area is devoid of any glyphs that came from a buffer or
	a string.  This fixes a bug with empty-lines indication
	disappearing when line numbers or line-prefix are displayed.
	(display_line): Delete the argument FORCE; all callers changed.
	Remove the condition for actually producing the glyphs for the
	line number, as even if the number didn't change we need to
	produce empty space.

2017-06-23  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Fix symbol relocation when the relocated cell is renamed.

	* lisp/ses.el (ses-sym-rowcol):  Check that the renamed cell
	hashmap has been instantiated before getting data from it.  When
	editing several spreadsheets, and you have spreadsheet #1 with a
	cell named `foo', and no renamed cell in spreadsheet #2, then if
	you make a formula with `foo' in spreadsheet #2, not doing this
	check will make an error.
	(ses-cell-set-formula): Robustify versus incorrect cell references
	given in the user provided formula.  An explicit error message is
	provided after the action when the user gives an incorrect cell
	reference, but the formula edition is not changed.  This means that
	if the incorrect reference is to a cell that is created someday,
	then this new cell will not have the edited cell in its reference
	list.  Fixing this can still be done by editing again the first
	cell formula.
	(ses-relocate-symbol): Do not create symbol of referred-to cell
	when this is a renamed cell.

2017-06-23  Rasmus  <rasmus@gmx.us>

	Synchronize with the "emacs-sync" branch from Org

2017-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	Remove getc_unlocked configure-time check

	* configure.ac (getc_unlocked): Remove check, as unlocked-io now
	does this for us.

2017-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	Use unlocked stdio more systematically

	This can improve performance significantly on stdio-bottlenecked code.
	E.g., make-docfile is 3x faster on my Fedora 25 x86-64 desktop.
	* admin/merge-gnulib (GNULIB_MODULES): Add unlocked-io.
	* lib-src/ebrowse.c, lib-src/emacsclient.c, lib-src/etags.c:
	* lib-src/hexl.c, lib-src/make-docfile.c, lib-src/movemail.c:
	* lib-src/profile.c, lib-src/update-game-score.c:
	Include unlocked-io.h instead of stdio.h, since these programs are
	single-threaded.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib/unlocked-io.h, m4/unlocked-io.m4: New files, copied from Gnulib.
	* src/charset.c, src/cm.c, src/emacs.c, src/image.c, src/keyboard.c:
	* src/lread.c, src/term.c:
	Include sysstdio.h, possibly instead of stdio.h, to define
	the unlocked functions if the system does not provide them.
	* src/charset.c, src/lread.c (getc_unlocked):
	Remove, since sysstdio.h now defines it if needed.
	* src/cm.c (cmputc, cmcheckmagic):
	* src/dispnew.c (update_frame, update_frame_with_menu)
	(update_frame_1, Fsend_string_to_terminal, Fding, bitch_at_user):
	* src/emacs.c (main, Fdump_emacs):
	* src/fileio.c (Fdo_auto_save, Fset_binary_mode):
	* src/image.c (slurp_file, png_read_from_file, png_load_body)
	(our_stdio_fill_input_buffer):
	* src/keyboard.c (record_char, kbd_buffer_get_event, handle_interrupt):
	* src/lread.c (readbyte_from_file):
	* src/minibuf.c (read_minibuf_noninteractive):
	* src/print.c (printchar_to_stream, strout)
	(Fredirect_debugging_output):
	* src/sysdep.c (reset_sys_modes, procfs_ttyname)
	(procfs_get_total_memory):
	* src/term.c (tty_ring_bell, tty_send_additional_strings)
	(tty_set_terminal_modes, tty_reset_terminal_modes)
	(tty_update_end, tty_clear_end_of_line, tty_write_glyphs)
	(tty_write_glyphs_with_face, tty_insert_glyphs)
	(tty_menu_activate):
	* src/xfaces.c (Fx_load_color_file):
	Use unlocked stdio when it should be safe.
	* src/sysstdio.h (clearerr_unlocked, feof_unlocked, ferror_unlocked)
	(fflush_unlocked, fgets_unlocked, fputc_unlocked, fputs_unlocked)
	(fread_unlocked, fwrite_unlocked, getc_unlocked, getchar_unlocked)
	(putc_unlocked, putchar_unloced): Provide substitutes if not declared.

2017-06-22  Glenn Morris  <rgm@gnu.org>

	* lisp/net/shr.el (shr-fill-text): Actually fill the text.  (Bug#27399)

2017-06-22  Michal Nazarewicz  <mina86@mina86.com>

	unidata: don’t check special casing in unidata-check  (bug#26656)

	* admin/unidata/unidata-gen.el (unidata-check): Do not test special
	casing mapping of characters since that mapping is not constructed from
	the unidata.txt file.
	Also, check for integer decoder and cons char earlier so that less
	unnecessary processing is performed.

2017-06-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/descr-text.el (describe-char): Avoid string-*-multibyte

	Avoid string-to-multibyte and string-as-unibyte.
	Don't make *Help* unibyte just because the char was in a unibyte buffer.

2017-06-22  Rasmus  <rasmus@gmx.us>

	Add Org schemas.xml contents to Emacs schemas.xml

	Entries from the Org version of schemas.xml have been added to
	the Emacs version of schemas.xml.

2017-06-22  Rasmus  <rasmus@gmx.us>

	Update Org to v9.0.9

	Please see etc/ORG-NEWS for details.

2017-06-22  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Do not hard code A1 cell reference, as it may be renamed.

	* lisp/ses.el (ses-recalculate-all): `A1' -> `(ses-cell-symbol 0 0)'

2017-06-22  Martin Rudalics  <rudalics@gmx.at>

	Fix make_hash_table calls in lread.c

	* src/lread.c (readevalloop, read_internal_start): Fix
	make_hash_table calls to make build succeed.

2017-06-22  Ken Raeburn  <raeburn@raeburn.org>

	Merge several Lisp reader speedups.

2017-06-22  Ken Raeburn  <raeburn@raeburn.org>

	Create less garbage to collect while reading symbols.

	* src/lread.c (read1): When interning a symbol, only create a new
	string object for the name if we're going to use it for a new symbol
	object.

2017-06-22  Ken Raeburn  <raeburn@raeburn.org>

	Replace read_objects assoc list with two hash tables.

	For larger input files with lots of shared data structures, an
	association list is too slow.

	* src/lread.c (read_objects_map, read_objects_completed): New
	variables, replacing read_objects.
	(readevalloop): Initialize them with hash tables before starting a
	top-level read, if they're not already empty hash tables, and reset
	them to Qnil afterwards if something was added to the hash tables.
	(read_internal_start): Likewise.
	(read1): Store first the placeholder and later the newly read object
	into read_objects_map under the specified object number.  If the new
	object can contain a reference to itself, store it in
	read_objects_completed.
	(substitute_objects_recurse): Check read_objects_completed instead of
	read_objects for the known possibly-recursive objects.
	(syms_of_lread): Update initializations.

2017-06-22  Ken Raeburn  <raeburn@raeburn.org>

	Use getc_unlocked.

	* configure.ac: Check for getc_unlocked.
	* src/charset.c (read_hex, load_charset_map_from_file): Use
	getc_unlocked instead of getc.
	(getc_unlocked) [!HAVE_GETC_UNLOCKED]: Fall back to getc.
	* src/lread.c (readbyte_from_file, Fget_file_char, read1,
	getc_unlocked): Likewise.

2017-06-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	Reduce lread substitutions.

	* src/lread.c (read1): After reading an object using the "#n=" syntax,
	if the read object is a cons cell, instead of recursively substituting
	the placeholder with the new object, mutate the placeholder cons cell
	itself to have the correct car and cdr values.

2017-06-22  Ken Raeburn  <raeburn@raeburn.org>

	Short-circuit substitutions for some simple types.

	Values that don't contain other values cannot be circular, so checking
	for circular objects is a waste of cycles.

	* src/lread.c (substitute_object_recurse): If the subtree being
	examined is a symbol, number, or property-less string, just return
	it.

2017-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	Limit style_format to MAX_ALLOCA

	* src/editfns.c (styled_format): Subtract initial buffer size
	from sa_avail, since it is nontrivial.

2017-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	Limit bidi_find_bracket_pairs to MAX_ALLOCA

	* src/bidi.c (MAX_BPA_STACK): Now a constant, not a macro.
	Shrink it to allow for the two struct bidi_it objects in
	the same frame.
	(PUSH_BPA_STACK): Avoid integer overflow with enormous bidi cache.
	(bidi_find_bracket_pairs): Use compile-time check instead of runtime.

2017-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	Limit insert-file-contents to MAX_ALLOCA

	* src/fileio.c (READ_BUF_SIZE): Don’t allocate more than
	MAX_ALLOCA bytes in a single stack array.

2017-06-21  Paul Eggert  <eggert@cs.ucla.edu>

	Remove malloc_find_address relic

	* src/gmalloc.c (register_heapinfo, _malloc_internal_nolock):
	Omit unnecessary initialization.

2017-06-21  Paul Eggert  <eggert@cs.ucla.edu>

	Fix temacs hybrid_malloc core dump

	Without this patch, ./temacs would dump core sometimes on Fedora
	25 x86-64.  The problem was that the hybrid allocator assumed that
	all pointers into bss_sbrk_buffer are allocated via gmalloc.  This
	assumption is not true on Fedora, because the standard memory
	allocator calls gdefault_morecore, which means its blocks are
	interleaved with our blocks.  Usually the code happened to work,
	because our data structures agreed with the glibc data structures,
	but this was merely luck due to a shared pedigree, and as glibc
	mutates our luck has run out.
	* src/gmalloc.c (ALLOCATED_BEFORE_DUMPING) [HYBRID_MALLOC]:
	Remove; no longer needed.
	(BLOCK): Use unsigned division, as that does the right thing near zero.
	(register_heapinfo, __malloc_internal_nolock, __free_internal_nolock)
	(_realloc_internal_nolock):
	Big blocks now have type -1, not 0, as 0 now means the block is
	not ours.
	(morecore_nolock): Omit now-unnecessary casts to size_t.
	(allocated_via_gmalloc) [HYBRID_MALLOC]: New function.
	(hybrid_free, hybrid_realloc) [HYBRID_MALLOC]: Use it, to
	avoid calling the wrong free or realloc function in some cases.

2017-06-21  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make gnus-article-date-user work

	* lisp/gnus/gnus-art.el (article-date-ut):
	Work for unfolded multi-line Date header.
	(article-transform-date):
	Refactor; add header name if it is missing in user-defined date line.
	(article-date-user): Fix name of date type.

2017-06-21  Noam Postavsky  <npostavs@gmail.com>

	Keep order of completion candidates (Bug#25995, Bug#24676)

	* lisp/minibuffer.el (completion-pcm--filename-try-filter)
	(completion-pcm--all-completions): Use nreverse to undo the reversing
	caused by using push in the loop.

2017-06-21  Glenn Morris  <rgm@gnu.org>

	* src/lread.c (syms_of_lread) <load-history>: Doc fix.

2017-06-21  Alex Gramiak  <agrambot@gmail.com>

	Mark prolog indent variables as safe (bug#27369)

	* lisp/progmodes/prolog.el (prolog-indent-width)
	(prolog-left-indent-regexp, prolog-paren-indent-p)
	(prolog-paren-indent): Add :safe property.

2017-06-20  Simen Heggestøyl  <simenheg@gmail.com>

	Remove `:options' from `css-electric-keys'

	* lisp/textmodes/css-mode.el (css-electric-keys): Remove `:options`
	since it just duplicates the default value.

2017-06-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix crash when built by GNU Gold linker on x86

	Problem reported by Andrés Musetti (Bug#27248).
	* src/widget.c (emacsFrameClassRec): Do not initialize superclass here.
	(emacsFrameClass): Now a function (which initializes the
	superclass) instead of a variable.  All uses changed.

2017-06-20  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify autogen.sh version checking

	* autogen.sh (get_version): Simplify and make more reliable
	by using expr rather than echo | sed.  Check exit status of program.
	Run program in subshell in case it cannot be executed.
	(check_version): Check exit status of command rather than its output.
	Check return status of get_version.

2017-06-20  Katsumi Yamaoka  <yamaoka@jpl.org>

	Delete old Date header in a simple way

	* lisp/gnus/gnus-art.el (article-date-ut): Don't rely on text prop
	when searching the old Date header boundary in order to delete it.

2017-06-20  Bastien  <bzg@gnu.org>

	Revert "Don't bind org-agenda key to an anonymous function"

	This reverts commit 49c0ff29c2e0243ba35ec17e3e3af49369be43db.

2017-06-20  Katsumi Yamaoka  <yamaoka@jpl.org>

	Bind enable-local-variables to nil globally (fix dbe3e41)

	* lisp/gnus/mm-view.el (mm-display-inline-fontify):
	Bind enable-local-variables to nil globally instead of making it
	buffer-local; remove let-bind of local-enable-local-variables.
	cf. <b4mtw3bbfp5.fsf@jpl.org> in the emacs-devel list.

2017-06-20  Glenn Morris  <rgm@gnu.org>

	kill-matching-buffers to optionally not confirm

	* lisp/files.el (kill-matching-buffers):
	Add option to not confirm killing.  (Bug#27286)

2017-06-20  Glenn Morris  <rgm@gnu.org>

	* lisp/files.el (local-enable-local-variables): Doc fix.

2017-06-20  Glenn Morris  <rgm@gnu.org>

	autogen.sh: try to check for tool being present but broken

	* autogen.sh (get_version): Check return status of "--version".
	(check_version): Try to distinguish between a missing tool
	and a broken one.  (Bug#27288)

2017-06-19  Glenn Morris  <rgm@gnu.org>

	Avoid a custom-variable-type error (bug#27363)

	* lisp/cus-edit.el (custom-variable-type):
	Avoid an error due to plist-put becoming stricter of late.

2017-06-19  Glenn Morris  <rgm@gnu.org>

	Don't put deleted packages in the trash (bug#14967)

	* lisp/emacs-lisp/package.el (package-delete):
	Don't pay attention to delete-by-moving-to-trash.

2017-06-19  Nicolas Petton  <nicolas@petton.fr>

	Revert "Add current-line in simple.el"

	This reverts commit ae98cdf9431604d0f722f1db217ca06debfbb7b6.

2017-06-19  Damien Cassou  <damien@cassou.me>

	Add current-line in simple.el

	* lisp/simple.el (current-line): New function.
	* test/lisp/simple-tests.el: Add tests for current-line.

2017-06-19  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't try to eval local variables in Gnus article

	* lisp/gnus/mm-view.el (mm-display-inline-fontify): Disable local vars.

2017-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	Fix emacs-module.h cleaning

	* src/Makefile.in (clean): Do not remove emacs-module.h.in.
	(bootstrap-clean): Remove emacs-module.h.

2017-06-18  Andreas Schwab  <schwab@linux-m68k.org>

	* lisp/url/url-util.el (url-get-url-at-point): Add missing group
	in regex.

2017-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	* lib/gettext.h: Merge from gnulib.

2017-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This (and my previous patch) incorporate:
	2017-06-17 diffseq: port to GCC 7 with --enable-gcc-warnings
	2017-06-15 gettext-h: Update comment
	* lib/diffseq.h: Copy from gnulib.

2017-06-17  Noam Postavsky  <npostavs@gmail.com>

	* test/Makefile.in: Don't suppress test failure for single tests.

2017-06-17  Philipp Stephani  <phst@google.com>

	emacs-module.h: Create emacs_env_26

	This was part of the original design of the module
	API (https://lists.gnu.org/r/emacs-devel/2015-02/msg00960.html),
	but I didn't take it into account when adding the should_quit
	function.

	Instead of duplicating the environment fields or using the C
	preprocessor, use configure to build emacs-module.h.

	* configure.ac: Expand emacs-module.h template.

2017-06-17  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of replace-buffer-contents

	* etc/NEWS (replace-buffer-contents): Fix formatting.

	* src/editfns.c (Freplace_buffer_contents): Doc fix.

2017-06-17  Eli Zaretskii  <eliz@gnu.org>

	Finish up native display of line numbers

	* src/xdisp.c (maybe_produce_line_number): Produce a blank before
	the number, for R2L rows.  Increment 'g' in the loop even if
	glyph_row is NULL.  Accept 2nd argument FORCE and produce the
	line-number glyphs if it is non-zero.
	(move_it_in_display_line_to): Account for the space taken by the
	line-number glyphs.  Call maybe_produce_line_number with 2nd
	argument non-zero.
	(set_cursor_from_row): Fix calculation of cursor X coordinate in
	R2L rows with display-produced glyphs at the beginning.
	(syms_of_xdisp) <line-number>: New face symbol.
	<relative, display-line-width>: New symbols.
	(maybe_produce_line_number): Use the line-number face for
	displaying line numbers.  Support relative line-number display.
	Support user-defined width for displaying line numbers.
	(try_cursor_movement, try_window_id): Disable these optimizations
	when displaying relative line numbers.
	* src/dispextern.h (struct it): New member 'pt_lnum'.

	* lisp/faces.el (line-number): New face.
	* lisp/cus-start.el (standard): Provide customization forms for
	display-line-numbers and display-line-width.
	* lisp/menu-bar.el (menu-bar-showhide-menu): Add menu-bar item to
	turn display-line-numbers on and off.

	* etc/NEWS: Document the new feature.

2017-06-17  Philipp Stephani  <phst@google.com>

	Allow local variables section to begin with a square bracket

	Fixes Bug#27391.

	* lisp/international/mule.el (find-auto-coding): Fix regular
	expression for "Local Variables" section.

	* test/lisp/international/mule-tests.el (find-auto-coding--bug27391):
	Add unit test.

2017-06-17  Philipp Stephani  <phst@google.com>

	Remove unnecessary point motion

	* src/editfns.c (Freplace_buffer_contents): Remove unnecessary point
	motion.

2017-06-17  Philipp Stephani  <phst@google.com>

	Add command to replace buffer contents

	Add a new command 'replace-buffer-contents' that uses the Myers diff
	algorithm to non-destructively replace the accessible portion of the
	current buffer.  The Myers algorithm is implemented in Gnulib.

	* src/editfns.c (Freplace_buffer_contents): New command.
	(set_bit, bit_is_set, buffer_chars_equal): New helper functions.
	(syms_of_editfns): Define new command.

	* test/src/editfns-tests.el (replace-buffer-contents-1)
	(replace-buffer-contents-2): New unit tests.

	* src/buffer.h (BUF_FETCH_CHAR_AS_MULTIBYTE): New helper macro.

	* admin/merge-gnulib (GNULIB_MODULES): Add diffseq.h and minmax.h.

2017-06-17  Andreas Schwab  <schwab@linux-m68k.org>

	* lisp/international/characters.el: Update list of zero and full
	width characters according to Unicode 9.0.0.

2017-06-17  Simen Heggestøyl  <simenheg@gmail.com>

	Complete CSS property values less eagerly (Bug#27392)

	* lisp/textmodes/css-mode.el (css--complete-property-value): Be less
	eager by looking for a colon after the property which values are being
	completed for.

	* test/lisp/textmodes/css-mode-tests.el (css-test-complete-property):
	Add a test case ensuring that properties that are prefixes of other
	properties don't hinder further completion.

2017-06-17  Noam Postavsky  <npostavs@gmail.com>

	Handle integer indices for eshell variables (Bug#26055)

	* lisp/eshell/esh-var.el (eshell-index-value): Convert index to number
	if it's been marked as one, just like `eshell-lisp-command' does.

2017-06-17  Mark Oteiza  <mvoteiza@udel.edu>

	Don't bind org-agenda key to an anonymous function

	* lisp/org/org-agenda.el: Bind "g" to named command.
	(org-agenda-redo-all): New command.  Extend the previous functionality
	through a prefix argument.

2017-06-17  Dmitry Gutov  <dgutov@yandex.ru>

	Add test for the fix in the parent commit

	* test/src/undo-tests.el (undo-test-skip-invalidated-markers):
	New test, for the fix in the parent commit.

2017-06-17  Nitish Chandra  <nitishchandrachinta@gmail.com>  (tiny change)

	primitive-undo: Update only the currently valid markers

	* lisp/simple.el (primitive-undo):
	Update only the currently valid markers (bug#25599).

2017-06-16  Eli Zaretskii  <eliz@gnu.org>

	Initial version of native display of line numbers

	* src/xdisp.c (syms_of_xdisp) <display-line-numbers>: New
	buffer-local variable.
	Include <math.h>.
	(maybe_produce_line_number): New function.
	(DISP_INFINITY): Rename from INFINITY, since math.h defines INFINITY.
	(try_window_reusing_current_matrix): Don't use this method when
	display-line-numbers is in effect.
	* src/dispextern.h (struct it): New members 'lnum'.

2017-06-16  Philipp Stephani  <phst@google.com>

	Correctly detect URLs surrounded by parentheses in comments

	* lisp/thingatpt.el (thing-at-point--bounds-of-well-formed-url):
	Make parentheses match work inside comments.

	* test/lisp/thingatpt-tests.el (thing-at-point-url-in-comment): Add
	unit test.

2017-06-16  Michael Albinus  <michael.albinus@gmx.de>

	Fix load-path issue when it contains remote directories

	* lisp/net/tramp.el (tramp-file-name-handler): Use `autoloadp'.
	(tramp-use-absolute-autoload-file-names): New defun.  Call it
	after loading tramp.el.

	* test/lisp/net/tramp-tests.el (tramp-test38-remote-load-path):
	New test.
	(tramp-test39-unload): Rename.

2017-06-16  Alan Mackenzie  <acm@muc.de>

	Ensure C++ initializer lists don't get fontified.

	* lisp/progmodes/cc-cmds.el (c-block-comment-flag): Move declaration to solve
	compiler warning.

	* lisp/progmodes/cc-fonts.el (c-get-fontification-context): Add an extra
	clause to handle C++ member initialization lists.
	(c-font-lock-single-decl): New function, extracted from
	c-font-lock-declarations.
	(c-font-lock-declarations): Call c-font-lock-single-decl in place of inline
	code.
	(c-font-lock-cut-off-declarators): Make more rigorous by calling
	c-get-fontification-context, c-forward-decl-or-cast-1, and
	c-font-lock-single-decl in place of rather approximate code.

2017-06-16  Alan Mackenzie  <acm@muc.de>

	Fix hang in CC Mode when ":" is typed after identifier at EOB.

	* lisp/progmodes/cc-engine.el (c-forward-declarator): Fix coding error
	confusing ":" and EOB.

2017-06-15  Alan Mackenzie  <acm@muc.de>

	Create a toggle between block and line comments in CC Mode.

	Also (unrelated change) initialize the modes' keymaps at each loading.

	* lisp/progmodes/cc-cmds.el (c-update-modeline): amend for the new information
	on the modeline.
	(c-block-comment-flag): New variable.
	(c-toggle-comment-style): New function.

	* lisp/progmodes/cc-langs.el (c-block-comment-starter)
	(c-line-comment-starter): Make them c-lang-defvars.
	(c-block-comment-is-default): New c-lang-defvar.
	(comment-start, comment-end): Make the default values dependent on
	c-block-comment-is-default.

	* lisp/progmodes/cc-mode.el (c-mode-base-map): Define C-c C-k in this map.
	(c-basic-common-init): Initialize c-block-comment-flag.
	(c-mode-map, c++-mode-map, objc-mode-map, java-mode-map, idl-mode-map)
	(pike-mode-map, awk-mode-map): Make entries in these key maps each time the
	mode is loaded rather than just once per Emacs session.

	* doc/misc/cc-mode.texi (Comment Commands): Introduce the notion of comment
	style.
	(Minor Modes): Define comment style.  Describe how comment style influences
	the information displayed on the modeline.  Document c-toggle-comment-style.
	(FAQ): Add a question about toggling the comment style.

2017-06-15  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify clang without munging C source

	* configure.ac (WARN_CFLAGS): With Clang, use
	-Wno-tautological-compare regardless of --enable-gcc-warnings.
	(WERROR_CFLAGS): Simplify assignments, and guarantee it’s always set.
	* lib/strftime.c: Copy from gnulib, reverting Clang-specific
	change which I hope is no longer needed.
	* src/emacs.c (main): Revert rlim_t change, as rlim_t is signed on
	some older non-POSIX hosts.

2017-06-15  Paul Eggert  <eggert@cs.ucla.edu>

	No need to complicate make-docfile.c for Clang

	* lib-src/make-docfile.c (put_filename): Undo recent change.
	The Clang false alarm occurs only with CFLAGS=-save-temps and
	we needn’t worry about pacifying unusual compiler configurations.

2017-06-15  Paul Eggert  <eggert@cs.ucla.edu>

	Port './configure CC=clang' to Fedora 25

	* configure.ac (HAVE_IMAGEMAGICK): Disable if even a
	standard function like MagickRelinquishMemory does not link.

2017-06-15  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t worry about __STDC_VERSION__ in emacs-module

	* src/emacs-module.h: Remove __STDC_VERSION__ check.  In the past
	we’ve found that some compilers do not define this symbol even
	when they work well enough.  If necessary features like stdbool.h
	are missing the compiler will complain eventually anyway.

2017-06-14  Paul Eggert  <eggert@cs.ucla.edu>

	Port cleanup check to Oracle Studio 12.5

	* src/conf_post.h (__has_attribute_cleanup): Resurrect.
	* src/emacs-module.c: Verify __has_attribute (cleanup), but in an
	#if this time.

2017-06-14  Bastien  <bzg@gnu.org>

	Fix misformatted changelog entry

2017-06-14  Eli Zaretskii  <eliz@gnu.org>

	Avoid compiler warning in image.c on MS-Windows

	* src/image.c (x_create_x_image_and_pixmap) [HAVE_NTGUI]: Avoid
	compilation warning under -Warray-bounds by temporarily disabling
	the -Warray-bounds option.

2017-06-14  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#27315

	* lisp/net/tramp-cache.el (tramp-cache-read-persistent-data):
	New defvar.
	(top): Use it.

	* lisp/net/tramp.el (tramp-handle-file-name-case-insensitive-p):
	Check for connected, not for connectable.  (Bug#27315)
	(tramp-process-actions):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-maybe-open-connection):
	Use `tramp-cache-read-persistent-data'.

	* test/lisp/net/tramp-tests.el (top): Set also
	`tramp-cache-read-persistent-data'.

2017-06-14  Noam Postavsky  <npostavs@gmail.com>

	Give a fixed default value for icomplete-prospects-height (Bug#26939)

	* lisp/icomplete.el (icomplete-prospects-height): Default to 2.
	(icomplete-prospects-length): Remove.
	* etc/NEWS: Announce removal.

2017-06-14  Philipp Stephani  <phst@google.com>

	Remove some tautological comparisons involving rlim_t

	Clang on macOS warns about these with -Wtautological-compare.  POSIX
	guarantees that rlim_t is
	unsigned (cf.
	http://pubs.opengroup.org/onlinepubs/009695399/basedefs/sys/resource.h.html),
	so these resource limits can never be negative.

	* src/emacs.c (main): Remove tautological comparisons.

2017-06-14  Philipp Stephani  <phst@google.com>

	Use --module-assertions if modules are available

	Using --module-assertions helps us find bugs in the test module.  But
	we can use it only if Emacs was compiled with module support.

	* test/Makefile.in (MODULES_EMACSOPT): New variable.
	(emacs): Use it.

2017-06-14  Philipp Stephani  <phst@google.com>

	Define --module-assertions only of modules are available

	Fixes Bug#27352.

	* src/emacs.c (usage_message, standard_args): Define
	--module-assertions only if Emacs has been compiled with module
	support.

2017-06-14  Katsumi Yamaoka  <yamaoka@jpl.org>

	gnus-article-read-summary-keys: Don't move point for WDD and WDW commands

	* lisp/gnus/gnus-art.el (gnus-article-read-summary-keys):
	No need to restore window config for WDD and WDW commands.

2017-06-14  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	lisp/net/soap-client.el: Bump version to 3.1.3

	* lisp/net/soap-client.el: Bump version to 3.1.3.
	(soap-name-p): Fix checkdoc issue.

2017-06-14  Alex Harsanyi  <AlexHarsanyi@gmail.com>

	Fix an HTTP encoding error in soap-client.el

	* lisp/net/soap-client.el (soap-invoke-internal): Make
	SOAPAction header a UTF-8 encoded string.

2017-06-14  Paul Eggert  <eggert@cs.ucla.edu>

	Port cleanup attribute to Oracle Studio 12.5

	* INSTALL (--with-modules): List cleanup attribute as prereq.
	* src/conf_post.h (__has_attribute_cleanup): Remove; no longer needed.
	* src/emacs-module.c (MODULE_SETJMP_1): Don’t attempt to verify
	(__has_attribute (cleanup)), as Oracle Studio 12.5 supports
	__has_attribute only inside preprocessor expressions.  The C
	compiler should check the cleanup attribute in the next line anyway.
	(module_reset_handlerlist): Remove an unnecessary ‘const’
	that causes Oracle Studio 12.5 to refuse to compile.

2017-06-14  Glenn Morris  <rgm@gnu.org>

	Fix running tests in without-modules builds

	* test/Makefile.in (EMACSOPT): Remove option that is only defined
	with-modules.  emacs-module-tests.el passes it where needed.

2017-06-13  Glenn Morris  <rgm@gnu.org>

	* test/Makefile.in (src/emacs-module-tests.log): Out-of-tree fix.

2017-06-13  Philipp Stephani  <phst@google.com>

	Inline test module Makefile into main test Makefile

	The test/data/emacs-module/Makefile only built a single target, and
	inlining it into test/Makefile simplifies dependency tracking and
	reduces code duplication.

	* configure.ac: Don't build test/data/emacs-module/Makefile.

	* Makefile.in ($(test_module)): Inline compilation.
	(clean): Also clean test module outputs.

2017-06-13  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-sh.el (tramp-set-file-uid-gid): Do not handle locally on w32.

2017-06-13  Michael Albinus  <michael.albinus@gmx.de>

	Minor tweaks in Tramp manual

	* doc/misc/trampver.texi: Add prefixwithspace flag.

	* doc/misc/tramp.texi (Password handling): Harmonize example.
	(File name completion): Use prefixwithspace flag.
	(Frequently Asked Questions): Explain `tramp-histfile-override'.

2017-06-13  Philipp Stephani  <phst@google.com>

	Silence two Clang warnings by introducing additional local variables

	* lib/strftime.c (libc_hidden_def):
	* lib-src/make-docfile.c (put_filename): Introduce local variables to
	silence Clang warnings.

2017-06-13  Noam Postavsky  <npostavs@gmail.com>

	Fix wrong indentation after string literal (Bug#27306)

	* lisp/emacs-lisp/lisp-mode.el (lisp-indent-state)
	(lisp-indent-calc-next): Remove `depth' field, use (car ppss) instead.
	* test/lisp/emacs-lisp/lisp-mode-tests.el
	(lisp-indent-region-after-string-literal): New test.

2017-06-13  Philipp Stephani  <phst@google.com>

	Fix version checks for emacs-module.h

	We don't need C11 or C++11 because stdbool.h is in C99, and for C++ we
	don't need it at all.

2017-06-13  Noam Postavsky  <npostavs@gmail.com>

	Buttonize #<bytecode> part of printed functions (Bug#25226)

	* lisp/emacs-lisp/cl-print.el: Autoload `disassemble-1'.
	(cl-print-compiled-button): New variable.
	(help-byte-code): New button type, calls `disassemble' in its action.
	(cl-print-object): Use it if `cl-print-compiled-button' is
	non-nil.

2017-06-12  Philipp Stephani  <phst@google.com>

	Print module structure sizes when initializing test module

	* test/data/emacs-module/mod-test.c (emacs_module_init): Print
	compile-time and runtime sizes of module structures to ease debugging

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Small portability fix for emacs-module.h (bug#27346)

	* src/emacs-module.h (EMACS_ATTRIBUTE_NONNULL) [!__has_attribute]:
	Avoid 'error: missing binary operator before token "("'.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Give a more informative failure in module assertion test

	* test/src/emacs-module-tests.el (module--test-assertions):
	Rephrase final check to give a more informative failure.

2017-06-12  Philipp Stephani  <phst@google.com>

	Fix off-by-one error

	* test/data/emacs-module/mod-test.c (emacs_module_init): Fix
	off-by-one error.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Clean up after module assertion tests

	* test/src/emacs-module-tests.el (module--test-assertions):
	Use a temporary directory to contain any core dumps.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Small improvement for module assertion test

	* test/src/emacs-module-tests.el (module--test-assertions):
	Don't rely on the precise form of an "Abort" message.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Improve previous test/data/emacs-module/Makefile change

	* test/data/emacs-module/Makefile.in (clean):
	Avoid doing unpleasant things if run in a build without modules.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Small improvements for test/data/emacs-module/Makefile

	* test/data/emacs-module/Makefile.in (%.o):
	Fix emacs-module dependency.
	(SECONDARY): Stop make automatically deleting *.o.
	(clean): New rule.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	* make-dist: Skip some more generated files in test/.

2017-06-12  Alan Third  <alan@idiocy.org>

	Note how fullscreen differs on the NS port

	doc/lispref/frames.texi (Size Parameters):
	doc/emacs/frames.texi (Tool Bars): Add a description of how macOS
	hides the tool-bar and menu-bar in fullscreen.

2017-06-12  Alan Third  <alan@idiocy.org>

	Add no-focus-on-map to NS build (bug#25408)

	* src/nsfns.m (ns_frame_parm_handlers): Add x_set_no_focus_on_map.
	(x-create-frame): Check for no-focus-on-map.
	* src/nsterm.h (x_set_no_focus_on_map): New function.
	* src/nsterm.m (x_set_no_focus_on_map): New function.
	(ns_raise_frame): Add parameter for specifying whether to focus the
	frame.
	(ns_frame_raise_lower):
	(x_make_frame_visible): Handle new parameter for ns_raise_frame.

2017-06-12  Paul Eggert  <eggert@cs.ucla.edu>

	_Noreturn not noreturn

	_Noreturn is more portable to non-C11 platforms.  See:
	https://www.gnu.org/software/gnulib/manual/html_node/stdnoreturn_002eh.html
	* src/emacs-module.c: Use _Noreturn, not noreturn.  No need to
	include <stdnoreturn.h>.  Reindent to fit in 80 columns.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Update make-dist for recent test/ changes

	* make-dist: No longer distribute test/data/emacs-module/Makefile.

2017-06-12  Michael Albinus  <michael.albinus@gmx.de>

	Handle port and domain in Tramp's password cache

	* doc/misc/tramp.texi (Password handling): Explain port and
	domain handling in authinfo.

	* lisp/net/tramp.el (tramp-process-actions, tramp-clear-passwd):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handler-askpassword):
	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file-out-of-band)
	(tramp-maybe-open-connection):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-file-acl, tramp-smb-handle-set-file-acl)
	(tramp-smb-maybe-open-connection): Handle also domain and port.

2017-06-12  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warnings with pre-C99 libc

	* src/emacs-module.c (module_free_global_ref)
	(module_assert_runtime, module_assert_env, value_to_lisp): Use 'pD'
	instead of C99 't' format descriptor.

2017-06-12  Philipp Stephani  <phst@google.com>

	Flush all output streams before aborting

	Maybe the stdout buffer still contains something interesting that
	should be flushed.

	* src/emacs-module.c (module_abort): Flush all output streams before
	aborting.

2017-06-12  Philipp Stephani  <phst@google.com>

	Remove an assertion that doesn't test Emacs invariants

	* src/emacs-module.c (module_copy_string_contents): Remove an
	assertion that doesn't test Emacs invariants.

2017-06-12  Philipp Stephani  <phst@google.com>

	Test module: add necessary version checks

	* test/data/emacs-module/mod-test.c (emacs_module_init): Add necessary
	version checks.

2017-06-12  Philipp Stephani  <phst@google.com>

	Use additional CFLAGS from configure

2017-06-12  Philipp Stephani  <phst@google.com>

	Use Autoconf to generate the test module Makefile

	This makes it easier to pass compilation flags around.

	* configure.ac: Also build test module Makefile.

	* test/data/emacs-module/Makefile.in: New makefile template.

	* test/Makefile.in ($(test_module)): No longer necessary to pass
	@MODULES_SUFFIX@ around.

	* .gitignore: Test module Makefile can now be ignored.

2017-06-12  Philipp Stephani  <phst@google.com>

	Also compile test module as C11

	* test/data/emacs-module/Makefile (CFLAGS): Compile test module as C11

2017-06-12  Philipp Stephani  <phst@google.com>

	Implement module assertions for users

	Add a new command-line option '-module-assertions' that users can
	enable developing or debugging a module.  If this option is present,
	Emacs performs additional checks to verify that modules fulfill their
	requirements.  These checks are expensive and crash Emacs if modules
	are invalid, so disable them by default.

	This is a command-line option instead of an ordinary variable because
	changing it while Emacs is running would cause data structure
	imbalances.

	* src/emacs.c (main): New command line option '-module-assertions'.

	* src/emacs-module.c (module_assert_main_thread)
	(module_assert_runtime, module_assert_env, module_assert_value):
	New functions to assert module requirements.
	(syms_of_module): New uninterned variable 'module-runtimes'.
	(init_module_assertions, in_main_thread, module_abort): New helper
	functions.
	(initialize_environment): Initialize value list.  If assertions are
	enabled, use a heap-allocated environment object.
	(finalize_environment): Add assertion that environment list is never
	empty.
	(finalize_runtime_unwind): Pop module runtime object stack.
	(value_to_lisp): Assert that the value is valid.
	(lisp_to_value): Record new value if assertions are enabled.
	(mark_modules): Mark allocated object list.
	(MODULE_FUNCTION_BEGIN_NO_CATCH)
	(module_non_local_exit_check, module_non_local_exit_clear)
	(module_non_local_exit_get, module_non_local_exit_signal)
	(module_non_local_exit_throw): Assert thread and environment.
	(module_get_environment): Assert thread and runtime.
	(module_make_function, module_funcall, module_intern)
	(module_funcall, module_make_integer, module_make_float)
	(module_make_string, module_make_user_ptr, module_vec_get)
	(funcall_module, Fmodule_load): Adapt callers.
	(module_make_global_ref): If assertions are enabled, use the global
	environment to store global values.
	(module_free_global_ref): Remove value from global value list.

	* test/Makefile.in (EMACSOPT): Enable module assertions when testing
	modules.

	* test/data/emacs-module/mod-test.c (Fmod_test_invalid_store)
	(Fmod_test_invalid_load): New functions to test module assertions.
	(emacs_module_init): Bind the new functions.

	* test/src/emacs-module-tests.el (mod-test-emacs): New constant for
	the Emacs binary file.
	(mod-test-file): New constant for the test module file name.
	(module--test-assertions): New unit test.

2017-06-12  Philipp Stephani  <phst@google.com>

	emacs-module: Use __attribute__((nonnull))

	Annotate all parameters with __attribute__((nonnull)) that may not be
	NULL.

2017-06-12  Philipp Stephani  <phst@google.com>

	Explicitly require C11 or C++11 in emacs-module.h

	We already implicitly require them by including stdbool.h.  Just make
	the error message a bit clearer, and remove an unnecessary version
	comparison.

2017-06-12  Philipp Stephani  <phst@google.com>

	Add missing 'require' forms to prevent compiler warnings.

	* lisp/eshell/esh-ext.el (esh-arg, esh-proc): Add missing
	requirements.

2017-06-12  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-06-11 getopt-posix: port to glibc 2.25.90
	2017-06-04 same-inode: port better to VMS 8.2 and later
	* doc/misc/texinfo.tex, lib/getopt-pfx-core.h, lib/getopt-pfx-ext.h:
	* m4/sys_types_h.m4: Copy from gnulib.

2017-06-12  Paul Eggert  <eggert@cs.ucla.edu>

	Remove Lisp_Misc_Float

	* src/data.c (Ftype_of): Do not worry about Lisp_Misc_Float.
	* src/lisp.h (Lisp_Misc_Float): Remove.  This placeholder has been
	unused for two decades; if we ever want to change floats to be a
	misc type we can bring it back then.

2017-06-12  Paul Eggert  <eggert@cs.ucla.edu>

	Make two symbols private to emacs-module.c

	* src/lisp.h (allocate_module_function, XSET_MODULE_FUNCTION):
	Move from here ...
	* src/emacs-module.c: ... to here.

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Merge from origin/emacs-25

	da62c1532e4 (origin/emacs-25) Improve the documentation of filesets

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Merge from origin/emacs-25

	e80f6a210b0 Describe problems with Microsoft Intellipoint
	a73ec1edb07 More accurate documentation of the ':box' face attribute

2017-06-12  Glenn Morris  <rgm@gnu.org>

	Merge from origin/emacs-25

	eaa00584ceb Improve documentation of 'gnutls-verify-error'
	908498cc01b ; etc/PROBLEMS: Describe GTK-related crashes on elementar...
	741daec617e ; Describe the problem with ksh when resizing shell window

2017-06-11  Michael Albinus  <michael.albinus@gmx.de>

	Some further improvements for tramp-gvfs.el

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-expand-file-name)
	(tramp-gvfs-get-file-attributes)
	(tramp-gvfs-maybe-open-connection): Handle davs? properly.
	(tramp-gvfs-handler-askquestion): Improve `yes-or-no-p' prompt.
	Show question also in batch mode.  Cache result.

	* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
	Support completion for host names and ports.

2017-06-11  Simen Heggestøyl  <simenheg@gmail.com>

	Fix highlighting of CSS selectors with double hyphens

	* lisp/textmodes/css-mode.el (css--font-lock-keywords): Fix
	highlighting of selectors that contain double hyphens.  They would be
	mistaken for a variable.

2017-06-11  Philipp Stephani  <phst@google.com>

	Support threads in modules

	Rather than checking for the main thread, check for the current
	thread.

	* src/emacs-module.c (check_thread): New function.
	(MODULE_FUNCTION_BEGIN_NO_CATCH, module_get_environment)
	(module_non_local_exit_check, module_non_local_exit_clear)
	(module_non_local_exit_get, module_non_local_exit_signal)
	(module_non_local_exit_throw, module_is_not_nil, module_eq): Use it.

2017-06-11  Philipp Stephani  <phst@google.com>

	Allow non-local exits in module initializers

	Previously signals, throws, and quits from module initialization
	functions were ignored.  These function aren't special, and better
	errors can be reported using signals than with the initialization
	return code, so allow non-local exits.

	* src/emacs-module.c (module_signal_or_throw): New helper function.
	(Fmodule_load, funcall_module): Use it.
	(Fmodule_load): Also allow quitting.

2017-06-11  Noam Postavsky  <npostavs@gmail.com>

	Let eshell/sudo handle absolute command names (Bug#27167)

	* lisp/eshell/esh-ext.el (eshell-find-interpreter): Don't change
	absolute paths into relative ones.

2017-06-10  Alan Third  <alan@idiocy.org>

	Don't wait for toolbar in NS native fullscreen

	* src/nsterm.m (EmacsView:updateFrameSize): Don't short-circuit the
	function when in fullscreen.

2017-06-10  Alexander Gramiak  <agrambot@gmail.com>

	Fix the placement of GTK menus on multi-monitor systems

	menu_position_func did not properly use the current monitor's
	resolution.  Also see commit '2016-02-06 22:12:53 +0100'.

	* lisp/frame.el (frame-monitor-attribute, frame-monitor-geometry)
	(frame-monitor-workarea): New functions.

	* src/xmenu.c (menu_position_func): Take into account the workarea of
	the monitor that contains the mouse.  (Bug#23568)

2017-06-10  Eli Zaretskii  <eliz@gnu.org>

	Clarify documentation of 'face-spec-set'

	* lisp/faces.el (face-spec-set): Clarify the description of
	SPEC-TYPE in the doc string.

	* doc/lispref/display.texi (Defining Faces): Clarify the
	description of 'face-spec-set's SPEC-TYPE argument.  (Bug#27246)

2017-06-10  Michael Albinus  <michael.albinus@gmx.de>

	Fix domain port and handling in tramp-gvfs.el

	* lisp/net/tramp-gvfs.el (tramp-gvfs-dbus-byte-array-to-string):
	Return nil if BYTE-ARRAY is nil.
	(tramp-gvfs-url-file-name, tramp-gvfs-handler-mounted-unmounted)
	(tramp-gvfs-connection-mounted-p, tramp-gvfs-mount-spec):
	Fix domain and port handling.

	* lisp/net/tramp.el (tramp-handle-file-name-case-insensitive-p):
	Ignore errors.

2017-06-10  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'face-spec-set-2'

	* lisp/faces.el (face-spec-recalc, face-spec-set-2): Rename 'spec'
	to 'face-attrs'.
	(face-spec-choose, face-spec-set-2): Doc fix.  (Bug#27238)

2017-06-10  Eli Zaretskii  <eliz@gnu.org>

	Fix handling of Python/Guile commands with arguments in gdb-mi.el

	* lisp/progmodes/gdb-mi.el (gdb-python-guile-commands-regexp): New
	variable.
	(gdb-control-commands-regexp): Use it.
	(gdb-send): Don't increment gdb-control-level if the command
	matches gdb-python-guile-commands-regexp and has non-empty
	arguments.  Reported by David Boles <boles@ieee.org> in
	https://lists.gnu.org/r/emacs-devel/2017-06/msg00009.html.

2017-06-10  Eli Zaretskii  <eliz@gnu.org>

	Preserve point in Dired windows under 'dired-auto-revert-buffer'

	* lisp/dired.el (dired-find-file): When dired-auto-revert-buffer
	is non-nil, bind switch-to-buffer-preserve-window-point to nil
	while calling find-file.  (Bug#27243)

2017-06-09  Philipp Stephani  <phst@google.com>

	Give test files a -tests.el suffix

	Rename a couple of test files that have the same name as the library
	they test.  This harmonizes the naming pattern and makes it possible
	to have the tests directories in the load path.

2017-06-09  Philipp Stephani  <phst@google.com>

	Fix another compiler warning on macOS

	* src/image.c (x_query_frame_background_color): Don't define if we
	have NextStep but no image support.

2017-06-09  Philipp Stephani  <phst@google.com>

	Add garbage collection support for module environments

	* src/emacs-module.c (mark_modules): New function.
	(initialize_environment): Properly initialize Lisp objects.
	* src/alloc.c (garbage_collect_1): Call it.

2017-06-08  Glenn Morris  <rgm@gnu.org>

	Make autogen.sh report relevant environment variables

	* autogen.sh (check_version):
	Indicate if using an environment variable.

2017-06-08  Noam Postavsky  <npostavs@gmail.com>

	Split variable macro env from function env

	* lisp/emacs-lisp/cl-macs.el (cl--sm-macroexpand): Remove.
	(cl-symbol-macrolet): Instead of adding each binding directly into the
	main environment with a special key format, put all symbol macro
	bindings into a single entry in the main environment under
	`:cl-symbol-macros'.
	(cl--sm-macroexpand): Look up symbol bindings in the
	`:cl-symbol-macros' entry of the environment.

2017-06-07  Glenn Morris  <rgm@gnu.org>

	* make-dist: Directory modules/mod-test no longer exists.

2017-06-07  Glenn Morris  <rgm@gnu.org>

	More authors.el updates

	* admin/authors.el (authors-ignored-files, authors-valid-file-names)
	(authors-renamed-files-alist): Additions.

2017-06-07  Glenn Morris  <rgm@gnu.org>

	* make-dist: Check a release has a ChangeLog with a release notice.

	* make-dist: Use existing ChangeLog if present.

2017-06-07  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-sh.el (tramp-maybe-open-connection): Fix port handling.

2017-06-07  Lars Ingebrigtsen  <larsi@gnus.org>

	(url-cookie-host-can-set-p): Protect against zero-length domains

	* lisp/url/url-cookie.el (url-cookie-host-can-set-p): Protect
	against zero-length domains.

	Backtrace of a real-world site that triggers a bug:

	Debugger entered--Lisp error: (args-out-of-range "" 0)
	  url-cookie-host-can-set-p("www.washingtonpost.com" "")
	  url-cookie-handle-set-cookie("utm_term=0;Expires=Thursday,
	  01-January-1970 00:00:00 GMT; path=/; domain=")
	  url-http-handle-cookies()

2017-06-06  Glenn Morris  <rgm@gnu.org>

	More authors.el updates

	* admin/authors.el (authors-obsolete-files-regexps)
	(authors-valid-file-names, authors-renamed-files-alist)
	(authors-renamed-files-regexps): Additions.

2017-06-06  Glenn Morris  <rgm@gnu.org>

	More small authors.el updates

	* admin/authors.el (authors-aliases): Fix recent addition.
	(authors-obsolete-files-regexps, authors-no-scan-regexps)
	(authors-ignored-files, authors-valid-file-names)
	(authors-renamed-files-alist): Additions.

2017-06-06  Glenn Morris  <rgm@gnu.org>

	Make authors.el report names that were ignored

	* admin/authors.el (authors-ignored-names): New.
	(authors-canonical-author-name): Add file and position arguments.
	Record ignored authors.
	(authors-scan-change-log, authors-scan-el):
	Pass file and position to authors-canonical-author-name.
	(authors): Also print authors that were ignored.

2017-06-06  Glenn Morris  <rgm@gnu.org>

	* admin/authors.el (authors-aliases): Additions.

2017-06-06  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/subr-tests.el (subr-tests-bug22027): Add test.

2017-06-06  Noam Postavsky  <npostavs@gmail.com>

	* lisp/subr.el (read-passwd): Don't delete return value (Bug#22027).

2017-06-06  Dmitry Gutov  <dgutov@yandex.ru>

	Enable ElDoc messages after the newline command

	* lisp/emacs-lisp/eldoc.el:
	Add "newline" to the eldoc-add-command-completions call (bug#27228).

2017-06-06  Dmitry Gutov  <dgutov@yandex.ru>

	Enable eldoc-mode explicitly inside read--expression

	* lisp/simple.el (read--expression): Call eldoc-mode (bug#27202).

2017-06-06  Andy Moreton  <andrewjmoreton@gmail.com>

	Fix check for package-unsigned-archives during retrieval

	* lisp/emacs-lisp/package.el (package--download-one-archive):
	Fix check for package-unsigned-archives.

2017-06-05  Noah Friedman  <friedman@splode.com>

	Merge etc/emacs-buffer.gdb from emacs-25 to master.

2017-06-05  Philipp Stephani  <phst@google.com>

	Fix undefined behavior in mapbacktrace

	* src/eval.c (Fmapbacktrace): Don't assume that PDL is still valid.

2017-06-05  Eli Zaretskii  <eliz@gnu.org>

	Fix emacs-module-tests on MS-Windows

	* src/print.c (print_vectorlike): Make sure module function's
	address prints with a leading "0x".  This fixes emacs-module-tests
	on MS-Windows.  Fix whitespace.
	* src/dynlib.c (dynlib_addr): Remove unused variable.  Update
	commentary.

2017-06-05  Philipp Stephani  <phst@google.com>

	Use unwind protection to clean up data structures in modules

	Reuse existing functionality and simplify the code a bit.

	* src/emacs-module.c (Fmodule_load): Use unwind protection to clean up
	runtime object.
	(funcall_module): Use unwind protection to clean up environment
	object.
	(finalize_environment): Simplify signature.
	(finalize_environment_unwind, finalize_runtime_unwind): New functions.

2017-06-05  Michael Albinus  <michael.albinus@gmx.de>

	Some minor tweaks in tramp-tests.el

	* test/lisp/net/tramp-tests.el (tramp-test05-expand-file-name-relative):
	Let it pass for all gfvs based methods.
	(tramp-test24-file-name-completion): Run method and host
	completion for all syntaxes only when expensive tests are enabled.
	Do not check host completion for gvfs based methods.
	(tramp--test-gvfs-p): Add optional METHOD argument.
	(tramp--test-afp-or-smb-p): Remove.

2017-06-05  Michael Albinus  <michael.albinus@gmx.de>

	Fix error in Tramp rsync method

	* lisp/net/tramp-sh.el (tramp-methods) <rsync>: Add "-c" argument.
	Otherwise, `tramp-test10-write-region' could fail.

2017-06-05  Philipp Stephani  <phst@google.com>

	Inline module_has_cleanup

	This constant is only used once, and we fail compilation anyway if
	it's false.

	* src/emacs-module.c (MODULE_SETJMP_1): Inline __has_attribute.

2017-06-05  Philipp Stephani  <phst@google.com>

	Add missing dependency to test module source file

2017-06-05  Paul Eggert  <eggert@cs.ucla.edu>

	Omit space that broke ‘make check’

	* src/print.c (print_vectorlike): Omit stray space.

2017-06-05  Paul Eggert  <eggert@cs.ucla.edu>

	Remove easserts etc. from emacs-module.c

	Most of these seem to run afoul of the comment "Do NOT use
	'eassert' for checking validity of user code in the module."
	* src/emacs-module.c (MODULE_FUNCTION_BEGIN_NO_CATCH)
	(module_non_local_exit_check, module_non_local_exit_clear)
	(module_non_local_exit_get, module_non_local_exit_signal)
	(module_non_local_exit_throw, module_make_string):
	Remove unnecessary easserts that pointers are nonnull.
	Hardware checks this for us nowadays, and the checks
	just clutter up the code.
	(module_extract_integer): Remove unnecessary verify that
	a C signed integer is in the range INTMAX_MIN..INTMAX_MAX.
	The C standard guarantees this.
	(module_copy_string_contents): Remove unnecessary eassert
	that Lisp strings are null-terminated.
	(module_function_arity): Remove unnecessary easserts that
	function arities are in range.

2017-06-05  Paul Eggert  <eggert@cs.ucla.edu>

	Remove unnecessary checking in emacs-module.c

	* src/emacs-module.c (module_copy_string_contents):
	Remove checking, as string lengths are always nonnegative and less
	than STRING_BYTES_BOUND, and this is checked elsewhere.
	(module_make_string): Check length against STRING_BYTES_BOUND, a
	tighter bound than MOST_POSITIVE_FIXNUM.  (funcall_module): Don't
	assume that an out-of-range integer is nonnegative.

2017-06-05  Paul Eggert  <eggert@cs.ucla.edu>

	SCHARS and STRING_BYTES are nonnegative

	Tell the compiler that SCHARS and STRING_BYTES are nonnegative, in
	the hopes that this will optimize a bit better.  Also, check this
	at runtime if ENABLE_CHECKING.
	* src/lisp.h (SCHARS, STRING_BYTES):
	eassume that these functions return nonnegative values.
	(STRING_SET_CHARS) [ENABLE_CHECKING]:
	eassert that newsize is nonnegative.

2017-06-05  Noam Postavsky  <npostavs@gmail.com>

	* lisp/desktop.el (desktop-clear): Skip the daemon's frame (Bug#26912).

2017-06-04  Philipp Stephani  <phst@google.com>

	Remove an unused error symbol

	* src/emacs-module.c (syms_of_module): Remove unused error symbol
	'invalid-module-call'.

2017-06-04  Philipp Stephani  <phst@google.com>

	Support quitting in modules

	The idea is that modules should call env->should_quit from time to
	time and return as quickly as possible if it returns true.

	* src/emacs-module.c (module_should_quit): New module function.
	(initialize_environment): Use it.
	(funcall_module): Process potential pending quit.

	* src/eval.c (maybe_quit): Add reference to module_should_quit.

2017-06-04  Philipp Stephani  <phst@google.com>

	Use more specific errors for module load failure

	* src/emacs-module.c (syms_of_module): Add more specific error
	symbols.
	(Fmodule_load): Use them.

2017-06-04  Philipp Stephani  <phst@google.com>

	Remove an unneeded assertion

	* src/emacs-module.c (module_copy_string_contents): Remove unneeded
	assertion.  If this assertion triggers, we raise an error anyway.

2017-06-04  Philipp Stephani  <phst@google.com>

	Guard against signed integer overflows

	* src/emacs-module.c (module_extract_integer)
	(module_copy_string_contents, module_make_string): Guard against
	signed integer overflows.

2017-06-04  Philipp Stephani  <phst@google.com>

	Add a couple more assertions to the module code

	These can help module authors debug crashes.

	* src/emacs-module.c (module_non_local_exit_check)
	(module_non_local_exit_clear, module_non_local_exit_get)
	(module_non_local_exit_signal, module_non_local_exit_throw)
	(module_copy_string_contents, module_make_string)
	(funcall_module, initialize_environment): Add assertions

2017-06-04  Philipp Stephani  <phst@google.com>

	Use ATTRIBUTE_MAY_ALIAS where alias violations are likely

	In particular, alias violations are likely for the return values of
	dlsym(3), which get cast around arbitrarily.

	* src/emacs-module.c (Fmodule_load): Use ATTRIBUTE_MAY_ALIAS.

2017-06-04  Philipp Stephani  <phst@google.com>

	Simplify interface of dynlib_attr.

	Instead of returning bool, set the argument pointers to NULL if the
	information is not available.

	* src/dynlib.c (dynlib_addr): Don't return bool.

2017-06-04  Philipp Stephani  <phst@google.com>

	Rationalize environment lifetime management functions

	* src/emacs-module.c (Fmodule_load, funcall_module): Adapt callers.
	(finalize_environment): Add parameter for public part of the
	environment, like 'initialize_environment'.  Add assertions.

2017-06-04  Philipp Stephani  <phst@google.com>

	Rework printing of module functions

	Fix a FIXME in emacs-module.c.  Put the printing into print.c, like
	other types.

	* src/print.c (print_vectorlike): Add code to print module functions.

	* src/emacs-module.c (funcall_module): Stop calling
	'module_format_fun_env'.  Now that module functions are first-class
	objects, they can be added to signal data directly.
	(module_handle_signal): Remove now-unused function
	'module_format_fun_env'.

	* test/src/emacs-module-tests.el (mod-test-sum-test): Adapt unit test.

	* src/eval.c (funcall_lambda): Adapt call to changed signature of
	'funcall_module'.

2017-06-04  Philipp Stephani  <phst@google.com>

	Define helper macro to reduce code duplication

	* src/emacs-module.c (MODULE_FUNCTION_BEGIN_NO_CATCH): New helper
	macro.
	(MODULE_FUNCTION_BEGIN, module_type_of, module_is_not_nil, module_eq):
	Use it.

2017-06-04  Philipp Stephani  <phst@google.com>

	Remove two FIXMEs that can't be fixed

2017-06-04  Eli Zaretskii  <eliz@gnu.org>

	Avoid slow startup in daemon mode when global-linum-mode is on

	* lisp/linum.el (linum-on): Don't turn on linum-mode in a
	non-client frame of a daemon session.  (Bug#27210)

2017-06-04  Paul Eggert  <eggert@cs.ucla.edu>

	Fix eldoc bug with curved quote

	* lisp/progmodes/elisp-mode.el (elisp-get-fnsym-args-string):
	Substitute quotes in documentation before returning it (Bug#27159).

2017-06-04  Paul Eggert  <eggert@cs.ucla.edu>

	Tune ‘format’ after recent fix

	* doc/lispref/strings.texi (Formatting Strings):
	* src/editfns.c (Fformat): Format field numbers no longer need
	to be unique, reverting the previous doc change since that has
	now been fixed.  Also, document that %% should not have modifiers.
	* src/editfns.c (styled_format): Improve performance.  Remove
	the need for the new prepass over the format string, by using
	a typically-more-generous bound for the info array size.
	Initialize the info array lazily.  Move string inspection to
	the same area to help caching.  Avoid the need for a
	converted_to_string bitfield by using EQ.  Cache arg in a
	local and avoid some potential aliasing issues to help the
	compiler.  Info array is now 0-origin, not 1-origin.

2017-06-04  Nikolay Kudryavtsev  <nikolay.kudryavtsev@gmail.com>

	Improve of file-local-name use in vc-git-checkin

	* lisp/vc/vc-git.el (vc-git-checkin): Use file-local-name only
	when calling git commit.

2017-06-03  Simen Heggestøyl  <simenheg@gmail.com>

	Support a new CSS indentation style

	* lisp/textmodes/css-mode.el (css-smie-rules): Indent after property
	immediately followed by a newline.

	* test/manual/indent/css-mode.css: Add test for the change above.

	* test/manual/indent/scss-mode.scss: Ditto.

2017-06-03  Philipp Stephani  <phst@google.com>

	Fix a bug when using format field numbers

	Previously styled_format overwrite the argument vector.  This is no
	longer possible because there might be more than one specification per
	argument.  Use the existing auxiliary info array instead.

	* src/editfns.c (styled_format): Record arguments in the info
	structure instead of overwriting them.
	* test/src/editfns-tests.el (format-with-field): Add unit test.

2017-06-03  Paul Eggert  <eggert@cs.ucla.edu>

	Document uniqueness limitation of ‘format’

	* doc/lispref/strings.texi (Formatting Strings):
	* src/editfns.c (Fformat):
	Document that field numbers should be unique within a format.

2017-06-03  Glenn Morris  <rgm@gnu.org>

	Small rmailmm fix (bug#27203)

	* lisp/mail/rmailmm.el (rmail-mime-insert-bulk):
	Fall back to HOME if no match in rmail-mime-attachment-dirs-alist.

2017-06-03  Glenn Morris  <rgm@gnu.org>

	* admin/authors.el (authors-aliases): Addition.

2017-06-03  Glenn Morris  <rgm@gnu.org>

	Add watch for password back to inferior python comint filter

	It was removed along with other items for speed (bug#16875),
	but doesn't seem to have been causing an issue, and it's useful to
	have it there (bug#27154).
	* lisp/progmodes/python.el (inferior-python-mode):
	Add comint-watch-for-password-prompt to comint-output-filter-functions.

2017-06-03  Ryan  <rct@thompsonclan.org>  (tiny change)

	Use completing-read-default in tmm-prompt

	tmm uses completing-read, but customizes its behavior so much
	that any alternative completing-read-function will almost
	certainly break it.  For example, both ido-ubiquitous and ivy have
	special code to deactivate themselves for tmm.
	* lisp/tmm.el (tmm-prompt): Use completing-read-default instead of
	completing-read.  (Bug#27193)

2017-06-02  Mats Lidell  <mats.lidell@cag.se>

	* etc/tutorials/TUTORIAL.sv: synced with TUTORIAL (Bug#20371)

2017-06-02  Glenn Morris  <rgm@gnu.org>

	Fix with-todo-test

	* test/lisp/calendar/todo-mode-tests.el (with-todo-test):
	HOME should be a directory, not a file.  Delete it when finished.

2017-06-02  Lele Gaifax  <lele@metapensiero.it>  (tiny change)

	Update TUTORIAL.it

	* etc/tutorials/TUTORIAL.it: Adjust to recent changes in TUTORIAL.

2017-06-02  Eli Zaretskii  <eliz@gnu.org>

	Fix cursor position in Dired buffers after dired-sort-toggle

	* src/xdisp.c (display_and_set_cursor): Record cursor coordinates
	even if the frame is marked as garbaged.  (Bug#27187)

2017-06-02  Eli Zaretskii  <eliz@gnu.org>

	Update TUTORIAL.he

	* etc/tutorials/TUTORIAL.he: Adjust to recent changes in TUTORIAL.

2017-06-02  Noam Postavsky  <npostavs@gmail.com>

	* etc/tutorials/TUTORIAL: Explain how to stop the tutorial (Bug#20371).

2017-06-02  Paul Eggert  <eggert@cs.ucla.edu>

	Limit format fields to more POSIX-like spec

	* doc/lispref/strings.texi (Formatting Strings):
	Don’t allow mixing numbered with unnumbered format specs.
	* src/editfns.c (styled_format): Don’t bother checking for field 0,
	since it doesn’t crash and the behavior is not specified.
	* test/src/editfns-tests.el (format-with-field): Adjust tests to
	match current doc.  Add more tests for out-of-range fields.

2017-06-02  Paul Eggert  <eggert@cs.ucla.edu>

	Improve performance by avoiding strtoumax

	This made (string-to-number "10") 20% faster on my old desktop,
	an AMD Phenom II X4 910e running Fedora 25 x86-64.
	* admin/merge-gnulib (GNULIB_MODULES): Remove strtoumax.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib/strtoul.c, lib/strtoull.c, lib/strtoumax.c, m4/strtoull.m4:
	* m4/strtoumax.m4: Remove.
	* src/editfns.c (str2num): New function.
	(styled_format): Use it instead of strtoumax.  Use ptrdiff_t
	instead of uintmax_t.  Check for integer overflow.
	* src/lread.c (LEAD_INT, DOT_CHAR, TRAIL_INT, E_EXP):
	Move to private scope and make them enums.
	(string_to_number): Compute integer value directly during
	first pass instead of revisiting it with strtoumax later.

2017-06-02  Paul Eggert  <eggert@cs.ucla.edu>

	Minor improvements to format field numbers

	* src/editfns.c (styled_format): Allow field numbers in a %% spec.
	No need for a special diagnostic for field numbers greater than
	PTRDIFF_MAX.  Reword diagnostic for field 0.
	* test/src/editfns-tests.el (format-with-field): Adjust to match.

2017-06-02  Philipp Stephani  <phst@google.com>

	Implement field numbers in format strings

	A field number explicitly specifies the argument to be formatted.
	This is especially important for potential localization work, since
	grammars of various languages dictate different word orders.

	* src/editfns.c (Fformat): Update documentation.
	(styled_format): Implement field numbers.

	* doc/lispref/strings.texi (Formatting Strings): Document field numbers.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-format-warn): Adapt.

	* test/src/editfns-tests.el (format-with-field): New unit test.

2017-06-01  Alexander Gramiak  <agrambot@gmail.com>

	Limit scope of local overriding-terminal-local-map

	The function `binding' may call isearch-done, which globally sets
	overriding-terminal-local-map to nil (Bug#23007).
	* lisp/isearch.el (isearch-mouse-2): Don't bind
	overriding-terminal-local-map around the call to `binding'.

2017-06-01  Stephen Berman  <stephen.berman@gmx.net>

	Correct and isolate the todo-mode test environment

	This avoids having to set todo-mode variables globally in the test
	file and prevents any exisiting user todo-mode files from influencing
	the tests.

	* test/lisp/calendar/todo-mode-tests.el:
	(with-todo-test): New macro.
	(todo-test-todo-quit01, todo-test-todo-quit02)
	(todo-test-item-highlighting): Use it.

2017-06-01  Alan Third  <alan@idiocy.org>

	Fix build errors on macOS 10.6 (bug#27059)

	* src/nsfns.m (compute_tip_xy): Don't use CGRectContainsPoint.

2017-06-01  Eli Zaretskii  <eliz@gnu.org>

	Improve testing of octal and hex display of raw bytes

	* test/manual/redisplay-testsuite.el (test-redisplay-5-toggle)
	(test-redisplay-5): Add a test with a large codepoint.

2017-06-01  Vasilij Schneidermann  <mail@vasilij.de>

	Add customizable to display raw bytes as hex

	* src/xdisp.c (get_next_display_element): Dispatch used format string
	for unprintables based on new display-raw-bytes-as-hex variable.
	(display-raw-bytes-as-hex): New variable.  (Bug#27122)

	* lisp/cus-start.el: Add defcustom form for display-raw-bytes-as-hex.

	* doc/emacs/display.texi: Document the new variable.
	* etc/NEWS: Mention display-raw-bytes-as-hex.

	* test/manual/redisplay-testsuite.el (test-redisplay-5-toggle)
	(test-redisplay-5): New tests.
	(test-redisplay): Call test-redisplay-5.

2017-06-01  Eli Zaretskii  <eliz@gnu.org>

	Revert "Add customizable to display raw bytes as hex"

	This reverts commit 7c9ac111c5e5d92e620b666893993d5dc562e483.

2017-06-01  Eli Zaretskii  <eliz@gnu.org>

	Add customizable to display raw bytes as hex

	* src/xdisp.c (get_next_display_element): Dispatch used format string
	for unprintables based on new display-raw-bytes-as-hex variable.
	(display-raw-bytes-as-hex): New variable.  (Bug#27122)

	* lisp/cus-start.el: Add defcustom form for display-raw-bytes-as-hex.

	* doc/emacs/display.texi: Document the new variable.
	* etc/NEWS: Mention display-raw-bytes-as-hex.

	* test/manual/redisplay-testsuite.el (test-redisplay-5-toggle)
	(test-redisplay-5): New tests.
	(test-redisplay): Call test-redisplay-5.

2017-06-01  Eli Zaretskii  <eliz@gnu.org>

	Fix linum under text-scaling when leuven-theme is used

	* etc/themes/leuven-theme.el (linum): Make the 'linum' face
	inherit from 'default' and 'shadow', so that margins are enlarged
	as expected under text-scaling.

2017-06-01  Paul Eggert  <eggert@cs.ucla.edu>

	Free cwd when no longer needed

	* lib-src/emacsclient.c (main): Don’t dally when freeing cwd.

2017-06-01  Anders Waldenborg  <anders@0x63.nu>  (tiny change)

	Fix memory leak of cwd string in emacsclient (Bug#26628)

	* lib-src/emacsclient.c (main): emacsclient retrieves the current
	working directory using get_current_dir_name which returns a newly
	allocated string.  Make sure this string is freed before exiting.

2017-06-01  Glenn Morris  <rgm@gnu.org>

	Quieten compilation of some test files

	* test/lisp/dired-tests.el (dired-test-bug25609): Mark unused args.
	* test/src/data-tests.el (binding-test-set-constant-t)
	(binding-test-set-constant-nil, binding-test-set-constant-keyword)
	(binding-test-set-constant-nil): Silence compiler.
	* test/src/regex-tests.el (regex-tests-BOOST): Escape char literal.

2017-06-01  Glenn Morris  <rgm@gnu.org>

	Use true names for invocation- and source-directory

	* src/emacs.c (init_cmdargs) <Vinvocation_directory>:
	* src/lread.c (init_lread) <Vsource_directory>: Use true names.

2017-06-01  Glenn Morris  <rgm@gnu.org>

	Avoid elisp-mode test failures when source dir has multiple names

	* test/lisp/progmodes/elisp-mode-tests.el (emacs-test-dir):
	Use the true name of the directory.

2017-06-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bug with "%%" in error format

	* src/doprnt.c (doprnt): Format "%%" correctly.
	Problem reported by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00901.html

2017-06-01  Paul Eggert  <eggert@cs.ucla.edu>

	* src/editfns.c (Fmessage): Improve doc string (Bug#23425#130).

2017-06-01  Katsumi Yamaoka  <yamaoka@jpl.org>

	Revert mml-generate-mime-1 (bug#27141)

	* lisp/gnus/mml.el (mml-generate-mime-1): Reverted to emacs-25 version
	with slight modernizations (bug#27141).

2017-05-31  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#27108

	* lisp/recentf.el (recentf-load-list): Bind `non-essential',
	in order to avoid Tramp password requests during Emacs
	startup.  (Bug#27108)

2017-05-31  Glenn Morris  <rgm@gnu.org>

	* test/Makefile.in (.SECONDARY): Stop make deleting .elc files.

2017-05-31  Eli Zaretskii  <eliz@gnu.org>

	Document current-line hscrolling in ELisp manual

	* doc/lispref/windows.texi (Horizontal Scrolling): Document the
	new mode of auto-hscrolling only the current line.

2017-05-31  Eli Zaretskii  <eliz@gnu.org>

	Support lower bound on hscrolling when only current line scrolls

	* doc/emacs/display.texi (Horizontal Scrolling): Document the new
	mode of auto-hscrolling only the current line.

	* src/xdisp.c (init_iterator): When hscrolling only the
	current line, apply the	window's min_hscroll here, so that
	non-current lines will be hscrolled by that minimum.
	Suggested by Stephen Berman <stephen.berman@gmx.net>.
	(hscroll_window_tree): Account for window's min_hscroll when
	deciding whether to recompute the hscroll.
	(display_line): Subtract window's min_hscroll from x_incr, as that
	was already accounted for in init_iterator.  (Bug#27008)

2017-05-31  Noam Postavsky  <npostavs@gmail.com>

	cl-print: handle circular objects when `print-circle' is nil (Bug#27117)

	* lisp/emacs-lisp/cl-print.el (cl-print--currently-printing): New variable.
	(cl-print-object): When `print-circle' is nil, bind it to a list of
	objects that are currently printing to avoid printing the same object
	endlessly.
	* test/lisp/emacs-lisp/cl-print-tests.el (cl-print-circle): New test.

2017-05-31  Noam Postavsky  <npostavs@gmail.com>

	Further simplify test/Makefile, optionally load elc tests

	* test/Makefile.in: Use make's error ignoring feature instead of
	suppressing test errors with shell.  Compile test files in the main
	make invocation instead of a recursive 'make' call.  Optionally load
	.elc test files if TEST_LOAD_EL is set to something other than 'yes'.
	Remove obsolete commentary.

2017-05-31  Eli Zaretskii  <eliz@gnu.org>

	Avoid inflooping in redisplay due to Spacemacs and linum-mode

	* src/xdisp.c (redisplay_internal): Limit the number of redisplay
	retries when a frame becomes garbaged as result of redisplaying
	it.  (Bug#27115)

2017-05-31  Tino Calancha  <tino.calancha@gmail.com>

	* src/editfns.c (decode-time): Fix docstring.

2017-05-31  Glenn Morris  <rgm@gnu.org>

	* admin/update_autogen: Remove bzr support.

2017-05-31  Glenn Morris  <rgm@gnu.org>

	Avoid subr test failure when source dir has multiple names

	* test/lisp/subr-tests.el (subr-tests--this-file):
	Use the true name of the file.  The following test does a string
	comparison of this value with that from method-files, which uses
	load-history, which contains true names.

2017-05-31  Dmitry Gutov  <dgutov@yandex.ru>

	Extract eldoc--supported-p

	* lisp/emacs-lisp/eldoc.el (eldoc--supported-p): New function.
	(turn-on-eldoc-mode, eldoc-mode): Use it.
	(https://lists.gnu.org/r/emacs-devel/2017-05/msg00865.html)

2017-05-30  Glenn Morris  <rgm@gnu.org>

	Make "make check" less verbose by default

	* test/Makefile.in (AM_DEFAULT_VERBOSITY, AM_V_ELC, am__v_ELC_)
	(am__v_ELC_0, am__v_ELC_1, AM_V_GEN, am__v_GEN_, am__v_GEN_0)
	(am__v_GEN_1, AM_V_at, am__v_at_, am__v_at_0, am__v_at_1):
	New, copied from lisp/Makefile.in.
	(%.elc, %.log): Simplify and quieten.

2017-05-30  Alan Mackenzie  <acm@muc.de>

	Mode line "%q" construct: Just use one number when both would be the same.

	* src/xdisp.c (decode_mode_spec): recode the "%q" bit appropriately.

2017-05-30  Alan Mackenzie  <acm@muc.de>

	Merge branch 'master' of /home/acm/emacs/emacs.git/master

2017-05-30  Alan Mackenzie  <acm@muc.de>

	c-defun-name: Return fully qualified method names when wanted in C++, etc.

	* lisp/progmodes/cc-cmds.el (c-defun-name): Use
	c-back-over-compound-identifier in place of c-backward-token-2 near the end
	of the function.

2017-05-30  Glenn Morris  <rgm@gnu.org>

	Reduce scope of recent test/Makefile HOME change

	* test/Makefile.in (%.log): Move setting of HOME here from top-level.

2017-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Skip .#* temporaries when finding sources

	Without this patch, ‘make check’ can fail with the diagnostic
	‘invalid syntax in conditional’ if there is an Emacs temporary
	file whose name starts with ‘.#’, because the ‘#’ is treated as
	the start of a Make comment.
	* lisp/Makefile.in (loaddefs, tagsfiles, check-defun-deps):
	* test/Makefile.in (ELFILES):
	Skip files starting with ‘.’, so that the .#* files do not cause
	trouble.  (We cannot easily skip just files starting with ‘.#’,
	since ‘#’ starts a Make comment!)

2017-05-30  Alan Mackenzie  <acm@muc.de>

	Merge branch 'master' of /home/acm/emacs/emacs.git/master

2017-05-30  Alan Mackenzie  <acm@muc.de>

	Fix the mouse help/key map on the "%p" part of the mode line.

	* lisp/bindings.el (mode-line-percent-position): give it a
	`risky-local-variable' property.
	(mode-line-position): correct the quoting on the mode-line-percent-position
	part of the variable, allowing the properties to be properly recognized.

2017-05-30  Alan Mackenzie  <acm@muc.de>

	Fix the mouse help/key map on the "%p" part of the mode line.

	* lisp/bindings.el (mode-line-percent-position): give it a
	`risky-local-variable' property.
	(mode-line-position): correct the quoting on the mode-line-percent-position
	part of the variable, allowing the properties to be properly recognized.

2017-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	* build-aux/config.guess: Copy from gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-05-30  Glenn Morris  <rgm@gnu.org>

	Stop make check interacting with HOME

	* test/Makefile.in (HOME): Export a non-existent value.

2017-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Update .gitattributes to match sources better

	* .gitattributes: Remove nt/nmake.defs.  Move dostorture.c, c.C,
	algrthms.html.  Use pattern for todo-mode.  Improve patterns for
	Ada, C, ObjC, shell.  Add Pascal.  Remove unused pattern *.ruby.
	Add config.guess and config.sub as shell files.

2017-05-30  Noam Postavsky  <npostavs@gmail.com>

	Rename '--new-daemon' to 'fg-daemon' and '--old-daemon' to '--bg-daemon'

	* doc/emacs/cmdargs.texi (Initial Options):
	* doc/lispref/os.texi (Startup Summary):
	* etc/NEWS:
	* etc/emacs.service:
	* src/emacs.c (main):
	* src/lisp.h: Rename '--new-daemon' to 'fg-daemon' and '--old-daemon' to
	'--bg-daemon'.

2017-05-30  Glenn Morris  <rgm@gnu.org>

	todo-mode: don't assume an ordering of tests

	* test/lisp/calendar/todo-mode-tests.el (todo-test-todo-quit02)
	(todo-test-item-highlighting): Avoid prompting for input file.

2017-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Improve .gdbinit Lisp value pretty-printing

	* src/.gdbinit (to_string): Use an unsigned representation for
	Lisp values, as requested by Eli Zaretskii (Bug#27098).
	Also, use "make_number(N)" for Lisp integers.

2017-05-30  Dmitry Gutov  <dgutov@yandex.ru>

	Turn global-eldoc-mode into a globalized minor mode

	* lisp/emacs-lisp/eldoc.el (global-eldoc-mode):
	Turn into globalized mode (bug#19853).
	(turn-on-eldoc-mode): Make it into a wrapper instead of alias.
	(eldoc-mode): Only show the message when called interactively.

2017-05-29  Dmitry Gutov  <dgutov@yandex.ru>

	Use regexp matching instead of checking exit status

	* lisp/progmodes/xref.el (xref-collect-matches):
	See if the output buffer contents look like Grep output
	instead of checking exit status (bug#23451).

2017-05-29  Stephen Berman  <stephen.berman@gmx.net>

	Add initial tests for todo-mode.el

	*test/lisp/calendar/todo-mode-tests.el:
	*test/lisp/calendar/todo-mode-resources/todo-test-1.toda:
	*test/lisp/calendar/todo-mode-resources/todo-test-1.todo: New files.

	* .gitattributes: Ignore trailing whitespace in todo-mode test
	data files, since it is part of the todo-mode file format.

2017-05-29  Stephen Berman  <stephen.berman@gmx.net>

	Make `todo-toggle-item-highlighting' work on multiline items (bug#27133)

	* lisp/calendar/todo-mode.el (todo-hl-line-range): New named function,
	replacing an anonymous function for the sake of `describe-variable'.
	(todo-modes-set-2): Use it as buffer-local value of hl-line-range-function
	and remove boundp test of this variable, so its value is available on
	invoking `todo-toggle-item-highlighting'.

2017-05-29  Alan Third  <alan@idiocy.org>

	Fix build error on macOS 10.6

	* src/nsfns.m (compute_tip_xy): Cast NSRect to CGRect and NSPoint to
	CGPoint.

2017-05-29  Jules Tamagnan  <jtamagnan@gmail.com>  (tiny change)

	Comply with pep 8 style guide for backslash in assignment (Bug#24809)

	* lisp/progmodes/python.el (python-indent--calculate-indentation):
	Increase indent by `python-indent-offset' after
	`:after-backslash-assignment-continuation'.

2017-05-29  Wilfred Hughes  <me@wilfred.me.uk>

	Add suggestion to docstring

	* lisp/subr.el (interactive-p): Mention commandp, as this is often
	  what users are actually looking for.

2017-05-29  Wilfred Hughes  <me@wilfred.me.uk>

	Ensure button-get works in any buffer

	* lisp/button.el (button-get): Previously we assumed that button-get
	  was called in the buffer containing the button.  In other buffers,
	  button-get always returned nil.  Fix this by passing the relevant
	  buffer from the marker.

2017-05-29  Dmitry Gutov  <dgutov@yandex.ru>

	Signal error if find-grep returns a nonzero status

	* lisp/progmodes/xref.el (xref-collect-matches): Signal error
	if find-grep returns a nonzero status (bug#23451).  Remove the
	comment: even if some output is present, a non-zero status
	means something went wrong and it can't be relied upon.

2017-05-29  Stephen Berman  <stephen.berman@gmx.net>

	Make sure exiting todo-mode buffer buries it (bug#27121)

	This failed due to commit ea3ae33b from 2013-05-16, which prevented
	quitting todo-mode buffer after visiting todo-archive buffer from
	making the archive buffer current again.  Avoid this now by simply
	killing the archive buffer, since there's no need to keep it a live
	buffer.  Consequently, quitting a todo-mode buffer can now use
	bury-buffer without an argument, which ensures that is will not
	becomes current on quitting the buffer that replaced it in the window.

	* lisp/calendar/todo-mode.el (todo-quit): Kill todo-archive-mode
	buffer instead of burying it.  This now allows exiting the
	todo-mode buffer by bury-buffer without an argument, so do that.

2017-05-28  Michael Albinus  <michael.albinus@gmx.de>

	Some tweaks, almost all for Tramp adb method

	* lisp/net/tramp-adb.el (tramp-adb-parse-device-names):
	Use `make-tramp-file-name'.
	(tramp-adb-get-device): Use `tramp-file-name-port-or-default'.
	(tramp-adb-maybe-open-connection): Set "prompt" property.
	(tramp-adb-wait-for-output): Use it.

	* lisp/net/tramp-cache.el (tramp-cache-print): Use `elt'.
	(tramp-dump-connection-properties): Check also that there are
	properties to be saved.  Don't save "started" property of
	"ftp" method.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-expand-file-name):
	Use `make-tramp-file-name'.

	* lisp/net/tramp.el (tramp-remote-file-name-spec-regexp):
	Host could be empty.
	(tramp-file-name-port-or-default): New defun.
	(tramp-dissect-file-name): Simplify `make-tramp-file-name' call.
	(tramp-handle-file-name-case-insensitive-p): Use a progress reporter.
	(tramp-call-process, tramp-call-process-region):
	Use `make-tramp-file-name'.

	* test/lisp/net/tramp-tests.el (tramp-test03-file-name-defaults):
	Revert change from 2017-05-24.
	(tramp-test05-expand-file-name-relative): Let it also pass for
	"adb" method.

2017-05-28  Jürgen Hötzel  <juergen@archlinux.org>

	Fix Tramp for Android 7

	* lisp/net/tramp-adb.el (tramp-adb-ls-toolbox-regexp):
	Username part of prompt is empty on Android 7.
	(tramp-adb-ls-toolbox-regexp):
	Ignore addition links column on Android 7.
	(tramp-adb-get-ls-command):
	Dont use --color=none when using toybox (Android 7).  It's not
	possible to disable coloring explicitly for toybox ls.

2017-05-27  Svante Carl v. Erichsen  <Svante.v.Erichsen@web.de>  (tiny change)

	Fix cl-indent for `loop' with :keywords (Bug#15543)

	* lisp/emacs-lisp/cl-indent.el (lisp-extended-loop-p): Allow for
	":keywords".

2017-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Depromiscuify inotify with IN_MASK_ADD

	Use IN_MASK_ADD instead of using a no-longer-promiscuous-enough
	mask.  This simplifies the code and restores the ability to
	use IN_ACCESS, IN_CLOSE_WRITE, IN_CLOSE_NOWRITE, and IN_OPEN
	in some cases (Bug#26973).
	* src/inotify.c (INOTIFY_DEFAULT_MASK): Remove.
	(Finotify_add_watch): Use IN_MASK_ADD instead.

2017-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Restore inotify onlydir support

	There was no need to remove it in the 2017-03-26 inotify change,
	as it is like IN_DONT_FOLLOW and does not affect other watchers
	for the same file.
	* src/inotify.c (symbol_to_inotifymask, Finotify_add_watch)
	(syms_of_inotify): Bring back onlydir.

2017-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify computation of inotify mask

	* src/inotify.c (add_watch): Accept uint32_t imask instead
	of Lisp_Object aspect.  Caller changed.
	(Finotify_add_watch): Use aspect_to_inotifymask earlier, to
	simplify the code.

2017-05-27  Eli Zaretskii  <eliz@gnu.org>

	Improve the documentation of filesets

	* doc/emacs/files.texi (Filesets): Fix the description of
	fileset-init's effect on the menu bar.  (Bug#27015)

2017-05-27  Philipp Stephani  <phst@google.com>

	Don't attempt to recover from undefined behavior in some cases

	These functions can only be run in batch mode and exit Emacs on
	return, so nothing can be recovered.  Disable unsafe recover
	mechanisms so that we get real failures and good stack traces on
	fatal signals.

	* lisp/emacs-lisp/bytecomp.el (batch-byte-compile)
	(batch-byte-recompile-directory):
	* lisp/emacs-lisp/ert.el (ert-run-tests-batch-and-exit)
	(ert-summarize-tests-batch-and-exit): Don't attempt to recover
	from undefined behavior.

2017-05-27  Philipp Stephani  <phst@google.com>

	Avoid another compiler warning on macOS

	When configured with --without-ns, HAVE_NS is not defined on macOS,
	thus 'memory-limit' calls the deprecated sbrk(2) function.  Avoid that
	by using the pre-defined __APPLE__ preprocessor macro.

	* src/alloc.c (Fmemory_limit): Never use sbrk(2) on macOS.

2017-05-27  Luke Yen-Xun Lee  <luke.yx.lee@gmail.com>

	Fix ruler-mode text-scaling issues

	* lisp/ruler-mode.el (ruler-mode-text-scaled-width): New function
	for computing scaled text width.
	(ruler-mode-text-scaled-window-hscroll)
	(ruler-mode-text-scaled-window-width): Compute text scaled
	`window-width' value.
	(ruler-mode-mouse-grab-any-column, ruler-mode-mouse-add-tab-stop)
	(ruler-mode-ruler): Change `window-hscroll' into
	`ruler-mode-text-scaled-window-hscroll', and change `window-width'
	into `ruler-mode-text-scaled-window-width'.

2017-05-27  Martin Rudalics  <rudalics@gmx.at>

	Minor doc and doc-string fixes (Bug#27091)

	* src/window.c (Fset_window_scroll_bars): Fix doc-string.

	* doc/lispref/display.texi (Fringe Size/Pos, Scroll Bars)
	(Display Margins): Mention that `set-window-buffer' may override
	settings made by `set-window-fringes', `set-window-scroll-bars'
	and `set-window-margins'.
	* doc/lispref/windows.texi (Buffers and Windows): Fix doc of
	`set-window-buffer'.

2017-05-27  Eli Zaretskii  <eliz@gnu.org>

	Avoid args-out-of-range errors on fringe clicks after "C-h k"

	* src/keyboard.c (echo_truncate): Don't call Ftruncate if the echo
	message is already shorter than NCHARS.  (Bug#27040)

2017-05-27  Eli Zaretskii  <eliz@gnu.org>

	Fix GUD "Stop" display when running pdb

	* lisp/progmodes/gud.el (gud-menu-map): Don't call gdb-show-stop-p
	when GUD mode is 'pdb'.  (Bug#27024)

2017-05-27  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Support drag and drop of region by mouse (Bug#26725)

	* doc/emacs/frames.texi (Drag and Drop): Document support of drag
	and drop region by mouse.
	* lisp/mouse.el (mouse-drag-region): Call mouse-drag-and-drop-region
	when start-event is on region.
	(mouse-drag-and-drop-region): New function, moves the region by
	(mouse-drag-and-drop-region): New defcustom.
	* etc/NEWS: Mention mouse-drag-and-drop-region.

2017-05-27  Noam Postavsky  <npostavs@gmail.com>

	* lisp/emacs-lisp/eieio.el (defclass): Fix quote in warning message.

2017-05-27  Alan Third  <alan@idiocy.org>

	Check if instancetype supported in ObjC

	* configure.ac: Add check for instancetype.
	* src/nsterm.h [!NATIVE_OBJC_INSTANCETYPE]: Define instancetype.

2017-05-26  Wilfred Hughes  <me@wilfred.me.uk>

	Mark keywordp as a safe, error-free function

	* lisp/emacs-lisp/byte-opt.el: Add keywordp to
	  side-effect-and-error-free-fns.

2017-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	* src/inotify.c: Add FIXME comments.

2017-05-26  Andreas Politz  <politza@hochschule-trier.de>

	Fix Bug#26973

	* src/inotify.c (INOTIFY_DEFAULT_MASK): Removing ACCESS, OPEN
	and CLOSE events on order do let other processes also reading
	from their descriptors.  (Bug#26973).

2017-05-26  Michael Albinus  <michael.albinus@gmx.de>

	Remove Emacs 23 compat code from Tramp

	* doc/misc/tramp.texi (Remote processes): Don't mention
	Emacs 24 explicitly.
	(Frequently Asked Questions): Remove Emacs 23 from
	compatibility list.

	* lisp/net/tramp.el:
	* lisp/net/tramp-adb.el:
	* lisp/net/tramp-cache.el:
	* lisp/net/tramp-gvfs.el:
	* lisp/net/tramp-sh.el:
	* lisp/net/tramp-smb.el: Replace compat function calls.

	* lisp/net/tramp-compat.el (remote-file-name-inhibit-cache)
	(tramp-compat-condition-case-unless-debug)
	(tramp-compat-copy-file, tramp-compat-copy-directory)
	(tramp-compat-delete-file, tramp-compat-delete-directory)
	(tramp-compat-process-live-p): Remove them.

	* lisp/net/trampver.el: Make version check fit for Emacs 24.

2017-05-26  Katsumi Yamaoka  <yamaoka@jpl.org>

	Work for application/x-tar-gz and image/svg+xml

	;; Try inlining the attachment in the article <87wp94dzj6.fsf@gmail.com>
	;; of bug#27078 in the Emacs bug list using Gnus.

	* lisp/gnus/mm-archive.el (mm-archive-decoders):
	Add a decoder for application/x-tar-gz.
	(mm-dissect-archive): Error out if a decoder is not found.

	* lisp/gnus/mm-decode.el (mm-get-image): Allow image/svg+xml.

2017-05-26  Tino Calancha  <tino.calancha@gmail.com>

	test-calc-23889: Skip test on 32-bit platforms

	This test fails on some 32-bit platforms as mentioned in
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00737.html
	* test/lisp/calc/calc-tests.el (test-calc-23889): Skip when
	the Lisp integer is not big enough.

2017-05-25  Alan Third  <alan@idiocy.org>

	Fix NS tooltips showing in the wrong place (bug#27053)

	* src/nsfns.m (compute_tip_xy): Get current mouse position instead of
	last recorded position.

2017-05-25  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	lisp/net/soap-client.el: Bump version to 3.1.2

	* lisp/net/soap-client.el: Bump version to 3.1.2.

2017-05-25  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	Fix soap-inspect.el doc strings

	* lisp/net/soap-inspect.el (soap-inspect-xs-attribute): Fix doc
	string.
	(soap-inspect-xs-attribute-group): Likewise.

2017-05-25  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	Fix two soap-client.el byte compilation warnings

	* lisp/net/soap-client.el (url-http-response-status): Add defvar.
	(soap-fetch-xml-from-url): Remove special declaration of
	url-http-response-status.
	(soap-invoke-internal): Likewise.

2017-05-25  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	lisp/net/soap-client.el: Require cl-lib version 0.6.1

	* lisp/net/soap-client.el: Require cl-lib version 0.6.1.

2017-05-25  Thomas Fitzsimmons  <fitzsim@fitzsim.org>
	    Stefan Monnier  <monnier@iro.umontreal.ca>

	lisp/net/soap-client.el: Shorten some long lines

	* lisp/net/soap-client.el (soap-encode-xs-element): Remove
	unnecessary progn.
	(soap-xs-add-union): Wrap long line.

2017-05-25  Alex Harsanyi  <AlexHarsanyi@gmail.com>
	    Stefan Monnier  <monnier@iro.umontreal.ca>

	Remove cl dependency in soap-client.el and soap-inspect.el

	* lisp/net/soap-inspect.el: Replace cl library with cl-lib, case
	with cl-case, destructuring-bind with cl-destructuring-bind and
	loop with cl-loop.

	* lisp/net/soap-client.el: Replace cl library with cl-lib,
	defstruct with cl-defstruct, assert with cl-assert, case with
	cl-case, ecase with cl-ecase, loop with cl-loop and
	destructuring-bind with cl-destructuring-bind.

2017-05-25  Michael Albinus  <michael.albinus@gmx.de>

	Switch Tramp to cl-lib

	* lisp/net/tramp-compat.el (cl-lib): Require it rather than cl.

	* lisp/net/tramp-ftp.el: Don't require cl.

	* lisp/net/tramp-gvfs.el: Don't require cl.
	(tramp-gvfs-handler-mounted-unmounted)
	(tramp-gvfs-connection-mounted-p): Use `cl-*' macros.

	* lisp/net/tramp-sh.el: Don't require cl.
	(tramp-set-file-uid-gid): Use `shell-quote-argument'.
	(tramp-sh-gvfs-monitor-dir-process-filter)
	(tramp-sh-inotifywait-process-filter): Use `cl-*' macros.

	* lisp/net/tramp-smb.el: Don't require cl.
	(tramp-smb-read-file-entry): Use `cl-*' macros.

	* lisp/net/tramp.el (cl-lib): Require it rather than cl.
	(tramp-parse-file, tramp-parse-shostkeys-sknownhosts)
	(tramp-parse-passwd, tramp-parse-etc-group)
	(tramp-parse-putty): Use `cl-*' macros.

2017-05-25  Paul Eggert  <eggert@cs.ucla.edu>

	* CONTRIBUTE: Suggest autogen.sh's 'all' operand.

2017-05-25  Paul Eggert  <eggert@cs.ucla.edu>

	Port ATTRIBUTE_MAY_ALIAS to recent icc

	* src/conf_post.h (ATTRIBUTE_MAY_ALIAS) [__ICC]:
	Define to empty.  Otherwise, icc (ICC) 17.0.4 20170411 says
	“warning #2621: attribute "__may_alias__" does not apply here”
	for constructs like ‘struct sockaddr *sa = (whatever);
	struct sockaddr_in __attribute__ ((__may_alias__)) *sin
	= (struct sockaddr_in *) sa;’.

2017-05-25  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-05-25 port to recent icc
	* lib/intprops.h: Copy from gnulib.

2017-05-24  Michael Albinus  <michael.albinus@gmx.de>

	Fix Tramp for python.el

	* lisp/net/tramp.el (tramp-get-connection-process): Check,
	that VEC is a `tramp-file-name' structure.

2017-05-24  Alan Third  <alan@idiocy.org>

	Raise version of macOS we define instancetype for (bug#27059)

	* src/nsterm.m: Increase supported version number.

2017-05-24  Alan Third  <alan@idiocy.org>

	Define new types on macOS 10.6 (bug#27041)

	* src/nsterm.h: Enable instancetype typedef for older macOS, and use
	correct NSUInteger instead of int.

2017-05-24  Glenn Morris  <rgm@gnu.org>

	Don't autoload new dns-mode command

	* lisp/textmodes/dns-mode.el (dns-mode-ipv6-to-nibbles):
	Remove autoload cookie.

2017-05-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/fns.c (sxhash): Fix records hashing (bug#27057, bug#26639)

	(sxhash_vector): Make it work on pseudo vectors as well.
	(sxhash): Treat records like vectors.

2017-05-24  Michael Albinus  <michael.albinus@gmx.de>

	Adapt tramp-tests.el according to new defstruct

	* test/lisp/net/tramp-tests.el (tramp-test03-file-name-defaults):
	Fix test according to new defstruct.
	(tramp-test29-environment-variables-and-port-numbers):
	Expect it now as passed.  Cleanup at the end.

2017-05-24  Michael Albinus  <michael.albinus@gmx.de>

	Introduce a defstruct `tramp-file-name' as central data structure.

	This solves also Bug#27009.

	* lisp/net/tramp.el (tramp-current-domain)
	(tramp-current-port): New defvars.
	(tramp-file-name): New defstruct.
	(tramp-file-name-user-domain, tramp-file-name-host-port)
	(tramp-file-name-equal-p): New defuns.
	(tramp-file-name-p, tramp-file-name-method)
	(tramp-file-name-user, tramp-file-name-host)
	(tramp-file-name-localname, tramp-file-name-hop)
	(tramp-file-name-real-user, tramp-file-name-domain)
	(tramp-file-name-real-host, tramp-file-name-port):
	Remove defuns.  They are provided by the defstruct, or not
	needed anymore.
	(tramp-dissect-file-name, tramp-buffer-name)
	(tramp-make-tramp-file-name, tramp-get-buffer)
	(tramp-set-connection-local-variables)
	(tramp-debug-buffer-name, tramp-message)
	(tramp-error-with-buffer, with-parsed-tramp-file-name)
	(tramp-completion-dissect-file-name1)
	(tramp-handle-file-name-as-directory)
	(tramp-handle-file-name-directory)
	(tramp-handle-file-remote-p, tramp-handle-file-symlink-p)
	(tramp-handle-find-backup-file-name)
	(tramp-handle-insert-file-contents, tramp-process-actions)
	(tramp-check-cached-permissions, tramp-local-host-p)
	(tramp-get-remote-tmpdir, tramp-call-process)
	(tramp-call-process-region, tramp-read-passwd)
	(tramp-clear-passwd):
	* lisp/net/tramp-adb.el (tramp-adb-parse-device-names)
	(tramp-adb-handle-expand-file-name)
	(tramp-adb-handle-file-truename, tramp-adb-handle-copy-file)
	(tramp-adb-handle-process-file)
	(tramp-adb-maybe-open-connection):
	* lisp/net/tramp-cache.el (tramp-get-hash-table)
	(tramp-get-file-property, tramp-set-file-property)
	(tramp-flush-file-property, tramp-flush-directory-property)
	(tramp-get-connection-property)
	(tramp-set-connection-property, tramp-connection-property-p)
	(tramp-flush-connection-property, tramp-cache-print)
	(tramp-list-connections, tramp-dump-connection-properties)
	(tramp-parse-connection-properties):
	* lisp/net/tramp-cmds.el (tramp-cleanup-connection):
	* lisp/net/tramp-ftp.el (tramp-ftp-file-name-handler):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-expand-file-name)
	(tramp-gvfs-url-file-name, tramp-gvfs-handler-askpassword)
	(tramp-gvfs-handler-mounted-unmounted)
	(tramp-gvfs-mount-spec, tramp-gvfs-get-remote-uid)
	(tramp-gvfs-get-remote-gid)
	(tramp-gvfs-maybe-open-connection):
	* lisp/net/tramp-sh.el (tramp-sh-handle-file-truename)
	(tramp-do-copy-or-rename-file-out-of-band)
	(tramp-sh-handle-expand-file-name)
	(tramp-sh-handle-start-file-process)
	(tramp-sh-handle-process-file, tramp-compute-multi-hops)
	(tramp-maybe-open-connection)
	(tramp-make-copy-program-file-name, tramp-get-remote-path)
	(tramp-get-inline-coding):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-expand-file-name)
	(tramp-smb-handle-file-acl, tramp-smb-handle-process-file)
	(tramp-smb-handle-set-file-acl)
	(tramp-smb-maybe-open-connection): Adapt according to defstruct.

2017-05-24  Stephen Berman  <steve@rosalinde.fritz.box>

	Fix and improve UI of scroll bar menu (bug#27047)

	In addition, since the Emacs manual writes "scroll bar", "tool
	bar" and "menu bar", use this convention in the Show/Hide menues
	and tooltips as well.

	* lisp/menu-bar.el (menu-bar-showhide-scroll-bar-menu): Make
	pressing a radio button in the menu actually show that it was
	pressed.  Replace the two radio buttons to turn the horizontal
	scroll bar on and off with a single check-box toggle and add a
	separator between this and the vertical scroll bar radio
	buttons.  Use conventional spelling.
	(menu-bar-horizontal-scroll-bar)
	(menu-bar-no-horizontal-scroll-bar): Remove, since now unused.
	(menu-bar-showhide-tool-bar-menu, menu-bar-showhide-menu)
	(menu-bar-mode): Use conventional spelling.

2017-05-24  Katsumi Yamaoka  <yamaoka@jpl.org>

	Remove string-as-unibyte

	* lisp/gnus/canlock.el (canlock-sha1): Remove useless variable.
	(canlock-make-cancel-key): No need to use string-as-unibyte.

2017-05-24  Tino Calancha  <tino.calancha@gmail.com>

	Fix concatenation of "^" with diff-file-junk-re

	This regexp contains "\\|", thus a concatenation
	of "^" with it just matches the beginning of line for the
	first alternative in diff-file-junk-re.
	* lisp/vc/ediff-ptch.el (ediff-map-patch-buffer): Concat "^" with
	diff-file-junk-re wrapped in a shy group.

2017-05-24  Glenn Morris  <rgm@gnu.org>

	Suppress intermittent test failure on hydra

	* test/lisp/emacs-lisp/eieio-tests/eieio-tests.el
	(eieio-test-37-obsolete-name-in-constructor): Skip on hydra.

2017-05-24  Peder O. Klingenberg  <peder@klingenberg.no>

	New dns-mode command for IPv6 address conversion

	This converts IPv6 addresses to a format suitable for
	reverse lookup zone files.  (Bug#26820)
	* lisp/textmodes/dns-mode.el (dns-mode-map, dns-mode-menu):
	Add dns-mode-ipv6-to-nibbles.
	(dns-mode-ipv6-to-nibbles, dns-mode-reverse-and-expand-ipv6):
	New functions.
	* test/lisp/dns-mode-tests.el: New file.

2017-05-24  Noam Postavsky  <npostavs@gmail.com>

	Protect *Backtrace* from being killed (Bug#26650)

	* lisp/emacs-lisp/debug.el (debugger-mode): Call `top-level' in
	`kill-buffer-hook'.

2017-05-24  Noam Postavsky  <npostavs@gmail.com>

	Give a name to lisp-mode's adaptive-fill-function (Bug#22730)

	* lisp/emacs-lisp/lisp-mode.el (lisp-adaptive-fill): New function.
	(lisp-mode-variables): Use it.

2017-05-23  Philipp Stephani  <phst@google.com>

	vc-hg.el: Silence byte compiler warning

	* lisp/vc/vc-hg.el (compilation-arguments): Forward-declare.

2017-05-23  Paul Eggert  <eggert@cs.ucla.edu>

	Don't warn about missing brances on macOS

	On macOS, removing -Wmissing-braces is not enough; the warning has to
	be disabled explicitly.

2017-05-23  Wilfred Hughes  <me@wilfred.me.uk>

	Don't treat ' as a string delimiter in RPM spec files

	' is commonly used as an apostrophe in the prose sections of spec
	files, which was erroneously highlighted as strings. See for example
	http://kmymoney2.sourceforge.net/phb/rpm-example.html

	* lisp/progmodes/sh-script.el (sh-mode-syntax-table): Treat ' as
	  punctuation in RPM spec files.

2017-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-indent.el: Don't require CL.  Use lexical-binding.

	(common-lisp-indent-function-1): Remove unused var `last-point`.
	(lisp-indent-error-function): Move defvar before first use.

2017-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/international/rfc1843.el: Don't require CL.  Use lexical-binding.

	* lisp/international/utf7.el: Don't require CL.  Use lexical-binding.

	* lisp/net/shr.el: Use cl-lib instead of cl.

2017-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* test/src/fns-tests.el, test/src/data-tests.el: Don't use `cl`

	* test/src/data-tests.el (binding-test-manual, binding-test-setq-default)
	(binding-test-makunbound, data-tests-varalias-watchers)
	(data-tests-local-variable-watchers): Silence compiler warnings.

2017-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/vc/vc-hg.el (compilation-directory): Silence byte-compiler.

2017-05-23  Alan Third  <alan@idiocy.org>

	Fix GNUstep build

	* src/nsterm.h [NS_IMPL_GNUSTEP]: Add typedefs for Cocoa-only types.
	(NSWindowStyleMaskUtilityWindow): #define to NSUtilityWindowMask in
	GNUstep and old versions of macOS.
	* src/nsfns.m (ns-set-mouse-absolute-pixel-position): Function only
	works in cocoa, not GNUstep.

2017-05-23  Michael Albinus  <michael.albinus@gmx.de>

	Add test for Bug#27009 in tramp-tests.el

	* lisp/net/tramp-sh.el (tramp-compute-multi-hops):
	Check `tramp-file-name-real-host' for being a local host.

	* lisp/net/tramp.el (tramp-postfix-host-regexp): Fix docstring.

	* test/lisp/net/tramp-tests.el (tramp-test-temporary-file-directory):
	Declare default host for mock method.
	(tramp-test29-environment-variables-and-port-numbers): New test.

2017-05-23  Glenn Morris  <rgm@gnu.org>

	Don't advertise s_client in tls.el docs

	* lisp/net/tls.el (tls-end-of-info, tls-success, tls-untrusted):
	Don't mention s_client in docs.

	(cherry picked from commit 622c24a2b75a564b9861fc3ca7a7878741e8568d)

2017-05-23  Rob Browning  <rlb@defaultvalue.org>

	Remove s_client usage from tls.el

	* lisp/net/tls.el (tls-program, tls-checktrust): Remove s_client.
	Ref http://bugs.debian.org/766397
	https://lists.gnu.org/r/emacs-devel/2014-10/msg00803.html


	(cherry picked from commit 6e45de6bacc508db11b15b2c8ba86aad8c0570df)

2017-05-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/mail/rfc2047.el (rfc2047-decode-encoded-words): Set `words` to nil.

2017-05-22  Sam Steingold  <sds@gnu.org>

	Fix "g" in hg&git push&pull buffers

	lisp/vc/vc-git.el (vc-git--pushpull): Set locally
	`compilation-directory' and `compilation-arguments'.
	lisp/vc/vc-hg.el (vc-hg--pushpull): Likewise.

2017-05-22  Eli Zaretskii  <eliz@gnu.org>

	Fix current-line hscrolling in buffers with header-line

	* src/xdisp.c (display_line): When testing the glyph row's
	vertical position against the cursor position, account for header
	line, if any.  (Bug#27014)

2017-05-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/mail/rfc2047.el: Use cl-lib & lexical-binding, silence warning

	(rfc2047-decode-encoded-words): Use dolist.
	(rfc2047-decode-string): Avoid string-to-multibyte.
	(rfc2047-pad-base64): Use pcase.

2017-05-21  Dima Kogan  <dima@secretsauce.net>

	Make ff-find-other-file symmetric for C++ (Bug#20192)

	`cc-other-file-alist' has a mapping of file extensions to switch
	between headers and sources, but the mappings weren't completely
	symmetric.  In particular .cpp would map to .hh, but .hh would NOT map
	to .cpp.

	* lisp/find-file.el (cc-other-file-alist): Map ".hh" and ".h" to all
	C++ extensions to make them symmetric with the C++ extensions that map
	to them.  This lets repeated invocations of `ff-find-other-file'
	toggle between all pairs of sources/headers.

2017-05-21  Philipp Stephani  <phst@google.com>

	Fix definition of whitespace in JSON

	See
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00115.html.

	* lisp/json.el (json-skip-whitespace): Fix definition.
	* test/lisp/json-tests.el (test-json-skip-whitespace): Adapt unit
	test.

2017-05-21  Philipp Stephani  <phst@google.com>

	Improve module function terminology

	Module functions were previously called "function environments" when
	the functions created by module_make_functions were lambdas.  Now we
	can adapt the terminology and rename "function environments" to
	"module functions" everywhere.  This also removes the name clash
	between "function environments" and "module environments."

	* src/emacs-module.c (module_make_function): Adapt comment to reality;
	stop using "function environment" terminology.
	(funcall_module): Stop using "function environment" terminology.

2017-05-21  Philipp Stephani  <phst@google.com>

	Avoid uninitialized read

	* src/nsterm.m (ns_read_socket): Don't read uninitialized variable 'nevents'.

2017-05-21  Philipp Stephani  <phst@google.com>

	Fix call of registerServicesMenuSendTypes

	* src/nsterm.m (initFrameFromEmacs:): nil is not allowed for
	returnTypes; pass an empty array instead.

2017-05-21  Philipp Stephani  <phst@google.com>

	Clean up code around 'ns-list-services'

	* src/nsfns.m (Fns_list_services): Remove unreachable code.  In this
	branch NS_IMPL_COCOA cannot be defined.
	(interpret_services_menu): Define only if called to avoid compiler
	warnings about unused static functions.

2017-05-21  Philipp Stephani  <phst@google.com>

	Remove unused automatic variables

	* src/nsterm.m (ns_read_socket):
	* src/macfont.m (macfont_open): Remove unused automatic variables.

2017-05-21  Philipp Stephani  <phst@google.com>

	Nextstep: Replace deprecated enumerators

	* src/nsmenu.m (initWithContentRect:styleMask:backing:defer:): Replace
	deprecated enumerator.

2017-05-21  Philipp Stephani  <phst@google.com>

	Nextstep: remove some deprecated method calls

	* src/nsterm.m (mouseDown:):
	* src/nsmenu.m (runMenuAt:forFrame:keymaps:): Remove call to
	deprecated method.  The return value is always nil.
	* src/macfont.m (mac_font_shape_1): Replace call to deprecated method.

2017-05-21  Philipp Stephani  <phst@google.com>

	Remove trailing semicolons in method definitions

	These semicolons are ignored and cause compiler warnings.

	* src/nsimage.m (setPixelAtX:Y:toRed:green:blue:alpha:):
	* src/nsterm.m (init, updateFrameSize:):
	(setFrame:): Remove trailing semicolon.

2017-05-21  Philipp Stephani  <phst@google.com>

	Remove calls to deprecated setUsesScreenFonts

	* src/macfont.m (mac_screen_font_get_metrics): Don't call setUsesScreenFonts.
	(mac_font_shape_1): Remove screen_font_p parameter.
	(mac_screen_font_shape): Remove screen_font_p argument.

2017-05-21  Philipp Stephani  <phst@google.com>

	Make a function static that isn't used outside this file

	* src/kqueue.c (kqueue_directory_listing): Make static.

2017-05-21  Philipp Stephani  <phst@google.com>

	Use NSCharacterCollection instead of CTCharacterCollection

	This should not cause behavior changes, but fixes a compiler warning
	due to implicit conversions between the enums.

	* src/macfont.m (macfont_cache, macfont_lookup_cache)
	(macfont_get_glyph_for_cid, macfont_get_uvs_table)
	(macfont_variation_glyphs): Use NSCharacterCollection.

2017-05-21  Philipp Stephani  <phst@google.com>

	Remove unused function print_regions

2017-05-21  Philipp Stephani  <phst@google.com>

	Declare Nextstep unexec functions in lisp.h

	This removes compiler warnings about missing prototypes on macOS.

2017-05-21  Philipp Stephani  <phst@google.com>

	Nextstep: Use instancetype explicit return type

	This removes compiler warnings on macOS and improves type safety.

	* src/nsterm.m (initFrameFromEmacs:):
	(menuDown:):
	(toolbarClicked:):
	(toggleToolbar:):
	(setMiniwindowImage:):
	(initFrame:window:):
	(condemn, reprieve, setPosition:portion:whole:):
	(repeatScroll:):
	* src/nsmenu.m (initWithTitle:):
	(initWithTitle:frame:):
	(initForView:withIdentifier:):
	(init, initWithContentRect:styleMask:backing:defer:):
	(initFromContents:isQuestion:):
	* src/nsimage.m (allocInitFromFile:):
	(initFromXBM:width:height:fg:bg:):
	(setXBMColor:):
	(initForXPMWithDepth:width:height:): Use instancetype as return
	type instead of implicit id.

2017-05-21  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/emacs-lisp/package.el (package-delete): Delete readme file as well.

2017-05-21  Alan Mackenzie  <acm@muc.de>

	Enhance mode-line percentage offset facility, with "%o" and "%q"

	"%o" will display the percentage "travel" of the window through the buffer.
	"%q" will display a combination of the percentage offsets of the top and
	bottom of the window.  The new user option mode-line-percent-position will
	facilitate selecting a setting for this part of the mode line.

	* lisp/bindings.el (mode-line-percent-position): New customizable user option.
	(mode-line-position): Use mode-line-percent-position in place of "%p", etc.

	* src/xdisp.c (decode_mode_spec): Add handlers for "%o" and "%q".

	* doc/lispref/modes.texi (Mode Line Variables): Document
	mode-line-percent-position.
	(%-Constructs): Document %o and %q.

	* etc/NEWS: Add an entry for these new facilities.

2017-05-21  Paul Eggert  <eggert@cs.ucla.edu>

	Work around macOS bug in create_process, too

	* src/process.c (create_process) [DARWIN_OS]:
	Reset SIGCHLD after vfork here, too.

2017-05-21  Paul Eggert  <eggert@cs.ucla.edu>

	Work around macOS bug with vforked child

	* src/callproc.c (call_process) [DARWIN_OS]:
	Include workaround for apparent macOS bug.

2017-05-21  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings without modules

	* src/print.c (print_vectorlike): New function, taken from
	part of print_object.  This one is indented properly, and
	pacifies --enable-gcc-warnings by using a default case
	instead of listing all the enum values, sometimes
	incompletely.
	(print_object): Use it.

2017-05-21  Paul Eggert  <eggert@cs.ucla.edu>

	Remove DARWIN_OS_CASE_SENSITIVE_FIXME code

	It does not appear to be needed (Bug#24441).
	* etc/PROBLEMS: Remove DARWIN_OS_CASE_SENSITIVE_FIXME stuff.
	* src/fileio.c (file_name_case_insensitive_p):
	Remove DARWIN_OS_CASE_SENSITIVE_FIXME code.

2017-05-21  Paul Eggert  <eggert@cs.ucla.edu>

	Narrow DARWIN_OS_CASE_SENSITIVE_FIXME to 1 choice

	* etc/PROBLEMS: Document this (Bug#24441).
	* src/fileio.c (file_name_case_insensitive_p): Prefer pathconf
	with _PC_CASE_SENSITIVE, if it works, to
	DARWIN_OS_CASE_SENSITIVE_FIXME code.
	Support just one method for DARWIN_OS_CASE_SENSITIVE_FIXME,
	which matches the Apple documentation more precisely.

2017-05-21  Tom Tromey  <tom@tromey.com>

	Fix mhtml-mode fontification bug

	Bug#26922
	* lisp/textmodes/mhtml-mode.el (mhtml-syntax-propertize): Call
	sgml-syntax-propertize-inside if not in a submode.
	* test/manual/indent/html-multi-4.html: New file.

2017-05-21  Ryan  <rct@thompsonclan.org>  (tiny change)

	Fix ido-enable-dot-prefix for empty choice (Bug#26997)

	* lisp/ido.el (ido-set-matches-1): Only check first character of
	item if it's non-empty.

2017-05-21  Ari Roponen  <ari.roponen@gmail.com>

	* lisp/svg.el (svg-line): Fix x/y typo.  (Bug#26953)

2017-05-21  Glenn Morris  <rgm@gnu.org>

	Prevent loading vc-bzr writing to ~/.bzr.log

	* lisp/vc/vc-bzr.el (vc-bzr-status-switches): Disable bzr logging.

2017-05-21  Glenn Morris  <rgm@gnu.org>

	Prevent running vc-tests writing to ~/.bzr.log

	* test/lisp/vc/vc-tests.el (vc-test--create-repo)
	(vc-test--register, vc-test--working-revision)
	(vc-test--checkout-model): Set temporary BZR_HOME, to disable logging.

2017-05-21  Noam Postavsky  <npostavs@gmail.com>

	Don't end non-hook variable with "-hook" (Bug#26623)

	* lisp/follow.el (follow-inside-post-command-hook-call): Renamed from
	follow-inside-post-command-hook, update uses.

2017-05-21  Charles A. Roelli  <charles@aurox.ch>

	Fix macOS mouse movement

	* lisp/frame.el (ns-set-mouse-absolute-pixel-position): New
	function (Lisp).
	(set-mouse-absolute-pixel-position): Change it to call
	`ns-set-mouse-absolute-pixel-position' on macOS.
	* src/nsfns.m (Fns_set_mouse_absolute_pixel_position): New
	function.
	* src/nsterm.h (NS_PARENT_WINDOW_TOP_POS): Use the primary
	screen's height as a base for calculating global coordinates.
	* src/nsterm.m (frame_set_mouse_pixel_position): Fix it in macOS.
	* test/lisp/mouse-tests.el (bug26816-mouse-frame-movement): Test
	movement of mouse relative to frame.

2017-05-21  Alan Third  <alan@idiocy.org>

	Show tooltip on correct screen (bug#26905)

	* src/nsfns.m (compute_tip_xy): Find the correct screen for the
	tooltip and constrain it to that screen.

2017-05-21  Andreas Politz  <politza@hochschule-trier.de>

	Don't save unrelated buffers before recompiling directory (Bug#25964)

	* lisp/emacs-lisp/bytecomp.el (byte-recompile-directory): Only save
	buffers visiting lisp files under the directory being compiled.

2017-05-20  Paul Eggert  <eggert@cs.ucla.edu>

	Minor fixes for arity ranges in emacs modules

	* src/emacs-module.c (module_make_function):
	Check that arities fit into fixnums, for func-arity’s benefit.
	(funcall_module): Avoid unnecessary conversion to EMACS_INT.
	(module_function_arity): Allow arities greater than SHRT_MAX.

2017-05-20  Philipp Stephani  <phst@google.com>

	Reimplement module functions

	Instead of a lambda, create a new type containing all data required to
	call the function, and support it in the evaluator.  Because this type
	now also needs to store the function documentation, it is too big for
	Lisp_Misc; use a pseudovector instead.  That also has the nice benefit
	that we don't have to add special support to the garbage collector.

	Since the new type is user-visible, give it a predicate.

	Now we can easily support 'help-function-args' and 'func-arity'; add
	unit tests for these.

	* src/lisp.h (allocate_module_function, MODULE_FUNCTIONP)
	(XMODULE_FUNCTION): New pseudovector type 'module function'.

	* src/eval.c (FUNCTIONP): Also treat module functions as functions.
	(funcall_lambda, Ffuncall, eval_sub): Add support for calling module
	functions.
	(Ffunc_arity): Add support for detecting the arity of module
	functions.

	* src/emacs-module.c (module_make_function): Adapt to new structure.
	Return module function object directly instead of wrapping it in a
	lambda; remove FIXME.
	(funcall_module): New function to call module functions.  Replaces
	`internal--module-call' and is called directly from eval.c.
	(syms_of_module): Remove internal helper function, which is no longer
	needed.
	(module_function_arity): New helper function.

	* src/data.c (Ftype_of): Adapt to new implementation.
	(Fmodule_function_p, syms_of_data): New user-visible function.  Now
	that module functions are first-class objects, they deserve a
	predicate.  Define it even if not compiled with --enable-modules so
	that Lisp code doesn't have to check for the function's existence.

	* src/doc.c (Fdocumentation): Support module functions.

	* src/print.c (print_object): Adapt to new implementation.

	* src/alloc.c (mark_object): Specialized garbage collector support is
	no longer needed.

	* lisp/help.el (help-function-arglist): Support module functions.
	While there, simplify the arity calculation by using `func-arity',
	which does the right thing for all kinds of functions.

	* test/data/emacs-module/mod-test.c: Amend docstring so we can test
	the argument list.

	* test/src/emacs-module-tests.el (mod-test-sum-docstring): Adapt to
	new docstring.
	(mod-test-non-local-exit-signal-test): Because `internal--module-call'
	is gone, the backtrace has changed and no longer leaks the
	implementation.
	(module--func-arity): New test for `func-arity'.
	(module--help-function-arglist): New test for `help-function-arglist'.

2017-05-20  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes in GC due to unescaped characters warning

	* src/lread.c (load_warn_unescaped_character_literals): Don't cons
	Lisp objects from stack-based variables.  (Bug#26961)

2017-05-20  Charles A. Roelli  <charles@aurox.ch>

	New commands: find-library-other-window, find-library-other-frame

	* lisp/emacs-lisp/find-func.el (find-library-other-window)
	(find-library-other-frame): New commands to complement the
	existing 'find-library' command.  (Bug#26712)
	(read-library-name): New function to read a library name.
	* etc/NEWS: Mention 'find-library-other-window' and
	'find-library-other-frame'.

2017-05-20  Eli Zaretskii  <eliz@gnu.org>

	Fix automatic hscrolling of only the current line

	* src/xdisp.c (display_line): When hscrolling only the current
	line, increment iterator's first_visible_x and last_visible_x
	values to account for the hscroll.  This propagates the hscroll
	effect on the iterator geometry all the way down to the
	subroutines called by display_line, and avoids scrolling bugs
	under large hscroll values.  (Bug#26994)

2017-05-20  Paul Eggert  <eggert@cs.ucla.edu>

	Add handlerlist assertion to module code

	* src/emacs-module.c (module_reset_handlerlist):
	Check handlerlist.  Suggested by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00521.html

2017-05-20  Paul Eggert  <eggert@cs.ucla.edu>

	Port --enable-gcc-warnings to clang 3.9.1

	* configure.ac (WERROR_CFLAGS): Omit -Wmissing-braces for Clang,
	to shut off a false alarm.  Problem reportd by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00521.html

2017-05-20  Noam Postavsky  <npostavs@gmail.com>

	Limit integers printed as characters (Bug#16828)

	* lisp/simple.el (eval-expression-print-maximum-character): New
	variable.
	(eval-expression-print-format): Only display value as character if
	it's less than or equal to `eval-expression-print-maximum-character'.
	(eval-expression-get-print-arguments): Check
	eval-expression-print-maximum-character, allow negative arg to
	override it.
	(eval-expression):
	* lisp/progmodes/elisp-mode.el (elisp--eval-last-sexp):
	(elisp--eval-last-sexp-print-value): Handle new variable.
	* doc/emacs/building.texi (Lisp Eval): Document new variable and
	behavior.
	* etc/NEWS: Announce it.
	* test/lisp/progmodes/elisp-mode-tests.el
	(eval-last-sexp-print-format-small-int)
	(eval-last-sexp-print-format-small-int-echo)
	(eval-last-sexp-print-format-large-int)
	(eval-last-sexp-print-format-large-int-echo):
	* test/lisp/simple-tests.el (eval-expression-print-format-small-int)
	(eval-expression-print-format-small-int-echo)
	(eval-expression-print-format-large-int)
	(eval-expression-print-format-large-int-echo): New tests.

2017-05-20  Noam Postavsky  <npostavs@gmail.com>

	Refactor lisp eval result printing

	* lisp/simple.el (eval-expression-print-format): Don't check
	`standard-output' or `current-prefix-arg'.
	(eval-expression-get-print-arguments): New function, centralizes
	decision about how to print results of `eval-expression' and
	`eval-last-sexp'.
	(eval-expression):
	* lisp/progmodes/elisp-mode.el (elisp--eval-last-sexp-print-value):
	Use it.

2017-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Check that signed right shift is arithmetic

	* src/data.c (ash_lsh_impl): Verify that signed right shift is
	arithmetic; if we run across a compiler that uses a logical shift
	we’ll need to complicate the code before removing this
	compile-time check.  Help the compiler do common subexpression
	elimination better.

2017-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Minor .gitignore fixes

	* .gitignore: modules/mod-test/Makefile was renamed to
	test/data/emacs-module/Makefile.
	Omit [0-9]*.core, subsumed by *.core.
	test/indent/*.new was renamed to test/manual/indent/*.new.
	Add *.swp, for Vim.

2017-05-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/package.el: Quote `package-desc' in docstrings

2017-05-19  Eli Zaretskii  <eliz@gnu.org>

	Describe problems with Microsoft Intellipoint

	* etc/PROBLEMS: Describe problems with Microsoft Intellipoint and
	mouse-2 events.  For the details, see
	https://lists.gnu.org/r/help-emacs-windows/2017-05/msg00009.html.

2017-05-19  Nick Helm  <nick@tenpoint.co.nz>  (tiny change)

	Fix turning off whitespace-mode

	* lisp/whitespace.el (whitespace-display-char-on): Correct the way
	the original buffer-display-table is saved and restored when
	global-whitespace-mode is active.  (Bug#26892)

	* test/lisp/whitespace-tests.el
	(whitespace-tests-whitespace-mode-on): New function.
	(whitespace-tests-display-tables): New test.

2017-05-19  Michael Albinus  <michael.albinus@gmx.de>

	Minor tweaks in tramp-tests.el

	* test/lisp/net/tramp-tests.el (tramp--test-afp-or-smb-p): New defun.
	(tramp-test05-expand-file-name-relative): Use it.
	(tramp-test38-unload): Run only in batch mode.

2017-05-19  Michael Albinus  <michael.albinus@gmx.de>

	Fix a problem with OpenSSH 7 in Tramp

	* lisp/net/tramp-sh.el (tramp-ssh-controlmaster-options): Set also
	"ConnectTimeout" during test.  Otherwise, OpenSSH 7 will hang.

2017-05-19  Jean-Christophe Helary  <jean.christophe.helary@gmail.com>

	Improve documentation of 'split-string'

	* doc/lispref/strings.texi (Creating Strings): Rearrange text to
	make it more readable.  (Bug#26925)

2017-05-19  Ruslan Bekenev  <furyinbox@gmail.com>

	Fix typos in doc strings

	* lisp/mail/rfc2231.el (rfc2231-encode-string):
	* lisp/mail/rfc2047.el (rfc2047-encode-parameter):
	* lisp/mail/rfc2045.el (rfc2045-encode-string): Fix typos in doc
	strings.  (Bug#26103)

2017-05-19  Philipp Stephani  <phst@google.com>

	Fix module tests on some systems

	If dladdr(3) isn't available or didn't work, the printed
	representation of a module function will not include the file name,
	but only the address.  Make the tests pass in that case.

	* test/src/emacs-module-tests.el (module-function-object): Fix match for
	module function printed representation

2017-05-19  Jean-Christophe Helary  <jean.christophe.helary@gmail.com>

	Add an optional arguments to string-trim

	* lisp/emacs-lisp/subr-x.el (string-trim-left, string-trim-right)
	(string-trim): Add optional args that serve as defaults per the
	original behavior.  (Bug#26908)

2017-05-19  Stephen Berman  <steve@rosalinde.fritz.box>

	Fix typo in last change to auto-hscroll-mode

	* lisp/cus-start.el (standard): Fix typo in value of auto-hscroll-mode.

2017-05-19  Eli Zaretskii  <eliz@gnu.org>

	Support remote editing in emacsclient via Tramp

	* lib-src/emacsclient.c (main, decode_options)
	(print_help_and_exit, longopts): New option '--tramp' / '-T' which
	specifies how emacs should use tramp to find remote files.

	* doc/emacs/misc.texi (TCP Emacs server): New subsection describing
	the various knobs to tune server.el for TCP opereation.
	(emacsclient Options): Reference "TCP Emacs server" from description of
	--server-file.  Document the new '--tramp' / '-T' options.
	* doc/emacs/emacs.texi (Top): Update the top-level menu.

	* etc/NEWS: Mention the new option.

2017-05-19  Eli Zaretskii  <eliz@gnu.org>

	* lisp/replace.el (query-replace-regexp-eval): Doc fix.

2017-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Attempt to work around macOS vfork bug

	Problem reported by YAMAMOTO Mitsuharu in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00342.html
	This is related to the fix for Bug#26397.
	* src/callproc.c (call_process_cleanup, call_process) [!MSDOS]:
	Report internal error if wait_for_termination fails.
	* src/sysdep.c (get_child_status): Return -1 if waitpid is
	buggy, instead of aborting.
	(wait_for_termination): Return bool success value.
	All callers changed.

2017-05-19  Eli Zaretskii  <eliz@gnu.org>

	Adjust defcustom form for 'auto-hscroll-mode'

	* lisp/cus-start.el (standard) <auto-hscroll-mode>: Adjust the
	defcustom form.  Suggested by Stephen Berman <stephen.berman@gmx.net>.

2017-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix DARWIN_OS_CASE_SENSITIVE_FIXME==2 false alarm

	* src/fileio.c (file_name_case_insensitive_p):
	Don’t compile the (DARWIN_OS_CASE_SENSITIVE_FIXME == 2)
	code unless DARWIN_OS_CASE_SENSITIVE_FIXME is 2.
	Problem reported by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00495.html

2017-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Port --enable-gcc-warnings to clang 3.9.1

	* configure.ac (WERROR_CFLAGS): Omit -Wdouble-promotion if clang.
	Problem reported by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00495.html

2017-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Clean up compiler warning in emacs-module.c

	* src/emacs-module.c (MODULE_SETJMP_1): Use the local var
	instead of leaving it unused, to pacify picky compilers.
	(module_reset_handlerlist): Now takes a dummy pointer to a struct
	handler *, instead of a dummy pointer to an int.  All uses changed.

2017-05-19  Philipp Stephani  <phst@google.com>

	Clean up some compiler warnings

	* src/sysdep.c (system_process_attributes) [DARWIN_OS]:
	Remove unused locals.

2017-05-18  Eli Zaretskii  <eliz@gnu.org>

	Support hscrolling only the current line

	* src/xdisp.c (hscrolling_current_line_p): New function.
	(init_iterator): If auto-hscrolling just the current line, don't
	increment the iterator's first_visible_x and last_visible_x
	variables.
	(hscroll_window_tree): Recompute window's hscroll when moving
	vertically to another screen line.
	(redisplay_window): If we are hscrolling only the current line,
	disable the optimizations that rely on the current matrix being
	up-to-date.
	(display_line): Accept an additional argument CURSOR_VPOS, the
	vertical position of the current screen line which might need
	hscrolling; all callers changed.  Compute first_visible_x and
	last_visible_x specially when auto-hscrolling current line, by
	repeating the calculation that is done in init_iterator in other
	modes.
	(syms_of_xdisp) <auto-hscroll-mode>: No longer boolean, it can now
	accept a 3rd value 'current-line, to turn on the mode where
	only the current line is hscrolled.

	* etc/NEWS: Mention the new auto-hscroll-mode value.

2017-05-18  Eli Zaretskii  <eliz@gnu.org>

	Fix last change in line-move-finish

	* lisp/simple.el (line-move-finish): Fix last change.  This corrects a
	regression in C-n and C-p when lines are truncated, introduced by the
	change in 2017-05-10.

2017-05-18  Simen Heggestøyl  <simenheg@gmail.com>

	Expand docstring for CSS mode

	* lisp/textmodes/css-mode.el (css-completion-at-point, css-mode):
	Expand docstrings.

2017-05-18  Tino Calancha  <tino.calancha@gmail.com>

	Use the expression angle units while simplifying it

	Don't use the angle mode, use the angle units included
	in the expression instead (Bug#23889).
	* lisp/calc/calc-alg.el (calc-input-angle-units): New defun.
	(math-simplify): Use it.
	* lisp/calc/calc-forms.el (math-to-hms, math-from-hms):
	Don't use calc-angle-mode if math-simplifying-units is non-nil.
	* lisp/calc/calc-math.el (calcFunc-nroot, math-from-radians)
	(math-to-radians-2, math-from-radians-2): Don't convert angle
	to radians if math-simplifying-units is non-nil.
	* test/lisp/calc/calc-tests.el (test-calc-23889): Add test.

2017-05-18  Tino Calancha  <tino.calancha@gmail.com>

	Revert "Ignore angle mode while simplifying units"

	This reverts commit 713e922243fb60d850f7b0ff83f3e2a3682f1832.
	This commit causes Bug#25652.

2017-05-17  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid undefined behavior in struct sockaddr

	Problem noted by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00391.html
	* src/conf_post.h (ATTRIBUTE_MAY_ALIAS, DECLARE_POINTER_ALIAS):
	New macros.
	* src/process.c (conv_sockaddr_to_lisp, conv_lisp_to_sockaddr)
	(connect_network_socket, network_interface_info)
	(server_accept_connection): Use it when aliasing non-char objects.

2017-05-17  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/vc/smerge-mode.el (smerge-refine-regions): Work in multi-bufs

	Rename from smerge-refine-subst.  Allow the `beg's to be markers.
	Add autoload cookie.
	(smerge--refine-forward): Rename from smerge-refine-forward.
	(smerge--refine-chopup-region): Rename from smerge-refine-chopup-region.
	Assume that its `beg` arg is a marker.
	(smerge--refine-highlight-change): Rename from
	smerge-refine-highlight-change.  Remove `buf` arg.
	(smerge-refine-subst): Redefine as an obsolete alias.

2017-05-17  Paul Eggert  <eggert@cs.ucla.edu>

	Work around AddressSanitizer bug with vfork

	Problem reported by Jim Meyering in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00246.html
	* src/conf_post.h (vfork) [ADDRESS_SANITIZER]: Define to fork.
	Unfortunately with the AddressSanitizer in Fedora 25 x86-64, the
	vforked child messes up the parent’s shadow memory.  This is too
	bad, as we’d rather have AddressSanitizer catch memory-access bugs
	related to vfork.

2017-05-17  Paul Eggert  <eggert@cs.ucla.edu>

	Catch IPv4/IPv6 issues at compile time

	* src/process.c (connect_network_socket): Use verify,
	not eassert, so that any problems are caught at compile-time.
	Avoid dodgy cast by using a local var of the correct type.

2017-05-17  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings --with-x-toolkit=no

	* src/composite.c (autocmp_chars) [!HAVE_WINDOW_SYSTEM]:
	Avoid unused local.

2017-05-17  Glenn Morris  <rgm@gnu.org>

	* admin/update_autogen (commit): Pull before push.

2017-05-17  Glenn Morris  <rgm@gnu.org>

	autoload-rubric no longer provides a feature by default

	* lisp/emacs-lisp/autoload.el (autoload-rubric):
	Stop providing a feature unless explicitly requested.
	(autoload-find-generated-file): Update autoload-rubric call.

2017-05-17  Eli Zaretskii  <eliz@gnu.org>

	Remove redundant code in connect_network_socket

	* src/process.c (connect_network_socket) [HAVE_GETSOCKNAME]:
	Remove redundant type-casting and variables.  Don't call
	'getsockname' to find the port for AF_LOCAL sockets.
	[AF_INET6]: Add an assertion to verify that the ports in the IPv4
	and IPv6 structures are at the same offset and have the same size.

2017-05-16  Paul Eggert  <eggert@cs.ucla.edu>

	Fix minor timezone memory leak

	* src/editfns.c (wall_clock_tz): Remove; unused.

2017-05-16  Paul Eggert  <eggert@cs.ucla.edu>

	Do not discard AddressSanitizer stderr

	* src/emacs.c (close_output_streams) [ADDRESS_SANITIZER]:
	Do not close stderr.

2017-05-16  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify procname code to avoid GCC bug

	* src/process.c (server_accept_connection): Simplify and avoid
	multiple calls and struct literals in the last case of a switch.
	The old code ran afoul of GCC bug 80659, which caused an internal
	compiler error.  Problem reported by Jim Meyering in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00182.html
	https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80659

2017-05-16  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify GCC 7 with --enable-gcc-warnings

	* src/regex.c (regex_compile): Swap labels, so that the
	FALLTHROUGH immediately precedes the case label.

2017-05-16  Paul Eggert  <eggert@cs.ucla.edu>

	Merge with gnulib, pacifying GCC 7

	This incorporates:
	2017-05-16 manywarnings: update for GCC 7
	2017-05-15 sys_select: Avoid "was expanded before it was required"
	* configure.ac (nw): Suppress GCC 7’s new -Wduplicated-branches and
	-Wformat-overflow=2 options, due to too many false alarms.
	* doc/misc/texinfo.tex, lib/strftime.c, m4/manywarnings.m4:
	Copy from gnulib.
	* m4/gnulib-comp.m4: Regenerate.
	* src/coding.c (decode_coding_iso_2022):
	Fix bug uncovered by -Wimplicit-fallthrough.
	* src/conf_post.h (FALLTHROUGH): New macro.
	Use it to mark all switch cases that fall through.
	* src/editfns.c (styled_format): Use !, not ~, on bool.
	* src/gtkutil.c (xg_check_special_colors):
	When using sprintf, don’t trust Gtk to output colors in [0, 1] range.
	(xg_update_scrollbar_pos): Avoid use of possibly-uninitialized bool;
	this bug was actually caught by Clang.
	* src/search.c (boyer_moore):
	Tell GCC that CHAR_BASE, if nonzero, must be a non-ASCII character.
	* src/xterm.c (x_draw_glyphless_glyph_string_foreground):
	Tell GCC that glyph->u.glyphless.ch must be a character.

2017-05-16  Michael Albinus  <michael.albinus@gmx.de>

	Make autoloading Tramp more robust

	* lisp/net/tramp.el (tramp-file-name-for-operation):
	Use `default-directory' where appropriate.
	(tramp-file-name-handler): Do not autoload.
	(tramp-autoload-file-name-handler): Reintroduce function.
	(tramp-register-autoload-file-name-handlers): Use it.

2017-05-16  Michael Albinus  <michael.albinus@gmx.de>

	Extend tramp-tests.el

	* test/lisp/net/tramp-tests.el (tramp-change-syntax):
	Remove declaration, not needed anymore.
	(tramp-test05-expand-file-name-relative): New test.
	(tramp-test10-write-region): Extend test.

2017-05-16  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp.el: Avoid recursive load of Tramp.  (Bug#26943)

2017-05-16  Noam Postavsky  <npostavs@gmail.com>

	Make `indent-line-to' respect field boundaries (Bug#26891)

	* lisp/indent.el (indent-line-to): Use `back-to-indentation' instead
	of `backward-to-indentation'.

2017-05-16  Noam Postavsky  <npostavs@gmail.com>

	Make sure indent-sexp stops at end of sexp (Bug#26878)

	* lisp/emacs-lisp/lisp-mode.el (indent-sexp): Check endpos before
	indenting.
	* test/lisp/emacs-lisp/lisp-mode-tests.el (indent-sexp-stop): New
	test.

2017-05-16  Glenn Morris  <rgm@gnu.org>

	Stop some epg tests failing on rhel7 with gpg 2.0.22 (bug#23619)

	* test/lisp/epg-tests.el (with-epg-tests):
	Also set GNUPGHOME in the environment of child processes.
	This avoids problems if gpg does not pass --homedir to spawned agent.

2017-05-16  Glenn Morris  <rgm@gnu.org>

	Add oldxmenu to system-configuration-features

	* configure.ac (HAVE_OLDXMENU): New.
	(emacs_config_features): Add oldxmenu.

2017-05-15  Ted Zlatanov  <tzz@lifelogs.com>

	* .gitlab-ci.yml: Adjust disclaimer as per RMS.

2017-05-15  Eli Zaretskii  <eliz@gnu.org>

	Remove unneeded stuff from nt/inc/sys/time.h

	* nt/inc/sys/time.h (_TIMEVAL_DEFINED, struct timevat, timerisset)
	(timercmp, timerclear): Don't define.  Instead, include the system
	header sys/time.h, and add only the interval timers stuff.  This
	avoids compiler warnings about 'gettimeofday's prototype, and also
	avoids redefinition of macros from system headers.

2017-05-15  Paul Eggert  <eggert@cs.ucla.edu>

	Fix address violation found by AddressSanitizer

	* src/process.c (connect_network_socket):
	Use struct sockaddr_storage, not struct sockaddr_in, to store info
	about a socket address.  Problem reported by Philipp Stephani in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00314.html
	This fix is based on a patch by Philipp in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00357.html

2017-05-14  Gemini Lasswell  <gazally@runbox.com>

	Make edebug-step-in work on generic methods (Bug#22294)

	* lisp/emacs-lisp/edebug.el (edebug-match-cl-generic-method-args):
	New function to implement the edebug-form-spec property of
	the symbol cl-generic-method-args.
	(edebug-instrument-function): If the function is a generic
	function, find and instrument all of its methods. Return a list
	instead of a single symbol.
	(edebug-instrument-callee): Now returns a list. Update docstring.
	(edebug-step-in): Handle the list returned by edebug-instrument-callee.
	* lisp/emacs-lisp/cl-generic.el (cl-defmethod): Use name and
	cl-generic-method-args in its Edebug spec.
	* lisp/emacs-lisp/eieio-compat.el (defmethod): Use name and
	cl-generic-method-args in its Edebug spec.
	* lisp/subr.el (method-files): New function.
	* test/lisp/subr-tests.el (subr-tests--method-files--finds-methods)
	(subr-tests--method-files--nonexistent-methods): New tests.

2017-05-14  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-05-14 same-inode: Adapt for windows-stat-inodes
	2017-05-14 windows-stat-inodes: New module
	2017-05-14 stat-time: Adapt for windows-stat-timespec
	* lib/gnulib.mk.in: Regenerate.
	* lib/stat-time.h, lib/sys_types.in.h, m4/sys_types_h.m4:
	Copy from gnulib.

2017-05-14  Eli Zaretskii  <eliz@gnu.org>

	Remove gettimeofday from w32 sources

	* lib-src/ntlib.c (gettimeofday):
	* nt/inc/sys/time.h (gettimeofday, struct timezone): Remove unused
	function 'gettimeofday' and all of its supporting code.

2017-05-14  Eli Zaretskii  <eliz@gnu.org>

	Fix the MS-Windows build

	* nt/inc/sys/time.h (gettimeofday):
	* src/w32.c (gettimeofday): Adjust signature to match Gnulib.

2017-05-14  Eli Zaretskii  <eliz@gnu.org>

	More accurate documentation of the ':box' face attribute

	* doc/lispref/display.texi (Face Attributes): Fix the description
	of negative width of the ':box' attribute.  (Bug#26920)

2017-05-14  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-05-13 largefile: Simplify
	2017-05-13 largefile: Improve and document
	2017-05-13 truncate: New module
	2017-05-13 windows-stat-timespec: New module
	2017-05-13 windows-stat-override: New module
	2017-05-11 getopt-posix: port to mingw
	2017-05-11 gettimeofday: Increase precision on mingw
	2017-05-10 time: Fix missing initialization of HAVE_TIMEZONE_T
	2017-05-10 Implement a way to opt out from MSVC support
	2017-05-09 tzset: Expand comment about TZ problem on native Windows
	* build-aux/config.guess, lib/dup2.c, lib/fcntl.c, lib/fsync.c:
	* lib/getdtablesize.c, lib/getopt.c, lib/gettimeofday.c:
	* lib/mktime.c, lib/stat-time.h, lib/sys_stat.in.h, lib/unistd.in.h:
	* lib/utimens.c, m4/gettimeofday.m4, m4/largefile.m4:
	* m4/sys_stat_h.m4, m4/sys_time_h.m4, m4/time_h.m4, m4/time_rz.m4:
	* m4/unistd_h.m4: Copy from gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.

2017-05-14  Marcin Borkowski  <mbork@mbork.pl>

	Merge branch 'fix/bug-21072'

2017-05-14  Ted Zlatanov  <tzz@lifelogs.com>

	* .gitlab-ci.yml: Add setup for GitLab CI builds.

2017-05-13  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	New minor mode 'pixel-scroll-mode'

	* lisp/pixel-scroll.el: New file.

	* etc/NEWS: Mention pixel-scroll-mode.

2017-05-13  Philipp  <phst@google.com>

	Make `old-style-backquotes' variable internal

	* src/lread.c (load_warn_old_style_backquotes, Fload, read1)
	(syms_of_lread): Rename `old-style-backquotes' to
	`lread--old-style-backquotes', and clarify that it's for internal
	use only.
	* lisp/emacs-lisp/bytecomp.el (byte-compile-from-buffer): Rename
	variable.
	* test/src/lread-tests.el (lread-tests--old-style-backquotes): Add
	unit test.
	* test/lisp/emacs-lisp/bytecomp-tests.el
	(bytecomp-tests--old-style-backquotes): Add unit test.

2017-05-13  Philipp Stephani  <phst@google.com>

	Improve unescaped character literal warnings

	* src/lread.c (load_warn_unescaped_character_literals)
	(syms_of_lread):
	lisp/emacs-lisp/bytecomp.el (byte-compile-from-buffer): Improve
	formatting of unescaped character literal warnings.

	* test/src/lread-tests.el (lread-tests--unescaped-char-literals):
	test/lisp/emacs-lisp/bytecomp-tests.el
	(bytecomp-tests--unescaped-char-literals): Adapt unit tests.

2017-05-12  Alan Mackenzie  <acm@muc.de>

	Fontify C++ for loop variable as variable, even when followed by parentheses

	In the following: "for (auto *Friend : Class->friends()) {", "Friend" was
	getting fontified as a function, due to insufficient checking of the tokens
	between it and "()".

	* lisp/progmodes/cc-langs.el (c-:-op-cont-tokens, c-:-op-cont-regexp): New
	lang-consts/vars.

	* lisp/progmodes/cc-engine.el (c-forward-declarator): After finding a putative
	declarator's identifier, check for a ":" token inside a for's parentheses, and
	abort the search for "(" if this is found.

2017-05-12  Michael Albinus  <michael.albinus@gmx.de>

	Make Tramp backward compatible

	* lisp/net/tramp-cmds.el (tramp-change-syntax):
	Set tramp-autoload cookie.

	* lisp/net/tramp-compat.el: Run `tramp-change-syntax' at
	startup, if necessary.

	* lisp/net/tramp.el (tramp-syntax): Use `tramp-compat-user-error'.
	(tramp-register-autoload-file-name-handlers): Do not mark
	`operations' for `tramp-file-name-handler'.
	(tramp-register-file-name-handlers): Remove also
	`tramp-autoload-file-name-handler' for backward compatibility.
	(tramp-register-foreign-file-name-handler): Use `delete-dups'.

	* test/lisp/net/tramp-tests.el (tramp-change-syntax): Declare.

2017-05-12  Noam Postavsky  <npostavs@gmail.com>

	Modify `beginning-of-defun-comments'

	* lisp/emacs-lisp/lisp.el (beginning-of-defun-comments): Try not to stop
	in the middle of a multiline comment.

2017-05-12  Noam Postavsky  <npostavs@gmail.com>

	Fix elisp-tests-with-temp-buffer compilation

	* test/lisp/emacs-lisp/lisp-tests.el (elisp-tests-with-temp-buffer):
	Don't refer to the =!NAME= as "markers" since they produce variables
	with just plain positions, not marker objects.  Explicitly specify
	that CONTENTS is evaluated at compile time.  Don't re-evaluate
	CONTENTS at runtime.  Fix debug specification.  Suppress warnings due
	to BODY not using =!NAME= variables.
	(elisp-test-point-position-regex): Rename from
	`elisp-test-point-marker-regex'.
	(mark-defun-test-buffer): Wrap in `eval-and-compile'.

2017-05-12  Noam Postavsky  <npostavs@gmail.com>

	* lisp/emacs-lisp/lisp.el (mark-defun): Simplify moving the point.

2017-05-12  Marcin Borkowski  <mbork@mbork.pl>

	Fix Bug#21072 and rework `mark-defun'

	* test/lisp/progmodes/elisp-mode-tests.el (mark-defun-test-buffer):
	  New variable
	(mark-defun-no-arg-region-inactive)
	(mark-defun-no-arg-region-active)
	(mark-defun-arg-region-active)
	(mark-defun-pos-arg-region-inactive)
	(mark-defun-neg-arg-region-inactive, mark-defun-bob): Add tests for
	the new `mark-defun'.

	* lisp/emacs-lisp/lisp.el (beginning-of-defun--in-emptyish-line-p):
	  New function.
	(beginning-of-defun-comments): New function.
	(mark-defun): Fix bug#21072, also rewrite large parts of `mark-defun'
	to accept a numerical prefix argument.

2017-05-12  Alfred M. Szmidt  <ams@gnu.org>

	* lisp/mail/rmail.el (rmail-ignored-headers): Add 3 headers to ignore.

2017-05-12  Eli Zaretskii  <eliz@gnu.org>

	Improve doc strings in net-utils.el

	* lisp/net/net-utils.el (ifconfig, iwconfig, netstat, arp)
	(route, traceroute, nslookup, ftp, smbclient)
	(smbclient-list-shares, finger, whois)
	(network-connection-to-service, network-service-connection)
	(network-connection-reconnect): Improve doc strings.

2017-05-12  Andrew Robbins  <contact@andrewrobbins.info>

	Extend DNS lookup commands to allow specifying the name server

	* lisp/net/net-utils.el (ffap-string-at-point): Removed due to
	'net-utils-machine-at-point' obviating this autoloaded
	function (Bug#25426).
	(dig-program-options): New customization variable.
	(nslookup-host, dns-lookup-host, run-dig): Can now specify
	optional name server argument interactively (by prefix arg) and
	non-interactively.

	* etc/NEWS: Mention the extension of DNS lookup commands.

2017-05-12  Glenn Morris  <rgm@gnu.org>

	Don't hard-code loaddefs files in lisp/Makefile

	* lisp/Makefile.in (loaddefs): New variable.
	(AUTOGENEL): Use $loaddefs, and include directory.
	(bootstrap-clean): Update for AUTOGENEL change.

2017-05-11  Katsumi Yamaoka  <yamaoka@jpl.org>

	Kill modified buffers silently when quitting (bug#26862)

	* lisp/gnus/gnus-start.el (gnus-clear-system): Run do-auto-save to make
	sure that latest drafts are saved, and kill modified buffers silently.

2017-05-10  Perry E. Metzger  <perry@piermont.com>

	Implement 1-based column numbering in mode line

	* src/xdisp.c (decode_mode_spec): Implement the %C construct.

	* lisp/bindings.el (column-number-indicator-zero-based): New
	defcustom.
	(mode-line-position): Use %C when
	column-number-indicator-zero-based is nil.

	* src/xdisp.c (syms_of_xdisp) <frame-title-format>:
	* src/buffer.c (syms_of_buffer) <mode-line-format>:
	* doc/lispref/modes.texi (%-Constructs):
	* doc/lispref/frames.texi (Frame Titles): Document the %C
	construct.

	* doc/emacs/display.texi (Optional Mode Line): Document
	'column-number-indicator-zero-based'.

	* etc/NEWS: Mention 'column-number-indicator-zero-based' and the
	%C construct.

2017-05-10  Eli Zaretskii  <eliz@gnu.org>

	Ensure cursor's foreground color is in sync with 'default' face

	* src/w32term.c (x_set_cursor_gc): Don't reuse cursor GC if its
	foreground color is different from the background of the glyph
	string's face.  (Bug#26851)

2017-05-10  Eli Zaretskii  <eliz@gnu.org>

	Fix vertical cursor motion when columns are of unequal size

	* lisp/simple.el (line-move-finish): In line-move-visual mode, use
	vertical-motion to move to the goal column, as the goal column
	should in that case be interpreted in units of frame's canonical
	character width.  (Bug#26852)

2017-05-10  Glenn Morris  <rgm@gnu.org>

	Fix finding test .el files

	* test/Makefile.in (ELFILES): Exclude the data/ directory.
	* test/src/lread-tests.el (lread-test-bug26837): Revert previous.

2017-05-10  Tino Calancha  <tino.calancha@gmail.com>

	Tweak a recent test

	This test fails in my local machine because the data files
	are compiled, and the test doesn't expect that.
	* test/src/lread-tests.el (lread-test-bug26837): Match a suffix
	ending with '.elc' when the data files are compiled.

2017-05-10  Glenn Morris  <rgm@gnu.org>

	Put license information in each generated uni-*.el

	* admin/unidata/unidata-gen.el (unidata-gen-file):
	Get Copyright line from copyright.html.
	Put information in file header, not separate README.
	(unidata-gen-charprop): Mention the source location.
	* lisp/international/README: Remove file.

2017-05-10  Noam Postavsky  <npostavs@gmail.com>

	Fix lisp-indent-region and indent-sexp (Bug#26619)

	The new lisp-indent-region introduced in 2017-04-22 "Add new
	`lisp-indent-region' that doesn't reparse the code." is broken because
	it doesn't save the calculated indent amounts for already seen sexp
	depths.  Fix this by unifying the indent-sexp and lisp-indent-region
	code.  Furthermore, only preserve position 2 of the running parse
	when the depth doesn't change.
	* lisp/emacs-lisp/lisp-mode.el (lisp-ppss): Use an OLDSTATE that
	corresponds with the start point when calling parse-partial-sexp.
	(lisp-indent-state): New struct.
	(lisp-indent-calc-next): New function, extracted from indent-sexp.
	(indent-sexp, lisp-indent-region): Use it.
	(lisp-indent-line): Take indentation, instead of parse state.
	* test/lisp/emacs-lisp/lisp-mode-tests.el
	(lisp-mode-tests--correctly-indented-sexp): New constant.
	(lisp-indent-region, lisp-indent-region-defun-with-docstring):
	(lisp-indent-region-open-paren, lisp-indent-region-in-sexp): New
	tests.

2017-05-10  Dmitry Gutov  <dgutov@yandex.ru>

	Simplify url-encode-url and add a test

	* lisp/url/url-util.el (url-encode-url): Simplify.
	url-generic-parse-url copes with multibyte strings just fine
	(https://debbugs.gnu.org/cgi/bugreport.cgi?bug=24117#185).

	* test/lisp/url/url-parse-tests.el
	(url-generic-parse-url/multibyte-host-and-path): New test.

2017-05-10  Glenn Morris  <rgm@gnu.org>

	More informative error when required feature missing

	* src/fns.c (Frequire): Include file name in missing feature error.
	* doc/lispref/loading.texi (Named Features): Don't quote actual error.

2017-05-10  Glenn Morris  <rgm@gnu.org>

	Put re-loaded file back at start of load-history (bug#26837)

	* src/lread.c (readevalloop): Fix the "whole buffer" check to
	operate in the correct buffer.
	(Feval_buffer): Move point back to the start after checking
	for lexical binding.
	* test/src/lread-tests.el (lread-test-bug26837): New test.
	* test/data/somelib.el, test/data/somelib2.el: New test data files.

2017-05-09  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'gnutls-verify-error'

	* lisp/net/gnutls.el (gnutls-verify-error): Improve and expand
	doc string.  (Bug#26845)

2017-05-09  Glenn Morris  <rgm@gnu.org>

	Don't duplicate autoload code in package.el

	* lisp/emacs-lisp/autoload.el (autoload-rubric): Add a package option.
	* lisp/emacs-lisp/package.el (autoload-rubric): Declare.
	(package-autoload-ensure-default-file): Use autoload-rubric.

2017-05-09  Michael Albinus  <michael.albinus@gmx.de>

	* test/lisp/net/tramp-tests.el: Keep additional test.

2017-05-09  Marcin Borkowski  <mbork@mbork.pl>

	Add elisp-tests-with-temp-buffer, a new testing macro

	* test/lisp/emacs-lisp/lisp-tests.el
	(elisp-test-point-marker-regex) New variable.
	(elisp-tests-with-temp-buffer): New macro to help test functions
	moving the point and/or mark.

2017-05-09  Noam Postavsky  <npostavs@gmail.com>

	Revert "Output number of characters added to file (Bug#354)"

	The extra message text turned out to be quite annoying in practice,
	and is generally more trouble than it's worth.  Also revert several
	related changes.

	Partially revert "Handle `write-region' messages in Tramp properly"
	Revert "New var write-region-verbose, default nil"
	Revert "* src/fileio.c (write_region): Don't say "1 characters".  (Bug#26796)"
	Revert "Minor tuneup of write-region change"
	Revert "Adjust write-region so file name is at the beginning again"
	Revert "Fix handling of non-integer START param to write-region"
	Revert "Output number of characters added to file (Bug#354)"

	* doc/emacs/files.texi (Misc File Ops):
	* etc/NEWS:
	* lisp/epa-file.el (epa-file-write-region):
	* lisp/gnus/mm-util.el (mm-append-to-file):
	* lisp/jka-compr.el (jka-compr-write-region):
	* lisp/net/ange-ftp.el (ange-ftp-write-region):
	* lisp/net/tramp-adb.el (tramp-adb-handle-write-region):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-write-region):
	* lisp/net/tramp-sh.el (tramp-sh-handle-write-region):
	* lisp/net/tramp-smb.el (tramp-smb-handle-write-region):
	* lisp/net/tramp.el (tramp-handle-write-region-message):
	* src/fileio.c (write_region, syms_of_fileio):
	* test/lisp/net/tramp-tests.el (tramp-test10-write-region): Remove
	extra characters from file writing messages.

2017-05-09  Noah Friedman  <friedman@splode.com>

	(ybuffer-list): $alist must be ptr-unmasked at the end of the loop,
	because $ptr is modified by ygetptr and we use $ptr immediately at the
	beginning.

2017-05-08  Ken Brown  <kbrown@cornell.edu>

	Skip a test from filenotify-tests.el on Cygwin

	* test/lisp/filenotify-tests.el (file-notify-test02-rm-watch):
	Skip the last part of the test on Cygwin; it fails due to timing
	issues.
	(file-notify--test-read-event):  Remove `sit-for' that was added
	for Cygwin.

2017-05-08  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-05-08 intprops: don’t depend on ‘verify’
	2017-05-07 utimens: on native Windows, improve resolution if fd < 0
	2017-05-07 utimens: Improve error code on native Windows
	* lib/intprops.h, lib/utimens.c: Copy from gnulib.

2017-05-08  Wilson Snyder  <wsnyder@wsnyder.org>

	Fix various verilog-mode.el issues.

	* lisp/progmodes/verilog-mode.el (verilog-read-decls): Fix SystemVerilog
	2012 import breaking AUTOINST.  Reported by Johannes Schaefer.
	(verilog-auto-wire-type, verilog-insert-definition): Fix AUTOWIRE using
	logic in top-level non-SystemVerilog module, bug1142.  Reported by Marcin K.
	(verilog-define-abbrev-table) (verilog-mode-abbrev-table): Don't expand
	abbrev inside comment/strings, bug1102. Reported by Slava Yuzhaninov.
	(verilog-auto): Fix AUTORESET widths pulling from AUTOREGINPUT,
	msg2143. Reported by Galen Seitz.
	(verilog-modify-compile-command): Fix expansion of __FLAGS__ when
	compile-command is globally set, bug1119.  Reported by Galen Seitz.

2017-05-08  Michael Albinus  <michael.albinus@gmx.de>

	Handle `write-region' messages in Tramp properly

	* lisp/net/tramp.el (tramp-handle-write-region-message): New defsubst.
	* lisp/net/tramp-adb.el (tramp-adb-handle-write-region):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-write-region):
	* lisp/net/tramp-sh.el (tramp-sh-handle-write-region):
	* lisp/net/tramp-smb.el (tramp-smb-handle-write-region): Use it.

	* lisp/net/tramp.el (tramp-password-prompt-regexp)
	(tramp-completion-mode-p):
	* lisp/net/tramp-cmds.el (tramp-reporter-dump-variable)
	(tramp-append-tramp-buffers):
	* lisp/net/tramp-smb.el (tramp-smb-maybe-open-connection):
	Use `bound-and-true-p'.

	* lisp/net/tramp-compat.el (tramp-compat-delete-file):
	Don't check for `boundp' anymore.

	* test/lisp/net/tramp-tests.el (ert-x): Require it.
	(tramp--test-messages): New defvar.
	(tramp-test10-write-region): Extend test.

2017-05-08  YAMAMOTO Mitsuharu  <mituharu@math.s.chiba-u.ac.jp>

	Fix glyph string generation for multi-font compositions (Bug#26742)

	* src/xdisp.c (glyph_string_containing_background_width): New function.
	(draw_glyphs): Use it to get correct background width.
	(compute_overhangs_and_x): Don't change x in the middle of composite
	characters.

2017-05-07  Philipp Stephani  <phst@google.com>

	Fix all unescaped character literals

2017-05-07  Alan Mackenzie  <acm@muc.de>

	CC Mode internal cache: Handle a cache pos being inside a two-char construct.

	Cache c-state-semi-nonlit-pos-cache was failing when a cache position was,
	e.g., between the two characters of an opening comment "/*", and additionally
	there were an odd number of quote marks (apostrophes) in the comment.  This
	happened in .../src/xdisp.c in the Emacs master branch around 2017-05-02 at
	buffer position 615001.

	* lisp/progmodes/cc-defs.el (c-emacs-features): Repurpose symbol
	pps-extended-state to mean that there are at least 11 elements in the parser
	state.

	* lisp/progmodes/cc-engine.el (c-cache-to-parse-ps-state)
	(c-parse-ps-state-to-cache): Rewrite these to use enhanced cache element list
	types which indicate potentially being inside two-char constructs.
	(c-parse-ps-state-below): Rewrite to use the new versions of the above two
	functions.

2017-05-07  Glenn Morris  <rgm@gnu.org>

	Silence an mh-compat compiler warning

	* lisp/mh-e/mh-compat.el (mh-url-unreserved-chars): Always define.

2017-05-07  Glenn Morris  <rgm@gnu.org>

	Evaluate mh-require when compiling

	* lisp/mh-e/mh-alias.el, lisp/mh-e/mh-folder.el:
	* lisp/mh-e/mh-gnus.el, lisp/mh-e/mh-search.el:
	Evaluate mh-require when compiling, as require is automatically.
	* lisp/mh-e/mh-gnus.el: No longer disable byte-compilation.

2017-05-07  Glenn Morris  <rgm@gnu.org>

	Remove obsolete method of changing byte-compile-dest-file

	* lisp/emacs-lisp/bytecomp.el (byte-compile-dest-file):
	Define unconditionally.

2017-05-07  Paul Eggert  <eggert@cs.ucla.edu>

	New var write-region-verbose, default nil

	By popular demand, write-region char counts are now off by default
	(Bug#26796).
	* src/fileio.c (write-region-verbose): New Lisp var.
	(write_region): Output char count only if the var is non-nil.
	* doc/emacs/files.texi (Misc File Ops), etc/NEWS: Document this.

2017-05-07  Glenn Morris  <rgm@gnu.org>

	Write autoloads file atomically

	* lisp/emacs-lisp/autoload.el (autoload--save-buffer):
	New function, to save buffer atomically.
	(autoload-save-buffers, update-directory-autoloads):
	Use autoload--save-buffer.
	* lisp/Makefile.in ($(lisp)/loaddefs.el):
	No longer write to a temp file by hand.

2017-05-07  Glenn Morris  <rgm@gnu.org>

	Write autoloads file once only

	* lisp/emacs-lisp/autoload.el (autoload-find-generated-file):
	Simplify.  Don't bother about ensuring the output file exists.
	(autoload-generated-file): Add doc.
	(autoload-ensure-writable): Update doc.
	(autoload-ensure-file-writeable): Handle non-existing file.
	(autoload-ensure-default-file): Remove function.

2017-05-07  Paul Eggert  <eggert@cs.ucla.edu>

	Port .gdbinit to GDB 7.11.1 + Python 2.7.12

	* src/.gdbinit (Lisp_Object_Printer.to_string):
	Explicitly convert integer val to 'int', so that
	older GDBs do not complain about the conversion.
	* src/lisp.h (Lisp_Object) [CHECK_LISP_OBJECT_TYPE]:
	Give the struct a tag, so that older GDB pretty-printers have a
	tag to hang their hat on.

2017-05-06  Paul Eggert  <eggert@cs.ucla.edu>

	Pretty-print const Lisp_Objects in .gdbinit

	* src/.gdbinit (Emacs_Pretty_Printers.__call__):
	Compare unqualified type to Lisp_Object, to do the right thing
	when the expression has type ‘Lisp_Object const’.
	Problem reported by Eli Zaretskii in:
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00138.html

2017-05-06  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify GCC setjmp/longjmp warning

	* src/eval.c (internal_lisp_condition_case): Do not modify local
	var VAR, to pacify GCC’s setjmp/longjmp warning which in some
	cases mistakenly diagnoses VAR possibly being modified between a
	setjmp and a longjmp.

2017-05-06  Philipp  <phst@google.com>

	Fix bootstrap build of files.el

	* lisp/files.el (file-name-non-special): Don't use cl-letf.

2017-05-06  Eli Zaretskii  <eliz@gnu.org>

	Fix last change for MS-Windows

	* test/src/emacs-module-tests.el (module-function-object): Port to
	MS-Windows.

2017-05-06  Philipp Stephani  <phst@google.com>

	Introduce new misc type for module function

	This resolves a couple of FIXMEs in emacs-module.c.

	* src/lisp.h (MODULE_FUNCTIONP, XMODULE_FUNCTION): New functions.

	* src/alloc.c (make_module_function): New function.
	(mark_object): GC support.

	* src/data.c (Ftype_of, syms_of_data): Handle module function type.

	* src/print.c (print_object): Print support for new type.

	* src/emacs-module.c (module_make_function, Finternal_module_call):
	Use new module function type, remove FIXMEs.
	(module_format_fun_env): Adapt and give it external linkage.

	* test/src/emacs-module-tests.el (module-function-object): Add unit
	test.

2017-05-06  Philipp Stephani  <phst@google.com>

	Fix quoted files for 'verify-visited-file-modtime'

	Fixes Bug#25951.

	* lisp/files.el (file-name-non-special): Set the file name for the
	correct buffer.

	* test/lisp/files-tests.el (files-tests--file-name-non-special--buffers):
	Add unit test.
	(files-tests--with-advice, files-tests--with-temp-file): New helper
	macros.

2017-05-06  Eli Zaretskii  <eliz@gnu.org>

	* src/fileio.c (write_region): Don't say "1 characters".  (Bug#26796)

2017-05-06  Eli Zaretskii  <eliz@gnu.org>

	Turn on GC_CHECK_MARKED_OBJECTS by default under ENABLE_CHECKING

	* src/alloc.c (GC_CHECK_MARKED_OBJECTS): Define to 1 by default of
	ENABLE_CHECKING is defined.
	(mark_object): Test for GC_CHECK_MARKED_OBJECTS being non-zero,
	instead of being defined.

2017-05-06  Tom Tromey  <tom@tromey.com>

	Fix erc-join with channel password

	Bug#25349
	* lisp/erc/erc-join.el (erc-autojoin-after-ident): Switch order of
	server names.
	(erc-autojoin-channels, erc-autojoin-add, erc-autojoin-remove):
	Likewise.
	(erc-server-join-channel): Move to erc.el.
	* lisp/erc/erc.el (erc-server-join-channel): Move from erc-join.el.
	(erc-cmd-JOIN): Use erc-server-join-channel.

2017-05-06  Tino Calancha  <tino.calancha@gmail.com>

	Ensure the created temp file in a test is new

	* test/lisp/buff-menu-tests.el (buff-menu-24962): Use `make-temp-file'
	to create the temp file.

2017-05-06  Glenn Morris  <rgm@gnu.org>

	Decruftify dns-mode.el a little bit

	* lisp/textmodes/dns-mode.el (dns-mode-control-entities):
	New constant.
	(dns-mode-control-entity, dns-mode-bad-control-entity)
	(dns-mode-type, dns-mode-class): New faces.
	(dns-mode-control-entity-face, dns-mode-bad-control-entity-face)
	(dns-mode-type-face, dns-mode-class): Make these variables use the
	new faces, and mark as obsolete.
	(dns-mode-font-lock-keywords): Use dns-mode-control-entities.

2017-05-06  Paul Eggert  <eggert@cs.ucla.edu>

	Pretty-print Lisp_Object values in GDB

	* src/.gdbinit: Add a pretty-printer for Lisp_Object values.  Now,
	GDB displays them as "XIL(0xXXX)" rather than displaying them
	as "..." when CHECK_LISP_OBJECT_TYPE is in effect and as "DDDDD"
	otherwise.

2017-05-05  Peder O. Klingenberg  <peder@klingenberg.no>

	Tweak dns-mode font-lock

	* lisp/textmodes/dns-mode.el (dns-mode-font-lock-keywords):
	Highlight $TTL as a control entity.  (Bug#26780)

2017-05-05  Glenn Morris  <rgm@gnu.org>

	Fontify the doc-string in some CL forms as such

	* lisp/emacs-lisp/lisp-mode.el (defconstant, defparameter):
	Add the doc-string-elt property.  (Bug#26778)

2017-05-05  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/cl-lib.el (cl-mapcar): Remove recent autoload cookie.

2017-05-05  Dmitry Gutov  <dgutov@yandex.ru>

	cl-defmethod: Make the edebug spec more technically correct

	* lisp/emacs-lisp/cl-generic.el (cl-defmethod): Denote the
	edebug spec part for qualifiers as [&rest atom], per
	https://lists.gnu.org/r/emacs-devel/2017-05/msg00053.html.

2017-05-05  Mike Kupfer  <mkupfer@alum.berkeley.edu>

	Fix MH-E not to load cl at runtime (Bug#25552)

	* lisp/mh-e/mh-acros.el (defun-mh): Check at runtime, not
	compile time, whether the target is bound.
	* lisp/mh-e/mh-compat.el: Enable compilation.  Pull in
	mh-acros at compile time.
	Authored-by: Glenn Morris <rgm@gnu.org>, Noam Postavsky
	<npostavs@users.sourceforge.net>

2017-05-04  Jean-Christophe Helary  <jean.christophe.helary@gmail.com>

	Multiline support in NS "Open Selected File" service.

	* lisp/term/ns-win.el (ns-open-file-service): new function. Wraps the
	original call in a (split-string) to create as many calls as there
	are lines.
	(ns-spi-service-call): Call `ns-open-file-service' instead of
	`dnd-open-file'.

2017-05-04  Göktuğ Kayaalp  <self@gkayaalp.com>

	Require cl-lib at runtime in vc-hg

	* lisp/vc/vc-hg.el: Require cl-lib at runtime as well (bug#26609).

2017-05-04  Tino Calancha  <tino.calancha@gmail.com>

	Inherit incompatible/obsolete package faces from error

	Don't use the same face for installed packages as for incompatible
	or obsolete ones.
	* lisp/emacs-lisp/package.el (package-status-incompat): Inherit from error.

2017-05-04  Michael Albinus  <michael.albinus@gmx.de>

	Set process property `adjust-window-size-function' to `ignore' in Tramp

	* lisp/net/tramp-adb.el (tramp-adb-parse-device-names)
	(tramp-adb-maybe-open-connection):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-notify-add-watch):
	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file-out-of-band)
	(tramp-maybe-open-connection):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-file-acl, tramp-smb-handle-set-file-acl)
	(tramp-smb-maybe-open-connection): Set process property
	`adjust-window-size-function' to `ignore'.

2017-05-04  Nicolas Petton  <nicolas@petton.fr>

	* lisp/emacs-lisp/seq.el: Bump seq version.

2017-05-04  Damien Cassou  <damien@cassou.me>

	Add seq-set-equal-p to test for set equality

	* lisp/emacs-lisp/seq.el (seq-set-equal-p): Add function to compare
	  two lists as if they were sets.

	* test/lisp/emacs-lisp/seq-tests.el (test-seq-set-equal-p): Add test
	  for seq-set-equal-p.

2017-05-04  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

	* lisp/gnus/nndiary.el (nndiary-last-occurrence):
	Rename from nndiary-last-occurence.
	(nndiary-next-occurrence):
	Rename from nndiary-next-occurence.  All uses changed.

2017-05-04  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from pkg-config

	* m4/pkg.m4: Copy from pkg-config 0.29.1.

2017-05-04  Tom Tromey  <tom@tromey.com>

	Add color highlighting to css-mode

	Bug#25525
	* lisp/textmodes/css-mode.el (css--color-map): New constant.
	(css-value-class-alist): Use css--color-map.
	(css--number-regexp, css--percent-regexp)
	(css--number-or-percent-regexp, css--angle-regexp): New constants.
	(css--color-skip-blanks, css--rgb-color, css--hsl-color): New
	functions.
	(css--colors-regexp): New constant.
	(css--hex-color, css--named-color, css--compute-color)
	(css--contrasty-color, css--fontify-colors)
	(css--fontify-region): New functions.
	(css-mode): Set font-lock-fontify-region-function.
	(css-mode-syntax-table): Set syntax on more characters.
	(css-fontify-colors): New defcustom.
	(scss-mode-syntax-table): Define syntax for ?$ and ?%.
	* test/lisp/textmodes/css-mode-tests.el (css-test-property-values):
	Update.
	(css-test-rgb-parser, css-test-hsl-parser)
	(css-test-named-color): New tests.
	* etc/NEWS: Add entry.

2017-05-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#26763

	* lisp/files.el (delete-directory): Call file name handler
	with `trash' argument.

	* lisp/net/ange-ftp.el (ange-ftp-delete-directory):
	* lisp/net/tramp-sh.el (tramp-sh-handle-delete-directory):
	Add TRASH arg.  Implement it.  (Bug#26763)
	(tramp-get-remote-trash): Check for `delete-by-moving-to-trash'.

	* lisp/net/tramp-adb.el (tramp-adb-handle-delete-directory):
	* lisp/net/tramp-smb.el (tramp-smb-handle-delete-directory):
	Add _TRASH arg.

2017-05-03  Paul Eggert  <eggert@cs.ucla.edu>

	Use ptrdiff_t, not int, for stack sizes

	* src/thread.c (invoke_thread_function):
	* src/xterm.c (x_cr_export_frames):
	Don’t assume SPECPDL_INDEX fits in ‘int’.

2017-05-03  Paul Eggert  <eggert@cs.ucla.edu>

	Check list object type if --enable-gcc-warnings

	* configure.ac (--enable-check-lisp-object-type):
	Default to "yes" if --enable-gcc-warnings is not "no".
	* etc/NEWS: Mention this.
	* src/eval.c (internal_lisp_condition_case): Fix some glitches
	with 'volatile' uncovered by the above: in particular, 'clauses'
	should be a pointer to volatile storage on the stack, and need not
	be volatile itself.  Use an int, not ptrdiff_t, to count clauses.
	Don’t bother gathering binding count if VAR is nil.  Use
	more-specific local names to try to clarify what’s going on.

2017-05-02  Glenn Morris  <rgm@gnu.org>

	Tweak auth-source-pass.el to avoid run-time subr-x

	* lisp/auth-source-pass.el (auth-source-pass--parse-data):
	Avoid needing subr-x at run-time.

2017-05-02  Charles A. Roelli  <charles@aurox.ch>

	Constrain non-child frames to screen area in OS X

	* src/nsterm.m (constrainFrameRect:toScreen:): Constrain non-child
	frames in OS X, if they would otherwise go offscreen.

	(Bug#25818)

2017-05-02  Michael Albinus  <michael.albinus@gmx.de>

	Fix error in completion for separate Tramp syntax

	* lisp/net/tramp.el (tramp-completion-file-name-regexp-separate):
	Tweak regexp.

	* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
	Run method and host name completion for all syntaxes.

2017-05-02  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warnings

	* src/w32fns.c (Fx_file_dialog, w32_parse_and_hook_hot_key):
	* src/w32term.c (x_draw_glyph_string):
	* src/w32fns.c (compute_tip_xy):
	* src/w32font.c (w32font_text_extents):
	* src/w32menu.c (set_frame_menubar):
	* src/search.c (Freplace_match): Avoid compiler warnings in
	optimized builds.

2017-05-02  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-05-02 utimens: port to Emacs + MS-Windows
	* lib/utimens.c: Copy from gnulib.

2017-05-02  Gemini Lasswell  <gazally@runbox.com>

	Fix Edebug specs for 'cl-defmethod' and 'defmethod'

	* lisp/emacs-lisp/cl-generic.el (cl-defmethod): Change Edebug spec
	to make Edebug generate a new symbol for each method (Bug#24753) and
	to support a string following :extra (Bug#23995).
	* lisp/emacs-lisp/eieio-compat.el (defmethod): Change Edebug spec to
	make Edebug generate a new symbol for each method (Bug#24753).

2017-05-02  Eli Zaretskii  <eliz@gnu.org>

	Temporary fix for the MS_Windows build

	* nt/inc/ms-w32.h (WIN32_LEAN_AND_MEAN): Define to an empty value,
	to be consistent with Gnulib's utimens.c.  This is because utimens.c
	unconditionally defines WIN32_LEAN_AND_MEAN to an empty value, so the
	previous definition here conflicted with that.

2017-05-02  Paul Eggert  <eggert@cs.ucla.edu>

	Port format-time-string to MS-Windows better

	* test/src/editfns-tests.el (format-time-string-with-zone):
	Port test cases to MS-Windows.

2017-05-02  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-05-01 New module 'localtime-buffer'
	2017-04-30 utimens: Add support for native Windows
	* admin/merge-gnulib (AVOIDED_MODULES): Add tzset.
	* configure.ac (tzset): No need for Emacs itself to check now.
	* lib/gettimeofday.c, lib/time.in.h, lib/time_rz.c, lib/utimens.c:
	* m4/gettimeofday.m4, m4/time_h.m4, m4/time_rz.m4: Copy from gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib/localtime-buffer.c, lib/localtime-buffer.h:
	* m4/localtime-buffer.m4: New files, copied from gnulib.
	* src/editfns.c (init_editfns): Assume tzset is callable.

2017-05-01  Dmitry Gutov  <dgutov@yandex.ru>

	Speed up project-find-regexp for simple regexps

	* lisp/progmodes/xref.el (xref--regexp-syntax-dependent-p):
	New function.
	(xref--collect-matches): Use it.  Don't try to enable the
	appropriate major mode and file-local variables if the regexp
	does not depend on the buffer's syntax (bug#26710).
	(xref--collect-matches-1): Don't syntax-propertize in that
	case either.

2017-05-01  Philipp Stephani  <phst@google.com>

	Warn about missing backslashes during load

	* src/lread.c (load_warn_unescaped_character_literals, Fload, read1)
	(syms_of_lread): Warn if unescaped character literals are
	found (Bug#20152).
	* lisp/emacs-lisp/bytecomp.el (byte-compile-from-buffer): Check for
	unescaped character literals during byte compilation.
	* test/src/lread-tests.el (lread-tests--unescaped-char-literals): New
	unit test.
	(lread-tests--with-temp-file, lread-tests--last-message): Helper
	functions for unit test.
	* test/lisp/emacs-lisp/bytecomp-tests.el
	(bytecomp-tests--unescaped-char-literals): New unit test.
	* test/lisp/emacs-lisp/bytecomp-tests.el (bytecomp-tests--with-temp-file):
	Helper macro for unit test.

2017-05-01  Ken Brown  <kbrown@cornell.edu>

	* configure.ac: Suggest Mailutils on Cygwin.

2017-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t stress-test time zones near the Epoch

	* test/src/editfns-tests.el (format-time-string-with-zone)
	(format-time-string-with-outlandish-zone): Don’t format
	timestamps near the Epoch, as this runs into bugs on MS-Windows,
	and we don’t want to worry about those bugs.

2017-05-01  Glenn Morris  <rgm@gnu.org>

	Tweak vc-tests.el for bzr

	* test/lisp/vc/vc-tests.el (vc-test--working-revision):
	Handle test environments where HOME does not exist.

2017-05-01  Dmitry Gutov  <dgutov@yandex.ru>

	vc-git-state: Return `ignored' as appropriate with newer Git

	* lisp/vc/vc-git.el
	(vc-git--program-version): New variable.
	(vc-git--program-version): New function.
	(vc-git-state): Use it to choose whether to add '--ignored' (bug#19343).

2017-05-01  Dmitry Gutov  <dgutov@yandex.ru>

	vc-git-state: Bring back CentOS 6 compatibility

	* lisp/vc/vc-git.el (vc-git-state):
	Bring back CentOS 6 compatibility (bug#19343).

2017-05-01  Martin Rudalics  <rudalics@gmx.at>

	Rewrite w32fns.c's `x_set_menu_bar_lines'

	* src/w32fns.c (x_set_menu_bar_lines): Redraw frame immediately
	regardless of whether menu bar is added or removed.  Clear
	under internal border iff a W32 window exists.  Store either 0
	or 1 as new parameter value.
	(x_change_tool_bar_height): Use FRAME_W32_WINDOW instead of
	FRAME_X_WINDOW.

2017-05-01  Michael Albinus  <michael.albinus@gmx.de>

	Fix filenotify-tests.el for cygwin

	* test/lisp/filenotify-tests.el (file-notify--test-read-event):
	Add an additional `sit-for'.
	(file-notify-test02-rm-watch): Add an additional
	`file-notify--test-read-event' call.

2017-05-01  Jonathan Ganc  <jonganc@gmail.com>

	Speed up vc-git-status and make it more precise

	* lisp/vc/vc-git.el (vc-git-state)
	(vc-git--git-status-to-vc-state): Update 'vc-git-state' to use
	'git status', so that 'vc-git-state' can now return 'ignored',
	'conflict', or 'unregistered' when appropriate.  Discussed in
	bug#26066.  Fixes bug#19343.

2017-05-01  Dmitry Gutov  <dgutov@yandex.ru>

	Fix Git revision navigation in currently removed directories

	* lisp/vc/vc-git.el (vc-git-next-revision): Use the repo root as
	default-directory because FILE's parent directory might not exist
	anymore (bug#26345).

2017-04-30  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-04-30 strftime-fixes: New module
	2017-04-30 mktime: Work around TZ problem on native Windows
	2017-04-30 ctime, localtime: New modules
	2017-04-30 gettimeofday: Provide higher resolution on native Windows
	2017-04-29 utime-h: Modernize handling of 'struct utimbuf'
	2017-04-29 Make use of module 'utime-h'
	2017-04-30 Fix a few typos
	* admin/merge-gnulib (AVOIDED_MODULES): Avoid utime-h, too.
	* lib/gettimeofday.c, lib/mktime.c, lib/time.in.h, lib/utimens.c:
	* m4/gettimeofday.m4, m4/include_next.m4, m4/mktime.m4:
	* m4/strftime.m4, m4/time_h.m4, m4/timegm.m4, m4/utimens.m4:
	Copy from gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.

2017-04-30  Eli Zaretskii  <eliz@gnu.org>

	Don't lose key bindings on mis-spelled text in flyspell-mode

	* lisp/textmodes/flyspell.el (flyspell-mouse-map): Bind mouse-2
	explicitly.
	(make-flyspell-overlay): If the mis-spelled text already has a
	'keymap' property, make that keymap the parent of
	flyspell-mouse-map, so as not to lose the parent's bindings.
	(Bug#26672)

2017-04-30  Martin Rudalics  <rudalics@gmx.at>

	Fix `delete-frame' behavior including Bug#26682

	* src/frame.c (other_frames): Accept two arguments now.  Don't
	care about minibuffer window.  Don't care about visibility when
	called from delete_frame with FORCE true (Bug#26682).
	(delete_frame, Fmake_frame_invisible): Adjust other_frames
	calls.
	* src/w32term.c (w32_read_socket): Don't add a move frame event
	for an invisible frame.
	* lisp/frame.el (handle-delete-frame): Don't kill Emacs when
	attempting to delete a surrogate minibuffer frame.

2017-04-30  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This avoids incorporating the following, which I suspect are
	more trouble for Emacs than they’re worth:
	2017-04-29 stat, fstat: fix time_t etc. on native Windows platforms
	* admin/merge-gnulib (AVOIDED_MODULES): Avoid stat, too.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib/pathmax.h, lib/stat.c, m4/pathmax.m4, m4/stat.m4: Remove.

2017-04-30  Paul Eggert  <eggert@cs.ucla.edu>

	Fix buffer overflow in make-docfile

	* lib-src/make-docfile.c (scan_c_stream): Check for buffer
	overflow when reading an identifier.  Use a static buffer for NAME
	rather than a small dynamically-allocated buffer.

2017-04-30  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-04-29 getopt: port to Solaris 10 with circa-1997 glibc getopt.h
	* lib/getopt-pfx-ext.h: Copy from gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-04-30  Tino Calancha  <tino.calancha@gmail.com>

	Fix dependency error during bootstrap

	* lisp/files.el: Require pcase and easy-mmode at compile time.

2017-04-30  Mats Lidell  <mats.lidell@cag.se>

	* etc/tutorials/TUTORIAL.sv: synced with TUTORIAL

2017-04-29  Philipp Stephani  <phst@google.com>

	Reimplement auto-saving to visited files

	This reacts to confusing behavior of 'auto-save-visited-file-name',
	cf. Bug#25478.

	* lisp/files.el (auto-save-visited-interval): New customization option.
	(auto-save-visited-mode): New global minor mode.
	(auto-save-visited-file-name): Make obsolete.
	(auto-save--timer): New internal helper variable.

	* doc/emacs/files.texi (Auto Save Files): Document
	'auto-save-visited-mode' instead of obsolete
	'auto-save-visited-file-name'.
	(Auto Save Control): Document customization option
	'auto-save-visited-interval'.

2017-04-29  Paul Eggert  <eggert@cs.ucla.edu>

	Allow bypassing of some checks when merging

	* build-aux/git-hooks/pre-commit: Don't check merged-in changes.

2017-04-29  Philipp Stephani  <phst@google.com>

	Integrate module test with normal test suite

	* test/Makefile.in (ELFILES): Exclude module test if modules aren't
	configured.
	(EMACS_TEST_DIRECTORY): Expand test directory so that it's set
	correctly even if Emacs changes the current directory.
	($(srcdir)/src/emacs-module-tests.log)
	($(test_module)): Proper dependency tracking for test module.

	* test/data/emacs-module/Makefile (ROOT): Adapt to new location.
	Remove 'check' target and EMACS variable, which are no longer
	necessary.
	(SO): Change to include period.

	* test/src/emacs-module-tests.el (mod-test): Use EMACS_TEST_DIRECTORY
	environment variable to reliably find test data.

	* configure.ac (HAVE_MODULES, MODULES_SUFFIX): Add necessary
	substitutions.

2017-04-28  Glenn Morris  <rgm@gnu.org>

	Broaden comint-password-prompt-regexp

	* lisp/comint.el (comint-password-prompt-regexp):
	Broaden the regexp, for non-English locales.  (Bug#26698)

2017-04-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/auth-source.el (auth-source-backend-parse): `return' -> cl-return.

2017-04-28  Bartosz Duszel  <bartosz.duszel@gmail.com>

	Don't pass the value of point to 'push-mark', as that's the default.

	* lisp/textmodes/bib-mode.el (mark-bib):
	* lisp/simple.el (mark-whole-buffer, yank):
	* lisp/ses.el (ses--advice-yank, ses-mark-row, ses-mark-column):
	* lisp/progmodes/xscheme.el (xscheme-yank):
	* lisp/progmodes/verilog-mode.el (verilog-mark-defun):
	* lisp/progmodes/perl-mode.el (perl-mark-function):
	* lisp/progmodes/pascal.el (pascal-mark-defun):
	* lisp/progmodes/meta-mode.el (meta-mark-defun):
	* lisp/progmodes/icon.el (mark-icon-function):
	* lisp/progmodes/cc-cmds.el (c-mark-function):
	* lisp/obsolete/vip.el (ex-goto):
	* lisp/obsolete/vi.el (vi-put-before):
	* lisp/mouse.el (mouse-yank-primary):
	* lisp/menu-bar.el (menu-bar-select-yank):
	* lisp/mail/sendmail.el (mail-yank-original):
	* lisp/hexl.el (hexl-beginning-of-buffer, hexl-end-of-buffer):
	* lisp/emulation/viper-cmd.el (viper-mark-beginning-of-buffer)
	(viper-mark-end-of-buffer):
	* lisp/cedet/semantic/senator.el (senator-mark-defun):
	* lisp/allout.el (allout-mark-topic): Remove unnecessary argument
	`(point)' from calls to `push-mark'.  (Bug#25565)

2017-04-28  Glenn Morris  <rgm@gnu.org>

	Merge from origin/emacs-25

	784602b1050 (origin/emacs-25) ; Add release notice
	3a34412caae (tag: emacs-25.2) Set Emacs version to 25.2 and update AU...
	56a4461a48d ; Move stray item from admin/notes/repo to CONTRIBUTE
	2b0d1118199 ; CONTRIBUTE: Remove stray header.
	f2ab09ec60d Fix a typo in indexing the user manual
	bc55a574235 * lisp/menu-bar.el (kill-this-buffer): Doc fix.  (Bug#26466)
	a6d50401b4b Document 'line-pixel-height'
	0c55cf43e61 * search.c (Fre_search_forward, Fre_search_backward): Imp...
	c7ed57eaef4 Mention that processes start in default-directory (Bug#18...
	856ec9ffa1f * src/xdisp.c (vmessage, message): Clarify commentary.
	849a0aaa1c9 Belated fixes for admin.el's M-x make-manuals-dist
	84938d79698 default-directory: Remark that it must be a directory name
	3f0d047d2eb Delete confuse statement in manual
	ee1bd94dd0c Improve packaging documentation
	fb18bff91f0 Expand manual section on quitting windows
	9a737079645 Fix docstring of dabbrev-abbrev-char-regexp
	afe8849bac1 * doc/misc/cl.texi (Iteration Clauses): Clarify example (...
	ada79442c07 ;* doc/misc/info.texi (Choose menu subtopic): Improve ind...
	d38fd9229c0 Narrow scope of modification hook renabling in org-src fo...
	e0e9db4c84a ; Spelling fix

	# Conflicts:
	#	README
	#	etc/AUTHORS
	#	etc/HISTORY
	#	lisp/ldefs-boot.el

2017-04-28  Glenn Morris  <rgm@gnu.org>

	* doc/misc/auth.texi: Commas don't work in node names.

	* test/lisp/auth-source-pass-tests.el: Fix loading of cl-lib.

2017-04-28  Paul Eggert  <eggert@cs.ucla.edu>

	Test format-time-string with zone arg

	* test/src/editfns-tests.el (format-time-string-with-zone)
	(format-time-string-with-outlandish-zone): New tests.

2017-04-28  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-04-24 time_rz: fix heap buffer overflow vulnerability
	2017-04-23 stat-time: Update comments.
	2017-04-22 ftoastr: cite a newer paper
	2017-04-21 gettext-h: Avoid -Wundef warning.
	* lib/ftoastr.c, lib/gettext.h, lib/stat-time.h, lib/time_rz.c:
	* m4/getopt.m4: Copy from gnulib.
	* m4/gnulib-comp.m4: Regenerate.

2017-04-27  Damien Cassou  <damien@cassou.me>

	auth-source-pass: Add documentation; fix tests and indentation.

	* doc/misc/auth.texi: Document new integration with Pass. Use @itemize
	  instead of @enumerate.
	* lisp/auth-source-pass.el: Fix indentation.
	  (auth-source-pass--remove-directory-name): Remove.
	* test/lisp/auth-source-pass-tests.el: Adjust test macros.

2017-04-27  foudfou  <foudil.newbie+git@gmail.com>

	auth-source-pass: Enable finding entries by "host/username"

	* lisp/auth-source-pass.el: Enable finding entries by "host/username".
	* test/lisp/auth-source-pass-tests.el: Adjust tests to check it.

2017-04-27  Damien Cassou  <damien@cassou.me>

	Integrate auth-source with password-store

	* lisp/auth-source-pass.el: auth-source backend for password-store.
	* test/lisp/auth-source-pass-tests.el: Tests for auth-source-pass
	  behavior.

2017-04-27  Damien Cassou  <damien@cassou.me>

	* lisp/auth-source.el: Document parser functions.

2017-04-27  Ted Zlatanov  <tzz@lifelogs.com>

	auth-source: factor out parsers and add tests

	* lisp/auth-source.el: Factor out the source parsers. Clean up comments.
	* test/lisp/auth-source-tests.el: Add tests.

2017-04-27  Martin Rudalics  <rudalics@gmx.at>

	Fix doc and customization type of `window-combination-limit' (Bug#26673)

	* src/window.c (Vwindow_combination_limit): Fix doc-string.
	* lisp/cus-start.el (window-combination-limit): Fix
	customization type.
	* doc/lispref/windows.texi (Recombining Windows): Fix
	documentation of `window-combination-limit'.

2017-04-27  Tino Calancha  <tino.calancha@gmail.com>

	Drop face from hi-lock--unused-faces only when used

	* lisp/hi-lock.el (hi-lock-set-pattern): If REGEXP is already
	highlighted, then push FACE into hi-lock--unused-faces (Bug#26666).
	* test/lisp/hi-lock-tests.el (hi-lock-bug26666): Add test.

2017-04-26  Alan Third  <alan@idiocy.org>

	Fix macOS version check (bug#26664)

	* src/nsterm.m (initFrameFromEmacs): Prevent window tabbing mode on
	macOS versions 10.12+.

2017-04-26  Glenn Morris  <rgm@gnu.org>

	Make charprop.el provide a feature

	* admin/unidata/unidata-gen.el (unidata-gen-charprop):
	Provide a feature.
	* lisp/loadup.el: Use the charprop feature.

2017-04-26  Glenn Morris  <rgm@gnu.org>

	* lisp/loadup.el: Get charprop.el into etc/DOC again.

2017-04-26  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/ido.el (ido-everywhere): Use add-function.

2017-04-26  Martin Rudalics  <rudalics@gmx.at>

	Try to fix latest fix of w32_mouse_position

	* src/w32term.c (w32_mouse_position): Fix a bug introduced by
	latest fix and try to make the affected code more rigorous.

2017-04-26  Eli Zaretskii  <eliz@gnu.org>

	Avoid segfaults when 'find-font' is invoked for a TTY frame

	* src/font.c (font_pixel_size): Don't call GUI functions if F is a
	text-mode frame.  (Bug#26646)

2017-04-26  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp.el (tramp-set-connection-local-variables-for-buffer):

	New defun.

2017-04-26  Glenn Morris  <rgm@gnu.org>

	* src/Makefile.in (leimdir): Remove variable, no longer used.

2017-04-26  Glenn Morris  <rgm@gnu.org>

	Generate leim-list via lisp/Makefile, not src/Makefile

	* src/Makefile.in ($(leimdir)/leim-list.el): Remove rule.
	(emacs$(EXEEXT)): Don't depend on leim-list.
	* lisp/Makefile.in ($(lisp)/loaddefs.el): Depend on gen-lisp again.

2017-04-25  Alan Third  <alan@idiocy.org>

	Fix define for GNUstep builds

	* src/nsterm.m (initFrameFromEmacs): Fix the ifdef so that GNUstep
	doesn't see the code.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Suppress intermittent test failure on hydra

	* test/lisp/emacs-lisp/eieio-tests/eieio-test-methodinvoke.el
	(eieio-test-method-order-list-6): Skip on hydra.

2017-04-25  Alan Third  <alan@idiocy.org>

	Fix some NS frame handling issues

	* src/nsterm.m (FRAME_DECORATED_FLAGS, FRAME_UNDECORATED_FLAGS): New
	defines intended to make things tidier.
	(x_set_undecorated): Use the new defines.
	(windowWillResize): Don't use new macOS 12+ only feature.
	(initFrameFromEmacs): Use the new defines, and disable automatic
	window tabbing feature in macOS 12.
	(x_set_undecorated, x_set_parent_frame, x_set_no_accept_focus,
	x_set_z_group): Add NSTRACE notices.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Avoid parallel race condition

	* lisp/Makefile.in ($(lisp)/loaddefs.el): Remove gen-lisp for now.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Generate each unicode lisp file independently

	This is better for parallel builds, eg it eliminates race
	conditions from having one process write multiple files.
	* admin/unidata/Makefile.in (lparen, unifiles): New variables.
	Parse unidata-gen.el, not charprop.el, to get the list of uni- files.
	(all): Explicitly list the output lisp files.
	(PHONY_EXTRAS): Remove.
	(${unidir}/charprop.el): Change rule to just be for this file.
	(${unifiles}): New rule to write each unicode lisp file.
	(extraclean): Simplify.
	* admin/unidata/unidata-gen.el (unidata-gen-charprop):
	Quieten in batch mode.
	(unidata-gen-files): Remove, no longer used.
	* lisp/loadup.el: Update command-line parser.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Further refactoring in unidata-gen.el

	* admin/unidata/unidata-gen.el (unidata-gen-charprop):
	New function, split from unidata-gen-files.
	(unidata-gen-files): Use unidata-gen-charprop.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Allow unidata-gen-file to work independently

	* admin/unidata/unidata-gen.el (unidata-gen-file):
	Make it work as a stand-alone function in batch mode.
	(unidata-gen-files): Pass extra arguments to unidata-gen-file.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Preparatory refactoring in unidata-gen.el

	* admin/unidata/unidata-gen.el (unidata-gen-file):
	New function, split from unidata-gen-files.
	(unidata-gen-files): Use unidata-gen-file.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Write each generated character property lisp file only once

	* admin/unidata/unidata-gen.el (unidata-file-alist):
	Rename from unidata-prop-alist.  All users changed.
	Use file name rather than property name as the key.
	(unidata-prop-prop): New function.
	(unidata-prop-index, unidata-prop-generator, unidata-prop-docstring)
	(unidata-prop-describer, unidata-prop-default, unidata-prop-val-list):
	Change to parse the argument rather than unidata-prop-alist.
	(unidata-gen-table-character, unidata-gen-table)
	(unidata-gen-table-symbol, unidata-gen-table-integer)
	(unidata-gen-table-numeric, unidata-gen-table-word-list)
	(unidata-gen-table-name, unidata-gen-table-decomposition)
	(unidata-gen-table-special-casing): Pass index as an argument.
	(unidata-check): Adapt to unidata-file-alist.
	Pass index to generator functions.
	(unidata-gen-files): Adapt to unidata-file-alist.
	Write each output file once only.  Overwrite rather than delete.

2017-04-25  Andrew G Cohen  <cohen@andy.bu.edu>

	Fix requesting sparse articles in gnus

	* lisp/gnus/gnus-art.el (gnus-request-article-this-buffer): Delete the
	sparse article number from the list, not its id.

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Don't advertise s_client in tls.el docs

	* lisp/net/tls.el (tls-end-of-info, tls-success, tls-untrusted):
	Don't mention s_client in docs.

2017-04-25  Rob Browning  <rlb@defaultvalue.org>

	Remove s_client usage from tls.el

	* lisp/net/tls.el (tls-program, tls-checktrust): Remove s_client.
	Ref http://bugs.debian.org/766397
	https://lists.gnu.org/r/emacs-devel/2014-10/msg00803.html

2017-04-25  Glenn Morris  <rgm@gnu.org>

	Further robustify cedet bootstrap to loaddefs not yet built

	* lisp/cedet/semantic/util.el (semantic-something-to-tag-table):
	Avoid void-function error when bootstrapping and semantic/loaddefs.el
	does not yet exist.

2017-04-24  Alan Third  <alan@idiocy.org>

	Fix XBM color rendering in NS port (bug#22060)

	src/nsimage.m (setXBMColor): Fix calculation of xbm_fg.

2017-04-24  Vibhav Pant  <vibhavp@gmail.com>

	Add support for IRCv3 message tags.

	* lisp/erc/erc-backend.el:
	  erc-response: Add `tags' element.
	  Add (erc-parse-tags).
	  (erc-parse-server-response): Use (erc-parse-tags) to parse message
	  tags (if any), and store them in `erc-resopnse' struct.

	* lisp/erc/erc.el: (erc-display-message): Expose message tags with text
	  properties of the corresponding message line.

2017-04-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Add image sizing tests for an image that's narrow

	Needlessly refactor tests for clarity

2017-04-23  Philipp Stephani  <phst@google.com>

	Add missing remappings for Ido mode

	Among others, add a remapping for C-x 4 d, cf. Bug#26360.

	* lisp/ido.el (ido-mode): Remap missing commands.
	(ido-file-internal, ido-visit-buffer): Add support for new
	methods.
	(ido-display-buffer-other-frame)
	(ido-find-alternate-file-other-window, ido-dired-other-window)
	(ido-dired-other-frame): New commands.

	* test/lisp/ido-tests.el (ido-tests--other-window-frame): Add unit
	test for the bindings.

2017-04-23  Martin Rudalics  <rudalics@gmx.at>

	Let w32_mouse_position pick a child window only if it has a child frame

	* src/w32term.c (w32_mouse_position): When using a frame found
	by ChildWindowFromPoint make sure it's a child frame (Bug#26615,
	maybe).

2017-04-23  Noam Postavsky  <npostavs@gmail.com>

	Don't require bytecomp for running ert tests

	"Fix ert-tests when running compiled" 2016-12-06 accidentally
	introduced a dependency on `bytecomp' into `ert'.  As mentioned in
	"Avoid ert test failures" 2017-04-18, the accidental dependency of ert
	on bytecomp was masked by loading other libraries until recently.

	* lisp/emacs-lisp/ert.el (ert--expand-should-1): Only use
	`byte-compile-macro-environment' if it's bound.
	* test/src/eval-tests.el: Add defvar for dynamic variable
	`byte-compile-debug'.

2017-04-23  Andrew G Cohen  <cohen@andy.bu.edu>

	Eliminate unneeded warp-to-article in gnus article referral

	* lisp/gnus/gnus-sum.el (gnus-summary-refer-thread):
	(gnus-summary-refer-article): Remove gnus-warp-to article call.

2017-04-23  Andrew G Cohen  <cohen@andy.bu.edu>

	Allow limiting gnus summary buffers to a thread

	* lisp/gnus/gnus-sum.el (gnus-summary-limit-include-thread): Include
	an optional argument to allow limiting the summary buffer to just the
	thread-related articles.
	(gnus-refer-thread-limit-to-thread): Introduce customizable variable
	to control whether thread-referral adds the thread to the summary
	buffer or limits to just the thread.
	(gnus-summary-refer-thread): Use the new variable.

2017-04-23  Andrew G Cohen  <cohen@andy.bu.edu>

	Correct gnus-newsgroup-limits in gnus when including thread

	* lisp/gnus/gnus-sum.el (gnus-summary-limit-include-thread): Should
	only add one list of thread-related articles to gnus-newsgroup-limits
	rather than two.

2017-04-23  Andrew G Cohen  <cohen@andy.bu.edu>

	Improve gnus thread matching of similar subjects

	* lisp/gnus/gnus-sum.el (gnus-summary-limit-include-thread):
	Use the more liberal gnus-general-simplify-subject regexp to
	find thread articles with similar subjects.

2017-04-22  Noam Postavsky  <npostavs@gmail.com>

	Add new `lisp-indent-region' that doesn't reparse the code.

	Both `lisp-indent-region' and `lisp-indent-line' now use `syntax-ppss'
	to get initial state, so they will no longer indent string literal
	contents.

	* lisp/emacs-lisp/lisp-mode.el (lisp-ppss): New function, like
	`syntax-ppss', but with a more dependable item 2.
	(lisp-indent-region): New function, like `indent-region-line-by-line'
	but additionally keep a running parse state to avoid reparsing the
	code repeatedly.  Use `lisp-ppss' to get initial state.
	(lisp-indent-line): Take optional PARSE-STATE argument, pass it to
	`calculate-lisp-indent', use `lisp-ppss' if not given.
	(lisp-mode-variables): Set `indent-region-function' to
	`lisp-indent-region'.

2017-04-22  Noam Postavsky  <npostavs@gmail.com>

	Remove ignored argument from lisp-indent-line

	* lisp/emacs-lisp/lisp-mode.el (lisp-indent-line): Remove WHOLE-EXP
	argument, the behavior has long since been handled in
	`indent-for-tab-command'.  Also remove redundant `beg' and `shift-amt'
	variables and use `indent-line-to'.

2017-04-22  Noam Postavsky  <npostavs@gmail.com>

	* lisp/emacs-lisp/lisp-mode.el (indent-sexp): Clean up marker.

2017-04-22  Noam Postavsky  <npostavs@gmail.com>

	Don't reparse the sexp in indent-sexp (Bug#25122)

	* lisp/emacs-lisp/lisp-mode.el (calculate-lisp-indent): Let
	PARSE-START be a parse state that can be reused.
	(indent-sexp): Pass the running parse state to calculate-lisp-indent
	instead of the sexp beginning position.  Saving the
	CONTAINING-SEXP-START returned by `calculate-lisp-indent' is no longer
	needed.  Don't bother stopping if we don't descend below init-depth,
	since we now alway scan the whole buffer (via syntax-ppss) anyway.
	* test/lisp/emacs-lisp/lisp-mode-tests.el (indent-sexp): Add blank
	line to test case.

2017-04-22  Vibhav Pant  <vibhavp@gmail.com>

	Add cond test cases for singleton clauses.

	* test/lisp/emacs-lisp/bytecomp-tests.el: Add test cond forms where
	  the default clause is a single non-nil expression.

2017-04-22  Vibhav Pant  <vibhavp@gmail.com>

	b-c--cond-jump-table-info: Use correct body for singleton clauses

	* lisp/emacs-lisp/bytecomp.el (byte-compile-cond-jump-table-info):
	When a clause's body consists of a single constant expression, use
	that expression as the body to be compiled. This fixes switch bytecode
	evaluating to nil to such clauses.

2017-04-22  Philipp Stephani  <phst@google.com>

	ffap: Don't switch window unless needed

	When using ffap-other-window, don't change the window configuration
	unless a new buffer has actually been created (Bug#25352).

	* lisp/ffap.el (ffap-other-frame): Don't change the window
	configuration if no new buffer has been created.
	* test/lisp/ffap-tests.el (ffap-other-window--bug-25352): Add unit
	test.

2017-04-22  Alan Mackenzie  <acm@muc.de>

	Fix fontification of C++ declaration with type FOO::FOO.

	* lisp/progmodes/cc-engine.el (c-find-decl-spots): Initialize
	cfd-top-level properly.
	(c-forward-decl-or-cast-1): On finding FOO::FOO, check it is followed by "("
	before deciding it is a constructor.

	* lisp/progmodes/cc-fonts.el (c-font-lock-complex-decl-prepare): Negate the
	result of the c-bs-at-toplevel-p call passed to c-font-lock-declarators
	(simple bug fix).

2017-04-22  Philipp Stephani  <phst@google.com>

	Fix usage of FRAME_Z_GROUP

	* src/nsterm.m (initFrameFromEmacs:): FRAME_Z_GROUP does not return a
	Lisp object, cf. Bug#26597.

2017-04-22  Alan Third  <alan@idiocy.org>

	Fix GNUstep build

	* src/nsfns.m (Fns_frame_z_list_order): Rewrite for GNUstep
	compatibility.
	* src/nsmenu.m (update_frame_tool_bar): Remove unused variable.

2017-04-21  Alan Third  <alan@idiocy.org>

	Add no-accept-focus and frame-list-z-order to NS port

	* lisp/frame.el (frame-list-z-order): Add NS.
	* src/nsfns.m: Add x_set_no_accept_focus to handler struct.
	(Fx_create_frame): Handle no-accept-focus parameter.
	(ns_window_is_ancestor):
	(Fns_frame_list_z_order): New functions.
	* src/nsterm.m (x_set_no_accept_focus): New function.
	(initFrameFromEmacs): Use EmacsWindow instead of EmacsFSWindow for
	non-fullscreen windows.
	(EmacsWindow:canBecomeKeyWindow): New function.

2017-04-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	Improve prefix handling for dash.el

	* lisp/emacs-lisp/autoload.el (autoload--make-defs-autoload):
	Don't drop dash's "-<letter>" prefixes.

2017-04-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-macs.el: Fix symbol-macrolet

	Revert 0d112c00ba0ec14bd3014efcd3430b9ddcfe1fc1 (to fix bug#26325)
	and use a different fix for bug#26068.
	(cl--symbol-macro-key): New function.
	(cl--sm-macroexpand, cl-symbol-macrolet): Use it instead of `symbol-name`.
	* test/lisp/emacs-lisp/cl-lib-tests.el (cl-lib-symbol-macrolet):
	Failure is not expected any more.

2017-04-21  Eli Zaretskii  <eliz@gnu.org>

	Avoid infinite loop in redisplay when header-line-format is invalid

	* src/xdisp.c (handle_invisible_prop): Avoid inflooping when the
	string has an invalid %-construct in it and is displayed as part
	of mode-line or header-line.  (Bug#26586)

2017-04-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Add tests to check image scaling functionality

	This is in preparation to doing further work in this area to avoid
	regressions.

	* test/data/image/blank-200x100.png: New file for testing
	image scaling.

	* test/manual/image-size-tests.el: New file.

2017-04-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow svg-image to take all create-image PROPS

	* lisp/svg.el (svg-image): Allow passing in PROPS when
	creating an image for convenience.

2017-04-21  George D. Plymale II  <georgedp@orbitalimpact.com>  (tiny change)

	Treat non-erroring lisp call as successful eshell command (Bug#26161)

	This lets a compound command like 'cd .. && echo ok' print 'ok',
	similar to how most other shells behave.

	* lisp/eshell/esh-cmd.el (eshell-exit-success-p): Only check if the
	last exit code was zero, rather than first checking whether the last
	command returned nil.
	(eshell-exec-lisp): Set `eshell-last-command-status' to 1 on error.

2017-04-21  Reuben Thomas  <rrt@sc3d.org>

	Fix reading of tab settings in whitespace-mode

	lisp/whitespace.el (whitespace-indent-tabs-mode)
	whitespace-tab-width): Remove these variables. The underlying
	variables `indent-tabs-mode' and `tab-width' are already buffer-local
	when needed, and whitespace-mode never changes them.
	(whitespace-ensure-local-variables): Remove this function, which only
	existed to set the above variables.
	(whitespace-cleanup-region, whitespace-regexp)
	(whitespace-indentation-regexp, whitespace-report-region)
	(whitespace-turn-on, whitespace-color-on): Adjust these functions to
	use `indent-tabs-mode' and `tab-width' directly, and not call
	`whitespace-ensure-local-variables'.

2017-04-20  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/vc/vc-hg.el (vc-hg-state-fast): Fix compiler warning

	by simplifying ascii-test.

2017-04-20  Vibhav Pant  <vibhavp@gmail.com>

	bytecomp: Don't inline functions that use byte-switch (Bug#26518)

	* lisp/emacs-lisp/bytecomp.el (byte-compile-unfold-bcf): Don't inline
	  FORM if the bytecode uses the byte-switch instruction. It is
	  impossible to guess the correct stack depth while inlining such
	  bytecode, resulting in faulty code.

2017-04-20  Nicolas Petton  <nicolas@petton.fr>

	Set Emacs version to 25.2 and update AUTHORS file

	* README: Set Emacs version to 25.2.
	* etc/HISTORY: Add release log.
	* lisp/ldefs-boot.el:
	* etc/AUTHORS:
	* ChangeLog.2: Update.

2017-04-20  Noam Postavsky  <npostavs@gmail.com>

	Don't register "def" as an autoload prefix (Bug#26412)

	* lisp/emacs-lisp/autoload.el (autoload--make-defs-autoload): Don't
	accept "def" as a prefix.

2017-04-20  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use substring completion for Info menus and index

	* lisp/info.el (Info-complete-menu-item): Add `category' metadata.
	(Info-menu): Simplify now that we use the `default' arg of completing-read.
	* lisp/minibuffer.el (completion-category-defaults): Use substring
	completion for `info-menu`.

2017-04-19  Glenn Morris  <rgm@gnu.org>

	Remove some explicit runtime loads of pcase

	Pcase is macros, so these should have used eval-when-compile.
	Anyway, pcase entry points are autoloaded, so the compiler handles it.
	* lisp/profiler.el, lisp/emacs-lisp/eieio-core.el:
	* lisp/emacs-lisp/generator.el, lisp/emacs-lisp/subr-x.el:
	* lisp/progmodes/xref.el: No need to require pcase.

2017-04-19  Glenn Morris  <rgm@gnu.org>

	Stop cl-lib loading pcase at runtime

	The cause was an unexpanded pcase-defmacro in cl-loaddefs.
	* lisp/emacs-lisp/autoload.el (make-autoload):
	Treat pcase-defmacro like defmacro.

2017-04-19  Alan Third  <alan@idiocy.org>

	Note frame documentation exceptions for NS builds

	* doc/lispref/frames.texi (Management Parameters, Child Frames): Note
	NS differences.

2017-04-19  Alan Third  <alan@idiocy.org>

	Fix bug introduced by my last commit

	* src/nsterm.m (ns_draw_fringe_bitmap): Revert key-mashing accident.

2017-04-19  Alan Third  <alan@idiocy.org>

	Add new frame functionality to NS port

	* lisp/frame.el (frame-restack): Call ns-frame-restack.
	* src/keyboard.c (kbd_buffer_get_event) [HAVE_NS]: Enable
	MOVE_FRAME_EVENT handling.
	* src/frame.h:
	* src/frame.c: Enable 'z-group', 'undecorated' and 'parent' frame
	definitions.
	* src/nsfns.m: Add x_set_z_group, x_set_parent_frame and
	x_set_undecorated (Cocoa only) to handler struct.
	(Fx_create_frame): Handle 'z-group', 'parent-frame' and 'undecorated'
	frame parameter.
	(Fns_frame_restack): New function.
	* src/nsmenu.m (free_frame_tool_bar, update_frame_tool_bar):
	FRAME_TOOLBAR_HEIGHT is no longer a variable.
	* src/nsterm.h (NS_PARENT_WINDOW_LEFT_POS, NS_PARENT_WINDOW_TOP_POS):
	Add #defines to find the screen position of the parent frame.
	(NS_TOP_POS): Remove defun.
	(EmacsView): Remove redundant toolbar variables and add createToolbar
	method.
	(FRAME_NS_TITLEBAR_HEIGHT, FRAME_TOOLBAR_HEIGHT): Always calculate the
	values instead of storing them in a variable.
	* src/nsterm.m (x_set_offset, windowDidMove): Take parent frame
	position into account when positioning frames.
	(initFrameFromEmacs): Remove toolbar creation code and handle new
	frame parameters.
	(x_set_window_size): Remove toolbar height calculation.
	(x_set_z_group):
	(x_set_parent_frame):
	(x_set_undecorated) [NS_IMPL_COCOA]: New function.
	(x_destroy_window): Detach parent if child closes.
	(updateFrameSize): Change NSTRACE message to reflect new reality and
	no longer reset frame size.
	(windowWillResize): Don’t change NS window name when the titlebar
	is invisible.
	(createToolbar): Move toolbar creation code into it’s own method.
	(toggleFullScreen): FRAME_TOOLBAR_HEIGHT and FRAME_NS_TITLEBAR_HEIGHT
	are no longer variables.
	(windowDidMove): Fire MOVE_FRAME_EVENT Emacs event.

2017-04-19  Glenn Morris  <rgm@gnu.org>

	Tweak bytecomp's loading of cl-extra

	* lisp/emacs-lisp/bytecomp.el: Don't force load of cl-extra in a
	post-bootstrap emacs where cl-loaddefs does exist.

2017-04-19  Glenn Morris  <rgm@gnu.org>

	Avoid unnecessary loading of subr-x at run-time

	* lisp/doc-view.el, lisp/filenotify.el, lisp/info-look.el:
	* lisp/svg.el, lisp/emacs-lisp/byte-opt.el, lisp/net/shr.el:
	* lisp/textmodes/sgml-mode.el, test/lisp/dom-tests.el:
	No need to load subr-x at run-time.
	* lisp/gnus/nnheader.el: No need to load subr-x.

2017-04-18  michael schuldt  <mbschuldt@gmail.com>  (tiny change)

	Use iteration in math-factorial-iter

	* lisp/calc/calc-comb.el (math-factorial-iter):
	Use iteration instead of recursion to avoid max-specpdl-size problem.

2017-04-18  Glenn Morris  <rgm@gnu.org>

	* test/lisp/kmacro-tests.el: Require seq, for seq-concatenate.

2017-04-18  Glenn Morris  <rgm@gnu.org>

	Avoid ert test failures

	* lisp/emacs-lisp/ert.el (ert--expand-should-1):
	Avoid errors related to undefined byte-compile-macro-environment.
	Somehow masked until very recently because loading seq (eg)
	loads bytecomp.  http://hydra.nixos.org/build/51730765

2017-04-18  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in indexing the user manual

	* doc/emacs/cmdargs.texi (General Variables): Fix a horrible typo.

2017-04-18  Noam Postavsky  <npostavs@gmail.com>

	Fix find-library-name for load-history entries with nil FILE-NAME (Bug#26355)

	* lisp/emacs-lisp/find-func.el (find-library--from-load-history):
	Rename from find-library--from-load-path.  Check for `load-history'
	entries with nil FILE-NAMEs.  Simplify by not double
	checking for suffixes and making use of `locate-file'.

2017-04-18  Alan Third  <alan@idiocy.org>
	    YAMAMOTO Mitsuharu  <mituharu@math.s.chiba-u.ac.jp>

	Use vfork if possible on Darwin (bug#26397)


	* src/conf_post.h (HAVE_WORKING_VFORK): Don't undef.
	(vfork): Don't define.
	* src/process.c (create_process) [DARWIN_OS]: Use fork if pty_flag is
	set, otherwise vfork.
	* src/callproc.c (call_process) [DARWIN_OS]: Use TIOCNOTTY to detach
	the controlling terminal instead of setsid.

2017-04-18  Fran Litterio  <flitterio@gmail.com>

	Small erc-kill-channel fix (bug#23700)

	* lisp/erc/erc.el (erc-kill-channel): Handle null erc-default-target.

2017-04-18  Glenn Morris  <rgm@gnu.org>

	ediff: use user-error rather than debug-ignored-errors

	* lisp/vc/ediff-diff.el (ediff-prepare-error-list):
	* lisp/vc/ediff-help.el (ediff-help-for-quick-help):
	* lisp/vc/ediff-init.el (ediff-barf-if-not-control-buffer)
	(ediff-check-version):
	* lisp/vc/ediff-merg.el (ediff-shrink-window-C):
	* lisp/vc/ediff-mult.el (ediff-draw-dir-diffs, ediff-show-dir-diffs)
	(ediff-append-custom-diff, ediff-meta-show-patch)
	(ediff-filegroup-action, ediff-show-meta-buffer, ediff-show-registry)
	(ediff-get-meta-info, ediff-patch-file-form-meta):
	* lisp/vc/ediff-ptch.el (ediff-patch-file-internal):
	* lisp/vc/ediff-util.el (ediff-toggle-autorefine)
	(ediff--check-ancestor-exists, ediff-toggle-read-only)
	(ediff-toggle-wide-display, ediff-toggle-multiframe)
	(ediff-toggle-use-toolbar, ediff-toggle-show-clashes-only)
	(ediff-next-difference, ediff-previous-difference)
	(ediff-pop-diff, ediff-read-file-name, ediff-verify-file-buffer)
	(ediff-save-buffer):
	* lisp/vc/ediff-wind.el (ediff-make-wide-display):
	* lisp/vc/ediff.el (ediff-find-file, ediff-buffers-internal)
	(ediff-directories-internal, ediff-directory-revisions-internal)
	(ediff-regions-wordwise, ediff-regions-linewise)
	(ediff-load-version-control): Use user-error.
	(debug-ignored-errors): No longer modify.

2017-04-18  Glenn Morris  <rgm@gnu.org>

	mh-e: use user-error rather than debug-ignored-errors

	* lisp/mh-e/mh-alias.el (mh-alias-grab-from-field):
	* lisp/mh-e/mh-utils.el (mh-get-msg-num): Use user-error.
	(debug-ignored-errors): No longer modify.

2017-04-18  Glenn Morris  <rgm@gnu.org>

	ispell.el: use user-error rather than debug-ignored-errors

	* lisp/textmodes/ispell.el (ispell-get-word): Use user-error.
	(debug-ignored-errors): No longer modify.

2017-04-17  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	* src/xterm.c (x_fill_rectangle): Now static.

2017-04-17  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Tighten recently-added UTF-8 check

	* src/coding.c (encode_coding_utf_8): Now extern.
	* src/terminal.c (terminal_glyph_code) [HAVE_STRUCT_UNIPAIR_UNICODE]:
	Check for UTF-8, not just for multibyte.

2017-04-17  David Engster  <deng@randomsample.de>

	xml: Properly handle symbol-qnames for attribute parsing

	* lisp/xml.el (xml-parse-attlist): Do not strip 'symbol-qnames from
	  xml-ns argument (reverts aea67018) (Bug#26533).
	  (xml-maybe-do-ns): Properly handle default namespace by not
	  interning new symbol when 'special' flag is set.

	* test/lisp/xml-tests.el (xml-parse-test--namespace-attribute-qnames)
	  (xml-parse-namespace-attribute-qnames): Add test for Bug#26533.

2017-04-17  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	* src/lisp.h (STRING_SET_CHARS): Simplify assertion.

2017-04-17  Eli Zaretskii  <eliz@gnu.org>

	Fix assertion violations when displaying thread-related error

	* src/process.c (Faccept_process_output): Don't assume a thread's
	name is always a string.

2017-04-17  Paul Eggert  <eggert@cs.ucla.edu>

	dired ‘M’ should not complain about ‘.’ and ‘..’

	* lisp/dired-aux.el (dired-do-redisplay):
	Allow redisplay of ‘.’ and ‘..’ (Bug#26528).

2017-04-17  Paul Eggert  <eggert@cs.ucla.edu>

	Remove unused coding enums

	* src/coding.h (enum coding_system_type, enum end_of_line_type):
	Remove; unused.

2017-04-17  Paul Eggert  <eggert@cs.ucla.edu>

	Work around bug with unibyte Linux consoles

	* src/terminal.c (terminal_glyph_code): Skip the UTF-8 stuff if
	the terminal's coding system is unibyte (Bug#26396).

2017-04-16  Teemu Likonen  <tlikonen@iki.fi>

	Fix org-agenda's command for calendar-lunar-phases

	Function org-agenda-phases-of-moon tries to call a non-existing
	function calendar-phases-of-moon. The correct function is
	calendar-lunar-phases.

2017-04-16  Michael Albinus  <michael.albinus@gmx.de>

	Tuning for `separate' Tramp syntax

	* lisp/net/tramp.el (tramp-method-regexp): Fix it for `separate' syntax.
	(tramp-completion-file-name-regexp-separate): Simplify.

	* test/lisp/net/tramp-tests.el (tramp-test02-file-name-dissect-separate):
	Extend test.

2017-04-16  Alan Mackenzie  <acm@muc.de>

	Fix bug #26529: C-h k errors with a lambda function bound to a key.

	* lisp/help-fns.el (help-fns--signature, describe-function-1): Check
	`function' is a symbol before trying to get property `reader-construct' from
	it.

2017-04-16  Simen Heggestøyl  <simenheg@gmail.com>

	Fix highlighting of short selectors in CSS mode

	* lisp/textmodes/css-mode.el (css--font-lock-keywords): Highlight
	selectors where the part before a colon is only one character long,
	such as `a:hover'.

2017-04-16  Eli Zaretskii  <eliz@gnu.org>

	Fix redisplay performance problems with some fonts

	* src/font.c (font_list_entities): Revert part of the changes
	introduced on Apr 2, 2014 to fix bug#17125.  It turns out having
	zero_vector in the font-cache is an important indication that
	cannot be removed.  (Bug#21028)

2017-04-16  Eli Zaretskii  <eliz@gnu.org>

	Add assertion to STRING_SET_CHARS

	* src/lisp.h (STRING_SET_CHARS): Add an assertion and commentary
	to prevent incorrect usage.  For details, see this discussion:
	https://lists.gnu.org/r/emacs-devel/2017-04/msg00412.html.

2017-04-16  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warnings on MS-Windows

	* src/w32term.c (w32_read_socket): Avoid compiler warnings about
	parentheses around assignment.
	* src/w32fns.c (w32_createwindow): Remove unused variable
	dwStyle.  Use "|=" where appropriate.

2017-04-16  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Merge from gnulib

	This incorporates:
	2017-04-14 intprops: try to avoid tickling similar bugs
	2017-04-14 intprops: port to Oracle Studio 12.3 x86
	* doc/misc/texinfo.tex, lib/intprops.h: Copy from gnulib.

2017-04-15  Martin Rudalics  <rudalics@gmx.at>

	Fix bugs in `with-displayed-buffer-window' and `fit-window-to-buffer'

	* lisp/window.el (with-displayed-buffer-window): When a
	'window-height' action alist entry specifies a function, call
	`temp-buffer-window-show' with a '(window-height . t)' dummy
	entry so `window--try-to-split-window' will bind
	`window-combination-limit' to t and that function does not
	resize any other window but the one we split this one off
	(Bug#25055, Bug#25179).
	(fit-window-to-buffer): Call `window-max-delta' with NOUP t so
	we steal space only from windows in the same combination.
	Stealing space from other windows would not allow us to return
	that space later when this window is deleted (Bug#25055,
	Bug#25179).

2017-04-15  Glenn Morris  <rgm@gnu.org>

	Avoid userlock queries hanging forever in batch mode

	* lisp/userlock.el (ask-user-about-lock)
	(ask-user-about-supersession-threat): Abort in batch mode.

2017-04-14  Martin Rudalics  <rudalics@gmx.at>

	Fix segfault when calling frame_ancestor_p (Bug#26493)

	* src/xterm.c (handle_one_xevent): Check that hf was not reset
	before calling frame_ancestor_p (Bug#26493).

2017-04-14  Martin Rudalics  <rudalics@gmx.at>

	A few additional copy-edits in documentation of frames

	* doc/lispref/frames.texi (Frame Layout)
	(Implied Frame Resizing): Windows -> MS-Windows.
	(Deleting Frames): Fix typo.

2017-04-14  Glenn Morris  <rgm@gnu.org>

	Use user-error for some ert.el errors

	* lisp/emacs-lisp/ert.el (ert-read-test-name, ert-delete-all-tests)
	(ert-results-find-test-at-point-other-window, ert-describe-test):
	Use user-error.

2017-04-14  Glenn Morris  <rgm@gnu.org>

	Use user-error for customize's "invalid face" error

	* lisp/cus-edit.el (customize-face): Use user-error.
	(debug-ignored-errors): No more need to add "Invalid face".

2017-04-14  Glenn Morris  <rgm@gnu.org>

	Remove duplicate lisp-eval-defun definition

	* lisp/emacs-lisp/lisp-mode.el (lisp-eval-defun):
	Autoload rather than defining a stub.

2017-04-14  Glenn Morris  <rgm@gnu.org>

	* lisp/Makefile.in (check-defun-dups): Ignore obsolete files.

2017-04-14  Glenn Morris  <rgm@gnu.org>

	Create generated lisp files before main loaddefs.el

	This should improve reproducibility of lisp/loaddefs.el.
	* lisp/Makefile.in (gen-lisp): New phony target.
	($(lisp)/loaddefs.el, compile-main): Depend on gen-lisp.
	* src/Makefile.in ($(leimdir)/leim-list.el): Depend on all of ../leim.
	* lisp/cedet/semantic.el (semantic-mode):
	* lisp/cedet/semantic/fw.el (top-level):
	* lisp/emacs-lisp/eieio-core.el (top-level):
	Robustify to generated input files maybe not yet existing.

2017-04-14  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Fix minor quoting issues in Makefile.in

	* Makefile.in (install-arch-dep, uninstall):
	Quote EMACS and EMACS_NAME more consistently.

2017-04-13  Glenn Morris  <rgm@gnu.org>

	* Makefile.in (install-etc): Use existing Makefile variables.

2017-04-13  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits of recent changes in documentation

	* doc/lispref/frames.texi (Frame Layout, Frame Position)
	(Frame Size, Frame Interaction Parameters, Input Focus)
	(Raising and Lowering, Child Frames): Improve wording and indexing.
	* doc/emacs/cmdargs.texi (Borders X): Improve indexing.

2017-04-13  Glenn Morris  <rgm@gnu.org>

	Small src/Makefile simplification

	* src/Makefile.in ($(lispsource)/international/ucs-normalize.elc)
	($(lispsource)/term/ns-win.elc): Combine rules.

2017-04-13  Simen Heggestøyl  <simenheg@gmail.com>

	Add grid layout module to CSS property list

	* lisp/textmodes/css-mode.el (css-property-alist)
	(css-value-class-alist): Add new properties and value classes from CSS
	Grid Layout Module.

2017-04-13  Martin Rudalics  <rudalics@gmx.at>

	Describe recent frame and window changes in manuals

	* doc/emacs/emacs.texi (Top):
	* doc/emacs/cmdargs.texi (Borders X): Clearly separate the terms
	"outer border" (for the X border which can be set from within
	Emacs) and "external border" (for the border which is added by
	the window manager).
	* doc/lispref/display.texi (Tooltips): Clarify slightly.
	* doc/lispref/elisp.texi (Top): Update node and section names.
	* doc/lispref/frames.texi (Frames): Describe difference between
	top-level and child frames.
	(Frame Layout): Describe outer border.  Add more details about
	how Emacs obtains the outer size and position of a frame and
	about menu bar/tool bar wrapping.  Add references to new frame
	parameters.
	(Size and Position): Remove subsection.
	(Frame Position): New subsection excerpted from the earlier Size
	and Position subsection.  Clarify positioning concepts and
	some of their shortcomings.  Describe `move-frame-functions'.
	(Frame Size): New subsection excerpted from the earlier Size
	and Position subsection.  Describe how to track frame size
	changes and the new function `frame-size-changed-p'.
	(Position Parameters): Describe child frame positioning.  Warn
	about negative offsets.  Describe 'z-group' parameter.
	(Size Parameters): Describe 'text-pixels' specification
	facility and new 'min-width' and 'min-height' parameters.
	(Layout Parameters): Clarify description of 'tool-bar-lines' and
	'menu-bar-lines' parameters.
	(Frame Interaction Parameters): New subsubsection describing
	'parent-frame', 'delete-before', 'mouse-wheel-frame' and
	'no-other-frame' parameters.
	(Management Parameters): Describe 'skip-taskbar',
	'no-focus-on-map', 'no-accept-focus', 'undecorated' and
	'override-redirect' parameters.
	(Deleting Frames): Describe handling of 'delete-before'
	parameter and child frames for `delete-frame' and
	`delete-other-frames'.
	(Finding All Frames): Describe `frame-list-z-order' and handling
	of 'no-other-frame' parameter by `next-frame'.
	(Minibuffers and Frames): Minor clarifications.
	(Input Focus): Document `x-focus-frame'.  Clarify descriptions
	of `focus-in-hook', `focus-out-hook' and `focus-follows-mouse'.
	(Visibility of Frames): Describe mapping and how the visibility
	of a parent frame affects that of its child frames.
	(Raising and Lowering): Describe restacking of frames and
	z-groups.
	(Child Frames): New section.
	* doc/lispref/windows.texi (Selecting Windows): Describe
	additional semantics of NORECORD argument of `select-window' and
	how `buffer-list-update-hook' can emulate a "select window
	hook".
	(Mouse Window Auto-selection): New section.

2017-04-13  Damien Cassou  <damien@cassou.me>

	Fix imenu--sort-by-position for non-pairs parameters (bug#26457)

	* lisp/imenu.el (imenu--sort-by-position): Fix to accept lists beyond
	  pairs.
	* test/lisp/imenu-tests.el: Add 2 tests for `imenu--sort-by-position`.

2017-04-13  Eli Zaretskii  <eliz@gnu.org>

	Avoid unnecessary regeneration of the entire loaddefs.el

	* lisp/Makefile.in (autoloads .PHONY): Add commentary explaining
	why $(lisp)/loaddefs.el is a dependency of '.PHONY'.
	($(lisp)/loaddefs.el): Copy an existing loaddefs.el to
	loaddefs.tmp before running 'batch-update-autoloads' on it, to
	avoid slow regeneration of the full contents.  (Bug#26459)
	Use 'move-if-change' instead of 'mv', to avoid producing a new
	Emacs binary when not necessary.

2017-04-13  Dmitry Gutov  <dgutov@yandex.ru>

	Handle indentation of nested ternary operators in JS

	* lisp/progmodes/js.el (js--looking-at-operator-p):
	Handle nested ternary operators.

2017-04-12  Eli Zaretskii  <eliz@gnu.org>

	Don't call 'kill-this-buffer' outside of menus

	* lisp/simple.el (kill-current-buffer): New function.
	(completion-list-mode-map): Use it instead of kill-this-buffer.
	* lisp/type-break.el (type-break-mode):
	* lisp/term/ns-win.el (global-map):
	* lisp/progmodes/gdb-mi.el (gdb-memory-mode-map)
	(gdb-disassembly-mode-map, gdb-frames-mode-map)
	(gdb-locals-mode-map, gdb-registers-mode-map):
	* lisp/org/org-mhe.el (org-mhe-follow-link):
	* lisp/net/secrets.el (secrets-mode-map):
	* lisp/net/eudc.el (eudc-mode-map):
	* lisp/net/eudc-hotlist.el (eudc-hotlist-mode-map): Use
	kill-current-buffer instead of kill-this-buffer.  (Bug#26466)

2017-04-12  Eli Zaretskii  <eliz@gnu.org>

	* lisp/menu-bar.el (kill-this-buffer): Doc fix.  (Bug#26466)

2017-04-12  Martin Rudalics  <rudalics@gmx.at>

	New internal-border face and args for select-window and x-focus-frame

	Add `internal-border' face and handle it whenever clearing the
	internal border.  If NORECORD equals the symbol
	'mark-for-redisplay', `select-window' will not record the window
	but still mark it for redisplay.  The new argument NOACTIVATE
	for `x-focus-frame' tries to not activate FRAME when set.

	* lisp/faces.el (internal-border): New face.
	* lisp/mwheel.el (mwheel-scroll): Select window to scroll with
	`mark-for-redisplay'.
	* lisp/scroll-bar.el (scroll-bar-drag)
	(scroll-bar-horizontal-drag, scroll-bar-scroll-down)
	(scroll-bar-scroll-up, scroll-bar-toolkit-scroll)
	(scroll-bar-toolkit-horizontal-scroll): Select window to scroll
	with `mark-for-redisplay'.
	* lisp/window.el (handle-select-window): When
	`focus-follows-mouse' is not 'auto-raise' try to not activate
	FRAME.
	* src/dispextern.h (face_id): Add INTERNAL_BORDER_FACE_ID.
	* src/frame.c (Fx_focus_frame): New argument NOACTIVATE.
	* src/frame.h (x_focus_frame): Update extern declaration.
	* src/gtkutil.c (xg_clear_under_internal_border): Remove
	function.
	(xg_frame_resized, xg_frame_set_char_size): Call
	x_clear_under_internal_border.
	(xg_tool_bar_callback): Adapt x_focus_frame call.
	* src/gtkutil.h (xg_clear_under_internal_border): Remove
	declaration.
	* src/nsfns.m (x_focus_frame): Add argument NOACTIVATE.
	* src/w32fns.c (x_clear_under_internal_border): Fill border
	with internal-border background if specified.
	* src/w32term.h (x_clear_under_internal_border): Add extern
	declaration.
	* src/w32term.c (x_after_update_window_line): Fill border
	with internal-border background if specified.
	(w32_set_vertical_scroll_bar, w32_set_horizontal_scroll_bar)
	(x_scroll_bar_clear, w32_read_socket): Call
	x_clear_under_internal_border.
	(x_focus_frame): New argument NOACTIVATE.
	* src/window.c (select_window): Mark WINDOW for redisplay when
	NORECORD equals 'mark-for-redisplay'.
	(Fselect_window): Update doc-string.
	(syms_of_window): Define Qmark_for_redisplay.
	* src/xdisp.c (clear_garbaged_frames, echo_area_display)
	(redisplay_internal): Call x_clear_under_internal_border.
	* src/xfaces.c (lookup_basic_face): Handle `window-divider'
	and `internal-border' faces.
	(realize_basic_faces): Realize `internal-border' face.
	(syms_of_xfaces): Define Qinternal_border.
	* src/xfns.c (x_set_internal_border_width): Remove call for
	xg_clear_under_internal_border.
	(x_focus_frame): New argument NOACTIVATE.  When non-nil try to not
	activate frame.
	* src/xterm.c (x_fill_rectangle): No more static.
	(x_clear_under_internal_border, x_after_update_window_line):
	Fill border with internal-border background if specified.
	(xt_horizontal_action_hook): Rewrite.
	(handle_one_xevent): Call x_clear_under_internal_border.
	* src/xterm.h (x_fill_rectangle): Add extern declaration.

2017-04-12  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Port recent frame changes to --enable-gcc-warnings

	* src/frame.c (next_frame, prev_frame):
	Remove now-redundant assertions.
	* src/frame.h (FOR_EACH_FRAME): Assume Vframe_list is nonempty.

2017-04-12  Tak Kunihiro  <tkk@misasa.okayama-u.ac.jp>

	Scroll right and left using wheel-right and wheel-left.

	These changes also make use of touchpad and trackpad (Bug#26347).

	* doc/emacs/frames.texi (Mouse Commands): Document horizontal
	scrolling using the mouse wheel.

	* lisp/mwheel.el (mwheel-scroll): Respond to wheel-right and wheel-left.
	(mwheel-tilt-scroll-p, mwheel-flip-direction)
	(mwheel-scroll-left-function, mwheel-scroll-right-function): New
	defcustoms.
	(mouse-wheel-left-event, mouse-wheel-right-event): New variables,
	events that calls wheel-left/right.

	* etc/NEWS: Mention horizontal scrolling using the mouse wheel.

2017-04-12  Eli Zaretskii  <eliz@gnu.org>

	* lisp/Makefile.in (autoloads-force): Fix usage of ".PHONY".

2017-04-12  Martin Rudalics  <rudalics@gmx.at>

	Add new frame parameters and associated functions

	Add new frame parameters `undecorated', `override-redirect',
	`parent-frame', `skip-taskbar', `no-focus-on-map',
	`no-accept-focus', `z-group', `delete-before', `no-other-frame',
	`mouse-wheel-frame', `min-width', `min-height'.  Add new
	functions `frame-restack' and `frame-list-z-order'.

	* lisp/cus-start.el (focus-follows-mouse): Adapt customization
	type.
	* lisp/frame.el (handle-delete-frame): Handle child and
	`delete-before' frames.
	(other-frame): Stop looking for other frame after one round.
	(frame-list-z-order, frame-restack): New functions.
	(delete-other-frames): Handle child frames.
	* lisp/frameset.el (frameset-persistent-filter-alist)
	(frameset--record-relationships): Handle `delete-before',
	`parent-frame' and `mouse-wheel-frame' parameters.  Rename
	latter from `frameset--record-minibuffer-relationships'.
	(frameset--restore-frame): Handle ‘parent-frame’ parameter
	specially.
	(frameset-restore): Handle `delete-before', `parent-frame' and
	`mouse-wheel-frame' parameters.
	* lisp/mwheel.el (mwheel-scroll): Handle `mouse-wheel-frame'
	parameter.
	* lisp/window.el (window--min-size-ignore-p): Fix doc-string.
	(mouse-autoselect-window-select, handle-select-window): Major
	rewrite.  Try to not ignore errors.  Handle auto-selection of
	child frames and different values of `focus-follows-mouse'.
	* src/frame.c (frame_windows_min_size): Handle new `min-width'
	and `min-height' frame parameters.
	(make_frame): Initialize new frame structure members.
	(do_switch_frame): Don't reset internal_last_event_frame for
	descendant frames.
	(Fframe_parent, frame_ancestor_p, Fframe_ancestor_p): New
	functions.
	(candidate_frame): Don't return `no-other-frame' frame.
	(other_frames): New function replacing other_visible_frames.
	(delete_frame): Rewrite.  Handle child and `delete-before' frames.
	(Fmake_frame_invisible): Call other_frames.
	(store_frame_param): Check `delete-before' and `parent-frame'
	parameters for circular dependencies.
	(frame_parms, syms_of_frame): Add entries for and define new
	frame parameters.
	(focus_follows_mouse): New meaningful value `auto-raise'.
	* src/frame.h (z_group): New enumeration type.
	(frame): New slots parent_frame, undecorated, override_redirect,
	skip_taskbar, no_focus_on_map, no_accept_focus, z_group.
	(fset_parent_frame): New inlined function.
	(FRAME_UNDECORATED, FRAME_OVERRIDE_REDIRECT)
	(FRAME_PARENT_FRAME, FRAME_SKIP_TASKBAR, FRAME_NO_FOCUS_ON_MAP)
	(FRAME_NO_ACCEPT_FOCUS, FRAME_Z_GROUP, FRAME_Z_GROUP_NONE)
	(FRAME_Z_GROUP_ABOVE, FRAME_Z_GROUP_ABOVE_SUSPENDED)
	(FRAME_Z_GROUP_BELOW): New macros.
	(frame_ancestor_p): Add declaration.
	* src/gtkutil.c (xg_create_frame_widgets): Handle
	`undecorated' and `override-redirect' frame parameters.
	(x_wm_set_size_hint): None for child frames.
	(xg_set_undecorated, xg_frame_restack, xg_set_skip_taskbar)
	(xg_set_no_focus_on_map, xg_set_no_accept_focus)
	(xg_set_override_redirect): New functions.
	(xg_update_scrollbar_pos, xg_update_horizontal_scrollbar_pos):
	Don't let scrollbars obscure child frames.
	* src/gtkutil.h: (xg_set_undecorated, xg_frame_restack)
	(xg_set_skip_taskbar, xg_set_no_focus_on_map)
	(xg_set_no_accept_focus, xg_set_override_redirect): Add extern
	declarations.
	* src/nsfns.m (ns_frame_parm_handlers): Add entries for new
	frame parameters.
	(Fx_create_frame): Install `min-width' and `min-height' frame
	parameters.
	* src/nsterm.m (mouseMoved:): Handle focus_follows_mouse change.
	* src/w32fns.c (WS_EX_NOACTIVATE): Define if necessary.
	(x_real_positions): Handle child frames.
	(x_set_menu_bar_lines): Don't for child frames.
	(x_set_undecorated, x_set_parent_frame, x_set_skip_taskbar)
	(x_set_no_focus_on_map, x_set_no_accept_focus)
	(x_set_z_group): New functions.
	(w32_createvscrollbar, w32_createhscrollbar): Don't draw
	scroll bars over child frames.
	(w32_createwindow): Handle new frame parameters and child frames.
	(w32_wnd_proc): Let mouse clicks into a child frame activate
	the frame.  Try to handle the `no-accept-focus' parameter.  Do
	SetFocus when our window is brought to top or becomes the
	foreground window.
	(w32_window): Don't initialize menu bar for child frames.
	(Fx_create_frame): Handle new frame parameters.
	(x_create_tip_frame): Set explicit_parent slot.
	(w32_dialog_in_progress): New function.
	(Fx_file_dialog): Handle `z-group-above' frames.
	(w32_frame_list_z_order, Fw32_frame_list_z_order)
	(w32_frame_restack, Fw32_frame_restack): New functions.
	(w32_frame_parm_handlers): Add entries for new frame
	parameters.
	* src/w32font.c (Fx_select_font): Handle `z-group-above'
	frames during font selection dialogue.
	* src/w32term.c (construct_mouse_wheel): Construct mouse wheel
	event from F's w32 window.
	(w32_mouse_position): Handle child frames.
	(w32_set_vertical_scroll_bar, w32_set_horizontal_scroll_bar):
	Don't draw scroll bars over child frames.
	(w32_read_socket): Always erase background of child frames.
	When generating SELECT_WINDOW_EVENTs handle new value of
	`focus-follows-mouse' and handle `no-accept-focus' parameter.
	Handle `mouse-wheel-frame' parameter.
	(x_calc_absolute_position, x_set_offset, x_set_window_size):
	Handle child frames.
	(x_make_frame_visible): Handle child frames specially.  Handle
	`no-focus-on-map' parameter.
	* src/w32term.h (w32_dialog_in_progress): Add external
	declaration.
	* src/xdisp.c (x_consider_frame_title, prepare_menu_bars): Not
	for child frames.
	* src/xfns.c (Xm/MwmUtil.h): Include for WM hints.
	(PropMotifWmHints, PROP_MOTIF_WM_HINTS_ELEMENTS): Define for
	non-Motif, non-GTK case.
	(x_real_pos_and_offsets): Handle child frames.
	(x_set_undecorated, x_set_parent_frame)
	(x_set_no_focus_on_map, x_set_no_accept_focus)
	(x_set_override_redirect): New functions.
	(x_set_menu_bar_lines): Not for child frames.
	(x_window): Handle `undecorated' and `override_redirect' cases.
	(Fx_create_frame): Handle new frame parameters.
	(frame_geometry): Handle child frames and outer border.
	(x_frame_list_z_order, Fx_frame_list_z_order)
	(x_frame_restack, Fx_frame_restack): New functions.
	(Fx_file_dialog, Fx_select_font): Set x_menu_set_in_use.
	(x_frame_parm_handlers): Add entries for new frame parameters.
	* src/xmenu.c (x_menu_set_in_use): Handle `z-group-above'
	frames.
	* src/xterm.c (x_set_frame_alpha): Don't set alpha of parent
	for child frames.
	(XTmouse_position): Handle child frames.
	(x_scroll_bar_create, x_scroll_bar_expose): Don't let scroll
	bars obscure child frames.
	(handle_one_xevent): Handle child frame positions.  If necessary
	set `skip-taskbar' and reassign proper `z-group' when we are
	mapped.  When generating SELECT_WINDOW_EVENTs handle new value
	of `focus-follows-mouse'.  Handle `mouse-wheel-frame' parameter.
	Let mouse clicks into a child frame activate the frame.
	(x_calc_absolute_position, x_set_offset): Handle child frames
	specially.
	(x_set_skip_taskbar, x_set_z_group): New functions.
	(x_make_frame_visible): Handle child frames.
	(ATOM_REFS_INIT): Add entries for
	Xatom_net_wm_state_skip_taskbar, Xatom_net_wm_state_above,
	Xatom_net_wm_state_below.
	* src/xterm.h (top-level): Declare Xatom_net_wm_state_above,
	Xatom_net_wm_state_below and Xatom_net_wm_state_skip_taskbar.
	(x_set_skip_taskbar, x_set_z_group): Add extern declarations.

2017-04-11  Glenn Morris  <rgm@gnu.org>

	Update a package test for hydra

	* test/lisp/emacs-lisp/package-tests.el (with-package-test):
	Also bind package-gnupghome-dir, see eg
	http://hydra.nixos.org/build/51462182 .

2017-04-11  Martin Rudalics  <rudalics@gmx.at>

	Frame movement, focus and hook related changes

	New hook `move-frame-functions'.  Run `focus-in-hook'
	after switching to frame that gets focus.  Don't run
	XMoveWindow for GTK.

	* lisp/frame.el (handle-move-frame, frame-size-changed-p): New
	functions.

	* src/frame.c (do_switch_frame): Simplify code.
	(Fhandle_switch_frame): Switch frame before running
	`handle-focus-in'.
	(Vfocus_in_hook, Vfocus_out_hook): Clarify doc-strings.
	(Vmove_frame_functions): New hook variable.
	* src/keyboard.c (kbd_buffer_get_event): Handle
	MOVE_FRAME_EVENT.  Handle SELECT_WINDOW_EVENT separately.
	(head_table): Add Qmove_frame entry.
	(syms_of_keyboard): Add Qmove_frame.
	(keys_of_keyboard): Define key for `move-frame'.
	* src/termhooks.h (event_kind): Add MOVE_FRAME_EVENT.
	* src/w32term.c (w32_read_socket): Create MOVE_FRAME_EVENT.
	* src/window.c (run_window_size_change_functions): Record size of
	FRAME's minibuffer window too.
	* src/xterm.c (handle_one_xevent): Create MOVE_FRAME_EVENT.
	(x_set_offset): For GTK call gtk_widget_move instead of
	XMoveWindow.

2017-04-11  Werner LEMBERG  <wl@gnu.org>

	Avoid abort in ftfont.c due to faulty fonts

	* src/ftfont.c (ftfont_get_metrics): Try loading the font without
	hinting, before aborting.  (Bug#25945)

2017-04-11  Eli Zaretskii  <eliz@gnu.org>

	Document 'line-pixel-height'

	* doc/lispref/display.texi (Size of Displayed Text): Document
	line-pixel-height.  Suggested by Tak Kunihiro
	<tkk@misasa.okayama-u.ac.jp>.  (Bug#26379)

2017-04-11  Jens Lechtenboerger  <jens.lechtenboerger@fsfe.org>

	Introduce customizable variable 'package-gnupghome-dir'

	* lisp/emacs-lisp/package.el (package-import-keyring)
	(package--check-signature-content, package-check-signature):
	Use new variable package-gnupghome-dir to control which GnuPG
	homedir to use.
	* doc/emacs/package.texi: Mention package-gnupghome-dir.
	* etc/NEWS: Mention package-gnupghome-dir.

2017-04-11  Martin Rudalics  <rudalics@gmx.at>

	Set x_gtk_use_window_move by default for fixing bug#25851 and bug#25943

	This activates a change that was installed a few weeks ago but whose
	ChangeLog was inadvertently dropped during its commit.  The proper
	ChangeLog is included below as part of the present commit.

	* src/gtkutil.c (xg_set_geometry): When x_gtk_use_window_move
	is set avoid calling x_gtk_parse_geometry (Bug#25851).
	(x_wm_set_size_hint): When x_gtk_use_window_move is set, set
	PPosition, USPosition and USSize flags if requested.
	* src/xterm.c (x_set_offset): With GTK when
	x_gtk_use_window_move is set, leave it entirely to
	gtk_window_move to position the window and skip any
	post-adjustments (Bug#25851 and Bug#25943).
	(x_gtk_use_window_move): New variable.

2017-04-10  Alan Mackenzie  <acm@muc.de>

	Fix a loop in C Mode caused by inadequate analysis of comments.

	After M-;, and the insertion of the opening "/*", the CC Mode after-change
	function got confused, since the new comment opener matched the end of a
	subsequent comment, but moving back over that comment did not come back to the
	starting point.  Fix this.

	* lisp/progmodes/cc-engine.el (c-end-of-macro): Add a limit parameter, wherer
	point is left if no end-of-macro is found before it.
	(c-forward-sws): Change the `safe-start' mechanism.  Now `safe-start' is
	non-nil except where we have an unclosed block comment at the end of a macro.
	This enables us to populate the cache more fully, at the cost of some run
	time.

2017-04-10  Lars Brinkhoff  <lars@nocrew.org>

	Add PVSIZE function to return the size of a pseudovector.

	* src/lisp.h (PVSIZE): New function.

	* src/chartab.c (copy_char_table):
	* src/data.c (Ftype_of, Finteractive_form, Faref, Faset):
	* src/doc.c (Fdocumentation, store_function_docstring):
	* src/eval.c (Fcommandp, funcall_lambda, lambda_arity, Ffetch_bytecode):
	* src/fns.c (Flength, Fcopy_sequence):
	* src/font.h (FONT_SPEC_P, FONT_ENTITY_P, FONT_OBJECT_P):
	* src/lread.c (substitute_object_recurse):
	* src/print.c (print_object):
	  Use it.

2017-04-10  Michael Albinus  <michael.albinus@gmx.de>

	Add Tramp tests

	* lisp/net/tramp.el (tramp-syntax): Adapt docstring.

	* test/lisp/net/tramp-tests.el
	(tramp-test01-file-name-syntax-simplified)
	(tramp-test01-file-name-syntax-separate)
	(tramp-test02-file-name-dissect-simplified)
	(tramp-test02-file-name-dissect-separate): New tests.

2017-04-10  Martin Rudalics  <rudalics@gmx.at>

	Make sure that `shell' makes BUFFER current

	* lisp/shell.el (shell): Restrict scope of recently added
	`with-current-buffer' to make sure that BUFFER is current when
	`shell' returns.

2017-04-10  Jim Blandy  <jimb@red-bean.com>

	Default to PCRE syntax when reading .hgignore

	* lisp/vc/vc-hg.el (vc-hg--slurp-hgignore-1):
	Default to the PCRE syntax (bug#26249).

2017-04-09  Michael Albinus  <michael.albinus@gmx.de>

	Document Tramp changes

	* doc/misc/tramp.texi (Change file name syntax): New node.

	* etc/NEWS: Mention `tramp-change-syntax'.

	* lisp/net/tramp.el (tramp-file-name-regexp): Reinsert it.
	External packages uses it.
	(tramp-syntax): Set also `tramp-file-name-regexp'.

2017-04-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib (Bug#26398)

	This incorporates:
	2017-04-08 getopt: prefer - to _ in new file names
	2017-04-08 getopt: port recent getopt changes to macOS
	* .gitignore: Add lib/getopt-cdefs.h.
	* lib/getopt-cdefs.in.h: Rename from lib/getopt_cdefs.in.h.
	* lib/getopt-core.h: Rename from lib/getopt_core.h.
	* lib/getopt-ext.h: Rename from lib/getopt_ext.h.
	* lib/getopt-pfx-core.h: Rename from lib/getopt_pfx_core.h.
	* lib/getopt-pfx-ext.h: Rename from lib/getopt_pfx_ext.h.
	* lib/getopt.in.h, lib/unistd.in.h, m4/getopt.m4:
	Copy from Gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.

2017-04-09  Ken Raeburn  <raeburn@raeburn.org>

	Write updated loaddefs to a temporary file and rename into place.

	In a parallel build, byte compilation can be running at the same times
	as loaddefs.el is being regenerated.  However, in a CANNOT_DUMP build,
	loaddefs.el is read at startup and must always be in a usable state.

	* lisp/Makefile.in ($(lisp)/loaddefs.el): Write generated output to
	loaddefs.el.new and then rename it to loaddefs.el.

2017-04-09  Glenn Morris  <rgm@gnu.org>

	In the manual, mention pops and imaps

	* doc/emacs/rmail.texi (Movemail, Remote Mailboxes):
	Mention pops and imaps protocols.

2017-04-09  Glenn Morris  <rgm@gnu.org>

	* doc/emacs/rmail.texi: Prefer @command to @code for movemail.

2017-04-09  Sergey Poznyakoff  <gray@gnu.org>

	Fix rmail handling of movemail protocols (bug#18278)

	* lisp/mail/rmail.el (rmail-remote-proto-p): New function.
	(rmail-parse-url): Return protocol in second list element.
	Only use passwords with remote mailboxes.
	(rmail-insert-inbox-text): Handle non-simple local
	mailboxes (maildir, MH, etc.).

2017-04-09  Glenn Morris  <rgm@gnu.org>

	Fix typos in manual re movemail local mailboxes

	* doc/emacs/rmail.texi (Movemail, Other Mailbox Formats):
	Fix examples of local mailbox urls.

2017-04-08  Glenn Morris  <rgm@gnu.org>

	* lisp/gnus/nnmail.el (nnmail-crosspost-link-function): Simplify.

2017-04-08  Glenn Morris  <rgm@gnu.org>

	Remove references to OS/2 in code, doc, and comments

	* lisp/gnus/nnheader.el (nnheader-read-timeout)
	(nnheader-file-name-translation-alist): Remove OS/2 case, and simplify.
	* lisp/emulation/viper-util.el (viper-color-defined-p):
	* lisp/net/pop3.el (pop3-read-timeout):
	* lisp/net/imap.el (imap-read-timeout):
	* lisp/url/url-privacy.el (url-setup-privacy-info): Remove OS/2 case.
	* lisp/emulation/viper-ex.el (viper-glob-function):
	* lisp/vc/ediff-util.el (ediff-submit-report): Doc fix.
	* lisp/cus-edit.el (custom-display): Remove "pm" (OS/2).
	* doc/emacs/msdos-xtra.texi (MS-DOS):
	* doc/misc/gnus.texi (Various Various):
	* doc/misc/viper.texi (Rudimentary Changes): Remove mentions of OS/2.

2017-04-08  Michael Albinus  <michael.albinus@gmx.de>

	Tune Tramp syntax

	* lisp/net/tramp-cmds.el (tramp-change-syntax):
	Use `tramp-syntax-values'.

	* lisp/net/tramp-compat.el (tramp-compat-tramp-syntax): New defsubst.

	* lisp/net/tramp.el (tramp-syntax): Rename possible values.
	(tramp-syntax-values): New defun.
	(tramp-prefix-format, tramp-method-regexp)
	(tramp-postfix-method-format, tramp-prefix-ipv6-format)
	(tramp-postfix-ipv6-format, tramp-postfix-host-format)
	(tramp-completion-file-name-regexp): Use `tramp-compat-tramp-syntax'
	and changed values.
	(tramp-completion-file-name-regexp-default): Rename from
	`tramp-completion-file-name-regexp-unified'.  Adapt docstring.
	(tramp-completion-file-name-regexp-simplified): Rename from
	`tramp-completion-file-name-regexp-old-style'.  Adapt docstring.
	(tramp-initial-completion-file-name-regexp):
	Use `tramp-completion-file-name-regexp-default'.
	(tramp-run-real-handler): Do not autoload any longer.

2017-04-08  Mark Oteiza  <mvoteiza@udel.edu>

	Replace more nested ifs with cond

	This is a continuation of d526047 "Replace more nested ifs with cond".
	* lisp/play/dunnet.el (dun-firstword, dun-firstwordl, dun-cat): Use
	when and cond where appropriate.

2017-04-08  Mark Oteiza  <mvoteiza@udel.edu>

	Adjust the edebug spec of if-let*

	This was fixed in Bug#24748, but now looking more closely, using gate in
	the spec seems correct.  See (info "(elisp) Backtracking").
	* lisp/emacs-lisp/subr-x.el (if-let*): Use gate in edebug spec.

2017-04-08  Mark Oteiza  <mvoteiza@udel.edu>

	Replace some uses of cl-member-if with apply

	From the mhtml-mode series.  Some of the uses of cl-lib are not
	necessary.
	* lisp/align.el: Don't require cl-lib.
	(align-region): Use apply instead of cl-member-if.
	* lisp/emulation/viper.el: Don't require cl-lib.
	(viper-mode, this-major-mode-requires-vi-state): Use apply instead of
	cl-member-if.

2017-04-08  Philipp Stephani  <phst@google.com>

	Validate SPEC of `dolist', cf. Bug#25477.

	* lisp/subr.el (dolist): Test type and length of SPEC.
	* test/lisp/subr-tests.el (subr-tests--dolist--wrong-number-of-args):
	Add unit test.

2017-04-08  Philipp Stephani  <phst@google.com>

	Add unit test for Bug#26378

	* test/lisp/vc/ediff-diff-tests.el
	(ediff-diff-tests--ediff-exec-process--nil): New unit test.

2017-04-08  Lars Brinkhoff  <lars@nocrew.org>

	Fix circular read syntax for records.

	* src/lread.c (substitute_object_recurse): Work with records.

	* test/src/lread-tests.el (lread-record-1): New test.

2017-04-08  Paul Eggert  <eggert@cs.ucla.edu>

	Deprecate copy-record in favor of copy-sequence

	Since copy-sequence seems to be needed anyway for records, have it
	work on records, and remove copy-record as being superfluous.
	* doc/lispref/records.texi (Records, Record Functions):
	* lisp/emacs-lisp/cl-macs.el (cl-defstruct):
	* lisp/emacs-lisp/eieio.el (make-instance, clone):
	* test/src/alloc-tests.el (record-3):
	Use copy-sequence, not copy-record, to copy records.
	* doc/lispref/sequences.texi (Sequence Functions)
	(Array Functions): Document that aref and copy-sequence
	work on records.
	* etc/NEWS: Omit copy-record.
	* src/alloc.c (Fcopy_record): Remove.
	* src/data.c (Faref): Document that arg can be a record.
	* src/fns.c (Fcopy_sequence): Copy records, too.

2017-04-08  Paul Eggert  <eggert@cs.ucla.edu>

	Fix dependency checking in src/Makefile.in

	* src/Makefile.in (AUTO_DEPEND, DEPDIR, DEPFLAGS): Move includes of
	dependency files until after ALLOBJS is defined, since it uses ALLOBJS.
	Otherwise, some dependencies will be missed.

2017-04-08  Paul Eggert  <eggert@cs.ucla.edu>

	Minor tuneup of write-region change

	* src/fileio.c (write_region): Use SCHARS, not Flength,
	on a value known to be a string.

2017-04-08  Noam Postavsky  <npostavs@gmail.com>

	Adjust write-region so file name is at the beginning again

	* lisp/epa-file.el (epa-file-write-region):
	* lisp/gnus/mm-util.el (mm-append-to-file):
	* lisp/jka-compr.el (jka-compr-write-region):
	* lisp/net/ange-ftp.el (ange-ftp-write-region):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-write-region):
	* lisp/net/tramp-sh.el (tramp-sh-handle-write-region):
	* src/fileio.c (write_region): Put file name at the beginning and move
	number of characters to the end of the message.

2017-04-08  Kaushal Modi  <kaushal.modi@gmail.com>

	Check that file argument is a string

	* lisp/vc/ediff-diff.el (ediff-exec-process): Check that the argument
	  passed to `file-local-copy' is a string (Bug#26378).  Also fix
	  the existing comment for this function, and convert it to its
	  doc-string.

2017-04-08  Noam Postavsky  <npostavs@gmail.com>

	Fix handling of non-integer START param to write-region

	The previous patch for Bug#354 incorrectly assumed that START would
	always be an integer.

	* lisp/epa-file.el (epa-file-write-region):
	* lisp/jka-compr.el (jka-compr-write-region):
	* lisp/net/ange-ftp.el (ange-ftp-write-region):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-write-region):
	* lisp/net/tramp-sh.el (tramp-sh-handle-write-region):
	* src/fileio.c (write_region): Handle nil and string values of START.

2017-04-07  Glenn Morris  <rgm@gnu.org>

	* lisp/textmodes/rst.el (rst-package-emacs-version-alist): Fixes.

2017-04-07  Michael Albinus  <michael.albinus@gmx.de>

	Add Tramp versions to `customize-package-emacs-version-alist'

	* lisp/net/trampver.el (customize-package-emacs-version-alist):
	Add Tramp versions to `customize-package-emacs-version-alist'.

2017-04-07  Tom Tromey  <tom@tromey.com>

	* lisp/textmodes/rst.el (rst-toc-link-keymap): Move before first use.

2017-04-07  Lars Brinkhoff  <lars@nocrew.org>

	* doc/lispref/records.texi (Record Functions): fix typo.

2017-04-07  Paul Eggert  <eggert@cs.ucla.edu>

	More casefiddle minor fixes

	* src/casefiddle.c (case_character_impl): Omit unnecessary casts.
	(case_character_impl): Avoid reevaluation of CHAR_TABLE_REF.
	(GREEK_CAPITAL_LETTER_SIGMA): Fix typo in my previous change.

2017-04-07  Jeff Clough  <kb1vqh@gmail.com>

	Output number of characters added to file (Bug#354)

	* src/fileio.c (write_region):
	* lisp/epa-file.el (epa-file-write-region):
	* lisp/jka-compr.el (jka-compr-write-region):
	* lisp/net/ange-ftp.el (ange-ftp-write-region):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-write-region):
	* lisp/net/tramp-sh.el (tramp-sh-handle-write-region):
	* lisp/gnus/mm-util.el (mm-append-to-file): Functions now output
	characters written in addition to file name.
	* doc/lispref/files.texi: Added documentation to write-region and
	append-to-file describing their output.

2017-04-07  Noam Postavsky  <npostavs@users.sourceforge.net>

	Fix ‘!NILP (Vpurify_flag)’ assertion failure during temacs bootstrap

	The recent changes to src/casefiddle.c cause build failure as seen
	below:

	    Starting program: /home/npostavs/src/emacs/emacs-bootstrapping/src/temacs
		--batch --load loadup bootstrap
	    [Thread debugging using libthread_db enabled]
	    Using host libthread_db library "/usr/lib/libthread_db.so.1".
	    Loading loadup.el (source)...
	    Using load-path (/home/npostavs/src/emacs/emacs-bootstrapping/lisp
		/home/npostavs/src/emacs/emacs-bootstrapping/lisp/emacs-lisp
		/home/npostavs/src/emacs/emacs-bootstrapping/lisp/language
		/home/npostavs/src/emacs/emacs-bootstrapping/lisp/international
		/home/npostavs/src/emacs/emacs-bootstrapping/lisp/textmodes
		/home/npostavs/src/emacs/emacs-bootstrapping/lisp/vc)
	    Loading emacs-lisp/byte-run (source)...
	    Loading emacs-lisp/backquote (source)...
	    Loading subr (source)...
	    Loading version (source)...
	    Loading widget (source)...
	    Loading custom (source)...
	    Loading emacs-lisp/map-ynp (source)...
	    Loading international/mule (source)...
	    Loading international/mule-conf (source)...

	    lread.c:3914: Emacs fatal error: assertion failed: !NILP (Vpurify_flag)

	    Breakpoint 1, terminate_due_to_signal at emacs.c:363
	    363	  signal (sig, SIG_DFL);
	    (gdb) bt
	    #0  0x0000000000579826 in terminate_due_to_signal at emacs.c:363
	    #1  0x000000000060ec33 in die at alloc.c:7352
	    #2  0x000000000066db40 in intern_c_string_1 at lread.c:3914
	    #3  0x0000000000576884 in intern_c_string at lisp.h:3790
	    #4  0x00000000005dc84f in prepare_casing_context at casefiddle.c:69
	    #5  0x00000000005dd37f in casify_object at casefiddle.c:311
	    #6  0x00000000005dd47f in Fcapitalize at casefiddle.c:356
	    #7  0x00000000006325ac in eval_sub at eval.c:2219
	    #8  0x0000000000632368 in eval_sub at eval.c:2184
	    #9  0x000000000063446c in apply_lambda at eval.c:2875
	    #10 0x00000000006329af in eval_sub at eval.c:2294
	    #11 0x000000000062d462 in Fprogn at eval.c:449
	    #12 0x000000000062d4cf in prog_ignore at eval.c:461
	    #13 0x000000000062f19c in Fwhile at eval.c:982
	    #14 0x00000000006321f4 in eval_sub at eval.c:2172
	    #15 0x000000000062d462 in Fprogn at eval.c:449
	    #16 0x000000000062f0c4 in Flet at eval.c:963
	    #17 0x00000000006321f4 in eval_sub at eval.c:2172
	    #18 0x0000000000632963 in eval_sub at eval.c:2290
	    #19 0x000000000062d462 in Fprogn at eval.c:449
	    #20 0x000000000062f0c4 in Flet at eval.c:963
	    #21 0x00000000006321f4 in eval_sub at eval.c:2172
	    #22 0x0000000000668caa in readevalloop at lread.c:1927
	    #23 0x0000000000667253 in Fload at lread.c:1332
	    #24 0x0000000000632683 in eval_sub at eval.c:2233
	    #25 0x0000000000668caa in readevalloop at lread.c:1927
	    #26 0x0000000000667253 in Fload at lread.c:1332
	    #27 0x0000000000632683 in eval_sub at eval.c:2233
	    #28 0x0000000000631be5 in Feval at eval.c:2041
	    #29 0x000000000057e1af in top_level_2 at keyboard.c:1121
	    #30 0x000000000062ffc7 in internal_condition_case at eval.c:1324
	    #31 0x000000000057e1f0 in top_level_1 at keyboard.c:1129
	    #32 0x000000000062f51e in internal_catch at eval.c:1091
	    #33 0x000000000057e0ea in command_loop at keyboard.c:1090
	    #34 0x000000000057d6d5 in recursive_edit_1 at keyboard.c:697
	    #35 0x000000000057d8b4 in Frecursive_edit at keyboard.c:768
	    #36 0x000000000057b55b in main at emacs.c:1687

	    Lisp Backtrace:
	    "capitalize" (0xffffcf70)
	    "format" (0xffffd130)
	    "define-charset" (0xffffd370)
	    "while" (0xffffd560)
	    "let" (0xffffd7c0)
	    "dolist" (0xffffd910)
	    "let" (0xffffdb70)
	    "load" (0xffffdfe0)
	    "load" (0xffffe4a0)

	* src/casefiddle.c (syms_of_casefiddle): Declare four new symbols:
	Qtitlecase, Qspecial_uppercase, Qspecial_lowercase and
	Qspecial_titlecase.
	(prepare_casing_context): Use aforementioned symbols.

2017-04-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This merges some getopt fixes from Zack Weinberg, and affects only
	non-GNUish platforms.  It incorporates:
	2017-04-06 getopt-gnu: omit some duplicate code
	2017-04-06 getopt-posix: use angle-bracket include
	2017-04-06 getopt: annotate files with relationship to glibc
	2017-04-06 getopt: split up getopt.in.h and eliminate __need_getopt
	2017-04-06 getopt: better handling of ambiguous options
	2017-04-06 getopt: refactor long-option handling
	2017-04-06 getopt: tidy up _getopt_initialize a bit
	2017-04-06 getopt: merge from glibc: repetition reduction
	2017-04-06 getopt: clean up error reporting
	2017-04-06 getopt: fix fencepost error in ambiguous-W-option handling
	2017-04-06 getopt: clean up getopt.c and getopt1.c file headers
	2017-04-06 getopt: harmonize comments with glibc
	2017-04-06 getopt: remove USE_NONOPTION_FLAGS
	2017-04-06 getopt: tabify, in preparation for merge with glibc
	2017-04-06 md5, sha1, sha256, sha512: Add comments re correctness
	* build-aux/config.sub, doc/misc/texinfo.tex, lib/getopt.c:
	* lib/getopt.in.h, lib/getopt1.c, lib/getopt_int.h, lib/md5.c:
	* lib/md5.h, lib/sha1.c, lib/sha1.h, lib/sha256.c, lib/sha256.h:
	* lib/sha512.c, lib/sha512.h, lib/unistd.in.h, m4/getopt.m4:
	Copy from gnulib.
	* lib/getopt_cdefs.in.h, lib/getopt_core.h, lib/getopt_ext.h:
	* lib/getopt_pfx_core.h, lib/getopt_pfx_ext.h:
	New files, taken from gnulib.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4:
	Regenerate.

2017-04-07  Hong Xu  <hong@topbug.net>

	* src/search.c (Fre_search_forward, Fre_search_backward): Improve
	doc (Bug#25193).

2017-04-07  Noam Postavsky  <npostavs@gmail.com>

	Mention that processes start in default-directory (Bug#18515)

	* doc/lispref/processes.texi (Synchronous Processes):
	(Asynchronous Processes):
	* lisp/subr.el (start-process):
	* src/callproc.c (call-process): Mention that the subprocess starts in
	`default-directory' when local, suggest `start-file-process' and
	`process-file' otherwise.

2017-04-07  Noam Postavsky  <npostavs@gmail.com>

	* src/xdisp.c (vmessage, message): Clarify commentary.

2017-04-07  Paul Eggert  <eggert@cs.ucla.edu>

	Minor casefiddle.c cleanups

	* src/casefiddle.c: Redo recent changes to match GNU style,
	and prefer C99-style decls within blocks.
	(GREEK_CAPITAL_LETTER_SIGMA): Rename from CAPITAL_SIGMA, so that
	we are merely using the Unicode name, and make it a constant
	rather than a macro.  All uses changed.
	(SMALL_SIGMA): Remove; unused.
	(GREEK_SMALL_LETTER_FINAL_SIGMA): Rename from SMALL_FINAL_SIGMA,
	and make it a constant rather than a macro.  All uses changed.
	(do_casify_multibyte_string): Use ‘verify’ rather than an
	unportable static_assertion local.

2017-04-07  Paul Eggert  <eggert@cs.ucla.edu>

	* lisp/international/README: Update to match current list.

2017-04-06  Paul Eggert  <eggert@cs.ucla.edu>

	Fix 'make clean' in lib subdirectory

	* lib/Makefile.in (clean): Remove *-t files.
	(mostlyclean): Remove MOSTLYCLEANFILES that are not *-t files.
	This removes files like lib/getopt.h that should be removed
	even if this configuration did not need to build them.
	(maintainer-clean): Remove TAGS here, not in distclean,
	to be consistent with ../src/Makefile.in.

2017-04-06  Michael Albinus  <michael.albinus@gmx.de>

	Add new Tramp syntax

	* lisp/net/tramp-cmds.el (tramp-change-syntax): New defun.

	* lisp/net/tramp.el (tramp-syntax): Change default to `def'.
	Add :set function.
	(tramp-prefix-port-format): Simplify.
	(tramp-file-name-regexp-separate): Remove.
	(tramp-initial-file-name-regexp)
	(tramp-completion-file-name-regexp-old-style)
	(tramp-initial-completion-file-name-regexp): New defconst.
	(tramp-prefix-format, tramp-prefix-regexp)
	(tramp-method-regexp, tramp-postfix-method-format)
	(tramp-postfix-method-regexp, tramp-prefix-ipv6-format)
	(tramp-prefix-ipv6-regexp, tramp-postfix-ipv6-format)
	(tramp-postfix-ipv6-regexp)
	(tramp-postfix-host-format, tramp-postfix-host-regexp)
	(tramp-remote-file-name-spec-regexp)
	(tramp-file-name-structure, tramp-file-name-regexp)
	(tramp-completion-file-name-regexp)
	(tramp-rfn-eshadow-update-overlay-regexp): Change them to be defuns.
	(tramp-tramp-file-p, tramp-find-method)
	(tramp-dissect-file-name, tramp-make-tramp-file-name)
	(tramp-completion-make-tramp-file-name)
	(tramp-rfn-eshadow-update-overlay)
	(tramp-register-autoload-file-name-handlers)
	(tramp-register-file-name-handlers)
	(tramp-unload-file-name-handlers)
	(tramp-completion-handle-file-name-all-completions)
	(tramp-completion-dissect-file-name, tramp-clear-passwd):
	* lisp/net/tramp-ftp.el (tramp-ftp-file-name-handler):
	* lisp/net/tramp-sh.el (tramp-sh-handle-vc-registered)
	(tramp-compute-multi-hops): Use them.

2017-04-06  Michal Nazarewicz  <mina86@mina86.com>

	Implement special sigma casing rule  (bug#24603)

	In Greek, a sigma character has two lower case forms which depend on
	their position in the word.  Implement logic determining it.

	* src/casefiddle.c (struct casing_context, case_character_impl): Don’t
	assume inword is true when flag is CASE_UP and false when flag is
	CASE_DOWN.  For final sigma detection we need this information tracked
	reliably;.
	(CAPITAL_SIGMA, SMALL_SIGMA, SMALL_FINAL_SIGMA): New macros defining
	Unicode code point of different forms of sigma letter.
	(case_character): Implement support for final sigma casing.
	(do_casify_multibyte_string, do_casify_multibyte_region): Update after
	changes to case_character.

	* test/src/casefiddle-tests.el (casefiddle-tests-casing): Add test
	cases for final sigma.

2017-04-06  Michal Nazarewicz  <mina86@mina86.com>

	Support casing characters which map into multiple code points  (bug#24603)

	Implement unconditional special casing rules defined in Unicode standard.

	Among other things, they deal with cases when a single code point is
	replaced by multiple ones because single character does not exist (e.g.
	‘ﬁ’ ligature turning into ‘FL’) or is not commonly used (e.g. ß turning
	into SS).

	* admin/unidata/SpecialCasing.txt: New data file pulled from Unicode
	standard distribution.
	* admin/unidata/README: Mention SpecialCasing.txt.

	* admin/unidata/unidata-gen.el (unidata-gen-table-special-casing,
	unidata-gen-table-special-casing--do-load): New functions generating
	‘special-uppercase’, ‘special-lowercase’ and ‘special-titlecase’
	character Unicode properties built from the SpecialCasing.txt Unicode
	data file.

	* src/casefiddle.c (struct casing_str_buf): New structure for
	representing short strings used to handle one-to-many character
	mappings.

	(case_character_imlp): New function which can handle one-to-many
	character mappings.
	(case_character, case_single_character): Wrappers for the above
	functions.  The former may map one character to multiple (or no)
	code points while the latter does what the former used to do (i.e.
	handles one-to-one mappings only).

	(do_casify_natnum, do_casify_unibyte_string,
	do_casify_unibyte_region): Use case_single_character.
	(do_casify_multibyte_string, do_casify_multibyte_region): Support new
	features of case_character.
	* (do_casify_region): Updated to reflact do_casify_multibyte_string
	changes.

	(casify_word): Handle situation when one character-length of a word
	can change affecting where end of the word is.

	(upcase, capitalize, upcase-initials): Update documentation to mention
	limitations when working on characters.

	* test/src/casefiddle-tests.el (casefiddle-tests-char-properties):
	Add test cases for the newly introduced character properties.
	(casefiddle-tests-casing): Update test cases which are now passing.

	* test/lisp/char-fold-tests.el (char-fold--ascii-upcase,
	char-fold--ascii-downcase): New functions which behave like old ‘upcase’
	and ‘downcase’.
	(char-fold--test-match-exactly): Use the new functions.  This is needed
	because otherwise ﬁ and similar characters are turned into their multi-
	-character representation.

	* doc/lispref/strings.texi: Describe issue with casing characters versus
	strings.
	* doc/lispref/nonascii.texi: Describe the new character properties.

2017-04-06  Michal Nazarewicz  <mina86@mina86.com>

	Split up casify_region function  (bug#24603)

	No functional changes at this time but splitting casify_region into
	a function dealing with multibyte and another dealing with unibyte
	buffers will make future code changes slightly easier.

	* src/casefiddle.c (casify_region): Move most of the code into two
	new functions:
	(do_casify_multibyte_region, do_casify_unibyte_region): new functions.

2017-04-06  Michal Nazarewicz  <mina86@mina86.com>

	Add support for title-casing letters  (bug#24603)

	* src/casefiddle.c (struct casing_context, prepare_casing_context): Add
	titlecase_char_table member.  It’s set to the ‘titlecase’ Unicode
	property table if capitalization has been requested.
	(case_character): Make use of the titlecase_char_table to title-case
	initial characters when capitalising.

	* test/src/casefiddle-tests.el (casefiddle-tests--characters,
	casefiddle-tests-casing): Update test cases which are now passing.

2017-04-06  Michal Nazarewicz  <mina86@mina86.com>

	Introduce case_character function

	Move single-character casing logic into a separate function so that
	it is collected in a single place.  This will make future changes to
	the logic easier.  This commit introduces no functionality changes.

	* src/casefiddle.c (struct casing_context, prepare_casing_context): New
	structure for saving casing context and function to initialize it.
	(case_character): New function which cases character base on provided
	context.
	(do_casify_integer, do_casify_multibyte_string,
	do_casify_unibyte_string, casify_object, casify_region): Convert to
	use casing_context and case_character.

2017-04-06  Michal Nazarewicz  <mina86@mina86.com>

	Split casify_object into multiple functions

	casify_object had three major cases to cover and those were mostly
	independent of each other.  Move those branches to separate function
	so it’s easier to comprehend each individual case.

	While at it, use somewhat more descriptive ch and cased variable names
	rather than c and c1.

	This commit introduces no functional changes.

	* src/casefiddle.c (casify_object): Split into…
	(do_casify_integer, do_casify_multibyte_string,
	do_casify_unibyte_string): …new functions.

2017-04-06  Lars Brinkhoff  <lars@nocrew.org>

	Update documentation for type semantics of records.

	* doc/lispref/objects.texi (Record Type): improve description of what
	`type-of' returns for records.
	(Type Descriptors): new section.
	* doc/lispref/elisp.texi: reference it.
	* doc/lispref/records.texi (Records): reference it.  Document
	behavior when type slot is a record.

	* admin/alloc-colors.c (Fmake_record, Frecord): mention type desciptors.

2017-04-06  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/help-fns.el (describe-symbol): `nil' is not an interesting default.

2017-04-06  Tom Tromey  <tom@tromey.com>

	require cl-lib to fix fallout from mhtml series

	* lisp/align.el, lisp/calc/calc-embed.el, lisp/cedet/semantic.el,
	lisp/emulation/viper.el: Require cl-lib.

2017-04-06  Ken Raeburn  <raeburn@raeburn.org>

	In CANNOT_DUMP builds, allow editing of files named "dump".

	* lisp/loadup.el: Perform the "dump" or "bootstrap" actions like
	calling dump-emacs only if dump-emacs is defined; otherwise, don't
	treat those command-line argument specially.

2017-04-06  Ken Raeburn  <raeburn@raeburn.org>

	In CANNOT_DUMP builds, don't prepare for unexec.

	Having a command-line argument of "dump" or "bootstrap" would trigger
	behavior like not installing signal handlers.  In CANNOT_DUMP modes,
	we should get signal handlers installed regardless of whatever funny
	file names we decide to edit.

	src/emacs.c (main) [CANNOT_DUMP]: Don't enable the "dumping"
	alterations to initialization that prepares the process for unexec.

2017-04-06  Ken Raeburn  <raeburn@raeburn.org>

	Allow a CANNOT_DUMP build to use exec-path during bootstrap.

	During a bootstrap, loading rmail.el invokes movemail to determine its
	flavor, but call-process doesn't work if exec-path is nil.

	* lisp/loadup.el: Only clear exec-path if dumping.

2017-04-06  Ken Raeburn  <raeburn@raeburn.org>

	Fix CANNOT_DUMP build on Darwin/macOS.

	* src/conf_post.h (malloc, realloc, free) [DARWIN_OS && emacs &&
	CANNOT_DUMP]: Don't define as unexec_malloc, etc.
	* src/emacs.c (main): Don't call unexec_init_emacs_zone.

2017-04-05  Tom Tromey  <tom@tromey.com>

	add two more mhtml tests

	* test/manual/indent/html-multi-2.html: New file.
	* test/manual/indent/html-multi-3.html: New file.

2017-04-05  Tom Tromey  <tom@tromey.com>

	enable mhtml-mode by default

	* lisp/files.el (auto-mode-alist): Reference mhtml-mode, not
	html-mode.
	(magic-fallback-mode-alist): Likewise.
	* lisp/net/eww.el (eww-view-source): Use mthml-mode.

2017-04-05  Tom Tromey  <tom@tromey.com>

	add mhtml-mode.el

	* etc/NEWS: Update.
	* lisp/textmodes/mhtml-mode.el: New file.
	* test/manual/indent/html-multi.html: New file.
	* test/lisp/textmodes/mhtml-mode-tests.el: New file.
	* doc/emacs/text.texi (HTML Mode): Mention mhtml-mode.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change sgml-mode to help multi-html mode

	* lisp/textmodes/sgml-mode.el (sgml-syntax-propertize-rules): New
	defconst.
	(sgml-syntax-propertize): Use it.
	(sgml--find-<>-backward): New function.
	(sgml-parse-tag-backward): Use it.

2017-04-05  Tom Tromey  <tom@tromey.com>

	make js.el respect prog-first-column

	* lisp/progmodes/js.el (js--proper-indentation): Call prog-first-column.

2017-04-05  Tom Tromey  <tom@tromey.com>

	make smie.el respect prog-first-column

	* lisp/emacs-lisp/smie.el (smie-indent-bob): Call prog-first-column.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change viper to use derived-mode-p

	* lisp/subr.el (provided-mode-derived-p): New function.
	(derived-mode-p): Use it.
	* lisp/emulation/viper.el (viper-mode): Use derived-mode-p.
	(this-major-mode-requires-vi-state): Use provided-mode-derived-p.
	(set-viper-state-in-major-mode): Use derived-mode-p.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change align to use derived-mode-p

	* lisp/align.el (align-region): Use derived-mode-p.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change org to use derived-mode-p

	* lisp/org/org-list.el (org-list-insert-radio-list): Use
	derived-mode-p.
	* lisp/org/org-table.el (orgtbl-setup, orgtbl-toggle-comment): Use
	derived-mode-p.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change semantic to use derived-mode-p

	* lisp/cedet/semantic.el (semantic-new-buffer-fcn): Use derived-mode-p.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change calc to use derived-mode-p

	* lisp/calc/calc-embed.el (calc-embedded-find-modes)
	(calc-embedded-make-info): Use derived-mode-p.

2017-04-05  Tom Tromey  <tom@tromey.com>

	change auto-insert to use derived-mode-p

	* lisp/autoinsert.el (auto-insert): Use derived-mode-p.

2017-04-05  Paul Eggert  <eggert@cs.ucla.edu>

	* lisp/info.el (Info-search): Fix typo in April 1 change.

2017-04-05  Paul Eggert  <eggert@cs.ucla.edu>

	Minor cleanups related to type-of

	* src/data.c (Frecordp): Rename from Frecordp_p, for consistency.
	* src/data.c (syms_of_data):
	* src/frame.c (syms_of_frame): Put all the primitive type names
	together, under the "Types that type-of returns" comment.

2017-04-05  Glenn Morris  <rgm@gnu.org>

	* doc/lispref/package.texi (Package Archives): Mention https.

2017-04-05  Glenn Morris  <rgm@gnu.org>

	Advertise https for homepage of gnu.org packages

	* lisp/emacs-lisp/package.el (describe-package-1):
	Use https, if supported, for the homepage of packages on gnu.org.

2017-04-05  Glenn Morris  <rgm@gnu.org>

	Default to https for elpa.gnu.org if gnutls available

	* lisp/emacs-lisp/package.el (package-archives):
	Default to https for elpa.gnu.org if gnutls is available.  Ref:
	https://lists.gnu.org/r/emacs-devel/2015-05/msg00130.html

2017-04-04  Paul Eggert  <eggert@cs.ucla.edu>

	Minor simplifications and doc for records

	* doc/lispref/records.texi (Records): Mention size limit.
	* etc/NEWS: Mention records.
	* src/alloc.c (allocate_pseudovector, allocate_record):
	Prefer 'PSEUDOVECTOR_SIZE_MASK' to its definiens.
	(allocate_record): Check arg range here, not in callers, as this
	simplifies the code.  Use allocate_vectorlike instead of
	allocate_vector, to avoid duplicate runtime tests.
	(Fmake_record, record): Don't mention PSEUDOVECTOR_SIZE_BITS in
	the doc string, as it is not visible to the user.
	(Fmake_record, record, Fcopy_record):
	Prefer make_lisp_ptr to XSETVECTOR.
	(record): Broaden memcpy to copy the type, too.

2017-04-04  Eli Zaretskii  <eliz@gnu.org>

	Fix recent changes in record data type

	* src/alloc.c (Fmake_record, Frecord, Fcopy_record): Avoid
	compiler warnings when 'ptrdiff_t' is narrower than 'long int'.

2017-04-04  Philipp Stephani  <phst@google.com>

	Make subprocess functions resolve the default directory

	`call-process' doesn't respect file name handlers in
	`default-directory', so `file-name-non-special' has to resolve them
	for `process-file', `start-file-process', and
	`shell-command' (Bug#25949).

	* lisp/files.el (file-name-non-special): Also resolve default
	directory for 'process-file', 'start-file-process', and
	'shell-command'.
	* test/lisp/files-tests.el
	(files-tests--file-name-non-special--subprocess): Add unit test.

2017-04-04  Philipp Stephani  <phst@google.com>

	Make ediff handle remote and quoted file names

	Quoted file names need to be unquoted before passed to
	subprocesses (Bug#25950).

	* lisp/vc/ediff-diff.el (ediff-exec-process): Handle remote and quoted
	file names.
	* test/lisp/vc/ediff-diff-tests.el
	(ediff-diff-tests--ediff-exec-process--quoted-file): Add unit test.

2017-04-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	Backward compatibility with pre-existing struct instances.

	* lisp/emacs-lisp/cl-lib.el (cl--old-struct-type-of): New function.
	(cl-old-struct-compat-mode): New minor mode.

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Pass `record' to
	cl-struct-define to signal use of record objects.

	* lisp/emacs-lisp/cl-preloaded.el (cl--struct-get-class,
	cl-struct-define): Enable legacy defstruct compatibility.

	* test/lisp/emacs-lisp/cl-lib-tests.el (cl-lib-old-struct,
	old-struct): New tests.

	* doc/lispref/elisp.texi, doc/lispref/records.texi: Document
	`old-struct-compat'.

2017-04-04  Lars Brinkhoff  <lars@nocrew.org>

	Make the URL library use records.

	* lisp/url/url.el, lisp/url/url-cache.el, lisp/url/url-dav.el,
	lisp/url/url-expand.el, lisp/url/url-file.el, lisp/url/url-imap.el,
	lisp/url/url-ldap.el: Use `url-p' instead of `vectorp'.

	* lisp/url/url-http.el (url-http): Check for type `url' instead of
	`vector'.

2017-04-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	Make EIEIO use records.

	* lisp/emacs-lisp/eieio-compat.el
	(eieio--generic-static-object-generalizer): Adjust to new tags.

	* lisp/emacs-lisp/eieio-core.el: Use records, and place the class object
	directly as tag.
	(eieio--object-class): Adjust to new tag representation.
	(eieio-object-p): Rewrite, and adapt to new `type-of' behavior.
	(eieio-defclass-internal): Use `make-record'.
	(eieio--generic-generalizer): Adjust generalizer code accordingly.

	* lisp/emacs-lisp/eieio.el (make-instance, clone): Use copy-record.

	* lisp/emacs-lisp/pcase.el (pcase-mutually-exclusive-predicates):
	Add `recordp'.

	* doc/lispref/records.texi, doc/misc/eieio.texi: Update for records.

2017-04-04  Lars Brinkhoff  <lars@nocrew.org>

	Make cl-defstruct use records.

	* lisp/emacs-lisp/cl-extra.el (cl--describe-class)
	(cl--describe-class-slots): Use the new `type-of'.

	* lisp/emacs-lisp/cl-generic.el (cl--generic-struct-tag): Use type-of.
	(cl--generic-struct-specializers): Adjust to new tag.

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): When type is nil, use records.
	Use the type symbol as the tag.  Use copy-record to copy structs.
	(cl--defstruct-predicate): New function.
	(cl--pcase-mutually-exclusive-p): Use it.
	(cl-struct-sequence-type): Can now return `record'.

	* lisp/emacs-lisp/cl-preloaded.el (cl--make-slot-desc): Adjust ad-hoc
	code to new format.
	(cl--struct-register-child): Work with records.
	(cl-struct-define): Don't touch the tag's symbol-value and
	symbol-function slots when we use the type as tag.

	* lisp/emacs-lisp/cl-print.el (cl-print-object): Adjust to new tag.

	* test/lisp/emacs-lisp/cl-lib-tests.el (cl-lib-defstruct-record):
	New test.

	* doc/lispref/records.texi, doc/misc/cl.texi: Update for records.

2017-04-04  Lars Brinkhoff  <lars@nocrew.org>

	Add record objects with user-defined types.

	* src/alloc.c (allocate_record): New function.
	(Fmake_record, Frecord, Fcopy_record): New functions.
	(syms_of_alloc): defsubr them.
	(purecopy): Work with records.

	* src/data.c (Ftype_of): Return slot 0 for record objects, or type
	name if record's type holds class.
	(Frecordp): New function.
	(syms_of_data): defsubr it.  Define `Qrecordp'.
	(Faref, Faset): Work with records.

	* src/fns.c (Flength): Work with records.

	* src/lisp.h (prec_type): Add PVEC_RECORD.
	(RECORDP, CHECK_RECORD, CHECK_RECORD_TYPE): New functions.

	* src/lread.c (read1): Add syntax for records.

	* src/print.c (PRINT_CIRCLE_CANDIDATE_P): Add RECORDP.
	(print_object): Add syntax for records.

	* test/lisp/emacs-lisp/cl-print-tests.el (cl-print-tests-2):
	New test.

	* test/src/alloc-tests.el (record-1, record-2, record-3):
	New tests.

	* doc/lispref/elisp.texi, doc/lispref/objects.texi,
	doc/lispref/records.texi: Add documentation for records.

2017-04-04  Tino Calancha  <tino.calancha@gmail.com>

	Fix a test in python-test.el

	Fix a test that breaks the test suite when it is run within a
	virtual environment.
	See following link for details:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00857.html
	* test/lisp/progmodes/python-tests.el
	(python-shell-calculate-process-environment-7): Bind
	python-shell-virtualenv-root to VIRTUAL_ENV when this var is set; otherwise
	bind it to '/env'.

2017-04-04  Noam Postavsky  <npostavs@gmail.com>

	Throw a `search-failed' derived error in Info search

	The original fix for Bug#6106 switched from signaling `search-failed'
	to `user-error'.  However, this breaks incremental searching over
	multiple nodes because the isearch code doesn't expect a `user-error'.

	* src/search.c (syms_of_search): New error, `user-search-failed',
	with `user-error' and `search-failed' as parents.
	* doc/lispref/errors.texi (Standard Errors): Document it.
	* etc/NEWS: Announce it.
	* lisp/info.el (Info-search): Use it instead of `user-error' so that
	isearch will handle failed searches correctly.

2017-04-03  Michael Albinus  <michael.albinus@gmx.de>

	Add Tramp test

	* doc/misc/tramp.texi (Remote processes): Fix typo.

	* lisp/shell.el (shell): Fix typo.

	* lisp/net/tramp.el (tramp-set-connection-local-variables): Simplify.

	* test/lisp/net/tramp-tests.el (tramp-test30-explicit-shell-file-name):
	New test.
	(tramp--test-special-characters, tramp--test-utf8): Adapt docstring.
	(tramp-test31-vc-registered)
	(tramp-test32-make-auto-save-file-name)
	(tramp-test33-make-nearby-temp-file)
	(tramp-test34-special-characters)
	(tramp-test34-special-characters-with-stat)
	(tramp-test34-special-characters-with-perl)
	(tramp-test34-special-characters-with-ls, tramp-test35-utf8)
	(tramp-test35-utf8-with-stat, tramp-test35-utf8-with-perl)
	(tramp-test35-utf8-with-ls)
	(tramp-test36-asynchronous-requests)
	(tramp-test37-recursive-load, tramp-test38-unload): Rename.

2017-04-03  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/ses.el: Silence byte-compiler warnings.

	(ses-jump, ses-recalculate-cell, ses-define-local-printer): Silence
	byte-compiler warnings.

2017-04-02  Glenn Morris  <rgm@gnu.org>

	Belated fixes for admin.el's M-x make-manuals-dist

	* admin/admin.el (make-manuals-dist-output-variables): Additions.
	(make-manuals-dist--1): Also copy docstyle.texi.

2017-04-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix bugs in simplified test dependencies

	Problem reported by Glenn Morris in:
	https://lists.gnu.org/r/emacs-devel/2017-04/msg00017.html
	* test/Makefile.in (LOGFILES, TESTS): Omit leading "./".
	(TESTS): Omit unnecessary patsubst.
	(test_template): Redo dependency heuristic, hopefully
	correctly this time.  It's the .log file that depends,
	not the phony test target.  Declare the phonies to be PHONY.
	Resurrect the exception for the *-tests subdirectory.
	Adjust to the fact that leading "./" is omitted now.

2017-04-02  Wilfred Hughes  <me@wilfred.me.uk>

	Fix typo in docstring

	* lisp/help.el: Fix typo.

2017-04-02  Michael Albinus  <michael.albinus@gmx.de>

	Apply connecion-local variables for shells

	* doc/misc/tramp.texi (Remote processes): Show use of connection-local
	variables.  Don't mention Emacs 23 anymore.
	(Frequently Asked Questions): Precise Emacs and MS Windows version.

	* lisp/files-x.el (connection-local-normalize-criteria):
	Suppress nil properties.
	(connection-local-set-profiles, with-connection-local-profiles):
	Adapt docstring.

	* lisp/shell.el (shell): Apply connecion-local variables.

2017-04-01  Evgeni Kolev  <evgenysw@gmail.com>  (tiny change)

	Propertize only perl prototype chars `][$%&*;+@\' as punctuation

	This prevents variables in signatures such as `sub add ($a, $b)' from
	being treated as punctuation.
	* lisp/progmodes/perl-mode.el (perl-syntax-propertize-function):
	Strictly match only prototype characters as punctuation.  (Bug#26037)

2017-04-01  Tom Tromey  <tom@tromey.com>

	fix two js-mode syntax propertization bugs

	Bug#26070:
	* lisp/progmodes/js.el (js--syntax-propertize-regexp-regexp): Add
	zero-or-one to regular expression.
	(js-syntax-propertize-regexp): Update.  Propertize body of regexp
	literal up to END.
	* test/lisp/progmodes/js-tests.el (js-mode-propertize-bug-1)
	(js-mode-propertize-bug-2): New tests.

2017-04-01  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify test dependency generation

	Generate default dependencies by using GNU extensions to ‘make’
	rather than via a hacky auxiliary program and script.
	* .gitignore: Remove test/make-test-deps.mk.
	* test/Makefile.in (ELFILES, LOGFILES, TESTS):
	Use :=, not =, to avoid multiple redundant invocations of ‘find’.
	(test_template): Infer dependency directly instead of via
	make-test-deps.mk.
	(check-doit): Prepend ‘@’ to avoid excessively long ‘make’ output.
	(clean): No need to clean make-test-deps.mk.
	(make-test-deps.mk): Remove rule.
	* test/make-test-deps.emacs-lisp: Remove.

2017-04-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	* test/lisp/emacs-lisp/cl-lib-tests.el: Improve symbol-macrolet tests

	(cl-lib-symbol-macrolet): Fix last test so it doesn't break the whole
	test suite.
	(cl-lib-symbol-macrolet-2): New test.

2017-04-01  Tino Calancha  <tino.calancha@gmail.com>

	Use only posix options in a ediff-ptch test

	* test/lisp/vc/ediff-ptch-tests.el (ediff-ptch-test-bug26084):
	Use just "-b" patch option.  Don't assume a particular suffix for
	the backup files.

2017-04-01  Jarno Malmari  <jarno@malmari.fi>

	Initial implementation of HTTP Digest qop for url

	This also refactors digest authentication functions in url-auth.el.

	* lisp/url/url-auth.el (url-digest-auth, url-digest-auth-create-key):
	(url-digest-auth-build-response, url-digest-auth-directory-id-assoc):
	(url-digest-auth-name-value-string, url-digest-auth-source-creds):
	(url-digest-cached-key, url-digest-cache-key, url-digest-find-creds):
	(url-digest-find-new-key, url-digest-prompt-creds): Add new functions
	to simplify code and aid in unit testing.
	(url-digest-auth-build-response): Hook up new functionality, or fall
	back to previous.
	(url-digest-auth-make-request-digest-qop):
	(url-digest-auth-make-cnonce, url-digest-auth-nonce-count):
	(url-digest-auth-name-value-string): Add new helper functions.
	* test/lisp/url/url-auth-tests.el (url-auth-test-colonjoin):
	(url-auth-test-digest-ha1, url-auth-test-digest-ha2):
	(url-auth-test-digest-request-digest): Add a few tests as now more
	features are testable via intermediate functions.
	(url-auth-test-challenges, url-auth-test-digest-request-digest): Test
	the new implementation.  Parts of these were accidentally already
	merged in the past.

2017-04-01  Tino Calancha  <tino.calancha@gmail.com>

	Tweak ediff-ptch test in previous commit a bit more

	* test/lisp/vc/ediff-ptch-tests.el (ediff-ptch-test-bug26084):
	Apply patches without requiring a shell.  Add some comments.

2017-03-31  Glenn Morris  <rgm@gnu.org>

	Tweak an ediff-ptch test

	* test/lisp/vc/ediff-ptch-tests.el (ediff-ptch-test-bug26084):
	Add skip conditions.  Avoid going through shell where not needed.

2017-03-31  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-smb.el (tramp-smb-errors):

	Add "NT_STATUS_PASSWORD_MUST_CHANGE".

2017-03-31  Stefan Monnier  <monnier@iro.umontreal.ca>

	* test/lisp/emacs-lisp/cl-lib-tests.el (cl-lib-symbol-macrolet): New test.

2017-03-31  Tino Calancha  <tino.calancha@gmail.com>

	dired-mark-suffix: New command

	Now dired-mark-extension prepends '.' to extension when not present.
	Add command dired-mark-suffix to preserve the previous
	behavior (Bug#25942).
	* lisp/dired-x.el (dired-mark-suffix): New command;
	mark files ending in a given suffix.
	(dired--mark-suffix-interactive-spec): New defun.
	(dired-mark-extension, dired-mark-suffix): Use it.
	* doc/misc/dired-x.texi (Advanced Mark Commands): Update manual.
	* test/lisp/dired-x-tests.el: New test suite; add test for these features.

2017-03-31  Tino Calancha  <tino.calancha@gmail.com>

	default-directory: Remark that it must be a directory name

	* src/buffer.c (default-directory): Update docstring (Bug#26272).

2017-03-31  Tino Calancha  <tino.calancha@gmail.com>

	Delete confuse statement in manual

	* doc/misc/cl.texi (For Clauses): Delete confuse statement
	and its example (Bug#23550).

2017-03-31  Paul Eggert  <eggert@cs.ucla.edu>

	Use find -delete if available

	This shortens the ‘make’ output and should avoid some
	repetitive scanning of directories during a build.
	* configure.ac (FIND_DELETE): New var.
	* lisp/Makefile.in (compile-always, bootstrap-clean):
	* test/Makefile.in (clean, bootstrap-clean): Use it.
	* test/Makefile.in (ELCFILES, LOGSAVEFILES): Remove; no longer needed.

2017-03-31  Mark Oteiza  <mvoteiza@udel.edu>

	Remove gnus-boundp

	* lisp/gnus/gnus-start.el (gnus-display-time-event-handler): Use
	bound-and-true-p.
	* lisp/gnus/gnus-util.el (gnus-boundp): Remove.

2017-03-31  Niels Möller  <nisse@lysator.liu.se>  (tiny change)

	Stop `fixup-whitespace' adding trailing whitespace (Bug#18783)

	* lisp/simple.el (fixup-whitespace): Insert no spaces if point is at
	end of line after deleting horizontal whitespace.

2017-03-31  Paul Eggert  <eggert@cs.ucla.edu>

	* src/inotify.c (add_watch): Add comment.

2017-03-31  Andreas Politz  <politza@hochschule-trier.de>

	Minor filenotify.el fixes

	* lisp/filenotify.el: Require subr-x.
	(file-notify-callback): Use equal, not eq.

2017-03-31  Noam Postavsky  <npostavs@gmail.com>

	Improve packaging documentation

	* doc/lispref/package.texi (Packaging Basics):
	* doc/lispref/tips.texi (Library Headers): Clarify some header
	formats, relation between file headers and package
	attributes (Bug#13281).

2017-03-31  John Mastro  <john.b.mastro@gmail.com>

	Fix a small incompatibility in ibuffer

	Translate nil values from column functions to the empty string, so that
	subsequent calls to string-width don't signal an error (Bug#26317).
	* lisp/ibuffer.el (ibuffer-compile-format): If a column function returns
	nil, treat it like the empty string.

2017-03-30  Alan Mackenzie  <acm@muc.de>

	Fix C++ fontification problems 500 bytes after typing a space, and other bugs

	Also implement the "asymmetric space" rule for fontifying otherwise
	ambiguous
	declarations/expressions.

	* lisp/progmodes/cc-engine.el (c-before-change-check-<>-operators): Don't set
	c-new-BEG or c-new-END when there is no need.
	(c-forward-decl-or-cast-1): Add "CASE 17.5" to implement the "asymmetric
	space" rule.

	* lisp/progmodes/cc-fonts.el (c-get-fontification-context): New function,
	extracted from c-font-lock-declarations.  Add to this function processing to
	make `context' 'decl for lines contained within parens when these are also
	declarations.
	(c-font-lock-declarations): Call the newly extracted function above in place
	of inline code.

	* lisp/progmodes/cc-mode.el (c-fl-decl-start): Set point before calling
	c-literal-start.

	* lisp/progmodes/cc-vars.el (c-asymmetry-fontification-flag): New user option.

	* doc/misc/cc-mode.texi (Misc Font Locking): New node documenting the new
	"asymmetric fontification" rule, including the variable
	c-asymmetric-fontification-flag.

2017-03-30  Paul Eggert  <eggert@cs.ucla.edu>

	Some inotify cleanup

	This catches some problems with integer overflow and races
	that I noticed in inotify.c after reviewing the changes
	installed to fix Bug#26126.
	* src/fns.c, src/lisp.h (equal_no_quit): Now extern.
	* src/inotify.c (aspect_to_inotifymask):
	Check for cycles and for improper lists.
	(make_lispy_mask, lispy_mask_match_p): Remove.
	All callers changed to use INTEGER_TO_CONS and CONS_TO_INTEGER.
	(inotifyevent_to_event, add_watch):
	Don’t assume watch descriptors and cookies fit in fixnums.
	(add_watch): Use assoc_no_quit, not Fassoc.
	Avoid integer overflow in (very!) long-running processes where
	the Emacs watch ID could overflow.  Avoid some duplicate code.
	(find_descriptor): New function.
	(remove_descriptor): First arg is now the returned value from
	find_descriptor, rather than the descriptor.  This way, the
	value can be removed without calling Fdelete, which might quit.
	Wait until the end (when watch_list is consistent) before signaling
	any errors.
	(remove_watch, inotify_callback):
	Use find_descriptor to avoid the need for Fdelete.
	(inotify_callback): Use simpler tests for ioctl failure.
	Free temporary buffer if signaled, and put it on the stack if small.
	Use ssize_t to index through read results, to avoid a cast.
	(valid_watch_descriptor): New function, with a tighter check.
	(Finotify_rm_watch, Finotify_valid_p): Use it.
	(Finotify_valid_p): Use assoc_no_quit and ass_no_quit instead
	of Fassoc.  Do not assume the first assoc succeeds.
	* test/src/inotify-tests.el (inotify-valid-p-simple):
	Add inotify-valid-p tests, some of which dump core without
	the fixes noted above.

2017-03-30  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-sh.el (tramp-get-remote-locale): Add "C.UTF-8" as candidate.

2017-03-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/cedet/semantic/wisent/wisent.el (wisent-automaton-p): Use obarrayp.

2017-03-30  Paul Eggert  <eggert@cs.ucla.edu>

	Fix assoc_no_quit so that it does not quit

	The problem was that it called Fequal, which can quit.
	* src/fns.c (enum equal_kind):
	New enum, to be used in place of a boolean.
	(equal_no_quit): New function.
	(Fmemql, Feql): Use it to compare floats, as a minor tuneup.
	(assoc_no_quit): Use it to avoid quitting, the main point here.
	(internal_equal): Generalize bool to enum equal_kind arg, so that
	there are now 3 possibilities instead of 2.  Do not signal an
	error if EQUAL_NO_QUIT.  Put the arg before the depth, since depth
	should be irrelevant if the arg is EQUAL_NO_QUIT.  All callers
	changed.

2017-03-29  Alan Mackenzie  <acm@muc.de>

	Amend gitmerge to recognize the injunction "don't merge".

	* admin/gitmerge.el (gitmerge-skip-regexp): amend regexp to match "don't" as
	well as "do not".

2017-03-29  Simen Heggestøyl  <simenheg@gmail.com>

	Add one more CSS pseudo-class

	* lisp/textmodes/css-mode.el (css-pseudo-class-ids): Add
	`focus-within'.

2017-03-29  Simen Heggestøyl  <simenheg@gmail.com>

	Update list of CSS pseudo-classes

	* lisp/textmodes/css-mode.el (css-pseudo-class-ids): Update list of
	pseudo-classes.

2017-03-29  Noam Postavsky  <npostavs@gmail.com>

	Adjust some search failure errors in info.el

	* lisp/info.el (Info-select-node): The search for beginning of node is
	an internal detail, and is not normally expected to fail, so it should
	not be a user error.
	(Info-complete-menu-item): Failing to find a menu indicates the user
	searched for a menu when there isn't one, so change to `use-error'.

2017-03-28  Alan Mackenzie  <acm@muc.de>

	* lisp/progmodes/cc-defs.el (c-version):  Restore c-version to 5.33

2017-03-28  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t mishandle (format "%i" -1.0)

	* src/editfns.c (styled_format): Treat %i like %d when converting arg.

2017-03-28  Noam Postavsky  <npostavs@gmail.com>

	* lisp/emacs-lisp/ert.el (ert-run-tests): Make INTERACTIVE arg optional.

2017-03-28  Michael Albinus  <michael.albinus@gmx.de>

	* src/inotify.c (Finotify_add_watch): aspect can also be a symbol.

2017-03-28  Noam Postavsky  <npostavs@gmail.com>

	Don't add `search-failed' to ignored errors in info.el (Bug#6106)

	* lisp/info.el: Stop adding `search-failed' to `debug-ignored-errors'.
	(Info-select-node, Info-search): Replace (signal 'search-failed ...)
	with (user-error "Search failed: "...).

2017-03-27  Paul Eggert  <eggert@cs.ucla.edu>

	Fix obsolete ‘test/automated’ references

	* Makefile.in (mostlyclean, clean, maybeclean_dirs, distclean)
	(bootstrap-clean, maintainer-clean):
	Clean ‘test’, not ‘test/automated’.  Test for existence of
	subdirectory only for ‘test’, not for directories that should
	always exist.
	* admin/MAINTAINERS, etc/TODO, lisp/emacs-lisp/bytecomp.el:
	* lisp/emacs-lisp/seq.el, lisp/emacs-lisp/thunk.el:
	* lisp/man.el (Man-parse-man-k):
	* lisp/url/url-domsuf.el, make-dist:
	* test/file-organization.org:
	Fix obsolete references to test/automated.

2017-03-27  Katsumi Yamaoka  <yamaoka@jpl.org>

	shr-image-fetched: Work for narrowed Gnus article

	See <8737e3msun.fsf@gmail.com> of bug#26231 in the bug-gnu-emacs list.

	* lisp/net/shr.el (shr-image-fetched): Work for narrowed article.

2017-03-27  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp.el (tramp-file-name-handler): Autoload it.

2017-03-27  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Expand manual section on quitting windows

	* doc/lispref/windows.texi (Quitting Windows): Provide more
	  information about the elements of the quit-restore window parameter,
	  and how they affect the behavior of quit-restore-window.

2017-03-26  Philipp Stephani  <phst@google.com>

	Add check for expected backtrace in module calls.

	* test/manual/cedet/tests/test.el
	(mod-test-non-local-exit-signal-test): Compare actual backtrace to
	expected backtrace.

2017-03-26  Eli Zaretskii  <eliz@gnu.org>

	Fix redisplay glitches due to recent change in redisplay_internal

	* src/xdisp.c (redisplay_internal): A better fix for bug#26097.
	See https://lists.gnu.org/r/emacs-devel/2017-03/msg00695.html
	for the problems caused by the original fix.

2017-03-26  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#26258

	* lisp/net/tramp-adb.el (tramp-adb-file-name-handler-alist):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist):
	* lisp/net/tramp-sh.el (tramp-sh-file-name-handler-alist):
	* lisp/net/tramp-smb.el (tramp-smb-file-name-handler-alist):
	Autoload.  Call `tramp-register-foreign-file-name-handler'.  (Bug#26258)

	* lisp/net/tramp.el (tramp-autoload-file-name-handler): Remove.
	(tramp-register-autoload-file-name-handlers)
	(tramp-register-file-name-handlers): Do not handle
	`tramp-autoload-file-name-handler' anymore.  Mark `operations'
	the handlers are responsible for.
	(tramp-register-foreign-file-name-handler): New defun.

2017-03-26  Noam Postavsky  <npostavs@gmail.com>

	Fix docstring of dabbrev-abbrev-char-regexp

	* lisp/dabbrev.el (dabbrev-abbrev-char-regexp): Using a value of nil
	is equivalent to "\\sw\\|\\s_", and has no special behavior.  If the
	previous character doesn't match, we search backwards for one that
	does, not throw an error.  Replace Lisp example with C based one to
	make it clear that "symbol" means a sequence of word and symbol
	constituent characters, not a Lisp symbol (Bug#358).

2017-03-26  Johan Claesson  <johanclaesson@bredband.net>  (tiny change)

	* doc/misc/cl.texi (Iteration Clauses): Clarify example (Bug#19515).

2017-03-26  Andreas Politz  <politza@hochschule-trier.de>

	Minor fixes for inotify.c and filenotify.el

	* lisp/filenotify.el (file-notify--watch-absolute-filename):
	Add docstring.
	(file-notify-callback): Simplify.

	* src/inotify.c (Finotify_add_watch): Adapt docstring.

2017-03-26  Andreas Politz  <politza@hochschule-trier.de>

	Fix issues regarding inotify file-notification

	Remove special code handling the inotify back-end.
	* lisp/filenotify.el (file-notify--watch): New struct
	representing a file-watch.
	(file-notify-descriptors): Use the new struct as hash-value.
	(file-notify-handle-event): Check that event is a cons.
	(file-notify--rm-descriptor, file-notify--event-watched-file)
	(file-notify--event-file-name, file-notify--event-file1-name)
	(file-notify-callback, file-notify-add-watch)
	(file-notify-rm-watch, file-notify-valid-p): Use new struct.
	Remove special code handling inotify descriptors.  Remove code
	handling multiple clients per descriptor.
	(file-notify--descriptor): Remove unused function.

	Let inotify-add-watch return a unique descriptor on every
	call, like every other back-end does (Bug#26126).  Prevent
	multiple clients from interfering with each other, when
	watching a shared descriptor.
	* src/inotify.c (watch_list): Extend the format by including a
	id and the provided mask.
	(INOTIFY_DEFAULT_MASK): Default mask used for all clients.
	(make_watch_descriptor): Removed.
	(make_lispy_mask, lispy_mask_match_p): New functions.
	(inotifyevent_to_event): Match event against the mask provided
	by the client.
	(add_watch, remove_descriptor, remove_watch): New functions
	for managing the watch_list.
	(inotify_callback): Use the new functions.
	(Finotify_add_watch, Finotify_rm_watch): Remove deprecated
	flags from documentation.  Add check for validity of provided
	descriptor.  Use the new functions.  Use the default mask.
	(INOTIFY_DEBUG): Add new debug conditional.
	(inotify-watch-list, inotify-allocated-p): New debug functions.
	(symbol_to_inotifymask, syms_of_inotify): Remove deprecated symbols.

	* test/lisp/filenotify-tests.el:
	(file-notify-test02-rm-watch): Remove expected failure for inotify.

2017-03-26  Paul Pogonyshev  <pogonyshev@gmail.com>

	* lisp/emacs-lisp/pcase.el (pcase): Comment debug message (Bug#26177).

2017-03-25  Jens Uwe Schmidt  <ju.schmidt@gmx.de>  (tiny change)

	Stop edebug getting stuck on backquote (Bug#23651)

	* lisp/emacs-lisp/edebug.el (edebug-read-sexp): Move forward after
	reading backquote or comma.

2017-03-25  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Expand manual section on quitting windows

	* doc/lispref/windows.texi (Quitting Windows): Provide more
	  information about the elements of the quit-restore window parameter,
	  and how they affect the behavior of quit-restore-window.

2017-03-25  Eli Zaretskii  <eliz@gnu.org>

	Support in ispell.el multiple dictionaries loaded by Hunspell

	* lisp/textmodes/ispell.el (ispell-find-hunspell-dictionaries):
	Support Hunspell configurations that load more than one dictionary
	by default.  Doc fix.  (Bug#25830)

2017-03-25  Michael Albinus  <michael.albinus@gmx.de>

	Simplify Tramp autoloading.

	* lisp/net/tramp.el (tramp-completion-file-name-handler):
	Simplify autoloading.  Give it the `operations' property.
	(tramp-completion-handle-expand-file-name): Remove.

2017-03-25  Eli Zaretskii  <eliz@gnu.org>

	Fix a segfault due to failure to realize some faces

	* src/xdisp.c (redisplay_internal): If the frame becomes garbaged
	while redisplaying its windows, redisplay all of its windows
	again.  (Bug#26097)
	(init_iterator): When freeing all realized faces on all frames,
	reset the 'face_change' flag of the frame whose window we are
	about to iterate.

2017-03-25  Philipp Stephani  <phst@google.com>

	Use a named function for 'safe-local-variable

	This improves the help screen for `version-control' (Bug#25431).

	* lisp/files.el (version-control-safe-local-p): New function.
	(version-control): Use it.

2017-03-25  Eli Zaretskii  <eliz@gnu.org>

	;* doc/misc/info.texi (Choose menu subtopic): Improve indexing.  (Bug#26236)

2017-03-25  Helmut Eller  <eller.helmut@gmail.com>

	Make it easier to abort a series of tests with C-g

	* lisp/emacs-lisp/ert.el (ert-run-tests): Add "interactively" arg.  If
	interactively is true and a test was aborted then ask if the remaining
	tests should be aborted too.
	(ert-run-tests-batch, ert-run-tests-interactively): Pass in
	interactively arg.

2017-03-24  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t require chown/chgrp for game installation

	Problem reported by Joseph Mingrone in:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00622.html
	* lib-src/Makefile.in (exp_archlibdir): Don’t fail if chown or
	chgrp fails with update-game-score and the game directory.
	Instead, expect the installer to fix this up afterwards.

2017-03-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/lisp-mode.el: Don't highlight \( at BOL

	(elisp--font-lock-backslash): Extract from lisp-el-font-lock-keywords-2.
	Don't highlight \ at BOL.  Don't assume syntax-ppss preserves match-data.

2017-03-23  Philipp Stephani  <phst@google.com>

	Protect against an infloop in python-mode

	There appears to be an edge case caused by using `syntax-ppss' in a
	narrowed buffer during JIT lock inside of Python triple-quote strings.
	Unfortunately it is impossible to reproduce without manually
	destroying the syntactic information in the Python buffer, but it has
	been observed in practice.  In that case it can happen that the syntax
	caches get sufficiently out of whack so that there appear to be
	overlapping strings in the buffer.  As Python has no nested strings,
	this situation is impossible and leads to an infloop in
	`python-nav-end-of-statement'.  Protect against this by checking
	whether the search for the end of the current string makes progress.

	* lisp/progmodes/python.el (python-nav-end-of-statement): Protect
	against infloop.
	* test/lisp/progmodes/python-tests.el
	(python-tests--python-nav-end-of-statement--infloop): Add unit test.

2017-03-23  Michael Albinus  <michael.albinus@gmx.de>

	* doc/lispref/os.texi (File Notifications):

	Strengthen the recommendation to use filenotify.el.

2017-03-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-03-22 getopt: merge from glibc
	* build-aux/config.sub, lib/getopt.c, lib/getopt.in.h:
	* lib/getopt1.c, lib/getopt_int.h: Copy from gnulib.
	* lib/gnulib.mk.in: Regenerate.

2017-03-23  Michael Albinus  <michael.albinus@gmx.de>

	Use lexical-bind in Tramp

	* lisp/net/tramp*.el: Add lexical-binding cookie.  Move declarations up.

	* lisp/net/tramp-adb.el (tramp-adb-parse-device-names): Use `push'
	rather than `add-to-list'.
	(tramp-adb-get-device): Remove unused variable.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-parse-device-names): Remove unused
	variable.

	* lisp/net/tramp.el (auto-save-file-name-transforms): Declare.
	(tramp-find-file-name-coding-system-alist): Use `push' rather
	than `add-to-list'.

	* test/lisp/net/tramp-tests.el: Add lexical-binding cookie.
	Require 'dired.  Move declarations up.
	(tramp-test32-make-nearby-temp-file): Wrap `make-nearby-temp-file'
	and `temporary-file-directory' calls with `with-no-warnings'.
	(tramp-test35-asynchronous-requests): Mark unused variable.

2017-03-23  Kaushal Modi  <kaushal.modi@gmail.com>
	    Noam Postavsky  <npostavs@gmail.com>

	Do not include comment start chars in ffap string

	* lisp/ffap.el (ffap-string-at-point): If the point is in a comment,
	ensure that the returned string does not contain the comment start
	characters (especially for major modes that have '//' as comment start
	characters).  Otherwise, in a major mode like c-mode, with `ido-mode'
	enabled and `ido-use-filename-at-point' set to `guess', doing "C-x
	C-f" on a "//foo" comment will initiate an attempt to access a path
	"//foo" (Bug#24057).

2017-03-23  Martin Rudalics  <rudalics@gmx.at>

	c:/Temp/gtk-window-move/ChangeLog.txt

2017-03-22  Michael Albinus  <michael.albinus@gmx.de>

	Fix filenotify.el issue for kqueue

	* lisp/filenotify.el (file-notify-add-watch): Use directory
	for remote file name handlers.

	* test/lisp/filenotify-tests.el (file-notify-test01-add-watch):
	Create/delete temporary file only for "kqueue".
	(file-notify-test02-rm-watch): Create/delete temporary files.

2017-03-22  Michael Albinus  <michael.albinus@gmx.de>

	Extend `file-notify-test02-rm-watch'

	* test/lisp/filenotify-tests.el (file-notify-test02-rm-watch):
	Expect it failed for inotify.  Divide tests into different
	`unwind-protect' clauses.  Check, that removing watch
	descriptors out of order do not harm.  (Bug#26126)

2017-03-22  Noam Postavsky  <npostavs@gmail.com>

	* test/lisp/emacs-lisp/lisp-mode-tests.el (indent-subsexp): Test for Bug#26187

2017-03-22  Graham Dobbins  <gdobbins@protonmail.com>  (tiny change)

	* lisp/emacs-lisp/lisp-mode.el (indent-sexp): Fix null endpos case

2017-03-21  Paul Eggert  <eggert@cs.ucla.edu>

	Improve configure --with-pop etc. diagnostics

	* configure.ac: Improve diagnostics re --with-pop and
	--with-mailutils (Bug#26102).

2017-03-21  Eli Zaretskii  <eliz@gnu.org>

	Revert "Make --without-pop the default."

	This reverts commit 9319de675e395517f9a7b50cae1a3aad9cd0abc2.

2017-03-21  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t remove dependency files when configuring

	Problem reported by Tom Tromey in:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00533.html
	* configure.ac: Don’t remove */*.o and */deps/* when
	--enable-autodepend is in effect.

2017-03-21  Paul Eggert  <eggert@cs.ucla.edu>

	Make --without-pop the default.

	Suggested by Angelo Graziosi in:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00431.html
	* configure.ac: Change the default from --with-pop to
	--without-pop.  Adjust diagnostics to match.

2017-03-21  Paul Eggert  <eggert@cs.ucla.edu>

	Streamline dependency-file generation

	* configure.ac (AUTODEPEND_PARENTS): New var.
	mkdir the dependency directories here, to simplify ‘make’.
	Remove dependency files just before outputting Makefiles, so that
	they are preserved if ‘configure’ exits early due to some other problem.
	* lib/Makefile.in, lwlib/Makefile.in, oldXMenu/Makefile.in:
	* src/Makefile.in: Adjust deps strategies to be similar, as follows:
	(MKDEPDIR): Remove.  All uses removed.  This cuts down on the
	number of processes spun off by ‘make’.
	(clean mostlyclean): Remove $(DEPDIR) contents, not $(DEPDIR) itself.
	(distclean): Remove $(DEPDIR) itself.
	* lwlib/Makefile.in (all): Move to front, so that depdir includes
	do not alter default action.

2017-03-21  Paul Eggert  <eggert@cs.ucla.edu>

	Port and simplify example sh script

	* doc/misc/org.texi (noweb-ref): Simplify shell script example and
	don’t use ‘tail -1’, which is not portable.

2017-03-21  Noam Postavsky  <npostavs@gmail.com>

	Narrow scope of modification hook renabling in org-src fontification

	Modification hooks should be enabled while modifying text in the
	org-src temp buffer, but in 2017-01-29 "Call modification hooks in
	org-src fontify buffers" the hooks were enabled also for modifications
	to the original org buffer.  This causes fontification errors when
	combined with certain packages, as reported in
	https://lists.gnu.org/r/emacs-orgmode/2017-03/msg00420.html.

	* lisp/org/org-src.el (org-src-font-lock-fontify-block): Reduce scope
	of inhibit-modification-hooks let-binding.

2017-03-21  Tino Calancha  <tino.calancha@gmail.com>

	epatch: Save right backups in Git multipatches

	Multipatches on N Git files save wrong backups for
	N-1 files; only the last one has a correct backup (Bug#26084).
	* lisp/vc/diff-mode.el (diff-file-junk-re): Add 'Prereq: '
	* lisp/vc/ediff-ptch.el (ediff-map-patch-buffer): Use 'diff-file-junk-re'.
	* test/lisp/vc/ediff-ptch-tests.el (ediff-ptch-test-bug25010):
	Rename from ibuffer-test-bug25010.
	(ediff-ptch-test-bug26084): New test.

2017-03-21  Michael R. Mauger  <michael@mauger.com>

	    * lisp/progmodes/sql.el: Version 3.6

	    (sql-login-params): Added :must-match for completition of
	    `server' and `database' login parameters.
	    (sql-sqlite-login-params, sql-postgres-login-params): Set
	    :must-match to `confirm'.
	    (sql-get-login-ext): Use :must-match value to control
	    `read-file-name' or `completing-read'.
	    (sql-connect): Added optional BUF-NAME parameter; Reworked
	    connection variable processing; Pass buffer name to
	    `sql-product-interactive'.
	    (sql-product-interactive): Pass buffer name along.
	    (sql-comint): Add optional BUF-NAME and calculate reasonable default.
	    (sql-comint-oracle, sql-sybase-comint, sql-comint-informix)
	    (sql-comint-sqlite, sql-comint-mysql, sql-comint-solid)
	    (sql-comint-ingres, sql-comint-ms, sql-comint-postgres)
	    (sql-comint-interbase, sql-comint-db2, sql-comint-linter)
	    (sql-comint-vertica): Add optional BUF-NAME, pass to
	    `sql-comint'.
	    (sql-oracle--list-oracle-name): New function.
	    (sql-oracle-list-all): Use it.
	    (sql-oracle-completion-object): Enhanced.

2017-03-20  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Solve ses-recalculate-cell updating only current line bug.

	* lisp/ses.el (ses-recalculate-cell): Add optional argument
	ses--curcell to avoid overwriting ses--curcell when function is
	called from ses-recalculate-all.  Update docstring accordingly.
	(ses-recalculate-all): Call ses-recalculate-cell with argument
	ses--curcell to avoid its overwriting.

2017-03-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix problem with out-of-date dependencies

	Problem reported by Robert Marshall in:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00501.html
	Although this problem has been with us for a while, the recent
	change from Automake to GNU Make exposed it again.
	* configure.ac (AUTO_DEPEND): When autodepending, clean out any
	leftover dependency and object files, since the previous sources'
	dependencies may disagree with the current ones.  Reconfiguring
	typically needs to force a rebuild anyway.

2017-03-20  Mark Oteiza  <mvoteiza@udel.edu>

	Simpler filter implementation

	* lisp/play/dunnet.el (dun-endgame-question): Get or set
	dun-endgame-questions one time only.  Use dolist and an index to
	prune the list.

2017-03-20  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/button.el (forward-button): Use user-error instead.

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This gets Emacs working again with HP-UX Itanium cc.
	It incorporates:
	2017-03-19 stdalign: tweak version# and test for HP-UX IA64
	2017-03-18 stdalign: restore previous behavior for HP-UX IA64
	2017-03-17 stat-time, timespec: Support header files in C++ mode
	2017-03-17 stdalign: Make it work with HP-UX cc
	2017-03-17 flexmember: try to detect HP-UX 11.31 cc bug
	2017-03-16 stdint: Fix test compilation failure with HP-UX 11 cc.
	2017-03-14 gnulib-tool: don't produce tests with only snippets
	2017-03-14 limits-h: Make it work with HP-UX cc.
	* etc/PROBLEMS: Remove now-obsolete entry for HP-UX 11.31.
	* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
	* lib/limits.in.h, lib/stat-time.h, lib/stdalign.in.h:
	* lib/stdint.in.h, lib/timespec.h, m4/flexmember.m4, m4/stdalign.m4:
	Copy from gnulib.

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	* ChangeLog.2: Merge from emacs-25.

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fixups after merge from emacs-25

	* etc/NEWS: Remove stray entry.
	* etc/NEWS.25: Copy from Emacs emacs-25 etc/NEWS.
	* lisp/textmodes/rst.el (rst-package-emacs-version-alist):
	Make it nondecreasing.

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d71e071 Improve documentation of interactive "r".

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	a094732 * etc/PROBLEMS: Say that HP-UX cc doesn't work.
	1925dd9 Fix duplicate wording in Emacs manual
	6de8429 * lisp/paren.el (show-paren--default, show-paren-function): A...
	2d671fd Fix wording in Emacs manual
	a8766a2 Document how to customize input methods
	6eb8995 * lisp/net/eww.el (eww-reload): Doc fix.  (Bug#25981)
	aceac95 Fix warning message about native completion (Bug#25984)
	a314c1f Clarify documentation of 'raise' and 'height' display specs
	f366f6e Mention problems with GPaste in PROBLEMS
	6e788ef ; etc/PROBLEMS: Explain about the python+libedit problem (Bug...
	6406618 Fix doc strings in info.el
	c1ed152 ; * src/keyboard.c (Fposn_at_point): Fix last change.
	eed9677 Fix doc string of 'posn-at-point'
	0d5957e Documentation fix in elisp reference manual

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ec4226d * lisp/woman.el (woman): Fix docstring prefix arg description.
	2b774fa Mention "editor" in Emacs man page header
	ae60d0c Document problems with nerd-fonts
	2fdb5a9 ; Details about pinning Emacs to w32 task bar
	5c3105e * doc/lispref/modes.texi (Derived Modes): Make example more i...
	4c51ef4 Clarify what is the "cursor"
	8303c32 ; * etc/NEWS: Copyedits.
	3f7493e ; Fix a typo in comment
	c54cf8d Improve commentary in lisp.h
	8b92f86 ; * admin/make-tarball.txt: Cross-reference admin/release-pro...
	0ba9932 Disable native completion for ipython (Bug#25067)
	38fc456 Fix a typo in ada-mode manual
	00e75ba ; * src/coding.c (Fencode_coding_region): Fix a typo in the d...
	a541c21 Clarify documentation of 'bufferpos-to-filepos' and 'filepos-...

	# Conflicts:
	#	etc/NEWS
	#	etc/PROBLEMS

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	02d9ad8 * admin/make-tarball.txt: Add documentation regarding the rel...

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	e1171de * CONTRIBUTE (Documenting your changes): Index new vars/comma...

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ab0a60a ; * CONTRIBUTE (Generating ChangeLog entries): Drop duplicate...
	7e02a47 Index byte-compile-debug
	7c1e598 Document `byte-compile-debug' in the ELisp manual
	4d81eb4 Document variable `byte-compile-debug'
	72ef710 Fix call to debugger on assertion failure
	ae8264c Call modification hooks in org-src fontify buffers
	b3139da ; Fix last change in doc/lispref/strings.texi
	c331f39 Improve documentation of 'format' conversions
	9f52f67 Remove stale functions from ert manual
	c416b14 Fix a typo in Eshell manual
	06695a0 ; Fix a typo in ediff-merg.el
	954e9e9 Improve documentation of hooks related to saving buffers
	9fcab85 Improve documentation of auto-save-visited-file-name
	2236c53 fix typo in mailcap-mime-extensions
	85a3e4e Fix typos in flymake.el
	a1ef10e More NEWS checking for admin.el's set-version

	# Conflicts:
	#	lisp/emacs-lisp/bytecomp.el

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	5569e64 ; Spelling fixes
	24a5f57 * lisp/net/eww.el (eww-tag-meta): Handle single quoted URLs (...
	9b89896 * lisp/progmodes/sql.el (sql-product-alist): Doc tweak
	69b50f5 * lisp/progmodes/sql.el (sql-product-alist): Doc fix.  (Bug#2...
	42eae54 Improve documentation of dabbrevs
	b0ade0d Clarify that easy-menu-add is a nop (Bug#25382)
	3c69f2c * lisp/textmodes/rst.el (rst-package-emacs-version-alist): Fi...

	# Conflicts:
	#	lisp/textmodes/rst.el

2017-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	0e35405 Improve documentation of coding-systems
	c2fd04c Improve definition of 'variable-pitch' face on MS-Windows
	16fb50d Fix an error message in python.el
	a2a2073 Clarify major mode switching
	fc38671 Add helpful comment to compile-command's docstring
	ee65d85 Fix ':version' of 'select-enable-primary'

2017-03-19  Paul Pogonyshev  <pogonyshev@gmail.com>

	Fix bug in generator function with pcase (Bug#26068)

	* lisp/emacs-lisp/cl-macs.el (cl--sm-macroexpand): Remove some calls
	to symbol-name.

2017-03-19  Alan Mackenzie  <acm@muc.de>

	Fix chaotic indentation of C++ lambda.  Enhance documentation thereof

	* lisp/progmodes/cc-engine.el (c-looking-at-inexpr-block): qualify an
	invocation of c-on-identifier with a check we're not at the _end_ of an
	identifier.

	* doc/misc/cc-mode.texi: (Tex title page): Remove @subtitlefont because the
	perl versions of texi2dvi haven't implemented it.
	(Syntactic Symbols): Note that `inlambda' is also used in C++ Mode, not just
	in Pike Mode.
	(Statement Block Symbols): Add a section illustrating a C++ lambda function.
	(FAQ): Add a question about "excessive" indentation of the contents of a C++
	lambda function, and how to get rid of it.

2017-03-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	Remove unused vars in cl-extra.el and tramp.el.

	* lisp/emacs-lisp/cl-extra.el (cl--print-table): Remove unused vars.

	* lisp/net/tramp.el (tramp-dissect-file-name): Remove unused `match'.
	(outline-regexp, ls-lisp-use-insert-directory-program): Declare.
	(tramp-find-foreign-file-name-handler): Mark unused arg, remove unused `v`.

2017-03-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	Improve describe-symbol's layout of slots when describing types

	* lisp/emacs-lisp/cl-extra.el (cl--print-table): New function.
	(cl--describe-class-slots): Use it.

2017-03-18  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#26156

	* lisp/net/tramp.el (tramp-completion-file-name-handler-alist):
	<expand-file-name>: Remove handler.  (Bug#26156)

2017-03-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/obarray.el (obarray-size): Avoid compiler warning.

2017-03-18  Eli Zaretskii  <eliz@gnu.org>

	Fix last change in lib/Makefile.in

	* lib/Makefile.in (srcdir): Define, as including
	$(srcdir)/../nt/gnulib-cfg.mk needs that.

2017-03-18  Paul Eggert  <eggert@cs.ucla.edu>

	* configure.ac: Fix typo in diagnostic.

2017-03-18  Paul Eggert  <eggert@cs.ucla.edu>

	Port out-of-source builds to windows-nt

	Problem reported by Angelo Graziosi in:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00431.html
	* lib/Makefile.in: Prepend $(srcdir) to ../nt/gnulib-cfg.mk,
	to handle out-of-source builds if windows-nt.

2017-03-17  Eli Zaretskii  <eliz@gnu.org>

	MS-Windows followup for switch from Automake

	* nt/INSTALL:
	* nt/INSTALL.W64: Remove references to Automake.  (Bug#26100)

2017-03-17  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of interactive "r".

	* doc/lispref/commands.texi (Interactive Codes): Mention that mark
	must be set for "r" to work.

2017-03-17  Paul Eggert  <eggert@cs.ucla.edu>

	Fixups for GNU Make switchover

	This fixes some minor problems introduced in the recent switch to GNU
	Make, discovered by further testing.  Without some of these changes
	'make -j' would sometimes have race conditions caused by missing
	dependencies.  (Bug#26100)
	* .gitignore: Remove src/stamp-h.in, src/stamp-h1.
	* Makefile.in ($(MAKEFILE_NAME)): Depend on configure, not
	src/config.in, since the former's timestamp now represents
	the latter's.
	($(srcdir)/configure): Use plain ./autogen.sh, for consistency
	with other autogen.sh invocations.
	($(srcdir)/src/stamp-h.in):
	Remove rule, as this file is no longer created.
	* Makefile.in (top_distclean):
	* src/Makefile.in (bootstrap-clean):
	No need to remove stamp-h1, as that was an Automake byproduct
	and Automake is no longer in use.
	* lib/Makefile.in, src/Makefile.in:
	(AUTOCONF_INPUTS, $(top_srcdir)/configure): Remove.
	(../config.status, Makefile): Simplify by limiting dependencies
	to files we care about and files in the repository, and by
	using just one file to represent the timestamps on multiple
	targets updated by the same rule.
	* autogen.sh: Do not create or use src/stamp-h.in.
	Instead, have 'find' test the two output files directly.

2017-03-17  Paul Eggert  <eggert@cs.ucla.edu>

	Switch from Automake to GNU Make

	Emacs assumes GNU Make, and GNU Make has much of the functionality of
	Automake built-in.  The Emacs build process uses Automake primarily
	because Emacs uses some Gnulib code and Gnulib formerly required
	Automake.  Now that Gnulib no longer requires Automake, Emacs can
	stop using Automake and this should simplify Emacs maintenance
	in the future (Bug#26100).  Although this patch may look long, most of
	it is generated automatically: the changes to build-aux/config.guess,
	build-aux/config.sub, build-aux/install-sh, and lib/gnulib.mk.in are
	all done by admin/merge-gnulib.
	* .gitignore: Remove build-aux/ar-lib, build-aux/compile,
	build-aux/config.guess, build-aux/config.sub, build-aux/depcomp,
	build-aux/install-sh, build-aux/missing, and lib/Makefile.in,
	as they are no longer built by autogen.sh.
	Add lib/gnulib.mk, as it is now built by 'configure'.
	Remove nt/gnulib.mk, as it is no longer built by 'make'.
	* INSTALL.REPO, README, admin/make-tarball.txt:
	Remove mention of Automake.
	* Makefile.in (AUTOCONF, AUTOMAKE, AUTOHEADER, ACLOCAL, lib)
	(AUTOCONF_INPUTS, ACLOCAL_PATH, ACLOCAL_INPUTS)
	($(srcdir)/aclocal.m4, AUTOMAKE_INPUTS)
	($(srcdir)/lib/Makefile.in, $(srcdir)/nt/gnulib.mk, am--refresh):
	Remove.
	($(MAKEFILE_NAME)): Depend on lib/gnulib.mk.in.
	($(srcdir)/configure, $(srcdir)/src/stamp-h.in)
	($(srcdir)/src/config.in):
	Use autogen.sh instead of doing it by hand.
	* admin/merge-gnulib (AVOIDED_MODULES, avoided_flags)):
	New vars, to simplify processing of avoided modules.
	(GNULIB_TOOL_FLAGS): Move --avoid flags into AVOIDED_MODULES.
	Add --gnu-make, and change makefile name to gnulib.mk.in.
	Copy config.guess, config.sub, and install-sh too, since
	Automake no longer does that for us.
	* admin/notes/copyright:
	* admin/update_autogen (genfiles):
	Update list of files.
	Remove hack for nt/gnulib.mk, a file that is no longer needed.
	* autogen.sh (progs): Remove Automake.
	(automake_min): Remove.
	Build aclocal.m4 so that autoreconf need not use aclocal.
	* build-aux/config.guess, build-aux/config.sub:
	* build-aux/install-sh:
	New files, copied from Gnulib.  These are now updated by
	admin/merge-gnulib instead by autogen.sh.
	* configure.ac (AC_PROG_MAKE_SET, ACLOCAL_PATH, AM_CONDITIONAL):
	Remove.
	(AM_INIT_AUTOMAKE, AM_SILENT_RULES): Remove call.
	(AC_PROG_CC_C_O): Call this instead of AM_PROG_CC_C_O.
	(BUILDING_FOR_WINDOWSNT, HYBRID_MALLOC_LIB): Remove; no longer needed.
	(--disable-silent-rules): New option, since Automake no longer
	does this for us.
	(AM_V, AM_DEFAULT_V): Set unconditionally, and do not bother
	with AM_SUBST_NOTMAKE.
	(AC_PROG_INSTALL): Add call.
	(MAKEINFO): Do not bother with the 'missing' program.
	(MAKEINFO, SYSTEM_TYPE): AC_SUBST.
	(AC_CONFIG_FILES): Add Makefile, lib/gnulib.mk.
	(SUBDIR_MAKEFILES): Remove duplication.
	* lib/Makefile.am: Remove, replacing with:
	* lib/Makefile.in: New file, with the old Makefile.am contents
	and with the following changes:
	(AUTOMAKE_OPTIONS, BUILT_SOURCES, CLEANFILES, EXTRA_DIST)
	(MOSTLYCLEANDIRS, MOSTLYCLEANFILES, noinst_LIBRARIES, SUFFIXES)
	(AM_CFLAGS, DEFAULT_INCLUDES, libegnu_a_SOURCES, libegnu_a_LIBADD)
	(EXTRA_libegnu_a_SOURCES, libegnu_a_SHORTNAME, libegnu_a_CPPFLAGS):
	Remove.
	(VPATH, abs_top_builddir, top_builddir, top_srcdir, all, AM_V_AR)
	(AM_V_CC, AM_V_GEN, AM_V_at, DEPDIR, DEPFLAGS, MKDEPDIR, SYSTEM_TYPE)
	(libgnu.a, libegnu.a, ETAGS, $(ETAGS), tags, TAGS, clean)
	(mostlyclean, distclean, bootstrap-clean, maintainer-clean):
	New macros and rules, since Automake no longer does them.
	Include ../nt/gnulib-cfg.mk if SYSTEM_TYPE is windows-nt,
	instead of including ../nt/gnulib.mk if BUILDING_FOR_WINDOWS_NT.
	Include dependency files if AUTO_DEPEND.
	(ALL_CFLAGS, AUTOCONF_INPUTS, libgnu_a_OBJECTS, libegnu_a_OBJECTS):
	New macros.
	(bootstrap-clean): Depend on distclean, not maintainer-clean,
	and remove gnulib.mk.
	(AUTOCONF_INPUTS, $(top_srcdir)/configure, ../config.status, Makefile):
	New macros and rules, copied from ../Makefile.in.
	($(libegnu_a_OBJECTS), $(libgnu_a_OBJECTS)): Depend on BUILT_SOURCES.
	(.c.o, e-%.o): New generic rules.
	* lib/gnulib.mk: Remove.
	* lib/gnulib.mk.in: New file, which is built by autogen.sh
	and contains much of what used to be in lib/gnulib.mk.
	* m4/gnulib-common.m4: Copy from gnulib.
	* make-dist: Do not distribute build-aux/compile, build-aux/depcomp,
	build-aux/missing, build-aux/ar-lib, lib/Makefile.am, nt/gnulib.mk,
	nt/gnulib-modules-to-delete.cfg.  Distribute lib/Makefile.in,
	lib/gnulib.mk.in, and nt/gnulib-cfg.mk instead.
	* nt/Makefile.in (AM_V_GEN, am__v_GEN_, am__v_GEN_0)
	(am__v_GEN_1, ${srcdir}/gnulib.mk): Remove.
	* nt/gnulib-cfg.mk: New file, which supersedes ...
	* nt/gnulib-modules-to-delete.cfg: ... this file, which is removed.
	* src/Makefile.in (ACLOCAL_INPUTS): Remove.
	(AUTOCONF_INPUTS): Merge ACLOCAL_INPUTS into it.
	($(top_srcdir)/configure, ../config.status, config.in Makefile):
	Defer to parent Makefile.

2017-03-17  Paul Eggert  <eggert@cs.ucla.edu>

	Don't suggest Mailutils on MS-Windows

	* configure.ac: Don't suggest GNU Mailutils on MS-Windows, as it
	hasn't been ported.

2017-03-17  Thien-Thi Nguyen  <ttn@gnu.org>

	Fix bug: Range-check integer ‘alpha’ frame parm value

	Typo introduced 2013-04-01, "Prefer < to >
	in range checks such as 0 <= i && i < N".

	* src/frame.c (x_set_alpha): Use ‘ialpha’, not ‘alpha’.

2017-03-17  Thien-Thi Nguyen  <ttn@gnu.org>

	Fix bug: Range-check integer ‘alpha’ frame parm value

	Typo introduced 2013-04-01, "Prefer < to >
	in range checks such as 0 <= i && i < N".

	* src/frame.c (x_set_alpha): Use ‘ialpha’, not ‘alpha’.

2017-03-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#26127

	* lisp/filenotify.el (file-notify--rm-descriptor): Check, that
	there is a function which could be called.  (Bug#26127)

	* test/lisp/filenotify-tests.el (file-notify--test-cleanup):
	Clear also `file-notify-descriptors'.
	(file-notify--test-make-temp-name): Move up.
	(file-notify-test02-rm-watch): New test.
	(file-notify-test03-events, file-notify-test04-autorevert)
	(file-notify-test05-file-validity)
	(file-notify-test06-dir-validity)
	(file-notify-test07-many-events, file-notify-test08-backup)
	(file-notify-test09-watched-file-in-watched-dir)
	(file-notify-test10-sufficient-resources): Rename.

2017-03-17  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/PROBLEMS: Say that HP-UX cc doesn't work.

2017-03-17  Paul Eggert  <eggert@cs.ucla.edu>

	Emacs 'movemail' is now a configure-time option

	The new configure option --with-mailutils lets the builder say
	that Emacs should assume that GNU Mailutils is installed, instead
	of continuing to build and install its own limited and insecure
	substitute for 'movemail'.
	* INSTALL, etc/NEWS, etc/PROBLEMS: Mention --with-mailutils.
	* configure.ac: Add --with-mailutils option.
	(with_mailutils): New variable.
	Do not bother configuring 'movemail' when not building it.
	Warn about issues relating to --with-mailutils.
	* doc/emacs/rmail.texi (Movemail): Mention --with-mailutils.
	(Movemail, Remote Mailboxes): Document port numbers in
	POP and IMAP URLs.
	* lib-src/Makefile.in (with_mailutils): New macro.
	(UTILITIES): Use it.

2017-03-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	Add obarray-size and fix tests accordingly.  Use obarrayp in cedet.

	* lisp/obarray.el (obarray-size): New function.

	* lisp/cedet/semantic/lex-spp.el (semantic-lex-spp-symbol)
	(semantic-lex-spp-save-table, semantic-lex-spp-macros):
	* lisp/cedet/semantic/bovine/c.el (semantic-c-describe-environment):
	Use obarrayp.

	* test/lisp/obarray-tests.el (obarray-make-default-test)
	(obarray-make-with-size-test): Use it.

2017-03-16  Michael Albinus  <michael.albinus@gmx.de>

	Document remote file name syntax change

	* doc/emacs/files.texi (Remote Files, Quoted File Names):
	* doc/misc/org.texi (dir): Change examples to use a method.

	* doc/misc/tramp.texi (Top) [trampf]: Remove macro.  Add
	`Testing' menu entry.
	(History): Fix typos.  Mention syntax change.
	(Configuration, Default Host, File name Syntax)
	(File name completion, Frequently Asked Questions):
	Change examples to use a method.
	(External methods, Default Host, Multi-hops, Remote processes):
	Fix typos.
	(Default Method): Mention pseudo method "-".
	(External packages): Rewrite intention of `non-essential'.

	* etc/NEWS: Mark recent Tramp entries as documented.

2017-03-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	(semantic-lex-type-invalid): Fix nested backquote.

	* lisp/cedet/semantic/lex.el: Use lexical-binding.
	(semantic-lex-type-invalid): Fix nested backquote.
	(semantic-lex-map-symbols, semantic-lex-type-symbol)
	(semantic-lex-keyword-symbol): Use obarrayp.

2017-03-15  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/ido.el (ido-read-internal, ido-complete): Do not bind `non-essential'.

2017-03-15  Mark Oteiza  <mvoteiza@udel.edu>

	Write a named function

	* lisp/comint.el (comint-nonblank-p): New function.
	(comint-input-filter): Use it.

2017-03-15  Mark Oteiza  <mvoteiza@udel.edu>

	Replace more nested ifs with cond

	This is a continuation of 0db5ba4 "Replace nested ifs with cond".
	* lisp/play/dunnet.el (dun-special-object, dun-inven, dun-drop):
	(dun-drop-check, dun-swim, dun-break): Use when and cond where
	appropriate.
	(dun-examine): Fix indentation.
	(dun-doverb): Use when.
	(dun-read-line): Refactor.

2017-03-15  Noam Postavsky  <npostavs@gmail.com>

	Recomplexify ‘delete-trailing-whitespace’ by treating \n as whitespace again

	Mostly reverts "Simplify ‘delete-trailing-whitespace’ by not treating
	\n as whitespace" from 2016-07-04.  Setting \n to non-whitespace
	causes the regex engine to backtrack a lot when searching for
	"\\s-+$" (Bug#26079).

	* lisp/simple.el (delete-trailing-whitespace): Don't change newline
	syntax, search for "\\s-$" and then skip backward over trailing
	whitespace.

2017-03-14  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-03-14 snippets: move unadjusted snippet sources to lib
	2017-03-14 gnulib-tool: fix typo in comment output
	2017-03-14 snippets: work around GNU Make 3.82 VPATH
	2017-03-13 gnulib-tool: minor --gnu-make fixups
	2017-03-12 gnulib-tool: new option --gnu-make
	* .gitignore: Remove lib/arg-nonnull.h, lib/c++defs.h,
	lib/warn-on-use.h.  Change exception from
	build-aux/snippet/_Noreturn.h to lib/_Noreturn.h.
	* admin/authors.el (authors-renamed-files-regexps):
	* admin/notes/copyright, make-dist:
	The snippet files moved from build-aux/snippet to lib.
	* lib/_Noreturn.h: Rename from build-aux/snippet/_Noreturn.h.
	* lib/arg-nonnull.h: Rename from build-aux/snippet/arg-nonnull.h.
	* lib/c++defs.h: Rename from build-aux/snippet/c++defs.h.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	* lib/warn-on-use.h: Rename from build-aux/snippet/warn-on-use.h.

2017-03-14  Eli Zaretskii  <eliz@gnu.org>

	Fix duplicate wording in Emacs manual

	* doc/emacs/programs.texi (Which Function): Delete duplicate
	wording.  (Bug#26098)

2017-03-14  Michael Albinus  <michael.albinus@gmx.de>

	Reenable lost Tramp test case

	* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
	Reenable lost test case.

2017-03-14  Alan Third  <alan@idiocy.org>

	Revert "Remove NSEvent loop from ns_select (bug#25265)"

	This reverts commit 3bd2e9e975ed29daaf03ca7559e4664aade0674f.

2017-03-14  Alan Third  <alan@idiocy.org>

	Revert "Add missing timeout value in ns_select"

	This reverts commit a65236214d9202fb69a6ba5169d4ac1a4bcb0b0d.

2017-03-14  Alan Third  <alan@idiocy.org>

	Remove old macOS compatibility code

	* src/nsimage.m, src/nsmenu.m, src/nsterm.m: Remove code only for
	macOS versions below 10.6 as they are not supported in Emacs 25+.

2017-03-14  Michael Albinus  <michael.albinus@gmx.de>

	Tune `tramp-completion-file-name-regexp-unified'

	* lisp/net/tramp.el (tramp-completion-file-name-regexp-unified):
	Extend this regexp to match also "/".

2017-03-14  Tino Calancha  <tino.calancha@gmail.com>

	Show ancestor buffer in 3way merges

	Add an option ediff-show-ancestor', to control if the ancestor buffer
	must be shown in 3way merges (Bug#25493); set it non-nil by default.
	Add a toggle to change this option interactively; the original
	value of the option is restored on exit.

	Update the window setup so that the ancestor buffer is
	shown in 3way merges when ediff-show-ancestor is non-nil.

	Any operation on ediff windows must take in account the
	ancestor window as well, when this is shown.

	* lisp/vc/ediff-init.el (ediff-show-ancestor): New option.
	(ediff--show-ancestor-orig): New defvar.
	* lisp/vc/ediff-wind.el (ediff-window-Ancestor): New defvar.
	(ediff-setup-windows-plain-merge, ediff-setup-windows-multiframe-merge):
	Display ancestor buffer if ediff-show-ancestor is non-nil.
	(ediff-keep-window-config): Expect ancestor window in
	ediff-window-config-saved.
	(ediff-window-alist): Add entry for the ancestor window.
	* lisp/vc/ediff-util.el (ediff-setup-control-buffer):
	ediff-window-config-saved contains ancestor window.
	(ediff-show-ancestor): Delete this command.
	(ediff-setup-keymap): Bind ediff-toggle-show-ancestor to '/' for merge jobs.
	(ediff-update-diffs): Compute new diffs using ancestor buffer in 3way merges;
	don't cheat it to think that is performing a comparison, that trick is not
	necessary anymore: simply call 'ediff-setup-diff-regions-function'
	with file-A, file-B and the file ancestor.
	(ediff-recenter): Update doc string.  Consider the ancestor buffer.
	(ediff--check-ancestor-exists): New defun.
	(ediff-toggle-show-ancestor): New command; toggle ediff-show-ancestor.
	(ediff--restore-options-on-exit): Restore ediff-show-ancestor on exit.
	(ediff-scroll-vertically, ediff-scroll-horizontally)
	(ediff-operate-on-windows): Consider the ancestor as well.
	* lisp/vc/ediff-help.el (ediff-long-help-message-merge):
	List ediff-toggle-show-ancestor.
	* doc/misc/ediff.texi (Introduction, Quick Help Commands): Update manual.

2017-03-14  Tino Calancha  <tino.calancha@gmail.com>

	diff-mode: Improve default faces for buffer ancestor

	* lisp/vc/ediff-init.el (ediff-current-diff-Ancestor)
	(ediff-fine-diff-Ancestor): Use defaults consistent with
	faces for 'ediff-buffer-A' and 'ediff-buffer-B'.

2017-03-14  Hong Xu  <hong@topbug.net>

	* lisp/paren.el (show-paren--default, show-paren-function): Add docstring.

2017-03-13  Paul Eggert  <eggert@cs.ucla.edu>

	Fix make-dist typo

	* make-dist: Fix typo introduced in the Bug#25895 fix.

2017-03-13  Eli Zaretskii  <eliz@gnu.org>

	Fix wording in Emacs manual

	* doc/emacs/text.texi (Paragraphs): Fix a garbled sentence.
	(Bug#26086)

2017-03-13  Michael Albinus  <michael.albinus@gmx.de>

	etc/NEWS: Remote file names require a method.

2017-03-13  Michael Albinus  <michael.albinus@gmx.de>

	Require method in remote file name syntax

	* lisp/minibuffer.el (completion--nth-completion):
	Do not bind `non-essential'.

	* lisp/net/tramp-adb.el (tramp-adb-maybe-open-connection):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-maybe-open-connection):
	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	* lisp/net/tramp-smb.el (tramp-smb-maybe-open-connection): Do not call
	`tramp-check-proper-method-and-host'.

	* lisp/net/tramp-sh.el (tramp-ssh-controlmaster-options): Better traces.
	(tramp-maybe-open-connection): Do not use argument for
	´tramp-completion-mode-p'.

	* lisp/net/tramp.el (tramp-default-method-marker): New defconst.
	(tramp-prefix-format, tramp-postfix-method-format)
	(tramp-prefix-ipv6-format, tramp-postfix-ipv6-format)
	(tramp-prefix-port-format, tramp-postfix-host-format)
	(tramp-file-name-regexp, tramp-completion-file-name-regexp):
	Use `eq' instead of `eqal'.
	(tramp-method-regexp, tramp-domain-regexp)
	(tramp-remote-file-name-spec-regexp)
	(tramp-file-name-regexp-unified)
	(tramp-completion-file-name-regexp-unified)
	(tramp-completion-file-name-regexp-separate): Adapt regexp.
	(tramp-completion-file-name-handler-alist)
	(tramp-run-real-handler): Autoload them.
	(tramp-find-method): Handle `tramp-default-method-marker'.
	(tramp-check-proper-method-and-host)
	(tramp-completion-run-real-handler): Remove them.
	(tramp-error-with-buffer, tramp-connectable-p): Do not use
	argument for ´tramp-completion-mode-p'.
	(tramp-find-foreign-file-name-handler): Remove COMPLETION
	argument.  Do not apply heuristic for completion.
	(tramp-file-name-handler): Do not modify `non-essential'.
	(tramp-completion-file-name-handler): Change implementation.
	(tramp-autoload-file-name-handler)
	(tramp-completion-handle-file-name-all-completions):
	Call `tramp-run-real-handler'.
	(tramp-completion-mode-p): Do not autoload.  Remove argument.
	Do not apply heuristic for completion.
	(tramp-completion-dissect-file-name): Simplify implementation.
	(tramp-handle-file-name-as-directory): Call `tramp-connectable-p'.

	* test/lisp/net/tramp-tests.el (tramp-test01-file-name-syntax)
	(tramp-test02-file-name-dissect)
	(tramp-test03-file-name-defaults)
	(tramp-test06-directory-file-name): Adapt to the new syntax.
	(tramp-test11-copy-file, tramp-test12-rename-file)
	(tramp--test-check-files): Deactivate temporarily tests with
	quoted file names.
	(tramp-test16-directory-files, tramp-test17-insert-directory):
	Adapt tests.
	(tramp-test24-file-name-completion): Do not check for
	completion mode.
	(tramp-test31-make-auto-save-file-name): Deactivate temporarily
	two tests.

2017-03-13  Eli Zaretskii  <eliz@gnu.org>

	Fix bidi paragraph direction when inserting text at newline

	* src/insdel.c (invalidate_buffer_caches): Invalidate the bidi
	paragraph cache when inserting immediately after a newline.
	(Bug#26083)

2017-03-13  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/emacs-lisp/cl-print-tests.el (cl-print-tests-1): Fix regexp.

2017-03-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-print.el (cl-print-compiled): New variable

	(cl-print-object) <compiled-function>: Print the docstring and
	interactive form.  Obey cl-print-compiled.

2017-03-13  Noam Postavsky  <npostavs@gmail.com>

	Fix indent-sexp when called from inside a string (Bug#21343)

	* lisp/emacs-lisp/lisp-mode.el (indent-sexp): Get initial syntax parse
	state from `syntax-ppss'.

2017-03-13  Noam Postavsky  <npostavs@gmail.com>

	* lisp/emacs-lisp/lisp-mode.el (indent-sexp): Simplify.

	* test/lisp/emacs-lisp/lisp-mode-tests.el (indent-sexp):
	(indent-subsexp, indent-sexp-in-string): New tests.

2017-03-12  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use switch on pseudovector types; plus cleanups along the way

	* src/lisp.h (PSEUDOVECTOR_TYPE): New function, extracted from mark_object.
	(PSEUDOVECTOR_TYPEP): Change type of `code'.

	* src/alloc.c (sweep_vectors): Remove out-of-date assertion.
	(mark_object): Use PSEUDOVECTOR_TYPE.

	* src/data.c (Ftype_of): Use switch on pvec type.

	* src/print.c (print_object): Use switch on pvec type.

	* lisp/emacs-lisp/cl-generic.el (cl--generic-typeof-types):
	Add recently added types.

2017-03-12  Paul Eggert  <eggert@cs.ucla.edu>

	Install update-game-score only on request

	Most distributions do not install update-game-score properly
	due to setuid/setgid complications, so install it only when
	the installer specifies a user or group (Bug#25895).
	* .gitattributes: Remove lib-src/update-game-score.exe.manifest.
	* Makefile.in (gameuser, gamegroup, use_gamedir, PATH_GAME):
	New vars.
	(epaths-force): Use PATH_GAME.
	(uninstall): Remove snake-scores and tetris-scores only if shared.
	* configure.ac: Default --with-gameuser to 'no'.
	(UPDATE_MANIFEST): Remove.
	* etc/NEWS: Mention this.
	* lib-src/Makefile.in (UPDATE_MANIFEST): Remove.
	(use_gamedir): New macro.
	(UTILITIES): Remove update-game-score unless use_gamedir.
	(SCRIPTS): Remove $(UPDATE_MANIFEST).
	($(DESTDIR)${archlibdir}): Install game directory program and data
	only if use_gamedir.
	* lib-src/update-game-score.exe.manifest: Remove, as
	update-game-score is no longer installed on MS-Windows.
	* lisp/play/gamegrid.el (gamegrid-add-score-with-update-game-score):
	Use auxiliary program only if setuid or setgid.
	* make-dist: Do not distribute update-game-score.exe.manifest.
	* src/callproc.c (init_callproc):
	Set Vshared_game_score_directory based on PATH_GAME, not DOS_NT.
	(syms_of_callproc): Remove unnecessary initialization of
	Vshared_game_score_directory.

2017-03-12  Simen Heggestøyl  <simenheg@gmail.com>

	Add `touch-action' to list of CSS properties

	* lisp/textmodes/css-mode.el (css-property-alist): Add `touch-action'
	property.

2017-03-12  Eli Zaretskii  <eliz@gnu.org>

	Teach etags to process ENUM_BF correctly

	* lib-src/etags.c (sym_type): New enumeration value st_C_enum_bf.
	(hash): Regenerated values for asso_values[] array.
	(in_word_set): Update values of TOTAL_KEYWORDS and
	MAX_HASH_VALUE.  Add "ENUM_BF" to the wordlist[] array.
	(in_enum_bf): New file-global variable.
	(consider_token): Skip ENUM_BF if not in a macro definition.
	(C_entries): Reset the in_enum_bf flag when past its closing
	parenthesis.

	* test/manual/etags/ETAGS.good_1:
	* test/manual/etags/ETAGS.good_2:
	* test/manual/etags/ETAGS.good_3:
	* test/manual/etags/ETAGS.good_4:
	* test/manual/etags/ETAGS.good_5:
	* test/manual/etags/ETAGS.good_6:
	* test/manual/etags/CTAGS.good: Adapt to changes in etags.

2017-03-12  Michael Albinus  <michael.albinus@gmx.de>

	Use path/to/file instead of path/to.file in tramp.texi

	* doc/misc/tramp.texi (Configuration, File name Syntax):
	Use path/to/file instead of path/to.file.

2017-03-12  Paul Eggert  <eggert@cs.ucla.edu>

	Remove some stray gnulib files

	* admin/merge-gnulib: rm m4/gnulib-tool.m4 too.
	(GNULIB_MODULES): Remove unsetenv, as it is not needed and
	the --avoid=unsetenv option avoided most of it anyway.
	* lib/unsetenv.c, m4/gnulib-tool.m4, m4/setenv.m4: Remove.
	* lib/gnulib.mk: Regenerate.

2017-03-12  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-03-11 gnulib-common.m4: avoid aclocal.m4 bloat
	* doc/misc/texinfo.tex, m4/gnulib-common.m4: Copy from gnulib.

2017-03-12  Glenn Morris  <rgm@gnu.org>

	Remove trivial duplication in epg-config

	* lisp/epg-config.el (epg-config--program-alist):
	Use epg-gpg-minimum-version.

2017-03-12  Glenn Morris  <rgm@gnu.org>

	Small epg-find-configuration improvement

	* lisp/epg-config.el (epg-find-configuration):
	Handle epg-gpg-program customized but not saved.  (Bug#25947)

2017-03-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	Improve last change

	* lisp/emacs-lisp/lisp-mode.el (lisp-el-font-lock-keywords-2):
	Use ppss to check escaping and add help-echo.

2017-03-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	Highlight useless backslashes in Elisp strings

	* lisp/emacs-lisp/lisp-mode.el (lisp-el-font-lock-keywords-2):
	Put warning face on backslashes that have no effect.

2017-03-11  Eli Zaretskii  <eliz@gnu.org>

	Document how to customize input methods

	* doc/emacs/mule.texi (Input Methods): Document how to customize
	input methods.

2017-03-11  Eli Zaretskii  <eliz@gnu.org>

	* lisp/net/eww.el (eww-reload): Doc fix.  (Bug#25981)

2017-03-11  Eli Zaretskii  <eliz@gnu.org>

	Fix generation of nt/gnulib.mk on macOS

	* nt/Makefile.in (${srcdir}/gnulib.mk): Don't use the -f- option
	to Sed, as that is not portable with non-GNU Sed variants.
	(Bug#26043)

2017-03-11  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts/assertion violations due to 'vim-empty-lines-mode'

	* src/xdisp.c (handle_single_display_spec): If position to be
	restored after processing the display property comes from an
	overlay, protect against that overlay's end point being outside of
	the narrowed region.
	Reported by Filipe Silva <filipe.silva@gmail.com> in
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00176.html.

2017-03-10  Glenn Morris  <rgm@gnu.org>

	Small improvement for epa-display-error (bug#24553)

	* lisp/epa.el (epa-display-error): Report the actual program in use.

2017-03-10  Paul Eggert  <eggert@cs.ucla.edu>

	Tweak X toolkit code to pacify modern GCC

	* lwlib/lwlib-Xaw.c, lwlib/lwlib-Xm.c, lwlib/lwlib.c:
	Don’t include <stdlib.h>, since this code now calls emacs_abort
	rather than abort.
	* lwlib/lwlib-Xaw.c (make_dialog, xaw_generic_callback)
	(wm_delete_window):
	* lwlib/lwlib-Xm.c (make_menu_in_widget, do_call):
	* lwlib/lwlib.c (instantiate_widget_instance, lw_make_widget):
	* lwlib/xlwmenu.c (abort_gracefully, draw_separator)
	(separator_height, XlwMenuInitialize):
	Use emacs_abort, not abort.  Without this change, some calls
	to ‘abort’ were invalid, as stdlib.h was not always included.
	* src/widget.c (resources, emacsFrameClassRec):
	* src/xfns.c (x_window) [USE_X_TOOLKIT]:
	* src/xmenu.c (create_and_show_popup_menu) [USE_X_TOOLKIT]:
	* src/xterm.c (emacs_options) [USE_X_TOOLKIT}:
	(x_term_init) [USE_X_TOOLKIT]:
	Cast string constants to char * to pacify --enable-gcc-warnings.

2017-03-10  Michael Albinus  <michael.albinus@gmx.de>

	* doc/misc/tramp.texi (Android shell setup): Require adb program

2017-03-10  Michael Albinus  <michael.albinus@gmx.de>

	Adapt tramp-tests.el

	* test/lisp/net/tramp-tests.el (tramp-test06-directory-file-name)
	(tramp-test24-file-name-completion): Call
	`tramp-completion-mode-p' with argument.

2017-03-10  Thien-Thi Nguyen  <ttn@gnu.org>

	[doc] Replace bindat example: s/fortune cookie/rfc868 payload/

	* doc/lispref/processes.texi (Bindat Examples):
	Mention two examples in intro blurb; rewrite first example.

2017-03-10  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify checks for xdg-open and xdg-email

	browse-url's xdg-open detection was too picky on some GNU/Linux
	desktops; see Bug#25778.  Simplify the code by assuming xdg-open works
	if it is executable, as nowadays this is more likely to be correct than
	trying to use heuristics from a few years ago.  Don't test for nohup: it
	is ineffective nowadays, as xdg-open's child uses the default action for
	SIGHUP even if xdg-open's invoker ignores SIGHUP.  While we're at it,
	allow for Wayland here, as "emacs -nw" might be running in a non-X
	Wayland terminal.
	* lisp/mail/emacsbug.el (report-emacs-bug-can-use-xdg-email):
	* lisp/net/browse-url.el (browse-url-can-use-xdg-open):
	Simplify to a test for DISPLAY and whether the helper program is
	executable.  Allow WAYLAND_DISPLAY as an option.

2017-03-09  Vibhav Pant  <vibhavp@gmail.com>

	Byte compile cond clauses without any bodies correctly.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-cond-jump-table): When a
	cond clause has no body, push t on to the stack.

2017-03-09  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug#23006

	* lisp/minibuffer.el (completion--nth-completion):
	Let-bind `non-essential'.

	* lisp/net/tramp.el (tramp-completion-mode): Fix docstring.
	(tramp-completion-mode-p): Optional parameter VEC.  Replace
	check for `last-input-event' by analysing VEC argument.
	(tramp-error-with-buffer, tramp-file-name-handler)
	(tramp-connectable-p, tramp-handle-file-name-as-directory):
	* lisp/net/tramp-sh.el (tramp-maybe-open-connection): Use it.

2017-03-09  Vibhav Pant  <vibhavp@gmail.com>

	etc/NEWS: Add entry for new `switch' bytecode.

2017-03-08  Paul Eggert  <eggert@cs.ucla.edu>

	* src/data.c (arithcompare): Add comments.

2017-03-08  Glenn Morris  <rgm@gnu.org>

	Update a cl-print test

	* test/lisp/emacs-lisp/cl-print-tests.el (cl-print-tests-1):
	Update for recent change in cl-print-object function output.

2017-03-08  Sam Steingold  <sds@gnu.org>

	Replace change-log-date-face -> change-log-date

	This fixes c430f7e23fc2c22f251ace4254e37dea1452dfc3.

2017-03-08  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug#26011

	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file-via-buffer):
	Check, whether file is too large.  (Bug#26011)

2017-03-08  Andreas Schwab  <schwab@linux-m68k.org>

	* src/data.c (minmax_driver): Use CHECK_NUMBER_OR_FLOAT_COERCE_MARKER.
	(Fmax, Fmin): Restore documentation.

	* src/data.c (cons_to_unsigned, cons_to_signed, Fstring_to_number): Reorder
	comparisons that are written backward.

2017-03-08  Thien-Thi Nguyen  <ttn@gnu.org>

	[doc elisp] Add some index entries for "old" advice mechanism

	* doc/lispref/functions.texi (Porting old advice):
	Add one @cindex and two @findex entries.

2017-03-08  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/NEWS: Adjust to match previous patch.

2017-03-08  Paul Eggert  <eggert@cs.ucla.edu>

	min and max should not return markers

	Problem reported by Glenn Morris in:
	https://lists.gnu.org/r/emacs-devel/2017-03/msg00147.html
	* src/data.c (minmax_driver): Convert any marker result to an
	integer, since some callers assume this.
	* test/src/data-tests.el (data-tests-max, data-tests-min):
	Test for this.

2017-03-08  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-print.el (cl-print-object): Use #f(..) for functions.

2017-03-08  Alan Third  <alan@idiocy.org>

	Add missing timeout value in ns_select

	* src/nsterm.m (ns_select): Set timeout to distant future when relying
	on fd_handler's timeout.

2017-03-07  Glenn Morris  <rgm@gnu.org>

	* admin/update_autogen: Ensure nt/gnulib.mk exists, for autoreconf.

2017-03-07  Paul Eggert  <eggert@cs.ucla.edu>

	Remove isnan hack for Solaris 10 gcc 3.4.3

	This seems to have been a false alarm (Bug#26018).
	* src/data.c (isnan):
	* src/floatfns.c (isfinite, isnan):
	Use standard implementation if available.

2017-03-07  Eli Zaretskii  <eliz@gnu.org>

	Support browsing URLs with embedded spaces on MS-Windows

	* lisp/net/browse-url.el (browse-url-default-windows-browser):
	Unhex %XX hex-encoded characters, as w32-shell-execute doesn't
	support that in file:// URLs.  (Bug#26014)

2017-03-07  Paul Eggert  <eggert@cs.ucla.edu>

	Define copysign on all platforms

	* configure.ac (copysign): Remove test.
	* src/floatfns.c (signbit): New macro, if not already defined.
	(Fcopysign): Use it instead of copysign.
	(Fcopysign, syms_of_floatfns): Define the function on all platforms.

2017-03-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Revert "Replace ldefs-boot with a much smaller file"

	This reverts commit c27b645956a11fab1dd8fa189254d525390958f5.

	This commit has been reverted because the new mechanism was too
	sensitive to changes in the lisp source, generation of new ldefs-boot
	files was platform specific and resulted in warnings about undefined
	variables.

	See also 11436e2890d.

2017-03-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Revert "Record autoloads till emacs dump"

	This reverts commit 72c668a9042ac6475eadedfee5c87fb1e6b2d753.

	This commit has been reverted because the new mechanism was too
	sensitive to changes in the lisp source, generation of new ldefs-boot
	files was platform specific and resulted in warnings about undefined
	variables.

	See also 11436e2890d.

2017-03-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Revert "Remove unused ldefs-boot.el"

	This reverts commit ef8c9f8fc922b615aca91b47820d1f1900fddc96.

	This commit has been reverted because the new mechanism was too
	sensitive to changes in the lisp source, generation of new ldefs-boot
	files was platform specific and resulted in warnings about undefined
	variables.

	See also 11436e2890d.

2017-03-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Revert "Remove conditional includes from bootstrap"

	This reverts commit 1b946305182312faa7fcd838caf55dcb07b2ab04.

	This commit has been reverted because the new mechanism was too
	sensitive to changes in the lisp source, generation of new ldefs-boot
	files was platform specific and resulted in warnings about undefined
	variables.

	See also 11436e2890d.

2017-03-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Revert "Speed generation of ldefs-boot-auto"

	This reverts commit 7b5e1c8238ef961fd3305b1dce053b9bced684ba.

	This commit has been reverted because the new mechanism was too
	sensitive to changes in the lisp source, generation of new ldefs-boot
	files was platform specific and resulted in warnings about undefined
	variables.

	See also 11436e2890d.

2017-03-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Revert "Fix minor problems with loaddefs autogeneration"

	This reverts commit f2bd2c1e6476acc71e71f6cb2a1c56c5edd900ba.

	This commit has been reverted because the new mechanism was too
	sensitive to changes in the lisp source, generation of new ldefs-boot
	files was platform specific and resulted in warnings about undefined
	variables.

2017-03-07  Noam Postavsky  <npostavs@gmail.com>

	Set default when asking for send-mail-function (Bug#25874).

	* lisp/mail/sendmail.el (sendmail-query-user-about-smtp): Pass first
	option as default for `completing-read'.

2017-03-07  Paul Eggert  <eggert@cs.ucla.edu>

	min and max now return one of their arguments

	* doc/lispref/numbers.texi (Comparison of Numbers):
	* etc/NEWS: Document this.
	* src/data.c (Amax, Amin): Remove constants.  All uses removed.
	(minmax_driver): New function.
	(Fmax, Fmin): Use it instead of arith_driver.
	* test/src/data-tests.el (data-tests-max, data-tests-min): New tests.

2017-03-06  Alan Third  <alan@idiocy.org>

	Remove NSEvent loop from ns_select (bug#25265)

	* src/nsterm.m (ns_select): Remove event processing loop and replace
	with simple test for a new event.

2017-03-06  Eli Zaretskii  <eliz@gnu.org>

	A better fix for bug#25845

	* src/xdisp.c (font_for_underline_metrics): New function.
	* src/dispextern.h: Add its prototype.
	* src/xterm.c (x_draw_glyph_string):
	* src/w32term.c (x_draw_glyph_string):
	* src/nsterm.m (ns_draw_text_decoration): Call it.  This avoids
	having identical code 3 times in 3 different files.

2017-03-06  Noam Postavsky  <npostavs@gmail.com>

	Fix warning message about native completion (Bug#25984)

	* lisp/progmodes/python.el (python-shell-completion-native-turn-on-maybe):
	The relevant variable is `python-shell-completion-native-enable'.

2017-03-06  Tom Tromey  <tom@tromey.com>

	Fix typos in EIEIO manual

	* doc/misc/eieio.texi (Slot Options, Class Options): Fix typos.

2017-03-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-03-04 dtotimespec: simplify
	* lib/dtotimespec.c: Copy from gnulib.

2017-03-05  Paul Eggert  <eggert@cs.ucla.edu>

	ffloor etc. now accept only floats

	* etc/NEWS: Say why.
	* src/floatfns.c (Ffceiling, Fffloor, Ffround, Fftruncate):
	Require arg to be float.
	* test/src/floatfns-tests.el (fround-fixnum): Check this.

2017-03-05  Eli Zaretskii  <eliz@gnu.org>

	Fix display of cursor on underlined text

	* src/nsterm.m (ns_draw_text_decoration):
	* src/xterm.c (x_draw_glyph_string):
	* src/w32term.c (x_draw_glyph_string): Compute the position and
	thickness of the underline by looking for the first glyph of the
	run of underlined glyphs that includes the glyph string we are
	drawing.  (Bug#25845)

2017-03-05  Mark Oteiza  <mvoteiza@udel.edu>

	Add more CL concept index items, print Concept Index

	* doc/misc/cl.texi: Print concept index.
	(Generalized Variables, Variable Bindings):
	(Dynamic Bindings, Function Bindings, Macro Bindings, Conditionals):
	(Blocks and Exits, Iteration, Multiple Values): Add concept index
	items.

2017-03-05  Mark Oteiza  <mvoteiza@udel.edu>

	Add 'loop facility' to the CL concept index

	* doc/misc/cl.texi (Loop Facility): Add "loop facility" as a concept
	index item.

2017-03-05  martin rudalics  <rudalics@gmx.at>

	In `window--display-buffer' fix behavior reported in Bug#25946

	* lisp/window.el (window--display-buffer): Set the dedicated
	status of the window used and clear its history of previous
	buffers also for the case that the window already shows the
	buffer to be displayed.  (Bug#25946)

2017-03-05  Paul Eggert  <eggert@cs.ucla.edu>

	Compare and round more carefully

	* etc/NEWS: Document this.
	* src/data.c (store_symval_forwarding):
	* src/sound.c (parse_sound):
	Do not botch NaN comparison.
	* src/data.c (cons_to_unsigned, cons_to_signed):
	Signal an error if a floating-point arg is not integral.
	* src/data.c (cons_to_unsigned, cons_to_signed):
	* src/fileio.c (file_offset):
	Use simpler overflow check.
	* src/dbusbind.c (xd_extract_signed, xd_extract_unsigned):
	Avoid rounding error in overflow check.
	(Fcar_less_than_car): Use arithcompare directly.
	* test/src/charset-tests.el: New file.

2017-03-05  Paul Eggert  <eggert@cs.ucla.edu>

	Fewer rounding errors with (format "%f" fixnum)

	* etc/NEWS: Document this.
	* src/editfns.c (styled_format): When formatting integers via a
	floating-point format, use long double instead of double
	conversion, if long double’s extra precision might help.

2017-03-05  Paul Eggert  <eggert@cs.ucla.edu>

	* src/floatfns.c (Fftruncate): Simplify via emacs_trunc.

	* src/editfns.c (styled_format): Omit unnecessary code for "%0d" etc.

2017-03-04  Eli Zaretskii  <eliz@gnu.org>

	Clarify documentation of 'raise' and 'height' display specs

	* doc/lispref/display.texi (Other Display Specs): Clarify the
	effect of 'height' display spec on the following 'raise'.
	(Bug#25824)

2017-03-04  Eli Zaretskii  <eliz@gnu.org>

	Fix header shown by Info 'L' command

	* lisp/info.el (Info-history-find-node): A better heading for the
	list of visited nodes.  (Bug#25876)

2017-03-04  K. Handa  <handa@gnu.org>

	Add a section about incorrect Bengali rendering.

2017-03-04  Eli Zaretskii  <eliz@gnu.org>

	Fix minor problems with loaddefs autogeneration

	* admin/ldefs-clean.el (ldefs-clean): Bind coding-system-for-read
	and coding-system-for-write, to produce a UTF-8 file with Unix
	EOLs on MS-Windows.

	* lisp/ldefs-boot-manual.el (image-type): Add autoload cookie.

2017-03-04  David Bremner  <david@tethera.net>  (tiny change)

	Fix issues with dedicated windows in shr.el

	* lisp/net/shr.el (shr-pixel-buffer-width, shr-render-td-1): Make
	the window not dedicated, to avoid errors if it was, before
	setting its buffer temporarily.  (Bug#25828)

2017-03-04  Eli Zaretskii  <eliz@gnu.org>

	Mention problems with GPaste in PROBLEMS

	* etc/PROBLEMS (GPaste): Mention the problem in yanking caused by
	GPaste, and its solution.  (Bug#25902)

2017-03-04  Glenn Morris  <rgm@gnu.org>

	Avoid duplicate gud menu items with gdb-mi

	* lisp/progmodes/gud.el (gud-menu-map): Avoid duplicate "Run"
	entries in gdbmi mode.  (Bug#23923)

2017-03-03  Paul Eggert  <eggert@cs.ucla.edu>

	* src/editfns.c (styled_format): Omit unnecessary code.

2017-03-03  Paul Eggert  <eggert@cs.ucla.edu>

	logb now works correctly on large integers

	* admin/merge-gnulib (GNULIB_MODULES): Add count-leading-zeros.
	* etc/NEWS: Document the change.
	* lib/count-leading-zeros.c, lib/count-leading-zeros.h:
	* m4/count-leading-zeros.m4: New files, copied from Gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	* src/floatfns.c: Include count-leading-zeros.h.
	(Flogb): Do not convert fixnum to float before taking the log,
	as the rounding error can cause the answer to be off by 1.
	* src/lisp.h (EMACS_UINT_WIDTH): New constant.
	* test/src/floatfns-tests.el (logb-extreme-fixnum): New test.

2017-03-03  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-02-25 maintainer-makefile: Fix AC_PROG_SED with autoconf cache.
	2017-02-24 ftoastr: port to -Wdouble-promotion
	* lib/ftoastr.c, m4/gnulib-common.m4: Copy from gnulib.

2017-03-03  Eli Zaretskii  <eliz@gnu.org>

	Avoid duplicating characters recorded in macros

	* src/keyboard.c (record_char): Don't store in macro definitions
	characters that came from executing a macro.  (Bug#25860)

2017-03-03  Eli Zaretskii  <eliz@gnu.org>

	Fix color component calculations in color.el

	* lisp/color.el (color-name-to-rgb): Use 16 bits per color component.
	(color-rgb-to-hex): Accept an optional argument
	DIGITS-PER-COMPONENT, defaulting to 4, and format the hexadecimal
	notation either for 8 or 16 bits per component.  (Bug#25890)
	* lisp/net/shr-color.el (shr-color->hexadecimal): Call
	color-rgb-to-hex with the optional argument of 2, to match color
	processing on the Web.

2017-03-03  Tino Calancha  <tino.calancha@gmail.com>

	Use lexical binding in benchmark.el

	* lisp/emacs-lisp/benchmark.el: Enable lexical binding.
	(benchmark-elapse): Use 'declare'.
	* test/lisp/emacs-lisp/benchmark-tests.el: Add test suite.

2017-03-03  Noam Postavsky  <npostavs@gmail.com>

	Switch pp.el to lexical binding

	Additionally, do some minor code cleanup.

	* lisp/emacs-lisp/pp.el: Set lexical-binding.
	(pp-buffer): Use skip-syntax-forward.
	(pp-eval-expression): Use push.
	(pp-last-sexp): Use with-syntax-table.
	* test/lisp/emacs-lisp/pp-tests.el: New tests.

2017-03-03  Chunyang Xu  <mail@xuchunyang.me>  (tiny change)

	Fix completing-read call in reb-change-syntax

	* lisp/emacs-lisp/re-builder.el (reb-change-syntax): Use 'default' arg
	of completing-read.

2017-03-03  Rolf Ade  <rolf@pointsman.de>  (tiny change)

	sql-mode w/ sqlite: In-memory database

	Enable the usage of an in-memory database. Prior to this, sql-mode w/
	sqlite could only be used with file databases.
	* lisp/progmodes/sql.el (sql-get-login-ext): Don't expand an empty
	file name provided by the user, but call sub-process sqlite with that,
	in which case it uses an in-memory database.

2017-03-03  Allen Li  <vianchielfaura@gmail.com>

	Stop abbrev-prefix-mark from adding extra newline (Bug#25767)

	`abbrev--before-point' does not adjust `pos' to account for when it
	deletes the "-" left by abbrev-prefix-mark.  Therefore, when
	`abbrev-before-point' goes to restore point, it moves point one
	character too far forward.

	* lisp/abbrev.el (abbrev--before-point): Adjust pos when deleting "-".

2017-03-03  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/subr.el (apply-partially): Move to 'Basic Lisp functions' section.

2017-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	Restore XFLOATINT but with restricted args

	Turn instances of extract_float into XFLOAT_DATA when possible,
	and to a resurrected XFLOATINT when the arg is a number.
	The resurrected XFLOATINT is more like XFLOAT and XINT in
	that is valid only if its arg is a number.  This clarifies
	the ways in which floats can be extracted at the C level.
	* src/editfns.c (styled_format):
	* src/floatfns.c (extract_float, Fexpt):
	Use XFLOATINT rather than open-coding it.
	* src/fns.c (internal_equal):
	* src/image.c (imagemagick_load_image):
	* src/xdisp.c (resize_mini_window):
	Prefer XFLOAT_DATA to extract_float on values known to be floats.
	* src/frame.c (x_set_screen_gamma):
	* src/frame.h (NUMVAL):
	* src/image.c (x_edge_detection, compute_image_size):
	* src/lread.c (read_filtered_event):
	* src/window.c (Fset_window_vscroll):
	* src/xdisp.c (handle_single_display_spec, try_scrolling)
	(redisplay_window, calc_pixel_width_or_height, x_produce_glyphs)
	(on_hot_spot_p):
	Prefer XFLOATINT to extract_float on values known to be numbers.
	* src/lisp.h (XFLOATINT): Bring back this function, except
	it now assumes its argument is a number.

2017-03-02  Glenn Morris  <rgm@gnu.org>

	Ert commands to error if no test at point (bug#25931)

	* lisp/emacs-lisp/ert.el (ert-results-mode-menu):
	Deactivate some items if no test at point.
	(ert--results-test-at-point-no-redefinition):
	Add option to signal an error rather than return nil.
	(ert-results-pop-to-backtrace-for-test-at-point)
	(ert-results-pop-to-messages-for-test-at-point)
	(ert-results-pop-to-should-forms-for-test-at-point)
	(ert-results-describe-test-at-point): Error if no test at point.

2017-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	Remove XFLOATINT

	* src/lisp.h (XFLOATINT): Remove this alias for extract_float.
	All callers changed to use extract_float.
	* src/frame.h (NUMVAL): Now an inline function, not a macro.

2017-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix rounding errors in <, =, etc.

	* etc/NEWS: Document this.
	* src/bytecode.c (exec_byte_code):
	* src/data.c (arithcompare):
	Do not lose information when comparing floats to integers.
	* test/src/data-tests.el (data-tests-=, data-tests-<)
	(data-tests->, data-tests-<=, data-tests->=):
	Test this.

2017-03-02  Eli Zaretskii  <eliz@gnu.org>

	Fix display of mouse-highlight produced by overlapping overlays

	* src/xfaces.c (face_at_buffer_position): If called to find the
	mouse-face, only consider the highest-priority source for that
	face, and ignore the rest.  Previously, all the mouse-face
	definitions at POS were merged in that case.
	* src/xdisp.c (note_mouse_highlight): Record the overlay that
	specifies mouse-face _after_ clearing the info about the previous
	overlay, so as not to clear the information about the just-recorded
	overlay.  (Bug#25906)

2017-03-02  Eli Zaretskii  <eliz@gnu.org>

	Fix display of strike-through text in variable-height lines

	* src/nsterm.m (ns_draw_text_decoration):
	* src/xterm.c (x_draw_glyph_string):
	* src/w32term.c (x_draw_glyph_string): Fix calculation of the
	strike-through y-coordinate for a glyph row which is taller than
	the strike-through text.  (Bug#25907)

2017-03-02  Martin Rudalics  <rudalics@gmx.at>

	Don't call x_net_wm_state for scroll bar windows (Bug#24963, Bug#25887)

	* src/xterm.c (handle_one_xevent): For ConfigureNotify events
	don't call x_net_wm_state when the window is a scroll bar window.
	(Bug#24963, Bug#25887)

2017-03-02  Katsumi Yamaoka  <yamaoka@jpl.org>

	gnus-summary-select-article-buffer: Don't re-render existing article

	* lisp/gnus/gnus-sum.el (gnus-summary-select-article-buffer):
	Don't re-render existing article.

2017-03-02  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't add debbugs address to message body (bug#25896)

	* lisp/gnus/gnus-group.el (gnus-read-ephemeral-bug-group):
	Don't add debbugs address to message body (bug#25896), and
	don't add it to message header either if it already exists.

2017-03-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/cedet/semantic/db-global.el: Make dynbind use explicit

	(semanticdb--ih): Declare.
	(semanticdb-enable-gnu-global-databases): Use it instead of `ih'.
	(semanticdb-enable-gnu-global-in-buffer, semanticdb-get-database-tables)
	(semanticdb-find-tags-for-completion-method): Silence compiler warning.

2017-03-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/help-fns.el (describe-variable): Use cl-print for the value

	Use `pp-buffer' rather than `pp' so as to avoid calling prin1 twice.

2017-03-02  Glenn Morris  <rgm@gnu.org>

	* test/lisp/net/puny-tests.el: New file.

2017-03-02  Glenn Morris  <rgm@gnu.org>

	Small puny.el fix

	* lisp/net/puny.el (puny-decode-string-internal):
	Handle strings with no ascii parts.  (Bug#23688)

2017-03-02  Glenn Morris  <rgm@gnu.org>

	Small recover-this-file improvement

	* lisp/files.el (recover-this-file): Explicit error if not
	visiting a file.  (Bug#23671)

2017-03-01  Glenn Morris  <rgm@gnu.org>

	Fix for coding-system completion (bug#23670)

	* lisp/international/mule.el (read-buffer-file-coding-system):
	Ensure that completion-pcm--delim-wild-regex is enclosed in parens,
	so that completion-pcm--pattern->regex can append "*?".

2017-03-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix rounding error in ‘ceiling’ etc.

	Without this fix, (ceiling most-negative-fixnum -1.0) returns
	most-negative-fixnum instead of correctly signaling range-error,
	and similarly for floor, round, and truncate.
	* configure.ac (trunc): Add a check, since Gnulib’s doc says
	‘trunc’ is missing from MSVC 9.  The Gnulib doc says ‘trunc’ is
	also missing from some other older operating systems like Solaris
	9 which I know we don’t care about any more, so MSVC is the only
	reason to worry about ‘trunc’ here.
	* src/editfns.c (styled_format): Formatting a float with %c is now an
	error.  The old code did not work in general, because FIXNUM_OVERFLOW_P
	had rounding errors.  Besides, the "if (FLOATP (...))" was in there
	only as a result of my misunderstanding old code that I introduced
	2011.  Although %d etc. is sometimes used on floats that represent
	huge UIDs or PIDs etc. that do not fit in fixnums, this cannot
	happen with characters.
	* src/floatfns.c (rounding_driver): Rework to do the right thing
	when the intermediate result equals 2.305843009213694e+18, i.e.,
	is exactly 1 greater than MOST_POSITIVE_FIXNUM on a 64-bit host.
	Simplify so that only one section of code checks for overflow,
	rather than two.
	(double_identity): Remove.  All uses changed to ...
	(emacs_trunc): ... this new function.  Add replacement for
	platforms that lack ‘trunc’.
	* src/lisp.h (FIXNUM_OVERFLOW_P, make_fixnum_or_float):
	Make it clear that the arg cannot be floating point.
	* test/src/editfns-tests.el (format-c-float): New test.
	* test/src/floatfns-tests.el: New file, to test for this bug.

2017-03-01  Glenn Morris  <rgm@gnu.org>

	Small help--loaded-p fix

	* lisp/help-fns.el (help--loaded-p): Handle entry in load-history
	with nil file name.  (Bug#25847)

2017-03-01  Leo Liu  <sdl.web@gmail.com>

	* src/fns.c (Fbuffer_hash): Doc fix.

2017-03-01  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Don't use mapconcat with chars in gnus registry marks (Bug#25839)

	* lisp/gnus/gnus-registry.el (gnus-registry-article-marks-to-chars):
	Instead, use a plain concat, which will create a string out of a list
	of characters.

2017-03-01  Noam Postavsky  <npostavs@gmail.com>

	Fix epg-tests with dummy-pinentry program (Bug#23619)

	* test/data/epg/dummy-pinentry: New file.
	* test/lisp/epg-tests.el (with-epg-tests): Add it to gpg-agent.conf
	when a passphrase is required.  Add debug declaration.  Set
	GPG_AGENT_INFO non-destructively.

2017-02-28  Phillip Lord  <phillip.lord@russet.org.uk>

	Speed generation of ldefs-boot-auto

	Previously, generation of ldefs-boot-auto required at least one full
	bootstrap and, in extreme cases, two. Now, from build system, it
	requires the same time as taken to dump Emacs.

	* Makefile.in: Remove all calls, pass to src.
	* admin/ldefs-clean.el: Update for changed messages.
	* lisp/Makefile.in (compile-first-delete): Add.
	* lisp/ldefs-boot-auto.el: Update.
	* src/Makefile.in (generate-ldefs-boot): Add.

2017-02-28  Phillip Lord  <phillip.lord@russet.org.uk>

	Add error handling to magic-mode-alist

	* lisp/files.el (set-auto-mode): Add explicit error handling in two
	  places.

2017-02-28  Phillip Lord  <phillip.lord@russet.org.uk>

	Remove conditional includes from bootstrap

	Previously, bootstrap-emacs includes optional functionality, depending
	on the platform which is not needed for bootstrap function.  As a
	result, bootstrap-emacs contains different functions in different
	circumstances.  If ldefs-boot-auto.el is generated, then loaded
	functions will not be added to ldefs-boot-auto.el, although they may be
	required during some builds.  With this change, bootstrap-emacs should
	always behave the same way and, therefore, require the same autoloads.

	 * lisp/loadup.el: No longer load optional includes during bootstrap
	   dumping.
	 * lisp/ldefs-boot-auto.el: Regenerate.
	 * lisp/ldefs-boot-manual.el: Add two autoloads.

2017-02-28  Phillip Lord  <phillip.lord@russet.org.uk>

	Do not use find-file non-interactively

	 * lisp/international/titdic-cnv.el (miscdic-convert): Use
	   insert-file-contents in place of find-file.

2017-02-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/xdisp.c (overlay_arrows_changed_p): Fix return value and doc

	(update_overlay_arrows): Skip non-markers.

2017-02-28  Ken Brown  <kbrown@cornell.edu>

	Try to avoid hang when logging out of MS-Windows

	* src/w32term.c (x_update_window_begin, x_update_window_end)
	(my_show_window, my_set_window_pos, my_set_focus)
	(my_set_foreground_window, my_destroy_window)
	(my_bring_window_to_top, x_iconify_frame): Replace calls to
	SendMessage by calls to SendMessageTimeout with a 6-second
	timeout.  (Bug#25875)

2017-02-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/reftex-toc.el (reftex-re-enlarge): Demote errors.

2017-02-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* doc/misc/eieio.texi: Update to account for the cl-generic facilities

	(Quick Start, Class Options, Generics): Adjust names for cl-generic.
	(Methods): Document cl-defmethod.
	Explain in more detail the order in which the various
	methods are executed.  Document the conditions under which a method
	is redefined.  Remove reference to `eieio-generic-call-arglst`.
	Don't document the precise return value of cl-next-method-p.
	(Static Methods): Adjust to use `subclass` specializer.
	(Method Invocation): Use cl-call-next-method and drop mention of :primary.
	(Signal Handling, Signals): Adjust names and args for cl-generic; add
	cl-no-primary-method.
	(CLOS compatibility, Wish List): Adjust to new featureset.

2017-02-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/cedet/mode-local.el (define-mode-local-override): Declare doctring.

	* lisp/nxml/nxml-mode.el (nxml-mode): Use new sgml-syntax-propertize.

2017-02-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/sgml-mode.el: syntax-propertize <![CDATA and <?..?>

	(sgml-syntax-propertize-function): Mark <![CDATA and <?..?>.
	(sgml-syntax-propertize-inside): New fun.

2017-02-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/css-mode.el (css-completion-at-point): Auto-insert

	": ;" after completing a property.

2017-02-28  Tino Calancha  <tino.calancha@gmail.com>

	Show Ibuffer and jump to line listing current buffer

	* lisp/ibuffer.el (ibuffer-jump): New command (Bug#25577).

2017-02-27  Juri Linkov  <juri@linkov.net>

	* lisp/vc/add-log.el (change-log-next-buffer): Check if file exists

	before adding it to the list of files.

2017-02-27  Juri Linkov  <juri@linkov.net>

	Put text properties on query-replace separator string instead of "\0"

	* lisp/replace.el (query-replace--split-string):
	Split at a substring instead of just character.
	(query-replace-read-from): Put text properties on the
	separator string instead of "\0".  (Bug#25482)

2017-02-27  Juri Linkov  <juri@linkov.net>

	Add file name and its extension to suggestions in dired-mark-files-regexp

	* lisp/dired.el (dired-mark-files-regexp): Add file name
	and its extension to the list of suggested defaults.  (Bug#25578)

2017-02-27  Chunyang Xu  <mail@xuchunyang.me>  (tiny change)

	Prompt default extension in dired-mark-extension

	* lisp/dired-x.el (dired-mark-extension): Prompt default extension
	based on extension of file at point.  (Bug#25578)

2017-02-27  Tino Calancha  <tino.calancha@gmail.com>

	Prevent for consing in cl-mapc and cl-mapl

	* lisp/emacs-lisp/cl-extra.el (cl--mapcar-many): Add optional arg ACC;
	If non-nil, accumulate values in the result (Bug#25826).
	(cl-mapc): Do computations inside function instead of call cl-map.
	(cl-mapl): Do computations inside function instead of call cl-maplist.
	* lisp/emacs-lisp/cl-lib.el (mapcar): Add autoload cookie.
	Call cl--mapcar-many with non-nil 3rd argument.
	* test/lisp/emacs-lisp/cl-extra-tests.el (cl-extra-test-map)
	(cl-extra-test-mapc, cl-extra-test-mapcar, cl-extra-test-mapl)
	(cl-extra-test-maplist): New tests.

2017-02-27  Tino Calancha  <tino.calancha@gmail.com>

	Choose the right target dir on dired operations

	Prevent from changing the input target dir
	when dired-dwim-target is non-nil (Bug#25609).
	* lisp/dired-aux.el (dired-do-create-files):
	If dired-dwim-target is non-nil, then bind 'default' to nil.
	* test/lisp/dired-tests.el (dired-test-bug25609): Add test.

2017-02-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/xdisp.c (overlay_arrows_changed_p): Fix last change.

2017-02-27  Noam Postavsky  <npostavs@gmail.com>

	Don't record eshell/clear "command" in history (Bug#25838)

	`eshell/clear' is implemented by sending a series of blank lines,
	which is not a useful thing to have in the history.

	* lisp/eshell/em-hist.el (eshell-input-filter-default): Use
	`string-blank-p' which does check for newlines (even though newlines
	have comment-end syntax, not whitespace syntax class).
	* lisp/eshell/esh-mode.el (eshell/clear): Remove
	`eshell-add-to-history' from `eshell-input-filter-functions' while
	sending the blank lines.  This change is needed to solve the bug if
	the user customizes `eshell-input-filter' to something that doesn't
	filter newlines.

2017-02-26  Paul Eggert  <eggert@cs.ucla.edu>

	Remove a few unused C functions

	* src/eval.c (let_shadows_global_binding_p):
	* src/print.c (write_string):
	* src/systhread.c (sys_mutex_destroy, sys_thread_equal):
	Remove.
	* src/print.c (write_string): Rename from write_string_1.
	All uses changed.

2017-02-26  Eli Zaretskii  <eliz@gnu.org>

	Avoid segfault in overlay_arrows_changed_p

	* src/xdisp.c (overlay_arrows_changed_p): Fix recent change
	to avoid a segfault.

2017-02-26  Noam Postavsky  <npostavs@gmail.com>

	Don't call package--ensure-init-file if initialized during startup

	* lisp/emacs-lisp/package.el (package-initialize): Check
	`after-init-time' rather than `load-file-name' to decide if
	`package--ensure-init-file' should be called.  Depending on
	`load-file-name' will fail if the user calls `pacakge-initialize' in
	file which is loaded from the init file (Bug#24643, Bug#25819).

2017-02-26  Eli Zaretskii  <eliz@gnu.org>

	Fix display of before- and after-strings at invisible text

	* src/xdisp.c (next_overlay_string): Don't raise the
	ignore_overlay_strings_at_pos_p flag if the iterator is already
	set to continue at a buffer position different from the one
	where the overlay strings we just processed were loaded.  (Bug#25856)

2017-02-26  Michael Albinus  <michael.albinus@gmx.de>

	Work on `tramp-completion-mode-p'

	* etc/NEWS: Say that `tramp-completion-mode' is obsolete.

	* lisp/net/tramp.el (tramp-completion-mode): Make it obsolete.
	(tramp-completion-mode-p): Reintroduce the check for 'tab.

2017-02-25  Tom Tromey  <tom@tromey.com>

	Use font-lock-doc-face in js-mode

	Bug#25858:
	* lisp/progmodes/js.el (js-font-lock-syntactic-face-function): New
	defun.
	(js-mode): Use it.
	* test/lisp/progmodes/js-tests.el (js-mode-doc-comment-face): New
	test.

2017-02-25  Noam Postavsky  <npostavs@gmail.com>

	Don't use IP 0.0.0.0 for package test server (Bug#22582)

	* test/lisp/emacs-lisp/package-resources/package-test-server.py: Set
	'server_address' when port number is given on the command line.  Print
	IP and port number as a URL, and flush it after printing.
	* test/lisp/emacs-lisp/package-tests.el:
	(package-test-update-archives-async): Grab the whole URL from server
	output.

2017-02-25  Tom Tromey  <tom@tromey.com>

	Add more branch support to vc-dir

	Bug#25859:
	* lisp/vc/vc-dir.el (vc-dir-mode-map) Add "B" bindings.
	* lisp/vc/vc.el (vc-revision-history): New defvar.
	(vc-read-revision): Use vc-revision-history.
	(vc-print-branch-log): New function.
	* doc/emacs/maintaining.texi (VC Directory Commands): Document new
	bindings.
	* etc/NEWS: Mention new vc-dir bindings.

2017-02-25  Alan Mackenzie  <acm@muc.de>

	Allow for the :: operator in C++ "enum class" declarations.

	* lisp/progmodes/cc-engine.el (c-backward-typed-enum-colon): Check for
	"::".

2017-02-25  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug#25854

	* lisp/net/tramp-sh.el (tramp-do-file-attributes-with-ls):
	Simplify error handling for huge inodes.
	(tramp-convert-file-attributes): Handle very huge inodes.  (Bug#25854)

2017-02-25  Eli Zaretskii  <eliz@gnu.org>

	Avoid leaving garbage on screen when using 'raise' display property

	* src/xdisp.c (display_line): Reset voffset value of the iterator
	when it hits ZV, to avoid "inheriting" it to glyph rows past ZV,
	which then leaves stuff on screen that needs to be cleared by
	redisplay.  (Bug#25855)

2017-02-25  Eli Zaretskii  <eliz@gnu.org>

	Fix doc strings in info.el

	* lisp/info.el (Info-selection-hook, Info-mode-hook)
	(Info-edit-mode-hook): Doc fixes.  (Bug#25794)

2017-02-25  Eli Zaretskii  <eliz@gnu.org>

	Fix doc string of 'posn-at-point'

	* src/keyboard.c (Fposn_at_point): Clarify the doc string.
	(Bug#25796)

2017-02-25  Peder O. Klingenberg  <peder@klingenberg.no>

	New option -u / --suppress-output to emacsclient

	* lib-src/emacsclient.c (print_help_and_exit, longopts)
	(decode_options, main): Implement new option --suppress-output / -u to
	suppress printing of eval-results.
	* doc/emacs/misc.texi (emacsclient Options): Document the new
	"--suppress-output/-u" options.
	* etc/NEWS: Mention the new options.

2017-02-25  Noam Postavsky  <npostavs@gmail.com>

	Fix scrolling with partial line corner case (Bug#25792)

	Also fix up the scrolling tests so that they don't make so many
	assumptions about the current window configuration.

	* src/xdisp.c (try_window): Take partial line height into account when
	comparing cursor position against scroll margin.

	* test/manual/scroll-tests.el (scroll-tests-with-buffer-window): Add
	HEIGHT argument, to allow setting up window with exact height and
	partial line.
	(scroll-tests-display-buffer-with-height): New display-buffer action
	function.
	(scroll-tests-scroll-margin-over-max):
	(scroll-tests--scroll-margin-whole-window): Pass HEIGHT to
	`scroll-tests--scroll-margin-whole-window'.
	(scroll-tests-conservative-show-trailing-whitespace): New test.
	(scroll-tests-scroll-margin-negative): Fix line counting.
	(scroll-tests--point-in-middle-of-window-p): Set window height
	properly.

2017-02-25  Tom Tromey  <tom@tromey.com>

	Fix indentation error in js.el

	* lisp/progmodes/js.el (js--indent-in-array-comp): Wrap forward-sexp
	call in condition-case.
	* test/lisp/progmodes/js-tests.el (js-mode-indentation-error): New
	test.

2017-02-24  Tom Tromey  <tom@tromey.com>

	add "async" and "await" keywords

	* lisp/progmodes/js.el (js--keyword-re): Add async, await.

2017-02-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use cl-print for Edebug and EIEIO

	* lisp/emacs-lisp/edebug.el (edebug-prin1-to-string): Use cl-print.
	(edebug-prin1, edebug-print): Remove.

	* lisp/emacs-lisp/eieio.el (object-print): Declare obsolete.
	(cl-print-object): Add a method for EIEIO objects.
	(eieio-edebug-prin1-to-string): Delete.
	(edebug-prin1-to-string): Don't advise any more.

	* lisp/emacs-lisp/eieio-datadebug.el (data-debug-insert-object-button):
	Replace `object-print' -> `cl-prin1-to-string'.

2017-02-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	Fix left over uses of `call-next-method'

	* lisp/cedet/semantic/db-global.el (object-print):
	* lisp/cedet/semantic/db.el (object-print): Use `cl-call-next-method'.

2017-02-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	Minor redisplay optimizations

	* src/frame.c (Ficonify_frame): No need to redisplay everything.

	* src/xdisp.c (overlay_arrows_changed_p): Add `set_redisplay' argument.
	(redisplay_internal): Use it to avoid redisplaying everything.
	(try_window_id): Use it keep the same behavior as before.

2017-02-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-print.el: New file

	* lisp/emacs-lisp/nadvice.el (advice--where): New function.
	(advice--make-docstring): Use it.

	* src/print.c (print_number_index): Don't declare here any more.
	(Fprint_preprocess): New function.

	* test/lisp/emacs-lisp/cl-print-tests.el: New file.

2017-02-24  Peder O. Klingenberg  <peder@klingenberg.no>

	Make calc's least common multiple positive (bug#25255)

	* lisp/calc/calc-comb.el (calcFunc-lcm): Return absolute value.
	* doc/misc/calc.texi (Combinatorial Functions): Update for the above.

2017-02-24  Tino Calancha  <tino.calancha@gmail.com>

	Documentation fix in elisp reference manual

	* doc/lispref/macros.texi (Defining Macros): Drop redundant mention
	on 'declare' forms (Bug#25846).

2017-02-24  Gemini Lasswell  <gazally@runbox.com>

	Support read syntax for circular objects in Edebug (Bug#23660)

	* lisp/emacs-lisp/edebug.el (edebug-read-special): New name
	for edebug-read-function. Handle the read syntax for circular
	objects.
	(edebug-read-objects): New variable.
	(edebug-read-and-maybe-wrap-form1): Reset edebug-read-objects.

	* src/lread.c (Fsubstitute_object_in_subtree): Make
	substitute_object_in_subtree into a Lisp primitive.

2017-02-24  Lixin Chin  <lixinchin@gmail.com>  (tiny change)

	Add Conference to the list of valid bibtex entry types

	* lisp/textmodes/bibtex.el (bibtex-BibTeX-entry-alist):
	Add Conference as a duplicate of InProceedings.  (Bug#25143)

2017-02-23  Glenn Morris  <rgm@gnu.org>

	* lisp/comint.el (comint-password-prompt-regexp): Add SUDO. (Bug#24817)

2017-02-23  Glenn Morris  <rgm@gnu.org>

	Small dunnet score file improvements

	* lisp/play/dunnet.el (dun-log-file): Switch to per-user default.
	(dun-do-logfile): Handle non-existing score file.

2017-02-23  Glenn Morris  <rgm@gnu.org>

	* lisp/play/dunnet.el (dun-help): Doc fix.

2017-02-23  Mark Oteiza  <mvoteiza@udel.edu>

	Declare dun-line and dun-line-list

	Previously, there were free variables 'line' and 'line-list'.
	* lisp/play/dunnet.el (dun-line, dun-line-list): New variables.
	(dun-press, dun-vparse, dun-parse2, dun-unix-parse, dun-batch-parse):
	(dun-batch-parse2, dun-batch-loop, dun-batch-dos-interface):
	(dun-batch-unix-interface): Use them.

2017-02-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-02-16 xbinary-io: rename from xsetmode
	2017-02-15 xsetmode: new module
	* lib-src/etags.c (main):
	* lib-src/hexl.c (main):
	* src/emacs.c (main) [MSDOS]:
	Prefer set_binary_mode to the obsolescent SET_BINARY.
	* lib/binary-io.c, lib/binary-io.h: Copy from gnulib.

2017-02-23  Paul Eggert  <eggert@cs.ucla.edu>

	hexl: handle large files and I/O errors

	* lib-src/hexl.c: Include inttypes.h, for PRIxMAX etc.
	Do not include ctype.h, as the code no longer uses isdigit.
	(DEFAULT_GROUPING, un_flag, iso_flag, group_by): Now local to ‘main’.
	(DEFAULT_BASE, endian): Remove; was not really used.
	(usage): Remove; now done by ‘main’, as that’s simpler.
	(progname): Now static.
	(output_error, hexchar): New functions.
	(main): Use them.  Simplify.  Remove "-oct", "-big-endian", and
	"-little-endian" options, as they did not work and were not used.
	Use SET_BINARY only on stdin, and fopen with "rb" otherwise.
	Use SET_BINARY only once on stdout.
	Do not assume file offsets fit in ‘long’.
	If an I/O error occurs, report it and exit with nonzero status.

2017-02-23  Eli Zaretskii  <eliz@gnu.org>

	Avoid quitting inside a critical section on MS-Windows

	* src/w32uniscribe.c (uniscribe_list_family):
	* src/w32font.c (w32font_list_family, w32font_text_extents)
	(w32font_list_internal, w32font_match_internal)
	(list_all_matching_fonts): Prevent quitting while these functions
	cons lists of fonts, to avoid leaving the critical section taken
	by the main thread, which will then cause any other thread
	attempting to enter the critical section to hang.  (Bug#25279)

2017-02-22  Dmitry Gutov  <dgutov@yandex.ru>

	Use revision-completion-table in vc-retrieve-tag

	* lisp/vc/vc.el (vc-retrieve-tag): Use the
	revision-completion-table command for completion (bug#25710).

2017-02-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-generic.el (cl--generic-typeof-types): Add `atom'

	remove entries whose car can't be returned by type-of.
	(cl--generic-all-builtin-types): New var.
	(cl-generic-generalizers): Use it to avoid requiring
	extra entries in cl--generic-typeof-types.

2017-02-22  Noam Postavsky  <npostavs@gmail.com>

	Find macro binding for symbol-bound macros too (Bug#6848)

	There are 2 ways to bind a macro: with global-set-key or
	kmacro-bind-to-key.  The former binds a key to a symbol, while the
	latter binds to a lambda.  In 2010-03-03 "Fix keyboard macro key
	lookup (Bug#5481)", `insert-kbd-macro' was fixed to detect the lambda
	case, but broke the symbol case.

	* lisp/macros.el (insert-kbd-macro): Also check for bindings of
	MACRONAME.

2017-02-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-generic.el (cl-defgeneric): Fix last change

2017-02-22  Juri Linkov  <juri@linkov.net>

	* lisp/isearch.el (lazy-highlight-max-at-a-time): Doc fix (bug#21092).

2017-02-22  Juri Linkov  <juri@linkov.net>

	* lisp/isearch.el (isearch-lazy-highlight): New choice ‘all-windows’.

	(isearch-lazy-highlight-update): Check it to decide whether to apply
	overlays only on the selected window.

	* lisp/follow.el (follow-mode): Set isearch-lazy-highlight to ‘all-windows’.
	(Bug#17453, bug#21092)

2017-02-22  Paul Eggert  <eggert@cs.ucla.edu>

	Minor weak hash table performance tweaks

	* src/fns.c (make_hash_table): Omit unnecessary assignment to
	h->next_weak when the hash table is not weak.
	(copy_hash_table): Put the copy next to the original in the
	weak_hash_tables list, as this should have better locality
	when scanning the weak hash tables.

2017-02-22  Paul Eggert  <eggert@cs.ucla.edu>

	Use float instead of Lisp_Object for rehash_size

	* src/alloc.c (purecopy_hash_table):
	* src/fns.c (maybe_resize_hash_table, Fmake_hash_table):
	(Fhash_table_rehash_size):
	* src/lisp.h (struct Lisp_Hash_Table.rehash_size):
	The rehash_size member of struct Lisp_Hash_Table is now a
	float, not a Lisp_Object.
	* src/alloc.c (purecopy_hash_table): Assign members in order.
	* src/fns.c (make_hash_table): Use EMACS_INT for size and
	float for rehash_size, instead of Lisp_Object for both.
	All callers changed.
	* src/lisp.h (DEFAULT_REHASH_SIZE): Now float, not double,
	and 1 smaller.
	* src/print.c (print_object): Simplify by calling
	Fhash_table_rehash_size and Fhash_table_rehash_threshold.
	Avoid unnecessary NILP.

2017-02-22  Paul Eggert  <eggert@cs.ucla.edu>

	Use ptrdiff_t instead of Lisp_Object for collision

	* src/alloc.c (purecopy_hash_table): Assign, don’t purecopy.
	* src/fns.c (set_hash_next_slot, set_hash_index_slot): Hash index
	arg is now ptrdiff_t index (or -1 if empty), not Lisp_Object
	integer (or Qnil if empty).  All callers changed.
	(larger_vecalloc): New static function.
	(larger_vector): Use it.
	(HASH_NEXT, HASH_INDEX): Move here from lisp.h.  Return ptrdiff_t
	index (or -1) not Lisp_Object integer (or Qnil).  All callers changed.
	* src/fns.c (make_hash_table, maybe_resize_hash_table, hash_lookup)
	(hash_put, hash_remove_from_table, hash_clear, sweep_weak_table):
	* src/profiler.c (evict_lower_half, record_backtrace):
	-1, not nil, is now the convention for end of collision list.
	* src/fns.c (maybe_resize_hash_table): Avoid double-initialization
	of the free list.  Reallocate H->next last, in case other
	reallocations exhaust memory.
	* src/lisp.h (struct Lisp_Hash_Table): ‘next_free’ is now
	ptrdiff_t, not Lisp_Object.  Adjust commentary for ‘next’ and
	‘index’, which no longer contain nil.
	(HASH_NEXT, HASH_INDEX): Move to src/fns.c.

2017-02-22  Paul Eggert  <eggert@cs.ucla.edu>

	Hash table threshold is now float, not double

	Change default from 0.8 to 0.8125 so it fits in float without
	rounding glitches.
	* doc/lispref/hash.texi (Creating Hash):
	* doc/lispref/objects.texi (Hash Table Type):
	* etc/NEWS:
	Document change.
	* src/fns.c (make_hash_table, maybe_resize_hash_table)
	(Fmake_hash_table): Threshold is now float, not double.
	Be consistent about how this is rounded.
	* src/lisp.h (struct Lisp_Hash_Table.rehash_threshold):
	Change back to float, now that the other code rounds consistently.
	(DEFAULT_REHASH_THRESHOLD): Now float 0.8125 instead of double 0.8.

2017-02-22  Juri Linkov  <juri@linkov.net>

	Avoid flicker in lazy-highlight by doing all updates without redisplay.

	* lisp/isearch.el (lazy-highlight-max-at-a-time):
	Change default value from 20 to nil to not trigger redisplay
	between updating iterations.
	(lazy-highlight-cleanup): New arg ‘procrastinate’ to not remove
	overlays when non-nil.
	(isearch-lazy-highlight-new-loop): Call lazy-highlight-cleanup
	with non-nil second arg when the search string is not empty.
	Run timer with isearch-lazy-highlight-start instead of
	isearch-lazy-highlight-update.
	(isearch-lazy-highlight-start): New function. (Bug#25751)

2017-02-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/autoload.el (make-autoload): Support cl-defgeneric

	* lisp/emacs-lisp/cl-generic.el (cl-defgeneric): Tweak for autoloading.

2017-02-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-preloaded.el (cl-struct-define): Fix duplication

	which resulted in incomplete list of parents in one copy of the
	cl-structure-class class.

2017-02-21  Glenn Morris  <rgm@gnu.org>

	Tweak recent custom-reevaluate-setting change

	* lisp/custom.el (custom-reevaluate-setting):
	Tweak previous change to avoid font-lock init issues.

2017-02-21  Glenn Morris  <rgm@gnu.org>

	Ensure delayed-init custom variables get marked special

	* lisp/custom.el (custom-reevaluate-setting):
	If the variable has never been set, defvar it.  (Bug#25770)

2017-02-21  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in dunnet.el

	* lisp/play/dunnet.el: Turn on lexical-binding.  Re-instate lexical
	byte compile warnings.

2017-02-21  Mark Oteiza  <mvoteiza@udel.edu>

	Make dunnet insertion functions n-ary

	* lisp/play/dunnet.el (dun-mprinc, dun-mprincl, dun-minsert):
	(dun-minsertl, dun-batch-mprinc, dun-batch-mprincl): Change to accept
	any number of arguments.
	(dun-parse, dun-describe-room, dun-quit, dun-inven, dun-shake):
	(dun-take, dun-go, dun-move, dun-press, dun-score):
	(dun-compile-save-out, dun-do-logfile): Collect arguments from
	multiple insertion calls into less calls with more args.

2017-02-21  Katsumi Yamaoka  <yamaoka@jpl.org>

	message-goto-body-1: Fix regexp so as not to match multi-line

	* lisp/gnus/message.el (message-goto-body-1):
	Fix regexp so as not to match multi-line.

2017-02-20  Noam Postavsky  <npostavs@gmail.com>

	Simplify cl-get using `plist-member'

	* lisp/emacs-lisp/cl-extra.el (cl-get, cl-getf, cl--set-getf): Use
	`plist-member' instead of explicit loop.
	* test/lisp/emacs-lisp/cl-extra-tests.el: New tests.

2017-02-20  Paul Eggert  <eggert@cs.ucla.edu>

	Verify xwidget USE_LSB_TAG assumption

	* src/xwidget.c (Fxwidget_webkit_execute_script):
	Add verification.  Problem reported by Andreas Schwab (Bug#25816#8).

2017-02-20  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/insdel.c (make_gap): Improve comment.

2017-02-20  Mark Oteiza  <mvoteiza@udel.edu>

	Do not use switch-to-buffer for working in a temp buffer

	* lisp/play/dunnet.el (dunnet): Use pop-to-buffer-same-window instead,
	cf. Bug#22244.
	(dun-load-d, dun-eval, dun-save-game, dun-do-logfile): Use
	with-temp-buffer instead.

2017-02-20  Mark Oteiza  <mvoteiza@udel.edu>

	Make dun-room-shorts a defconst

	* lisp/play/dunnet.el (dun-room-shorts): Make defconst and collect
	initial value into the declaration.
	(dun-space-to-hyphen): Remove.

2017-02-20  Paul Eggert  <eggert@cs.ucla.edu>

	Port xwidget to -DCHECK_LISP_OBJECT_TYPE

	* src/xwidget.c (webkit_javascript_finished_cb)
	(Fxwidget_webkit_execute_script): Don't assume Lisp_Object is an
	integer.  This fix is just a hack; I’ll file a bug report about
	the underlying problem.

2017-02-20  Katsumi Yamaoka  <yamaoka@jpl.org>

	mm-decode.el: Simplify regexp used to search html meta tag

	* lisp/gnus/mm-decode.el (mm-add-meta-html-tag, mm-shr):
	Simplify regexp used to search html meta tag.

2017-02-20  Katsumi Yamaoka  <yamaoka@jpl.org>

	mm-shr: Ignore coding-system `ascii'

	* lisp/gnus/mm-decode.el (mm-shr): Ignore coding-system `ascii'.

2017-02-20  Tom Tromey  <tom@tromey.com>

	vc-log-outgoing fixes for git; add binding to vc-dir

	* lisp/vc/vc-dir.el (vc-dir-mode-map): Bind "O" to vc-log-outgoing.
	* lisp/vc/vc-git.el (vc-git-log-outgoing, vc-git-log-incoming): Use
	async execution.
	(vc-git-log-view-mode): Also truncate lines for log-outgoing and
	log-incoming.
	* lisp/vc/vc.el (vc-log-incoming, vc-log-outgoing): Don't pass nil
	as remote-location argument.

2017-02-20  Tom Tromey  <tom@tromey.com>

	Remove stale comments from vc-git and vc-hg

	* lisp/vc/vc-git.el (vc-git-retrieve-tag): Remove comment.
	* lisp/vc/vc-hg.el (vc-hg-retrieve-tag): Remove comment.

2017-02-20  Mark Oteiza  <mvoteiza@udel.edu>

	Remove member clone

	* lisp/play/dunnet.el (dun-answer): Use member instead.
	(dun-members): Remove.

2017-02-20  Mark Oteiza  <mvoteiza@udel.edu>

	Prefix global var

	* lisp/play/dunnet.el (room): Rename to dun-room.
	(dun-messages, dunnet, dun-describe-room, dun-drop, dun-move):
	(dun-restore, dun-do-logfile, dun-batch-loop): Use new name.

2017-02-20  Mark Oteiza  <mvoteiza@udel.edu>

	Replace nested ifs with cond

	* lisp/play/dunnet.el (dun-messages, dun-describe-room, dun-examine):
	(dun-eat, dun-put-objs, dun-turn, dun-press, dun-ls, dun-cd): Use when
	and cond where appropriate.
	(dun-sauna-heat): Accept sauna level as an argument.  Use cond.
	(dun-take): Use null and dun-mprincl.
	(dun-inven-weight, dun-load-d): Reformat.
	(dun-remove-obj-from-inven, dun-remove-obj-from-room): Nix setq to nil.

2017-02-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix glitches in recent hash table changes

	* src/fns.c (Fmake_hash_table): Simplify the machine code slightly
	by using 0 rather than -1.
	* src/lisp.h (struct Lisp_Hash_Table.pure): Now bool rather
	than a bitfield, for speed (the bitfield did not save space).
	(struct Lisp_Hash_Table.rehash_threshold): Now double rather than
	float, since the float caused unwanted rounding errors, e.g.,
	(hash-table-rehash-threshold (make-hash-table)) yielded
	0.800000011920929 instead of the correct 0.8.

2017-02-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/insdel.c (make_gap): Increase enough to avoid O(N^2) behavior.

2017-02-19  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts during loadup

	* src/emacs-module.c (syms_of_module):
	* src/image.c (xpm_make_color_table_h): Update calls to
	make_hash_table to adjust to a recent change in fns.c.
	* src/fns.c (make_hash_table):
	* src/lisp.h (make_hash_table): 4th arg is now of type double.

2017-02-19  Michael Albinus  <michael.albinus@gmx.de>

	Rework connection local variables

	For connection local variables interface, `class' is renamed
	to `profile'.  All arguments `criteria' are a plist now.

	* doc/lispref/variables.texi (Connection Local Variables):
	Rewrite.

	* lisp/files-x.el (connection-local-profile-alist): Rename
	from `connection-local-class-alist'.  Adapt docstring.
	(connection-local-criteria-alist): Adapt docstring.
	(connection-local-normalize-criteria): New defun.
	(connection-local-get-profiles): Rename from
	`connection-local-get-classes'.  Rewrite.
	(connection-local-set-profiles): Rename from
	`connection-local-set-classes'.  Rewrite.
	(connection-local-get-profile-variables): Rename from
	`connection-local-get-class-variables'.  Rewrite.
	(connection-local-set-profile-variables): Rename from
	`connection-local-set-class-variables'.  Rewrite.
	(hack-connection-local-variables)
	(hack-connection-local-variables-apply)): Rewrite.
	(with-connection-local-profiles): Rename from
	`ith-connection-local-classes'.  Rewrite.

	* lisp/net/tramp.el (tramp-set-connection-local-variables):
	Compute criteria.

	* lisp/net/tramp-cmds.el (tramp-bug):
	Use `connection-local-profile-alist'.

	* test/lisp/files-x-tests.el (files-x-test--variables1)
	(files-x-test--variables2, files-x-test--variables3)
	(files-x-test--variables4, files-x-test--criteria1)
	(files-x-test--criteria2): Make them a defconst.
	(files-x-test--application)
	(files-x-test--another-application, files-x-test--protocol)
	(files-x-test--user, files-x-test--machine): New defconst.
	(files-x-test--criteria): New defvar.
	(files-x-test--criteria3): Remove.
	(files-x-test-connection-local-set-profile-variables):
	Rename from `files-x-test-connection-local-set-class-variables'.
	Rewrite.
	(files-x-test-connection-local-set-profiles): Rename from
	`files-x-test-connection-local-set-classes'.  Rewrite.
	(files-x-test-hack-connection-local-variables-apply)  Rewrite.
	(files-x-test-with-connection-local-profiles): Rename from
	`files-x-test-with-connection-local-classes'.  Rewrite.

2017-02-19  Mark Oteiza  <mvoteiza@udel.edu>

	Set up combination and random item location

	* lisp/play/dunnet.el (dun-combination): Make defconst.
	(tloc, tcomb): Remove.  Replace with a top-level form.

2017-02-19  Mark Oteiza  <mvoteiza@udel.edu>

	Replace movement variables with an alist and accessor

	* lisp/play/dunnet.el (north, south, east, west, northeast, southeast):
	(northwest, southwest, up, down, in, out): Remove.
	(dun-movement-alist): New constant.
	(dun-movement): New function.
	(dun-n, dun-s, dun-e, dun-w, dun-ne, dun-se, dun-nw, dun-sw, dun-up):
	(dun-down, dun-in, dun-out): Use a symbol for indicating movement.
	(dun-move, dun-special-move): Translate movement symbol to an
	enumeration.

2017-02-19  Mark Oteiza  <mvoteiza@udel.edu>

	Change top-level setq forms to defvar or defconst

	Also collect some code onto fewer lines and reindent.
	* lisp/play/dunnet.el (dun-visited, dun-current-room, dun-exitf):
	(dun-badcd, dun-computer, dun-floppy, dun-key-level, dun-hole):
	(dun-correct-answer, dun-lastdir, dun-numsaves, dun-jar, dun-dead):
	(room, dun-numcmds, dun-wizard, dun-endgame-question, dun-logged-in):
	(dungeon-mode, dun-unix-verbs, dun-dos-verbs, dun-batch-mode):
	(dun-cdpath, dun-cdroom, dun-uncompressed, dun-ethernet):
	(dun-restricted, dun-ftptype, dun-endgame, dun-rooms):
	(dun-light-rooms, dun-verblist, dun-inbus, dun-nomail, dun-ignore):
	(dun-mode, dun-sauna-level, north, south, east, west, northeast):
	(southeast, northwest, southwest, up, down, in, out, dungeon-map):
	(dun-objnames, obj-special, dun-room-objects, dun-room-silents):
	(dun-inventory, dun-objects, dun-object-lbs, dun-object-pts):
	(dun-objfiles, dun-perm-objects, dun-physobj-desc, dun-permobj-desc):
	(dun-diggables, dun-room-shorts, dun-endgame-questions): Change
	declaration to use defvar or defconst.
	(dun-doverb, dun-vparse, dun-vparse2, dun-batch-parse):
	(dun-batch-parse2): Omit the dun- prefix from arguments dun-ignore
	dun-verblist.  Those are now constants and the byte compiler doesn't
	allow defconsts in lambda lists.

2017-02-19  Mark Oteiza  <mvoteiza@udel.edu>

	Move all dunnet globals up to the top

	* lisp/play/dunnet.el: Adjust comments to reflect moved forms.
	(dun-visited, dun-current-room, dun-exitf):
	(dun-badcd, dun-computer, dun-floppy, dun-key-level, dun-hole):
	(dun-correct-answer, dun-lastdir, dun-numsaves, dun-jar, dun-dead):
	(room, dun-numcmds, dun-wizard, dun-endgame-question, dun-logged-in):
	(dungeon-mode, dun-unix-verbs, dun-dos-verbs, dun-batch-mode):
	(dun-cdpath, dun-cdroom, dun-uncompressed, dun-ethernet):
	(dun-restricted, dun-ftptype, dun-endgame, dun-rooms):
	(dun-light-rooms, dun-verblist, dun-inbus, dun-nomail, dun-ignore):
	(dun-mode, dun-sauna-level, north, south, east, west, northeast):
	(southeast, northwest, southwest, up, down, in, out, dungeon-map):
	(dun-objnames, obj-special, dun-room-objects, dun-room-silents):
	(dun-inventory, dun-objects, dun-object-lbs, dun-object-pts):
	(dun-objfiles, dun-perm-objects, dun-physobj-desc, dun-permobj-desc):
	(dun-diggables, dun-room-shorts, dun-endgame-questions): Move to the
	top of the file, before any uses.

2017-02-19  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug#25788

	* lisp/net/tramp.el (tramp-autoload-file-name-handler):
	Do not load tramp.el just for "/".  (Bug#25788)

2017-02-19  YAMAMOTO Mitsuharu  <mituharu@math.s.chiba-u.ac.jp>

	Fix fringe bitmap initialization on MS-Windows

	* src/fringe.c (init_fringe_bitmap) [HAVE_NTGUI]: Fix initialization
	of fb->bits.  (Bug#25673)

2017-02-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	Change type of `rehash_threshold' and `pure' fields in hash-tables

	* src/lisp.h (struct Lisp_Hash_Table): Change type of
	`rehash_threshold' and `pure' fields and move them after `count'.
	* src/fns.c (make_hash_table): Change type of `rehash_threshold' and `pure'.
	(Fmake_hash_table, Fhash_table_rehash_threshold):
	* src/category.c (hash_get_category_set):
	* src/xterm.c (syms_of_xterm):
	* src/profiler.c (make_log):
	* src/print.c (print_object):
	* src/alloc.c (purecopy_hash_table, purecopy): Adjust accordingly.

2017-02-19  Paul Eggert  <eggert@cs.ucla.edu>

	Use 'char *FOO' instead of 'char* FOO'

2017-02-19  Mark Oteiza  <mvoteiza@udel.edu>

	More json.el changes

	* lisp/json.el (json-read-keyword, json-read-number, json-read-object):
	(json-read-array): Just use = for char comparison.

2017-02-18  Noam Postavsky  <npostavs@gmail.com>

	* lisp/woman.el (woman): Fix docstring prefix arg description.

2017-02-18  Alan Mackenzie  <acm@muc.de>

	Fix edebug-spec on c-lang-defvar.

	This allows c-lang-defvars with the symbol 'dont-doc in the place of the
	optional documentation to be instrumented for edebug.

	lisp/progmodes/cc-langs.el (top-level): Amend the edebug-spec for
	c-lang-defvar.
	(c-opt-identifier-concat-key, c-decl-prefix-or-start-re): remove redundant
	'dont-doc.

2017-02-18  Lars Ingebrigtsen  <larsi@gnus.org>

	Lists used as plists now have to be an even length

	* lisp/net/eww.el (eww-size-text-inputs): `eww-form' isn't a plist.
	(eww-process-text-input): Not here, either.

2017-02-18  Michael Albinus  <michael.albinus@gmx.de>

	Unset `non-essential' in Tramp when not needed anymore

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.2-pre".

	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	Use `tramp-completion-mode-p'.

	* lisp/net/tramp.el (tramp-file-name-handler): Unset `non-essential'
	when file name doesn't match `tramp-completion-file-name-regexp'.

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Automatically regenerate emacs.1 and *.rc files

	* Makefile.in (CONFIG_STATUS_FILES_IN): New variable, lists
	non-Makefile files produced by config.status.
	($(MAKEFILE_NAME)): Depend on $(CONFIG_STATUS_FILES_IN), so that
	their targets are regenerated when the source changes.

2017-02-18  Alan Mackenzie  <acm@muc.de>

	Set the syntax table in AWK Mode.

	This is a partial reversion of CC Mode commit on 2016-05-09 17:49:45 +0000.
	It fixes bug #25722.

	lisp/progmodes/cc-mode.el (awk-mode): Explicitly set the syntax table.

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Mention "editor" in Emacs man page header

	* doc/man/emacs.1.in: Mention "editor" in the header line.
	(Bug#25771, Bug#25779)

2017-02-18  Göktuğ Kayaalp  <self@gkayaalp.com>

	Fix Turkish language environment setup

	* lisp/language/european.el ("Turkish"): Fix a typo in Turkish
	language setup.  (Bug#25763)

2017-02-18  Rami Ylimäki  <rami.ylimaki@vincit.fi>

	Support 24-bit direct colors on text terminals

	* src/term.c (init_tty): Use 24-bit terminal colors if corresponding
	foreground and background functions are present in terminal type
	definition.
	* src/tparam.h: Define prototype for tigetstr.

	* lisp/term/tty-colors.el (tty-color-define): Convert color palette
	index to pixel value on 16.7M color terminals.
	(tty-color-24bit): New function to convert color palette index to
	pixel value on 16.7M color terminals.
	(tty-color-desc): Don't approximate colors on 16.7M color terminals.
	* lisp/term/xterm.el (xterm-register-default-colors): Define all named
	TTY colors on 16.7M color terminals.

	* doc/misc/efaq.texi (Colors on a TTY): Add instructions on how to
	enable direct color TTY mode.
	* etc/NEWS: Mention direct color TTY mode and point to FAQ.

2017-02-18  Rami Ylimäki  <rami.ylimaki@vincit.fi>

	Remove unused TN_max_pairs field

	* src/termchar.h (tty_display_info): Remove TN_max_pairs field,
	describing maximum number of terminal background/foreground color pairs.
	* src/term.c (tty_default_color_capabilities, tty_setup_colors)
	(init_tty): Remove references to TN_max_pairs.

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of query-replace-from-to-separator

	* doc/emacs/search.texi (Query Replace): Document the meaning of
	the nil value of query-replace-from-to-separator.  (Bug#25482)

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Document problems with nerd-fonts

	* etc/PROBLEMS (fonts): Describe the potential problems with
	nerd-fonts that cause slow display.  (Bug#25697)

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Improve commentary for a recent change in keyboard.c

	* src/keyboard.c (Fset__this_command_keys): Add a comment about
	the magic 248 value.  (Bug#25612)

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Avoid infloop in rect.el

	* lisp/rect.el (rectangle--*-char): Avoid inflooping when called
	with argument N whose absolute value is greater than 1.  (Bug#25773)

2017-02-18  Eli Zaretskii  <eliz@gnu.org>

	Remove annoying warnings about let-binding

	* src/data.c (Fmake_variable_buffer_local, Fmake_local_variable):
	Remove warnings about making symbols local while let-bound.
	(Bug#25561)

2017-02-18  Hong Xu  <hong@topbug.net>

	Avoid errors when flyspell-generic-check-word-predicate is a lambda.

	* lisp/textmodes/flyspell.el (flyspell-auto-correct-word, flyspell-word): Apply
	functionp instead of fboundp on
	flyspell-generic-check-word-predicate (Bug#25765).

2017-02-18  Glenn Morris  <rgm@gnu.org>

	Remove the build number from emacs-version variable

	It's a largely internal detail that can confuse users.  (Bug#25590)
	* lisp/version.el (emacs-build-number): New constant.
	(emacs-version): Use emacs-build-number.
	* lisp/loadup.el (top-level): When dumping, increment
	emacs-build-number rather than emacs-version.
	* src/emacs.c (emacs-version): Doc fix.
	* doc/lispref/intro.texi (Version Info): Update emacs-version details.
	Mention emacs-build-number.
	* lisp/gnus/gnus-util.el (gnus-emacs-version):
	* lisp/mail/emacsbug.el (report-emacs-bug):
	* admin/admin.el (set-version): Update for emacs-version change.

2017-02-18  Glenn Morris  <rgm@gnu.org>

	Ensure that user-mail-address always has a value

	* lisp/startup.el (user-mail-address): Initialize in the normal way.
	(command-line): Reset user-mail-address if needed using
	standard custom machinery.
	* lisp/mail/feedmail.el (feedmail-fiddle-from):
	* lisp/mail/rmail.el (rmail-unknown-mail-followup-to):
	* lisp/mail/rmailsum.el (rmail-header-summary):
	Simplify now that user-mail-address is always set.

2017-02-18  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in ruby-mode

	* lisp/progmodes/ruby-mode.el: Turn on lexical-binding.
	(ruby-font-lock-syntax-table): Use make-syntax-table.
	(ruby-mode): 'define-derived-mode' writes the keys for us.

2017-02-18  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in elint.el

	* lisp/emacs-lisp/elint.el: Quote entry point commands in commentary.
	(elint-running, elint-current-pos): Move these dynamic vars to toward
	the top of the file.
	(elint-check-quote-form): Ignore unused argument.
	(elint-check-conditional-form): Remove unused binding.

2017-02-18  Gemini Lasswell  <gazally@runbox.com>

	* lisp/emacs-lisp/subr-x.el (if-let*): Fix Edebug spec (Bug#24748)

2017-02-18  Mark Oteiza  <mvoteiza@udel.edu>

	Enable erc-accidental-paste-threshold-seconds by default

	* lisp/erc/erc.el (erc-accidental-paste-threshold-seconds): Set
	default to 0.2 (Bug#25709).

2017-02-17  Michal Nazarewicz  <mina86@mina86.com>

	Fix build failure caused by ‘Generate upcase and downcase tables from Unicode’

	The [5ec3a584: Generate upcase and downcase tables from Unicode data]
	commit broke bootstrap from a truly clean tree (e.g. a fresh clone or
	one created with ‘make extraclean’), see
	<http://hydra.nixos.org/build/48774928>.

	The failure was caused by characters.el trying to read Unicode
	property tables which aren’t available so early in the build process.

	Wrap the part that requires Unicode property tables in a condition
	checking if those are available.  If they aren’t they case and syntax
	tables won’t be fully set but later on, the characters.el file will be
	evaluated again and this time with Unicode properties available so
	final Emacs ends up with the exact same case and syntax tables.

2017-02-17  Katsumi Yamaoka  <yamaoka@jpl.org>

	mm-add-meta-html-tag: Improve regexp

	* lisp/gnus/mm-decode.el (mm-add-meta-html-tag):
	Improve regexp to search html meta tag.

2017-02-17  Katsumi Yamaoka  <yamaoka@jpl.org>

	mm-shr: Prefer charset specified in html meta tag

	* lisp/gnus/mm-decode.el (mm-shr): Prefer charset specified in html
	meta tag than mail-parse-charset in the case there is no charset spec
	in MIME header.

2017-02-17  Glenn Morris  <rgm@gnu.org>

	Stop duplicating some custom-types in message.el

	* lisp/gnus/message.el (user-mail-address, user-full-name):
	No need to re-specify custom-type.

2017-02-17  Glenn Morris  <rgm@gnu.org>

	Whitespace trivia in dunnet.el

	* lisp/play/dunnet.el (dun-special-object, dun-put-objs)
	(dun-rlogin-endgame): Whitespace trivia.

2017-02-17  Glenn Morris  <rgm@gnu.org>

	Explicit error on changing case of negative integers

	* src/casefiddle.c (casify_object): Reject negative integers:
	Emacs characters are positive integers.  (Bug#25684)

2017-02-17  Dmitry Gutov  <dgutov@yandex.ru>

	Fix buffers update in vc-retrieve-tag

	* lisp/vc/vc.el (vc-retrieve-tag): When the granularity is
	`repository', use the repository root and pass it to
	vc-resynch-buffer (bug#25714).

2017-02-16  Paul Eggert  <eggert@cs.ucla.edu>

	* src/buffer.h: Fix indenting.

2017-02-16  Paul Eggert  <eggert@cs.ucla.edu>

	Add sanity checks for Bswitch hash tables

	* src/bytecode.c (exec_byte_code) [BYTE_CODE_SAFE]:
	Check that operand is a hash table and hashes to ints.

2017-02-16  Paul Eggert  <eggert@cs.ucla.edu>

	* src/keyboard.c (read_key_sequence): Fix integer-overflow glitch.

2017-02-16  Vibhav Pant  <vibhavp@gmail.com>

	bytecomp.el: Avoid unnecessary calculation for jump table addresses.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-lapcode): Don't do
	  redundant operations while calculating the correct jump addresses
	  from TAGs in jump tables.

2017-02-16  Mark Oteiza  <mvoteiza@udel.edu>

	Minor changes in json.el

	* lisp/json.el (json-advance): Simpler docstring.
	(json-read-escaped-char): Use xdigit subform in rx expression.
	(json-read-string): Just use = for char comparison.

2017-02-16  Mark Oteiza  <mvoteiza@udel.edu>

	Don't expand body inside a let-binding when there are no bindings

	* lisp/emacs-lisp/pcase.el (pcase-codegen): Only let-bind if VARS
	is non-nil.

2017-02-16  Glenn Morris  <rgm@gnu.org>

	Handle user-mail-address being the empty string

	* lisp/mail/feedmail.el (feedmail-fiddle-from):
	* lisp/mail/rmail.el (rmail-unknown-mail-followup-to):
	* lisp/mail/rmailsum.el (rmail-header-summary):
	Belated update for 2002-09-29 startup.el change, 680ebfa, where
	the value of user-mail-address during initialization was changed
	from nil to the empty string.

2017-02-15  Michael Albinus  <michael.albinus@gmx.de>

	Continue to fix bug#25607

	* lisp/ido.el (ido-complete): Let-bind `non-essential' to nil.
	(ido-file-name-all-completions-1): Do not bind `non-essential'.

	* lisp/net/tramp.el: (tramp-completion-file-name-handler):
	Improve autoloaded version.
	(tramp-completion-file-name-handler): Remove old compat code.
	Check only for `tramp-completion-mode-p'.
	(tramp-completion-mode-p): Autoload.  Do not check any longer
	for `last-input-event'.
	(tramp-completion-handle-expand-file-name): Simplify.  (Bug#25607)

2017-02-15  Michal Nazarewicz  <mina86@mina86.com>

	casing: don’t assume letters are *either* upper- or lower-case  (bug#24603)

	A compatibility digraph characters, such as ǅ, are neither upper- nor
	lower-case.  At the moment however, those are reported as upper-case¹
	despite the fact that they change when upper-cased.

	Stop checking if a character is upper-case before trying to up-case it
	so that title-case characters are handled correctly.  This fixes one of
	the issues mentioned in bug#24603.

	¹ Because they change when converted to lower-case.  Notice an asymmetry
	  in that for a character to be considered lower-case it must not be
	  upper-case (plus the usual condition of changing when upper-cased).

	* src/buffer.h (upcase1): Delete.
	(upcase): Change to upcase character unconditionally just like downcase
	does it.  This is what upcase1 was.

	* src/casefiddle.c (casify_object, casify_region): Use upcase instead
	of upcase1 and don’t check !uppercasep(x) before calling upcase.

	* src/keyboard.c (read_key_sequence): Don’t check if uppercase(x), just
	downcase(x) and see if it changed.

	* test/src/casefiddle-tests.el (casefiddle-tests--characters,
	casefiddle-tests-casing): Update test cases which are now passing.

2017-02-15  Michal Nazarewicz  <mina86@mina86.com>

	Generate upcase and downcase tables from Unicode data  (bug#24603)

	Use Unicode data to generate case tables instead of mostly repeating
	them in lisp code.  Do that in a way which maps ‘Dz’ (and similar)
	digraph to ‘dz’ when down- and ‘DZ’ when upcasing.

	https://debbugs.gnu.org/cgi/bugreport.cgi?msg=89;bug=24603 lists all
	changes to syntax table and case tables introduced by this commit.

	* lisp/international/characters.el: Remove case-pairs defined with
	explicit Lisp code and instead use Unicode character properties.

	* test/src/casefiddle-tests.el (casefiddle-tests--characters,
	casefiddle-tests-casing): Update test cases which are now working
	as they should.

2017-02-15  Michal Nazarewicz  <mina86@mina86.com>

	Add tests for casefiddle.c  (bug#24603)

	Fixes cases marked FIXME upcoming in followup commits.

	* test/src/casefiddle-tests.el (casefiddle-tests-char-properties,
	casefiddle-tests-case-table, casefiddle-tests-casing-character,
	casefiddle-tests-casing, casefiddle-tests-casing-byte8,
	casefiddle-tests-casing-byte8-with-changes): New tests.
	(casefiddle-tests--test-casing): New helper function for runnig
	some of the tests.

2017-02-15  Michal Nazarewicz  <mina86@mina86.com>

	oldXMenu: add missing #include <string.h>

	Some of the files in oldXMenu use functions from string.h without
	including that header which results in compile warnings:

		ChgPane.c:46:5: warning: implicit declaration of function ‘strlen’
		ChgPane.c:46:20: warning: incompatible implicit declaration of
			built-in function ‘strlen’
		ChgSel.c:62:2: warning: implicit declaration of function ‘strlen’
		ChgSel.c:62:17: warning: incompatible implicit declaration of built-in
			function ‘strlen’
		Create.c:220:5: warning: implicit declaration of function ‘strcmp’
		InsPane.c:65:5: warning: implicit declaration of function ‘strlen’
		InsPane.c:65:20: warning: incompatible implicit declaration of
			built-in function ‘strlen’
		InsSel.c:68:5: warning: implicit declaration of function ‘strlen’
		InsSel.c:68:20: warning: incompatible implicit declaration of built-in
			function ‘strlen’
		InsSel.c:75:5: warning: implicit declaration of function ‘strcmp’

	Add the necessary ‘#include <string.h>’.

	oldXMenu/ChgPane.c, oldXMenu/ChgSel.c, oldXMenu/Create.c, oldXMenu/InsPane.c,
	oldXMenu/InsSel.c: add missing #include <string.h>

2017-02-15  Paul Eggert  <eggert@cs.ucla.edu>

	Fixup recent rmail patch

	* lisp/mail/rmail.el (rmail-epa-decrypt): Remove unused local.

2017-02-15  Richard Stallman  <rms@gnu.org>

	Rmail fix

	* lisp/mail/rmail.el (rmail-epa-decrypt-1): Include the just-decrypted text
	as element 4 of the value.
	(rmail-epa-decrypt): Take the text to insert from that element.

2017-02-15  Vibhav Pant  <vibhavp@gmail.com>

	bytecomp-tests.el: Store all test forms in one constant.

	* test/lisp/emacs-lisp/bytecomp-tests.el: Store all test expressions
	in a single constant (byte-opt-testsuite-arith-data), add new forms
	which generate lapcode with adjacent/redundant tags.

2017-02-15  Glenn Morris  <rgm@gnu.org>

	Small lispref edit

	* doc/lispref/os.texi (User Identification):
	Remove extraneous detail about user-mail-address.

2017-02-15  Katsumi Yamaoka  <yamaoka@jpl.org>

	Document fill-separate-heterogeneous-words-with-space (bug#25685)

	* doc/lispref/text.texi (Filling):
	Document fill-separate-heterogeneous-words-with-space (bug#25685).

2017-02-15  Noam Postavsky  <npostavs@gmail.com>

	Test comment-multi-line = nil auto fill case too

	* test/lisp/progmodes/js-tests.el (js-mode-auto-fill): Test with
	`comment-multi-line' both nil and non-nil.
	* lisp/newcomment.el (comment-multi-line): Mark safe if it's a
	boolean.
	* etc/NEWS: Mention that `js-mode' now sets `comment-multi-line'.

2017-02-15  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't delete leading and trailing space from CJK word (bug#25685)

	* lisp/textmodes/fill.el (fill-delete-newlines):
	Don't delete leading and trailing space from CJK word.
	(fill-separate-heterogeneous-words-with-space):
	New user option that controls it (bug#25685).

2017-02-15  Juri Linkov  <juri@linkov.net>

	‘M-s w RET word C-s’ repeats incremental search.

	* lisp/isearch.el (isearch-new-nonincremental): New variable.
	(with-isearch-suspended): Bind isearch-new-nonincremental to
	isearch-nonincremental, and restore it afterwards.
	(isearch-forward-exit-minibuffer, isearch-reverse-exit-minibuffer):
	Set isearch-new-nonincremental to nil.  (Bug#25562)

2017-02-14  Tom Tromey  <tom@tromey.com>

	Make vc-git detect conflict state for vc-dir

	* lisp/vc/vc-git.el (vc-git-dir-status-state): New struct.
	(vc-git-dir-status-update-file): New function.
	(vc-git-after-dir-status-stage, vc-git-dir-status-goto-stage): Use
	vc-git-dir-status-state; add 'ls-files-conflict state.
	(vc-git-dir-status-files): Create a vc-git-dir-status-state.

2017-02-14  Vibhav Pant  <vibhavp@gmail.com>

	byte-opt: Replace merged tags in jump tables too. (bug#25716)

	* lisp/emacs-lisp/byte-opt.el (byte-optimize-lapcode): While merging
	  adjacent tags, make sure that the old tag is replaced in all jump
	  tables, if any. This fixes the bytecode VM jumping to the wrong
	  address in compiled cond forms where the body of a clause was a loop
	  of any sort.

2017-02-14  Glenn Morris  <rgm@gnu.org>

	Remove overly broad element from default mail-dont-reply-to-names

	* lisp/mail/mail-utils.el (mail-dont-reply-to):
	Do not include just "user@" in mail-dont-reply-to-names, and simplify.
	Ref: lists.gnu.org/archive/html/help-gnu-emacs/2017-02/msg00049.html
	* lisp/gnus/message.el (message-dont-reply-to-names): Doc fix.
	* doc/misc/message.texi (Wide Reply): Tiny fix re dont-reply-to-names.

2017-02-14  Juri Linkov  <juri@linkov.net>

	* etc/NEWS: Mention query-replace-from-to-separator.  (Bug#25482)

2017-02-13  Arash Esbati  <arash@gnu.org>

	Match all characters in optional argument of \documentclass

	* lisp/textmodes/reftex.el (reftex-TeX-master-file): Match all
	characters in optional argument containing name of the main file.

2017-02-13  Vibhav Pant  <vibhavp@gmail.com>

	Merge branch 'master' into feature/byte-switch

2017-02-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	Fix non-ASCII text encoding (bug#25658)

	* lisp/gnus/mm-bodies.el (mm-encode-body):
	Fix non-ASCII text encoding (bug#25658).

2017-02-13  Vibhav Pant  <vibhavp@gmail.com>

	test/lisp/emacs-lisp/bytecomp-tests.el: Add more tests for switch.

2017-02-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* doc/lispref/modes.texi (Derived Modes): Make example more idiomatic

2017-02-13  Glenn Morris  <rgm@gnu.org>

	Fix recent bootstrap issue by moving string-to-list

	* lisp/international/mule-util.el (string-to-list, string-to-vector):
	Move from here...
	* lisp/subr.el (string-to-list, string-to-vector): ...to here.
	The implementation is trivial and at least string-to-list
	has ended up being needed early during bootstrap.

2017-02-13  Glenn Morris  <rgm@gnu.org>

	Doc fixes related to mail-host-address

	* lisp/startup.el (mail-host-address): Doc fix.
	* doc/lispref/os.texi (System Environment):
	Remove extraneous details of mail-host-address.

2017-02-13  Glenn Morris  <rgm@gnu.org>

	Simplify time-stamp mail host usage

	* lisp/time-stamp.el (time-stamp-mail-host-name): Remove function.
	(time-stamp-string-preprocess): Handle "h" (mail host) directly.

2017-02-13  Glenn Morris  <rgm@gnu.org>

	Doc fix for vhdl-mode re mail-host-address

	* lisp/progmodes/vhdl-mode.el (vhdl-file-header): Doc fix.
	(mail-host-address): Do not add to vhdl-related custom group,
	since vhdl-template-replace-header-keywords doesn't use it.

2017-02-13  Mark Oteiza  <mvoteiza@udel.edu>

	Substitute leading $HOME/ in xdg-user-dirs

	* lisp/xdg.el (xdg--substitute-home-env): New function.
	(xdg--user-dirs-parse-line): Use it.
	(xdg-user-dir): Expand ~/ in xdg-user-dirs values.

2017-02-13  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/buff-menu.el: Turn on lexical-binding.

2017-02-13  Juri Linkov  <juri@linkov.net>

	* lisp/replace.el (query-replace-from-to-separator): Move propertize

	and char-displayable-p test to query-replace-read-from.
	Add choice nil to disable this feature.
	(query-replace-read-from): Don't reevaluate custom setting.
	Use char-displayable-p to test the first non-whitespace character
	in query-replace-from-to-separator, use " -> " when fails.
	Add prompt for the case when separator is nil but
	query-replace-defaults is non-nil.
	Remove unused test for regexp-flag.
	Thanks to Thierry Volpiatto <thierry.volpiatto@gmail.com>

2017-02-13  Karl Fogel  <kfogel@red-bean.com>

	Convert more uses of `looking-at' to `following-char'

	This follows up to Mark Oteiza's commit of 12 Feb 2017, 14:46:03 UTC
	(commit 91478f46238a) with more of the same.

	* lisp/bookmark.el (bookmark-send-edited-annotation):
	  (bookmark-bmenu-execute-deletions): Replace instances of looking-at
	  with char comparisons using following-char.

2017-02-12  Paul Eggert  <eggert@cs.ucla.edu>

	Fix typos in tests for lax-plist-get etc.

	Problem reported by Eli Zaretskii (Bug#25606#62).
	* test/src/fns-tests.el (test-cycle-lax-plist-get)
	(test-cycle-plist-put, test-cycle-lax-plist-put):
	Fix tests to match behavior.

2017-02-12  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug#25607

	* lisp/net/tramp.el (tramp-completion-file-name-handler):
	Improve autoloaded version.
	(tramp-autoload-file-name-handler): Avoid recursive load.
	(tramp-completion-handle-expand-file-name): Handle empty NAME.
	(Bug#25607)

2017-02-12  Mark Oteiza  <mvoteiza@udel.edu>

	Remove server-buffer-clients string from minor-mode-alist

	* lisp/server.el: Don't put an element for server-buffer-clients into
	minor-mode-alist. (Bug#20201)

2017-02-12  Mark Oteiza  <mvoteiza@udel.edu>

	Nix some useless uses of looking-at, looking-back

	* lisp/allout.el (allout-kill-topic):
	(allout-next-topic-pending-encryption):
	* lisp/bookmark.el (bookmark-kill-line):
	* lisp/cus-edit.el (custom-save-variables, custom-save-faces):
	* lisp/cus-theme.el (custom-theme-write-variables):
	(custom-theme-write-faces):
	* lisp/emacs-lisp/autoload.el (autoload-generate-file-autoloads):
	* lisp/emacs-lisp/bytecomp.el (byte-compile-from-buffer):
	* lisp/emacs-lisp/checkdoc.el (checkdoc-interactive-loop):
	(checkdoc-interactive-ispell-loop):
	(checkdoc-message-interactive-ispell-loop, checkdoc-this-string-valid):
	(checkdoc-this-string-valid-engine):
	* lisp/emacs-lisp/elint.el (elint-get-top-forms):
	* lisp/emulation/viper-cmd.el (viper-backward-indent):
	* lisp/image-dired.el (image-dired-delete-char):
	* lisp/simple.el (kill-visual-line): Replace instances of looking-at,
	looking-back with char comparisons using following-char, preceding-char.

2017-02-12  Eli Zaretskii  <eliz@gnu.org>

	Clarify what is the "cursor"

	* doc/lispref/windows.texi (Window Point): Clarify the notion of
	"cursor".

2017-02-11  Tom Tromey  <tom@tromey.com>

	Recognize JS regexp literals more correctly

	Bug#25529
	* lisp/progmodes/js.el (js--syntax-propertize-regexp-regexp): New
	constant.
	(js-syntax-propertize-regexp): Use it.  Remove "end" argument.
	(js--syntax-propertize-regexp-syntax-table): Remove.
	(js-syntax-propertize): Update.
	* test/lisp/progmodes/js-tests.el (js-mode-regexp-syntax-bug-25529):
	New test.

2017-02-11  Vibhav Pant  <vibhavp@gmail.com>

	src/bytecode.c (exec_byte_code): Make hash_code a Lisp_Object.

	This avoids using XUINT every time while comparing it with
	HASH_HASH (h, i), replacing it with EQ.

2017-02-11  Vibhav Pant  <vibhavp@gmail.com>

	src/bytecode.c (exec_byte_code): Remove unnecessary (e)assert.

2017-02-11  Tom Tromey  <tom@tromey.com>

	Fix bug in css--mdn-find-symbol

	* lisp/textmodes/css-mode.el (css--mdn-find-symbol): Skip whitespace
	before skipping word characters.
	test/lisp/textmodes/css-mode-tests.el (css-mdn-symbol-guessing): Add
	regression test.

2017-02-11  Vibhav Pant  <vibhavp@gmail.com>

	src/bytecode.c: Add optional sanity check for jump tables.

	* src/bytecode.c (exec_byte_code): When sanity checks are enabled,
	  check that the jump table's size is equal to it's count.

2017-02-11  Vibhav Pant  <vibhavp@gmail.com>

	Merge branch 'master' into feature/byte-switch

	* src/bytecode.c: Refactor to follow GNU coding standards

2017-02-11  Eli Zaretskii  <eliz@gnu.org>

	Fix handling of XBM images on MS-Windows

	* src/image.c (xbm_load) [HAVE_NTGUI]: Fix calculation of
	'nbytes' when inverting XBM data bits.  (Bug#25661)

2017-02-11  Eli Zaretskii  <eliz@gnu.org>

	Fix handling of PBM data

	* src/image.c (pbm_load): Handle PBM data with no blanks between
	individual pixel values correctly.  (Bug#25660)

2017-02-10  Noam Postavsky  <npostavs@gmail.com>

	Fix warnings in debug tracing code

	* src/xdisp.c (dump_glyph, dump_glyph_string):
	* src/xfaces.c (dump_realized_face): Cast arguments or adjust format
	specifiers to match signedness.

2017-02-10  Sam Steingold  <sds@gnu.org>

	Extract grep-find-ignored-directories processing from rgrep-default-command

	(rgrep-find-ignored-directories): Extract from `rgrep-default-command'.
	Some Emacs packages use `grep-find-ignored-directories' to ignore some
	directories, so will use this function instead of custom code.
	(rgrep-default-command): Use `rgrep-find-ignored-directories'.

2017-02-10  Vibhav Pant  <vibhavp@gmail.com>

	src/bytecode.c: Avoid comparing values unnecessarily in Bswitch

	* src/bytecode.c: (exec_byte_code) While linear searching the jump
	  table, compare the value's hash table first to avoid calling
	  h->test.cmpfn every time.

2017-02-10  Paul Eggert  <eggert@cs.ucla.edu>

	Fix a few integer-overflow glitches

	* src/composite.c (composition_compute_stop_pos, composition_reseat_it):
	* src/dispextern.h (struct composition_it.rule_idx):
	* src/keyboard.c (Fset__this_command_keys):
	* src/xwidget.c (webkit_js_to_lisp):
	Don’t assume object sizes fit in ‘int’.
	* src/xwidget.c (Fxwidget_resize):
	Don’t assume Emacs integers fit in ‘int’.

2017-02-10  Eli Zaretskii  <eliz@gnu.org>

	Fix a bug with displaying an image after a TAB

	* src/xdisp.c (display_line): Handle TAB at end of screen line
	specially only when we are displaying characters.  (Bug#25662)

2017-02-10  Eli Zaretskii  <eliz@gnu.org>

	Improve commentary in lisp.h

	* src/lisp.h: Explain in the comment why enlarging a Lisp_Misc
	object is discouraged.

2017-02-10  Paul Eggert  <eggert@cs.ucla.edu>

	Move cyclic tests to fns-tests.el

	* test/src/fns-tests.el (cyc1, cyc2, dot1, dot2): New functions.
	(test-cycle-length, test-cycle-safe-length, test-cycle-member)
	(test-cycle-memq, test-cycle-memql, test-cycle-assq)
	(test-cycle-assoc, test-cycle-rassq, test-cycle-rassoc)
	(test-cycle-delq, test-cycle-delete, test-cycle-reverse)
	(test-cycle-plist-get, test-cycle-lax-plist-get)
	(test-cycle-plist-member, test-cycle-plist-put)
	(test-cycle-lax-plist-put, test-cycle-equal, test-cycle-nconc):
	New tests.
	* test/manual/cyclic-tests.el: File deleted.

2017-02-10  Gemini Lasswell  <gazally@runbox.com>

	Fix instrumenting code with propertized strings in Edebug

	* lisp/emacs-lisp/edebug.el (edebug-read-function): Allow
	'read' to decide what is and isn't a syntax error.  (Bug#25068)

2017-02-10  Vladimir Panteleev  <vladimir@thecybershadow.net>

	Improve fontification in bat-mode

	* lisp/progmodes/bat-mode.el (bat-font-lock-keywords): Match
	word and symbol constituents when looking for variable names
	to fontify; also, correct the syntax table and mark the equal
	sign (=) character as punctuation.  Improve fontification
	accuracy of iteration/positional variables.
	(bat-mode): Set comment-start-skip.  (Bug#25541)

	* test/lisp/progmodes/bat-mode-tests.el: New file, tests for
	bat-mode.el.

2017-02-10  Eli Zaretskii  <eliz@gnu.org>

	Restore special setting of this-command-keys by M-x

	It was lost when execute-extended-command was reimplemented in Lisp.

	* src/keyboard.c (Fset__this_command_keys): New function.
	(syms_of_keyboard): Defsubr it.

	* lisp/simple.el (execute-extended-command): Set this-command-keys
	as novice.el expects.  (Bug#25612)

2017-02-09  Juri Linkov  <juri@linkov.net>

	* lisp/isearch.el (isearch-search-fun-default): Set isearch-adjusted

	to t to display "Pending" in the search prompt for lax
	word/symbol search (bug#25562).  Don't use lax for lazy-highlighting
	when 'bound' is non-nil.
	(word-search-regexp, isearch-symbol-regexp): Don't depend on lax
	at the beginning of regexp (bug#22589).

	* lisp/info.el (Info-isearch-search):
	Use isearch--lax-regexp-function-p.

	* doc/emacs/search.texi (Word Search, Symbol Search):
	Mention "Pending" prompt for lax word/symbol search.

2017-02-09  Vibhav Pant  <vibhavp@gmail.com>

	src/bytecode.c (exec_byte_code): Remove unneeded assert.

	bytecode.c (exec_byte_code): Use h->count instead of HASH_TABLE_SIZE

2017-02-09  Vibhav Pant  <vibhavp@gmail.com>

	bytecode.c (exec_byte_code): don't check hash code in linear search.

	* src/bytecode.c (exec_byte_code): Don't check that the hash code is
	  not nil when linear scanning the jump table. Hash tables for are
	  declared with :size as the exact number of cases, so each entry i
	  should have a hash code. When BYTE_CODE_SAFE, do it as a sanity
	  check.

2017-02-09  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Update mode documentation

	* lisp/ibuffer.el (ibuffer-mode): List newest commands in mode documentation.

2017-02-09  Steven Allen  <steven@stebalien.com>  (tiny change)

	Fix environment variable for xdg-data-dirs

	* lisp/xdg.el (xdg-data-dirs): Use XDG_DATA_DIRS, not XDG_CONFIG_DIRS

2017-02-09  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Erase output buffer before shell commands

	* lisp/ibuf-macs.el (define-ibuffer-op): Add keyword arguments
	BEFORE and AFTER; they are forms to run before/after the operation.
	* lisp/ibuf-ext.el (ibuffer--maybe-erase-shell-cmd-output):
	New defun; if shell-command-dont-erase-buffer is nil, then
	erase shell command output buffer.
	(ibuffer-do-shell-command-pipe, ibuffer-do-shell-command-file): Use it.

2017-02-09  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Don't truncate shell command output

	* lisp/ibuf-ext.el (ibuffer-do-shell-command-pipe)
	(ibuffer-do-shell-command-pipe-replace)
	Use 'call-shell-region' (Bug#22679).
	(ibuffer-do-shell-command-file): Use call-process-shell-command.
	If FILE, the file that the buffer object is visiting,
	exists and the buffer is up-to-date, then use
	FILE instead of creating a temporary file (Bug#22679).

2017-02-09  Vibhav Pant  <vibhavp@gmail.com>

	Improve byte-switch execution.

	* lisp/emacs-lisp/byte-opt.el,
	  lisp/emacs-lisp/bytecomp.el (byte-decompile-bytecode-1),
	  (byte-compile-lapcode): Calculate the actual jump address while
	  compiling, store it in the jump table.

	* src/bytecode.c: Jump to the looked up value directly, do a linear
	  search when the number of elements is <= 5.

2017-02-09  Noam Postavsky  <npostavs@gmail.com>

	Make sure eshell pipelines don't drop data

	* lisp/eshell/esh-proc.el (eshell-sentinel): If called while still
	handling output of the process, make sure to close the pipes only later,
	so that the next process in the pipeline recieves EOF only after getting
	all its input (Bug#25549).

2017-02-09  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make mm-shr use mail-parse-charset by default

	* lisp/gnus/mm-decode.el (mm-shr): Use mail-parse-charset by default.
	This helps an html message with no charset spec to be decoded.

2017-02-08  Stephen Berman  <stephen.berman@gmx.net>

	describe-char: unambiguous name for inserting ASCII 7

	* lisp/descr-text.el (describe-char): Make the input
	suggestion for inserting ASCII character 7 by name use the
	unambiguous name "BELL (BEL)" (bug#25641).

2017-02-08  Michael Albinus  <michael.albinus@gmx.de>

	Modify suppressing `vc-refresh-state' in filenotify-tests.el

	* test/lisp/filenotify-tests.el (file-notify-test03-autorevert):
	Use an advice rather than an alias for suppressing `vc-refresh-state'.

2017-02-08  Noam Postavsky  <npostavs@gmail.com>

	Disable native completion for ipython (Bug#25067)

	* lisp/progmodes/python.el:
	(python-shell-completion-native-disabled-interpreters): Add "ipython".

2017-02-07  Michael Albinus  <michael.albinus@gmx.de>

	Suppress undesired error messages in filenotify-tests.el

	* test/lisp/filenotify-tests.el (file-notify-test03-autorevert):
	Suppress `vc-refresh-state', it produces undesired error messages.

2017-02-07  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in ada-mode manual

	* doc/misc/ada-mode.texi (Project file variables): Add a missing
	right bracket.  Reported by Jean-Christophe Helary
	<jean.christophe.helary@gmail.com>.

2017-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Ensure that Gnus bugs show up in the Emacs tracker

	* lisp/gnus/gnus.el (gnus-bug-package): Include Emacs in the
	package spec.

2017-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "Don't tag Gnus bugs with "gnus""

	This reverts commit b6fa58072304c2a24f1fe8a0e06a4739a7f8211b.

	The debbugs syntax requires a package name

2017-02-07  Vibhav Pant  <vibhavp@gmail.com>

	Add tests for checking byte-switch code.

	* test/lisp/emacs-lisp/bytecomp-tests.el (bytecomp-cond): New test,
	  test byte-switch bytecode.

2017-02-07  Mark Oteiza  <mvoteiza@udel.edu>

	Add xdg library

	* etc/NEWS: Mention new library.
	* lisp/xdg.el: New file.

2017-02-07  Paul Eggert  <eggert@cs.ucla.edu>

	Do not trick info/dir’s timestamp

	* Makefile.in (${srcdir}/info/dir): When making this file, do not
	do anything special about its timestamp.  Previously this rule
	used move-if-change, which meant that this file’s timestamp could
	end up being older than the files it depends on, and this caused
	‘make --question info’ to fail, which caused ‘make-dist’ to fail
	now that ‘make-dist’ invokes ‘make --question info’.

2017-02-07  Paul Eggert  <eggert@cs.ucla.edu>

	Make FOR_EACH_TAIL more like other FOR_EACH macros

	See comments by Stefan Monnier in:
	https://lists.gnu.org/r/emacs-devel/2017-02/msg00181.html
	and by Eli Zaretskii in:
	https://lists.gnu.org/r/emacs-devel/2017-02/msg00207.html
	* src/fns.c (internal_equal): Do not bypass check for depth
	overflow when tail-recursing via a dotted list tail or an overlay
	plist, to avoid a rare infloop.
	* src/lisp.h (FOR_EACH_TAIL, FOR_EACH_TAIL_SAFE): Take TAIL as an
	arg, and update it at each iteration, rather than have callers
	access it.tail.  All callers changed.
	(FOR_EACH_TAIL): Do not check for dotted lists, as this is now
	the caller’s responsibility.  All callers changed.
	(FOR_EACH_TAIL_CONS): Remove.  All callers changed.
	(struct for_each_tail_internal.tail): Remove; no longer needed.
	(FOR_EACH_TAIL_INTERNAL): Remove dotted arg, and set the tail
	arg each time through the loop.  All callers changed.

2017-02-05  Paul Eggert  <eggert@cs.ucla.edu>

	Port to clang 3.8.0

	It does not allow a for-loop's control var to be an anonymous struct.
	* src/lisp.h (struct for_each_tail_internal): New type.
	(FOR_EACH_TAIL_INTERNAL): Use it.

2017-02-05  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Add cyclic-list tests

	* test/manual/cycle-tests.el: New file (Bug#25606).

2017-02-05  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	FOR_EACH_TAIL now checks for quit

	As per Eli Zaretskii (Bug#25606#20).  Although these calls to
	maybe_quit are unnecessary in practice, Eli was not convinced
	that the calls are unnecessary.
	* src/lisp.h (FOR_EACH_TAIL, FOR_EACH_TAIL_CONS):
	Call maybe_quit every so often.
	(FOR_EACH_TAIL_INTERNAL): New arg CHECK_QUIT.  All callers changed.

2017-02-05  Paul Eggert  <eggert@cs.ucla.edu>

	Signal list cycles in ‘length’ etc.

	Use macros like FOR_EACH_TAIL instead of maybe_quit to
	catch list cycles automatically instead of relying on the
	user becoming impatient and typing C-g (Bug#25606).
	* src/fns.c (Flength, Fmember, Fmemq, Fmemql, Fassq, Fassoc, Frassq)
	(Frassoc, Fdelete, Freverse):
	Use FOR_EACH_TAIL instead of maybe_quit.
	(Fnreverse): Use simple EQ to check for circular list instead
	of rarely_quit, as this suffices in this unusual case.
	(Fplist_put, Flax_plist_put, Flax_plist_put):
	Use FOR_EACH_TAIL_CONS instead of maybe_quit.
	(internal_equal): Use FOR_EACH_TAIL_CONS to check lists, instead
	of by-hand tail recursion that did not catch cycles.
	* src/fns.c (Fsafe_length, Fplist_get):
	* src/xdisp.c (display_mode_element):
	Use FOR_EACH_TAIL_SAFE instead of by-hand Floyd’s algorithm.
	* src/lisp.h (QUIT_COUNT_HEURISTIC): Remove; no longer needed.
	(rarely_quit): Simply count toward USHRT_MAX + 1, since the
	fancier versions are no longer needed.
	(FOR_EACH_TAIL_CONS, FOR_EACH_TAIL_SAFE)
	(FOR_EACH_TAIL_INTERNAL): New macros, the last with definiens
	mostly taken from FOR_EACH_TAIL.
	(FOR_EACH_TAIL): Rewrite in terms of FOR_EACH_TAIL_INTERNAL.

2017-02-05  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify use of FOR_EACH_TAIL

	* src/data.c (circular_list): New function.
	* src/lisp.h (FOR_EACH_TAIL): Use Brent’s algorithm and C99 for-loop
	decl, to eliminate the need for the args TAIL, TORTOISE and N, and
	to speed things up a bit on typical hosts with optimization.
	All uses changed (Bug#25605).

2017-02-05  Simen Heggestøyl  <simenheg@gmail.com>

	* lisp/textmodes/css-mode.el: Require subr-x at compile time

2017-02-05  Eli Zaretskii  <eliz@gnu.org>

	Clarify documentation of 'bufferpos-to-filepos' and 'filepos-to-bufferpos'

	* doc/lispref/nonascii.texi (Text Representations): Clarify that
	'exact' value of QUALITY argument to 'bufferpos-to-filepos' and
	'filepos-to-bufferpos' can lead to expensive and slow processing.

	* lisp/international/mule-util.el (filepos-to-bufferpos)
	(bufferpos-to-filepos): Doc fix.  (Bug#25626)

2017-02-05  Vibhav Pant  <vibhavp@gmail.com>

	Merge remote-tracking branch 'origin/master' into feature/byte-switch

2017-02-05  Vibhav Pant  <vibhavp@gmail.com>

	bytecomp.el: Use macroexp-const-p instead of bc-cond-valid-obj2-p.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-cond-vars): Use
	  (macroexp-cons-p) instead of (byte-compile-cond-valid-obj2-p) to
	  make sure that obj1/obj2 can be compared with `eq'.

2017-02-05  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/byte-opt.el (byte-decompile-bytecode-1): Use eq instead of =.

2017-02-05  Vibhav Pant  <vibhavp@gmail.com>

	bytecomp.el: Inline lapcode containing `byte-switch' correctly.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-inline-lapcode):
	  Restore value of byte-compile-depth after emitting a jump to a tag
	  in a jump table, or default/done tags.
	  Set the depth of final tags for byte-switch to nil after emitting
	  any jumps to them.

2017-02-05  Vibhav Pant  <vibhavp@gmail.com>

	byte-opt.el: Replace jump tables while decompiling correctly.

	* lisp/emacs-lisp/byte-opt.el (byte-decompile-bytecode-1):
	  Don't make a copy of the constant vector, as it isn't used with
	  the decompiled lapcode.
	  Make sure that the correct lapcode pair/list is being modified while
	  replacing the jump table.

2017-02-05  Vibhav Pant  <vibhavp@gmail.com>

	bytecomp.el: Don't store non-keyword symbols in jump-tables.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-cond-valid-obj2-p) return
	  nil when OBJ is a non-keyword symbol (i.e a variable), as the jump
	  table can only be used when comparing variables with constant values.

2017-02-04  Tom Tromey  <tom@tromey.com>

	typo fix

	(css--colon-inside-selector-p): Fix typo in docstring.

2017-02-04  Tom Tromey  <tom@tromey.com>

	Set comment-multi-line in js-mode

	Bug#6806:
	* lisp/progmodes/js.el (js-mode): Set comment-multi-line to t.
	* test/lisp/progmodes/js-tests.el (js-mode-auto-fill): New test.

2017-02-04  Simen Heggestøyl  <simenheg@gmail.com>

	* test/manual/indent/scss-mode.scss: Fix indentation

2017-02-04  Simen Heggestøyl  <simenheg@gmail.com>

	Fix indentation of multiline CSS property values

	* lisp/textmodes/css-mode.el (css-smie-grammar): Give colons belonging
	to properties higher precedence.
	(css--colon-inside-selector-p, css--colon-inside-funcall): New
	functions for helping SMIE during tokenization.
	(css-smie--forward-token, css-smie--backward-token): Distinguish
	colons belonging to properties from other colons.

	* test/manual/indent/css-mode.css: Add tests for the changes above.

	* test/manual/indent/scss-mode.scss: Ditto.

2017-02-04  Gemini Lasswell  <gazally@runbox.com>

	Add tests for lisp/kmacro.el

	* test/lisp/kmacro-tests.el: New file.  (Bug#24939)

2017-02-04  Eli Zaretskii  <eliz@gnu.org>

	Fix autorevert-tests on MS-Windows

	* test/lisp/autorevert-tests.el
	(auto-revert-test02-auto-revert-deleted-file): Don't check that
	auto-revert-use-notify was reset to nil on w32.

2017-02-04  Gemini Lasswell  <gazally@runbox.com>

	New macro 'ert-with-message-capture'

	* lisp/emacs-lisp/ert-x.el (ert-with-message-capture): New macro.
	(Bug#25158)

	* test/lisp/autorevert-tests.el (auto-revert--wait-for-revert)
	(auto-revert-test00-auto-revert-mode)
	(auto-revert-test01-auto-revert-several-files)
	(auto-revert-test02-auto-revert-deleted-file)
	(auto-revert-test03-auto-revert-tail-mode)
	(auto-revert-test04-auto-revert-mode-dired):
	* test/lisp/filenotify-tests.el (file-notify-test03-autorevert): Use
	ert-with-message-capture.

2017-02-04  Gemini Lasswell  <gazally@runbox.com>

	Avoid invalid read syntax errors due to 'ert-with-test-buffer'

	* lisp/emacs-lisp/ert-x.el (ert-with-test-buffer): Fix the
	'declare' form.  (Bug#24722)

2017-02-04  Eli Zaretskii  <eliz@gnu.org>

	Fix a syntax error when evaluating pcase.el under Edebug

	* lisp/emacs-lisp/pcase.el (pcase-MACRO): Replace def-edebug-spec
	with an explicit 'put' form.  Suggested by Gemini Lasswell
	<gazally@runbox.com>.  (Bug#24717)

2017-02-04  Gemini Lasswell  <gazally@runbox.com>
	    Eli Zaretskii  <eliz@gnu.org>

	Change edebug-max-depth from defconst to defcustom

	* lisp/emacs-lisp/edebug.el (edebug-max-depth): Add defcustom.
	(Bug#24713)

	* etc/NEWS: Mention edebug-max-depth.

	* doc/lispref/edebug.texi (Checking Whether to Stop): Mention
	edebug-max-depth and index it.  Add cross-references for
	max-lisp-eval-depth and max-specpdl-size.

2017-02-04  Eli Zaretskii  <eliz@gnu.org>

	Support options with embedded whitespace in 'dired-listing-switches'

	* lisp/dired.el (dired-listing-switches): Document how to quote
	options with embedded whitespace.

	* lisp/files.el (insert-directory): Use split-string-and-unquote
	to support dired-listing-switches that specify command-line
	options with embedded spaces.  (Bug#25485)

2017-02-04  Gemini Lasswell  <gazally@runbox.com>
	    Noam Postavsky  <npostavs@users.sourceforge.net>

	Add tests for lisp/emacs-lisp/testcover.el

	* test/lisp/emacs-lisp/testcover-tests.el: New file.
	* test/lisp/emacs-lisp/testcover-resources/testcases.el: New file.

2017-02-04  Eli Zaretskii  <eliz@gnu.org>

	Document 'save-some-buffers-default-predicate'

	* doc/lispref/files.texi (Saving Buffers):
	* doc/emacs/files.texi (Save Commands): Document
	save-some-buffers-default-predicate.

2017-02-04  Richard Stallman  <rms@gnu.org>

	New defcustom 'save-some-buffers-default-predicate'

	* lisp/files.el (save-some-buffers-default-predicate): New defcustom.
	(save-some-buffers): Use it when PRED is nil or omitted.

2017-02-04  Mark Oteiza  <mvoteiza@udel.edu>

	Rename to if-let* and when-let*

	Make the existing if-let and when-let aliases.
	* lisp/emacs-lisp/subr-x.el (if-let*, when-let*): New macros.  Rewrite
	docstrings, incorporating that from let* and the existing if-let.
	(if-let, when-let, and-let*): Alias them.

2017-02-03  Vibhav Pant  <vibhavp@gmail.com>

	Revert "Use maphash instead of cl-loop."

	This reverts commit bfa88520136dd6b187ba101e6db5a5f8f0d5e874.

2017-02-03  Nicolas Petton  <nicolas@petton.fr>

	Bump Emacs version to 25.2 RC1

	* README:
	* configure.ac:
	* msdos/sed2v2.inp:
	* nt/README.W32: Bump Emacs version.
	* lisp/ldefs-boot.el: Update.

2017-02-03  Nicolas Petton  <nicolas@petton.fr>

	* admin/make-tarball.txt: Add documentation regarding the release banner.

2017-02-03  Tino Calancha  <tino.calancha@gmail.com>

	* CONTRIBUTE (Documenting your changes): Index new vars/commands in manual.

2017-02-03  Paul Eggert  <eggert@cs.ucla.edu>

	Re-port alloc.c to Solaris sparc and simplify

	alloc.c had bitrotted a bit, and used an undefined symbol
	stack_base when Emacs was built on Solaris sparc, leading to
	compilation failures.  Also, code related to __builtin_unwind_init
	was unnecessarily duplicated.  Fix the bitrot and remove some
	duplication.
	* src/alloc.c: Remove uses of GC_SAVE_REGISTERS_ON_STACK, since it
	is never defined.
	(test_setjmp) [!HAVE___BUILTIN_UNWIND_INIT && GC_SETJMP_WORKS]:
	Define a no-op dummy, to simplify use.
	(test_setjmp) [!GC_SETJMP_WORKS]: Test setjmp_tested_p here rather
	than in the caller, to simplify use.
	(stacktop_sentry): New type.
	(__builtin_unwind_init) [!HAVE___BUILTIN_UNWIND_INIT]: New macro.
	(SET_STACK_TOP_ADDRESS): New macro, containing code that was duplicated.
	(flush_stack_call_func, Fgarbage_collect): Use it.
	(init_alloc): Omit unnecessary initialization.
	After dumping, Emacs need not re-test setjmp.

2017-02-03  Noam Postavsky  <npostavs@gmail.com>

	Add tests for scrolling

	* test/manual/scroll-tests.el: New tests for scroll-margin behavior.

2017-02-03  Noam Postavsky  <npostavs@gmail.com>

	Fix scrolling with partial lines

	* src/xdisp.c (partial_line_height): New function.
	(try_scrolling):
	* src/window.c (window_scroll_pixel_based): Use it for calculating the
	pixel scroll margin correctly in a window with partial lines.

2017-02-03  Noam Postavsky  <npostavs@gmail.com>

	Make limit on scroll-margin variable

	* src/xdisp.c (maximum-scroll-margin): New variable.
	* lisp/cus-start.el: Make it customizable.
	* etc/NEWS: Mention it.
	* doc/emacs/display.texi (Auto Scrolling):
	* doc/lispref/windows.texi (Textual Scrolling): Document it.
	* src/window.c (window_scroll_pixel_based): Use it instead of hardcoding
	division by 4 (Bug #5718).

2017-02-03  Noam Postavsky  <npostavs@gmail.com>

	Don't count mode line for scroll-margin limit

	* src/window.c (window_scroll_margin): Use window_box_height to avoid
	counting header line, scrollbars for scroll-margin limit (Bug #5718).

2017-02-03  Noam Postavsky  <npostavs@gmail.com>

	Refactor uses of scroll_margin to a function

	Its effective range needs to be clamped between 0 and (window height /
	4), so it's better to have this constraint in a single place.

	* src/window.c (window_scroll_margin): New function.
	(window_scroll_pixel_based, window_scroll_line_based):
	(Frecenter, Fmove_to_window_line):
	* src/xdisp.c (try_scrolling, try_cursor_movement):
	(redisplay_window, try_window, try_window_id): Use it.

2017-02-03  Dmitry Gutov  <dgutov@yandex.ru>

	(xref-collect-matches): Use '-E' together with '-e'

	* lisp/progmodes/xref.el (xref-collect-matches): Use '-E'
	together with '-e', as suggested by Noam Postavsky
	(https://lists.gnu.org/r/emacs-devel/2017-01/msg00780.html).

2017-02-03  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify Oracle Studio 12.5

	* src/emacs.c (main): Do not silently convert char * to bool.

2017-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix lisp.h underparenthesization

	* src/lisp.h (STACK_CONS, AUTO_STRING_WITH_LEN):
	Parenthesize compound literals that are function call args.
	Although this does not fix any bugs, it is the proper style for
	macro parenthesization as it means this code will continue to
	work even if make_lisp_ptr is changed to a macro.

2017-02-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/doc-view.el (doc-view-mode): Don't require a final newline

	(doc-view-revert-buffer): Silence overflow warnings.

2017-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	2017-01-30 Port to PGI 16.10 x86-64
	2017-01-20 time_rz: fix comment typo
	2017-01-14 strftime: %z is -00 if unknown
	This incorporates:
	* doc/misc/texinfo.tex, lib/c-ctype.h, lib/strftime.c:
	* lib/time-internal.h, lib/verify.h:
	Copy from gnulib.

2017-02-02  Tino Calancha  <tino.calancha@gmail.com>

	Check if there are hunks before kill or refine a hunk

	* lisp/vc/diff-mode.el (diff--some-hunks-p): New predicate.
	(diff-hunk-kill, diff-file-kill, diff-refine-hunk): Use it (Bug#25571).

2017-02-02  Tino Calancha  <tino.calancha@gmail.com>

	Ignore error after kill last file or hunk

	* lisp/vc/diff-mode.el (diff-hunk-kill): Go to beginning of hunk before kill.
	Ignore error after kill last hunk (Bug#25570).
	(diff-file-kill): Idem.

2017-02-02  Tino Calancha  <tino.calancha@gmail.com>

	Show current line highlighted in *Occur* buffer

	* lisp/replace.el (list-matching-lines-current-line-face)
	(list-matching-lines-jump-to-current-line): New user options.
	(occur--orig-line, occur--orig-line-str): New variables.
	(occur, occur-engine): Use them.
	(occur--final-pos): New variable.
	(occur-1): Use it.
	(occur-engine): Idem.
	Show the current line with 'list-matching-lines-current-line-face'.
	Set point on the first matching line after the current one.
	* etc/NEWS: Add entry for the new option.

2017-02-02  Tino Calancha  <tino.calancha@gmail.com>

	Allow occur command to operate on the region

	See discussion in:
	https://lists.gnu.org/r/emacs-devel/2016-12/msg01084.html
	* lisp/replace.el (occur--region-start, occur--region-end)
	(occur--matches-threshold): New variables.
	(occur-engine): Use them.
	(occur): Idem.
	Add optional arg REGION; if non-nil occur applies in that region.
	* doc/lispintro/emacs-lisp-intro.texi (Keybindings): Update manual
	* doc/emacs/search.texi (Other Repeating Search): Idem.

2017-02-02  Mark Oteiza  <mvoteiza@udel.edu>

	Treat list-buffers-directory as a string

	Another step in the long history of list-buffers-directory.  A thread
	branch discussing the meaning/use of the variable starts here
	https://lists.gnu.org/r/emacs-devel/2009-09/msg00684.html
	Also see (info "(elisp) Buffer File Name").
	* lisp/buff-menu.el: Relocate special case code into info.el.  Nix
	Info-* defvars.
	(Buffer-menu--pretty-file-name): Remove special case.  Use
	bound-and-true-p.
	(Buffer-menu-info-node-description): Remove.
	* lisp/ibuffer.el (ibuffer-buffer-file-name): Treat
	list-buffers-directory as a string.
	* lisp/info.el (Info-node-description): New function.
	(Info-select-node): Use it.

2017-02-02  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in parse-time.el

	* lisp/calendar/parse-time.el: Turn on lexical-binding.
	(parse-time-iso8601-regexp, parse-iso8601-time-string): Remove unused
	bindings.

2017-02-02  Mark Oteiza  <mvoteiza@udel.edu>

	Prevent creating thumbnails of all gif frames

	With the previous defaults, doing image-dired on a directory with an
	animated foo.gif would cause creation of foo.thumb-N.gif for each of
	N frames in foo.gif.  By default image-dired looks for foo.thumb.gif, so
	there additionally is no usable thumbnail after all the needless effort.
	image-dired never handled animation, regardless.
	* lisp/image-dired.el: Mention limitation.
	(image-dired-cmd-create-thumbnail-options):
	(image-dired-cmd-create-temp-image-options):
	(image-dired-cmd-create-standard-thumbnail-options): Append [0] to
	filename to indicate only converting the 0th frame.
	(image-dired-display-image-mode): Don't show a cursor.

2017-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix quitting bug when buffers are frozen

	Problem noted by Eli Zaretskii in:
	https://lists.gnu.org/r/emacs-devel/2017-01/msg00721.html
	This patch also fixes some other issues in that report.
	* src/lisp.h (incr_rarely_quit): Remove.
	All callers changed to use rarely_quit directly.
	* src/search.c (freeze_buffer_relocation)
	(thaw_buffer_relocation): New functions.
	(looking_at_1, fast_looking_at, search_buffer):
	Use them to fix bug when quitting when buffers are frozen.
	* src/sysdep.c (emacs_intr_read): Rename from emacs_nointr_read.
	All uses changed.

2017-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Revamp quitting and fix infloops

	This fixes some infinite loops that cannot be quitted out of,
	e.g., (defun foo () (nth most-positive-fixnum '#1=(1 . #1#)))
	when byte-compiled and when run under X.  See:
	https://lists.gnu.org/r/emacs-devel/2017-01/msg00577.html
	This also attempts to keep the performance improvements I recently
	added, as much as possible under the constraint that the infloops
	must be caught.  In some cases this fixes infloop bugs recently
	introduced when I removed immediate_quit.
	* src/alloc.c (Fmake_list):
	Use rarely_quit, not maybe_quit, for speed in the usual case.
	* src/bytecode.c (exec_byte_code):
	* src/editfns.c (Fcompare_buffer_substrings):
	* src/fns.c (Fnthcdr):
	* src/syntax.c (scan_words, skip_chars, skip_syntaxes)
	(Fbackward_prefix_chars):
	Use rarely_quit so that users can C-g out of long loops.
	* src/callproc.c (call_process_cleanup, call_process):
	* src/fileio.c (read_non_regular, Finsert_file_contents):
	* src/indent.c (compute_motion):
	* src/syntax.c (scan_words, Fforward_comment):
	Remove now-unnecessary maybe_quit calls.
	* src/callproc.c (call_process):
	* src/doc.c (get_doc_string, Fsnarf_documentation):
	* src/fileio.c (Fcopy_file, read_non_regular, Finsert_file_contents):
	* src/lread.c (safe_to_load_version):
	* src/sysdep.c (system_process_attributes) [GNU_LINUX]:
	Use emacs_read_quit instead of emacs_read in places where
	C-g handling is safe.
	* src/eval.c (maybe_quit): Move comment here from lisp.h.
	* src/fileio.c (Fcopy_file, e_write):
	Use emacs_write_quit instead of emacs_write_sig in places where
	C-g handling is safe.
	* src/filelock.c (create_lock_file): Use emacs_write, not
	plain write, as emacs_write no longer has a problem.
	(read_lock_data): Use emacs_read, not read, as emacs_read
	no longer has a problem.
	* src/fns.c (rarely_quit): Move to lisp.h and rename to
	incr_rarely_quit.  All uses changed..
	* src/fns.c (Fmemq, Fmemql, Fassq, Frassq, Fplist_put, Fplist_member):
	* src/indent.c (compute_motion):
	* src/syntax.c (find_defun_start, back_comment, forw_comment)
	(Fforward_comment, scan_lists, scan_sexps_forward):
	Use incr_rarely_quit so that users can C-g out of long loops.
	* src/fns.c (Fnconc): Move incr_rarely_quit call to within
	inner loop, so that it catches C-g there too.
	* src/keyboard.c (tty_read_avail_input): Remove commented-out
	and now-obsolete code dealing with interrupts.
	* src/lisp.h (rarely_quit, incr_rarely_quit): New functions,
	the latter moved here from fns.c and renamed from rarely_quit.
	(emacs_read_quit, emacs_write_quit): New decls.
	* src/search.c (find_newline, search_buffer, find_newline1):
	Add maybe_quit to catch C-g.
	* src/sysdep.c (get_child_status): Always invoke maybe_quit
	if interruptible, so that the caller need not bother.
	(emacs_nointr_read, emacs_read_quit, emacs_write_quit):
	New functions.
	(emacs_read): Rewrite in terms of emacs_nointr_read.
	Do not handle C-g or signals; that is now for emacs_read_quit.
	(emacs_full_write): Replace PROCESS_SIGNALS two-way arg
	with INTERRUPTIBLE three-way arg.  All uses changed.

2017-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Remove immediate_quit.

	The old code that sets and clears immediate_quit was
	ineffective except when Emacs is running in terminal mode, and
	has problematic race conditions anyway, so remove it.  This
	will introduce some hangs when Emacs runs in terminal mode,
	and these hangs should be fixed in followup patches.
	* src/keyboard.c (immediate_quit): Remove.  All uses removed.

2017-02-01  Alan Mackenzie  <acm@muc.de>

	Allow C++ nested brace-list-entries to be better indented.

	This fixes bug #24431.  The key change of this bug fix is correctly analyzing
	nested brace lists when the opening element stands on the same line as both
	its introductory brace and an enclosing parameter list parenthesis.

	* lisp/progmodes/cc-align.el (c-lineup-under-anchor): New line-up function.

	* lisp/progmodes/cc-engine.el (c-looking-at-or-maybe-in-bracelist): Accept the
	presence of exactly an identifier between an open parenthesis and an open
	brace as evidence of the brace starting a brace list.
	(c-looking-at-statement-block): New function, extracted from
	c-looking-at-inexpr-block.  Enhance it to analyze inner blocks recursively
	when needed.
	(c-looking-at-inexpr-block): Extract new function (see above) and call it.
	(c-add-stmt-syntax): Enhance, with new &optional parameter, to supply the
	prime syntactic symbol with a fixed anchor point.  When this is used, restrict
	all added syntactic symbols to those having an anchor point on the same line.
	Add, in addition to the current additional symbols, c-brace-list-entry when
	needed; use c-looking-at-statement-block to determine the latter.
	(c-guess-basic-syntax, CASE 9D): Use c-add-stmt-syntax rather than just
	c-add-syntax, to assemble the syntactic context of a 'brace-list-entry, thus
	getting, possibly, several accompanying syntactic entries.

	* lisp/progmodes/cc-styles.el (c-style-alist, "gnu" style): New entry for
	'brace-list-intro, namely c-lineup-arglist-intro-after-paren.

	* lisp/progmodes/cc-vars.el (c-offsets-alist): Change the factory default
	offset for 'brace-list-entry from 0 to c-lineup-under-anchor.

	* doc/misc/cc-mode.texi (Syntactic Symbols): Amend the definition of
	brace-list-intro.
	(Brace List Symbols): Amend the example to show the new analysis of brace
	lists when the first element comes on the same line as the opening brace.
	(Misc Line-Up): Document the new line-up function c-lineup-under-anchor.

2017-02-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "DOn't use string-as-unibyte in Gnus"

	This reverts commit d1c931009004aef847105b7bac6b6ffafd985b82.

	Not all the cases where we had string-as-unibyte were characters,
	so this needs to be considered more thoroughly before being redone.

2017-02-01  Vibhav Pant  <vibhavp@gmail.com>

	Use maphash instead of cl-loop.

	* lisp/emacs-lisp/bytecomp.el: (byte-compile-lapcode) Use maphash
	  instead of cl-loop

2017-02-01  Michael Albinus  <michael.albinus@gmx.de>

	Fix a subtle problem in Tramp with timers

	* lisp/net/tramp.el (tramp-accept-process-output): Change argument
	list.  Make it work when called inside a timer.  See
	<https://lists.gnu.org/r/tramp-devel/2017-01/msg00010.html>.

2017-01-31  Eli Zaretskii  <eliz@gnu.org>

	Index byte-compile-debug

	* doc/lispref/compile.texi (Compilation Functions): Index
	byte-compile-debug.

2017-01-31  Philipp Stephani  <phst@google.com>

	Document `byte-compile-debug' in the ELisp manual

	* doc/lispref/compile.texi: Document variable `byte-compile-debug'.

2017-01-31  Ted Zlatanov  <tzz@lifelogs.com>

	read-multiple-choice: explain dialog popups more

	* lisp/emacs-lisp/subr-x.el (read-multiple-choice): Explain
	when a graphical popup is used and how it can be avoided.

2017-01-31  Ted Zlatanov  <tzz@lifelogs.com>

	auth-source-user-and-password: add forgotten user parameter

		* lisp/auth-source.el (auth-source-user-and-password): Use
	          accidentally unused "user" parameter.
	          Reported by Oscar Najera <najera.oscar@gmail.com>.

2017-01-31  Simen Heggestøyl  <simenheg@gmail.com>

	Fix typo in a NEWS entry for CSS mode

2017-01-31  Philipp Stephani  <phst@google.com>

	Document variable `byte-compile-debug'

	* lisp/emacs-lisp/bytecomp.el (byte-compile-debug): Document variable.

2017-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	DOn't use string-as-unibyte in Gnus

	* lisp/gnus/nnmail.el (nnmail-parse-active): Don't use
	string-as-unibyte.
	(nnmail-insert-xref): Ditto.

	* lisp/gnus/canlock.el (canlock-make-cancel-key): Ditto.

	* lisp/gnus/gnus-art.el (gnus-article-browse-html-parts): Ditto.

	* lisp/gnus/gnus-srvr.el (gnus-browse-foreign-server): Ditto.
	(gnus-browse-foreign-server): Ditto.
	(gnus-browse-foreign-server): Ditto.

	* lisp/gnus/gnus-start.el
	(gnus-update-active-hashtb-from-killed): Ditto.
	(gnus-read-newsrc-el-file): Ditto.

	* lisp/gnus/mml.el (mml-generate-mime-1): Ditto.

	* lisp/gnus/nnir.el (nnir-get-active): Ditto.
	(nnir-get-active): Ditto.

2017-01-31  Juri Linkov  <juri@linkov.net>

	Allow C-s C-w to yank ' to the search ring in the Gnus article buffer

	* lisp/gnus/gnus-art.el (gnus-article-mode-syntax-table): Make
	M-. in article buffers work for `foo' strings, and still allow
	C-s C-w to yank ' to the search ring (bug#22248).

2017-01-31  Paul Eggert  <eggert@cs.ucla.edu>

	* src/alloc.c, src/lisp.h: Fix minor glitches in recent changes.

2017-01-31  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/vc/diff-mode-tests.el: Require diff-mode.

2017-01-31  Dima Kogan  <dima@secretsauce.net>

	New test for diff-mode handling trailing --

	test/lisp/vc/diff-mode-tests.el: New test file

2017-01-31  Dima Kogan  <dima@secretsauce.net>

	Handle patch terminators produced by git and bzr patch export

	Patch by Juri Linkov posted in the #9597 bug report

	* lisp/vc/diff-mode.el (diff-sanity-check-hunk): Find and ignore
	terminator (Bug #9597, #5302)

2017-01-31  Dima Kogan  <dima@secretsauce.net>

	Revert two accidental commits

	This reverts commit f3c77d11af65f3b319b1784b4c3cf08c51aa7997.
	This reverts commit 3c941b900007c9e79c00af0f21d88154f6d8af1a.

2017-01-31  Dima Kogan  <dima@secretsauce.net>

	stash

2017-01-31  Dima Kogan  <dima@secretsauce.net>

	comint-get-old-input-default: behavior follows docstring

	lisp/comint.el (comint-get-old-input-default): Modify behavior to follow
	docstring: if `comint-use-prompt-regexp' is nil, then return the CURRENT LINE,
	if point is on an output field.

2017-01-31  Noam Postavsky  <npostavs@gmail.com>

	Fix call to debugger on assertion failure

	* lisp/emacs-lisp/cl-preloaded.el (cl--assertion-failed): The first
	argument must be `error', and the second is a list of arguments for
	`signal'.

2017-01-30  Tom Tromey  <tom@tromey.com>

	css-mode documentation lookup feature

	* etc/NEWS: Mention new feature.
	* lisp/textmodes/css-mode.el (css-mode-map): New defvar.
	(css--mdn-lookup-history): New defvar.
	(css-lookup-url-format): New defcustom.
	(css--mdn-property-regexp, css--mdn-completion-list): New defconsts.
	(css--mdn-after-render, css--mdn-find-symbol, css-lookup-symbol): New
	defuns.
	* test/lisp/textmodes/css-mode-tests.el (css-mdn-symbol-guessing): New
	test.

2017-01-30  Glenn Morris  <rgm@gnu.org>

	edt-mapper: just loading a library should not run code

	* lisp/emulation/edt-mapper.el (edt-mapper): New function,
	containing code previously at top-level.
	* lisp/emulation/edt.el (edt-load-keys): After loading edt-mapper,
	run edt-mapper function.

2017-01-30  Glenn Morris  <rgm@gnu.org>

	mh-compat.el: remove duplicate definition

	* lisp/mh-e/mh-compat.el (mh-make-obsolete-variable):
	Remove duplicate definition.

2017-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Add delq list arg check

	* src/fns.c (Fdelq): Check that list is a proper list.
	This is more compatible with what ‘delete’ does.

2017-01-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/indent.el (indent-region-line-by-line): New function.

	Extracted from indent-region.
	(indent-region, indent-region-function): Use it.

2017-01-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/subr.el (string-make-unibyte, string-make-multibyte): Obsolete.

2017-01-30  Eli Zaretskii  <eliz@gnu.org>

	More fixes to prevent crashes on C-g

	* src/fns.c (Fassq, Frassq, Fplist_put): Reset immediate_quit
	before returning, to avoid crashes in quit.  (Bug#25566)

2017-01-30  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes on C-g in TTY sessions

	* src/keyboard.c (handle_interrupt): Don't quit if
	waiting_for_input is set, as doing that is "unsafe": it will
	abort.  (Bug#25566)

2017-01-30  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el: Create jump tables with :purecopy t

	Merge remote-tracking branch 'origin/master' into feature/byte-switch

2017-01-30  Vibhav Pant  <vibhavp@gmail.com>

	Fix hash tables not being purified correctly.

	* src/alloc.c
	(purecopy_hash_table) New function, makes a copy of the given hash
	table in pure storage.
	Add new struct `pinned_object' and `pinned_objects' linked list for
	pinning objects.
	(Fpurecopy) Allow purifying hash tables
	(purecopy) Pin hash tables that are either weak or not declared with
	`:purecopy t`, use purecopy_hash_table otherwise.
	(marked_pinned_objects) New function, marks all objects in pinned_objects.
	(garbage_collect_1) Use it. Mark all pinned objects before sweeping.
	* src/lisp.h: Add new field `pure' to struct `Lisp_Hash_Table'.
	* src/fns.c: Add `purecopy' parameter to hash tables.
	(Fmake_hash_table): Check for a `:purecopy PURECOPY' argument, pass it
	to make_hash_table.
	(make_hash_table): Add `pure' parameter, set h->pure to it.
	(Fclrhash, Fremhash, Fputhash): Enforce that the table is impure with
	CHECK_IMPURE.
	* src/lread.c: (read1) Parse for `purecopy' parameter while reading
	  hash tables.
	* src/print.c: (print_object) add the `purecopy' parameter while
	  printing hash tables.
	* src/category.c, src/emacs-module.c, src/image.c, src/profiler.c,
	  src/xterm.c: Use new (make_hash_table).

2017-01-29  Dmitry Gutov  <dgutov@yandex.ru>

	Escape dash in xref rgrep regexp

	* lisp/progmodes/xref.el (xref-collect-matches): Escape dash
	in REGEXP if it's the first character.

2017-01-29  Dmitry Gutov  <dgutov@yandex.ru>

	Say JavaScript, not Javascript

	* lisp/progmodes/js.el (js-mode-map, js-syntax-propertize)
	(js-js-error, js-eval, js-set-js-context)
	(js--get-js-context):
	Refer to the language consistently as JavaScript.

2017-01-29  Juanma Barranquero  <lekktu@gmail.com>

	lisp/*.el: Fix some warnings

	* lisp/battery.el (dbus-get-property):
	* lisp/dired-aux.el (format-spec): Declare function.

	* lisp/net/zeroconf.el (zeroconf-list-service-names)
	(zeroconf-list-service-types, zeroconf-list-services):
	Mark unused lexical arg.

	* lisp/progmodes/hideshow.el (hs-hide-block-at-point):
	* lisp/progmodes/sql.el (sql-end-of-statement):
	Pass LIMIT to 'looking-back'.

2017-01-29  Noam Postavsky  <npostavs@gmail.com>

	Don't warn about obsolete defgenerics when defining them

	* lisp/emacs-lisp/cl-generic.el (cl-defgeneric): The declaration code
	should run after the definition code (Bug#25556).

2017-01-29  Noam Postavsky  <npostavs@gmail.com>

	Call modification hooks in org-src fontify buffers

	* lisp/org/org-src.el (org-src-font-lock-fontify-block): Let-bind
	`inhibit-modification-hooks' to nil, since this function can be called
	from jit-lock-function which binds that variable to t (Bug#25132).

2017-01-29  Tino Calancha  <tino.calancha@gmail.com>

	Fix Bug#25524

	* lisp/vc/diff-mode.el (diff-beginning-of-hunk):
	Return position at the beginning off the hunk.
	(diff-file-junk-re): Add SVN keywords.

2017-01-28  Stephen Berman  <stephen.berman@gmx.net>

	hl-line.el: Don't try to operate on a killed buffer

	* lisp/hl-line.el (hl-line-maybe-unhighlight): Examine only
	live buffers (bug#25522).

2017-01-28  Mark Oteiza  <mvoteiza@udel.edu>

	Use access-file in EWW to check before downloading a file

	* lisp/net/eww.el (eww-download): Check accessibility of
	eww-download-directory to prevent starting a download that will fail
	to write.
	* src/fileio.c (Faccess_file): Clarify the use of string argument in
	the docstring.

2017-01-28  Yuri D'Elia  <wavexx@thregr.org>

	Subject: Check Bcc after the Messag hook has run

	* lisp/gnus/message.el (message-send): If the hook modifies
	the message (mml tags or headers), we should check bcc on the
	final message, not on the original.

2017-01-28  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'format' conversions

	* src/editfns.c (Fformat): More accurate description of %g and
	effects of the various flags on it.  More accurate description of
	integer conversions.

	* doc/lispref/strings.texi (Formatting Strings): More accurate
	description of %g and effects of the various flags on it.  More
	accurate description of integer conversions.  (Bug#25557)

2017-01-28  Juanma Barranquero  <lekktu@gmail.com>

	test/*.el: Avoid byte-compiler warnings

	* test/lisp/abbrev-tests.el (abbrev-table-p-test): Remove unused 'let*'.

	* test/lisp/faces-tests.el (faces--test): New customization group.
	(faces--test1, faces--test2): Use it.

	* test/lisp/ffap-tests.el (ffap-tests-25243):
	Call 'mark-whole-buffer' interactively.

	* test/lisp/ibuffer-tests.el (ibuffer-filter-groups, ibuffer-filtering-alist)
	(ibuffer-filtering-qualifiers, ibuffer-save-with-custom)
	(ibuffer-saved-filter-groups, ibuffer-saved-filters): Defvar.
	(ibuffer-format-qualifier, ibuffer-unary-operand): Declare.

	* test/lisp/minibuffer-tests.el (completion-test1):
	Mark unused lexical arguments.

	* test/lisp/simple-tests.el (simple-test--dummy-buffer): Wrap result in
	'with-no-warnings' to avoid them when the macro is invoked for effect.

	* test/lisp/emacs-lisp/cl-seq-tests.el (cl-seq-count-test):
	Mark unused lexical arguments.

	* test/lisp/emacs-lisp/let-alist-tests.el (let-alist-surface-test):
	Mark unused lexical arguments.
	(let-alist-cons): Remove unused let binding.

	* test/lisp/net/dbus-tests.el (dbus-debug): Defvar.
	(dbus-get-unique-name): Declare.

	* test/lisp/progmodes/python-tests.el (python-bob-infloop-avoid):
	Call 'font-lock-fontify-buffer' interactively.

	* test/lisp/textmodes/tildify-tests.el (tildify-space-undo-test--test):
	Mark unused lexical argument.

2017-01-27  Eli Zaretskii  <eliz@gnu.org>

	Restore a test that was removed by a recent commit

	* src/fileio.c (Ffile_accessible_directory_p): Don't overwrite the
	errno value unless it's necessary.  (Bug#25419)

2017-01-27  Mark Oteiza  <mvoteiza@udel.edu>

	Fix a couple eww customization types

	* lisp/new/eww.el (eww-download-directory, eww-bookmarks-directory):
	Change customization type to "directory".

2017-01-27  Philipp Stephani  <phst@google.com>

	Don't require a shell when loading htmlfontify

	* lisp/htmlfontify.el (hfy-which-etags): Don't call a shell for
	detecting the etags version (Bug#25468).
	* test/lisp/htmlfontify-tests.el (htmlfontify-bug25468): Add unit
	test.

2017-01-27  Paul Eggert  <eggert@cs.ucla.edu>

	Slightly tune file-accessible-directory-p fix

	* src/fileio.c (Ffile_accessible_directory_p):
	Remove unnecessary test (Bug#25419).

2017-01-27  Arash Esbati  <arash@gnu.org>

	Add \citetitle to biblatex cite format

	* lisp/textmodes/reftex-vars.el (reftex-cite-format-builtin): Add
	\citetitle[*] to `reftex-cite-format' and bind them to keys i/I
	per user request
	https://lists.gnu.org/r/auctex/2017-01/msg00049.html.

2017-01-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix charsets and encodings from non-file MIME parts

	* lisp/gnus/mml.el (mml-generate-mime-1): Get the charsets and
	encoding right for parts that do not originate from files.

2017-01-27  Eli Zaretskii  <eliz@gnu.org>

	Fix 'describe-variable' for longish variable values

	* lisp/help-fns.el (describe-variable): Don't accidentally remove
	the last character of a variable's value.  (Bug#25545)

2017-01-27  Vladimir Panteleev  <git@thecybershadow.net>  (tiny change)

	Remove stale functions from ert manual

	* doc/misc/ert.texi (Useful Techniques when Writing Tests):
	Replace ert--mismatch references with its cl-lib replacement,
	cl-mismatch.

2017-01-27  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in Eshell manual

	* doc/misc/eshell.texi (History): Fix a typo.  Reported by Mak
	Kolybabi <mak@kolybabi.com>.

2017-01-27  Eli Zaretskii  <eliz@gnu.org>

	Ensure last line is at window bottom in shell buffers

	* lisp/shell.el (shell-mode): Use setq-local.  Set
	scroll-conservatively to 101 locally.  See the discussion at
	https://lists.gnu.org/r/emacs-devel/2016-12/msg00736.html
	for the reasons.

2017-01-27  Michael Hoffman  <emacs-hoffman@sneakemail.com>  (tiny change)

	Support Bash Ctrl-Z indication of directory name in term.el

	* lisp/term/xterm.el (term-emulate-terminal): Do not display ?\032 escape
	codes even when 'handled-ansi-message' is non-nil.  (Bug#11919)

2017-01-27  Eli Zaretskii  <eliz@gnu.org>

	Don't report zero errno for inaccessible directory

	* src/fileio.c (Ffile_accessible_directory_p): Report EACCES when
	a file handler reports a failure.  (Bug#25419)

2017-01-27  Eli Zaretskii  <eliz@gnu.org>

	Fix filenotify-tests on MS-Windows

	* test/lisp/filenotify-tests.el (file-notify-test04-file-validity)
	(file-notify-test05-dir-validity)
	(file-notify-test06-many-events)
	(file-notify-test08-watched-file-in-watched-dir): Manually remove
	the watch descriptor before calling file-notify--test-cleanup-p.
	(Bug#25539)

2017-01-27  Hong Xu  <hong@topbug.net>

	python-mode: Fix detection for opening blocks.

	* lisp/progmodes/python.el
	(python-info-dedenter-opening-block-positions): There can't be any
	back-indented lines between an opening block and the current line.

	* test/lisp/progmodes/python-tests.el
	(python-indent-electric-colon-4): Add an indent test case where
	there is one-more indented previous opening block.

2017-01-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix Message check for bogus domain names

	* lisp/gnus/message.el (message-make-fqdn): Fix check for
	bogus system names (bug#24570).

2017-01-27  Øyvind Stegard  <oyvind@stegard.net>  (tiny change)

	Subject: Restore correct Gnus newsgroup name after sending message

	* lisp/gnus/gnus-msg.el (gnus-msg-mail): Set the value of
	gnus-newsgroup-name in the correct buffer (bug#24329).

2017-01-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention the new Gnus sorting command

2017-01-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't try to find charsets of non-text MIME parts

	* lisp/gnus/mml.el (mml-generate-mime-1): It seems nonsensical
	to try to determine the charset of non-text message parts, so
	skip that (bug#24190).  This will also remove messages like
	"bunzip2ing /tmp/acsb.cpio.bz2...done" while sending messages
	if you include such files.

2017-01-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Add new command gnus-article-sort-by-marks

	* doc/misc/gnus.texi (Summary Sorting): Mention
	gnus-summary-sort-by-marks.

	* lisp/gnus/gnus-sum.el (gnus-article-sort-by-marks): New
	function (bug#23393).
	(gnus-thread-sort-by-marks): Ditto.
	(gnus-summary-sort-by-mark): New command suggested by Dan Jacobson.
	(gnus-summary-mode-map): Add keystroke.
	(gnus-summary-make-menu-bar): Add to menu.

2017-01-26  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make `C-h b' work correctly in Gnus article buffer (bug#18257)

	* lisp/gnus/gnus-art.el (gnus-article-describe-bindings):
	Ignore summary commands that aren't bound to
	gnus-article-read-summary-keys keys (bug#18257).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix crossposting in non-primary groups

	* lisp/gnus/message.el
	(message-cross-post-followup-to-header): Gnus server prefixes
	shouldn't be included in the group names (bug#21661).
	(message-cross-post-followup-to): Ditto.

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Gnus doc clarification

	* doc/misc/gnus.texi (Unavailable Servers): Explicitly say
	that "unreachable" is the same as disabling it (bug#21630).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove dead code from rfc2047

	* lisp/mail/rfc2047.el (rfc2047-fold-field): Remove dead code.

	It's been disabled since 2005, when I made the change with the
	following comment.

	(rfc2047-encode-message-header): Disabled header folding -- not
	all headers can be folded, and this should be done by the message
	composition mode.  Probably.  I think.

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Fill too long mail headers

	* lisp/gnus/message.el (message--fold-long-headers): New
	function to fold too-long headers (bug#21608).
	(message-send-mail): Use it to fill headers longer than 998
	characters (which is the protocol limit).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Make nndoc more resilient against corrupted files

	* lisp/gnus/nndoc.el (nndoc-possibly-change-buffer): Don't bug
	out on invalid files, like invalid .gz files (bug#21538).
	This may hinder Gnus from starting up.

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Respect buffer-local message-fcc-handler-function

	* lisp/gnus/message.el (message-do-fcc): Copy the local
	variables from the Message buffer so that local settings of
	`message-fcc-handler-function' etc are respected (bug#21174).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	(message-do-fcc): Modernize the code slightly.

	* lisp/gnus/message.el (message-do-fcc): Modernize the code slightly.

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid a regexp overflow in message-goto-body

	* lisp/gnus/message.el (message-goto-body-1): Avoid using a
	complicated backtracking regexp, because they may overflow on
	large headers (bug#21160).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Refactor message-goto-body

	* lisp/gnus/message.el (message-goto-body-1): Refactor out for reuse.

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix typo in last checkin

	* lisp/gnus/nnimap.el (nnimap-shell-program): Document
	nnimap-shell-program (bug#20651).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Document nnimap-shell-program

	* lisp/gnus/nnimap.el (nnimap-shell-program): Document
	nnimap-shell-program (bug#20651).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Document :shell-command in `make-network-process'

	* doc/lispref/processes.texi (Network): Document :shell-command.

	* lisp/net/network-stream.el (open-network-stream): Document
	the :shell-command parameter (bug#20651).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Gnus doc clarification

	* lisp/gnus/gnus-sum.el (gnus-summary-save-article): Mention
	the gnus-prompt-before-saving variable (bug#20500).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix the previous mml patch better

	* lisp/gnus/mml.el (mml-minibuffer-read-file): Fix the
	previous patch in a better way (bug#20480).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Give a slight better error message in mml-minibuffer-read-file

	* lisp/gnus/mml.el (mml-minibuffer-read-file): Give a slightly
	better error message when the user enters nothing (bug#20480).

2017-01-26  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el:(bc-cond-jump-table-info)add docstring

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Make eww buffers prettier in the buffer listing

	* lisp/net/eww.el (eww-render): Put the currently visited URL
	into the buffer listing (bug#23738).
	(eww-render): Ditto.

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow mml-attach-file to prompt less

	* lisp/gnus/mml.el (mml-attach-file): If given a prefix, don't
	prompt for type/description/disposition, but use defaults
	(bug#19202).

2017-01-26  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't allow message-newline-and-reformat to be run outside the body

	* lisp/gnus/message.el (message-newline-and-reformat): Error
	out if run outside the body of a message (bug#18820).

2017-01-26  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el: Use correct function to push nil

	* lisp/emacs-lisp/bytecomp.el: (byte-compile-cond-jump-table) Use
	  byte-compile-constant instead of byte-compile-form to push nil.

2017-01-26  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/disass.el: Fix spacing while showing jump tables

2017-01-26  Paul Eggert  <eggert@cs.ucla.edu>

	Replace QUIT with maybe_quit

	There’s no longer need to have QUIT stand for a slug of C statements.
	Use the more-obvious function-call syntax instead.
	Also, use true and false when setting immediate_quit.
	These changes should not affect the generated machine code.
	* src/lisp.h (QUIT): Remove.  All uses replaced by maybe_quit.

2017-01-26  Paul Eggert  <eggert@cs.ucla.edu>

	A quicker check for quit

	On some microbenchmarks this lets Emacs run 60% faster on my
	platform (AMD Phenom II X4 910e, Fedora 25 x86-64).
	* src/atimer.c: Include keyboard.h, for pending_signals.
	* src/editfns.c (Fcompare_buffer_substrings):
	* src/fns.c (Fnthcdr, Fmemq, Fmemql, Fassq, Frassq, Fplist_put)
	(Fnconc, Fplist_member):
	Set and clear immediate_quit before and after loop instead of
	executing QUIT each time through the loop.  This is OK for loops
	that affect only locals.
	* src/eval.c (process_quit_flag): Now static.
	(maybe_quit): New function, containing QUIT’s old body.
	* src/fns.c (rarely_quit): New function.
	(Fmember, Fassoc, Frassoc, Fdelete, Fnreverse, Freverse)
	(Flax_plist_get, Flax_plist_put, internal_equal, Fnconc):
	Use it instead of QUIT, for
	speed in tight loops that might modify non-locals.
	* src/keyboard.h (pending_signals, process_pending_signals):
	These belong to keyboard.c, so move them here ...
	* src/lisp.h: ... from here.
	(QUIT): Redefine in terms of the new maybe_quit function, which
	contains this macro’s old definiens.  This works well with branch
	prediction on processors with return stack buffers, e.g., x86
	other than the original Pentium.

2017-01-26  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify make-list implementation

	* src/alloc.c (Fmake_list): Don’t unroll loop, as the complexity
	is not worth it these days.

2017-01-26  Mark Oteiza  <mvoteiza@udel.edu>

	Make use of cl-loop destructuring

	* lisp/progmodes/js.el (js--get-tabs): Replace extraneous bits with
	destructuring.
	(with-js): Add declare forms.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "Bind C-c keys in the article buffer"

	This reverts commit 6b4195f2ace1f6328c5a833fde40f39babef4fa6.

	The commit somehow lead to problems in other parts of Emacs.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Document how to quote MML tags

	* doc/misc/emacs-mime.texi (MML Definition): Mention how to
	quote MML tags (bug#18881).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Make address parsing more robust

	* lisp/mail/ietf-drums.el (ietf-drums-parse-address): Don't
	bug out on addresses like
	(ietf-drums-parse-address "\"Foo \"bar\" <larsi@gnus.org>")
	(bug#18572).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix the %P (line number) thing in Gnus summary buffers

	* lisp/gnus/gnus-salt.el (gnus-pick-line-number): Remove hack.

	* lisp/gnus/gnus-sum.el (gnus-summary-read-group-1): Reset the
	"pick" mode line number on entry instead of relying in a hack (bug#18311).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix wrong documentation on nnmairix keystrokes

	* doc/misc/gnus.texi (nnmairix keyboard shortcuts): The
	nnmairix commands are on G G, not $ (bug#18260).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Bind C-c keys in the article buffer

	* lisp/gnus/gnus-art.el (gnus-article-mode-map): Also bind the
	C-c keys so that they execute in the summary buffer
	(bug#18257).  This makes commands like `C-c C-f' work from the
	article buffer.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't mark articles in Gnus as displayed when they aren't

	* lisp/gnus/gnus-sum.el (gnus-summary-read-group-1): Don't
	mark any articles as selected if we're not selecting any
	articles (bug#18255).

2017-01-25  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/disass.el: Display jump tables for switch.

	* lisp/emacs-lisp/bytecomp.el:Use correct size for switch jump-table

	* lisp/emacs-lisp/bytecomp.el: Simplify b-c-cond-valid-obj2-p

	* lisp/emacs-lisp/bytecomp.el: Fix byte-switch codegen with symbols.

2017-01-25  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/byte-opt.el: Add support for decompiling switch

	* lisp/emacs-lisp/byte-opt.el: (byte-decompile-bytecode-1) When the
	  constant encountered precedes a byte-switch op, replace all the
	  addresses in the jump table with tags.

2017-01-25  Mark Oteiza  <mvoteiza@udel.edu>

	Move cXXXr and cXXXXr to subr.el

	* etc/NEWS: Mention new core Elisp.
	* doc/lispref/lists.texi (List Elements): Document and index the new
	functions.
	* doc/misc/cl.texi (List Functions): Change "defines" to "aliases".
	* lisp/subr.el (caaar, caadr, cadar, caddr, cdaar, cdadr, cddar)
	(cdddr, caaaar caaadr, caadar, caaddr, cadaar, cadadr, caddar):
	(cadddr, cdaaar, cdaadr, cdadar, cdaddr, cddaar, cddadr, cdddar):
	(cddddr): New functions.
	* lisp/emacs-lisp/cl-lib.el (cl-caaar, cl-caadr, cl-cadar, cl-caddr):
	(cl-cdaar, cl-cdadr, cl-cddar cl-cdddr, cl-caaaar cl-caaadr):
	(cl-caadar, cl-caaddr, cl-cadaar, cl-cadadr, cl-caddar, cl-cadddr):
	(cl-cdaaar, cl-cdaadr, cl-cdadar, cl-cdaddr, cl-cddaar, cl-cddadr):
	(cl-cdddar, cl-cddddr): Alias to new subr functions.
	* lisp/emacs-lisp/cl.el (cl-unload-function): Remove cXXXr and cXXXXr
	elements.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Only save .newsrc file if the native method is NNTP

	* lisp/gnus/gnus-start.el (gnus-save-newsrc-file): Only save
	the .newsrc file if the native select method is NNTP
	(bug#18198).  This avoids problems with invalid IMAP group
	names and the like in the .newsrc file.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Only save .newsrc file if the native method is NNTP

	* lisp/gnus/gnus-start.el (gnus-save-newsrc-file): Only save
	the .newsrc file if the native select method is NNTP
	(bug#18198).  This avoids problems with invalid IMAP group
	names and the like in the .newsrc file.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Gnus custom spec fix

	* lisp/gnus/gnus-art.el (gnus-signature-limit): Fix customize
	spec to match the doc string (bug#17679).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify confusing Gnus error message

	* lisp/gnus/gnus-topic.el (gnus-topic-unindent): Clarify
	confusing error message (bug#17677).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Make C-u C-x m work with Message as documented

	* lisp/gnus/message.el (message-mail): Respect the CONTINUE
	parameter (bug#17175).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix problem with auto-mode and dir-locals-collect-variables

	* lisp/files.el (dir-locals-collect-variables): When run from
	auto-mode, the file in question may not be an absolute path
	name (bug#24016).

	Example backtrace:

	Debugger entered--Lisp error: (args-out-of-range "compile-1st-in-loa
	  dir-locals-collect-variables(((emacs-lisp-mode (indent-tabs-mode))
	  hack-dir-local-variables()
	  hack-local-variables(no-mode)
	  run-mode-hooks(diff-mode-hook)
	  diff-mode()
	  mm-display-inline-fontify((#<buffer  *mm*-923037> ("text/x-diff" (

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Attach text files correctly in Message

	* lisp/gnus/mml.el (mml-generate-mime-1): Detect which coding
	system has been used in attached text files, and don't try to
	do any encoding of these files (bug#13808).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Build fix for older gnutls versions

	* src/gnutls.c (emacs_gnutls_handle_error):
	GNUTLS_E_PREMATURE_TERMINATION is apparently only present in
	gnutls-3.

2017-01-25  Tino Calancha  <tino.calancha@gmail.com>

	ediff-difference-vector-alist: Drop duplicated definition

	* lisp/vc/ediff-init.el (ediff-difference-vector-alist):
	Drop duplicated definition.
	(ediff-difference-vector-A, ediff-difference-vector-B)
	(ediff-difference-vector-C, ediff-difference-vector-Ancestor):
	Move definition before 'ediff-difference-vector-alist'.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "nnimap.el: support additional expunge options"

	This reverts commit 4e9baea6aba1633074889339dcc7cdc9d73880d3.

	The patch broke fetching new mail:

	Debugger entered--Lisp error: (error "Format specifier doesn’t match argument type")
	  format("%d .*\n" (t ("OK" ("HIGHESTMODSEQ" "914696") "Expunge" "completed.") ("VANISHED" "1825937") ("0" "RECENT")))
	  (looking-at (format "%d .*\n" sequence))
	  (not (looking-at (format "%d .*\n" sequence)))
	  (progn (while (and (not (bobp)) (progn (forward-line -1) (looking-at "\\*\\|[0-9]+ OK NOOP")))) (not (looking-at (format "%d .*\n" sequence))))

2017-01-25  Nikolaus Rath  <Nikolaus@rath.org>

	nnimap.el: support additional expunge options

	* lisp/gnus/nnimap.el (nnimap-close-group)
	(nnimap-request-expire-articles, nnimap-delete-article)
	(nnimap-request-scan): add new 'never, 'immediate, and 'on-exit
	settings for nnimap-expunge (bug#20670).

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't tag Gnus bugs with "gnus"

	* lisp/gnus/gnus-msg.el (gnus-bug): Remove the bug package tags.

	* lisp/gnus/gnus.el (gnus-bug-package): Removed; Gnus doesn't
	have its own package any more in the bug tracker.

2017-01-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Tweak TLS error messaging on closed connections

	* src/gnutls.c (emacs_gnutls_handle_error): Demote the normal
	peer-closed-connection "The TLS connection was non-properly
	terminated" message to a lower level so that it isn't shown to
	the user by default.

2017-01-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid having eww unexpectedly open external browsers

	* lisp/net/eww.el (eww-render): Instead of opening unsupported
	content types like audio/mpeg directly in an external browser
	(which can be very confusing especially when something
	redirects to a file like that), just display a simple
	interstitial that people can choose to click on or not
	(bug#22671).

2017-01-24  Lars Ingebrigtsen  <larsi@gnus.org>

	When opening new eww buffers, use buffer names based on the host name

	* lisp/net/eww.el (eww-browse-url): When opening in a new
	window, use a buffer name based on the host name (bug#23738).
	(eww--dwim-expand-url): Refactored out into its own function
	for easier reuse.

2017-01-24  David Engster  <deng@randomsample.de>

	xml: Fix parsing of default namespace with quoted names

	* lisp/xml.el (xml-parse-attlist): Properly extract namespace when
	  parsing is done with quoted symbol names (bug#23440).
	* test/lisp/xml-tests.el (xml-parse-test--default-namespace-qnames)
	  (xml-parse-test-default-namespace-qnames): Test for the above.

2017-01-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix rendering of some complex SVG images

	* lisp/net/shr.el (shr-parse-image-data): Don't transform
	SVG->DOM->XML unless we're blocking images, as this is apt to
	destroy the SVG (bug#24111).

2017-01-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify the last clarification

	* lisp/net/shr.el (shr-width): Clarify the interaction with
	`shr-use-fonts' (bug#24928).

2017-01-24  Lars Ingebrigtsen  <larsi@gnus.org>

	shr-width doc clarification

	* lisp/net/shr.el (shr-width): Clarify the interaction with
	`shr-use-fonts' (bug#24928).

2017-01-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow passing in max-width/height

	* lisp/net/shr.el (shr-rescale-image): Allow passing in
	max-width/height (bug#25287).

2017-01-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/vhdl-mode.el: Avoid add-to-list on local vars

	Require `cl' for `pushnew'.
	(vhdl-scan-project-contents, vhdl-compose-wire-components)
	(vhdl-uniquify): Use `pushnew' instead of `add-to-list'.

2017-01-24  Noam Postavsky  <npostavs@gmail.com>

	Fix comment detection on open parens

	Characters having both open paren syntax and comment start syntax were
	being detected as open parens even when they should have been part a
	comment starter (Bug#24870).

	* src/syntax.c (in_2char_comment_start): New function, extracted from
	`scan_sexps_forward'.
	(scan_sexps_forward): Add check for a 2-char comment starter before the
	loop.  Inside the loop, do that check after incrementing the 'from'
	character index.  Move the single char comment syntax cases into the
	switch instead of special casing them before.
	* test/src/syntax-tests.el (parse-partial-sexp-paren-comments):
	(parse-partial-sexp-continue-over-comment-marker): New tests.

2017-01-23  Alan Mackenzie  <acm@muc.de>

	Give , and .@ doc strings.  Fixes bug #24561.

	Also make *Help* links to ``' possible.  Also make usable as such doc strings
	on the function-documentation property of a symbol.

	* lisp/emacs-lisp/backquote.el (top-level): Give , and '@ doc strings on the
	function-documentation property.  Also give these symbols a reader-construct
	property.

	* lisp/help-fns.el (describe-function): Allow the function-documentation
	property to work.  Use princ rather than prin1 to print the function's name
	when it has a reader-construct property.
	(help-fns-signature): Don't insert `high-usage' for a reader-construct.
	(describe-function-1): Adapt to process documentation on the
	function-documentation property.  Print "a reader construct" when appropriate.

	* lisp/help-mode.el (help-xref-symbol-regexp): Amend this regexp also to match
	``'.

2017-01-22  Paul Eggert  <eggert@cs.ucla.edu>

	Improve uses of CHECK_LIST etc.

	* src/eval.c (FletX): Report an error for invalid constructs like
	‘(let* (a . 0))’, so that ‘let*’ is more consistent with ‘let’.
	(lambda_arity): Use plain CHECK_CONS.
	* src/fns.c (CHECK_LIST_END): Move from here to lisp.h.
	(Fcopy_alist): Remove unnecessary CHECK_LIST call, since
	concat does that for us.
	(Fnthcdr, Fmember, Fmemql, Fdelete, Fnreverse):
	Use CHECK_LIST_END, not CHECK_LIST_CONS.  This hoists a
	runtime check out of the loop.
	(Fmemq): Simplify and use CHECK_LIST_END instead of CHECK_LIST.
	(Fassq, Fassoc, Frassq, Frassoc):
	Simplify and use CHECK_LIST_END instead of CAR.
	(assq_no_quit, assoc_no_quit): Simplify and assume proper list.
	(Fnconc): Use plain CHECK_CONS, and do-while instead of while loop.
	* src/fontset.c (Fnew_fontset):
	* src/frame.c (Fmodify_frame_parameters):
	Use CHECK_LIST_END at end, rather than CHECK_LIST at start, for a
	more-complete check.
	* src/gfilenotify.c (Fgfile_add_watch):
	Omit unnecessary CHECK_LIST, since Fmember does that for us.
	* src/lisp.h (lisp_h_CHECK_LIST_CONS, CHECK_LIST_CONS):
	Remove; no longer used.
	(CHECK_LIST_END): New inline function.

2017-01-22  Tino Calancha  <tino.calancha@gmail.com>

	Prevent to use tabulated-list--near-rows unbound

	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-print-entry):
	Make sure 'tabulated-list--near-rows' is bound before use it (Bug#25506).

2017-01-22  Juri Linkov  <juri@linkov.net>

	* lisp/simple.el (region-bounds): New function.

	(region-noncontiguous-p): Use it.
	https://lists.gnu.org/r/emacs-devel/2017-01/msg00044.html

2017-01-21  Alan Mackenzie  <acm@muc.de>

	Fix low-level handling of (big) C macros.

	In particular, ensure that a comment detected by its syntax is not a CPP
	construct marked with generic comment delimiter syntax-table text
	properties.

	* lisp/progmodes/cc-engine.el (c-beginning-of-macro, c-end-of-macro): Set
	c-macro-cache-syntactic to nil when the cached macro changes.
	(c-syntactic-end-of-macro, c-no-comment-end-of-macro)
	(c-state-semi-pp-to-literal, c-state-full-pp-to-literal)
	(c-state-pp-to-literal, c-parse-ps-state-to-cache)
	(c-state-cache-non-literal-place, c-literal-limits, c-literal-start)
	(c-determine-limit): When checking a parse syntax for a comment, check that
	we're not in a CPP construct marked by syntax-table generic comment delimiter
	text property.
	(c-state-pp-to-literal): Change from a defsubst to a defun.

	* lisp/progmodes/cc-mode.el (c-neutralize-syntax-in-and-mark-CPP): Check a
	parse syntax as described above under cc-engine.el.

2017-01-21  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el: Remove unused debugging statements.

2017-01-21  Noam Postavsky  <npostavs@gmail.com>

	Don't wait for frame to become visible

	* src/xterm.c (x_make_frame_visible): Remove code that waits for the
	frame to become visible.  We have to deal with invisible frames anyway,
	the loop could sometimes before the frame turned visible, and for some
	window managers (e.g., XMonad, i3wm) it caused Emacs to get stuck in a
	busy loop (Bug#24091).

2017-01-21  Tino Calancha  <tino.calancha@gmail.com>

	diff-hunk-kill independent of point inside headers

	Make diff-apply-hunk and diff-hunk-kill independent of the point
	position in a diff header (Bug#17544).
	This change allows to apply hunks in order.  It also makes possible to
	press M-k repeatedly to kill hunks in the order they appear in the buffer.
	See discussion on #Bug25105.
	* lisp/vc/diff-mode.el (diff-file-junk-re):
	Move definition before it's used.
	(diff--at-diff-header-p): New predicate; return non-nil when point
	is inside a hunk header, a file header, or within a line
	matching diff-file-junk-re.
	(diff-beginning-of-hunk): Use it.
	Check if the point is inside a diff header, in the middle of a hunk,
	or before the first hunk.
	(diff-apply-hunk): Call diff-beginning-of-hunk with non-nil arg
	before apply the hunk.
	(diff-hunk-kill, diff-file-kill):
	Call diff-beginning-of-hunk with non-nil arg after kill the hunks.
	(diff-post-command-hook): Call diff-beginning-of-hunk with non-nil argument.

2017-01-20  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of hooks related to saving buffers

	* lisp/files.el (write-file-functions, write-contents-functions)
	(before-save-hook, after-save-hook): Note that these are only used
	by save-buffer.

	* doc/lispref/backups.texi (Auto-Saving):
	* doc/lispref/files.texi (Saving Buffers): Mention that
	save-related hooks are not run by auto-saving.  (Bug#25460)

2017-01-20  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of auto-save-visited-file-name

	* doc/emacs/files.texi (Auto Save Files): Mention subtle
	differences between saving the buffer and auto-saving with
	auto-save-visited-file-name set non-nil.  (Bug#25478)

2017-01-20  Noam Postavsky  <npostavs@gmail.com>

	Fix free var FOO-mode-{syntax,abbrev}-table warnings

	* lisp/emacs-lisp/derived.el (define-derived-mode): Unconditionally
	defvar the syntax and abbrev tables so that the compiler will know that
	they are dynamically bound variables (Bug#25446).

2017-01-19  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el: Fix errors with matching quoted forms

	* lisp/emacs-lisp/bytecomp.el: (byte-compile-cond-jump-table-info)
	  eval obj2 to avoid quoted forms being stored as is.

2017-01-19  Vibhav Pant  <vibhavp@gmail.com>

	lisp/emacs-lisp/bytecomp.el: Use byte-switch only for quoted symbols

2017-01-19  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el: Add default-case for last cond clause.

	* lisp/emacs-lisp/bytecomp.el: (byte-compile-cond-jump-table) Add
	default-case for last cond clause.

2017-01-19  Philipp Stephani  <phst@google.com>

	Check that variable lists are actually lists

	'let' and 'let*' document that their first argument has to be a list,
	but don't check for that; instead, they allow (and silently ignore)
	other types.  Introduce an explicit type check.

	* src/eval.c (Flet, FletX): Check that the variable list is indeed a
	list.
	* test/src/eval-tests.el: Add unit tests.

2017-01-19  Vibhav Pant  <vibhavp@gmail.com>

	Add type checking for Bswitch, when enabled at compile time.

	* src/bytecode.c: (exec_byte_code) If BYTE_CODE_SAFE is enabled at
	  compile time, use CHECK_TYPE to verify that the jump table is a hash table.

2017-01-19  Vibhav Pant  <vibhavp@gmail.com>

	Use byte-switch for all symbols.

	* lisp/emacs-lisp/bytecomp.el: (byte-compile-cond-valid-obj2-p) Return
	  t for all symbols (instead for just keywords)

2017-01-19  Noam Postavsky  <npostavs@gmail.com>

	Avoid inefficient regex in diff-refine-hunk (Bug#25410)

	* lisp/vc/diff-mode.el (diff--forward-while-leading-char): New function.
	(diff-refine-hunk): Use it instead of trying to match multiple lines
	with a single lines.

2017-01-18  Eli Zaretskii  <eliz@gnu.org>

	Remove lock file when auto-saving into the visited file

	* src/fileio.c (write_region): When auto-saving into the visited
	file, unlock the file whenever we mark the buffer unmodified.
	(Bug#25470)

2017-01-18  Vibhav Pant  <vibhavp@gmail.com>

	* src/bytecode.c: (exec_byte_code) Use hash_lookup for Bswitch

	Fgethash type checks the provided table object, which is unnecessary
	for compiled bytecode.

2017-01-18  Tom Tromey  <tom@tromey.com>

	fix typo in mailcap-mime-extensions

	* lisp/net/mailcap.el (mailcap-mime-extensions): Use "text/x-patch",
	not "test/x-patch".  (Bug#25472)

2017-01-18  Lele Gaifax  <lele@metapensiero.it>  (tiny change)

	Fix typos in flymake.el

	* lisp/progmodes/flymake.el (flymake-check-patch-master-file-buffer):
	Spelling fixes in the doc string.

2017-01-18  Eli Zaretskii  <eliz@gnu.org>

	Fix a bug with signaling a thread that waits for condvar

	* src/thread.c (lisp_mutex_lock_for_thread): New function,
	with all the guts of lisp_mutex_lock.
	(lisp_mutex_lock): Call lisp_mutex_lock_for_thread.
	(condition_wait_callback): Don't call post_acquire_global_lock
	before locking the mutex, as that could cause a signaled thread to
	exit prematurely, because the condvar's mutex is recorded to be
	not owned by any thread, and with-mutex wants to unlock it as part
	of unwinding the stack in response to the signal.

2017-01-18  Eli Zaretskii  <eliz@gnu.org>

	Rudimentary error handling for non-main threads

	* src/thread.c (last_thread_error): New static variable.
	(syms_of_threads): Staticpro it.
	(record_thread_error, Fthread_last_error): New functions.
	(syms_of_threads): Defsubr Fthread_last_error.

	* doc/lispref/threads.texi (Basic Thread Functions): Document
	thread-last-error.

	* test/src/thread-tests.el (thread-errors, thread-signal-early)
	(threads-condvar-wait): Test the values returned by
	thread-last-error.

2017-01-17  Tom Tromey  <tom@tromey.com>

	Add info-lookup help for gdb-script-mode

	Bug#25464:
	* lisp/info-look.el (info-lookup-guess-gdb-script-symbol): New
	function.
	Add help for gdb-script-mode.

2017-01-17  Tom Tromey  <tom@tromey.com>

	Treat ":root" as a css-selector

	* lisp/textmodes/css-mode.el (css--font-lock-keywords): Recognize bare
	":root" as selector.

2017-01-17  Tom Tromey  <tom@tromey.com>

	Fix JS regexp literal syntax propertization in expressions

	Bug#25465:
	* lisp/progmodes/js.el (js-syntax-propertize): Recognize a regexp
	literal after "!", "&", and "|".
	test/lisp/progmodes/js-tests.el (js-mode-regexp-syntax): New test.

2017-01-17  Glenn Morris  <rgm@gnu.org>

	More NEWS checking for admin.el's set-version

	* admin/admin.el (set-version): Warn if temporary NEWS markup
	still present in release candidates.

2017-01-17  Mark Oteiza  <mvoteiza@udel.edu>

	Mark unused arguments and remove unused variables

	* lisp/play/dunnet.el (dun-mode, dun-die, dun-inven, dun-try-take):
	(dun-dig, dun-type, dun-n, dun-s, dun-e, dun-w, dun-ne, dun-se):
	(dun-nw, dun-sw, dun-up, dun-down, dun-in, dun-out, dun-long):
	(dun-swim, dun-score, dun-flush, dun-piss, dun-sleep, dun-drive):
	(dun-superb, dun-power, dun-unix-parse, dun-bin, dun-fascii):
	(dun-ftpquit, dun-ftphelp, dun-uexit, dun-pwd, dun-dos-parse):
	(dun-dos-invd, dun-dos-spawn, dun-dos-exit, dun-dos-nil):
	(dungeon-nil): Mark arguments as unused.
	(dun-drop, dun-objnum-from-args, dun-get-path, dun-ftp):
	(dun-restore): Remove unused variable.

2017-01-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix auto-save-file-name problem in Tramp on MS Windows

	* lisp/files.el (make-auto-save-file-name): Use `file-remote-p'
	rather than an ange-ftp regexp.

	* lisp/net/tramp.el (tramp-handle-make-auto-save-file-name):
	Fix a problem when running on MS Windows.

	* test/lisp/net/tramp-tests.el (tramp-test31-make-auto-save-file-name):
	Adapt test.

2017-01-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix auto-save-file-name problem in Tramp on MS Windows. Do not merge

	* lisp/net/tramp.el (tramp-handle-make-auto-save-file-name):
	Fix a problem when running on MS Windows.

2017-01-17  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	42614fa Update remaining copyright years with admin.el M-x set-copyright
	f17a006 * lisp/ffap.el (ffap-lax-url): Bump :version after recent cha...

2017-01-17  Mark Oteiza  <mvoteiza@udel.edu>

	Nix some uses of eval

	* lisp/play/dunnet.el: Fix triple negative.
	(dun-doverb): Use funcall instead of eval.
	(dun-echo): Just call dun-mprinc.
	(dun-save-val): Just bind value without eval.

2017-01-17  Tom Tromey  <tom@tromey.com>

	Fix comment in css-mode.el

	* lisp/textmodes/css-mode.el: Remove obsolete comment.

2017-01-16  Vibhav Pant  <vibhavp@gmail.com>

	update branch

2017-01-16  Ian Dunn  <dunni@gnu.org>  (tiny change)

	* lisp/net/eww.el (eww-tag-meta): Handle single quoted URLs (Bug#25445).

2017-01-15  Noam Postavsky  <npostavs@gmail.com>

	Improve ffap-gopher-at-point handling of long lines

	* lisp/ffap.el (ffap-gopher-regexp): Only match the KEY part.  Note
	setting to nil is now supported.
	(ffap--gopher-var-on-line): New function.
	(ffap-gopher-at-point): Use it instead of the old ffap-gopher-regexp
	which could overflow the regexp stack on long lines (Bug#25391).  Use
	`let-alist' instead of calling `set' on local variables.
	* test/lisp/ffap-tests.el (ffap-gopher-at-point): New test.

2017-01-15  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/byte-opt.el: Optimize how tags are checked for use.

	* lisp/emacs-lisp/byte-opt.el: (byte-optimize-lapcode): Return nil instantly on
	  finding the tag in a jump table.

2017-01-15  Vibhav Pant  <vibhavp@gmail.com>

	* lisp/emacs-lisp/bytecomp.el: Add documentation, remove code duplication

2017-01-14  Vibhav Pant  <vibhavp@gmail.com>

	Add new 'switch' byte-code.

	'switch' takes two arguments from the stack: the variable to test, and
	a jump table (implemented as a hash-table with the appropriate :test
	function). By looking up the value of the variable in the hash table,
	the interpreter can jump to the label pointed to by the value, if any.
	This implementation can only be used for `cond' forms of the type
	`(cond ((test x 'foo) 'bar) ...)`, such that the function `test` and
	variable `x` is same for all clauses.

	* lisp/emacs-lisp/bytecomp.el:

	  * Add (byte-compile-cond-valid-obj2-p), (byte-compile-cond-vars),
	    (byte-compile-cond-jump-table-info), (byte-compile-jump-table-add-tag),
	    (byte-compile-cond-jump-table), byte-compile-jump-tables.

	  * Add defcustom `byte-compile-cond-use-jump-table'.

	  * (byte-compile-cond): Use them.

	  * (byte-compile-lapcode): Patch tags present in jump tables, if any.

	* lisp/emacs-lisp//byte-opt.el: (byte-optimize-lapcode): Add checks to
	  some peephole optimizations to prevent them from messing up any code
	  involving `byte-switch`.

	* src/bytecode.c: (exec_byte_code): Add bytecode Bswitch.

2017-01-14  Alan Third  <alan@idiocy.org>

	Fix NS main thread check (bug#25265)

	* src/nsterm.m (ns_read_socket, ns_select): Replace mainThread with
	isMainThread.

2017-01-14  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/sql.el (sql-product-alist): Doc tweak

	`:sqli-comint-func' does not have to be a symbol.

2017-01-14  Alan Mackenzie  <acm@muc.de>

	Correct c-parse-state-get-strategy for moving HERE backward into a macro.

	* lisp/progmodes/cc-engine.el (c-parse-state-get-strategy): When HERE is below
	its previous value, we chose strategy 'forward, and the new HERE is in a
	(different) macro, ensure the returned START-POINT is not above the start of
	the macro.

2017-01-14  Eli Zaretskii  <eliz@gnu.org>

	Include "Date:" in mail messages filed by 'sendmail-send-it'

	* lisp/mail/sendmail.el (mail-do-fcc): Insert a 'Date:' header
	into the filed message.  In the outgoing message, sendmail will
	add the date, but the composed message body doesn't have it.
	(Bug#25436)

2017-01-14  Eli Zaretskii  <eliz@gnu.org>

	* lisp/progmodes/sql.el (sql-product-alist): Doc fix.  (Bug#25440)

2017-01-14  Dmitry Gutov  <dgutov@yandex.ru>

	Remove leftover references to log-view-message-face

	* lisp/vc/vc-bzr.el (vc-bzr-log-view-mode): Use log-view-message.

	* lisp/vc/vc-git.el (vc-git-root-log-format): Same.

	* lisp/vc/vc-hg.el (vc-hg-root-log-format): Same.

2017-01-13  Phillip Lord  <phillip.lord@russet.org.uk>

	Record autoloads till emacs dump

	* admin/ldefs-clean.el (ldefs-clean-up): Record autoloads till emacs dump
	* lisp/ldefs-boot-auto.el (batch-byte-compile): Update

	Previously, autoloads were collected till loaddefs.el was generated as
	part of the build. However, bootstrap-emacs does not load
	loaddefs (rather it is dumped), hence we must record autoloads until the
	full emacs binary is dumped.

2017-01-13  Tom Tromey  <tom@tromey.com>

	Add chained indentation to js-mode

	Bug#20896
	* lisp/progmodes/js.el (js-chain-indent): New variable.
	(js--skip-term-backward, js--skip-terms-backward)
	(js--chained-expression-p): New functions.
	(js--proper-indentation): Call js--chained-expression-p.
	* test/manual/indent/js-chain.js: New file.
	* test/manual/indent/js.js: Add (non-)chained indentation test.

2017-01-13  Tom Tromey  <tom@tromey.com>

	Fix js-mode indentation bug

	Bug#15582:
	* lisp/progmodes/js.el (js--find-newline-backward): New function.
	(js--continued-expression-p): Use it.
	* test/manual/indent/js.js: Add new test.

2017-01-13  Tom Tromey  <tom@tromey.com>

	Fix definition of EMACS in test/manual/indent/Makefile

	* test/manual/indent/Makefile (EMACS): Add one more "..".

2017-01-13  Tom Tromey  <tom@tromey.com>

	Add .jsx to auto-mode-alist

	Bug#25389:
	* lisp/files.el (auto-mode-alist): Add entry for .jsx.

2017-01-13  Tom Tromey  <tom@tromey.com>

	Fix two js-mode filling bugs

	Bug#19399 and Bug#22431:
	* lisp/progmodes/js.el (js-mode): Set comment-line-break-function and
	c-block-comment-start-regexp.
	* test/lisp/progmodes/js-tests.el: New file.

2017-01-13  Eli Zaretskii  <eliz@gnu.org>

	Fix last change

	* test/src/thread-tests.el (threads-condvar-wait): Revert
	previous change.  Make sure no other threads from previous
	tests are running, to avoid interfering with our thread counts.

2017-01-13  Eli Zaretskii  <eliz@gnu.org>

	Fix the new condvar test

	* test/src/thread-tests.el (threads-condvar-wait): Enlarge the
	time we sleep in the main thread to let the other thread
	process notifications.

2017-01-13  Eli Zaretskii  <eliz@gnu.org>

	Minor improvements in the new condvar test

	* test/src/thread-tests.el (threads-test-condvar-wait): Use
	with-mutex instead of emulating it inline.
	(threads-condvar-wait): Improve comments.  Check that the new
	thread is alive before waiting for it to become blocked on the
	conditional variable.

2017-01-13  Eli Zaretskii  <eliz@gnu.org>

	Fix a bug in waiting for condition variable

	* src/thread.c (lisp_mutex_lock, lisp_mutex_unlock)
	(lisp_mutex_unlock_for_wait, condition_wait_callback)
	(condition_notify_callback): Improve commentary.
	(condition_wait_callback): Call post_acquire_global_lock before
	attempting to lock the mutex, to make sure the lock's owner is
	recorded correctly.

	* test/src/thread-tests.el (threads-condvar-wait): New test.

2017-01-13  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of dabbrevs

	* doc/emacs/abbrevs.texi (Dynamic Abbrevs): Add a cross reference
	to "Dabbrev Customization".
	(Dabbrev Customization): More details about the default value of
	dabbrev-abbrev-char-regexp and use cases when it might not be good
	enough.  (Bug#25432)

2017-01-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	Fix last change of dd80ee6 (was: mm-uu.el: Don't dissect patch part)

2017-01-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	mm-uu.el: Don't dissect patch part

	This fixes a bug that the patch part is broken in the article
	<87inpjzhpb.fsf@users.sourceforge.net> in the bug-gnu-emacs list.

	* lisp/gnus/mm-uu.el (mm-uu-dissect-text-parts):
	Don't dissect patch part.

2017-01-13  Dmitry Lazurkin  <dilaz03@gmail.com>

	Fix extracting async def type and name in python mode imenu

	* lisp/progmodes/python.el (python-imenu--get-defun-type-name):
	New function.
	(python-imenu--build-tree): Use python-imenu--get-defun-type-name for
	extract async or simple def type and name at current
	position (Bug#24820).
	* test/lisp/progmodes/python-tests.el (python-imenu-create-index-1):
	(python-imenu-create-flat-index-1): Add async def's.

2017-01-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	Remove garbage from Content-Transfer-Encoding value (bug#25420)

	* lisp/mail/ietf-drums.el (ietf-drums-strip-cte): New function.
	(ietf-drums-remove-garbage): New function.
	(ietf-drums-remove-whitespace): Remove CR as well.

	* lisp/mail/mail-parse.el (mail-header-strip-cte):
	Alias to ietf-drums-strip-cte.

	* lisp/gnus/gnus-art.el (article-decode-charset):
	* lisp/gnus/gnus-sum.el (gnus-summary-enter-digest-group):
	* lisp/gnus/mm-decode.el (mm-dissect-buffer):
	* lisp/gnus/nndoc.el (nndoc-decode-content-transfer-encoding)
	(nndoc-rfc822-forward-generate-article):
	* lisp/mh-e/mh-mime.el (mh-decode-message-body):
	Replace mail-header-strip with mail-header-strip-cte.

2017-01-13  Paul Eggert  <eggert@cs.ucla.edu>

	Restore behavior of ‘./autogen.sh autoconf git’

	* autogen.sh: Do both autoconf and git setup when invoked
	as ‘./autogen.sh autoconf git’.  Avoid unnecessary newline in chatter.
	Mention new --no-check option in usage message.  (Bug#25359)

2017-01-12  Glenn Morris  <rgm@gnu.org>

	* autogen.sh: Simplify argument parsing.

2017-01-12  Noam Postavsky  <npostavs@gmail.com>

	Clarify that easy-menu-add is a nop (Bug#25382)

	* lisp/emacs-lisp/easymenu.el (easy-menu-add): Make it into an alias of
	`ignore', like `easy-menu-remove'.

2017-01-12  Glenn Morris  <rgm@gnu.org>

	* lisp/textmodes/rst.el (rst-package-emacs-version-alist): Fix entry.

2017-01-11  Glenn Morris  <rgm@gnu.org>

	* autogen.sh: Add --no-check option.  (Bug#25359)

2017-01-11  Glenn Morris  <rgm@gnu.org>

	Convert some network test failures to skipping

	These tests intermittently fail on hydra.nixos.org for unclear
	reasons related to starting the external process.
	This isn't an Emacs issue, and the failures cause noise on
	the emacs-buildstatus list.  (Bug#24503)
	* test/lisp/net/network-stream-tests.el (echo-server-nowait)
	(connect-to-tls-ipv4-nowait): Skip rather than fail if the
	external process fails to start properly.

2017-01-11  Eli Zaretskii  <eliz@gnu.org>

	Revert "Add DNS keywords and remove duplications"

	This reverts commit 1cb9aa5b14867983d0013a61709b4d0af18364ff.

2017-01-11  Alexander Kuleshov  <kuleshovmail@gmail.com>

	Add DNS keywords and remove duplications

	* lisp/textmodes/dns-mode.el (dns-mode-types): Add two TLSA and
	NSEC" DNS related keywords and remove duplication of "NSAP".

2017-01-11  Alexander Kuleshov  <kuleshovmail@gmail.com>

	Add DNS keywords and remove duplications

	* lisp/textmodes/dns-mode.el (dns-mode-types): Add two TLSA and
	NSEC" DNS related keywords and remove duplication of "NSAP".

2017-01-11  Alan Mackenzie  <acm@muc.de>

	Handle syntactic WS cache properties more accurately at buffer changes.

	This fixes bug #25362.

	* lisp/progmodes/cc-engine.el (c-sws-lit-type, c-sws-lit-limits)
	(c-invalidate-sws-region-before, c-invalidate-sws-region-after-del)
	(c-invalidate-sws-region-after-ins): New variables and functions.
	(c-invalidate-sws-region-after): Change from a defsubst to a defun.
	Also pass
	it the standard OLD-LEN argument.  Call both
	c-invalidate-sws-region-after-{ins,del} to check for "dangerous" WS
	cache
	properties.

	* lisp/progmodes/cc-langs.el (c-block-comment-ender-regexp): New language
	variable.

	* lisp/progmodes/cc-mode.el (c-before-change): Call
	c-invalidate-sws-region-before.
	(c-after-change): Pass old-len to c-invalidate-sws-region-after.

2017-01-11  Michael Albinus  <michael.albinus@gmx.de>

	Support stat 8.26 in Tramp

	* lisp/net/tramp-sh.el (tramp-get-remote-stat): Use QUOTING_STYLE
	environment variable of newer coreutils.  (Bug#23422)

2017-01-10  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of coding-systems

	* doc/lispref/nonascii.texi (Coding System Basics): Mention
	'prefer-utf-8'.  Index it and 'undecided'.
	(Encoding and I/O): Fix a typo.
	(User-Chosen Coding Systems): Improve the documentation of
	ACCEPT-DEFAULT-P argument to select-safe-coding-system.  Document
	select-safe-coding-system-function.
	(Specifying Coding Systems): Document coding-system-require-warning.

2017-01-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2017-01-09 maint: time stamp -> timestamp
	2017-01-07 stdioext: Port to Minix 3.2 and newer
	2017-01-06 glob, intprops, xalloc: work around Clang bug
	2017-01-02 revert copyright-year change to synced files
	* doc/misc/texinfo.tex, lib/fpending.c, lib/intprops.h, lib/mktime.c:
	* lib/stat-time.h, lib/stdio-impl.h, lib/time.in.h, lib/timespec.h:
	* lib/utimens.c, lib/xalloc-oversized.h:
	Copy from gnulib.

2017-01-10  Eli Zaretskii  <eliz@gnu.org>

	Don't use unsafe encoding for the bookmark file

	* lisp/bookmark.el (bookmark-write-file): Handle the case when the
	explicitly specified encoding of the bookmark file cannot encode the
	additional bookmarks just added.  (Bug#25365)

2017-01-09  Eli Zaretskii  <eliz@gnu.org>

	Improve definition of 'variable-pitch' face on MS-Windows

	* lisp/faces.el (variable-pitch): Don't specify too many
	attributes of the font, otherwise faces that request different
	weight or slant or size will not get them.

2017-01-09  Eli Zaretskii  <eliz@gnu.org>

	Fix an error message in python.el

	* lisp/progmodes/python.el (python-shell-get-process-or-error):
	Don't repeat the same key binding twice.  (Bug#25405)

2017-01-09  Phillip Lord  <phillip.lord@russet.org.uk>

	Remove unused ldefs-boot.el

	 * lisp/ldefs-boot.el: Remove

	This file was not removed as reported in c27b645956a11, but accidentally
	left.

2017-01-09  Noam Postavsky  <npostavs@gmail.com>
	    Eli Zaretskii  <eliz@gnu.org>

	Use expanded stack during regex matches

	While the stack is increased in main(), to allow the regex stack
	allocation to use alloca we also need to modify regex.c to actually take
	advantage of the increased stack, and not limit stack allocations to
	SAFE_ALLOCA bytes.

	* src/regex.c (MATCH_MAY_ALLOCATE): Remove obsolete comment about
	allocations in signal handlers which no longer happens and correct
	description about when and why MATCH_MAY_ALLOCATE should be defined.
	(emacs_re_safe_alloca): New variable.
	(REGEX_USE_SAFE_ALLOCA): Use it as the limit of stack allocation instead
	of MAX_ALLOCA.
	(emacs_re_max_failures): Rename from `re_max_failures' to avoid
	confusion with glibc's `re_max_failures'.
	* src/emacs.c (main): Increase the amount of fixed 'extra' bytes we add
	to the stack.  Instead of changing emacs_re_max_failures based on the
	new stack size, just change emacs_re_safe_alloca; emacs_re_max_failures
	remains constant regardless, since if we run out stack space SAFE_ALLOCA
	will fall back to heap allocation.

2017-01-09  Noam Postavsky  <npostavs@gmail.com>

	Fix computation of regex stack limit

	The regex stack limit was being computed as the number of stack entries,
	whereas it was being compared with the current size as measured in
	bytes.  This could cause indefinite looping when nearing the stack limit
	if re_max_failures happened not to be a multiple of sizeof
	fail_stack_elt_t (Bug #24751).

	* src/regex.c (GROW_FAIL_STACK): Compute both current stack size and
	limit as numbers of stack entries.

2017-01-08  Alan Third  <alan@idiocy.org>

	Remove apploopnr

	* src/nsterm.m (ns_select, ns_read_socket): Remove apploopnr and only
	allow app loop to run in main thread.

2017-01-08  Glenn Morris  <rgm@gnu.org>

	Remove unused configure output variable

	* configure.ac (GNULIB_MK):
	* Makefile.in (gnulib_mk): Remove, no longer used.

2017-01-08  Glenn Morris  <rgm@gnu.org>

	Fix automake dependencies

	* Makefile.in (AUTOMAKE_INPUTS): Add nt/gnulib.mk.  (Bug#25372)
	All platforms need this file to exist.

2017-01-08  Paul Eggert  <eggert@cs.ucla.edu>

	Remove unnecessary blankp code

	* src/character.c (blankp): Remove redundant code that slows Emacs
	down a bit.  The caller already does the test.

2017-01-08  Stefan Merten  <stefan@merten-home.de>

	* lisp/textmodes/rst.el: Fix rst-forward-indented-block.

	* lisp/textmodes/rst.el (rst-cvs-header, rst-svn-rev)
	(rst-svn-timestamp)
	(rst-official-version, rst-official-cvs-rev)
	(rst-package-emacs-version-alist): Maintain version numbers.
	(rst-forward-indented-block): Fix. Start searching at next
	line again. Fixes fontification of comments continuing on the
	same line they started.

2017-01-08  Paul Eggert  <eggert@cs.ucla.edu>

	Remove @SET_MAKE@ from manually-maintained files

	Emacs now assumes GNU Make, so @SET_MAKE@ is no longer needed.
	* Makefile.in, lwlib/Makefile.in, nextstep/Makefile.in:
	* src/Makefile.in: Remove @SET_MAKE@.

2017-01-07  Michael Albinus  <michael.albinus@gmx.de>

	Fix a problem with `start-file-process' in Tramp

	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	`start-file-process' shall work when `non-essential' is
	non-nil, but there is already an established connection.
	<https://github.com/company-mode/company-mode/issues/462>

2017-01-07  Rolf Ade  <rolf@pointsman.de>  (tiny change)

	Fix selecting SQLite database files with sql-mode (Bug#23566)

	* lisp/progmodes/sql.el (sql-sqlite-login-params): Allow any name as
	SQLite database file name, by default.
	(sql-get-login-ext): Fixed read-file-name arguments to provide
	path completion even if a database name pattern is customized and to
	allow creation of new SQLite database files.

2017-01-07  Noam Postavsky  <npostavs@gmail.com>

	Clarify major mode switching

	* doc/emacs/modes.texi (Major Modes):
	* doc/lispref/modes.texi (Modes, Major Modes): Explictly say that each
	buffer has exactly one major mode and can't be "turned off", only
	switched away from (Bug#25357).

2017-01-07  Noam Postavsky  <npostavs@gmail.com>

	Add helpful comment to compile-command's docstring

	* lisp/progmodes/compile.el (compile-command): Mention trailing space in
	docstring (Bug#25337).

2017-01-07  Eli Zaretskii  <eliz@gnu.org>

	Specify encoding of the bookmark file

	* lisp/bookmark.el (bookmark-insert-file-format-version-stamp):
	Accept an argument CODING and include a 'coding:' cookie in the
	bookmark file preamble.
	(bookmark-upgrade-file-format-from-0): Call
	'bookmark-insert-file-format-version-stamp' with the file buffer's
	encoding, as detected when it was read.
	(bookmark-file-coding-system): New variable.
	(bookmark-load): Set bookmark-file-coding-system to the encoding
	of the loaded file.
	(bookmark-write-file): Bind coding-system-for-write to either the
	user setting via "C-x RET c" or to the existing file encoding,
	defaulting to 'utf-8-emacs'.  Update the value of
	bookmark-file-coding-system.  (Bug#25365)

2017-01-07  Eli Zaretskii  <eliz@gnu.org>

	Avoid infloop in 'ispell-region'

	* lisp/textmodes/ispell.el (ispell-begin-skip-region-regexp):
	Protect against 'ispell-skip-region-alist' being nil.  Reported by
	Ernest Adrogué <nfdisco@gmail.com>, see
	https://lists.gnu.org/r/help-gnu-emacs/2017-01/msg00007.html.

2017-01-06  Philipp Stephani  <phst@google.com>

	Add support for Unicode whitespace in [:blank:]

	See Bug#25366.

	* src/character.c (blankp): New function for checking Unicode
	horizontal whitespace.
	* src/regex.c (ISBLANK): Use 'blankp' for non-ASCII horizontal
	whitespace.
	(BIT_BLANK): New bit for range table.
	(re_wctype_to_bit, execute_charset): Use it.
	* test/lisp/subr-tests.el (subr-tests--string-match-p--blank): Add
	unit test for [:blank:] character class.
	* test/src/regex-tests.el (test): Adapt unit test.
	* doc/lispref/searching.texi (Char Classes): Document new Unicode
	behavior for [:blank:].

2017-01-06  Eli Zaretskii  <eliz@gnu.org>

	Fix ':version' of 'select-enable-primary'

	* lisp/select.el (select-enable-primary): Fix a typo in
	':version'.  (Bug#25375)

2017-01-06  Stefan Monnier  <monnier@iro.umontreal.ca>

	(feedmail-deduce-address-list): Avoid add-to-list on local variables.

	Author:

	* lisp/mail/feedmail.el (feedmail-deduce-address-list):
	Avoid add-to-list on local variables.

2017-01-06  Noam Postavsky  <npostavs@gmail.com>

	Fix isearch handling of C-u C-u...

	* lisp/isearch.el: Add `isearch-scroll' property to
	universal-argument-more so that `isearch-allow-scroll' will apply to it
	as well.
	(isearch-pre-command-hook): Let `isearch-allow-prefix' apply to
	`universal-argument-more' as well (Bug#25302).

2017-01-05  Paul Eggert  <eggert@cs.ucla.edu>

	Shorten autogen.sh script

	* autogen.sh: Use a shorter script, as some 'sed' implementations
	mishandle long scripts.

2017-01-05  Eli Zaretskii  <eliz@gnu.org>

	Yet another fix for autogen.sh

	* autogen.sh (gnulib.mk): Make the Sed script more portable.

	* nt/Makefile.in (${srcdir}/gnulib.mk): Adapt the Sed command to
	the changes in autogen.sh.

2017-01-05  Eli Zaretskii  <eliz@gnu.org>

	* autogen.sh (gnulib.mk): Another attempt to fix macOS build.

2017-01-05  Eli Zaretskii  <eliz@gnu.org>

	Fix dependencies of nt/gnulib.mk

	* Makefile.in ($(srcdir)/nt/gnulib.mk): Avoid circular dependency
	of nt/gnulib.mk on lib/Makefile.in.

2017-01-05  Eli Zaretskii  <eliz@gnu.org>

	Unbreak macOS build

	* autogen.sh (gnulib.mk): Don't use non-portable extensions of GNU
	Sed.

2017-01-05  Johan Claesson  <johanclaesson@bredband.net>  (tiny change)

	Fix term.el handling of ^Z-sequences spanning chunks

	Bash will after each command send ?\032 and the current directory "/tmp"
	to inform term.el.  Bash output is buffered in 4096 bytes chunks.  If a
	command outputs roughly 4096 bytes then the end of the first chunk will
	be "/tm" (Bug#13350).

	* lisp/term.el (term-emulate-terminal): Change the regexp to find the
	end of the ?\032 sequence to use \n instead of $, the latter can match
	end of string as well.

2017-01-05  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in mb-depth.el

	* lisp/mb-depth.el: Turn on lexical-binding.
	(minibuffer-depth-setup): Bind things used multiple times.

2017-01-04  Alan Third  <alan@idiocy.org>

	Revert "Rework NS event handling (bug#25265)"

	This reverts commit e0e5b0f4a4ce1d19ee0240c514dedd873d4165dc.

2017-01-04  Glenn Morris  <rgm@gnu.org>

	Update remaining copyright years with admin.el M-x set-copyright

	* etc/refcards/ru-refcard.tex (cyear): Set to 2017.

2017-01-04  Glenn Morris  <rgm@gnu.org>

	* lisp/ffap.el (ffap-lax-url): Bump :version after recent change.

2017-01-04  Paul Eggert  <eggert@cs.ucla.edu>

	Port recent autogen.sh changes to Darwin

	Problem reported by Sam Steingold (Bug#25347).
	* autogen.sh: Don't assume 'sed -f-' reads a script from stdin, as
	POSIX does not require it and it does not work on Darwin.

2017-01-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	Avoid add-to-list on local variables

	* lisp/gnus/nnir.el: Use lexical-binding and cl-lib.
	(nnir-retrieve-headers): Use pcase.
	(nnir-search-thread): Avoid add-to-list on local variables.

	* lisp/gnus/smime.el: Use lexical-binding and cl-lib.
	(smime-verify-region): Avoid add-to-list on local variables.

	* lisp/mail/undigest.el: Use lexical-binding and cl-lib.
	(rmail-digest-parse-mime, rmail-digest-rfc1153)
	(rmail-digest-parse-rfc934): Avoid add-to-list on local variable.

	* lisp/net/ldap.el (ldap-search): Move init into declaration.

	* lisp/net/newst-backend.el (newsticker--cache-add):
	Avoid add-to-list on local variables; Simplify code with `assq'.

	* lisp/net/zeroconf.el: Use lexical-binding and cl-lib.
	(dbus-debug): Remove declaration, unused.
	(zeroconf-service-add-hook, zeroconf-service-remove-hook)
	(zeroconf-service-browser-handler, zeroconf-publish-service):
	Avoid add-to-list and *-hook on local variables.

	* lisp/org/org-archive.el (org-all-archive-files):
	* lisp/org/org-agenda.el (org-agenda-get-restriction-and-command):
	Avoid add-to-list on local variables.

	* lisp/org/ox-publish.el (org-publish--run-functions): New function.
	(org-publish-projects): Use it to avoid run-hooks on a local variable.
	(org-publish-cache-file-needs-publishing): Avoid add-to-list on
	local variables.

	* lisp/progmodes/ada-prj.el: Use setq instead of (set '...).
	(ada-prj-load-from-file): Avoid add-to-list on local variables.

	* lisp/progmodes/ada-xref.el (ada-initialize-runtime-library): Simplify.
	(ada-gnat-parse-gpr, ada-parse-prj-file-1)
	(ada-xref-find-in-modified-ali): Avoid add-to-list on local variables.

	* lisp/progmodes/idlw-shell.el (idlwave-shell-update-bp-overlays):
	Avoid add-to-list on local variables.

2017-01-04  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in md4.el

	* lisp/md4.el: Turn on lexical-binding.
	* test/lisp/md4-tests.el: New file.

2017-01-03  Stefan Merten  <stefan@merten-home.de>

	Lots of refactorings and a few minor improvements.

	User visible improvements and changes:
	* Improve and debug `rst-forward-section` and `rst-backward-section`.
	* Auto-enumeration may be used with all styles for list insertion.
	* Improve and debug `rst-toc-insert`.
	* Adapt change in Emacs to use customization group `text` instead of `wp`.
	* Bind `n` and `p` in `rst-toc-mode`.
	* `z` in `toc-mode` returns to the previous window configuration.
	* Require Emacs version >= 24.1.

	Lots of refactorings including:
	* Silence byte compiler.
	* Use lexical binding.
	* Use `cl-lib`.
	* Add tests and raise test coverage.

2017-01-03  Stefan Monnier  <monnier@iro.umontreal.ca>

	(cl-defstruct): Improve error message for slots w/o value (bug#25312)

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Don't signal an error but
	emit a warning for those coders who forgot to put a default value in
	their slot.

2017-01-03  Philipp Stephani  <p.stephani2@gmail.com>

	Small patch for ffap.el

	* lisp/ffap.el (ffap-alist): Document that ffap sets the match data
	while walking 'ffap-alist'.

2017-01-03  Eli Zaretskii  <eliz@gnu.org>

	Generate nt/gnulib.mk from lib/gnulib.mk

	This was proposed by Paul Eggert <eggert@cs.ucla.edu>,
	with the purpose of avoiding manual maintenance of
	nt/gnulib.mk.

	* nt/gnulib-modules-to-delete.cfg: New file.
	* nt/Makefile.in (AM_V_GEN, am__v_GEN_, am__v_GEN_0)
	(am__v_GEN_1): New variables.
	(${srcdir}/gnulib.mk): Rules to generate gnulib.mk from
	lib/gnulib.mk and list of modules in gnulib-modules-to-delete.cfg.

	* make-dist (nt): Add gnulib-modules-to-delete.cfg to the list of
	files to link.
	* configure.ac (GNULIB_MK): Compute the value according to $opsys.
	* autogen.sh: Create nt/gnulib.mk if it doesn't exist, before
	running autoreconf.
	* Makefile.in (gnulib_mk): New variable.
	($(srcdir)/nt/gnulib.mk): Rule to produce it.
	(AUTOMAKE_INPUTS): Use $(gnulib_mk) instead of a literal file
	name.
	* .gitignore: Add nt/gnulib.mk.

	* src/w32.c (acl_errno_valid): Implement it here, as we no longer
	build the acl-permissions module from Gnulib.

2017-01-03  Noam Postavsky  <npostavs@gmail.com>

	Handle multibyte chars spanning chunks in term.el

	* lisp/term.el (term-terminal-undecoded-bytes): New variable.
	(term-mode): Make it buffer local.  Don't make `term-terminal-parameter'
	buffer-local twice.
	(term-emulate-terminal): Check for bytes of incompletely decoded
	characters, and save them until the next call when they can be fully
	decoded (Bug#25288).

2017-01-03  Michael Albinus  <michael.albinus@gmx.de>

	Finish work on filenotify-tests.el

	* test/lisp/filenotify-tests.el (file-notify--test-monitors):
	New variable.
	(file-notify--test-cleanup, file-notify--test-monitor): Use it.
	(file-notify--test-read-event, file-notify-test02-events)
	(file-notify-test04-file-validity): Handle "gvfs-monitor-dir.exe".
	(file-notify-test03-autorevert)
	(file-notify-test08-watched-file-in-watched-dir):
	Set `file-notify--test-desc' for proper work of
	`file-notify--test-monitor'.  (Bug#21804)

2017-01-02  Michael Albinus  <michael.albinus@gmx.de>

	Check also for "gvfs-monitor-dir.exe" in Tramp

	* lisp/net/tramp-sh.el (tramp-get-remote-gvfs-monitor-dir): Check also
	for "gvfs-monitor-dir.exe".

2017-01-02  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation --without-x

	* src/composite.c (autocmp_chars) [HAVE_WINDOW_SYSTEM]: Call
	font_range only if it is compiled in.  (Bug#25334)

2017-01-02  Sašo Živanović  <saso.zivanovic@guest.arnes.si>

	Fix RefTeX to show table of contents for dtx files (tiny change)

	* lisp/textmodes/reftex.el (reftex-compile-variables): Change the
	  section regexp so that it accepts lines starting with the comment
	  character. (tiny change)
	* lisp/textmodes/reftex-parse.el (reftex-parse-from-file): Filter
	  gathered toc entries, accepting a commented entry if and only if the
	  source file is a ".dtx" file. (tiny change)

2017-01-02  Paul Eggert  <eggert@cs.ucla.edu>

	Remove mistakenly-added files

	Problem reported by Glenn Morris in:
	https://lists.gnu.org/r/emacs-devel/2017-01/msg00008.html
	* lisp/gnus/gnus-ems.el, lisp/gnus/gnus-sync.el:
	* lisp/gnus/messcompat.el, lisp/nxml/nxml-glyph.el:
	* lisp/nxml/nxml-uchnm.el, lisp/obsolete/awk-mode.el:
	* lisp/obsolete/iso-acc.el, lisp/obsolete/iso-insert.el:
	* lisp/obsolete/iso-swed.el, lisp/obsolete/resume.el:
	* lisp/obsolete/scribe.el, lisp/obsolete/spell.el:
	* lisp/obsolete/swedish.el, lisp/obsolete/sym-comp.el:
	Remove files that were added by mistake during a merge.

2017-01-01  Noam Postavsky  <npostavs@gmail.com>

	Warn about incomplete untarring of link files

	The current tar-mode doesn't really support unpacking symlinks, it
	simply creates an empty file of the same name.

	* lisp/tar-mode.el (tar--describe-as-link): New function extracted from
	`tar--check-descriptor'.
	(tar-untar-buffer): Use it to warn about imperfectly untarred link
	files.

2017-01-01  Noam Postavsky  <npostavs@gmail.com>

	Remove sh-mode's skeleton-end-hook

	* lisp/progmodes/sh-script.el (sh-mode): Remove local setting of
	`skeleton-end-hook', `skeleton-insert' already does `newline-and-indent'
	and also respects `skeleton-end-newline' (Bug#16634).

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	* nt/gnulib.mk (stdint.h): Update to match lib/gnulib.mk here.

2017-01-01  Mark Oteiza  <mvoteiza@udel.edu>

	Add term/tmux.el

	Since tmux version 2.1, new tmux terminfos are shipped due to oddities
	with xterm and screen terminfos.  This is simply a duplication of
	term/screen.el with screen -> tmux.
	* lisp/term/tmux.el: New file.

2017-01-01  Philipp Stephani  <phst@google.com>

	Fix encoding of JSON surrogate pairs

	JSON requires that such pairs be treated as UTF-16 surrogate pairs, not
	individual code points; cf. Bug #24784.

	* lisp/json.el (json-read-escaped-char): Fix decoding of surrogate
	pairs.
	(json--decode-utf-16-surrogates): New defun.

	* test/lisp/json-tests.el (test-json-read-string): Add test for
	surrogate pairs.

2017-01-01  Michael Albinus  <michael.albinus@gmx.de>

	Remove tramp-gw.el, which was synced from emacs-25 by accident

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Do not use Gnulib’s m4/wint_t.m4.

	* admin/merge-gnulib: Remove m4/wint_t.m4 when merging.
	Fix typo so that warn-on-use.m4 is removed too.
	* configure.ac (gt_TYPE_WINT_T): New macro, replacing Gnulib’s.
	* m4/wint_t.m4: Remove.

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib, continued

	* m4/wint_t.m4: New file, copied from gnulib.

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Update copyright year to 2017 in master

	Run admin/update-copyright in the master branch.  This fixes files
	that were not already fixed in the emacs-25 branch before it was
	merged here.

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Remove test/automated detritus from merge

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2016-12-19 stdint: Fix WINT_MAX to match wint_t on mingw
	2016-12-18 getopt: Fix link error for users of getopt() in <unistd.h>
	2016-12-17 getlogin: Port to newer mingw
	2016-12-17 stdint: Fix WINT_MAX to match wint_t on MSVC
	2016-12-17 Avoid redefinition errors on MSVC
	* lib/getopt.in.h, lib/stdint.in.h, lib/stdio.in.h, lib/unistd.in.h:
	* m4/stdint.m4, m4/unistd_h.m4:
	Copy from gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	Plus, this commit updates the indenting on copyright notices to
	match that of gnulib.

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	2e2a806 Fix copyright years by hand
	5badc81 Update copyright year to 2017

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	665be69 ; Update ChangeLog.2 and AUTHORS files

	# Conflicts:
	#	etc/AUTHORS

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	697167b ; Improve wording of previous change in variables.texi
	d7973e8 Document 'default-toplevel-value' and 'set-default-toplevel-v...
	8b71826 Don't modify minibuffer variables globally
	5b5e036 Revert to pre-25.1 behavior in ffap
	19994a1 * lisp/ffap.el: Fix obsolete comment referencing ffap-bug.
	3ace730 Attempt to fix 64-bit AIX build
	f69bd79 Clarify usage of 'ediff-cleanup-hook' (Bug#24675)
	c04ac8a Document that variable binding order is unspecified
	272554a * lisp/desktop.el (desktop-buffers-not-to-save): Doc fix.
	08de101 Fix M-x hints on Mac port
	86a297a Work around reporting a dpi change in apply_xft_settings
	cf1f985 ; lisp/skeleton.el (skeleton-insert): Fix typo in last change
	9e1209d Amend the version number of CC Mode 5.33 -> 5.32.99.  Don't m...
	88cdf14 Improve skeleton docstrings

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	4179238 Improve documentation of 'w32-scroll-lock-modifier'

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9adb101 Document 'describe-fontset'
	229315c ; Add missing symbol quoting.
	3d94931 Repair desktop restoration on text terminals
	43022f9 Ignore forward-sexp-function in js-mode indentation code
	b19fb49 Improve documentation of 'define-coding-system'
	467768f Fix Bug#25162
	6db78ae Fix a typo in define-abbrev-table
	5f7d906 Bump makeinfo requirement from 4.7 to 4.13
	442e2f6 Fixes related to select-enable-clipboard
	e4ac450 Define struct predicate before acccesors
	08decbd Doc fix for vc-git
	5531e75 Further improve make-dist checking
	953bf67 Improve previous make-dist change
	129645a Make make-dist --snapshot do some sanity checks

	# Conflicts:
	#	lisp/menu-bar.el

2017-01-01  Alan Mackenzie  <acm@muc.de>

	Give eval-and-compile a correct edebug spec.  Fixes bug #16184 properly.

	* lisp/emacs-lisp/edebug.el (edebug_offset_indices): Revert abortive commit
	from Thu Dec 29 09:22:36 2016 +0000 which didn't really fix the bug.

	* lisp/emacs-lisp/byte-run.el (eval-and-compile): Change the edebug spec from
	t to (&rest def-form).

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix copyright years by hand

	These are dates that admin/update-copyright did not update, or
	updated incorrectly.

2017-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	Update copyright year to 2017

	Run admin/update-copyright.

2016-12-31  Paul Eggert  <eggert@cs.ucla.edu>

	Clarify internal_catch etc.

	The recent change to internal_catch and friends relied on some
	confusion I introduced to the code in 2013.  Attempt to fix
	the confusion by clarifying the code instead.  This saves an
	instruction and a load dependency in the typical case.
	* src/eval.c (internal_catch, internal_condition_case)
	(internal_condition_case_1, internal_condition_case_2)
	(internal_condition_case_n): Undo the previous change.  Instead,
	use use ‘c’ rather than ‘handlerlist’ in the typical case.
	Also, use ‘eassert’ rather than ‘clobbered_eassert’ when possible.

2016-12-31  Ken Brown  <kbrown@cornell.edu>

	Further improve filenotify-tests.el

	* test/lisp/filenotify-tests.el
	(file-notify--test-read-event): Adapt to file monitors of type
	GFamFileMonitor, which occur on Cygwin.
	(file-notify--test-monitor): Update doc string.

2016-12-31  Paul Eggert  <eggert@cs.ucla.edu>

	* src/xdisp.c (string_from_display_spec): Simplify.

2016-12-31  Alan Third  <alan@idiocy.org>

	Rework NS event handling (bug#25265)

	* src/nsterm.m (unwind_apploopnr): Remove.
	(ns_read_socket): Remove references to apploopnr.  Make processing the
	NS event loop conditional on being in the main thread.
	(ns_select): Remove references to apploopnr.  Remove all fd_handler
	related stuff.  Check if there are events waiting on the NS event
	queue rather than running the event loop.  Remove unused variables and
	code.
	(fd_handler): Remove.
	(ns_term_init): Remove creation of fd_handler thread.
	(hold_event, EmacsApp:sendEvent, EmacsView:mouseMoved,
	EmacsView:windowDidExpose): Remove send_appdefined.
	(ns_send_appdefined): Always check the event queue for
	applicationDefined events rather than relying on send_appdefined var.
	* src/nsterm.h: Remove reference to fd_handler method.

2016-12-31  Philipp Stephani  <phst@google.com>

	Checkdoc: use syntax functions instead of regex

	In checkdoc.el, get rid of the error-prone regex to find definition
	forms, and use existing syntax-based navigation functions instead.
	This fixes a corner case with one-argument `defvar' forms.

	* lisp/emacs-lisp/checkdoc.el (checkdoc--next-docstring): New function.
	(checkdoc-next-docstring, checkdoc-defun): Use it.
	* test/lisp/emacs-lisp/checkdoc-tests.el (checkdoc-tests--next-docstring):
	Add unit test.

2016-12-31  Eli Zaretskii  <eliz@gnu.org>

	Don't define NOMINMAX on MS-Windows

	* src/callproc.c (NOMINMAX) [WINDOWSNT]: Don't define.  This is no
	longer needed with the current sources and MinGW headers, while
	defining NOMINMAX causes an annoying compiler warning.

2016-12-31  Chris Gregory  <czipperz@gmail.com>  (tiny change)

	Simplify code in eval.c that calls 'setjmp'

	* src/eval.c (internal_catch, internal_condition_case)
	(internal_condition_case_1, internal_condition_case_2)
	(internal_condition_case_n): Factor out the common tail of the
	functions.

2016-12-31  Chris Gregory  <czipperz@gmail.com>  (tiny change)

	Simplify code in 'string_from_display_spec'

	* src/xdisp.c (string_from_display_spec): Eliminate a redundant
	test before the loop.

2016-12-31  Eli Zaretskii  <eliz@gnu.org>

	Serialize random number generation on MS-Windows

	* src/w32.c (rand_as183): New function.
	(random): Use it instead of MS runtime's 'rand'.  This avoids
	producing separate and identical random series in each Lisp
	thread.
	(srandom): Modify to supply 3 seed values to 'rand_as183'.

2016-12-31  Michael Albinus  <michael.albinus@gmx.de>

	* src/gfilenotify.c (Fgfile_monitor_name): Return interned symbol.

2016-12-30  Ken Raeburn  <raeburn@raeburn.org>

	Don't call xg_select for a NextStep build.

	NextStep builds use glib but don't use xg_select.

	* src/process.c (wait_reading_process_output): Don't call xg_select
	for a NextStep build.

2016-12-30  Ken Raeburn  <raeburn@raeburn.org>

	Increase the obarray size.

	In a typical GNU/Linux/X11 build, we wind up with over 15k symbols by
	the time we've started.  The old obarray size ensured an average chain
	length of 10 or more.

	* src/lread.c (OBARRAY_SIZE): Increase to 15121.

2016-12-30  Ken Raeburn  <raeburn@raeburn.org>

	Initialize thread support for Xlib.

	* src/xterm.c (x_initialize) [THREADS_ENABLED]: Call XInitThreads
	before doing anything else with X.

2016-12-30  Paul Eggert  <eggert@cs.ucla.edu>

	Rename primary_thread to main_thread

	This avoids the confusion of using two different phrases "main thread"
	and "primary thread" internally to mean the same thing.  See:
	https://lists.gnu.org/r/emacs-devel/2016-12/msg01142.html
	* src/thread.c (main_thread): Rename from primary_thread,
	since the new name no longer clashes with main_thread_id
	and Emacs internals normally call this the "main thread".
	(init_main_thread): Rename from init_primary_thread.
	(main_thread_p): Rename from primary_thread_p.
	All uses changed.

2016-12-30  Paul Eggert  <eggert@cs.ucla.edu>

	Rename main_thread to main_thread_id and simplify

	* src/emacs-module.c: Include syssignal.h, for main_thread_id.
	[HAVE_PTHREAD]: Do not include pthread.h.
	(main_thread): Remove.  All uses replaced by main_thread_id,
	or by dwMainThreadId on NT.  Since the HAVE_PTHREAD code is now using
	the main_thread_id established by sysdep.c, there is no need for a
	separate copy of the main thread ID here.
	(module_init): Remove.  All uses removed.
	* src/sysdep.c (main_thread_id) [HAVE_PTHREAD]:
	Rename from main_thread.  All uses changed.  Now extern.

2016-12-30  Michael Albinus  <michael.albinus@gmx.de>

	* src/gfilenotify.c (Fgfile_monitor_name): Return a symbol.

2016-12-30  Paul Eggert  <eggert@cs.ucla.edu>

	* src/sysdep.c (deliver_process_signal): Improve comment.

2016-12-30  Alan Mackenzie  <acm@muc.de>

	CC Mode: Fix the fontification of a spuriously recognized enum member.

	The "enum" was in an argument list, but triggered the fontification of a
	following identifier in the function block as though it were in an enum
	declaration.

	* lisp/progmodes/cc-fonts.el (c-font-lock-enum-body): New function.
	(c-basic-matchers-after): Replace the inline stanza for enum elements with a
	call to c-font-lock-enum-body.

	* lisp/progmodes/cc-langs.el (c-enum-clause-introduction-re): New language
	variable.

2016-12-30  Nicolas Petton  <nicolas@petton.fr>

	Bump Emacs version to 25.1.91

	* README:
	* configure.ac:
	* msdos/sed2v2.inp:
	* nt/README.W32: Bump Emacs version.
	* lisp/ldefs-boot.el: Update.

2016-12-30  Eli Zaretskii  <eliz@gnu.org>

	Attempt to fix crashes with threads in GTK builds

	* src/xgselect.c (xg_select): Call pselect via thread_select, not
	directly, to avoid running Lisp (via unblock_input) when more than
	one thread could be running.  (Bug#25247)
	* src/process.c (wait_reading_process_output) [HAVE_GLIB]: Call
	xg_select directly instead of through thread_select.
	* src/xgselect.h (xg_select): Last 2 arguments are no longer
	'const', for consistency with thread_select.

2016-12-30  Arash Esbati  <arash.esbati@gmail.com>

	Add entry for biblatex

	* lisp/textmodes/reftex-vars.el (reftex-cite-format-builtin): Add
	entry for biblatex macros.

2016-12-30  Alan Mackenzie  <acm@muc.de>

	Backport: Remove an ambiguity from defvar's doc string.  Fixes bug #25292.

	The ambiguity was whether INITVALUE is evaluated when it's not going to be
	used to set SYMBOL's value.

	* src/eval.c (defvar): Rewrite a paragraph of the doc string.

	(cherry picked from commit 8295e97f18490a535d1188a3daf0b0fd1bf4fa0d)

2016-12-30  Tino Calancha  <tino.calancha@gmail.com>

	ffap-string-at-point: Limit max length of active region

	Prevents that 'ffap-guesser' waste time checking large strings
	which are likely not valid candidates (Bug#25243).
	* lisp/ffap.el (ffap-max-region-length): New variable.
	(ffap-string-at-point): Use it.
	* test/lisp/ffap-tests.el: New test suite.
	(ffap-tests-25243): Add test for this bug.

2016-12-30  Thien-Thi Nguyen  <ttn@gnu.org>

	last-chance: Also ignore NEWS files + typo fixes

	* admin/last-chance.el: Fix typo in copyright notice.
	(last-chance-uninteresting-regexps): Add entry to match NEWS files.
	(last-chance-cleanup): Fix typo in docstring.

2016-12-29  Mike Kupfer  <mkupfer@alum.berkeley.edu>

	* lisp/mh-e/mh-e.el (mh-fetch-x-image-url): Fix a docstring typo.

2016-12-29  Alan Mackenzie  <acm@muc.de>

	Remove an ambiguity from defvar's doc string.  Fixes bug #25292.

	The ambiguity was whether INITVALUE is evaluated when it's not going to be
	used to set SYMBOL's value.

	* src/eval.c (defvar): Rewrite a paragraph of the doc string.

2016-12-29  Michael Albinus  <michael.albinus@gmx.de>

	Improve filenotify-tests.el

	* src/inotify.c (Finotify_valid_p):
	* src/kqueue.c (Fkqueue_valid_p):
	* src/w32notify.c (Fw32notify_valid_p):
	* src/gfilenotify.c (Fgfile_valid_p): Fix typo in docstring.
	(Fgfile_monitor_name): New defun.
	(syms_of_gfilenotify): Declare Sgfile_monitor_name.

	* test/lisp/filenotify-tests.el	(file-notify--test-read-event):
	New defun, derived from `file-notify--test-read-event-timeout'.
	Replace all calls of `read-event' by this.
	(file-notify--test-timeout): Fix docstring.
	(file-notify--test-monitor): New defun.
	(file-notify--deftest-remote): Do not bind
	`file-notify--test-read-event-timeout' anymore.
	(file-notify-test00-availability): Print also monitor, if existent.
	(file-notify--test-with-events): Add an additional
	`file-notify--test-read-event' call, in order to get it work
	after `file-notify-add-watch'.  Remove special timeout for cygwin.
	(file-notify-test02-events): Make a better check for cygwin.
	(file-notify-test06-many-events): Improve event list for cygwin.
	(file-notify-test08-watched-file-in-watched-dir): Add cygwin case.

2016-12-29  Alan Mackenzie  <acm@muc.de>

	Partially correct fontification of "(b*3)", and the like, in C++ Mode

	This problem is caused by the fundamental ambiguity in C++ between
	argument declarations and initialization clauses.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): If we have an open
	paren preceded by an arithmetic operator, we give this the context nil, not
	'arglist.

	* lisp/progmodes/cc-langs.el (c-arithmetic-operators, c-arithmetic-op-regexp):
	New lang consts and vars.

2016-12-29  Alan Mackenzie  <acm@muc.de>

	Initialize edebug-offset-indices to a cons, not nil.  Fixes bug #16184.

	This is because there are times when this variable is changed by setcar before
	an atom is pushed onto it by debug-enter.  This happens, for example, whilst
	instrumenting c-font-lock-declarations in .../lisp/progmodes/cc-fonts.el.

	* lisp/emacs-lisp/edebug.el (edebug-offset-indices): initialize to '(0).

2016-12-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/inline.el: Fix apply-conversion (bug#25280)

	(inline--dont-quote): Quote the function with #' when passing it to `apply'.
	Cherry picked from commit e6161f648903d821865b9610b3b6aa0f82a5dcb7.

2016-12-27  Michael Albinus  <michael.albinus@gmx.de>

	Release Tramp 2.3.1

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.1".

	* lisp/net/tramp.el (tramp-eshell-directory-change): Add it to
	`eshell-mode-hook' but `eshell-first-time-mode-hook'.

	* lisp/net/tramp-compat.el (tramp-compat-file-name-quoted-p)
	(tramp-compat-file-name-quote)
	(tramp-compat-file-name-unquote): Embed them in `eval-and-compile'.

2016-12-27  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify prog1 implementation

	Inspired by a suggestion from Chris Gregory in:
	https://lists.gnu.org/r/emacs-devel/2016-12/msg00965.html
	On my platform, this generates exactly the same machine insns.
	* src/eval.c (prog_ignore): Rename from unwind_body, since
	it’s more general than that.  All callers changed.
	(Fprog1): Simplify by using prog_ignore.
	(Fwhile): Clarify by using prog_ignore.

2016-12-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/inline.el: Fix apply-conversion (bug#25280)

	(inline--dont-quote): Quote the function with #' when passing it to `apply'.

2016-12-27  Mark Oteiza  <mvoteiza@udel.edu>

	Remove a use of lexical-let

	* lisp/gnus/message.el (message-completion-function): Just use let,
	since the file now uses lexical-binding.

2016-12-27  Ken Brown  <kbrown@cornell.edu>

	Improve filenotify-tests.el on Cygwin (Bug #21804)

	* test/lisp/filenotify-tests.el [CYGWIN]
	(file-notify--test-read-event-timeout): Increase.
	(file-notify--test-with-events): Add delay before executing body.
	(file-notify-test02-events, file-notify-test04-file-validity):
	Adjust expected results.

2016-12-27  Eli Zaretskii  <eliz@gnu.org>

	Fix expand-file-name on DOS_NT systems when /: escaping is used

	* src/fileio.c (Fexpand_file_name) [DOS_NT]: Don't expand "~" in
	file names escaped by "/:".  Don't recursively expand
	default-directory escaped with "/:" which is not followed by a
	drive spec.  (Bug#25183)

2016-12-27  Bake Timmons  <65pandas@gmail.com>

	Fix `mail-sources' value of `(group)' in Gnus manual (bug#25275)

	* doc/misc/gnus.texi (Mail Source Specifiers):
	Replace wrong `mail-sources' value of `(group)' in Gnus manual with
	the correct `((group))' value.  (bug#25275) (tiny change)

2016-12-27  Bake Timmons  <65pandas@gmail.com>

	Fix bug in customizing `mail-sources' variable (bug#25274)

	* lisp/gnus/mail-source.el (mail-sources): Use list instead of cons
	for lone argument. (bug#25274) (tiny change)

2016-12-26  Philipp Stephani  <phst@google.com>

	Checkdoc: Don't require a space before an arg list

	See Bug#24998.

	* lisp/emacs-lisp/checkdoc.el (checkdoc-defun-regexp): Don't require a
	space before a argument list.
	* test/lisp/emacs-lisp/checkdoc-tests.el (checkdoc-tests--bug-24998):
	Add unit test.

2016-12-26  Eli Zaretskii  <eliz@gnu.org>

	Document 'default-toplevel-value' and 'set-default-toplevel-value'

	* doc/lispref/variables.texi (Default Value): Document
	'default-toplevel-value' and 'set-default-toplevel-value'.

2016-12-25  Michihito Shigemura  <m_shigemura@shigemk2.com>  (tiny change)

	Add zshrc and zshenv detection to sh-mode (bug#25217)

	* lisp/progmodes/sh-script.el (sh-mode): Add zsh string-match

2016-12-25  Paul Eggert  <eggert@cs.ucla.edu>

	Fix typo in lisp.h reordering patch

	* src/lisp.h (XUNTAG) [!USE_LSB_TAG]: Remove duplicate defn.
	Reported by Eli Zaretskii (Bug#25128#19).

2016-12-25  Paul Eggert  <eggert@cs.ucla.edu>

	regex.h now includes sys/types.h

	* src/dired.c, src/emacs.c, src/search.c, src/syntax.c, src/thread.h:
	Do not include sys/types.h; no longer needed.
	* src/regex.h: Include <sys/types.h>, as that's what Gnulib and
	glibc regex.h does, and POSIX has blessed this since 2008.

2016-12-25  Paul Eggert  <eggert@cs.ucla.edu>

	Reorder lisp.h to declare types before using them

	This puts basic functions for types to be after the corresponding
	type definitions.  This is a more-common programming style in C,
	and will make it easier to port Emacs to gcc
	-fcheck-pointer-bounds, since the functions now have access to the
	corresponding types' sizes.  This patch does not change the code;
	it just moves declarations and definitions and removes
	no-longer-needed forward declarations (Bug#25128).
	* src/buffer.c, src/data.c, src/image.c:
	Include process.h, for PROCESSP.
	* src/buffer.h (BUFFERP, CHECK_BUFFER, XBUFFER):
	* src/process.h (PROCESSP, CHECK_PROCESS, XPROCESS):
	* src/termhooks.h (TERMINALP, XTERMINAL):
	* src/window.h (WINDOWP, CHECK_WINDOW, XWINDOW):
	* src/thread.h (THREADP, CHECK_THREAD, XTHREAD, MUTEXP, CHECK_MUTEX)
	(XMUTEX, CONDVARP, CHECK_CONDVAR, XCONDVAR):
	Move here from lisp.h.
	* src/intervals.h: Include buffer.h, for BUFFERP.
	Include lisp.h, for Lisp_Object.
	* src/lisp.h: Reorder declarations and definitions as described
	above.  Move thread includes to be later, so that they can use the
	reordered definitions.  Move some symbols to other headers (noted
	elsewhere).  Remove forward decls that are no longer needed.
	* src/thread.h: Include systhread.h here, not in lisp.h,
	since lisp.h itself does not need systhread.h.

2016-12-25  Leo Liu  <sdl.web@gmail.com>

	Don't modify minibuffer variables globally

	* lisp/files.el (cd): Use setq-local instead.  (Bug#25260)

2016-12-25  Dima Kogan  <dima@secretsauce.net>

	diff-mode auto-refines only after a successful motion

	Prior to this patch (if enabled) auto-refinement would kick in after all
	hunk navigation commands, even if the motion failed.  This would result
	in a situation where the hunk navigation would signal an error and beep,
	but yet still accomplish potentially useful work, by auto-refining.
	This patch moves the auto-refinement code to only run when a motion was
	successful

	* lisp/vc/diff-mode.el (diff--internal-hunk-next,
	  diff--internal-hunk-prev): Removed auto-refinement-triggering code
	* lisp/vc/diff-mode.el (diff--wrap-navigation): Added
	  auto-refinement-triggering code

2016-12-25  Dima Kogan  <dima@secretsauce.net>

	diff-mode is able to better handle file headers

	This fixes a regression introduced in

	  https://git.savannah.gnu.org/gitweb/?p=emacs.git;a=commit;h=2c8a7e50d24daf19ea7d86f1cfeaa98a41c56085

	This bug was filed in

	  https://debbugs.gnu.org/cgi/bugreport.cgi?bug=25105

	Patches generated from a VCS such as git contain a patch message at the
	start, and diff-mode is now once-again able to properly able to ignore
	this message when issuing navigation commands around the message.

	* lisp/vc/diff-mode.el (diff-beginning-of-file-and-junk): More
	  thoroughly ignore the header when looking for a beginning of file
	  diffs.

2016-12-25  Paul Eggert  <eggert@cs.ucla.edu>

	Use libpng-config --ldflags, not --libs

	Problem reported by James K. Lowden (Bug#25268).
	* configure.ac (LIBPNG): Pass --ldflags, not --libs, to libpng-config.

2016-12-24  Eli Zaretskii  <eliz@gnu.org>

	Revert to pre-25.1 behavior in ffap

	* lisp/ffap.el (ffap-lax-url): Change the default to t, to produce
	the same behavior as in Emacs 24.x.  (Bug#25264)
	Explain the trade-offs of customizing this in the doc string.

2016-12-24  Noam Postavsky  <npostavs@gmail.com>

	* lisp/ffap.el: Fix obsolete comment referencing ffap-bug.

2016-12-24  Noam Postavsky  <npostavs@gmail.com>

	Remove redundant `save-match-data' in whitespace.el

	* lisp/whitespace.el (whitespace-cleanup, whitespace-cleanup-region):
	(whitespace-report-region): Remove redundant `save-match-data' calls.

2016-12-24  Noam Postavsky  <npostavs@gmail.com>

	Fix whitespace eob cleanup

	* lisp/whitespace.el (whitespace-empty-at-eob-regexp): Match any number
	of empty lines at end of buffer.
	* test/lisp/whitespace-tests.el (whitespace-cleanup-eob): New test.
	(whitespace-tests--cleanup-string): New helper function for tests.

2016-12-24  Hong Xu  <hong@topbug.net>

	Fix timezone detection of parse-iso8601-time-string

	* lisp/calendar/parse-time.el (parse-iso8601-time-string): Fix timezone
	parsing.  Add a doc string.  (Bug#25086)
	* src/editfns.c (Fdecode-time): Doc fix.
	* doc/misc/emacs-mime.texi (time-date): Add an example for
	parse-iso8601-time-string.
	* test/lisp/calendar/parse-time-tests.el (parse-time-tests): Add
	tests for parse-iso8601-time-string.

2016-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify exec_byte_code via moving decls etc.

	* src/bytecode.c (exec_byte_code): Simplify, mostly by moving
	initializers into decls, and by omitting some unnecessary changes
	to ‘top’.

2016-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	Remove interpreter’s byte stack

	This improves performance overall on my benchmark on x86-64,
	since the interpreted program-counter resides in a machine
	register rather than in RAM.
	* etc/DEBUG, src/.gdbinit: Remove xbytecode GDB command, as there
	is no longer a byte stack to decode.
	* src/bytecode.c (struct byte_stack, byte_stack_list)
	(relocate_byte_stack): Remove.  All uses removed.
	(FETCH): Simplify now that pc is now local (typically, in a
	register) and no longer needs to be relocated.
	(CHECK_RANGE): Remove.  All uses now done inline, in a different way.
	(BYTE_CODE_QUIT): Remove; now done by op_relative_branch.
	(exec_byte_code): Allocate a copy of the function’s bytecode,
	so that there is no problem if GC moves it.
	* src/lisp.h (struct handler): Remove byte_stack member.
	All uses removed.
	* src/thread.c (unmark_threads): Remove.  All uses removed.
	* src/thread.h (struct thread_state): Remove m_byte_stack_list member.
	All uses removed.  m_stack_bottom is now the first non-Lisp field.

2016-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	BYTE_CODE_SAFE typo fix

	* src/bytecode.c (FETCH): Depend on the value of BYTE_CODE_SAFE,
	not on whether it is defined.

2016-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	BYTE_CODE_SAFE cleanups

	* src/bytecode.c (BYTE_MAINTAIN_TOP): Remove; no longer needed.
	(struct byte_stack) [BYTE_MAINTAIN_TOP]:
	Remove unused members ‘top’ and ‘bottom’.
	(exec_byte_code): Nest inside { } to avoid GCC warning about
	jumping over declaration when compiled with -DBYTE_CODE_SAFE.

2016-12-24  Thien-Thi Nguyen  <ttn@gnu.org>

	last-chance: new utility lib for dangling deterrence

	* admin/last-chance.el: New file.

2016-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	Use max_align_t instead of void *

	* src/thread.c (run_thread): Don’t assume void * is aligned enough.

2016-12-23  Eli Zaretskii  <eliz@gnu.org>

	Attempt to fix 64-bit AIX build

	* src/unexaix.c (make_hdr, copy_text_and_data, write_segment): Fix
	type-casts that assumed 32-bit pointers.  (Bug#25141)

2016-12-23  Philipp Stephani  <phst@google.com>

	Clarify usage of 'ediff-cleanup-hook' (Bug#24675)

	* doc/misc/ediff.texi (Hooks): Clarify usage of 'ediff-cleanup-hook'

2016-12-23  Philipp Stephani  <phst@google.com>

	Document that variable binding order is unspecified

	* doc/lispref/variables.texi (Local Variables):
	* doc/misc/cl.texi (Modify Macros): Document that binding order in 'let' and
	'cl-letf' is unspecified.

2016-12-23  Eli Zaretskii  <eliz@gnu.org>

	Prevent infloops in redisplay due to truncate-lines and overlays

	* src/xdisp.c (hscroll_window_tree): Avoid inflooping in
	redisplay_window when a screen line ends in an overlay string with
	a newline.  (Bug#25246)

2016-12-23  Philipp Stephani  <phst@google.com>

	Treat incomplete integer literals as errors

	See Bug#25120.

	* src/lread.c (read_integer): Treat incomplete integer literals as errors.
	* test/src/lread-tests.el (lread-empty-int-literal): New unit test for
	incomplete integer literals.

2016-12-23  Eli Zaretskii  <eliz@gnu.org>

	* lisp/desktop.el (desktop-buffers-not-to-save): Doc fix.

2016-12-23  Stefan Monnier  <monnier@IRO.UMontreal.CA>

	Fix M-x hints on Mac port

	* lisp/simple.el (execute-extended-command--shorter): Call
	input-pending-p to trigger input processing on some systems, such
	as Mac port.  (Bug#23002)

2016-12-23  Michael Albinus  <michael.albinus@gmx.de>

	* test/lisp/net/tramp-tests.el (tramp--test-check-files): Make it robust.

2016-12-23  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts due to unaligned byte stack of threads

	* src/thread.c (run_thread): Make sure the pointers to thread byte
	stack are properly aligned.  (Bug#25247)

2016-12-22  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings

	* src/charset.c (load_charset_map):
	* src/coding.c (decode_coding_object):
	* src/frame.c (make_frame):
	* src/window.c (Frecenter):
	Mark locals with UNINIT to silence false alarms from
	-Wmaybe-uninitialized.
	* src/lisp.h (SYMBOL_ALIAS, SYMBOL_BLV, SYMBOL_FWD)
	(SET_SYMBOL_ALIAS, SET_SYMBOL_BLV, SET_SYMBOL_FWD):
	Check and assume that values are nonnull.  This pacifies
	-Wmaybe-uninitialized in Fmake_variable_buffer_local and
	Fmake_local_variable.

2016-12-22  Eli Zaretskii  <eliz@gnu.org>

	Fix last change with thread marking under GC_CHECK_MARKED_OBJECTS

	* src/thread.c (primary_thread_p): New function.
	* src/alloc.c (mark_object): Use 'primary_thread_p' to bypass tests
	meant for thread objects allocated dynamically.
	* src/thread.h (primary_thread_p): Add prototype.

2016-12-22  Martin Rudalics  <rudalics@gmx.at>

	Work around reporting a dpi change in apply_xft_settings

	* src/xsettings.c (apply_xft_settings): Don't report a change
	when dpi settings do not differ substantially.

2016-12-22  Noam Postavsky  <npostavs@gmail.com>

	Use completion-at-point in verilog-mode

	There were some functions in verilog-mode that implemented in-buffer
	completion, but this needlessly duplicates completion-at-point
	functionality, and the popup window management had problems
	(see Bug #23842).  We need to keep them for backwards compatibility with
	older emacs versions, but use completion-at-point if available.

	* lisp/progmodes/verilog-mode.el (verilog-toggle-completions): Mark as
	obsolete if completion-cycle-threshold is available.
	(verilog-mode-map, verilog-menu): Bind completion-at-point and
	completion-help-at-point in preference to verilog-complete-word and
	verilog-show-completions, respectively.
	(verilog-mode): Add verilog-completion-at-point to
	completion-at-point-functions.
	(verilog-completion-at-point): New function.
	(verilog-show-completions, verilog-complete-word): Use it to avoid code
	duplication.

2016-12-21  Reuben Thomas  <rrt@sc3d.org>

	Keep default CASECHARS/NOT-CASECHARS for ispell built-in dictionaries

	* lisp/textmodes/ispell.el (ispell-set-spellchecker-params): Do not
	override CASECHARS and NOT-CASECHARS.  The ispell dictionaries
	retain their hardwired values, and all other dictionaries are given
	sensible defaults.

2016-12-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/tex-mode.el (tex-compile-commands): Add luatex
	and xetex commands.

2016-12-21  Eli Zaretskii  <eliz@gnu.org>

	Fix aborts in GC under GC_CHECK_MARKED_OBJECTS

	* src/alloc.c (mark_object) [GC_CHECK_MARKED_OBJECTS]: Don't abort
	for thread objects.  They are marked via the all_threads list, and
	therefore don't need to be inserted into the red-black tree, so
	mem_find will never find them.  Reported by Daniel Colascione
	<dancol@dancol.org> in
	https://lists.gnu.org/r/emacs-devel/2016-12/msg00817.html.

2016-12-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/data.c (Fmake_variable_frame_local): Remove

	* src/lisp.h (struct Lisp_Buffer_Local_Value): Remove `frame_local'.

	* src/data.c (swap_in_symval_forwarding, set_internal)
	(set_symbol_trapped_write, make_blv, Fmake_variable_buffer_local)
	(Fmake_local_variable, Fkill_local_variable, Flocal_variable_p):
	Don't pay attention to ->frame_local any more.
	(syms_of_data): Remove Qtrapping_frame_local and don't defsubr
	Smake_variable_frame_local.

	* etc/NEWS (Incompatible Lisp Changes in Emacs 26.1): Announce removal
	of make-variable-frame-local.

	* lisp/help-fns.el (describe-variable): Don't handle the now impossible
	frame-local case.

	* lisp/subr.el (make-variable-frame-local): Remove obsolescence data.

	* src/frame.c (store_frame_param):
	* src/eval.c (specbind): Don't pay attention to ->frame_local any more.

	* src/widget.c (first_frame_p): Remove, unused.

2016-12-21  Paul Eggert  <eggert@cs.ucla.edu>

	Port dumping better to WSL

	Problem reported by Angelo Graziosi in:
	https://lists.gnu.org/r/emacs-devel/2016-12/msg00822.html
	* src/sysdep.c (disable_address_randomization):
	Detect buggy platforms where 'personality' always returns 0.

2016-12-21  Michael Albinus  <michael.albinus@gmx.de>

	Remove gateway methods in Tramp

	* doc/misc/tramp.texi (Top, Configuration): Remove section
	`Gateway methods', insert section `Firewalls' in menu.
	(History): Gateways are removed now.
	(Gateway methods): Remove section.
	(Multi-hops, Traces and Profiles): Don't reference to gateways anymore.
	(Firewalls): New section.

	* etc/NEWS: Gateway methods in Tramp have been removed.

	* lisp/net/tramp.el (tramp-methods): Adapt docstring.
	(tramp-file-name-port, tramp-accept-process-output): Simplify.

	* lisp/net/tramp-gw.el: Remove.

	* lisp/net/tramp-sh.el (tramp-gw-tunnel-method)
	(tramp-gw-socks-method): Remove declarations.
	(tramp-methods) <scp, scpx, ssh, sshx, telnet, nc, plink, pscp>:
	Remove `tramp-gw-args' and `tramp-default-port'.  (Bug#18967)
	(tramp-do-copy-or-rename-file-out-of-band)
	(tramp-compute-multi-hops, tramp-maybe-open-connection):
	Remove gateway support.

	* test/lisp/net/tramp-tests.el (tramp-test03-file-name-defaults):
	Remove gateway tests.

2016-12-20  Alan Mackenzie  <acm@muc.de>

	Amend the version number of CC Mode 5.33 -> 5.32.99.  Don't merge to trunk.

	lisp/progmodes/cc-defs.el: Amend the version number.
	etc/NEWS: Add an item explaining the change.

2016-12-20  Tino Calancha  <tino.calancha@gmail.com>

	files-test-read-file-in-: Delete temporary dir on exit

	* test/lisp/files-tests.el (files-test-read-file-in-~):
	Create subdir inside dir.

2016-12-20  Christopher Genovese  <genovese@cmu.edu>

	ibuffer: New filters and commands

	Add several new filters and improve documentation.
	See discussion on:
	https://lists.gnu.org/r/emacs-devel/2016-11/msg00399.html
	* lisp/ibuf-ext.el: Add paragraph to file commentary.
	(ibuffer-saved-filters, ibuffer-filtering-qualifiers)
	(ibuffer-filter-groups): Update doc string.
	(ibuffer-unary-operand): Add new function that transparently
	handles 'not' formats for compound filters.
	(ibuffer-included-in-filter-p): Handle 'not' fully; update doc string.
	(ibuffer-included-in-filter-p-1): Handle 'and' compound filters.
	(ibuffer-decompose-filter): Handle 'and' as well,
	and handle 'not' consistently with other uses.
	(ibuffer-and-filter): New defun analogous to 'ibuffer-or-filter'.
	(ibuffer--or-and-filter): New defun.
	(ibuffer-or-filter, ibuffer-and-filter): Use it.
	(ibuffer-format-qualifier): Handle 'and' filters as well.
	(ibuffer-filter-by-basename, ibuffer-filter-by-file-extension)
	(ibuffer-filter-by-directory, ibuffer-filter-by-starred-name)
	(ibuffer-filter-by-modified, ibuffer-filter-by-visiting-file):
	Add new pre-defined filters.
	(ibuffer-filter-chosen-by-completion): Add new interactive command
	for easily choosing a filter from the descriptions.
	* lisp/ibuffer.el (ibuffer-mode-map):
	Bind ibuffer-filter-by-basename, ibuffer-filter-by-file-extension,
	ibuffer-filter-by-starred-name, ibuffer-filter-by-modified,
	ibuffer-filter-by-visiting-file to '/b', '/.', '/*', '/i', '/v'
	respectively; bind 'ibuffer-or-filter', 'ibuffer-and-filter',
	'ibuffer-pop-filter' ,'ibuffer-pop-filter-group' and
	'ibuffer-filter-disable' to '/|', '/&', '/<up>', '/S-<up>'
	and '/ DEL' respectively.
	* test/lisp/ibuffer-tests.el (ibuffer-autoload): Add appropriate
	skip specification.
	Add menu entries for the new filters.
	(ibuffer-filter-inclusion-1, ibuffer-filter-inclusion-2
	ibuffer-filter-inclusion-3, ibuffer-filter-inclusion-4
	ibuffer-filter-inclusion-5, ibuffer-filter-inclusion-6
	ibuffer-filter-inclusion-7, ibuffer-filter-inclusion-8
	ibuffer-decompose-filter, ibuffer-and-filter
	ibuffer-or-filter): Add new tests; they are skipped unless
	ibuf-ext is loaded.

2016-12-20  Mark Oteiza  <mvoteiza@udel.edu>

	Update NEWS

	* etc/NEWS (Image-Dired): New section.

2016-12-20  Mark Oteiza  <mvoteiza@udel.edu>

	Recognize graphicsmagick in image-dired

	* lisp/image-dired.el (image-dired-cmd-create-thumbnail-program):
	(image-dired-cmd-create-thumbnail-options):
	(image-dired-cmd-create-temp-image-program):
	(image-dired-cmd-create-temp-image-options):
	(image-dired-cmd-create-standard-thumbnail-options):
	(image-dired-cmd-rotate-thumbnail-program):
	(image-dired-cmd-rotate-thumbnail-options): Account for existence of
	gm(1) executable.

2016-12-20  Noam Postavsky  <npostavs@gmail.com>

	Improve skeleton docstrings

	* lisp/skeleton.el (skeleton-end-newline): Remove mention of
	`skeleton-end-hook', its default code was moved into `skeleton-insert'.
	(skeleton-insert): Mention `skeleton-end-newline' and move reference to
	`skeleton-end-hook' above the explanation of skeleton syntax.

2016-12-20  Mark Oteiza  <mvoteiza@udel.edu>

	Implement asynchronous thumbnail generation in image-dired

	Additionally, all FOO-options defcustoms that were in fact shell command
	strings have been converted to argument lists.  Another method for
	shrinking PNG thumbs with optipng(1) has been added.
	* lisp/image-dired.el: Remove TODO item in commentary.
	(image-dired-cmd-create-thumbnail-options):
	(image-dired-cmd-create-temp-image-options):
	(image-dired-cmd-rotate-thumbnail-options):
	(image-dired-cmd-rotate-original-options):
	(image-dired-cmd-write-exif-data-options):
	(image-dired-cmd-read-exif-data-options): Convert to argument lists.
	(image-dired-cmd-pngnq-program, image-dired-cmd-pngcrush-program):
	Change string type to file.
	(image-dired-cmd-create-standard-thumbnail-command): Remove.
	(image-dired-cmd-pngnq-options):
	(image-dired-cmd-create-standard-thumbnail-options):
	(image-dired-cmd-optipng-program, image-dired-cmd-optipng-options):
	New defcustoms.
	(image-dired-queue, image-dired-queue-active-jobs):
	(image-dired-queue-active-limit): New variables.
	(image-dired-pngnq-thumb, image-dired-pngcrush-thumb):
	(image-dired-optipng-thumb): New functions.
	(image-dired-create-thumb-1): Renamed from image-dired-create-thumb.
	Use start-process instead of call-process.  Set file modes.  Trigger
	PNG file optimization in process sentinel.
	(image-dired-thumb-queue-run, image-dired-create-thumb): New functions.
	(image-dired-display-thumbs):
	(image-dired-create-thumbs): Don't expect call-process return value.
	(image-dired-display-image, image-dired-rotate-thumbnail): Use
	start-process instead of call-process.
	(image-dired-rotate-original, image-dired-set-exif-data):
	(image-dired-get-exif-data): Adapt to arguments being an arg list.

2016-12-19  Andreas Schwab  <schwab@linux-m68k.org>

	Protect change of window's buffer in vertical-motion against unwinds (bug#25209)

	* src/indent.c (restore_window_buffer): New function.
	(Fvertical_motion): Use it to restore window's buffer.

2016-12-19  Glenn Morris  <rgm@gnu.org>

	Improve default load-path for uninstalled CANNOT_DUMP builds

	* src/lread.c (load_path_default) [CANNOT_DUMP]:
	Use build load-path if we seem to be running uninstalled.  (Bug#24974)
	I think this became an issue several years ago when we stopped
	using EMACSLOADPATH in the Makefiles; however this change should
	improve the CANNOT_DUMP uninstalled case in general.

2016-12-19  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'w32-scroll-lock-modifier'

	* doc/emacs/msdos.texi (Windows Keyboard): Document how to set up
	w32-scroll-lock-modifier so that Scroll Lock toggles the LED.

	* src/w32fns.c (syms_of_w32fns) <w32-scroll-lock-modifier>: Doc
	fix.  (Bug#25204)

2016-12-19  Eli Zaretskii  <eliz@gnu.org>

	Document 'describe-fontset'

	* doc/emacs/mule.texi (Fontsets): Document 'describe-fontset'.
	(Bug#25216)

2016-12-19  Eli Zaretskii  <eliz@gnu.org>

	Document 'describe-fontset'

	* doc/emacs/mule.texi (Fontsets): Document 'describe-fontset'.
	(Bug#25216)

2016-12-19  Eli Zaretskii  <eliz@gnu.org>

	Fix crashes upon C-g on Posix TTY frames

	* src/thread.h (struct thread_state): New member not_holding_lock.
	(maybe_reacquire_global_lock): Add prototype.
	* src/thread.c: Include syssignal.h.
	(maybe_reacquire_global_lock): New function.
	(really_call_select): Set the not_holding_lock member of the
	thread state before releasing the lock, and rest it after
	re-acquiring the lock when the select function returns.  Block
	SIGINT while doing this to make sure we are not interrupted on TTY
	frames.
	* src/sysdep.c (block_interrupt_signal, restore_signal_mask): New
	functions.
	* src/syssignal.h (block_interrupt_signal, restore_signal_mask):
	Add prototypes.
	* src/keyboard.c (read_char) [THREADS_ENABLED]: Call
	maybe_reacquire_global_lock.  (Bug#25178)

2016-12-19  Sam Steingold  <sds@gnu.org>

	avoid Eager macro-expansion failure: (void-function string-to-list)

	* lisp/loadup.el [ns]: "ucs-normalize" uses `string-to-list' which is defined
	  in "mule-util", so we have to load "mule-util" before "ucs-normalize",
	  otherwise I get "Eager macro-expansion failure" on "make bootstrap"

2016-12-19  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#24980

	* lisp/ido.el (ido-add-virtual-buffers-to-list):
	Suppress Tramp invocation.  (Bug#24980)

2016-12-18  Philipp Stephani  <phst@google.com>

	Add a new compile error regexp for Clang includes

	Clang uses a slight variation of GCC's include format, causing includes
	to be treated as warnings instead of informational messages.  Use a new
	regular expression instead.

	* lisp/progmodes/compile.el
	(compilation-error-regexp-alist-alist): New element
	`clang-include' for Clang-style "included from" lines.
	* test/lisp/progmodes/compile-tests.el
	(compile-tests--test-regexps-data): Add unit test.

2016-12-18  Alan Third  <alan@idiocy.org>

	Reinstate ispell character offset (bug#25219)

	* lisp/textmodes/ispell.el (ispell-process-line): insert -1 where
	ispell-offset used to be.

2016-12-18  Mark Oteiza  <mvoteiza@udel.edu>

	Bind new image-mode scroll commands in image-dired

	* lisp/image-dired.el (image-dired-display-image-mode-map): Add bindings
	to new image-mode commands.

2016-12-18  Noam Postavsky  <npostavs@gmail.com>

	Fix rx-any with range with ?\] and ?-

	* lisp/emacs-lisp/rx.el: Make sure not to produce a circular
	list (Bug#25123).
	* test/lisp/emacs-lisp/rx-tests.el (rx-char-any): New test.

2016-12-18  Mark Oteiza  <mvoteiza@udel.edu>

	Use floor of mtime instead of rounding for thumb property

	This seems to be the correct thing to do, at least more in line with
	what at least one other implementation does.  Anything using
	gnome-desktop [0] effectively does the same, as
	gnome_desktop_thumbnail_is_valid applies atol(3) to mtime for
	comparison and time_t on GNU/Linux is a signed int.
	[0] https://git.gnome.org/browse/gnome-desktop/
	* lisp/image-dired.el (image-dired-create-thumb): Use floor here.

2016-12-17  Reuben Thomas  <rrt@sc3d.org>

	Fix spelling mistake in private defun name (Bug#25218)

	lisp/textmodes/flyspell.el (flyspell-ajust-cursor-point): Rename to
	`flyspell-adjust-cursor-point'.

2016-12-17  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs support from flyspell.el (Bug#25218)

	lisp/textmodes/flyspell.el (flyspell-prog-mode, flyspell-mode-on):
	(flyspell-word, flyspell-delete-region-overlays):
	(flyspell-correct-word-before-point): Remove XEmacs support.
	(flyspell-xemacs-popup): Remove XEmacs-specific defun.

2016-12-17  Michael Albinus  <michael.albinus@gmx.de>

	More tests for Tramp

	* lisp/net/tramp.el (tramp-drop-volume-letter): Handle quoted
	file names.

	* lisp/net/tramp-sh.el (tramp-make-copy-program-file-name): Quote file
	name properly.

	* test/lisp/net/tramp-tests.el (tramp-test05-expand-file-name):
	Mark quoted file name as absolute.  (Bug#25183)
	(tramp--test-windows-nt-and-batch)
	(tramp--test-windows-nt-and-pscp-psftp-p): New defuns.
	(tramp--test-windows-nt-or-smb-p): Rename from
	`tramp--test-smb-windows-nt-p'.  Adapt callees.
	(tramp--test-check-files): Improve checks for environment variables.
	(tramp-test33-special-characters)
	(tramp-test33-special-characters-with-stat)
	(tramp-test33-special-characters-with-perl)
	(tramp-test33-special-characters-with-ls, tramp-test34-utf8)
	(tramp-test34-utf8-with-stat, tramp-test34-utf8-with-perl)
	(tramp-test34-utf8-with-ls): Add more checks for skip.

2016-12-17  Eli Zaretskii  <eliz@gnu.org>

	Fix comments

	* src/thread.h (struct thread_state): Fix comments.
	* src/process.c (wait_reading_process_output): Fix a typo in
	commentary.

2016-12-17  Eli Zaretskii  <eliz@gnu.org>

	Repair desktop restoration on text terminals

	* lisp/desktop.el (desktop-restoring-frameset-p): Test for the GUI
	frame here, instead of in desktop-restoring-frameset.  That's
	because desktop-read wants to know whether frameset will actually
	be restored, and has fallback procedures up its sleeve when it
	won't be; these fallbacks need to be invoked when the frameset is
	not going to be restored.  (Bug#24298)

2016-12-17  Eli Zaretskii  <eliz@gnu.org>

	Fix crashes on MS-Windows during dumping

	* src/unexw32.c (get_section_info): Make extra_bss_size be the
	maximum of extra_bss_size and extra_bss_size_static.  This avoids
	computing the size of the output file smaller than it actually
	needs to be, which then causes copy_executable_and_dump_data to
	write beyond the requested size of the file mapping, thus relying
	on the OS roundup to page boundary to save us from ourselves.  See
	https://lists.gnu.org/r/emacs-devel/2016-12/msg00642.html
	for the details.

	* lib/stdio-impl.h: Revert the workaround fix of not including
	errno.h for MinGW.

2016-12-17  Dmitry Gutov  <dgutov@yandex.ru>

	Ignore forward-sexp-function in js-mode indentation code

	* lisp/progmodes/js.el (js--multi-line-declaration-indentation)
	(js--maybe-goto-declaration-keyword-end):
	Bind forward-sexp-function to nil (bug#25215).

2016-12-16  Mark Oteiza  <mvoteiza@udel.edu>

	Be more selective clearing the image cache

	* lisp/image-dired.el (image-dired-create-thumbs):
	(image-dired-rotate-thumbnail, image-dired-refresh-thumb): Only clear
	the current thumbnail file from the image cache.

2016-12-16  Eli Zaretskii  <eliz@gnu.org>

	Unbreak the MinGW build

	* lib/stdio-impl.h [__MINGW32__]: Don't include errno.h.  Without
	this, temacs crashes while dumping.

2016-12-16  Nicolas Petton  <nicolas@petton.fr>

	Make seq-into return the sequence when no conversion needed

	* lisp/emacs-lisp/seq.el (seq-into): Do not convert the sequence when
	  no conversion is needed.
	* test/lisp/emacs-lisp/seq-tests.el (test-seq-into-and-identity): Add
	  a regression test checking for identity.

2016-12-16  Eli Zaretskii  <eliz@gnu.org>

	Improve documentation of 'define-coding-system'

	* lisp/international/mule.el (define-coding-system): Warn against
	possible infinite recursion in pre-write-conversion and
	post-read-conversion functions.  (Bug#25203)

2016-12-16  Mark Oteiza  <mvoteiza@udel.edu>

	New commands image-scroll-left and image-scroll-right

	* etc/NEWS: Mention them.
	* lisp/image-mode.el (image-scroll-left, image-scroll-right): New
	functions.

2016-12-16  Mark Oteiza  <mvoteiza@udel.edu>

	More image-dired refactoring

	* lisp/image-dired.el (image-dired-thumbnail-mode):
	(image-dired-display-image-mode): Add :group 'image-dired so
	customize-mode works.
	(image-dired-display-image): Rearrange.
	(image-dired-copy-with-exif-file-name): This map is for side effect.
	(image-dired-dired-edit-comment-and-tags): Just use #'identity.

2016-12-16  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/image-dired.el: Turn on lexical-binding.

2016-12-16  Mark Oteiza  <mvoteiza@udel.edu>

	Teach image-dired to also generate large thumbs

	* lisp/image-dired.el (image-dired-thumbnail-storage): Add
	standard-large option.
	(image-dired-thumb-size): Add condition for standard-large storage.
	(image-dired-insert-thumbnail): Check for new option.  Change
	thumbnail path conditionally.
	(image-dired-thumb-size): New function.
	(image-dired-create-thumb, image-dired-line-up-dynamic): Use it.

2016-12-15  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2016-12-14 xalloc-oversized: check for PTRDIFF_MAX too
	2016-12-12 fpending: port to native Windows with MSVC
	* .gitignore: Do not ignore lib/stdio-impl.h.
	* lib/fpending.c, lib/xalloc-oversized.h, m4/fpending.m4:
	Copy from gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	* lib/stdio-impl.h:
	New file, copied from gnulib.
	* nt/gnulib.mk (EXTRA_DIST): Add stdio-impl.h.

2016-12-15  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/images/icons/hicolor/scalable/mimetypes/emacs-document.svg:
	Append newline.

2016-12-15  Mark Oteiza  <mvoteiza@udel.edu>

	Don't abuse princ and spam messages

	* lisp/image-dired.el (image-dired-format-properties-string): Nix princ.
	(image-dired-display-thumb-properties):
	(image-dired-dired-display-properties): Nix princ.  Bind
	message-log-max to nil.

2016-12-15  Mark Oteiza  <mvoteiza@udel.edu>

	Inherit things from special-mode and image-mode

	* lisp/image-dired.el: Require image-mode library.
	(image-dired-thumbnail-mode-map): Remove superfluous binding.
	(image-dired-display-image-mode-map): Remove superfluous binding.
	Add movement remaps from image-mode-map.
	(image-dired-thumbnail-mode): Derive from special-mode.
	(image-dired-display-image-mode): Derive from special-mode. Call
	image-mode-setup-winprops.

2016-12-15  Mark Oteiza  <mvoteiza@udel.edu>

	Fix some image-dired customization types

	* lisp/image-dired.el (image-dired): Add info link to defgroup.
	(image-dired-dir, image-dired-gallery-dir): Set type to directory.
	(image-dired-db-file, image-dired-temp-image-file):
	(image-dired-cmd-create-thumbnail-program):
	(image-dired-cmd-create-temp-image-program):
	(image-dired-cmd-rotate-thumbnail-program):
	(image-dired-cmd-rotate-original-program):
	(image-dired-temp-rotate-image-file):
	(image-dired-cmd-write-exif-data-program):
	(image-dired-cmd-read-exif-data-program): Set type to file.
	(image-dired-create-thumb, image-dired-line-up-dynamic): Check storage
	type at runtime, since setting image-dired-thumb-size does not
	automatically set image-dired-thumb-width and image-dired-thumb-height.

2016-12-15  Eli Zaretskii  <eliz@gnu.org>

	Prevent crashes in xg_select due to concurrency

	* src/xgselect.c (xg_select): Don't call Glib functions that use
	'context' if we failed to acquire it.  This means some other
	thread owns the context, in which case both using the context and
	calling block_input/unblock_input will step on that thread's toes
	and eventually lead to crashes.  (Bug#25172)

2016-12-15  Nicolas Petton  <nicolas@petton.fr>

	Fix circular list handling in seq-mapn

	* lisp/emacs-lisp/seq.el (seq-mapn): Do not copy list arguments.
	* test/lisp/emacs-lisp/seq-tests.el (test-seq-mapn-circular-lists):
	  Add a regression test.

2016-12-15  Michael Albinus  <michael.albinus@gmx.de>

	Check in tramp-tests.el, that environment variables are set correctly

	* test/lisp/net/tramp-tests.el (tramp--test-check-files):
	Check also, that environment variables are set correctly.

2016-12-15  Dominique Quatravaux  <dominique.quatravaux@epfl.ch>  (tiny change)

	Protect environment variables with double quotes in Tramp

	* lisp/net/tramp-sh.el (tramp-open-connection-setup-interactive-shell):
	Protect environment variables with double quotes.

2016-12-15  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/ibuf-macs.el (define-ibuffer-filter): Wrap ,@body in a progn.

2016-12-15  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/image-dired.el (image-dired-create-thumb): Create parent directories.

2016-12-14  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/image-mode.el (image-mode-winprops-alist): Add docstring.

2016-12-14  Mark Oteiza  <mvoteiza@udel.edu>

	Recognize pngnq or pngnq-s9

	* lisp/image-dired.el (image-dired-cmd-pngnq-program): Also consider
	pngnq-s9 as a possible executable.

2016-12-14  Mark Oteiza  <mvoteiza@udel.edu>

	Update standard image-dired thumbnail location

	* lisp/image-dired.el (image-dired-thumb-name): Conform to the latest
	standard: consider XDG_CACHE_HOME, falling back on ~/.cache.

2016-12-14  Mark Oteiza  <mvoteiza@udel.edu>

	Reset window scroll when displaying an image

	When viewing a large image full size and scrolling, for instance, to
	the lower right corner, then selecting a much smaller image in the
	thumbnail buffer, the window stays scrolled so the new image is out of
	the window.  One must scroll back to the "origin" to view the new
	displayed image, or just kill the image-dired-display-image buffer and
	try again.  This fixes the issue.
	* lisp/image-dired.el (image-dired-display-window-width):
	(image-dired-display-window-height): Operate on a window as argument.
	(image-dired-display-image): Bind (image-dired-display-window) and use
	it. Set window vscroll and hscroll to zero when refreshing the
	buffer's contents.

2016-12-14  Mark Oteiza  <mvoteiza@udel.edu>

	More image-dired polish

	* lisp/image-dired.el (image-dired-file-name-at-point): New function.
	(image-dired-thumbnail-mode, image-dired-display-image-mode): Disable
	undo list. Add image-dired-file-name-at-point to
	file-name-at-point-functions to facilitate find-file and friends.
	(image-dired-thumbnail-display-external):
	(image-dired-dired-display-external): Use start-process instead, to
	avoid needlessly blocking and using a shell.

2016-12-13  Phillip Lord  <phillip.lord@russet.org.uk>

	Replace ldefs-boot with a much smaller file

	 * Makefile.in (bootstrap-build,generate-ldefs-boot): New targets.
	   (bootstrap): Depend on bootstrap-build.
	 * admin/ldefs-clean.el: New file.
	 * lisp/Makefile.in (compile-first): Depend on loaddefs.el
	 * lisp/ldefs-boot.el: Remove.
	 * lisp/ldefs-boot-auto.el: New file.
	 * lisp/ldefs-boot-manual.el: New file.
	 * lisp/loadup.el: Load ldefs-boot-manual.el.
	 * src/emacs.c (generating_ldefs_boot): New variable.
	   (main): Check whether we are generating ldefs.
	 * src/eval.c (autoload-do-load): Dump autoload forms to stderr when
	   requested.
	 * src/lisp.h (generating_ldefs_boot): New variable.
	 * admin/gitmerge.el, admin/make-tarball.txt, admin/notes/copyright,
	   lisp/Makefile.in, lisp/cus-dep.el, lisp/emacs-lisp/elint.el,
	   lisp/finder.el, lisp/loadup.el, msdos/mainmake.v2: Update reference to
	   ldefs-boot.
	 * admin/update_autogen: Alter mechanism for ldefs-boot generation.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove support for aspell < 0.60 (from 2004)

	lisp/textmodes/ispell.el (ispell-check-version): Require Aspell 0.60.
	(ispell-aspell-dictionary-alist): Remove check that we have Aspell 0.60.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Minor docstring and comment fixes to ispell.el

	lisp/textmodes/ispell.el (ispell-aspell-dictionary-alist): Mention
	ispell-aspell-dictionary-alist, not ispell-dictionary-alist.
	(ispell-set-spellchecker-params): Change double-single quotes to
	single single quotes in comment.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove unused variable

	* lisp/textmodes/ispell.el (current-ispell-directory): Remove.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs-specific ispell-with-no-warnings

	* lisp/textmodes/ispell.el (ispell-with-no-warnings): Remove this
	defmacro, needed only for XEmacs.
	(ispell-command-loop, ispell-message): Use with-no-warnings directly.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove meaningless defconst ispell-version

	* lisp/textmodes/ispell.el (ispell-version): Since ispell.el is now
	firmly part of Emacs, and the version hasn’t changed since 2003, and
	isn’t used anywhere, remove it.  3rd-party code can better use the
	Emacs version, or feature or function checks.
	(ispell-check-version): No longer report ispell.el version.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove boundp test for always-bound symbol

	* lisp/textmodes/ispell.el (ispell-message): mail-yank-prefix is
	defvar’d at the top of the file, so remove a test to see if it is
	bound.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove support for ispell < 3.1.12

	* lisp/textmodes/ispell.el (ispell-offset): Remove.
	(ispell-check-version): Require ispell >= 3.1.12, released in 1994.
	(ispell-process-line): No longer use ispell-offset.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove unused constant

	* lisp/textmodes/ispell.el (ispell-required-version): Remove.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove support for old versions of supercite and GNUS from ispell.el

	* lisp/textmodes/ispell.el (ispell-message): Require supercite >= 3.0
	and GNUS >= 5.  Not exactly the bleeding edge!

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove remaining mentions of XEmacs from ispell.el

	* lisp/textmodes/ispell.el (ispell-valid-dictionary-list):
	(ispell-add-per-file-word-list): Remove mentions of XEmacs from
	comments.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs-specific minibuffer handling code from ispell.el

	* lisp/textmodes/ispell.el (ispell-init-process): Assume we are not in
	XEmacs.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs-specific horizontal scrollbar handling in ispell.el

	* lisp/textmodes/ispell.el (ispell-command-loop): Remove
	XEmacs-specific code.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs-specific code dealing with enable-multibyte-characters

	* lisp/textmodes/ispell.el (ispell-decode-string):
	(ispell-init-process):  Remove XEmacs-specific guard.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs-specific code from ispell.el

	* lisp/textmodes/ispell.el (ispell-menu-xemacs): Remove
	(ispell-menu-map-needed): Remove XEmacs-specific check.
	(ispell-word): Remove XEmacs-specific extent code.
	(ispell-init-process): Remove XEmacs workaround for local add-hook.
	Assume we have set-process-query-on-exit-flag.
	(ispell-kill-ispell, ispell-change-dictionary): Remove XEmacs
	workaround for called-interactively-p.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove some commented-out code

	lisp/textmodes/ispell.el (ispell-process)
	ispell-valid-dictionary-list): Remove commented-out code.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove XEmacs and old Emacs highlighting code

	* lisp/textmodes/ispell.el
	(ispell-highlight-spelling-error-xemacs): Remove.
	(ispell-highlight-spelling-error): Assume display-color-p exists.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Assume Emacs supports [:alpha:] in regexps

	* lisp/textmodes/ispell.el (ispell-emacs-alpha-regexp): Remove.
	(ispell-set-spellchecker-params): Remove tests of
	ispell-emacs-alpha-regexp.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove some XEmacs-specific code from ispell.el

	* lisp/textmodes/ispell.el: Remove XEmacs menubar setup.
	(ispell-int-char): Remove.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Generalize over-specific documentation

	* lisp/textmodes/ispell.el (ispell-personal-dictionary): Rather than
	document precise personal wordlist filenames for only two supported
	spelling checkers, simply say that the default personal dictionary
	depends on the chosen spelling checker.  The user can check the
	spelling checker’s documentation if necessary.  This is simpler, and
	works for other supported (and future, or unknown) spelling checkers.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove tests for built-in functions

	* lisp/textmodes/ispell.el (buffer-substring-no-properties): Remove
	back-up definition.
	(ispell-add-per-file-word-list): Remove tests for comment-padright and
	comment-normalize-vars.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove unused ispell-looking-back

	* lisp/textmodes/ispell.el (ispell-looking-back): Remove unused alias.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Assume we have version<= for checking ispell version

	* lisp/textmodes/ispell.el (ispell-check-minver): Remove.
	(ispell-check-version): Use version<= directly.

2016-12-13  Reuben Thomas  <rrt@sc3d.org>

	Remove ispell.el pre-GNU Emacs comments

	* lisp/textmodes/ispell.el (Commentary): Remove original maintainer
	  details, as Emacs version, bug report address and so forth should be
	  used instead for this version.  Remove in-line change history; use
	  git instead.

2016-12-13  Mark Oteiza  <mvoteiza@udel.edu>

	More small fixes for image-dired

	* lisp/image-dired.el: Fix commentary to refer to correct Emacs manual
	node.
	(image-dired--with-db-file): Add declare forms.
	(image-dired-hidden-p): Rewrite with cl-loop.  It's not necessary to
	run through the whole list.

2016-12-13  Mark Oteiza  <mvoteiza@udel.edu>

	Remove image-dired-kill-buffer-and-window

	This breaks window layout, especially when quitting a
	image-dired-display-image-mode buffer.
	* lisp/image-dired.el (image-dired-thumbnail-mode-map):
	(image-dired-display-image-mode-map): Replace in keymap and menu items
	bindings to image-dired-kill-buffer-and-window with quit-window.
	(image-dired-kill-buffer-and-window): Remove.

2016-12-13  Mark Oteiza  <mvoteiza@udel.edu>

	Replace image-dired-setup-dired-keybindings with a minor mode

	* lisp/image-dired.el (image-dired-thumbnail-mode): Fix docstring to
	remove mention of nonexistent image-dired-dired and to refer to the
	new minor mode.
	(image-dired-minor-mode-map): New keymap assimilated from
	image-dired-setup-dired-keybindings.  In the future, the keymap parent
	should be removed, and perhaps also the duplicate bindings that
	already exist in dired-mode-map.
	(image-dired-setup-dired-keybindings): Remove.  Replace with an
	obsolete function alias.
	(image-dired-minor-mode): New minor mode, assuming the role of
	image-dired-setup-dired-keybindings.

2016-12-13  Paul Eggert  <eggert@cs.ucla.edu>

	* test/src/regex-resources/PTESTS: Convert to UTF-8.

2016-12-13  Noam Postavsky  <npostavs@gmail.com>

	Clarify thread-signal semantics

	* doc/lispref/threads.texi (Basic Thread Functions): Explain that the
	thread will be signaled as soon as possible.

2016-12-13  Noam Postavsky  <npostavs@gmail.com>

	Clean up var watcher disabling on thread switching

	* src/data.c (Fset_default): Move code into new C level function,
	`set_default_internal'.
	(set_default_internal): New function, like `Fset_default' but also takes
	additional bindflag parameter.
	(set_internal): Only call `notify_variable_watchers' if bindflag is not
	SET_INTERNAL_THREAD_SWITCH.
	* src/eval.c (do_specbind, do_one_unbind): Add bindflag parameter,
	passed on to set_internal and set_default_internal.  Adjust callers.
	(rebind_for_thread_switch, unbind_for_thread_switch): Pass
	SET_INTERNAL_THREAD_SWITCH to do_specbind, do_one_unbind instead of
	temporarily adjusting symbol's trapped_write field.

2016-12-13  Glenn Morris  <rgm@gnu.org>

	Minor fix for define-derived-mode

	* lisp/emacs-lisp/derived.el (define-derived-mode):
	Do not let eg eval-defun reset the values of syntax or abbrev tables,
	since they might have been defined externally.  (Bug#16160)

2016-12-12  Paul Eggert  <eggert@cs.ucla.edu>

	* build-aux/git-hooks/pre-commit: Add whitespace comment.

2016-12-12  Clément Pit--Claudel  <clement.pitclaudel@live.com>

	Move backtrace to ELisp using a new mapbacktrace primitive

	* src/eval.c (get_backtrace_starting_at, backtrace_frame_apply)
	(Fmapbacktrace, Fbacktrace_frame_internal): New functions.
	(get_backtrace_frame, Fbacktrace_debug): Use `get_backtrace_starting_at'.

	* lisp/subr.el (backtrace--print-frame): New function.
	(backtrace): Reimplement using `backtrace--print-frame' and `mapbacktrace'.
	(backtrace-frame): Reimplement using `backtrace-frame--internal'.

	* lisp/emacs-lisp/debug.el (debugger-setup-buffer): Pass a base to
	`mapbacktrace' instead of searching for "(debug" in the output of
	`backtrace'.

	* test/lisp/subr-tests.el (subr-test-backtrace-simple-tests)
	(subr-test-backtrace-integration-test): New tests.

	* doc/lispref/debugging.texi (Internals of Debugger): Document
	`mapbacktrace' and missing argument BASE of `backtrace-frame'.

2016-12-12  Paul Eggert  <eggert@cs.ucla.edu>

	Use C99 syntax for font drivers

	Problem reported by Daniel Colascione in:
	https://lists.gnu.org/r/emacs-devel/2016-12/msg00515.html
	* src/ftcrfont.c (ftcrfont_driver):
	* src/ftfont.c (ftfont_driver):
	* src/ftxfont.c (ftxfont_driver):
	* src/macfont.m (macfont_driver):
	* src/nsfont.m (nsfont_driver):
	* src/xfont.c (xfont_driver):
	* src/xftfont.c (xftfont_driver):
	Use C99 syntax, not the old GNU C syntax.

2016-12-12  Glenn Morris  <rgm@gnu.org>

	Obsolete gs.el

	* lisp/gs.el: Move to lisp/obsolete.  (Bug#1524)
	* doc/lispref/display.texi (Image Formats): Remove postscript.
	(PostScript Images): Remove section.
	* doc/lispref/elisp.texi: Update menu.

2016-12-12  Glenn Morris  <rgm@gnu.org>

	Un-revert recent Ffset change

	* src/data.c (Ffset): Reinstate the check for "nil".

2016-12-12  Glenn Morris  <rgm@gnu.org>

	Minor advice.el fix

	* lisp/emacs-lisp/advice.el (ad-preactivate-advice):
	Avoid setting the function definition of nil.
	This was happening during bootstrap of org-compat.el,
	apparently due to eager macro expansion of code behind
	a (featurep 'xemacs) test.

2016-12-12  Eli Zaretskii  <eliz@gnu.org>

	Make etags-tests work in out-of-tree builds

	* test/lisp/progmodes/etags-tests.el (etags-bug-158)
	(etags-bug-23164): Make them work in an out-of-tree build.
	Reported by Ken Brown <kbrown@cornell.edu>.

2016-12-12  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashing if a new thread is signaled right away

	* src/thread.c (post_acquire_global_lock): Don't raise the pending
	signal if the thread's handlers were not yet set up, as that will
	cause Emacs to exit with a fatal error.  This can happen if a
	thread is signaled as soon as make-thread returns, before the new
	thread had an opportunity to acquire the global lock, set up the
	handlers, and call the thread function.

	* test/src/thread-tests.el (thread-signal-early): New test.

2016-12-12  Eli Zaretskii  <eliz@gnu.org>

	Fix point motion in cloned buffers

	* src/thread.c (post_acquire_global_lock): Call
	set_buffer_internal_2 instead of tricking set_buffer_internal_1
	into resetting the current buffer even if it didn't change.  This
	avoids bug#25165, caused by failing to record the modified values
	of point and mark, because current_buffer was set to NULL.  Also,
	don't bother re-setting the buffer if there was no thread switch,
	as that just wastes cycles.
	* src/buffer.c (set_buffer_internal_2): New function, with most of
	the body of set_buffer_internal_1, but without the test for B
	being identical to the current buffer.
	(set_buffer_internal_1): Call set_buffer_internal_2 if B is not
	identical to the current buffer.
	* src/buffer.h (set_buffer_internal_2): Add prototype.

	* test/src/thread-tests.el (thread-sticky-point): New test.

2016-12-12  Michael Albinus  <michael.albinus@gmx.de>

	Further improvements in Tramp's file name unquoting

	* lisp/net/tramp-adb.el (tramp-adb-handle-file-local-copy)
	(tramp-adb-handle-write-region): Unquote localname.
	(tramp-adb-handle-copy-file): Implement direct copy on remote device.
	(tramp-adb-handle-rename-file): Quote arguments, add "-f" to force.

	* lisp/net/tramp.el (tramp-file-name-unquote-localname): New defun.
	(tramp-handle-file-name-case-insensitive-p):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-get-file-attributes)
	(tramp-gvfs-connection-mounted-p, tramp-gvfs-mount-spec)
	(tramp-gvfs-maybe-open-connection):
	* lisp/net/tramp-sh.el (tramp-make-copy-program-file-name):
	* lisp/net/tramp-smb.el (tramp-smb-get-share)
	(tramp-smb-get-localname): Use it.

	* test/lisp/net/tramp-tests.el (tramp--test-docker-p): New defun.
	(tramp--test-special-characters, tramp-test34-utf8)
	(tramp-test34-utf8-with-stat, tramp-test34-utf8-with-perl)
	(tramp-test34-utf8-with-ls): Use it.

2016-12-12  Martin Rudalics  <rudalics@gmx.at>

	Strengthen conditions for resizing sibling windows (Bug#25169)

	* lisp/window.el (window-resize, delete-window): Resize other siblings
	only if `window-combination-resize' equals t (Bug#25169).

2016-12-12  Noam Postavsky  <npostavs@gmail.com>

	Quote filenames containing '~' in prompts

	When in a directory named '~', the default value given by
	`read-file-name' should be quoted by prepending '/:', in order to
	prevent it from being interpreted as referring to the $HOME
	directory (Bug#16984).

	* lisp/minibuffer.el (minibuffer-maybe-quote-filename): New function.
	(completion--sifn-requote, read-file-name-default): Use it instead of
	`minibuffer--double-dollars'.
	* test/lisp/files-tests.el (files-test-read-file-in-~): Test it.

2016-12-11  Eli Zaretskii  <eliz@gnu.org>

	Undo part of last change

	* src/thread.h:
	* src/keyboard.c:
	* src/keyboard.h: Undo part of last change:
	input_available_clear_time is again a global variable.

2016-12-11  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts when a thread signals an error

	* src/thread.h (struct thread_state): Add members
	m_waiting_for_input and m_input_available_clear_time.
	(waiting_for_input, input_available_clear_time): New macros.
	* src/keyboard.c (waiting_for_input, input_available_clear_time):
	Remove; they are now macros that reference the current thread.
	(Bug#25171)
	* src/w32select.c: Don't include keyboard.h.

	* test/src/thread-tests.el (thread-errors): New test.

2016-12-11  Philipp Stephani  <phst@google.com>

	Clean up compile-tests.el

	Switch to lexical binding.  Make checkdoc happy.

	* test/lisp/progmodes/compile-tests.el (compile--test-error-line)
	(compile-test-error-regexps): Instead of checking a single Boolean
	value, use `should' for each attribute of the message to be compared.
	(compile-tests--test-regexps-data): Document sixth list element
	TYPE.

2016-12-11  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#25162

	* doc/emacs/files.texi (Reverting): Document
	auto-revert-remote-files and auto-revert-verbose.

	* lisp/autorevert.el (auto-revert-verbose, auto-revert-mode)
	(auto-revert-tail-mode, global-auto-revert-mode): Fix docstring.

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Fix a typo in define-abbrev-table

	* lisp/abbrev.el (define-abbrev-table): Fix typo in docstring handling.

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Improve previous cperl-mode change

	* lisp/progmodes/cperl-mode.el (cperl-mode-abbrev-table):
	Improve previous change.

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Mark default cperl abbrevs as system ones

	* lisp/progmodes/cperl-mode.el (cperl-mode):
	Mark our abbrevs as system ones.  (Bug#10934)

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Revert earlier Ffset change

	* src/data.c (Ffset): Allow nil again, since it caused
	eager macro-expansion failures.

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Tweaks for message bogus address detection

	* lisp/gnus/message.el (message-bogus-recipient-p):
	Do not require "@", since some mailers deliver to local addresses
	without one.  (Bug#23054)
	Move "@.*@" from here...
	(message-bogus-addresses): ...to here, so it can be customized.

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Do not allow nil to be defined as a function

	* lisp/emacs-lisp/byte-run.el (defun):
	* src/data.c (Ffset): Do not allow "nil".  (Bug#25110)

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Bump makeinfo requirement from 4.7 to 4.13

	* configure.ac: Bump makeinfo version requirement from 4.7 to 4.13.
	We need at least 4.8, and that may be buggy, so go for the last
	of the 4 series, which is 8 years old.  (Bug#25108)

2016-12-11  Glenn Morris  <rgm@gnu.org>

	Fixes related to select-enable-clipboard

	* lisp/menu-bar.el (clipboard-yank, clipboard-kill-ring-save)
	(clipboard-kill-region):
	* lisp/eshell/esh-io.el (eshell-virtual-targets)
	(eshell-clipboard-append):
	Replace option gui-select-enable-clipboard with
	select-enable-clipboard; renamed October 2014.  (Bug#25145)

2016-12-11  Nicolas Richard  <theonewiththeevillook@yahoo.fr>

	Add some sanity checking of defun arglist

	* lisp/emacs-lisp/byte-run.el (defun):
	Check for malformed argument lists.  (Bug#15715)

2016-12-11  Matt Armstrong  <marmstrong@google.com>  (tiny change)

	Minor shell-mode fix for zsh

	* lisp/shell.el (shell-mode): Prevent shell-dirstack-query
	becoming confused by zsh abbreviations.  (Bug#24632)

2016-12-10  Noam Postavsky  <npostavs@gmail.com>

	Define struct predicate before acccesors

	The accessor functions use the predicate function, which causes problems
	when reloading after unload-feature: the compiler-macro property is
	still present on the predicate symbol, and the compiler fails to find
	the definition when trying to inline it into the accessor
	function (Bug#25088).

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Move predicate definition
	before field accessor definitions.

2016-12-10  Andreas Schwab  <schwab@linux-m68k.org>

	* Makefile.in (install-etc): Don't prepend $(DESTDIR) to commands in
	system unit file.

2016-12-10  Eli Zaretskii  <eliz@gnu.org>

	Support concurrency in Emacs Lisp

	Merge branch 'test-concurrency'

	* src/thread.c:
	* src/thread.h:
	* src/systhread.c:
	* src/systhread.h: New files.
	* src/xgselect.c (xg_select): Avoid using SAFE_NALLOCA and use
	xnmalloc unconditionally.
	* src/window.c (struct save_window_data): Rename current_buffer to
	f_current_buffer.
	* src/w32proc.c (sys_select): Change the function signature to
	closer fit 'pselect' on Posix hosts.
	* src/search.c:
	* src/regex.h: Convert some globals to macros that reference
	thread-specific values.
	* src/process.c (pset_thread, add_non_keyboard_read_fd)
	(add_process_read_fd, add_non_blocking_write_fd)
	(recompute_input_desc, compute_input_wait_mask)
	(compute_non_process_wait_mask, compute_non_keyboard_wait_mask)
	(compute_write_mask, clear_waiting_thread_info)
	(update_processes_for_thread_death, Fset_process_thread)
	(Fprocess_thread): New functions.
	(enum fd_bits): New enumeration.
	(fd_callback_data): Add 'thread' and 'waiting_thread', rename
	'condition' to 'flags'.
	(set_process_filter_masks, create_process, create_pty)
	(Fmake_serial_process, finish_after_tls_connection)
	(connect_network_socket, deactivate_process)
	(server_accept_connection, wait_reading_process_output)
	(Fcontinue_process, Fstop_process, keyboard_bit_set)
	(add_timer_wait_descriptor, add_keyboard_wait_descriptor)
	(delete_keyboard_wait_descriptor): Use the new functions instead
	of manipulating fd flags and masks directly.
	(syms_of_process): Defsubr the new primitives.
	* src/print.c (print_object): Print threads, mutexes, and
	conditional variables.
	* src/lisp.h (enum pvec_type): New values PVEC_THREAD, PVEC_MUTEX,
	and PVEC_CONDVAR.
	(XTHREAD, XMUTEX, XCONDVAR, THREADP, MUTEXP, CONDVARP)
	(CHECK_THREAD, CHECK_MUTEX, CHECK_CONDVAR): New inline functions.
	(XSETTHREAD, XSETMUTEX, XSETCONDVAR): New macros.
	(struct handler): Add back byte_stack.  Rename lisp_eval_depth to
	f_lisp_eval_depth.
	* src/eval.c (specpdl_kind, specpdl_arg, do_specbind)
	(rebind_for_thread_switch, do_one_unbind)
	(unbind_for_thread_switch): New functions.
	(init_eval): 'handlerlist' is not malloc'ed.
	(specbind): Call do_specbind.
	(unbind_to): Call do_one_unbind.
	(mark_specpdl): Accept 2 arguments.
	(mark_specpdl): Mark the saved value in a let-binding.
	* src/emacs.c (main): Call init_threads_once, init_threads, and
	syms_of_threads.
	* src/data.c (Ftype_of): Support thread, mutex, and condvar
	objects.
	(Fthreadp, Fmutexp, Fcondition_variable_p): New functions.
	(syms_of_data): DEFSYM and defsubr new symbols and primitives.
	* src/bytecode.c (struct byte_stack, FETCH, CHECK_RANGE)
	(BYTE_CODE_QUIT): Add back.
	(exec_byte_code): Add back byte stack manipulation.
	* src/alloc.c (cleanup_vector): Handle threads, mutexes, and
	conditional variables.
	(mark_stack): Now extern; accept additional argument 'bottom'.
	(flush_stack_call_func): New function.
	(garbage_collect_1): Call mark_threads and unmark_threads.  Don't
	mark handlers.
	* src/.gdbinit (xbytecode): Add back.

	* test/src/thread-tests.el: New tests.
	* test/src/data-tests.el (binding-test-manual)
	(binding-test-setq-default, binding-test-makunbound)
	(binding-test-defvar-bool, binding-test-defvar-int)
	(binding-test-set-constant-t, binding-test-set-constant-nil)
	(binding-test-set-constant-keyword)
	(binding-test-set-constant-nil): New tests.

	* doc/lispref/processes.texi (Processes and Threads): New
	subsection.
	* doc/lispref/threads.texi: New file
	* doc/lispref/elisp.texi (Top): Include it.
	* doc/lispref/objects.texi (Thread Type, Mutex Type)
	(Condition Variable Type): New subsections.
	(Type Predicates): Add thread-related predicates.
	* doc/lispref/objects.texi (Editing Types):
	* doc/lispref/elisp.texi (Top): Update higher-level menus.

	* etc/NEWS: Mention concurrency features.

2016-12-10  Eli Zaretskii  <eliz@gnu.org>

	Fix error messages in thread.c

	* src/thread.c (lisp_mutex_unlock, Fcondition_wait)
	(Fcondition_notify, Fthread_join): Fix error messages.

2016-12-10  Eli Zaretskii  <eliz@gnu.org>

	Improve doc strings in thread.c

	* src/thread.c (Fmake_condition_variable, Fcondition_wait)
	(Fcondition_notify, Fcondition_mutex, Fcondition_name, Fmake_thread)
	(Fthread_join, Fall_threads): Doc fixes.

2016-12-10  Eli Zaretskii  <eliz@gnu.org>

	Fix building with check-lisp-object-type

	* src/thread.c (mark_one_thread): Use NILP to compare with
	m_saved_last_thing_searched, which is a Lisp object.  Reported by
	Andreas Politz <politza@hochschule-trier.de>.

2016-12-10  Eli Zaretskii  <eliz@gnu.org>

	Documentation and commentary improvements

	* src/lisp.h:
	* src/regex.c:
	* src/xgselect.c (xg_select): Improve commentary and formatting.

	* doc/lispref/objects.texi (Thread Type, Mutex Type)
	(Condition Variable Type): New subsections.
	(Type Predicates): Add thread-related predicates.
	* doc/lispref/objects.texi (Editing Types):
	* doc/lispref/elisp.texi (Top): Update higher-level menus.

2016-12-09  Michael Albinus  <michael.albinus@gmx.de>

	Fix further problems with quoted file names in Tramp

	* lisp/net/tramp.el (tramp-quoted-name-p, tramp-quote-name)
	(tramp-unquote-name): Move defsubst ...
	* lisp/net/tramp-compat.el (tramp-compat-file-name-quoted-p)
	(tramp-compat-file-name-quote)
	(tramp-compat-file-name-unquote): ... here. Adapt callees.

	* lisp/net/tramp-cache.el (tramp-flush-file-property)
	(tramp-flush-directory-property):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-url-file-name):
	* lisp/net/tramp-sh.el (tramp-make-copy-program-file-name):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-file)
	(tramp-smb-handle-substitute-in-file-name)
	(tramp-smb-get-share, tramp-smb-get-localname): Handle quoted files.

2016-12-09  Eli Zaretskii  <eliz@gnu.org>

	*src/sysdep.c: Fix a comment.

2016-12-09  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation error on Fedora 24

	* src/sysdep.c [HAVE_H_ERRNO]: Remove declaration of h_errno.
	Reported by Paul Eggert <eggert@cs.ucla.edu>.

2016-12-09  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation warnings due to prototype of thread_select

	* src/thread.h <int select_func>: Make the 5th and 6th arguments
	be 'const'.
	* src/process.c [WINDOWSNT]:
	* src/w32proc.c: Make the 5th and 6th argument to sys_select be
	'const'.

2016-12-09  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation on Debian GNU/Linux

	* src/thread.h: Include sys/types.h, for ssize_t that regex.h
	uses.  Reported by Robert Marshall <robert.marshall@codethink.co.uk>.

2016-12-09  Eli Zaretskii  <eliz@gnu.org>

	Fix subtle errors with let-binding of localized variables

	* src/eval.c (do_specbind): Don't require a "symbol" that is
	actually a cons cell, in order to call set-default, as there are
	no longer such bindings.  This makes do_specbind work like the
	pre-concurrency implementation in specbind for bindings of
	forwarded symbols.  Use specpdl_kind to access the type of the
	binding.
	(specpdl_kind): New function.

2016-12-09  Michael Albinus  <michael.albinus@gmx.de>

	Document file-name-quote, file-name-unquote and file-name-quoted-p

	* doc/lispref/files.texi (File Name Expansion):
	* etc/NEWS: Mention file-name-quote, file-name-unquote and
	file-name-quoted-p.

	* lisp/files.el (file-name-non-special): Revert using
	file-name-quote, file-name-unquote and file-name-quoted-p.

2016-12-09  Noam Postavsky  <npostavs@gmail.com>

	Fix bad quoting of python-shell-interpreter

	`python-shell-calculate-command' was using `shell-quote-argument' as if
	it was generating a shell command, but its callers don't pass the result
	to a shell, and they expect to parse it with `split-string-and-unquote'.
	This caused problems depending on the flavor of shell quoting in
	effect (Bug#25025).

	* lisp/progmodes/python.el (python-shell-calculate-command): Use
	`combine-and-quote-strings' to quote the interpreter, so that it can be
	parsed by `python-shell-make-comint' successfully using
	`split-string-and-unquote'.

2016-12-09  Paul Eggert  <eggert@cs.ucla.edu>

	* src/lisp.h (struct terminal): Remove unnecessary forward decl.

2016-12-08  Paul Eggert  <eggert@cs.ucla.edu>

	Make read1 more reentrant

	This is needed if ‘read’ is called soon after startup, before the
	Unicode tables have been set up, and it reads a \N escape and
	needs to look up a value the Unicode tables, a lookup that in turn
	calls read1 recursively.  Although this change doesn’t make ‘read’
	fully reentrant, it’s good enough to handle this case.
	* src/lread.c (read_buffer_size, read_buffer): Remove static vars.
	(grow_read_buffer): Revamp to use locals, not statics, and to
	record memory allocation un the specpdl.  All callers changed.
	(read1): Start with a stack-based buffer, and use the heap
	only if the stack buffer is too small.  Use unbind_to to
	free any heap buffer allocated.  Use bool for boolean.
	Redo symbol loop so that only one call to grow_read_buffer
	is needed.
	(init_obarray): Remove no-longer-needed initialization.

2016-12-08  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation warnings

	* src/thread.c (Fmake_thread): Call emacs_abort, to avoid
	compilation warning.

2016-12-08  Paul Eggert  <eggert@cs.ucla.edu>

	Fix unlikely substitute-command-keys memory leak

	* src/doc.c (Fsubstitute_command_keys):
	Free buffer when unwinding.

2016-12-08  Michael Albinus  <michael.albinus@gmx.de>

	Add file-name-quoted-p, file-name-quote, file-name-unquote

	* lisp/files.el (file-name-quoted-p, file-name-quote)
	(file-name-unquote): New defsubst.
	(find-file--read-only, find-file-noselect)
	(file-name-non-special): Use them.

2016-12-08  Eli Zaretskii  <eliz@gnu.org>

	Add a NEWS entry.

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Minor fix for symbol-file

	* lisp/subr.el (symbol-file): Avoid false matches with "require"
	elements in load-history.  (Bug#25109)

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Doc fix for vc-git

	* lisp/vc/vc-git.el (vc-git-region-history): Add a doc string.

2016-12-08  Tino Calancha  <tino.calancha@gmail.com>

	Fix Bug#24962

	* lisp/buff-menu.el (list-buffers--refresh):
	List buffers with name starting with " " if they visit a file.
	* test/lisp/buff-menu-tests.el (buff-menu-24962):
	Update test result as pass.

2016-12-08  Tino Calancha  <tino.calancha@gmail.com>

	ediff-fixup-patch-map: Improve prompt

	* lisp/vc/ediff-ptch.el (ediff-fixup-patch-map):
	Make clear in the prompt when we are applying a multi patch.

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Retain message logging in map-y-or-n-p

	* lisp/emacs-lisp/map-ynp.el (map-y-or-n-p):
	Stop disabling logging to Messages buffer.  (Bug#13326)

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Doc fix for recent change

	* lisp/simple.el (region-modifiable-p): Doc fix.

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Quieten make-dist default operation

	* make-dist: Add --verbose option.  Default to quieter operation.

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Further improve make-dist checking

	* make-dist: Print status messages when checking.

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Improve previous make-dist change

	* make-dist: Let make check the info files more thoroughly.

2016-12-08  Glenn Morris  <rgm@gnu.org>

	Make make-dist --snapshot do some sanity checks

	* make-dist: Snapshot mode no longer disables checks.
	Checks now includes checks for freshness.  (Bug#25084)
	Checks now exits with an error if problems were found.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	Fix regression introduced by commit 7b1e97f

	* lisp/ibuf-ext.el (ibuffer-decompose-filter): Use cdr instead
	of cadr; required after commit 20f5a5b.

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Put post-25 ChangeLog entries into ChangeLog.3

	* ChangeLog.2: Copy from emacs-25 branch.
	* ChangeLog.3: New file, with changes only in master.
	* Makefile.in (CHANGELOG_HISTORY_INDEX_MAX): Bump from 2 to 3.

2016-12-07  Eli Zaretskii  <eliz@gnu.org>

	Fix network streams.

	The original code messed up flags in fd_callback_data[], and also
	didn't call add_process_read_fd for process-related file descriptors.

2016-12-07  Eli Zaretskii  <eliz@gnu.org>

	Minimize spurious diffs from master.

2016-12-06  Eli Zaretskii  <eliz@gnu.org>

	Fix the test suite

	* test/automated/bindings.el: Contents moved to
	test/src/data-tests.el.
	* test/automated/threads.el: Moved to test/src/thread-tests.el.

2016-12-06  Eli Zaretskii  <eliz@gnu.org>

	Fix a typo in bytecode.c.

2016-12-05  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation problems.

	Fix merged code in process.c and eval.c.

2016-12-04  Eli Zaretskii  <eliz@gnu.org>

	Merge branch 'concurrency'

	Conflicts (resolved):
		configure.ac
		src/Makefile.in
		src/alloc.c
		src/bytecode.c
		src/emacs.c
		src/eval.c
		src/lisp.h
		src/process.c
		src/regex.c
		src/regex.h

2015-11-02  Eli Zaretskii  <eliz@gnu.org>

	Fix the MS-Windows build

	* src/thread.h [WINDOWSNT]: Include sys/socket.h.

	* src/sysselect.h: Don't define fd_set and FD_* macros for
	MS-Windows here.
	* src/w32.h: Define them here.

	* src/process.h (sys_select): Declare prototype.

	* src/sysdep.c:
	* src/process.c:
	* src/filelock.c:
	* src/emacs.c:
	* src/callproc.c: Move inclusion of sys/select.h after lisp.h.
	* nt/inc/socket.h: Include w32.h instead of sysselect.h

2015-11-01  Ken Raeburn  <raeburn@raeburn.org>

	merge from trunk

2013-10-19  Barry O'Reilly  <gundaetiapo@gmail.com>

	* src/eval.c (unbind_for_thread_switch): Fix iteration over the
	specpdl stack.

2013-10-18  Tom Tromey  <tromey@redhat.com>

	change condition-variablep to condition-variable-p

2013-09-01  Eli Zaretskii  <eliz@gnu.org>

	Fix crashes when unbind_for_thread_switch signals an error.

	 src/eval.c (unbind_for_thread_switch): Accept a 'struct
	 thread_state *' argument and use specpdl_ptr and specpdl of that
	 thread.  Fixes crashes if find_symbol_value signals an error.
	 src/thread.c (post_acquire_global_lock): Update current_thread
	 before calling unbind_for_thread_switch.  Pass the previous thread
	 to unbind_for_thread_switch.

2013-08-31  Eli Zaretskii  <eliz@gnu.org>

	Improve MS-Windows implementation of threads.

	 src/systhread.c (sys_cond_init): Set the 'initialized' member to
	 true only if initialization is successful.  Initialize wait_count
	 and wait_count_lock.
	 (sys_cond_wait, sys_cond_signal, sys_cond_broadcast): If
	 'initialized' is false, do nothing.
	 (sys_cond_wait): Fix the implementation to avoid the "missed
	 wakeup" bug: count the waiting threads, and reset the broadcast
	 event once the last thread was released.
	 (sys_cond_signal, sys_cond_broadcast): Use SetEvent instead of
	 PulseEvent.  Don't signal the event if no threads are waiting.
	 (sys_cond_destroy): Only close non-NULL handles.
	 (sys_thread_create): Return zero if unsuccessful, 1 if successful.
	 src/systhread.h (w32thread_cond_t): New member 'initialized'.
	 Rename waiters_count and waiters_count_lock to wait_count and
	 wait_count_lock, respectively.

2013-08-30  Eli Zaretskii  <eliz@gnu.org>

	Enable thread support in the MS-Windows build.

	 src/systhread.h (w32thread_critsect, w32thread_cond_t, sys_mutex_t)
	 (sys_cond_t, sys_thread_t) [WINDOWSNT]: New data types.
	 src/systhread.c (sys_mutex_init, sys_mutex_lock, sys_mutex_unlock)
	 (sys_mutex_destroy, sys_cond_init, sys_cond_wait)
	 (sys_cond_signal, sys_cond_broadcast, sys_cond_destroy)
	 (sys_thread_self, sys_thread_equal, w32_beginthread_wrapper)
	 (sys_thread_create, sys_thread_yield) [WINDOWSNT]: New functions.

	 configure.ac (THREADS_ENABLED): Enable threads for MinGW, even
	 if pthreads is not available.

2013-08-27  Tom Tromey  <tromey@redhat.com>

	use condition-notify in the docs, not condition-signal

	zap until-condition docs

	zap until-condition

	rename thread-blocker to thread--blocker

	remove binding_symbol

	fix style of threadp, mutexp, and condition-variable-p

	make thread_check_current_buffer return bool

	add a comment before flush_stack_call_func

	fix whitespace_regexp warning

2013-08-26  Eli Zaretskii  <eliz@gnu.org>

	Fix MS-Windows build.

	 src/callproc.c:
	 src/emacs.c:
	 src/filelock.c:
	 src/process.c:
	 src/sysdep.c:
	 src/w32.c: Reshuffle Windows-specific headers to avoid errors with
	 redefinition of fd_set etc.
	 src/process.c: Don't use num_pending_connects when
	 NON_BLOCKING_CONNECT is not defined.
	 src/sysselect.h: Move definitions of FD_* macros and of SELECT_TYPE
	 here from w32.h.
	 src/w32proc.c (sys_select): Adjust the argument types to what
	 thread.h expects.

	 nt/inc/sys/socket.h: Include stdint.h.  Include sysselect.h instead
	 of w32.h.

2013-08-26  Tom Tromey  <tromey@redhat.com>

	use record_unwind_protect_void, avoid warning

	implement --enable-threads and a thread-less mode

2013-08-25  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-08-20  Tom Tromey  <tromey@redhat.com>

	fix up some merge errors in process.c

	remove a dead function
	clean up a fixme I added in create_pty during the merge

2013-08-20  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-07-26  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-07-13  Tom Tromey  <tromey@redhat.com>

	Merge from trunk

2013-07-12  Tom Tromey  <tromey@redhat.com>

	Use thread_alive_p in a couple more spots

2013-07-07  Tom Tromey  <tromey@redhat.com>

	fix xfree bug in run_thread

	this fixes run_thread to account for the dummy slot
	in specpdl

2013-07-07  Tom Tromey  <tromey@redhat.com>

	merge from trunk

	this merges frmo trunk and fixes various build issues.
	this needed a few ugly tweaks.
	this hangs in "make check" now

2013-07-06  Tom Tromey  <tromey@redhat.com>

	add assertion to flush_stack_call_func

	functions called via flush_stack_call_func are assumed
	to return with the global lock held again, and with
	current_thread reset.  this assertion verifies part of this

2013-07-06  Tom Tromey  <tromey@redhat.com>

	call init_primary_thread from init_threads

2013-07-05  Tom Tromey  <tromey@redhat.com>

	avoid SAFE_ALLOCA

	avoid SAFE_ALLOCA in xgselect.c.
	in this code it is just as easy to always use malloc;
	and it avoids thread-switching problems, as the safe-alloca
	stuff implicitly refers to the current thread

2013-07-05  Tom Tromey  <tromey@redhat.com>

	avoid current_thread sometimes

	this tweaks thread.c to use 'self' instead of current_thread
	in a couple spots.  this is clearer and more robust

2013-07-05  Tom Tromey  <tromey@redhat.com>

	initialize saved_value

	initialize the saved_value field in all needed cases
	also, add an assertion to do_one_unbind

2013-07-04  Tom Tromey  <tromey@redhat.com>

	fix buglet in test case

2013-07-04  Tom Tromey  <tromey@redhat.com>

	unlink thread later

	unlink thread from global list later
	also remove some unnecessary destruction code

2013-07-04  Tom Tromey  <tromey@redhat.com>

	introduce thread_alive_p macro

	This introduces the thread_alive_p macro and changes
	thread-alive-p to use it.  This is a minor cleanup.
	It also changes all-threads to ignore dead threads.

2013-07-03  Tom Tromey  <tromey@redhat.com>

	Don't call unbind_for_thread_switch in run_thread

	This removes the call to unbind_for_thread_switch from run_thread.
	This isn't necessary because acquire_global_lock does it properly.

2013-07-03  Tom Tromey  <tromey@redhat.com>

	remove unused field from struct thread_state

	Fix a comment.

2013-06-13  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-06-06  Tom Tromey  <tromey@redhat.com>

	fix a few latent issues in the thread patch

	* we called unbind_for_thread_switch unconditionally, but this
	  is wrong if the previous thread exited
	* likewise, exiting a thread should clear current_thread
	* redundant assignment in run_thread
	* clean up init_threads - no need to re-init the primary thread

	This patch still sometimes causes weird hangs in "make check".
	However, I think that is a kernel bug, since Emacs enters the zombie
	state but its parent process hangs in wait.  This shouldn't happen.

2013-06-04  Tom Tromey  <tromey@redhat.com>

	update eval.c to make it build again after the merge

2013-06-03  Tom Tromey  <tromey@redhat.com>

	merge from trunk; clean up some issues

2013-03-18  Tom Tromey  <tromey@redhat.com>

	don't let kill-buffer kill a buffer if it is current in any thread

2013-03-18  Tom Tromey  <tromey@redhat.com>

	fix process bugs

	Fix some process-related bugs, mostly thinkos from the conversion to
	recording fd state as flags.
	This now passes the test suite without hanging.

2013-03-17  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-03-08  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-01-16  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2013-01-06  Tom Tromey  <tromey@redhat.com>

	merge from trunk

2012-12-23  Tom Tromey  <tromey@redhat.com>

	mention let bindings and lack of other ways to rewind

2012-12-17  Tom Tromey  <tromey@redhat.com>

	Remove bit accidentally left over from the merge

	merge from trunk

2012-09-04  Tom Tromey  <tromey@redhat.com>

	merge from trunk

	link from thread docs to match data

2012-08-27  Tom Tromey  <tromey@redhat.com>

	cannot thread-join the current thread

	fix test suite for condition-variable-p name change

	add tests for variable bindings

2012-08-25  Tom Tromey  <tromey@redhat.com>

	minor update to thread-join docs

2012-08-24  Tom Tromey  <tromey@redhat.com>

	minor documentation updates

2012-08-23  Tom Tromey  <tromey@redhat.com>

	document until-condition

	first draft of threads documentation

	rename condition-variablep to condition-variable-p

	document process-thread and set-process-thread

2012-08-20  Tom Tromey  <tromey@redhat.com>

	pass the thread name to the OS if possible

	use prctl to pass the thread name to the OS, if possible

2012-08-20  Tom Tromey  <tromey@redhat.com>

	add convenience macros with-mutex and until-condition

	with-mutex is a safe way to run some code with a mutex held.
	until-condition is a safe way to wait on a condition variable.

2012-08-20  Tom Tromey  <tromey@redhat.com>

	Merge from trunk

2012-08-19  Tom Tromey  <tromey@redhat.com>

	another docstring fixlet

	minor docstring fixup

	add condition-mutex and condition-name

	ensure name of a thread is a string

	ensure name of a mutex is a string

	use NILP

2012-08-19  Tom Tromey  <tromey@redhat.com>

	condition variables

	This implements condition variables for elisp.
	This needs more tests.

2012-08-19  Tom Tromey  <tromey@redhat.com>

	comment fixes

2012-08-19  Tom Tromey  <tromey@redhat.com>

	refactor systhread.h

	This refactors systhread.h to move the notion of a "lisp mutex"
	into thread.c.  This lets us make make the global lock and
	post_acquire_global_lock static.

2012-08-17  Tom Tromey  <tromey@redhat.com>

	write docstrings for the thread functions

	declare unbind_for_thread_switch and rebind_for_thread_switch in lisp.h

2012-08-15  Tom Tromey  <tromey@redhat.com>

	add test case for I/O switching

2012-08-15  Tom Tromey  <tromey@redhat.com>

	process changes

	This changes wait_reading_process_output to handle threads better.  It
	introduces a wrapper for select that releases the global lock, and it
	ensures that only a single thread can select a given file descriptor
	at a time.

	This also adds the thread-locking feature to processes.  By default a
	process can only have its output accepted by the thread that created
	it.  This can be changed using set-process-thread.  (If the thread
	exits, the process is again available for waiting by any thread.)

	Note that thread-signal will not currently interrupt a thread blocked
	on select.  I'll fix this later.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	Prepare process.c for threads by not having global select masks.
	The next step is to make it so selects can choose fds by thread.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	fix a latent bug in process.c

	* src/process.c (wait_reading_process_output): Check Writeok bits,
	not write_mask.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This adds thread-blocker, a function to examine what a thread is
	blocked on.  I thought this would be another nice debugging addition.

	This adds names to mutexes.  This seemed like a nice debugging
	extension.

	This adds some tests of the threading code.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This supplies the mutex implementation for Emacs Lisp.

	A lisp mutex is implemented using a condition variable, so that we can
	interrupt a mutex-lock operation by calling thread-signal on the
	blocking thread.  I did things this way because pthread_mutex_lock
	can't readily be interrupted.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This adds most of the thread features visible to emacs lisp.

	I roughly followed the Bordeaux threads API:

	http://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation

	... but not identically.  In particular I chose not to implement
	interrupt-thread or destroy-thread, but instead a thread-signaling
	approach.

	I'm still undecided about *default-special-bindings* (which I did not
	implement).  I think it would be more emacs-like to capture the let
	bindings at make-thread time, but IIRC Stefan didn't like this idea
	the first time around.

	There are one or two semantics issues pointed out in the patch where I
	could use some advice.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This turns thread_state into a pseudovector and updates various bits
	of Emacs to cope.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This introduces some new functions to handle the specpdl.  The basic
	idea is that when a thread loses the interpreter lock, it will unbind
	the bindings it has put in place.  Then when a thread acquires the
	lock, it will restore its bindings.

	This code reuses an existing empty slot in struct specbinding to store
	the current value when the thread is "swapped out".

	This approach performs worse than my previously planned approach.
	However, it was one I could implement with minimal time and
	brainpower.  I hope that perhaps someone else could improve the code
	once it is in.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This introduces the low-level system threading support.  It also adds
	the global lock.  The low-level support is a bit over-eager, in that
	even at the end of the present series, it will not all be used.  I
	think thiat is ok since I plan to use it all eventually -- in
	particular for the emacs lisp mutex implementation.

	I've only implemented the pthreads-based version.  I think it should
	be relatively clear how to port this to other systems, though.

	I'd also like to do a "no threads" port that will turn most things
	into no-ops, and have thread-creation fail.  I was thinking perhaps
	I'd make a future (provide 'threads) conditional on threads actually
	working.

	One other minor enhancement available here is to make it possible to
	set the name of the new thread at the OS layer.  That way gdb, e.g.,
	could display thread names.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This parameterizes the GC a bit to make it thread-ready.

	The basic idea is that whenever a thread "exits lisp" -- that is,
	releases the global lock in favor of another thread -- it must save
	its stack boundaries in the thread object.  This way the boundaries
	are always available for marking.  This is the purpose of
	flush_stack_call_func.

	I haven't tested this under all the possible GC configurations.
	There is a new FIXME in a spot that i didn't convert.

	Arguably all_threads should go in the previous patch.

2012-08-15  Tom Tromey  <tromey@redhat.com>

	This introduces a thread-state object and moves various C globals
	there.  It also introduces #defines for these globals to avoid a
	monster patch.

	The #defines mean that this patch also has to rename a few fields
	whose names clash with the defines.

	There is currently just a single "thread"; so this patch does not
	impact Emacs behavior in any significant way.

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	eeecac7 Fix minor quoting problems in doc strings

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	35ce3fb Don't assume window-point and point are the same

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ba2847f ; * lisp/vc/ediff-util.el (ediff-janitor): Fix last change.  ...
	8b43f97 * lisp/vc/ediff-util.el (ediff-janitor): Doc fix.  (Bug#25046)
	c20035c ; * doc/emacs/programs.texi (Man Page): Fix last change.
	93d8346 Improve indexing of 'man'

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d31298d Fix documentation of `window-combination-resize'
	2086f4c Typo fixes in elisp manual

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	3980903 ; Update ChangeLog.2, etc/AUTHORS and ldef-boot.el for Emacs ...
	5878abf Fix 'expand-file-name' during startup on MS-Windows

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9a857b9 * admin/authors.el (authors-renamed-files-alist): Addition.
	6d27423 Tweak refcard note about documentation location
	e46a134 Improve treatment of Fortran's "class is"

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	93c0f51 Handle TeX comments when making new paragraph
	e0884f1 Restore keystroke echo in 'C-q'
	a6213ce Improve documentation of 'current-word'
	0828126 Fix a typo in an Eshell defcustom
	2e361c7 Minor copyedits of electric-pair-mode
	7499ee8 ; Minor copyedit in the Emacs manual
	45b652b Fix documentation of 'invocation-directory'
	7f43d7c * admin/authors.el (authors-aliases): Add an entry.
	ba48880 ; Fix pl-refcard.tex

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	7287e96 ; * src/lread.c (openp): Correct an inaccuracy in commentary.

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	3d63b48 Update ChangeLog files and authors.el
	9d30264 Fix menu bindings of Dired 'A' and 'Q' commands
	a725592 Avoid errors in shr-pixel-column due to dedicated windows
	3138598 Update format-time-string documentation

2016-12-07  Sam Steingold  <sds@gnu.org>

	delete-trailing-whitespace: handle read-only text in buffer

	* lisp/simple.el (region-modifiable-p): New function.
	(delete-trailing-whitespace): Us it to avoid trying to delete read-only text.

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Fix minor quoting problems in doc strings

2016-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	Fix --enable-gcc-warnings --with-ns on Fedora

	* src/Makefile.in (NON_OBJC_CFLAGS): New macro.
	(ALL_OBJC_CFLAGS): Use it.
	(EMACS_CFLAGS): New macro, with most of the old ALL_CFLAGS.
	(ALL_CFLAGS, ALL_OBJC_FLAGS): Use it.

2016-12-07  Michael Albinus  <michael.albinus@gmx.de>

	Fix problems in quoting Tramp file names

	* lisp/net/tramp.el (tramp-get-remote-tmpdir): Add also hop to result.
	(tramp-unquote-shell-quote-argument): New defun.
	(tramp-shell-quote-argument):
	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file-out-of-band)
	(tramp-make-copy-program-file-name):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-file-acl, tramp-smb-handle-set-file-acl)
	(tramp-smb-shell-quote-argument): Use it.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-map-deletion-lines: Re-included it

	It was deleted in previous commit, but it's referenced
	by the macro 'define-ibuffer-op'.
	* lisp/ibuffer.el (ibuffer-map-deletion-lines): Reinclude it.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-unmark-all: simplify code

	* lisp/ibuffer.el (ibuffer-map-deletion-lines): Delete it.
	(ibuffer-unmark-all): Simplify code.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	define-ibuffer-filter: Discard wrong filters

	* lisp/ibuf-macs.el (define-ibuffer-filter): Do not store
	in 'ibuffer-filtering-qualifiers' a wrong filter (Bug#25042).
	* test/lisp/ibuffer-tests.el (ibuffer-test-Bug25042): Add test.

2016-12-07  Philipp Stephani  <p.stephani2@gmail.com>

	* lisp/emacs-lisp/easy-mmode.el (define-minor-mode): Fix docstring

	so that it matches the actual implementation.
	See https://lists.gnu.org/r/help-gnu-emacs/2016-04/msg00071.html

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-decompose-filter-group avoid unwanted side effects

	* lisp/ibuf-ext.el (ibuffer-delete-alist): Remove it.
	(ibuffer-remove-alist): New defun; it supersedes 'ibuffer-delete-alist'.
	All callers changed (Bug#25058).
	* test/lisp/ibuffer-tests.el (ibuffer-test-Bug25058): Add test.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-unmark-backward: Unmark the region when is active

	* lisp/ibuffer.el (ibuffer-unmark-backward):
	Use 'ibuffer-get-region-and-prefix'; call 'ibuffer-unmark-forward'
	with the region boundary as the first 2 arguments (Bug#24987).

2016-12-07  Nicolas Petton  <nicolas@petton.fr>

	Docstring improvement for seq-some (bug#25129)

	* lisp/emacs-lisp/seq.el (seq-some): Make the docstring less confusing
	  regarding the returned value.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	dired-unmark-backward: Unmark the region when is active

	* lisp/dired.el (dired-unmark-backward): Call 'dired-unmark' with
	a non-nil second argument (Bug#24986).

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	New test file for ediff

	Fix previous commit.
	* test/lisp/vc/ediff-ptch-tests.el: New test.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ediff-context-diff-label-regexp: Detect the end of second file

	* lisp/vc/ediff-ptch.el (ediff-context-diff-label-regexp): Skip
	'\n' in file names (Bug#25010).
	* test/lisp/vc/ediff-ptch-tests.el: New file.
	(ibuffer-test-bug25010): Add test for Bug#25010.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-decompose-filter: Avoid side effects on error

	* lisp/ibuf-ext.el (ibuffer-decompose-filter):
	Update 'ibuffer-filtering-qualifiers' only if there is no error (Bug#24997).
	* test/lisp/ibuffer-tests.el (ibuffer-test-Bug24997):
	Update test result as pass.

2016-12-07  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer: compare marks with EQ

	* lisp/ibuffer.el:
	(ibuffer-update-title-and-summary)
	(ibuffer-redisplay-current)
	(ibuffer-buffer-name-face, ibuffer-unmark-all)
	(ibuffer-count-deletion-lines, ibuffer-buffer-names-with-mark):
	Use 'eq' instead of 'char-equal' when comparing mark characters
	(Bug#25000).
	* test/lisp/ibuffer-tests.el (ibuffer-test-Bug25000):
	Update test result as pass.

2016-12-07  Christopher Genovese  <genovese@cmu.edu>

	ibuffer-saved-filters: Remove extra nesting level

	Fix Bug#25049.
	* lisp/ibuf-ext.el (ibuffer-saved-filters): Remove extra
	nesting level; add transparent setter to adjust old-format values;
	update doc string.
	(ibuffer-save-filters): Remove extra level of nesting
	in ibuffer-saved-filters values when saving new filters.
	(ibuffer-old-saved-filters-warning): New variable with
	clickable message with repair options to be displayed
	as a warning if 'ibuffer-repair-saved-filters' detects
	a format mismatch.
	(ibuffer-repair-saved-filters): Add new command to check and
	repair saved filters format.
	(ibuffer-included-in-filter-p, ibuffer-decompose-filter):
	Change access of saved filter data (cadr->cdr) to account
	for reduced nesting.
	* test/lisp/ibuffer-tests.el (ibuffer-save-filters):
	New test; check that filters are saved in the proper format.

2016-12-06  Paul Eggert  <eggert@cs.ucla.edu>

	Clean out some IRIX cruft

	* etc/MACHINES: Remove obsolete discussion of IRIX.
	* src/process.c (allocate_pty) [__sgi]: Remove SGI-specific code.
	(create_process) [HAVE_PTYS]: Don't worry about IRIX.
	* src/syntax.c (scan_sexps_forward): Remove obsolete comment.
	* src/unexelf.c [__sgi]: Don't include <syms.h>.
	(unexec) [__sgi]: Remove SGI-specific code.

2016-12-06  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	Simplify FUNCTIONP implementation

	* src/bytecode.c (exec_byte_code):
	* src/image.c (parse_image_spec):
	Prefer FUNCTIONP (x) to !NILP (Ffunctionp (x)).
	* src/eval.c (FUNCTIONP): Move here ...
	* src/lisp.h: ... from here.  No longer inline, as that
	bloats the text and does not help speed (at least on my platform).
	(functionp): Remove this name, since callers use FUNCTIONP.

2016-12-06  Noam Postavsky  <npostavs@gmail.com>

	Don't assume window-point and point are the same

	The function `cursor-sensor--detect' calls `bobp' to decide whether to
	check properties at (1- (window-point)).  However, (window-point) may be
	at beginning of buffer, even if (point) is not.  In this case an
	`args-out-of-range' error will be signaled (Bug#25104).

	* lisp/emacs-lisp/cursor-sensor.el (cursor-sensor--detect): Check the
	value of (window-point) against (point-min), rather than (bobp) to
	decide if (1- (window-point)) is accessible.

2016-12-06  Noam Postavsky  <npostavs@gmail.com>

	Give test-completion's PREDICATE the hashtable key

	For hashtable entries with symbol keys, `test-completion' would convert
	the key to a string before calling PREDICATE, unlike `try-completion'
	and `all-completions'.

	* src/minibuf.c (Ftest_completion): Pass original key from hashtable.

2016-12-06  Noam Postavsky  <npostavs@gmail.com>

	Give test-completion's PREDICATE full alist entry

	Since 2016-06-26 "Fix test-completion with completion-regexp-list", when
	calling test-completion with an alist collection, the predicate was
	recieving the string value instead of the alist entry (Bug#24966).

	* src/minibuf.c (Ftest_completion): Don't modify the found element, just
	test STRING against `completion-regexp-list'.
	* test/src/minibuf-tests.el: New tests for `try-completion',
	`all-completions', and `test-completion'.

2016-12-06  Noam Postavsky  <npostavs@gmail.com>

	Fix ert-tests when running compiled

	* test/lisp/emacs-lisp/ert-tests.el (ert-test-deftest): Don't test for
	specific macroexpansion, just check result of evaluation.
	(ert-test-record-backtrace): Don't hardcode representation of closure in
	expected backtrace, this lets the test succeed even when the test code
	is compiled.

	* lisp/emacs-lisp/ert.el (ert--expand-should-1): Also pass
	`byte-compile-macro-environment' to `macroexpand', this allows the
	`should' macro to properly handle macroexpansion of macros that were
	defined in the same file when it's being compiled (Bug #17851).

2016-12-06  Glenn Morris  <rgm@gnu.org>

	Make "g" in vc push/pull buffers re-push/pull

	* lisp/vc/vc-bzr.el (vc-bzr--pushpull):
	* lisp/vc/vc-git.el (vc-git--pushpull):
	* lisp/vc/vc-hg.el (vc-hg--pushpull):
	Set compile-command so that "g" works.  (Bug#11446)

2016-12-06  Paul Eggert  <eggert@cs.ucla.edu>

	Change two _Noreturn functions to return void

	This is a bit clearer than _Noreturn functions that (do not)
	return a non-void type.
	* src/callproc.c (call_process) [MSDOS]:
	Use 'status' local to record status.
	(child_setup): Return CHILD_SETUP_TYPE.
	* src/data.c, src/lisp.h (wrong_type_argument): Return void.
	All callers changed.
	* src/lisp.h (CHILD_SETUP_TYPE): New macro.

2016-12-05  Paul Eggert  <eggert@cs.ucla.edu>

	Fix GPG bug introduced by Oct file-missing change

	Problem with visiting nonexistent .gpg file
	reported by Herbert J Skuhra.
	* lisp/epa-file.el (epa-file--find-file-not-found-function):
	(epa-file-insert-file-contents, epa-file-write-region):
	Signal file-missing or file-error instead of epa-error.

2016-12-05  Glenn Morris  <rgm@gnu.org>

	Tweak recent flymake change

	* lisp/progmodes/flymake.el (flymake-report-fatal-status):
	Avoid double message when flymake-log-level >= 0.
	* doc/misc/flymake.texi (Customizable variables):
	No longer mention flymake-gui-warnings-enabled.

2016-12-05  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make TAB and M-TAB run widget-forward and widget-backward (bug#25091)

	* lisp/gnus/mm-decode.el (mm-convert-shr-links): Avoid `shr-next-link'
	and `shr-previous-link' so TAB and M-TAB run `widget-forward' and
	`widget-backward' instead (bug#25091).

2016-12-05  Michael Albinus  <michael.albinus@gmx.de>

	Remove compat code in Tramp

	* lisp/net/tramp.el (tramp-parse-time-months): Remove.

	* lisp/net/tramp-compat.el (top): Require parse-time.

	* lisp/net/tramp-smb.el (tramp-smb-read-file-entry):
	Use `parse-time-months'.

2016-12-05  Martin Rudalics  <rudalics@gmx.at>

	Don't try to split side windows in ibuffer (Bug#25115)

	* lisp/ibuffer.el (ibuffer-confirm-operation-on): Don't try to
	split a side window (Bug#25115).

2016-12-04  Paul Eggert  <eggert@cs.ucla.edu>

	* src/lisp.h: Update comment to kick -Og down the road.

2016-12-04  Mark Oteiza  <mvoteiza@udel.edu>

	More image-dired refactoring

	* lisp/image-dired.el: Remove TODO comment. This appears to have been
	implemented in 5d7433a "image-dired: Signal an error before calling a
	missing executable".
	(image-dired-cmd-create-standard-thumbnail-command): Use %p specifier.
	Add :version.
	(image-dired-display-thumbs, image-dired-create-thumbs): Use dolist and
	when. Remove superfluous call to image-dired-thumb-name. Move single nil
	binding and setq into dolist form.

2016-12-04  Michael Albinus  <michael.albinus@gmx.de>

	Implement quoting the local part of a remote file name

	* doc/emacs/files.texi (Quoted File Names):
	* etc/NEWS: Mention quoting the local part of a remote file name.

	* lisp/net/tramp.el (tramp-dissect-file-name): Check with
	`tramp-tramp-file-p'.
	(tramp-quoted-name-p, tramp-quote-name, tramp-unquote-name):
	New defsubst.
	(tramp-handle-substitute-in-file-name)
	(tramp-handle-make-auto-save-file-name): Handle quoted files.
	(tramp-shell-quote-argument): Unquote argument.

	* lisp/net/tramp-sh.el (tramp-sh-handle-file-truename):
	Handle quoted files.

	* test/lisp/net/tramp-tests.el (tramp--test-expensive-test): New defvar.
	(tramp--test-make-temp-name): New argument QUOTED.
	(tramp-test01-file-name-syntax)
	(tramp-test02-file-name-dissect)
	(tramp-test04-substitute-in-file-name)
	(tramp-test05-expand-file-name, tramp-test07-file-exists-p)
	(tramp-test08-file-local-copy)
	(tramp-test09-insert-file-contents)
	(tramp-test10-write-region, tramp-test11-copy-file)
	(tramp-test12-rename-file, tramp-test13-make-directory)
	(tramp-test14-delete-directory, tramp-test15-copy-directory)
	(tramp-test16-directory-files)
	(tramp-test17-insert-directory)
	(tramp-test18-file-attributes)
	(tramp-test19-directory-files-and-attributes)
	(tramp-test20-file-modes, tramp-test21-file-links)
	(tramp-test22-file-times, tramp-test23-visited-file-modtime)
	(tramp-test24-file-name-completion, tramp-test25-load)
	(tramp-test26-process-file, tramp-test27-start-file-process)
	(tramp-test28-shell-command, tramp-test30-vc-registered)
	(tramp-test31-make-auto-save-file-name)
	(tramp--test-check-files)
	(tramp-test35-asynchronous-requests): Test also quoted file names.
	(tramp--test-shell-command-to-string-asynchronously): Rename.
	(tramp-test29-environment-variables): Use it.

2016-12-04  Tino Calancha  <tino.calancha@gmail.com>

	Fix typo in dired-omit-case-fold-p

	* lisp/dired-x.el (dired-omit-case-fold-p):
	Write 'file-name-case-insensitive-p' instead of
	'file-name-case-sensitive-p'.
	Add declaration of 'file-name-case-insensitive-p'.

2016-12-04  Simen Heggestøyl  <simenheg@gmail.com>

	Add HTML5 attributes for the input element

	* lisp/textmodes/sgml-mode.el (html-tag-alist): Add HTML5 attributes
	for the input element.

2016-12-03  Glenn Morris  <rgm@gnu.org>

	Obsolete sc-load-hook in favor of eval-after-load

	* lisp/mail/supercite.el (sc-load-hook): Make obsolete.
	* doc/misc/sc.texi (Getting Connected, Filling Cited Text):
	No longer mention sc-load-hook.

2016-12-03  Glenn Morris  <rgm@gnu.org>

	Obsolete calendar-load-hook in favor of eval-after-load

	* lisp/calendar/calendar.el (calendar-load-hook): Make obsolete.
	(calendar): Doc fix - no longer mention calendar-load-hook.
	* doc/emacs/cal-xtra.texi (Calendar Customizing):
	No longer mention calendar-load-hook.
	* doc/lispintro/emacs-lisp-intro.texi (X11 Colors):
	Replace calendar-load-hook in example with with-eval-after-load.

2016-12-03  Glenn Morris  <rgm@gnu.org>

	Fix markup in read-multiple-choice doc (Bug#25102)

	* lisp/emacs-lisp/subr-x.el (read-multiple-choice): Doc fix.

2016-12-03  Glenn Morris  <rgm@gnu.org>

	Stop flymake using dialog boxes for errors (Bug#16622)

	* lisp/progmodes/flymake.el (flymake-gui-warnings-enabled):
	Mark as obsolete.
	(flymake-display-warning): Turn into an obsolete alias.
	(flymake-report-fatal-status): Just use message for a warning that
	was formerly displayed by default.

2016-12-03  Mark Oteiza  <mvoteiza@udel.edu>

	Clean up keymap and menu code in image-dired

	A function to populate these maps is not necessary, just define the maps
	once and for all.
	* lisp/image-dired.el (image-dired-show-all-from-dir): Make prompt
	clearer and in the spirit of dired's.
	(image-dired-define-display-image-mode-keymap):
	(image-dired-define-thumbnail-mode-keymap): Remove.
	(image-dired-thumbnail-mode-map):
	(image-dired-thumbnail-mode-line-up-map):
	(image-dired-thumbnail-mode-tag-map): Assimilate all define-key and mode
	menu code from the aforementioned removed functions.  Reorder so that
	the definitions are inherited properly.
	(image-dired-display-current-image-sized): Fix erroneous message.
	(image-dired-thumbnail-mode):
	(image-dired-display-image-mode): Remove defunct call.

2016-12-03  Michael Albinus  <michael.albinus@gmx.de>

	Mention `file-name-case-insensitive-p' as magic file name

	* doc/lispref/files.texi (Magic File Names):
	Mention `file-name-case-insensitive-p'.

	* doc/lispref/variables.texi (Connection Local Variables):
	Fix typo.

2016-12-03  Mark Oteiza  <mvoteiza@udel.edu>

	Clean up uses of cl-foo in image-dired

	Both instances here are just emulating cl-find-if.
	* lisp/image-dired.el: Use cl-lib at compile time.
	(image-dired-dired-toggle-marked-thumbs): Don't need let* at the top.
	Replace the cl-foo instances with equivalent cl-loops.

2016-12-03  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warnings in nt/*.c files

	* nt/cmdproxy.c (fail, vfprintf, fprintf, printf, warn)
	(console_event_handler): Add prototypes.
	(canon_filename, skip_space, skip_nonspace, get_next_token)
	(batch_file_p, search_dir, make_absolute, try_dequote_cmdline)
	(spawn, get_env_size): Now static.
	* nt/ddeclient.c (DdeCallback): Provide prototype.
	* nt/addpm.c (DdeCallback): Provide prototype.
	(add_registry): Now static.

2016-12-02  Mark Oteiza  <mvoteiza@udel.edu>

	Display window before calculating width

	* lisp/image-dired.el (image-dired-display-thumbs): Display the buffer
	before calling image-dired-line-up and friends, which in turn calculate
	the window width. Otherwise, the thumbnail layout will be wrong in
	a side-by-side split.

2016-12-02  Mark Oteiza  <mvoteiza@udel.edu>

	Use pop-to-buffer-same-window

	* lisp/image-dired.el (image-dired-dired-with-window-configuration):
	(image-dired-dired-edit-comment-and-tags): Instead of switch-to-buffer,
	use pop-to-buffer-same-window cf. Bug#22244.
	(image-dired-forward-image, image-dired-backward-image): Ignore unused.

2016-12-02  Noam Postavsky  <npostavs@gmail.com>

	Document watchpoints

	* doc/lispref/debugging.texi (Variable Debugging):
	* doc/lispref/variables.texi (Watching Variables): New section.
	* etc/NEWS: Add entry for watchpoints

2016-12-02  Noam Postavsky  <npostavs@gmail.com>

	Add tests for watchpoints

	* test/src/data-tests.el (data-tests-variable-watchers):
	(data-tests-local-variable-watchers): New tests.

2016-12-02  Noam Postavsky  <npostavs@gmail.com>

	Ensure redisplay using variable watcher

	This replaces looking up the variable name in redisplay--variables when
	setting it.

	* lisp/frame.el: Replace redisplay--variables with add-variable-watcher
	calls.
	* src/xdisp.c (Fset_buffer_redisplay): Rename from maybe_set_redisplay,
	set the redisplay flag unconditionally.
	(Vredisplay__variables): Remove it.
	* src/data.c (set_internal): Remove maybe_set_redisplay call.

2016-12-02  Noam Postavsky  <npostavs@gmail.com>

	Add function to trigger debugger on variable write

	* lisp/emacs-lisp/debug.el (debug-on-variable-change):
	(debug--variable-list):
	(cancel-debug-on-variable-change): New functions.
	(debugger-setup-buffer): Add watchpoint clause.

2016-12-02  Noam Postavsky  <npostavs@gmail.com>

	Show watchpoints when describing variables

	* src/data.c (Fget_variable_watchers): New function.
	* lisp/help-fns.el (describe-variable): Use it to detect watching
	functions.

2016-12-02  Noam Postavsky  <npostavs@gmail.com>

	Add lisp watchpoints

	This allows calling a function whenever a symbol-value is changed.

	* src/lisp.h (lisp_h_SYMBOL_TRAPPED_WRITE_P):
	(SYMBOL_TRAPPED_WRITE_P): New function/macro.
	(lisp_h_SYMBOL_CONSTANT_P): Check for SYMBOL_NOWRITE specifically.
	(enum symbol_trapped_write): New enumeration.
	(struct Lisp_Symbol): Rename field constant to trapped_write.
	(make_symbol_constant): New function.

	* src/data.c (Fadd_variable_watcher, Fremove_variable_watcher):
	(set_symbol_trapped_write, restore_symbol_trapped_write):
	(harmonize_variable_watchers, notify_variable_watchers): New functions.

	* src/data.c (Fset_default): Call `notify_variable_watchers' for trapped
	symbols.
	(set_internal): Change bool argument BIND to 3-value enum and call
	`notify_variable_watchers' for trapped symbols.

	* src/data.c (syms_of_data):
	* src/data.c (syms_of_data):
	* src/font.c (syms_of_font):
	* src/lread.c (intern_sym, init_obarray):
	* src/buffer.c (syms_of_buffer): Use make_symbol_constant.

	* src/alloc.c (init_symbol):
	* src/bytecode.c (exec_byte_code): Use SYMBOL_TRAPPED_WRITE_P.
	* src/data.c (Fmake_variable_buffer_local, Fmake_local_variable):
	(Fmake_variable_frame_local):
	* src/eval.c (Fdefvaralias, specbind): Refer to Lisp_Symbol's
	trapped_write instead of constant.
	(Ffuncall): Move subr calling code into separate function.
	(funcall_subr): New function.

2016-12-02  Glenn Morris  <rgm@gnu.org>

	Starting doc of user options with "*" is long obsolete

	* lisp/battery.el (battery-upower-device): Doc fix.

2016-12-02  Nicolas Petton  <nicolas@petton.fr>

	Fix bug#25087

	* etc/themes/manoj-dark-theme.el: Fix two typos.

	(cherry picked from commit 66d6e7e9ecf5e481f8c2c3a4f88411f66c869a6e)

2016-12-02  Reuben Thomas  <rrt@sc3d.org>

	Fix docstrings to have a complete sentence in first line

	* lisp/dired-x.el (dired-omit-case-fold, dired-omit-case-fold-p): Fix
	docstrings.

2016-12-02  Reuben Thomas  <rrt@sc3d.org>

	Remove obsolete comments and commented code from dired-x.el

	* lisp/dired-x.el (dired-mark-sexp): Remove a query from 1993 and its
	1997 answer about whether dired-mark-sexp is used.
	* lisp/dired-x.el (dired-buffers-for-dir-exact): Remove this function
	commented out since before dired-x.el was added to RCS in 1994.

2016-12-02  Reuben Thomas  <rrt@sc3d.org>

	Remove pre-customize dired-x.el documentation

	* lisp/dired-x.el (Commentary): Remove USAGE section explaining how to
	use dired-x from .emacs.  It is now fully customizable.
	* lisp/dired-x.el (dired-guess-shell-alist-user): Remove explanation of
	how to set this custom variable in .emacs.  It should be customized.

2016-12-02  Reuben Thomas  <rrt@sc3d.org>

	Allow files to be matched case-sensitively in dired-x

	* lisp/dired-x.el (dired-mark-unmarked-files): Add an argument which
	controls case folding for matching the regex (Bug#18716).
	(dired-omit-case-fold): New variable.  Defaults to `t' on case-sensitive
	systems, `nil' otherwise.
	(dired-mark-omitted, dired-omit-expunge): Use dired-omit-case-fold.
	* doc/misc/dired-x.texi, etc/NEWS: Document dired-omit-case-fold.

2016-12-02  Reuben Thomas  <rrt@sc3d.org>

	Add support for curly quotation marks to electric-pair-mode

	* lisp/elec-pair.el (electric-pair-pairs, electric-pair-text-pairs): Add
	entries for left/right single/double quotation marks, from
	electric-quote-chars. Note that this is safe for single quotation marks,
	unlike with the ASCII apostrophe, since, although the right quotation
	mark can be used as an apostrophe, it is the left quotation mark that is
	typed to get a pair (Bug#24901).

2016-12-02  Nicolas Petton  <nicolas@petton.fr>

	Fix bug#25087

	* etc/themes/manoj-dark-theme.el: Fix two typos.

2016-12-02  Michael Albinus  <michael.albinus@gmx.de>

	Handle quoted file names in Tramp

	* lisp/net/tramp.el (tramp-file-name-handler): Handle also the
	case the file name is quoted.  This is not trapped by the
	reassigned `tramp-file-name-regexp' anymore.

2016-12-02  Evgeny Zajcev  <lg.zevlg@gmail.com>

	* lisp/battery.el: Add 'battery-upower' -- very fast battery status.

2016-12-02  Evgeny Zajcev  <lg.zevlg@gmail.com>

	Support for rawrgb images using imagemagick

	* src/image.c (imagemagick_load_image): Set wand size before loading
	blob when ':width' and ':height' are provided.

	* lisp/image.el (image-format-suffixes): Add 'image/x-rgb'.

2016-12-02  Nikolay Kudryavtsev  <nikolay.kudryavtsev@gmail.com>

	Fix 'sql-connect' on first invocation

	* lisp/progmodes/sql.el (sql-connect): Reorder code which sets
	param-var.  (Bug#19452)

2016-12-02  Eli Zaretskii  <eliz@gnu.org>

	* lisp/vc/ediff-util.el (ediff-janitor): Doc fix.  (Bug#25046)

2016-12-02  Eli Zaretskii  <eliz@gnu.org>

	Improve indexing of 'man'

	* doc/emacs/programs.texi (Man Page): Index 'man', not
	'manual-entry', as the latter is an alias for the former.
	Suggested by Hong Xu <hong@topbug.net>.  (Bug#25033)

2016-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	Port to Sun C 5.14

	Backport from master.  Sun C 5.14 supports C11 but not GCC
	extensions, and so refuses to compile Emacs without this patch.
	* src/alloc.c (lmalloc, lrealloc): Don't use INT_ADD_WRAPV on
	size_t, as in general this macro is restricted to signed types.

2016-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix type typo on Solaris

	* src/sysdep.c (system_process_attributes) [SOLARIS2 && HAVE_PROCFS]:
	Fix type mismatch, caught by --enable-check-lisp-object-type.

2016-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2016-11-27 md4,md5,sha*: tune for recent glibc _STRING_INLINE_unaligned
	2016-11-21 snippet/c++defs: Simplify _GL_CXXALIAS_* macros.
	* build-aux/snippet/c++defs.h:
	* lib/md5.c, lib/sha1.c, lib/sha256.c, lib/sha512.c:
	Copy from gnulib.

2016-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	Make struct font_drivers read-only

	This simplifies the code a bit, and makes the structs more
	shareable and less likely to become corrupt.
	* src/alloc.c (cleanup_vector):
	* src/font.c (valid_font_driver, font_prepare_cache)
	(font_finish_cache, font_get_cache, font_clear_cache)
	(register_font_driver, font_update_drivers):
	* src/font.h (struct font, struct font_driver_list)
	(valid_font_driver):
	struct font_drivers are now const.
	* src/font.c, src/ftcrfont.c, src/ftfont.c, src/nsfont.m, src/xfont.c:
	Omit no-longer-necessary decls.
	* src/ftcrfont.c (syms_of_ftcrfont):
	* src/ftxfont.c (syms_of_ftxfont):
	* src/xftfont.c (syms_of_xftfont):
	Omit no-longer-necessary initialization code.
	* src/ftcrfont.c (ftcrfont_driver):
	* src/ftfont.c (ftfont_driver):
	* src/ftxfont.c (ftxfont_driver):
	* src/macfont.m (macfont_driver):
	* src/nsfont.m (nsfont_driver):
	* src/xfont.c (xfont_driver):
	* src/xftfont.c (xftfont_driver):
	Use C99-style initializer for ease of maintenance, and make it const.
	* src/ftcrfont.c, src/ftxfont.c, src/xftfont.c:
	Refer to functions like ftfont_text_extents directly.
	* src/ftfont.c (ftfont_get_cache, ftfont_list, ftfont_list_family)
	(ftfont_has_char, ftfont_encode_char, ftfont_text_extents)
	(ftfont_get_bitmap, ftfont_anchor_point, ftfont_otf_capability)
	(ftfont_variation_glyphs, ftfont_filter_properties)
	(ftfont_combining_capability):
	* src/xfont.c (xfont_get_cache):
	Now extern, so that other modules’ struct font_drivers can use
	them directly.
	* src/macfont.m (macfont_descriptor_entity):
	* src/nsfont.m (nsfont_open):
	Use constant directly; this is clearer.

2016-12-01  Richard Stallman  <rms@gnu.org>

	Fix mail-combine-fields

	* lisp/mail/sendmail.el (mail-combine-fields): Call `save-excursion' to
	avoid losing our place in the search loop.

	(cherry picked from commit 5fbba6cceaf843cfca449eb000a0a65243b61808)

2016-12-01  Helmut Eller  <eller.helmut@gmail.com>

	Forth related improvements for etags

	Generate correct tags names for things like "(foo)".
	Previously "(foo" created.

	Fix a bug where a tag for "-bar" was created when encountering things
	like "create-bar".

	Recognize more words from the Forth-2012 Standard.

	* lib-src/etags.c (Forth_words): Check for whitespace after defining
	words.  Create tag with make_tag instead of get_tag to avoid notiname
	which isn't appropriate for Forth.

	* test/manual/etags/forth-src/test-forth.fth: Add some test cases.
	* test/manual/etags/ETAGS.good_1:
	* test/manual/etags/ETAGS.good_2:
	* test/manual/etags/ETAGS.good_3:
	* test/manual/etags/ETAGS.good_4:
	* test/manual/etags/ETAGS.good_5:
	* test/manual/etags/ETAGS.good_6:
	* test/manual/etags/CTAGS.good: Adapt to the changes in etags.c and
	new test cases.

2016-12-01  Eli Zaretskii  <eliz@gnu.org>

	Fix bugs with buffer-local tags tables

	* lisp/progmodes/etags.el (visit-tags-table): After
	'visit-tags-table-buffer' returns, retrieve the value of
	'tags-file-name' from the buffer we started in.  Force
	recomputation of 'tags-completion-table' next time it is used,
	since the list of tags table has changed.
	(visit-tags-table-buffer): Accept an additional optional argument
	CBUF, the buffer in which to start processing, and switch to that
	buffer if CBUF is non-nil.  All callers changed to supply a
	non-nil CBUF when they call 'visit-tags-table-buffer' in a loop.
	Doc fix.
	(tags-completion-table): Accept an optional argument, the buffer
	for which to build 'tags-completion-table', and build that
	buffer's completion table.
	(tags-lazy-completion-table): Pass the current buffer to
	'tags-completion-table'.
	(tags-file-name): Don't say in the doc string that setting this
	variable directly is enough; say that 'visit-tags-table' should be
	used for that.  (Bug#158)  (Bug#17326)  (Bug#23164)

	* doc/emacs/maintaining.texi (Select Tags Table): Delete the
	advice to set 'tags-file-name' directly.

	* test/lisp/progmodes/etags-tests.el: New tests.

2016-12-01  Martin Rudalics  <rudalics@gmx.at>

	Fix documentation of `window-combination-resize'

	* src/window.c (Vwindow_combination_resize): Fix doc-string.
	* doc/lispref/windows.texi (Recombining Windows): Fix
	documentation of `window-combination-resize'.

2016-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	* src/lisp.h (LISP_INITIALLY_ZERO): Remove.

	All uses replaced by LISPSYM_INITIALLY.

2016-12-01  Paul Eggert  <eggert@cs.ucla.edu>

	Make Cairo safer for --enable-gcc-warnings

	* src/image.c (xcolor_to_argb32, pbm_load, jpeg_load_body, gif_load):
	Avoid overflow warnings about ‘0xff << 24’.
	(xpm_load, gif_load): Avoid unnecessary casts.
	(gif_load): Fewer ifdefs.

2016-11-30  Thierry Volpiatto  <thierry.volpiatto@gmail.com>

	Fix Condition in kbd_buffer_store_buffered_event (bug#19547).

	* src/keyboard.c (kbd_buffer_store_buffered_event): Should be NILP and not
	!NILP.

2016-11-29  Noam Postavsky  <npostavs@gmail.com>

	Fix previous commit

	* lisp/vc/diff-mode.el (diff-refine-hunk): Make sure to go to beginning
	of hunk before calling `diff-hunk-style'.

2016-11-29  Noam Postavsky  <npostavs@gmail.com>

	* lisp/vc/diff-mode.el (diff-refine-hunk): Remove redundant variable.

2016-11-29  Glenn Morris  <rgm@gnu.org>

	Use archive-mode for .cbr files

	* lisp/files.el (auto-mode-alist): Add cbr.  (Bug#24994)

2016-11-29  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify Sun C 5.14

	* src/lisp.h (enum Lisp_Save_Type): Put SAVE_UNUSED,
	SAVED_INTEGER, SAVE_FUNCPOINTER, SAVE_POINTER, and SAVE_OBJECT
	into this enum rather than into an anonymous enum.  This avoids
	diagnostics from Sun C 5.14 and is a bit clearer anyway.

2016-11-29  Paul Eggert  <eggert@cs.ucla.edu>

	Adjust lwlib to recent config.h change

	* lwlib/lwlib-Xaw.c: Include <stdlib.h> for 'abort' (Bug#24506).

2016-11-29  Paul Eggert  <eggert@cs.ucla.edu>

	* src/eval.c (clobbered_eassert): Check E's syntax.

2016-11-29  Michael Albinus  <michael.albinus@gmx.de>

	Improve user retrieval from auth-source in Tramp

	* lisp/net/tramp.el (tramp-read-passwd, tramp-clear-passwd):
	Use user for auth-source request only in case it exists.

2016-11-29  Katsumi Yamaoka  <yamaoka@jpl.org>

	shr.el: Don't render a normal table twice

	* lisp/net/shr.el (shr-collect-extra-strings-in-table):
	Don't render a table if it is called for the first time,
	IOW, recognize it to never be invalid (bug#25051).

2016-11-29  Bogdan Creanga  <bogdan.creanga@gmail.com>  (tiny change)

	Typo fixes in elisp manual

	* doc/lispref/sequences.texi: Add missing '4' in result (Bug#25047).
	* doc/lispref/strings.texi (Text Comparison): Avoid duplicate
	definitions of 'string-prefix-p' and 'string-suffix-p'.
	* doc/lispref/symbols.texi (Definitions): Pluralize 'definitions'.

2016-11-28  Dima Kogan  <Dmitriy.Kogan@jpl.nasa.gov>

	Improve diff-mode navigation/manipulation

	This is Bug #17544.

	Navigation and use of diff buffers had several annoying corner cases
	that this patch fixes.  These corner cases were largely due to
	inconsistent treatment of file headers.  Say you have a diff such as
	this:

	 --- aaa
	 +++ bbb
	 @@ -52,7 +52,7 @@
	 hunk1
	 @@ -74,7 +74,7 @@
	 hunk2
	 --- ccc
	 +++ ddd
	 @@ -608,6 +608,6 @@
	 hunk3
	 @@ -654,7 +654,7 @@
	 hunk4

	The file headers here are the '---' and '+++' lines.  With the point on
	such a line, hunk operations would sometimes refer to the next hunk and
	sometimes to the previous hunk.  Most of the time it would be the
	previous hunk, which is not what the user would expect.  This patch
	consistently treats such headers as the next hunk.  So with this patch,
	if the point is on the '--- ccc' line, the point is seen as referring to
	hunk3.

	Specific behaviors this fixes are:

	1. It should be possible to place the point in the middle of a diff
	buffer, and press M-k repeatedly to kill hunks in the order they appear
	in the buffer.  With the point on hunk1, M-k M-k would kill hunk1 then
	hunk2.  With the point on hunk3, it would kill hunk3 then hunk4; this is
	fine.  However, with the point on hunk2, it'd kill hunk2 then hunk1.
	This is fixed by this patch.

	2. Similarly, it should be possible to apply hunks in order.  Previously
	with the point at the start, C-c C-a would apply the hunk1, then move
	the point to the first @@ header, and thus C-c C-a would try to apply
	the same hunk again.

	* lisp/vc/diff-mode.el (diff--wrap-navigation): New function to add better
	navigation logic to diff-{hunk,file}-{next,prev}.
	(diff-hunk-next, diff-hunk-prev):
	(diff-file-next, diff-file-prev): Better navigation logic if
	skip-hunk-start is true, which happens when called interactively.
	(diff-bounds-of-hunk, diff-find-source-location):
	(diff-apply-hunk, diff-current-defun, diff-refine-hunk): Small tweaks to
	improve hunk navigation.

2016-11-28  Noam Postavsky  <npostavs@gmail.com>

	Upcase Path and ComSpec in process-environment

	Since 2016-07-18 "Keep w32 environment settings internal only", the
	upcasing of environment variables "Path" and "ComSpec" occurred after
	initializing process-environment.  This meant that Lisp code trying to
	override "PATH" environment had no effect (Bug #24956).

	* src/w32.c (init_environment): Upcase the "Path" and "ComSpec" entries
	in Vprocess_environment.

2016-11-28  Philipp Stephani  <phst@google.com>

	Guard terminal parameter in XTerm mouse mode

	It has been observed (in the HTerm terminal emulator) that the
	event stored in the 'xterm-mouse-last-down' terminal parameter gets
	overwritten during a mouse drag operation, causing Emacs to attempt to
	synthesize the non-existing <drag-mouse-0> event.  Copy the event into
	the terminal parameter to protect against such modifications.

	* lisp/xt-mouse.el (xterm-mouse-translate-1): Guard against modification
	of input event list.

2016-11-28  Paul Eggert  <eggert@cs.ucla.edu>

	Fix template for module functions

	Reported by Syohei YOSHIDA (Bug#24932).
	* modules/modhelp.py (TEMPLATES):
	c_func’s 2nd arg is ptrdiff_t, not int.

2016-11-27  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify gcc -Wswitch.

	* src/keyboard.c (kbd_buffer_store_buffered_event):
	Move initialization into default case.

2016-11-27  Thierry Volpiatto  <thierry.volpiatto@gmail.com>

	Reuse already existing lisp symbols for ignore_event (bug#19547).

	* lisp/subr.el (while-no-input-ignore-events): Use them instead.
	* src/keyboard.c (kbd_buffer_store_buffered_event):
	Use help-echo for HELP_EVENT, iconify-frame for ICONIFY_EVENT,
	and make-frame-visible for DEICONIFY_EVENT.
	(syms_of_keyboard): Remove unneeded symbols.

2016-11-27  Thierry Volpiatto  <thierry.volpiatto@gmail.com>

	Allow configuring which event throw-on-input should ignore (bug#19547).

	* src/keyboard.c (kbd_buffer_store_buffered_event):
	Translate event to corresponding symbol from `while-no-input-ignore-events`
	and check them with Fmemq.
	(syms_of_keyboard): Declare new lisp variable `while-no-input-ignore-events`
	and its symbols.

	* lisp/subr.el (while-no-input-ignore-events): Add default values.

	* doc/lispref/commands.texi (Event Input Misc):
	Document while-no-input-ignore-events.
	* etc/NEWS: Same.

2016-11-26  Tino Calancha  <tino.calancha@gmail.com>

	ash, lsh avoid code duplication

	See discussion in:
	https://lists.gnu.org/r/emacs-devel/2016-11/msg00469.html
	* src/data.c (ash_lsh_impl): New function.
	(ash, lsh): Use it.

2016-11-26  Simen Heggestøyl  <simenheg@gmail.com>

	Add will change module to CSS property list

	* lisp/textmodes/css-mode.el (css-property-alist)
	(css-value-class-alist): Add new property and value class from CSS
	Will Change Module.

2016-11-26  Paul Eggert  <eggert@cs.ucla.edu>

	Don't access pointers to freed storage in regex.c

	Remove __BOUNDED_POINTERS__ code, which does not work with
	-fcheck-pointer-bound and which has undefined behavior anyway.
	Problem found when trying to port to gcc -fcheck-pointer-bounds.
	(This code was removed from glibc and gnulib regex.c many years ago.)
	* src/regex.c (ELSE_EXTEND_BUFFER_HIGH_BOUND): Remove.
	(EXTEND_BUFFER): Use a more-portable approach that avoids
	undefined behavior due to inspecting pointers to freed storage.

2016-11-25  Paul Eggert  <eggert@cs.ucla.edu>

	Port build to gcc -fcheck-pointer-bounds

	This does not let Emacs run, just build.
	* lib-src/etags.c (main):
	* lib-src/profile.c (main):
	Use return, not exit.
	* src/bytecode.c (BYTE_CODE_THREADED) [__CHKP__]:
	Do not define, as -fcheck-pointer-bounds is incompatible with taking
	addresses of labels.
	* src/menu.c (Fx_popup_dialog): Use eassume, not eassert,
	to pacify gcc -fcheck-pointer-bounds -Wnull-dereference.

2016-11-25  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/emacs-lisp/subr-x.el (hash-table-keys, hash-table-values): Use cl-loop.

2016-11-25  Simen Heggestøyl  <simenheg@gmail.com>

	* lisp/rot13.el: Use lexical-binding

2016-11-25  Mark Oteiza  <mvoteiza@udel.edu>

	Add "using" to cl-loop debug spec (Bug#24750)

	* lisp/emacs-lisp/cl-macs.el (cl-loop): Add element to account for
	"using" hash table clause.

2016-11-25  Hong Xu  <hong@topbug.net>  (tiny change)

	Allow user control of progress messages in cpp.el

	* lisp/progmodes/cpp.el (cpp-message-min-time-interval): New defcustom.
	(cpp-progress-time): Use 'cpp-message-min-time-interval'.  Improve
	the doc string.
	(cpp-highlight-buffer): Use 'cpp-progress-message' instead of
	'message' to print messages.  (Bug#24861)

2016-11-25  Wojciech Gac  <wojciech.s.gac@gmail.com>  (tiny change)

	New input method 'polish-prefix'

	* lisp/leim/quail/latin-pre.el ("polish-prefix"): New input
	method.  (Bug#24967)

	* etc/NEWS: Mention the new input method.

2016-11-25  Damien Cassou  <damien@cassou.me>

	* lisp/isearch.el: Add 'provide'.  (Bug#25026)

2016-11-25  Philippe Vaucher  <philippe.vaucher@gmail.com>

	Add missing 'provide's in preloaded packages

	* lisp/composite.el:
	* lisp/replace.el:
	* lisp/textmodes/text-mode.el: Add provide statement.  (Bug#24985)

2016-11-24  Alan Mackenzie  <acm@muc.de>

	Handle correctly an (undocumented) bare mode in hack-local-variables.

	lisp/files.el (hack-local-variables-prop-line): When a file's first line
	contains only a mode specification without the string "mode:", return the mode
	symbol only when `handle-mode' is t.

2016-11-23  Dima Kogan  <dima@secretsauce.net>

	Clarify ediff-directories prompt

	* lisp/vc/ediff-mult.el (ediff-filegroup-action):
	* lisp/vc/ediff.el (ediff-directories,ediff-directory-revisions,
	ediff-directories3, ediff-merge-directories,
	ediff-merge-directories-with-ancestor, ediff-merge-directory-revisions,
	ediff-merge-directory-revisions-with-ancestor): Clarify prompt message for
	filename filter in interactive ediff. The new message makes it clear what is
	being filtered

2016-11-23  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/ibuffer-tests.el (ibuffer-test-Bug24997): Add test for Bug#24997.

2016-11-23  Ulf Jasper  <ulf.jasper@web.de>

	Fix Bug#24199.

	* lisp/calendar/icalendar.el (icalendar--do-create-ical-alarm): Quote
	  bracket in doc string (make checkdoc happy).
	  (icalendar-import-buffer),
	  (icalendar-import-buffer),
	  (icalendar--convert-ical-to-diary),
	  (icalendar--add-diary-entry): Rename argument diary-file to
	  diary-filename (make checkdoc happy).
	  (icalendar--convert-recurring-to-diary): Take care of byday-clause
	  in monthly recurring events.  Actually fix Bug#24199.

	* test/lisp/calendar/icalendar-tests.el (icalendar-import-bug-24199): New.

2016-11-23  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/ibuffer-tests.el (ibuffer-test-Bug25000): Add test for Bug25000.

2016-11-22  Philipp Stephani  <phst@google.com>

	Comint: new user option for C-c M-r and C-c M-s

	This option allows the user to specify where to place point after these
	commands.

	* lisp/comint.el (comint-move-point-for-matching-input): New user option.
	(comint-previous-matching-input-from-input): Use user option.

2016-11-22  Michael Albinus  <michael.albinus@gmx.de>

	Add tramp-eshell-directory-change to eshell-first-time-mode-hook

	* lisp/net/tramp.el (tramp-eshell-directory-change): Add it also to
	`eshell-first-time-mode-hook'.

2016-11-22  Michael Albinus  <michael.albinus@gmx.de>

	Dump also connection local variables in Tramp bug reports

	* lisp/net/tramp-cmds.el (tramp-bug, tramp-append-tramp-buffers):
	Dump also connection local variables.

2016-11-21  Mark Oteiza  <mvoteiza@udel.edu>

	Make sure elided long buffer names have ellipses added (Bug#24972)

	* lisp/ibuffer.el (ibuffer-compile-make-eliding-form): Restore the
	string concat, and chop "strvar" less the width of the ellipsis.
	(ibuffer-compile-make-substring-form): Add space as padding, to fix
	off-by-one in alignment.

2016-11-21  Tino Calancha  <tino.calancha@gmail.com>

	Buffer-menu-no-header: Detect a fake header

	* lisp/buff-menu.el (Buffer-menu-no-header): Use
	'tabulated-list-header-overlay-p' (Bug#24855).

2016-11-21  Tino Calancha  <tino.calancha@gmail.com>

	buff-menu: Add command to unmark all buffers

	Bind 'U' in buff-menu, bs and electric-buff-menu to commands
	to unmark all buffers (Bug#24880).
	* lisp/emacs-lisp/tabulated-list.el (tabulated-list-header-overlay-p):
	New predicate; return non-nil if tabulated-list has a fake header.
	* lisp/buff-menu.el (Buffer-menu-unmark-all-buffers):
	New command; remove all flags that use a particular mark from all the lines.
	Bind it to 'M-DEL'.
	(Buffer-menu-unmark-all):
	New command; remove all flags from all the lines.  Bind it to 'U'.
	(Buffer-menu-marker-char, Buffer-menu-del-char): New variables.
	(Buffer-menu-delete, Buffer-menu-mark): Use them.
	(Buffer-menu-mode-map): Update menus.
	(Buffer-menu-mode): Update mode doc.
	* lisp/bs.el (bs-unmark-all, bs-unmark-previous): New commands.
	(bs-mode-map): Bind them to 'U' and '<backspace>' respectively.
	(bs-mode): Update mode doc.
	* lisp/ebuff-menu.el (electric-buffer-menu-mode-map):
	Bind Buffer-menu-unmark-all to 'U' and Buffer-menu-unmark-all-buffers
	to 'M-DEL'.
	(bs--down, bs-down, bs--up, bs-up, bs-unmark-current, bs-mark-current):
	Use point instead of cursor in doc string.
	(electric-buffer-list): Update mode doc.
	* doc/emacs/buffers.texi (Several Buffers): Mention Buffer-menu-unmark-all
	and Buffer-menu-unmark-all-buffers.

2016-11-21  Mark Oteiza  <mvoteiza@udel.edu>

	Revert "* lisp/htmlfontify.el (hfy-force-fontification): Use font-lock-ensure."

	This reverts commit 10efaf718c5258af0ba62077cf4e2aaf9fb90227.

2016-11-21  Mark Oteiza  <mvoteiza@udel.edu>

	Port htmlfontify to cl-lib

	* lisp/htmlfontify.el: (hfy-box-to-border-assoc, hfy-box-to-style):
	(hfy-decor, hfy-face-to-style-i, hfy-face-at, hfy-merge-adjacent-spans):
	(hfy-fontify-buffer, htmlfontify-string, hfy-mark-tag-names): Replace
	instances of cl aliases with their cl-lib counterparts.

2016-11-21  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/htmlfontify.el (hfy-force-fontification): Use font-lock-ensure.

2016-11-21  Paul Eggert  <eggert@cs.ucla.edu>

	Fix another CANNOT_DUMP problem

	Reported by Robert Pluim in:
	https://lists.gnu.org/r/emacs-devel/2016-11/msg00468.html
	* src/emacs.c (might_dump) [CANNOT_DUMP]: Move enum decl from here ...
	* src/lisp.h: ... to here.

2016-11-21  Mark Oteiza  <mvoteiza@udel.edu>

	Add further consideration to string-width (Bug#24972)

	* lisp/ibuffer.el (ibuffer-compile-make-eliding-form):
	(ibuffer-compile-make-substring-form): Use truncate-string-to-width.

2016-11-21  Katsumi Yamaoka  <yamaoka@jpl.org>

	Don't collect strings existing out of <tr>...</tr>

	* lisp/net/shr.el (shr-collect-extra-strings-in-table):
	Don't collect strings existing out of <tr>...</tr> to avoid
	duplication with what `shr-tag-table' renders.

2016-11-20  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/gnus/gnus-mh.el (gnus-summary-save-in-folder): Slightly change
	the last commit.

2016-11-20  Mike Kupfer  <m.kupfer@acm.org>

	Add a variable to pass additional options to rcvstore

	* lisp/gnus/gnus-mh.el (gnus-rcvstore-options): New variable.
	(gnus-summary-save-in-folder): Include gnus-rcvstore-options in
	the arguments that are passed to rcvstore.

	cf. <nntp://news.gmane.org/gmane.emacs.gnus.general/87263>
	and followups, i.e., ding mailing list.

2016-11-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix undefined refs on some GNU/Linux hosts

	Problem reported by Ken Raeburn in:
	https://lists.gnu.org/r/emacs-devel/2016-11/msg00463.html
	* src/emacs.c (heap_bss_diff) [CANNOT_DUMP]: Remove, as this is
	not needed in the CANNOT_UNDUMP case.  All uses removed.  This
	removes unwanted references to my_endbss and my_endbss_static,
	which are not optimized away on some platforms.

2016-11-20  Paul Eggert  <eggert@cs.ucla.edu>

	Make CANNOT_DUMP work better on GNU/Linux

	Clean up some of the bitrot affecting the CANNOT_DUMP code.  This
	lets the build succeed again, and fixes the testing framework so
	that most test cases now pass.  About twenty test cases still
	fail, though, and we still have Bug#24974.
	* configure.ac (CANNOT_DUMP): Now empty if CANNOT_DUMP.
	(SYSTEM_MALLOC): Now true if CANNOT_DUMP.  There should no longer
	be any point to messing with a private memory allocator unless
	Emacs is dumping.
	* src/alloc.c (alloc_unexec_pre, alloc_unexec_post, check_pure_size):
	* src/image.c (reset_image_types):
	* src/lastfile.c (my_endbss, _my_endbss, my_endbss_static):
	Do not define if CANNOT_DUMP.
	* src/emacs.c (might_dump) [CANNOT_DUMP]: Now always false and local.
	(daemon_pipe) [!WINDOWSNT]: Now static.
	* test/Makefile.in (mostlyclean): Remove *.tmp files.
	(make-test-deps.mk): Elide CANNOT_DUMP chatter.

2016-11-20  Paul Eggert  <eggert@cs.ucla.edu>

	* src/xdisp.c (block_buffer_flips, unblock_buffer_flips): Now static.

2016-11-20  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings CANNOT_DUMP=yes

	* src/editfns.c (dump_tz_string) [CANNOT_DUMP || !HAVE_TZSET]:
	Do not define.  If defining, do it in a smaller scope.

2016-11-20  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/ibuffer.el (ibuffer-compile-format): Use string-width instead of length

2016-11-20  Eli Zaretskii  <eliz@gnu.org>

	Fix redrawing non-selected frame after resize on MS-Windows

	* src/xdisp.c (redisplay_internal): If all the frames were
	successfully updated, reset the "garbaged" flag of each frame, to
	make sure it doesn't stay set.

	* src/w32term.c (w32_read_socket): Don't clear the frame if it's
	"garbaged", since expose_frame won't redraw the foreground then.
	(Bug#24642)

2016-11-20  Michael Albinus  <michael.albinus@gmx.de>

	Add file-local-name

	* doc/lispref/files.texi (Magic File Names): Add `file-local-name'.
	(Unique File Names): Use it.

	* etc/NEWS: Mention `file-local-name'.

	* lisp/files.el (file-local-name): New defun.
	(file-expand-wildcards):
	* lisp/eshell/em-tramp.el (eshell/su, eshell/sudo):
	* lisp/eshell/esh-ext.el (eshell-remote-command):
	* lisp/eshell/esh-proc.el (eshell-gather-process-output):
	* lisp/org/ob-core.el (org-babel-local-file-name):
	* lisp/progmodes/gud.el (gud-common-init, gud-format-command):
	* lisp/progmodes/python.el (python-shell-send-file):
	* lisp/shell.el (shell):
	* lisp/vc/ediff-diff.el (ediff-same-file-contents):
	* lisp/vc/vc-git.el (vc-git-checkin): Use it.

2016-11-20  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/ibuffer.el (ibuffer-formats): Mention locked column in doc string.

2016-11-19  Tino Calancha  <tino.calancha@gmail.com>

	* src/editfns.c (format-time-string): Mention %q in doc string.

2016-11-19  Paul Eggert  <eggert@cs.ucla.edu>

	Document format-time-string %q

	* doc/lispref/os.texi (Time Parsing):
	* etc/NEWS: Document new %q functionality taken from gnulib.

2016-11-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2016-11-15 sys_time: add gnulib::timeval for C++
	2016-11-14 snippet/c++defs: fix real-floating arg functions in C++ mode
	2016-11-13 strftime: don't use __THROW
	2016-11-12 strftime: tune %q
	2016-11-12 Merge strftime.c changes from glibc
	2016-11-09 manywarnings: fix -Wno-missing-field-initializers detection
	2016-11-05 strftime,strptime: support %q to represent the quarter

	The glibc changes in turn incorporate the following strftime.c changes:
	2015-10-20 Convert misc function definitions to prototype style
	2015-09-26 [BZ #18985] out of range data to strftime() causes segfault
	2010-01-09 Add support for XPG7 testing
	2009-10-30 Implement Burmese language locale for Myanmar
	2008-06-13 [BZ #6612] pass reference to tzset_called around
	2007-10-16 [BZ #5184] Add tzset_called argument

	* build-aux/snippet/c++defs.h, lib/strftime.c, lib/sys_time.in.h:
	* m4/manywarnings.m4: Copy from gnulib.

2016-11-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	07f45d7 ; Spelling fix
	1a210f0 * admin/release-process: Update versions and blocking bug num...
	36bafc9 Improve documentation of functions that accept time values

	# Conflicts:
	#	admin/release-process
	#	src/editfns.c

2016-11-19  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	4af5981 Add a comment in generated refcards about the source
	ef880a5 ; * etc/refcards/calccard.tex: Remove obsolete comment.
	4887e7c js-mode: Fix indent problem after a regexp
	e992ac0 Fix sluggish display of symbols in UTF-8 language environment
	1fc101b Don't confuse how Texinfo outputs @var with the input
	91aa5d1 * doc/lispref/display.texi (Scroll Bars): * doc/lispref/frame...
	f758fcd * doc/emacs/cmdargs.texi (Initial Options): Copyedit for --da...
	5b0cddd More fixes in copyright notices in etc/refcards/
	f994c20 Update copyright text in refcards
	9ad2ae7 Fix Outline command names
	26c3554 Send text received by bracketed paste to process
	db0b58d Correct the statement about programming modes always running ...
	78aece4 Improve documentation of 'occur'
	eb364fd Do call debugger on failed cl-assert
	3ef4ee8 Avoid infloop in python
	8da810f Don't refer to obsolete FEATURE-unload-hook
	4f478ca Improve documentation of dabbrevs
	7272e5d * lisp/chistory.el (list-command-history): Doc fix.  (Bug#24890)
	89b7482 * lisp/simple.el (set-mark-command): Doc fix.  (Bug#24890)
	3b199f7 Improve documentation of some Help commands
	93d3a0e Fix documentation of yes-or-no prompts
	af04919 Fix documentation of partial completion style
	ed80184 Fix documentation of the mode line on emacsclient frames
	e6be855 Fix description of 'C-z' in User manual
	16f7007 Improve and clarify documentation of Outline Mode
	31d93aa Add Emacs version number to nt/README.W32
	0b6b815 Fix python-mode hideshow regexp
	dc152c5 Modernize usage of 'macOS' in doc and comments
	84c5343 Prefer comments /* like this */ in C code
	bb61e50 * doc/lispref/loading.texi (Autoload): Better link (Bug#24845).
	3ef86fd Clarify documentation of face attribute functions
	de51d59 ; * nt/README.W32: Minor copyedits.
	db436e9 Don't call debug on failed cl-assert

	# Conflicts:
	#	doc/emacs/cmdargs.texi
	#	etc/NEWS
	#	etc/PROBLEMS
	#	lisp/auth-source.el
	#	lisp/net/tramp-sh.el

2016-11-19  Mark Oteiza  <mvoteiza@udel.edu>

	Port RefTeX to cl-lib

	* lisp/textmodes/reftex-auc.el:
	* lisp/textmodes/reftex-cite.el: Use cl-lib.
	(reftex-do-citation, reftex-create-bibtex-file): Substitute cl-lib
	macros.
	* lisp/textmodes/reftex-dcr.el: Use cl-lib.
	(reftex-view-regexp-match): Substitute cl-lib macro.
	* lisp/textmodes/reftex-global.el: Use cl-lib.
	(reftex-find-duplicate-labels, reftex-renumber-simple-labels):
	(reftex-translate): Substitute cl-lib macros.
	* lisp/textmodes/reftex-index.el: Use cl-lib.
	(reftex-index, reftex-index-select-tag, reftex-index-mode-map):
	(reftex-index-next-phrase, reftex-index-phrases-info):
	(reftex-query-index-phrase): Substitute cl-lib macros.
	* lisp/textmodes/reftex-parse.el: Use cl-lib.
	(reftex-parse-from-file, reftex-where-am-I, reftex-what-macro):
	(reftex-nth-arg, reftex-init-section-numbers, reftex-section-number):
	Substitute cl-lib macros.
	* lisp/textmodes/reftex-ref.el: Use cl-lib.
	(reftex-uniquify-label, reftex-offer-label-menu): Substitute cl-lib
	macros.
	* lisp/textmodes/reftex-sel.el: Use cl-lib.
	(reftex-select-shared-map): Set keymap parent to special-mode-map.
	Flatten loop and remove digits and hyphen definitions from the map.
	(reftex-select-label-mode-map):
	(reftex-select-bib-mode-map): Use cl-lib macro, and flatten other loop.
	(reftex-insert-docstruct, reftex-select-unmark): Use cl-lib macros.
	* lisp/textmodes/reftex-vars.el (reftex-vref-is-default): Use
	cl-pushnew.
	* lisp/textmodes/reftex.el: Use cl-lib.
	(reftex-docstruct-symbol): Use cl-incf.
	(reftex-ref-style-toggle): Replace add-to-list with append.
	(reftex-compile-variables): Use cl-lib macros, and functions with
	compiler macros. cl-first is just an alias.
	(reftex-parse-args, reftex-scanning-info-available-p):
	(reftex-select-external-document, reftex-get-file-buffer-force): Use
	cl-lib macros.
	(reftex-isearch-minor-mode): Replace add-to-list with append.

2016-11-19  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-exchange-filters: Simplify code

	* lisp/ibuf-ext.el (ibuffer-exchange-filters): Use cl-rotatef.

2016-11-19  Eli Zaretskii  <eliz@gnu.org>

	Implement getrlimit and setrlimit for MS-Windows

	* src/w32heap.c (getrlimit, setrlimit): New functions.
	Include w32.h.
	* src/emacs.c (main): Use 'rlim_t', not 'long', for values that
	should be compatible with 'struct rlimit' members.

	* nt/inc/sys/resource.h: New header file.

	* nt/mingw-cfg.site (ac_cv_func_getrlimit, ac_cv_func_setrlimit):
	Set to "yes".

2016-11-18  Mark Oteiza  <mvoteiza@udel.edu>

	Move key mappings into reftex-mode-map defvar

	* lisp/textmodes/reftex.el (reftex-mode-map): Assimilate top-level
	key mappings.
	(reftex-reset-mode): Just use dolist.

2016-11-18  Mark Oteiza  <mvoteiza@udel.edu>

	Derive reftex-index-mode from special-mode

	* lisp/textmodes/reftex-index.el (reftex-index-mode-map): Flatten
	loop.  Remove digit keys and hyphen, as reftex-index-mode is derived
	from special-mode now.
	(reftex-index-mode): Derive from special-mode.
	(reftex-index-phrases-mode-map): Flatten loop. Fix erroneous docstring.

2016-11-18  Mark Oteiza  <mvoteiza@udel.edu>

	Clean up reftex-toc-mode-map

	* lisp/textmodes/reftex-toc.el: Remove cl.
	(reftex-toc-mode-map): Flatten loop.  Remove mapping digit keys and
	hyphen, as reftex-toc-mode is derived from special-mode nowadays.

2016-11-18  Philipp Stephani  <phst@google.com>

	Prevent dubious argument lists

	See Bug#24912 and Bug#24913.

	* src/eval.c (funcall_lambda): Detect more dubious argument lists.
	* lisp/emacs-lisp/bytecomp.el (byte-compile-check-lambda-list): Detect
	more dubious argument lists.
	* test/src/eval-tests.el (eval-tests--bugs-24912-and-24913): Add unit
	test.

2016-11-18  Tino Calancha  <tino.calancha@gmail.com>

	Add test suite for buff-menu.el

	* test/lisp/buff-menu-tests.el: New file.
	(buff-menu-24962): Add test for Bug#24962.

2016-11-18  Wojciech Gac  <wojciech.s.gac@gmail.com>  (tiny change)

	Add cyrillic-tuvan input method

	* lisp/leim/quail/cyrillic.el ("cyrillic-tuvan"): New input
	method.  (Bug#24942)

	* etc/NEWS: Mention addition of 'cyrillic-tuvan' input method.

2016-11-18  Alexander Gramiak  <agrambot@gmail.com>

	Extend 'indent-relative' when its arg is non-nil

	* lisp/indent.el (indent-relative-maybe): New obsolete alias.
	(indent-relative-first-indent-point): Renamed from
	'indent-relative-maybe'.
	(indent-relative): Now accepts an additional optional argument.
	The first argument was renamed to FIRST-ONLY.  Doc fix.  Support
	the additional arg.  (Bug#24766)

2016-11-17  Dmitry Gutov  <dgutov@yandex.ru>

	Add example for bug#24854

	* test/manual/indent/js.js: Add example for bug#24854.

2016-11-17  Mark Oteiza  <mvoteiza@udel.edu>

	Port registry.el the rest of the way to cl-lib

	This file already is using cl-lib functions at runtime; eieio ultimately
	loads cl-lib, which explains why doing so wasn't an issue.
	* lisp/registry.el: Require cl-lib.
	(registry-db, registry--match, registry-search, registry-delete):
	(registry-insert, registry-reindex): Replace cl macros with cl-lib ones.
	(registry-collect-prune-candidates): Replace cl function with cl-lib one.

2016-11-17  Mark Oteiza  <mvoteiza@udel.edu>

	Fix arglist in python.el (Bug#24762)

	* lisp/progmodes/python.el: Remove unneeded second args.
	(python-define-auxiliary-skeleton): DOC arg should be &optional.

2016-11-17  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for rot13.el

	* lisp/rot13.el (rot13): Docstring correction.

	* test/lisp/rot13-tests.el: New file with tests for rot13.el.

2016-11-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#24947 (Tramp + ido)

	* lisp/ido.el (ido-read-internal): Prevent eager Tramp connection.

	* lisp/net/tramp.el (tramp-handle-file-name-case-insensitive-p):
	Run remote tests only if a connection is established only.  (Bug#24947)

2016-11-16  Ken Brown  <kbrown@cornell.edu>

	Unbreak the build on Darwin (Bug#24957)

	* src/fileio.c (file_name_case_insensitive_p) [DARWIN_OS]: Fix
	mistakes in recent commit.

2016-11-16  Nicolas Petton  <nicolas@petton.fr>

	Do not use map.el in seq-tests.el

	* test/lisp/emacs-lisp/seq-tests.el: Do not use map.el.  map.el was
	introduced in Emacs 25.1, but seq.el is also available in GNU ELPA for
	Emacs 24.5.

2016-11-16  Tino Calancha  <tino.calancha@gmail.com>

	Update parameter :version to 26.1 in several defcustom

	Following defcustom where added or modified for 25.2 release.
	In fact all these changes belong to 26.1 release.
	* lisp/battery.el (battery-linux-sysfs-regexp)
	* lisp/comint.el (comint-password-prompt-regexp)
	* lisp/dired.el (dired-always-read-filesystem)
	* lisp/image.el (image-scaling-factor)
	* lisp/ibuf-ext.el (ibuffer-never-search-content-name)
	(ibuffer-never-search-content-mode)
	* lisp/mouse.el (mouse-select-region-move-to-beginning)
	* lisp/net/net-utils.el (iwconfig-program, iwconfig-program-options)
	(netstat-program, route-program, route-program-options)
	* lisp/net/sieve-manage.el (sieve-manage-default-stream)
	* lisp/progmodes/grep.el (grep-save-buffers)
	* lisp/vc/add-log.el (change-log-directory-files)
	* lisp/url/url-vars.el (url-user-agent)
	* lisp/vc/vc-hg.el (vc-hg-symbolic-revision-styles)
	(vc-hg-use-file-version-for-mode-line-version)
	(vc-hg-parse-hg-data-structures)
	* lisp/wdired.el (wdired-create-parent-directories)
	* lisp/faces.el (homoglyph, nobreak-hyphen, read-multiple-choice-face)
	* lisp/gnus/gnus-art.el (gnus-article-encrypt-protocol)
	(gnus-button-url-regexp)
	* lisp/window.el (switch-to-buffer-preserve-window-point)
	* lisp/ibuffer.el (ibuffer-formats, ibuffer-locked-char)
	(ibuffer-locked-buffer)
	* lisp/textmodes/flyspell.el (flyspell-sort-corrections-function)
	* lisp/emacs-lisp/edebug.el (edebug-sit-on-break)
	* lisp/gnus/message.el (message-user-fqdn)
	* lisp/simple.el (shell-command-dont-erase-buffer)
	(extended-command-suggest-shorter)
	* lisp/net/shr.el (shr-use-fonts)
	* lisp/files.el (mounted-file-systems, kill-emacs-query-functions)

2016-11-15  Glenn Morris  <rgm@gnu.org>

	Add --new-daemon, which runs in the foreground and does not fork

	This is intended for modern init systems such as systemd,
	which manage many of the traditional aspects of daemon behavior
	themselves.  (Bug#2677)
	* src/emacs.c (daemon_type): New integer.
	(usage, standard_args): Add --old-daemon and --new-daemon.
	(main): Handle --old-daemon and --new-daemon arguments.
	Restrict all the forking and complicated daemon stuff to old-daemon.
	(Fdaemon_initialized): Handle new-style daemon.
	* src/lisp.h (IS_DAEMON, DAEMON_RUNNING) [!WINDOWNT]:
	Replace daemon_pipe with daemon_type.
	* doc/emacs/cmdargs.texi (Initial Options):
	* doc/emacs/glossary.texi (Glossary):
	* doc/emacs/misc.texi (Emacs Server):
	* doc/lispref/display.texi (Window Systems):
	* doc/lispref/os.texi (Startup Summary): Related doc updates.
	* etc/NEWS: Mention this.
	* etc/emacs.service: Use Type=simple and --new-daemon.

2016-11-15  Glenn Morris  <rgm@gnu.org>

	* src/emacs.c (usage_message): Mention named daemon.  (Bug#24949)
	* doc/man/emacs.1.in: Likewise.

2016-11-15  Ken Brown  <kbrown@cornell.edu>

	Simplify case-insensitivity checks on Mac OS X

	* src/fileio.c (file_name_case_insensitive_p): Try skipping the
	Darwin code and instead using pathconf with _PC_CASE_SENSITIVE.
	Leave in two alternatives conditionally compiled based on
	DARWIN_OS_CASE_SENSITIVE_FIXME in case pathconf doesn't work.

	* etc/PROBLEMS: Mention the possible problem with pathconf on
	Mac OS X.

2016-11-15  Glenn Morris  <rgm@gnu.org>

	* src/emacs.c (sort_args): Warn about multiple matches.

2016-11-15  Michael Albinus  <michael.albinus@gmx.de>

	Implement file name handler for `file-name-case-insensitive-p'

	* doc/lispref/files.texi (Truenames): `file-name-case-insensitive-p'
	is also applicable for remote hosts.

	* lisp/net/tramp.el (tramp-methods): Improve docstring.
	(tramp-file-name-for-operation): Add `file-name-case-insensitive-p'.
	(tramp-handle-file-name-case-insensitive-p): New defun.

	* lisp/net/tramp-smb.el (tramp-methods) <smb>:
	Add `tramp-case-insensitive' entry.

	* lisp/net/tramp-adb.el (tramp-adb-file-name-handler-alist)
	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist)
	* lisp/net/tramp-sh.el (tramp-sh-file-name-handler-alist)
	* lisp/net/tramp-smb.el (tramp-smb-file-name-handler-alist)
	<file-name-case-insensitive-p>: Add handler.  (Bug#22300, Bug#24441)

2016-11-15  Mark Oteiza  <mvoteiza@udel.edu>

	Nix more uses of default-FOO variables (Bug#24946)

	* lisp/cedet/semantic/util-modes.el (semantic-stickyfunc-mode):
	Check for header-line-format instead.
	* lisp/emulation/viper.el (viper-load-custom-file): Reference
	major-mode instead.
	* lisp/mail/feedmail.el (feedmail-fill-to-cc-fill-column): Use
	fill-column instead.

2016-11-15  Simen Heggestøyl  <simenheg@gmail.com>

	Complete the name of PostgreSQL databases

	* lisp/progmodes/sql.el (sql-postgres-login-params): Complete database
	name.
	(sql-postgres-list-databases): New function returning a list of
	available PostgreSQL databases.

	* test/lisp/progmodes/sql-tests.el: New file with tests for sql.el.

2016-11-14  Sam Steingold  <sds@gnu.org>

	add `vc-git-print-log-follow' and use it in `vc-git-print-log'

	When `vc-git-print-log-follow' is true and all files are
	non-directory, pass "--follow" to "git log".
	This works around bug#8756 and bug#16422.

2016-11-14  Sam Steingold  <sds@gnu.org>

	`toggle-truncate-lines' obsoletes `gnus-summary-toggle-truncation'

	vc-git-print-log: pass "--follow" to "log" to handle renamed files

2016-11-14  Eli Zaretskii  <eliz@gnu.org>

	Revert "Improve case-insensitive checks (Bug#24441)"

	This reverts commit 2f5e0b1bf7b0ac4f450847db34d599a072020600.
	I see no reason for removing code, documentation, and comments
	in the original commit.

2016-11-14  Wilson Snyder  <wsnyder@wsnyder.org>

	Update verilog-mode.el

	* lisp/progmodes/verilog-mode.el (verilog-read-decls)
	(verilog-calc-1): Fix "default clocking" indentation and
	preventing AUTOs from working, bug1084.  Reported by Alan Morgan.
	(verilog-diff-report): Fix `verilog-diff-report'
	not returning bad status on differences, bug1087.  Reported by
	Eric Jackowski.
	(verilog-auto-inst-param-value)
	(verilog-auto-inst-param-value-type, verilog-read-sub-decls)
	(verilog-read-sub-decls-expr, verilog-read-sub-decls-gate)
	(verilog-read-sub-decls-line, verilog-read-sub-decls-sig)
	(verilog-read-sub-decls-type): When
	`verilog-auto-inst-param-value-type' is set, which is now the
	default, AUTOINPUT etc will now substitute parameter types from
	submodules, bug1061.  Reported by Brad Dobbie.
	(verilog-auto-reset, verilog-backward-case-item)
	(verilog-extended-case-re, verilog-read-always-signals-recurse):
	Fix indentation of randcase, bug1072. Reported by David Rogoff.
	(verilog-read-sub-decls-expr)
	(verilog-sig-multidim-string): Fix AUTOINST ordering of dimensions
	in generated comments, bug1057. Reported by Kaushal Modi.
	(verilog-auto-wire-comment, verilog-insert-definition):
	Add `verilog-auto-wire-comment' to suppress wire comments. Reported by
	Eric Jackowski.
	(verilog-extended-complete-re): Fix indentation
	of class static functions, bug1053. Reported by Gregory
	Czajkowski.
	(verilog-module-filenames): Support tramp for
	finding verilog modules. Reported by Nevada Sanchez.

2016-11-14  Paul Eggert  <eggert@cs.ucla.edu>

	Improve case-insensitive checks (Bug#24441)

	* doc/lispref/files.texi (Truenames): Simplify documentation,
	to avoid giving too much platform-specific information that
	may not be accurate anyway.
	* src/fileio.c (file_name_case_insensitive_p): Use pathconf with
	_PC_CASE_SENSITIVE if _PC_CASE_INSENSITIVE is not available.
	Otherwise if one approach fails (e.g., with errno == EINVAL), fall
	back on an alternative rather than returning false.  Try skipping
	the Darwin code, as it (1) no longer seems to be needed and (2)
	does not seem to match the Apple documentation.  Leave in two
	alternatives conditionally compiled based on
	DARWIN_OS_CASE_SENSITIVE_FIXME in case (1) or (2) is incorrect.

2016-11-14  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation changes of connection-local variables

	* etc/NEWS: Fix last change.
	* doc/lispref/variables.texi (Connection Local Variables): Minor fixes.
	* doc/lispref/elisp.texi (Top): Update the master menu.

2016-11-14  Michael Albinus  <michael.albinus@gmx.de>

	Implement connection-local variables

	* doc/lispref/variables.texi (Connection Local Variables): New section.

	* etc/NEWS: Mention connection-local variables.

	* lisp/files-x.el (enable-connection-local-variables)
	(connection-local-variables-alist, connection-local-class-alist)
	(connection-local-criteria-alist): New defvars.
	(connection-local-get-classes)
	(connection-local-get-class-variables): New defsubst.
	(connection-local-set-classes)
	(connection-local-set-class-variables)
	(hack-connection-local-variables)
	(hack-connection-local-variables-apply): New defuns.
	(with-connection-local-classes): New defmacro.

	* lisp/net/tramp.el (tramp-set-connection-local-variables): New defun.

	* lisp/net/tramp-adb.el (tramp-adb-maybe-open-connection):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-maybe-open-connection):
	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	* lisp/net/tramp-smb.el (tramp-smb-maybe-open-connection): Use it.

	* test/lisp/files-x-tests.el: New file.

2016-11-14  Tino Calancha  <tino.calancha@gmail.com>

	tabulated-list: extend truncation into next align-right column

	See discussion on:
	https://lists.gnu.org/r/emacs-devel/2016-10/msg01101.html
	* lisp/emacs-lisp/tabulated-list.el
	(tabulated-list--near-rows): New variable.
	(tabulated-list-print, tabulated-list-set-col): Use it.
	(tabulated-list--col-local-max-widths): New defsubst.
	(tabulated-list-print-col): Use it.  If the next column is
	align-right, and has some space left then don't truncate to width,
	use some of the available space from the next column.

2016-11-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/shr.el (shr-collect-extra-strings-in-table): Fix indentation.

	* lisp/net/shr.el (shr-tag-table): Avoid duplication of images.
	(shr-collect-extra-strings-in-table): Render images as well.

2016-11-13  Ken Brown  <kbrown@cornell.edu>

	Use the new 'file-name-case-insensitive-p' function

	* lisp/international/mule.el (auto-coding-alist-lookup):
	* lisp/files.el (file-truename):
	(abbreviate-file-name, set-auto-mode, file-relative-name):
	* lisp/emacs-lisp/package.el (package-untar-buffer): Use
	'file-name-case-insensitive-p' instead of 'system-type' to test
	case-insensitivity.

2016-11-13  Glenn Morris  <rgm@gnu.org>

	Include a systemd user unit file.  (Bug#16507)

	* etc/emacs.service: New file.
	* doc/emacs/misc.texi (Emacs Server): Mention systemcl --user.
	* Makefile.in (libdir): New, set by configure.
	(systemdunitdir): New variable.
	(install-etc, uninstall): Handle the emacs.service file.

2016-11-13  Paul Eggert  <eggert@cs.ucla.edu>

	Port --enable-gcc-warnings to Ubuntu 16.10

	* src/gmalloc.c: Include <stdlib.h>, so it declares
	hybrid_aligned_alloc (the definiens of the aligned_alloc macro),
	so that GCC doesn't complain that hybrid_aligned_alloc is
	defined without being declared.

2016-11-13  Ken Brown  <kbrown@cornell.edu>

	Silence tramp warning

	* lisp/net/tramp.el (tramp-file-name-for-operation): Add
	'file-name-case-insensitive-p' as a known file primitive.
	(Bug#24936)

2016-11-12  Ken Brown  <kbrown@cornell.edu>

	Check case-sensitivity when renaming files

	* src/fileio.c (file_name_case_insensitive_p)
	(Ffile_name_case_insensitive_p):  New functions.
	(Frename_file): Allow renames that simply change case when the
	FILE argument is on a case-insensitive filesystem.  (Bug#24441)

	* lisp/dired-aux.el (dired-do-create-files): Use
	'file-name-case-insensitive-p' instead of 'system-type' to check
	for case-insensitivity.  (Bug#24441)

	* doc/lispref/files.texi (Truenames): Document
	'file-name-case-insensitive-p'.

2016-11-12  Ken Brown  <kbrown@cornell.edu>

	Unbreak the build on Cygwin

	* configure.ac (system_malloc) [CYGWIN]: Unset.

2016-11-11  Mark Oteiza  <mvoteiza@udel.edu>

	Update chart.el

	* lisp/emacs-lisp/chart.el (chart-mode): Derive from special-mode.
	(chart-draw): Wrap in with-silent-modifications.  Instead of inserting a
	fixed number of newlines, use window-height.
	(chart-bar):
	(chart-trim): Use dolist.
	(chart-file-count): The previous implementation was buggy and missed
	extensions.  Use file-name-extension instead to detect file extensions.
	Also use dolist and cl-incf to reduce verbosity.

2016-11-11  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/shr.el (shr--preferred-image): Add CR to whitespace regexps.
	(shr-collect-extra-strings-in-table):
	Render extra tables in an invalid html as well.

2016-11-10  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/shr.el (shr--preferred-image): Ignore whitespace (bug#24893).

2016-11-09  Eli Zaretskii  <eliz@gnu.org>

	Resurrect 'memory-limit' on MS-Windows

	* nt/mingw-cfg.site (ac_cv_func_sbrk): Set to "yes", otherwise
	'memory-limit' will produce a trivial and useless result on Windows.

2016-11-09  Mark Oteiza  <mvoteiza@udel.edu>

	Update quickurl.el

	* lisp/net/quickurl.el (quickurl-format-function):
	(quickurl-sort-function): Use named function.
	(quickurl-list-mode-map): Remove lines that are extraneous now that the
	parent mode is special-mode.
	(quickurl-format-url, quickurl-sort-urls): New functions.
	(quickurl-read, quickurl): Use defun, as no cl-defun feature appears to
	be used.
	(quickurl-list-mode): Derive from special-mode.  Nix setting
	buffer-read-only: special-mode does that.
	(quickurl-list-populate-buffer): Use dolist instead.
	(quickurl-list-quit): Use quit-window.  It looks like this was written
	before the quit-window rewrite.  quit-window is very useful now.

2016-11-09  Michael Albinus  <michael.albinus@gmx.de>

	Refine multi-hop specs in Tramp

	* lisp/net/tramp.el (tramp-tramp-file-p): Suppress "/:" and "/c:".

	* test/lisp/net/tramp-tests.el
	(tramp-test01-file-name-syntax): Multi-hop specs don't need a
	method.  "/h:" is allowed on non MS Windows.

2016-11-08  Daniel Colascione  <dancol@dancol.org>

	Avoid infloop in python

	Fix bug#24905

	* lisp/progmodes/python.el (python-info-docstring-p): Improve
	infloop avoidance: replace (bobp) with generic test for
	forward progress.
	* test/lisp/progmodes/python-tests.el (python-bob-infloop-avoid): Add
	test for bug#24905

2016-11-08  Daniel Colascione  <dancol@dancol.org>

	Make gnus/message.el work correctly under lexical binding

	* lisp/gnus/message.el (message-send-mail): Rename `arg' to
	`_' to shut up the byte compiler.
	(sha1-maximum-internal-length, smtpmail-smtp-server)
	(smtpmail-smtp-service): add missing defvars

2016-11-08  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#24889

	* lisp/net/tramp.el (tramp-file-name-regexp): Make it a
	defvar.  Fix docstring.
	(tramp-completion-file-name-handler-alist): Fix docstring.
	(tramp-register-file-name-handlers): Reassign
	`tramp-file-name-regexp' to the car of
	`tramp-file-name-structure'.  (Bug#24889)

2016-11-08  Paul Eggert  <eggert@cs.ucla.edu>

	Port to FreeBSD 11 AMD

	Problem reported by Ashish Shukla (Bug#24892).  I tested
	this on FreeBSD 11 x86-64 with HAVE_SBRK manually undefined.
	* configure.ac (system_malloc): Set to 'yes' if there is no sbrk.
	(sbrk): Check whether it exists.
	* src/alloc.c (my_heap_start) [!GNU_LINUX]:
	Do not define, since this function is now used only on GNU/Linux,
	and sbrk might not exist on other platforms.
	(malloc_initialize_hook) [!GNU_LINUX]:
	Do not call my_heap_start, since its side effect will never be used.
	(Fmemory_limit) [!HAVE_SBRK]: Do not call sbrk.
	* src/unexelf.c (unexec) [!HAVE_SBRK]: Assume that nothing like
	sbrk exists.

2016-11-08  Paul Eggert  <eggert@cs.ucla.edu>

	Port emacsclient to FreeBSD 11 etc.

	* lib-src/emacsclient.c: Include <string.h>.  This is needed on
	platforms like FreeBSD 11 that use code involving strlen etc., and
	because <config.h> no longer includes string.h.

2016-11-07  Mark Oteiza  <mvoteiza@udel.edu>

	Prescribe history for read-regexp in query-replace

	In the fix for bug#24580, the history argument for read-regexp was
	removed erroneously; read-regexp's history argument defaults to
	regexp-history, not minibuffer-history.
	* lisp/replace.el (query-replace-read-from): Tell read-regexp to use
	minibuffer-history.  Fixes bug#24873.

2016-11-07  Mark Oteiza  <mvoteiza@udel.edu>

	Remove obsolete default-FOO variables

	* etc/NEWS: Indicate the removed variables.
	* lisp/emacs-lisp/edebug.el (edebug-outside-mark): Fix comment.
	* lisp/subr.el (default-mode-line-format, default-header-line-format):
	(default-line-spacing, default-abbrev-mode, default-ctl-arrow):
	(default-truncate-lines, default-left-margin, default-tab-width):
	(default-case-fold-search, default-left-margin-width):
	(default-right-margin-width, default-left-fringe-width):
	(default-right-fringe-width, default-fringes-outside-margins):
	(default-scroll-bar-width, default-vertical-scroll-bar):
	(default-indicate-empty-lines, default-indicate-buffer-boundaries):
	(default-fringe-indicator-alist, default-fringe-cursor-alist):
	(default-scroll-up-aggressively, default-scroll-down-aggressively):
	(default-fill-column, default-cursor-type):
	(default-cursor-in-non-selected-windows):
	(default-buffer-file-coding-system, default-major-mode):
	(default-enable-multibyte-characters): Remove obsolete declarations.
	* src/buffer.c (default-mode-line-format, default-header-line-format):
	(default-line-spacing, default-abbrev-mode, default-ctl-arrow):
	(default-truncate-lines, default-left-margin, default-tab-width):
	(default-case-fold-search, default-left-margin-width):
	(default-right-margin-width, default-left-fringe-width):
	(default-right-fringe-width, default-fringes-outside-margins):
	(default-scroll-bar-width, default-vertical-scroll-bar):
	(default-indicate-empty-lines, default-indicate-buffer-boundaries):
	(default-fringe-indicator-alist, default-fringe-cursor-alist):
	(default-scroll-up-aggressively, default-scroll-down-aggressively):
	(default-fill-column, default-cursor-type):
	(default-cursor-in-non-selected-windows):
	(default-buffer-file-coding-system, default-major-mode):
	(default-enable-multibyte-characters): Remove.
	* src/fileio.c (choose_write_coding_system): Fix comment.
	* src/lisp.h (DEFVAR_BUFFER_DEFAULTS): Remove.

2016-11-07  Eli Zaretskii  <eliz@gnu.org>

	Improve the tutorial

	* etc/tutorials/TUTORIAL: Minor copyedits.  (Bug#24890)
	* etc/tutorials/TUTORIAL.he: Follow suit.

2016-11-06  Paul Eggert  <eggert@cs.ucla.edu>

	Restore file descriptor limit in subprocesses

	Problem reported by Philipp Stephani (Bug#24869).
	* src/callproc.c (child_setup) [!DOS_NT]:
	Call restore_nofile_limit in the child.
	* src/process.c (nofile_limit) [HAVE_SETRLIMIT]: New static var.
	(restore_nofile_limit): New function.
	(init_process_emacs) [HAVE_SETRLIMIT]: Set the new var.

2016-11-06  Mark Oteiza  <mvoteiza@udel.edu>

	Remove some subr.el functions obsoleted in 22.1

	* etc/NEWS: Document removed functions.  Also mention the "face"
	variables that have been removed recently.
	* lisp/subr.el (window-dot, set-window-dot, read-input, show-buffer):
	(eval-current-buffer, string-to-int, insert-string, makehash): Remove.

2016-11-05  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer comments /* like this */ in C code

2016-11-05  Johan Bockgård  <bojohan@gnu.org>

	* lisp/subr.el (copy-tree): Handle vector in cdr. (Bug#24876)

2016-11-05  Nick Terrell  <nickrterrell@gmail.com>  (tiny change)

	Support zstd compressed files

	* lisp/jka-cmpr-hook.el (jka-compr-compression-info-list): Add
	zstd compression info: <http://facebook.github.io/zstd/>.
	(jka-compr-mode-alist-additions): Handle .tzst suffix for zstd
	compressed tar archives.  (Bug#24853)

2016-11-05  Eli Zaretskii  <eliz@gnu.org>

	Enlarge DUMPED_HEAP_SIZE

	* src/w32heap.c (DUMPED_HEAP_SIZE) [_WIN64 || WIDE_EMACS_INT]:
	Enlarge to 21MB.  Reported by Richard Copley <rcopley@gmail.com>.

2016-11-04  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-11-03 intprops: port to older XL C
	* lib/intprops.h: Copy from gnulib.

2016-11-04  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	acae275 ; Spelling fixes
	d8fac73 Update README for precompiled windows Emacs.
	23570fd Clarify documentation of 'vc-responsible-backend' wrt symlinks
	f708cb2 Clarify doc string of 'transpose-sexps'
	cd05b1d Fix docstring of 'browse-url-firefox-new-window-is-tab'
	bdc89eb Improve documentation of 'font-lock-remove-keywords'
	4a0c590 Fix documentation of the command summary key
	0221b7a Mark relocation workarounds with REL_ALLOC

2016-11-04  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	dbb3410 python.el: Fix detection of native completion in Python 3 (bu...
	91c97b6 * Makefile.in (install-arch-indep): Skip etc/refcards/emacsve...
	9c1cb8d * lisp/subr.el (set-transient-map): Exit for unbound events (...
	9c247d2 Update category-table for Chinese characters
	43986d1 Inhibit buffer relocation during regex searches
	fee4cef Revert fixes to allocation of regex matching

2016-11-04  Mark Oteiza  <mvoteiza@udel.edu>

	Fix references to long obsoleted functions/aliases

	* doc/lispintro/emacs-lisp-intro.texi (Miscellaneous):
	* doc/misc/cl.texi (Conditionals):
	* doc/misc/speedbar.texi (Major Display Modes): Use string-to-number,
	not string-to-int.
	* lisp/emulation/viper.el (viper-go-away): Use major-mode, not
	default-major-mode.
	* lisp/textmodes/reftex-toc.el (reftex-toc-visit-location): show-window
	here is not a function call, but shorten the binding names anyways.
	Also, use pop-to-buffer-same-window instead of switch-to-buffer cf
	Bug#22244.
	* lisp/textmodes/sgml-mode.el (html-tag-alist): Use read-string, not
	read-input.

2016-11-04  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/emacs-lisp/pcase.el (pcase-dolist): Add a docstring.

2016-11-04  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/shr.el (shr-collect-extra-strings-in-table) New function
	that gathers extra strings in an invalid html.  (bug#24831)
	(shr-tag-table): Use it.

2016-11-04  Vasilij Schneidermann  <v.schneidermann@gmail.com>

	Add 'x-ctrl-keysym' support on X window system

	* src/xterm.c (x_x_to_emacs_modifiers, x_emacs_to_x_modifiers):
	Support 'x-ctrl-keysym'.
	(syms_of_xterm): DEFSYM "ctrl" and put a proper modifier-value
	property on it.
	<x-ctrl-keysym>: New DEFVAR_LISP.
	<x-alt-keysym, x-hyper-keysym, x-meta-keysym, x-super-keysym>: Doc
	fix.  (Bug#24822)

	* etc/NEWS: Mention the addition of 'x-ctrl-keysym'.

	* doc/lispref/os.texi (X11 Keysyms): Document 'x-ctrl-keysym'.

2016-11-04  Alexander Gramiak  <agrambot@gmail.com>

	Improve autoload error reporting

	* src/eval.c (Fautoload_do_load): Include the absolute file name
	in the error message.

2016-11-03  Reuben Thomas  <rrt@sc3d.org>

	Stop force parameter of whitespace-report-region having global effect

	* lisp/whitespace.el (whitespace-report-region): Force parameter
	previously changed whitespace-style globally.  Fix this, and use
	whitespace-active-style, to take account of any changes the user may
	have made.  Simplify the documentation: the force parameter simply
	forces all classes of whitespace problem to be considered.
	(Bug#24745)

2016-11-03  Reuben Thomas  <rrt@sc3d.org>

	Document use of `tab-width'

	* lisp/whitespace.el: When talking about `8 or more spaces', mention
	`tab-width' instead of 8.  (Bug#24745)

2016-11-03  Reuben Thomas  <rrt@sc3d.org>

	Make whitespace-report-region respect current settings

	* lisp/whitespace.el (whitespace-report-region): Make it respect
	whitespace-style, including any additions made by the force parameter.
	This means that the function does not return t unless a whitespace
	problem that the user cares about is reported.  (Bug#24745)

2016-11-03  Reuben Thomas  <rrt@sc3d.org>

	Fix whitespace-space-after-tab-regexp

	* lisp/whitespace.el (whitespace-space-after-tab-regexp)
	(whitespace-regexp): Match all the spaces after tabs for highlighting,
	not just the first tab-width.  Fix whitespace-space-after-tab::space
	version so that it requires at least tab-width spaces, not just 1.
	(Bug#24745)

2016-11-03  Reuben Thomas  <rrt@sc3d.org>

	Remove duplicate documentation

	* lisp/whitespace.el: Remove duplicate documentation from the Commentary
	  section which duplicate and in some places contradict (due to being
	  out of date) the docstrings (Bug#24745).

2016-11-03  Reuben Thomas  <rrt@sc3d.org>

	Fix bob/eob checks

	* lisp/whitespace.el (whitespace-empty-at-bob-regexp)
	(whitespace-empty-at-eob-regexp, whitespace-cleanup): Make `empty' checks
	work at beginning & end of buffer in whitespace-report-region, and only
	there (i.e. they will never match in regions that don't include the
	start or end of the buffer).  (Bug#24745)

2016-11-03  Tino Calancha  <tino.calancha@gmail.com>

	(thing-at-point 'list) return nil if no list at point

	* lisp/thingatpt.el (thing-at-point-bounds-of-list-at-point):
	Check first if we are at the beginning of a top-level sexp (Bug#24627).
	If point is inside a comment or string, look for a list out of the
	comment/string.
	Escape '[' in doc string.
	* test/lisp/thingatpt-tests.el (thing-at-point-bug24627): Update
	expected test result as pass.

2016-11-02  Mark Oteiza  <mvoteiza@udel.edu>

	Remove antlr face aliases obsoleted in 22.1

	* lisp/progmodes/antlr-mode.el: Remove obsolete aliases
	(antlr-default-face, antlr-keyword-face, antlr-syntax-face):
	(antlr-ruledef-face, antlr-tokendef-face, antlr-ruleref-face):
	(antlr-tokenref-face, antlr-literal-face):
	(antlr-literal-face): Remove.
	(antlr-font-lock-additional-keywords): Use face symbols instead.

2016-11-02  Daniel Colascione  <dancol@dancol.org>

	Revert "Disable bracketed paste in a terminal in char mode"

	This change causes regressions, and besides, disabling BPM frame-wide
	for the sake of one buffer is the wrong solution.

	This reverts commit cf566b46a6cf85c6d54d0b0db80e32ed6ae8d1ca.

2016-11-02  Mark Oteiza  <mvoteiza@udel.edu>

	Revert change to eww-suggest-uris

	The introduced append is ugly and can yield '(nil); doing delq on it
	would be hacks on hacks.
	* lisp/net/eww.el: Require cl-lib at run time.
	(eww-suggest-uris): Restore eww-current-url, reverting previous change.
	(eww): Remove erroneous append.
	(eww-open-in-new-buffer): Check if the return from eww-suggested-uris is
	equal to eww-current-url, which is nil anyways if we are not in an EWW
	buffer.

2016-11-02  Mark Oteiza  <mvoteiza@udel.edu>

	Add eww-open-in-new-buffer to EWW

	* doc/misc/eww.texi (Basic): Document new command and key.
	* etc/NEWS: Mention new key and its purpose.
	* lisp/net/eww.el (eww-suggest-uris): Remove eww-current-url.
	(eww): Append (eww-current-url) to the prompt defaults.
	(eww-open-in-new-buffer): New command.
	(eww-mode-map): Bind it and add a menu item.

2016-11-02  Mark Oteiza  <mvoteiza@udel.edu>

	Migrate auth-source to cl-lib

	* lisp/auth-source.el: Use cl-lib.
	(auth-source-read-char-choice, auth-source-backend-parse-parameters):
	(auth-source-search): Replace cl calls with cl-lib ones.
	(auth-source-netrc-cache):
	(auth-source-forget+): Use cl-do-symbols instead.
	(auth-source-specmatchp, auth-source-netrc-parse):
	(auth-source-netrc-search, auth-source-netrc-create):
	(auth-source-netrc-saver, auth-source-secrets-listify-pattern):
	(auth-source-secrets-search, auth-source-secrets-create):
	(auth-source-macos-keychain-search, auth-source--decode-octal-string):
	(auth-source-macos-keychain-search-items, auth-source-plstore-search):
	(auth-source-plstore-create): Replace cl calls with cl-lib ones.

2016-11-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't segfault on timed-out TLS connections

	* src/process.c (finish_after_tls_connection): Check that the
	file descriptor is still alive before proceeding (bug#24811).
	Also clean up the code slightly.

2016-11-01  Eli Zaretskii  <eliz@gnu.org>

	Support 'TARGETS' in clipboard selections on MS-Windows

	* src/w32select.c (Fw32_selection_targets): New function.

	* lisp/term/w32-win.el (w32--get-selection): Call
	'w32-selection-targets' to obtain the list of data formats
	available in the clipboard.

2016-11-01  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	Fix documentation for 'eudc-options-file'

	* doc/misc/eudc.texi (The Server Hotlist): Update the default
	value of 'eudc-options-file'.

2016-11-01  Tibor Csögör  <tibi@tiborius.net>

	Fix documentation of 'eudc-inline-expansion-format'

	* doc/misc/eudc.texi (Inline Query Expansion): Fix the default value of
	'eudc-inline-expansion-format'. (Bug#24840)

2016-10-31  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in some more libs

	* lisp/calendar/icalendar.el:
	* lisp/emacs-lisp/regexp-opt.el:
	* lisp/emacs-lisp/timer.el:
	* lisp/gnus/message.el:
	* lisp/hex-util.el: Turn on lexical-binding.

2016-10-31  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in some net libs

	* lisp/net/dbus.el: Turn on lexical-binding.
	(dbus-list-hash-table, dbus-list-known-names):
	(dbus-introspect-get-node-names, dbus-introspect-get-interface-names):
	(dbus-introspect-get-method-names, dbus-introspect-get-signal-names):
	(dbus-introspect-get-property-names):
	(dbus-introspect-get-argument-names, dbus-get-all-properties):
	(dbus-property-handler, dbus-get-all-managed-objects):
	(dbus-managed-object-handler): Replace add-to-list with push. Add
	nreverse in some places where the APPEND argument of add-to-list was
	used.
	* lisp/net/network-stream.el: Turn on lexical-binding.
	* lisp/net/newsticker.el: Turn on lexical-binding.
	* lisp/net/shr.el: Turn on lexical-binding.
	(shr-make-placeholder-image): Remove unused variable binding.
	(shr-inspect-table): Replace ignored bindings with underscore.

2016-10-31  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in some url libs

	* lisp/url/url-auth.el:
	* lisp/url/url-expand.el:
	* lisp/url/url-future.el:
	* lisp/url/url-parse.el:
	* lisp/url/url-util.el: Turn on lexical-binding.

2016-10-31  Johan Bockgård  <bojohan@gnu.org>

	* lisp/emacs-lisp/cl-macs.el (cl-symbol-macrolet): Fix debug spec

	(Bug#24733)

2016-10-30  Alan Mackenzie  <acm@muc.de>

	Handle chars of syntax word which are also flagged as comment delimiters

	src/syntax.c (scan_sexps_forward): When chars of syntax word are also flagged
	as the start/end of two char comment delimiters, recognize a comment delimiter
	in preference to a portion of a word.  This fixes bug #24767.

2016-10-29  Daniel Colascione  <dancol@dancol.org>

	Speed up initialization by preferring /dev/urandom to GnuTLS

	* src/sysdep.c (init_random): Try /dev/urandom before GnuTLS.

2016-10-29  José L. Doménech  <domenechjosel@gmail.com>

	Quote file names in dired compression commands

	* lisp/dired-aux.el (dired-do-compress-to): Change the string
	used as shell command for compression by quoting the filenames
	used for input and output (Bug #24620).

2016-10-29  Eli Zaretskii  <eliz@gnu.org>

	Avoid errors in posn-at-point for large images

	* src/keyboard.c (Fposn_at_point): If pos-visible-in-window-p
	returns a 6-member list for a partially visible glyph, pass the
	sum of Y and RTOP to posn-at-x-y, since that's where the visible
	portion of that glyph begins on display.  (Bug#24804)  (Bug#21832)
	(Bug#23809)

2016-10-29  Eli Zaretskii  <eliz@gnu.org>

	Unbreak MS-Windows build

	* src/w32term.c (XCreateGC): Second argument is now HWND, and its
	name is "wignore".
	(x_set_cursor_gc, x_set_mouse_face_gc)
	(x_draw_glyph_string_background, x_draw_glyph_string_bg_rect)
	(x_draw_image_glyph_string, x_draw_stretch_glyph_string): Don't
	use s->window, which doesn't exist anymore.

	* src/w32term.h (XCreateGC): Adjust prototype.

2016-10-28  Daniel Colascione  <dancol@dancol.org>

	Add double-buffering support to reduce flicker

	* src/dispextern.h (struct glyph_string): Remove window member
	(block_buffer_flips, unblock_buffer_flips)
	(buffer_flipping_blocked_p): Declare.

	* src/xterm.h (struct x_display_info): New member supports_xdbe.
	(struct x_output): New members draw_desc and need_buffer_flip.
	(FRAME_X_DRAWABLE, FRAME_X_RAW_DRAWABLE)
	(FRAME_X_DOUBLE_BUFFERED_P)
	(FRAME_X_NEED_BUFFER_FLIP): New macros.
	(set_up_x_back_buffer, tear_down_x_back_buffer)
	(initial_set_up_x_back_buffer): Declare.

	* src/xterm.c: Include Xdbe.h.
	(x_begin_cr_clip, x_fill_rectangle, x_draw_rectangle)
	(x_draw_vertical_window_border, x_update_end)
	(x_setup_relief_color, x_draw_relief_rect)
	(x_draw_fringe_bitmap, x_shift_glyphs_for_insert)
	(x_scroll_run, x_draw_hollow_cursor, x_draw_bar_cursor): Use
	FRAME_X_DRAWABLE instead of FRAME_X_WINDOW; rename local
	variables appropriately; substitute calls to XClearArea with
	x_clear_area, which DTRT for double buffering.
	(x_clear_window, x_clear_area): In double-buffering mode, use
	rect-drawing X functions instead of XClearWindow and
	XClearArea, which always operate on the front buffer.
	(show_back_buffer): New function.
	(XTframe_up_to_date): Call show_back_buffer when done.
	(x_clear_frame, x_clear_frame_area): Remove obsolete calls to
	gtk_widget_queue_draw to refresh scroll bars; scroll bars are
	now independent X windows.
	(handle_one_xevent): Call font_drop_xrender_surfaces when
	XftDraw might need regenerating; perform buffer flip when
	responding to Expose events; issue front-buffer clearing
	commands as stopgap while we wait for redisplay.
	Call flush_dirty_back_buffers.
	(x_make_frame_visible): Un-bitrot comment; move XSETFRAME
	earlier in function.
	(x_free_frame_resources): Call tear_down_x_back_buffer when
	destroying frame.
	(x_term_init): Attempt to initialize double buffer extension.
	(x_flip_and_flush): New function.
	(x_redisplay_interface): Point to x_flip_and_flush instead of
	x_flip directly.
	(flush_dirty_back_buffers): New function.
	(x_create_terminal): Register buffer_flipping_unblocked_hook.

	* src/xftfont.c (xftfont_drop_xrender_surfaces): Use
	FRAME_X_DRAWABLE instead of FRAME_X_WINDOW.
	(xftfont_draw): Call x_mark_frame_dirty.
	(xftfont_drop_xrender_surfaces): New function.
	(syms_of_xftfont): Register it.

	* src/xfont.c (xfont_draw): Use FRAME_X_DRAWABLE instead of
	FRAME_X_WINDOW.

	* src/xfns.c: Include Xdbe.h.
	(x_set_inhibit_double_buffering, set_up_x_back_buffer)
	(Fx_double_buffered_p): New functions.
	(x_window): Call initial_set_up_x_back_buffer.
	(x_make_gc): Use FRAME_X_DRAWABLE instead of FRAME_X_WINDOW.
	(Fx_create_frame): Configure `inhibit-double-buffering'
	frame parameter.
	(x_create_tip_frame): Call initial_set_up_x_back_buffer.
	(x_frame_parm_handlers): Register
	x_set_inhibit_double_buffering.
	(syms_of_xfns): Register Sx_double_buffered_p.
	(x_mark_frame_dirty): Define.

	* src/xfaces.c (x_create_gc): Use FRAME_X_DRAWABLE instead of
	FRAME_X_WINDOW.

	* src/xdisp.c (remember_mouse_glyph, init_glyph_string): Use
	FRAME_X_DRAWABLE instead of FRAME_X_WINDOW.
	(redisplay_internal): Restart redisplay if a frame is garbaged
	during updating; explain why. Block buffer flips
	during redisplay.
	(redisplay_preserve_echo_area): Block buffer flip during call
	to redisplay_internal.
	(buffer_flip_blocked_depth): New variable.
	(block_buffer_flips, unblock_buffer_flips)
	(buffer_flipping_blocked_p): New functions.
	(init_glyph_string): Stop setting window member of struct
	glyph_string.

	* src/w32fns.c (w32_frame_parm_handlers): Add placeholder for
	x_set_inhibit_double_buffering.

	* src/termhooks.h (struct terminal): Add
	buffer_flipping_unblocked_hook.

	* src/nsfns.m (ns_frame_parm_handlers): Add placeholder for
	x_set_inhibit_double_buffering.

	* src/image.c (x_create_bitmap_from_data)
	(x_create_bitmap_from_file, x_create_x_image_and_pixmap)
	(Create_Pixmap_From_Bitmap_Data)
	(x_create_bitmap_from_xpm_data, xpm_load, gs_load): Use
	FRAME_X_DRAWABLE instead of FRAME_X_WINDOW; rename local
	variables appropriately.

	* src/gtkutil.c: Include Xdbe.h.
	(xg_get_widget_from_map): Forward declare.
	(xg_clear_under_internal_border): Remove obsolete calls to
	refresh scroll bars.
	(xg_create_frame_widgets): Call initial_set_up_x_back_buffer.
	(xg_free_frame_widgets): Call tear_down_x_back_buffer; reset
	FRAME_X_DRAWABLE as well as FRAME_X_WINDOW and for the
	same reason.
	(xg_set_background_color): Set scroll bar background colors.
	(xg_finish_scroll_bar_creation): New function with common
	logic of xg_create_scroll_bar, xg_create_horizontal_scroll_bar. Force
	scroll bars to be real X11 windows.
	(xg_create_scroll_bar, xg_create_horizontal_scroll_bar): Call
	xg_finish_scroll_bar_creation.
	(xg_update_scrollbar_pos, xg_update_horizontal_scrollbar_pos):
	Remove obsolete calls to refresh scroll bars; fix comments.

	* src/ftxfont.c (ftxfont_get_gcs, ftxfont_draw_bitmap,
	(ftxfont_draw_background): Use FRAME_X_DRAWABLE instead of
	FRAME_X_WINDOW.

	* src/frame.c (frame_parms): Add table entry for new
	`inhibit-double-buffering' frame parameter
	(syms_of_frame): Register Qinhibit_double_buffering.

	* src/font.h (struct font_driver): Add new `flush_frame_caches' hook.
	(font_drop_xrender_surfaces): Declare.

	* src/font.c (font_drop_xrender_surfaces): New function.

	* src/Makefile.in (XDBE_LIBS, XDBE_CFLAGS): Substitute.

	* etc/NEWS: Mention use of double buffering

	* doc/lispref/frames.texi (Management Parameters): Document
	`inhibit-double-buffering' frame parameters.
	(Visibility of Frames): Document `x-double-buffered-p'.

	* configure.ac: Check for the X double buffer extension

2016-10-28  Michael Albinus  <michael.albinus@gmx.de>

	Improve result of `auth-source-search' in Tramp

	* lisp/net/tramp.el (tramp-read-passwd): Require :secret and
	:user in result of `auth-source-search'.

2016-10-27  Mark Oteiza  <mvoteiza@udel.edu>

	Fix avl-tree alias docstrings

	* lisp/emacs-lisp/avl-tree.el (avl-tree--node-branch):
	(avl-tree-stack-p, avl-tree-create):
	(avl-tree-compare-function): Add calling convention to docstrings.

2016-10-27  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-10-16 qsort_r: Fix macrology for platforms that lack the function.
	2016-10-13 stdint: port SIZE_MAX to glibc s390
	2016-10-11 maint: remove stray space after "." in AC_DEFINE comment.
	* lib/gnulib.mk: Regenerate.
	* lib/stdlib.in.h, m4/st_dm_mode.m4, m4/stdint.m4, m4/stdlib_h.m4:
	* m4/utimes.m4: Copy from gnulib.

2016-10-27  Paul Eggert  <eggert@cs.ucla.edu>

	electric-quote-chars fixups

	* lisp/electric.el (electric-quote-chars): Check types and safety
	more carefully.
	(electric-quote-post-self-insert-function): Use more-mnemonic locals.
	Omit no-longer-necessary runtime error diagnostic.

2016-10-27  Göktuğ Kayaalp  <self@gkayaalp.com>

	New user variable 'electric-quote-chars'

	* doc/emacs/text.texi (Quotation Marks), etc/NEWS: Document this.
	* lisp/electric.el (electric-quote-chars): New defcustom.
	(electric-quote-post-self-insert-function): Use it.

2016-10-27  Tino Calancha  <tino.calancha@gmail.com>

	Add more tests for Bug#24627

	* test/lisp/thingatpt-tests.el (thing-at-point-bug24627):
	Add tests for 'list-at-point'.

2016-10-26  Filipp Gunbin  <fgunbin@fastmail.fm>

	* lisp/shell.el (shell--unquote&requote-argument): Match data misuse

	* lisp/shell.el (shell--unquote&requote-argument): Fix
	off-by-one thinko.  Don't use match data after a failed string-match.

2016-10-25  Paul Eggert  <eggert@cs.ucla.edu>

	* src/xwidget.c (webkit_js_to_lisp): Now static.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Map "previous-line" and "next-line" to scroll

	* lisp/xwidget.el: Map "previous-line" and "next-line" to scrolling
	procedures.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Bind "beginning-of-buffer" and "end-of-buffer"

	* lisp/xwidget.el: Rebind "beginning-of-buffer" and "end-of-buffer" to
	"xwidget-webkit-scroll-top" and "xwidget-webkit-scroll-bottom",
	respectively.
	(xwidget-webkit-scroll-top,
	xwidget-webkit-scroll-bottom): New procedures.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	Implement zoom for WebKit widget.

	* src/xwidget.c (xwidget-webkit-zoom): New procedure.
	* lisp/xwidget.el: Bind "+" and "-" to zoom in and out, respectively.
	(xwidget-webkit-zoom): Declare procedure.
	(xwidget-webkit-zoom-in, xwidget-webkit-zoom-out): New procedures.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	Dynamically resize WebKit widget.

	* lisp/xwidget.el (xwidget-webkit-auto-adjust-size,
	xwidget-webkit-adjust-size-in-frame): New procedures.
	(xwidget-webkit-new-session): Remove hint to resize widget with `a'.
	(xwidget-webkit-adjust-size-dispatch): Resize current webkit widget.
	(xwidget-webkit-adjust-size-to-window): Make non-interactive,
	add widget and window as arguments.
	(xwidget-webkit-callback): Use xwidget-webkit-adjust-size-to-window.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	Let initial WebKit view fill window

	* lisp/xwidget.el (xwidget-webkit-new-session): Change default size of
	WebKit widget to window size.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Remove title hack.

	* src/xwidget.c (xwidget-webkit-get-title): Remove procedure.
	* lisp/xwidget.el (xwidget-webkit-get-title,
	xwidget-webkit-execute-script-rv): Remove procedures.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Get URL asynchronously.

	* lisp/xwidget.el (xwidget-webkit-current-url): Kill URL in callback.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Get selection with asynchronous JavaScript

	* lisp/xwidget.el (xwidget-webkit-get-selection): Add PROC argument to
	process selection.
	(xwidget-webkit-copy-selection-as-kill): Kill selection in callback.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Add function to find element by CSS selector

	* lisp/xwidget.el (xwidget-webkit-show-element): New procedure.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Simplify functions to scroll to elements

	* lisp/xwidget.el (xwidget-webkit-show-named-element,
	xwidget-webkit-show-id-element,
	xwidget-webkit-show-id-or-named-element): Simplify functions by
	scrolling exclusively with JavaScript.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Get title via asynchronous JavaScript.

	* lisp/xwidget.el (xwidget-webkit-callback): Get document title
	asynchronously.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Do not use `xwidget-execute-script-rv' to insert string

	* lisp/xwidget.el (xwidget-webkit-insert-string): Obtain JavaScript
	return value via callback instead of using
	`xwidget-webkit-execute-script-rv'.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	Remove scrolled window container around WebKit widget

	The WebKit widget can scroll on its own and does not need to wrapped
	with a scrolled window container.

	* src/xwidget.h: Remove struct member widgetscrolledwindow_osr.
	* src/xwidget.c: Remove widgetscrolledwindow_osr.
	(xwidget-set-adjustment): Remove.
	(xwidget-resize): Resize Webkit widget last.
	* lisp/xwidget.el (xwidget-set-adjustment): Remove.
	(xwidget-webkit-scroll-up, xwidget-webkit-scroll-down,
	xwidget-webkit-scroll-forward, xwidget-webkit-scroll-backward):
	Implement scrolling via JavaScript.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Pass JavaScript return value to optional callback procedure

	* lisp/xwidget.el (xwidget-webkit-execute-script): Accept optional
	callback argument.
	(xwidget-webkit-callback): Handle "javascript-callback" event type.
	* src/xwidget.c (xwidget-webkit-execute-script): Accept optional
	argument FUN, a Lisp procedure to execute on the JavaScript return
	value.
	(store_xwidget_js_callback_event, webkit_javascript_finished_cb,
	webkit_js_to_lisp): New procedures.

2016-10-25  Ricardo Wurmus  <rekado@elephly.net>

	xwidget: Use WebKit2 API

	* configure.ac: Check for webkit2gtk-4.0.
	* src/xwidget.c: Adjust to use WebKit2 API.
	* lisp/xwidget.el (xwidget-webkit-callback): Adjust matches for
	`xwidget-event-type'.

2016-10-25  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	4c3f738 Comment for bug#24793

2016-10-25  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	96ac0c3 Yet another fix for using pointers into buffer text
	1047496 Another fix for using pointer to buffer text
	3121992 Fix Bug#24478

2016-10-25  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ee04aed Fix handling of buffer relocation in regex.c functions
	71ca4f6 Avoid relocating buffers while libxml2 reads its text
	1b3fc8a ; Remove redundant code in gmalloc.c
	9afea93 Attempt to catch reads from a buffer that is relocated

2016-10-25  Nicolas Petton  <nicolas@petton.fr>

	Minor fix in the documentation of seq-random-elt

	* doc/lispref/sequences.texi (Sequence Functions): Remove false
	  sentence.

2016-10-25  Eli Zaretskii  <eliz@gnu.org>

	Minor copyedits in documentation of 'seq-random-elt'

	* doc/lispref/sequences.texi (Sequence Functions): Fix markup in
	last change.  Use 2 spaces between sentences.

2016-10-25  Nicolas Petton  <nicolas@petton.fr>

	* lisp/emacs-lisp/seq.el (seq-random-elt): Fix docstring.

2016-10-25  Damien Cassou  <damien@cassou.me>

	Add seq-random-elt to seq.el

	* lisp/emacs-lisp/seq.el (seq-random-elt): Add function to return a
	  random element from it's sequence parameter.

	* test/lisp/emacs-lisp/seq-tests.el (test-seq-random-elt-take-all
	  test-seq-random-elt-return-nil): Test the new function

	* doc/lispref/sequences.texi: Document the new function

2016-10-24  Ken Brown  <kbrown@cornell.edu>

	* configure.ac: Stop using mmap for buffers on Cygwin.

2016-10-24  Nicolas Petton  <nicolas@petton.fr>

	* lisp/emacs-lisp/seq.el (seq-let): Fix debug spec (Bug#24738)

2016-10-24  Karl Chen  <Karl.Chen@quarl.org>

	Don't prompt user when killing Flymake processes

	* lisp/progmodes/flymake.el (flymake-start-syntax-check-process):
	Don’t prompt the user when killing Flymake processes.

	* doc/misc/flymake.texi (Starting the syntax check process):
	Document new behavior.

2016-10-23  Paul Eggert  <eggert@cs.ucla.edu>

	* src/regex.c (re_search_2): Use UNINIT, not IF_LINT.

	This finishes the merge of the recent emacs-25 regex changes into
	master.

2016-10-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	50fa7d6 ;* src/w32heap.c: Fix typo and wording of the comments.
	6f1325e electric-quote mode no longer worries about coding
	c2a1792 * src/regex.c (re_search_2): Make new code safe for -Wjump-mi...
	f6134bb Port to GCC 6.2.1 + --enable-gcc-warnings
	b2ba630 Explain how to debug emacsclient lisp errors
	9da53e2 Let describe-function work for lambda again
	5c2da93 Fix kill-line's docstring
	ad66b3f Fix handling of allocation in regex matching
	5a26c9b * lisp/electric.el (electric-quote-mode): Improve doc (Bug#24...
	3877c91 vc-region-history: Search just on lines intersecting the region
	8988327 Fix documentation of 'alist-get'
	b6998ea * src/regex.h (re_match_object): Improve commentary.

	# Conflicts:
	#	etc/NEWS
	#	lisp/help-fns.el

2016-10-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	8ad0d7d ; Fix quoting in etc/NEWS
	6b9dee1 Change Tramp version to "2.2.13.25.2"
	62f2684 * lisp/emacs-lisp/autoload.el (update-directory-autoloads): F...
	b2f32e4 Don't scan compiled module files for autoloads
	9a758b4 Fix Bug#24698
	baa8ba4 * lisp/subr.el (start-process): Doc fix.  (Bug#24693)
	e535ca4 Fix display of vc-dir CVS file statuses in subdirectories
	12da149 Update URL of MS-Windows optional DLLs
	2331056 Merge branch 'emacs-25' of git.savannah.gnu.org:/srv/git/emac...
	a4285bc * lisp/simple.el (process-menu-mode, list-processes--refresh)...
	b0c447e * lisp/ibuf-ext.el (ibuffer-do-shell-command-file): Fix non-f...
	cf3c19b * lisp/ibuffer.el (ibuffer): Improve 'other-window' case.  (B...

	# Conflicts:
	#	doc/misc/trampver.texi
	#	etc/NEWS
	#	lisp/net/tramp-sh.el
	#	lisp/net/trampver.el

2016-10-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	b73f466 * lisp/cus-start.el (exec-path): Handle nil elements.  (Bug#2...
	55ebb70 Catch the imenu-unavailable error in sh-mode completion table
	993acb5 ; Minor fix for last change in characters.el
	30c4bb5 More char-width fixes
	4eb4463 Fix char-width-table values for some Emoji
	528997d Keep point when switching from and to *terminal* buffer
	2130005 * INSTALL: Use correct Emacs release number 25.
	10835b1 Avoid crashes due to objects read with the #n=object form
	4de671d Improve doc string of 'completion-at-point-functions'
	ceb46f0 Fix crash in evaluating functions
	d8374c4 * src/filelock.c (current_lock_owner): Update comment.

2016-10-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	2deb20c Port last_marked change to full-program optimizers
	27eb668 Adapt GDB scripts to '--enable-check-lisp-object-type' builds
	dac64e3 Avoid optimizing out the last_marked[] array

2016-10-22  Noam Postavsky  <npostavs@gmail.com>

	Avoid infinite hscrolling in redisplay

	* src/xdisp.c (redisplay_internal): Add a counter to avoid horizontal
	scrolling (e.g., caused by pre-redisplay-functions) triggering infinite
	redisplay (Bug #24633).

2016-10-22  Michael Albinus  <michael.albinus@gmx.de>

	Fix error codes in Tramp

	* lisp/net/tramp-compat.el (tramp-compat-user-error): New defsubst,
	taken from tramp.el.
	(tramp-file-missing): New defconst.

	* lisp/net/tramp.el (tramp-user-error): Remove it.
	(tramp-check-proper-method-and-host)
	(tramp-dissect-file-name, tramp-debug-message)
	(tramp-handle-shell-command):
	* lisp/net/tramp-adb.el (tramp-adb-handle-shell-command):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler):
	Use `tramp-compat-user-error'.

	* lisp/net/tramp.el (tramp-handle-insert-file-contents)
	(tramp-handle-load):
	* lisp/net/tramp-adb.el (tramp-adb-handle-file-local-copy):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-local-copy)
	* lisp/net/tramp-sh.el (tramp-sh-handle-file-local-copy):
	* lisp/net/tramp-smb.el (tramp-smb-handle-file-local-copy):
	Use `tramp-file-missing'.  (Bug#24714)

	* lisp/net/tramp-sh.el (tramp-sh-handle-add-name-to-file):
	* lisp/net/tramp-smb.el (tramp-smb-handle-make-symbolic-link):
	Use `file-already-exists'.

2016-10-22  Jorgen Schaefer  <contact@jorgenschaefer.de>

	Autoload all commands from misc.el

	Only two of the commands there were autoloaded, one of which is an
	easter egg.
	* lisp/misc.el (copy-from-above-command):
	* lisp/misc.el (zap-up-to-char):
	* lisp/misc.el (mark-beginning-of-buffer):
	* lisp/misc.el (mark-end-of-buffer):
	* lisp/misc.el (upcase-char):
	* lisp/misc.el (forward-to-word):
	* lisp/misc.el (backward-to-word):
	Add autoload cookie.

2016-10-22  Martin Rudalics  <rudalics@gmx.at>

	On terminal frames ignore minibuffer frame parameter (Bug#24758)

	* src/frame.c (Fmake_terminal_frame): Don't complain when the
	caller asks for a deviant minibuffer setting (Bug#24758).

2016-10-21  Paul Eggert  <eggert@cs.ucla.edu>

	New error file-missing

	This fixes a recently-introduced bug in delete-directory,
	where the code assumes the C locale when determining
	whether a file-error corresponds to a missing file (Bug#24714).
	* doc/lispref/errors.texi (Standard Errors):
	* doc/lispref/files.texi (Changing Files):
	* etc/NEWS:
	Document this.
	* doc/lispref/loading.texi (How Programs Do Loading):
	Say "a file-error" rather than "the error file-error" since
	it might be a file-missing now.
	* lisp/emacs-lisp/bytecomp.el (byte-compile-file):
	* lisp/epa-file.el (epa-file--find-file-not-found-function):
	(epa-file-insert-file-contents, epa-file-write-region):
	* lisp/ffap.el (find-file-at-point, dired-at-point):
	* lisp/jka-compr.el (jka-compr-insert-file-contents)
	(jka-compr-insert-file-contents):
	* lisp/net/ange-ftp.el (ange-ftp-barf-if-not-directory)
	(ange-ftp-insert-file-contents, ange-ftp-copy-file-internal):
	* lisp/progmodes/etags.el (visit-tags-table):
	* lisp/url/url-handlers.el (url-copy-file):
	* src/fileio.c (report_file_errno):
	Signal file-missing if appropriate.
	* lisp/epa-file.el (epa-file-insert-file-contents):
	* lisp/jka-compr.el (jka-compr-insert-file-contents):
	Don't assume file-error is a leaf in the error hierarchy.
	* lisp/files.el (files--force):
	* lisp/gnus/nnmaildir.el (nnmaildir--enoent-p):
	* lisp/jka-compr.el (jka-compr-insert-file-contents):
	Use file-missing to detect whether the file is missing.
	* lisp/url/url-handlers.el (url-copy-file):
	Signal file-already-exists if appropriate.
	* src/fileio.c (syms_of_fileio): Define file-missing.

	2016-10-18  Paul Eggert  <eggert@cs.ucla.edu>

2016-10-21  Mark Oteiza  <mvoteiza@udel.edu>

	Teach browse-url to open man page urls

	* lisp/net/browse-url.el (browse-url-man-function): New custom option.
	(browse-url): Add a condition to catch links matching "^man:".
	(browse-url-man): New function.

2016-10-21  Eli Zaretskii  <eliz@gnu.org>

	Improve fontification of footnote references in Info buffers

	* lisp/info.el (Info-fontify-node): Don't fontify random numbers
	in parentheses as if they were footnote references.  See
	https://lists.gnu.org/r/bug-texinfo/2016-10/msg00007.html
	for the details.

2016-10-20  Philipp Stephani  <phst@google.com>

	Minor fixes to cc-mode-tests.el

	See Bug#24747.

	* test/lisp/progmodes/cc-mode-tests.el: Rename from cc-mode.el; fix typo in
	file-local variable; add comments to make checkdoc happy.

2016-10-20  Michael Albinus  <michael.albinus@gmx.de>

	* etc/NEWS: Fix typos.  Remove entries backported to Emacs 25.2.

2016-10-20  Michael Albinus  <michael.albinus@gmx.de>

	Document, how to suppress iTerm2 shell integration in Tramp

	* doc/misc/tramp.texi (Frequently Asked Questions):
	Suppress iTerm2 shell integration.

2016-10-20  Tino Calancha  <tino.calancha@gmail.com>

	cl-seq: Remove max limit on input sequence length

	* lisp/emacs-lisp/cl-seq.el (cl-fill, cl-replace, cl-delete)
	(cl--position, cl-nsubstitute, cl-substitute, cl-remove):
	Remove limit on maximum length for the input sequence
	(#Bug24264).
	* test/lisp/emacs-lisp/cl-seq-tests.el: Update test expected result as passed.

2016-10-19  Mark Oteiza  <mvoteiza@udel.edu>

	Derive dig-mode from special-mode

	* lisp/net/dig.el: Remove unused cl dependency.  Remove top level
	mode-class assignment.
	(dig-mode-map): Unmap g, as dig has no notion of reverting the buffer.
	(dig-mode): Derive from special-mode.
	(dig-exit): Use quit-window instead.
	(dig): Use pop-to-buffer-same-window.  Remove redundant assignments.
	(query-dig): Use pop-to-buffer-same-window.

2016-10-18  Johan Bockgård  <bojohan@gnu.org>

	cl-defstruct: Fix debug spec and check of slot options

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Improve checking of slot
	option syntax.  Fix debug spec.  (Bug#24700)

2016-10-18  Johan Bockgård  <bojohan@gnu.org>

	isearch: Fix bug in defstruct syntax

	* lisp/isearch.el (isearch--state): Use correct form of defstruct slot
	options.  (Bug#24685)

2016-10-18  Mark Oteiza  <mvoteiza@udel.edu>

	Add an option for eshell-input-filter

	* etc/NEWS: Document changes.
	* lisp/eshell/em-hist.el (eshell-input-filter): Set value to function
	symbol.  Change type to a radio for choosing functions.  Refer to both
	new functions.
	(eshell-input-filter-default): New function.  Same body as the previous
	value of eshell-input-filter.
	(eshell-input-filter-initial-space): New function.

2016-10-18  Paul Eggert  <eggert@cs.ucla.edu>

	delete-directory no longer errors when racing

	Problem reported by Glenn Morris for package-test.el (Bug#24714).
	* doc/lispref/files.texi (Create/Delete Dirs), etc/NEWS: Document this.
	* lisp/files.el (files--force): New function.
	(delete-directory): Use it to avoid error in this case.

2016-10-17  Yuri Khan  <yuri.v.khan@gmail.com>  (tiny change)

	Support Shift selection in nxml-mode commands

	* lisp/nxml/nxml-mode.el (nxml-forward-balanced-item)
	(nxml-up-element, nxml-backward-up-element, nxml-down-element)
	(nxml-backward-down-element, nxml-forward-element)
	(nxml-backward-element, nxml-forward-paragraph)
	(nxml-backward-paragraph): Use "^p" as the interactive spec, to
	support shift-selection.

2016-10-17  Mark Oteiza  <mvoteiza@udel.edu>

	Simplify some loops and cons

	* lisp/net/mailcap.el: Replace cl with cl-lib.
	(mailcap--get-user-mime-data, mailcap--set-user-mime-data):
	(mailcap-parse-mailcaps, mailcap-parse-mailcap-extras):
	(mailcap-possible-viewers): Use push and dolist where possible.
	(mailcap-viewer-passes-test): Remove unused binding.
	(mailcap-add-mailcap-entry): Use push.
	(mailcap-mime-info): Remove unused binding.  Use push.
	(mailcap-parse-mimetypes): Use dolist.

2016-10-17  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in auth-source

	* lisp/auth-source.el: Turn on lexical-binding.
	(auth-source-netrc-parse, auth-source-netrc-normalize):
	(auth-source-token-passphrase-callback-function):
	(auth-source-netrc-create, auth-source-secrets-search):
	(auth-source-macos-keychain-search-items):
	(auth-source-plstore-search): Use let instead of lexical-let.

2016-10-17  Martin Rudalics  <rudalics@gmx.at>

	Fix frame focus redirection with shared minibuffer windows (Bug#24500)

	* src/frame.c (do_switch_frame): Redirect frame focus also when
	the frame switched to has its minibuffer window on the selected
	frame.
	* src/window.c (candidate_window_p): To qualify as candidate
	it's not sufficient for the window's frame to just share the
	minibuffer window - it must be active as well.

2016-10-17  Eli Zaretskii  <eliz@gnu.org>

	Fix time-related data types in 2 editfns.c functions

	* src/editfns.c (format_time_string, Fcurrent_time_zone): Pass a
	pointer to 'time_t' value to 'emacs_localtime_rz' and 'gmtime_r',
	instead of relying on struct timespec's 'tv_sec' member to be of
	compatible type.

2016-10-16  Martin Rudalics  <rudalics@gmx.at>

	Document atomic windows in Elisp manual (Bug#18170)

	* lisp/window.el (display-buffer-in-atom-window): If no `side'
	alist entry was specified, use `below' as the doc tells.
	* doc/lispref/elisp.texi (Atomic Windows): Add menu entry.
	* doc/lispref/windows.texi (Atomic Windows): New section.
	(Window Parameters): Update reference.

2016-10-16  Paul Eggert  <eggert@cs.ucla.edu>

	New face homoglyph

	Suggested by Eli Zaretskii, from a feature request by
	Alan Mackenzie (Bug#24468).
	* doc/emacs/display.texi (Standard Faces, Text Display):
	* etc/NEWS: Document this.
	* etc/themes/dichromacy-theme.el, etc/themes/leuven-theme.el:
	* etc/themes/light-blue-theme.el, etc/themes/manoj-dark-theme.el:
	* etc/themes/tango-dark-theme.el, etc/themes/tango-theme.el:
	* etc/themes/wombat-theme.el:
	Customize homoglyph to be the same as escape-glyph.
	* lisp/cus-theme.el (custom-theme--listed-faces):
	Add homoglyph.
	* lisp/faces.el (homoglyph): New face.
	* lisp/startup.el (startup--setup-quote-display): Use it.

2016-10-16  Paul Eggert  <eggert@cs.ucla.edu>

	Port to Ubuntu 16.10, which needs gcc -nopie

	* configure.ac (emacs_cv_prog_cc_no_pie): Rename from
	emacs_cv_prog_cc_nopie.  All usages changed.  Check for -no-pie in
	preference to -nopie (Bug#24682).

2016-10-16  Michael Albinus  <michael.albinus@gmx.de>

	Fix bug#24665 in Tramp

	* doc/misc/tramp.texi (External methods): Do not confuse
	method names.  (Bug#24665)

2016-10-15  Sam Steingold  <sds@gnu.org>

	use full time objects (lists) instead of floats when possible

	* lisp/midnight.el (midnight-buffer-display-time): Remove
	(clean-buffer-list): Use float time only for time comparison

2016-10-15  Sam Steingold  <sds@gnu.org>

	Save and restore buffer-display-time

	* lisp/desktop.el (desktop-locals-to-save): Add `buffer-display-time'
	(desktop-read): Set `desktop-file-modtime' before loading the desktop file
	(desktop-create-buffer): Adjust `buffer-display-time' for the downtime

2016-10-15  Philipp Stephani  <phst@google.com>

	Disable bracketed paste in a terminal in char mode

	In char mode, a terminal doesn't accept bracketed paste events,
	therefore we should disable them; see Bug#24639.  To decouple the XTerm
	management from term.el, introduce a per-buffer setting to disable
	bracketed paste for that buffer.  If bracketed paste is inhiited for at
	least one buffer in a terminal, it is disabled for the whole terminal.

	* lisp/term/xterm.el (xterm-inhibit-bracketed-paste-mode): New mode to
	inhibit XTerm bracketed paste per buffer.
	(xterm--buffer-terminals, xterm--update-bracketed-paste)
	(xterm--bracketed-paste-possible, xterm--is-xterm): New helper
	functions.
	(xterm--init-bracketed-paste-mode): Remove unused helper
	function.
	(terminal-init-xterm): Update bracketed paste status when
	initializing an XTerm and on window configuration change.

	* lisp/term.el (term-char-mode, term-line-mode): Inhibit XTerm
	bracketed paste in char mode.

2016-10-15  Dima Kogan  <dima@secretsauce.net>

	Undo the effect of CapsLock when other modifiers are present

	* src/keyboard.c (make_lispy_event): Effectively undo the effect
	of CapsLock if any modifiers other than Shift are present in a key.
	(Bug#24456)

2016-10-15  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for foreign completions in CSS mode

	* test/lisp/textmodes/css-mode-tests.el
	(css-test-foreign-completions): New test for
	`css--foreign-completions'.
	(css-test-complete-selector-tag): Rename test.
	(css-test-complete-selector-class): New test testing completion of
	class names in selectors.
	(css-test-complete-selector-id): New test testing completion of IDs in
	selectors.

2016-10-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Cosmetic change to last mm-url change

	* lisp/gnus/mm-url.el (mm-url-encode-multipart-form-data):
	Tweak last change slightly for more readability.

2016-10-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix problem with submitting binary data via HTTP forms

	* lisp/gnus/mm-url.el (mm-url-encode-multipart-form-data):
	Document the parameters, clean up the code, and make uploading
	binary data really work (which it didn't if the binary bits
	were in the last part of the data).

2016-10-13  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/time.el (display-time-string-forms): Fix custom type.

2016-10-13  Mark Oteiza  <mvoteiza@udel.edu>

	Derive Man and WoMan modes from special-mode

	* lisp/man.el (Man-mode-map): Set parent to map composed from both
	button-buffer-map and special-mode-map.  Remove redundant bindings.
	Fix menu to refer to the quit-window command.
	(Man-mode): Derive from special-mode.  Fix docstring.  Remove redundant
	buffer-read-only binding.
	(Man-quit): Remove.
	* lisp/woman.el (woman-really-find-file): Use setq-local.
	(woman-mode-map): Refer to woman-mode in docstring.
	(woman-mode): Derive from special-mode.  Document woman-mode-map in
	docstring.  Use setq-local where possible; imenu-generic-expression is
	already buffer-local.
	(woman-negative-vertical-space): Replace unused binding with _.

2016-10-13  Philipp Stephani  <phst@google.com>

	Fix crash in evaluating functions

	See Bug#24673

	* src/eval.c (funcall_lambda): Fix crash for bogus functions such
	as (closure).

	* test/src/eval-tests.el (eval-tests--bug24673): Add test.

2016-10-13  Tino Calancha  <tino.calancha@gmail.com>

	Add test for Bug#24627

	* test/lisp/thingatpt-tests.el (thing-at-point-bug24627): New test.

2016-10-12  Eli Zaretskii  <eliz@gnu.org>

	* lib-src/etags.c (invalidate_nodes): Remove a redundant nullp test.

2016-10-11  Paul Eggert  <eggert@cs.ucla.edu>

	Work around Samba bug with ':' in symlink contents

	* src/filelock.c (current_lock_owner): When reading the contents
	of a lock, treat the UTF-8 for U+F022 as if it were ':' (Bug#24656).

2016-10-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	If autoloads buffer is unchanged, mark it as such (bug#23692)

	* lisp/emacs-lisp/autoload.el (update-directory-autoloads):
	If autoloads buffer is unchanged, mark it as such (bug#23692).

2016-10-11  Michael Albinus  <michael.albinus@gmx.de>

	Use "26.1" version string in Tramp, fix some comments

	* lisp/net/tramp-gvfs.el (tramp-gvfs-methods):
	* lisp/net/tramp-sh.el (tramp-remote-process-environment):
	Use "26.1" version string.

2016-10-10  Tino Calancha  <tino.calancha@gmail.com>

	form-at-point work for all kind of THINGS

	* lisp/thingatpt.el (form-at-point):
	Use thing-at-point--read-from-whole-string only if thing-at-point
	returns a string (Bug#24605).

2016-10-10  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation warnings on MS-Windows

	* src/w32.c (_ANONYMOUS_UNION, _ANONYMOUS_STRUCT): Remove
	definitions of these macros, which seem to be unneeded and cause
	compiler warnings.
	* src/fileio.c (NOMINMAX): Avoid compiler warnings about unused
	macros.
	* src/firstfile.c (dummy_main_reference): Rename from 'dummy' and
	make it external, to avoid compiler warning.

2016-10-10  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling and clarity fixes

2016-10-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	4f406e9 CC Mode manual: remove reference to former Emacs variable las...
	44e402e Allow to disable compaction of font caches
	4ff4b66 Allow selection of font for symbols as in Emacs 24.x
	c03d44b ; Fix last commit
	d4be4f3 ; Fix indexing in lispref manual
	ed399f2 ; Minor improvement in documentation of generators
	197a6bc Fix horizontal scrolling during Isearch
	3566644 Fix infloop in redisplay due to truncated lines and invisible...

	# Conflicts:
	#	etc/NEWS

2016-10-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	c4a5e7e Improve documentation of 'menu-bar-open'

2016-10-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	4b347fe Clarify that doc fixes are okay in feature freeze
	01669ad Avoid crashes when setting the cursor
	f2144ee Restore 'command-debug-status' functionality
	ec6e4b9 ; Minor addition to CONTRIBUTE

2016-10-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	74b4f13 Document nil args of compare-buffer-substrings
	9fc81bc * doc/misc/message.texi (Bcc Warning): Fix markup.
	95baa25 * doc/misc/message.texi (Bcc Warning): Document mml-secure-sa...

2016-10-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	f1247f0 * lisp/frame.el (blink-cursor-delay): Doc fix.  (Bug#24372)
	ace7f14 * lisp/gnus/gnus-art.el (gnus-button-handle-library): Fix typo.
	bbf1ffd Regexp Functions doc minor fixes

2016-10-08  Philipp Stephani  <phst@google.com>

	Don’t consider nested let-alist forms

	See Bug#24641.

	* lisp/emacs-lisp/let-alist.el (let-alist--deep-dot-search): Don’t
	consider symbols in nested ‘let-alist’ forms.

	* test/lisp/emacs-lisp/let-alist-tests.el
	(let-alist--deep-dot-search--nested): Add a unit test.

2016-10-08  Alain Schneble  <a.s@realize.ch>

	Support SIGTRAP in kill emulation on Windows

	* src/w32proc.c (sys_kill): Translate SIGTRAP signal into a call to
	'DebugBreakProcess' to cause a breakpoint exception to occur in the
	specified process.  On Windows versions prior to Windows XP that do
	not support 'DebugBreakProcess' return -1 and set errno to ENOTSUP
	(as opposed to EINVAL before this change).
	* src/w32proc.c: Add typedef for 'DebugBreakProcess' function pointer
	and global variable to track state of run-time dynamic linking of this
	function.

	* etc/NEWS: Add entry to document that 'signal-process' now supports
	SIGTRAP.

2016-10-08  Eli Zaretskii  <eliz@gnu.org>

	Deprecate 'wp' group and introduce a new group 'text'

	* lisp/textmodes/tildify.el (tildify):
	* lisp/textmodes/text-mode.el (text-mode-hook):
	* lisp/textmodes/table.el (table):
	* lisp/textmodes/rst.el (rst):
	* lisp/textmodes/refer.el (refer):
	* lisp/textmodes/refbib.el (refbib):
	* lisp/textmodes/picture.el (picture):
	* lisp/textmodes/nroff-mode.el (nroff):
	* lisp/textmodes/enriched.el (enriched):
	* lisp/textmodes/bib-mode.el (bib):
	* lisp/progmodes/ebnf2ps.el (ebnf2ps):
	* lisp/nxml/rng-valid.el (relax-ng):
	* lisp/view.el (view):
	* lisp/ps-print.el (ps-print):
	* lisp/printing.el (printing):
	* lisp/outline.el (outlines):
	* lisp/lpr.el (lpr):
	* lisp/delim-col.el (columns): Use 'text' group instead of 'wp'.
	* lisp/cus-edit.el (wp): Remove the "text" tag.
	(text): New defgroup, inherits from the deprecated 'wp'.
	(outlines): Remove, in favor of the definition in outline.el.
	(tex): Inherit from 'text'.
	Suggested by Drew Adams <drew.adams@oracle.com>.  (Bug#24549)

2016-10-08  Laimonas Vėbra  <laimonas.vebra@yahoo.com>  (tiny change)

	Extend dictionary and library-directory handling for Ispell

	* lisp/textmodes/ispell.el (ispell-check-version): Allow
	overriding LIBDIR via the variable defined by LIBRARYVAR (usually
	ISPELL_DICTDIR).
	(ispell-valid-dictionary-list): If the -d option to Ispell
	specifies an absolute file name, use that regardless of
	ispell-library-directory.  (Bug#24439)

2016-10-07  Tassilo Horn  <tsdh@gnu.org>

	Fix unescaped \begin{...} in docstring

	* lisp/textmodes/reftex-cite.el (reftex-bib-or-thebib): Fix unescaped
	\begin{...} in docstring.

2016-10-06  Noah Friedman  <friedman@splode.com>

	Update comment.

2016-10-06  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation with MinGW runtime 3.22.2 and w32api 3.18.2

	* nt/inc/ms-w32.h (_WIN32_WINNT) [!MINGW_W64]: Undefine before
	defining to avoid redefinition warnings.

	* nt/inc/sys/stat.h (_SYS_STAT_H, _INC_STAT_H): Define, to avoid
	inclusion of sys/stat.h from the system headers, which could then
	lead to compilation errors due to redefinition of 'struct stat'
	etc.  This is needed because latest versions of MinGW runtime
	include sys/stat.h from wchar.h.

	* src/image.c (__MINGW_MAJOR_VERSION) [WINDOWSNT]: Temporarily
	redefine to 4 to avoid conflict between 2 definitions of
	MemoryBarrier.  (Bug#24613)

2016-10-05  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/url/url-parse.el (url-generic-parse-url): Unquote macro URL argument.

2016-10-05  Mark Oteiza  <mvoteiza@udel.edu>

	Autoload entry point testcover-start

	* lisp/emacs-lisp/testcover.el: Add autoload cookie for
	testcover-start.

2016-10-05  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	Bump version of ntlm.el to 2.1.0

	* lisp/net/ntlm.el: Bump version to 2.1.0.

2016-10-05  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	lisp/net/ntlm.el: Fix comment and docstring formatting

2016-10-05  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	lisp/net/ntlm.el: Match Mozilla Type 1 and 3 message behavior

	* lisp/net/ntlm.el (ntlm-build-auth-request): Only set
	"negotiate domain supplied" bit when a domain is supplied.  Do
	not set "negotiate workstation supplied" bit.
	(ntlm-build-auth-response): Set domain to empty string by
	default.  Set workstation name to "WORKSTATION".  Set flags to
	logical and of Type 1 and Type 2 message flags.  Remove four
	trailing 0 bytes.  Always set LM response.  Hard-code domain
	offset.  Reorder buffer fields.

2016-10-05  Martin Rudalics  <rudalics@gmx.at>

	Document return value of `display-buffer-in-side-window'

	* doc/lispref/windows.texi (Displaying Buffers in Side Windows):
	* lisp/window.el (display-buffer-in-side-window): Describe
	return value of `display-buffer-in-side-window'.

2016-10-05  Eli Zaretskii  <eliz@gnu.org>

	Improve wording in side windows documentation

	* doc/lispref/windows.texi (Displaying Buffers in Side Windows)
	(Side Window Options and Functions)
	(Frame Layouts with Side Windows): Minor wording improvements.

2016-10-05  Martin Rudalics  <rudalics@gmx.at>

	Document and fix some bugs with side windows

	Add a documentation for side windows and fix some bugs
	found when testing their behavior.  Also add a new window
	parameter `no-delete-other-window', a new `display-buffer'
	alist member called `window-parameters', and functions to
	toggle and reverse side windows on a frame.  Add new function
	`window-swap-states' to exchange states of two live windows.

	* lisp/window.el (display-buffer-in-atom-window): Use
	`split-window-no-error'.
	(window-sides-vertical): Maybe change layouts when setting this
	variable.
	(window-sides-reversed): New option.
	(window-sides-slots): Rewrite doc-string and help echoes.
	(window-sides-shown): New buffer-local variable set when showing
	a buffer in a side window.
	(window--sides-inhibit-check): New variable.
	(window--sides-reverse-on-frame-p, window-toggle-side-windows)
	(window--sides-reverse-all, window--sides-reverse-frame)
	(window--sides-reverse-side, window--sides-reverse)
	(window--sides-verticalize-frame, window--sides-verticalize)
	(window--sides-check-failed): New functions.
	(window--side-window-p): Remove function.
	(window--major-non-side-window): Rename to `window-main-window',
	adjust callers, rewrite doc-string.
	(window--major-side-window): Rename to
	`window--make-major-side-window-next-to', adjust caller, fix
	doc-string.
	(display-buffer-in-major-side-window): Rename to
	`window--make-major-side-window', adjust
	caller, rewrite doc-string.  Make `window-side' and
	`window-slot' parameters persistent (Bug#23858).  Don't set
	`delete-window' parameter.  Add `preserve-size' entry to ALIST.
	(delete-side-window): Remove function.
	(display-buffer-in-side-window): Fix doc-string.  Don't set
	`delete-window' parameter.  Add `preserve-size' entry to ALIST.
	(window--side-check): Rename to window--sides-check.  Rewrite
	completely.  Adjust caller.
	(window-resize-no-error): Don't describe PIXELWISE argument.
	(adjust-window-trailing-edge): Fix bug that disallowed
	re-enlarging windows that were too small.
	(window-deletable-p): Don't tell that a minibuffer window on a
	non-minibuffer-only frame can be deleted.  Fix doc-string.
	(delete-window): Handle deleting a side window here (the
	`delete-window' parameter is no more set for side windows).
	(delete-other-windows): Handle ‘no-delete-other-window'
	parameter. Don't treat side windows separately (see discussion
	of Bug#24368) but keep optimization that makes the main window
	the root window of its frame.
	(switch-to-prev-buffer, switch-to-next-buffer): Handle side
	windows and buffers shown in side windows separately.
	(split-window-no-error): New function.
	(window--state-get-1): Use right buffer when storing window
	point and start positions and WRITABLE is nil (Bug#24368).
	(window--state-put-1): Fix handling of `window-combination-limit'.
	Use `split-window-no-error'.
	(window--state-put-2): Try to restore windows with preserved
	size to their original size.  Fix bug where a fixed window's width
	was not preserved.
	(window-state-put): When reducing an internal window to a live
	one, don't choose a side window.
	(window-swap-states): New function.
	(window-splittable-p): Don't call `window--side-window-p'.
	(window--display-buffer): Handle `window-parameters' ALIST entry.
	Minor rewrite.
	(display-buffer): Mention `window-parameters' entry in
	doc-string.
	(display-buffer-at-bottom): Call `split-window-no-error'.

	* doc/lispref/elisp.texi (Top): New section "Side Windows".
	* doc/lispref/windows.texi (Deleting Windows): Fix descriptions
	of `delete-window' and `delete-other-windows' wrt window
	parameters and side windows.
	(Display Action Functions): Mention `window-parameters' ALIST
	entry.
	(Side Windows): New section (Bug#18170).
	(Window Configurations): Describe new function `window-swap-states'.
	(Window Parameters): Say that functions may behave specially when
	their homonymous window parameter has been set.  Mention new
	parameter `no-delete-other-window'.  Add cross reference for
	`window-side' and `window-slot' parameters.

2016-10-04  John Wiegley  <johnw@newartisans.com>

	Add documentation note from Alex

2016-10-04  Mark Oteiza  <mvoteiza@udel.edu>

	Avoid dynamic binding on a symbol

	Instead, bind history in the default minibuffer-history.
	Fixes bug#24580.
	* lisp/replace.el (query-replace-read-from): Let-bind
	minibuffer-history.  Change read-regexp and read-from-minibuffer's
	HISTORY arguments to nil so that they use minibuffer-history.

2016-10-03  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/fileio.c (Finsert_file_contents): Fix hook handling (bug#24340)

	* src/fileio.c (Finsert_file_contents): Run before-change-hooks before
	deleting the old buffer content.
	* src/lisp.h (del_range_byte):
	* src/insdel.c (del_range_byte): Drop the last argument.
	* src/fns.c (Fbase64_encode_region): Adjust accordingly.

2016-10-03  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: 'w' and 'B' default to buffer at current line

	See discussion in:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00384.html
	* lisp/ibuffer.el (ibuffer--near-buffers): New defun;
	return buffers near current line.
	* lisp/ibuf-ext.el (ibuffer-copy-buffername-as-kill): Use it.
	Add argument ARG; if a non-zero integer, return next ARG buffers.
	Otherwise return the marked buffers.
	If there are not marked buffers, return buffer at current line
	without prompting the user.
	Use ibuffer-get-marked-buffers instead of ibuffer-map-marked-lines.
	Append to kill ring when last command was a kill-region.
	(ibuffer-copy-filename-as-kill): Idem.
	Simplify the code.
	Use ibuffer-buffer-file-name instead of buffer-file-name to
	include buffers in Dired mode.

2016-10-03  Tino Calancha  <tino.calancha@gmail.com>

	dired-mark-extension: Unmark if called with C-u prefix

	See discussion in #Bug2518 and:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00711.html
	* lisp/dired-x.el (dired-mark-extension):
	Update interactive calls: a prefix arg C-u unmark files;
	a prefix C-u C-u prompt for MARKER-CHAR and mark files with it.
	(dired-mark-sexp):
	Show in the prompt that we are unmarking if called with a prefix argument.
	* doc/misc/dired-x.texi (Advanced Mark Commands):
	Update documentation for 'dired-mark-extension'.

2016-10-02  Karl Fogel  <kfogel@red-bean.com>

	Document yank behavior in the right place

	* lisp/simple.el (yank): Document the handling of the
	`yank-handled-properties' and `yank-excluded-properties' variables,
	and the `yank-handler' text property.
	(yank-pop): Refer to `yank' now (bug#286)

	* lisp/subr.el (insert-for-yank): Refer to `yank' now.
	(insert-for-yank-1): Refer to `insert-for-yank' now.

	See this thread for discussion:

	  https://lists.gnu.org/r/emacs-devel/2016-09/threads.html#00329
	  From: Karl Fogel
	  To: Emacs Devel
	  Subject: Question about intended behavior of 'insert-for-yank-1'.
	  Date: Mon, 12 Sep 2016 00:17:14 -0500
	  Message-ID: <874m5lr92d.fsf@red-bean.com>

2016-10-02  Philipp Stephani  <phst@google.com>

	Restart blink cursor timers on interval changes

	This prevents surprising behavior when timer interval customizations are
	only applied whenever the timers happen to be restarted (see Bug#24372).

	* lisp/frame.el (blink-cursor--start-idle-timer)
	(blink-cursor--start-timer): New functions.
	(blink-cursor-start, blink-cursor-check, blink-cursor-mode): Use
	the new helper functions.
	(blink-cursor-delay, blink-cursor-interval): Restart timers when
	the value is changed.

2016-10-01  Philipp Stephani  <phst@google.com>

	Use a simple keyword for a non-nil argument

	The second argument of `run-with-idle-timer' is Boolean, i.e. only nil
	and non-nil values are distinguished.  Passing a number here is
	confusing.  Pass a descriptive symbol instead.

	* lisp/frame.el (blink-cursor-mode, blink-cursor-check): Use
	:repeat symbol instead of number for second argument of
	`run-with-idle-timer'

2016-10-01  Philipp Stephani  <phst@google.com>

	Make querying to kill processes customizable

	Introduce a new customization option, `confirm-kill-processes', that
	users can set to nil if they don't want Emacs to nag them about killing
	processes.

	* lisp/files.el (confirm-kill-processes): New customization option.
	(save-buffers-kill-emacs): Use customization option.

	* test/lisp/files-tests.el
	(files-test--save-buffers-kill-emacs--confirm-kill-processes): Add
	test for new customization option.

	* doc/emacs/entering.texi (Exiting): Document new user option.

	* doc/lispref/processes.texi (Query Before Exit): Document new
	user option.

	* etc/NEWS: Document new user option.

2016-10-01  Eli Zaretskii  <eliz@gnu.org>

	Set :version of 'debugger-stack-frame-as-list'

	* lisp/cus-start.el (debugger-stack-frame-as-list): Give value to
	the ':version' attribute.

2016-10-01  Eli Zaretskii  <eliz@gnu.org>

	Bump Emacs version to 26.0.50

	* README:
	* configure.ac:
	* etc/NEWS:
	* etc/refcards/ru-refcard.tex:
	* msdos/sed2v2.inp:
	* src/msdos.c: Increment Emacs version to 26.0.50.
	* etc/NEWS.25: New file, copied from etc/NEWS with post-25.1 stuff
	moved to etc/NEWS.

2016-10-01  Eli Zaretskii  <eliz@gnu.org>

	Avoid compilation warning on MinGW

	* src/w32.c: Include string.h, needed for the prototype of
	'strerror', shadowed by 'sys_strerror'.  This avoids a compiler
	warning about "no previous prototype".  The string.h header
	must be included after ms-w32.h, but before "#undef strerror".

2016-09-30  Alan Third  <alan@idiocy.org>

	Fix compatibility with macOS 10.12 pmset (bug#24537)

	* lisp/battery.el (battery-pmset): Recognize and ignore battery id if
	present in output.

2016-09-30  Paul Eggert  <eggert@cs.ucla.edu>

	Limit <config.h>’s includes

	This follows up on recent problems with the fact that config.h
	includes stdlib.h etc.; some files need to include stdlib.h later.
	config.h generally should limit itself to includes that are
	universally safe; outside of MS-Windows, only stdbool.h makes
	the cut among the files currently included.  So, move the
	other includes to just the files that need them (Bug#24506).
	* configure.ac (config_opsysfile): Remove, as this generic hook
	is no longer needed.
	* lib-src/etags.c, src/unexmacosx.c, src/w32.c, src/w32notify.c:
	* src/w32proc.c (_GNU_SOURCE):
	Remove, as it’s OK for config.h to do this now.
	* src/conf_post.h: Include <ms-w32.h>, instead of the generic
	config_opsysfile, for simplicity as this old way of configuring is
	now done only for the MS-Windows port.  Do not include <ms-w32.h>
	if DEFER_MS_W32_H, for the benefit of the few files that want its
	effects later.  Do not include <alloca.h>, <string.h>, or
	<stdlib.h>.  Other files modified to include these headers as
	needed, or to not include headers that are no longer needed.
	* src/lisp.h: Include <alloca.h> and <string.h> here, since
	some of the inline functions need them.
	* src/regex.c: Include <alloca.h> if not emacs.  (If emacs,
	we can rely on SAFE_ALLOCA.)  There is no longer any need to
	worry about HAVE_ALLOCA_H.
	* src/unexmacosx.c: Rely on config.h not including stdlib.h.
	* src/w32.c, src/w32notify.c, src/w32proc.c (DEFER_MS_W32_H):
	Define before including <config.h> first, and include <ms-w32.h>
	after the troublesome headers.

2016-09-30  Vasilij Schneidermann  <v.schneidermann@gmail.com>

	New user option 'debugger-stack-frame-as-list'

	* src/eval.c (syms_of_eval) <debugger-stack-frame-as-list>: New
	variable.
	* lisp/cus-start.el (standard): Add debugger-stack-frame-as-list.
	* lisp/emacs-lisp/debug.el (debugger-setup-buffer): Adjust
	backtrace processing for the value of debugger-stack-frame-as-list.
	* lisp/emacs-lisp/edebug.el (edebug-backtrace): Adjust backtrace
	processing for the value of debugger-stack-frame-as-list.
	* doc/lispref/debugging.texi (Internals of Debugger): Document
	debugger-stack-frame-as-list.
	* etc/NEWS: Mention 'debugger-stack-frame-as-list'.

2016-09-30  Aurelien Aptel  <aaptel@suse.com>

	* src/alloc.c: call only non-null finalizers

2016-09-30  Eli Zaretskii  <eliz@gnu.org>

	Avoid compiler warnings in image.c on MS-Windows

	* src/image.c (DrawText, g_type_init) [WINDOWSNT]: Avoid compiler
	warning about unused macros.

2016-09-30  Paul Rankin  <hello@paulwrankin.com>

	* lisp/outline.el (outline-invisible-p): Only return `t' for
	the 'outline property.

2016-09-29  Paul Eggert  <eggert@cs.ucla.edu>

	Fix problems found by static checking --with-ns

	This is for Fedora 24 when configured with --enable-gcc-warnings.
	Although it does not fix all the problems, it fixes many of them.
	* src/frame.c (XParseGeometry):
	* src/nsterm.m (mouseDown:):
	Mark locals with UNINIT to pacify --enable-gcc-warnings.
	* src/image.c (PIX_MASK_DRAW, DefaultDepthOfScreen):
	Remove unused macros.
	(slurp_file xbm_scan, xbm_read_bitmap_data, xbm_load_image)
	(xbm_file_p, xbm_load, xpm_scan, xpm_make_color_table_v)
	(xpm_put_color_table_v, xpm_get_color_table_v)
	(xpm_make_color_table_h, xpm_put_color_table_h)
	(xpm_get_color_table_h, xpm_load_image, xpm_load)
	(pbm_next_char, pbm_scan_number, pbm_load, svg_load)
	(svg_load_image):
	* src/nsfns.m (x_get_string_resource):
	* src/nsimage.m (ns_image_from_XBM):
	Fix pointer signedness problems.
	* src/image.c (xpm_load_image, x_build_heuristic_mask, pbm_load)
	(imagemagick_load_image): Omit unused locals.
	* src/nsfns.m (ns_send_types, ns_return_types, ns_drag_types)
	(Fx_open_connection):
	* src/nsfont.m (ns_antialias_threshold):
	Move extern decl to nsterm.h so it can be checked.
	* src/nsmenu.m (svcsMenu, dockMenu):
	Move to the only file that uses them, so they can be static.
	* src/nsterm.h (find_and_call_menu_selection):
	* src/nsterm.m (x_set_frame_alpha):
	Omit duplicate decls.
	* src/nsterm.h (ns_dump_glyphstring): Mark as EXTERNALLY_VISIBLE.
	* src/nsfns.m (ns_tooltip, ns_display_info_for_name)
	(ns_set_name_as_filename, x_set_menu_bar_lines)
	(x_set_tool_bar_lines, x_set_internal_border_width):
	* src/nsterm.m (ns_drag_types, ns_draw_text_decoration):
	Now static.
	* src/nsfns.m (ns_lisp_to_cursor_type, ns_cursor_type_to_lisp):
	* src/nsterm.m (ns_free_indexed_color, ns_color_to_lisp):
	Remove; unused.
	* src/nsfont.m (ns_dump_glyphstring):
	* src/nsterm.m (hide_bell, ns_get_color, ns_color_to_lisp)
	(ns_clear_frame, keyDown:):
	Fix signedness problem with printf arg.
	* src/nsterm.h (ns_input_events, ns_finish_events):
	* src/nsterm.m (ns_finish_events, hide_bell):
	Prototype the decls.
	* src/nsterm.m (NSMenuDidBeginTrackingNotification):
	Omit unnecessary decl.
	(dockMenu):
	(mainMenu) [NS_IMPL_COCOA]: Now static, and in this file.
	(ns_dumpglyphs_box_or_relief, changeFont:, initFrameFromEmacs:)
	(toggleFullScreen:): Use FACE_FROM_ID instead of
	FACE_FROM_ID_OR_NULL in contexts where the caller expects the
	result to be non-null.
	(applicationShouldTerminate:): Fix misleading indentation.

2016-09-28  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on more lexical-binding

	* lisp/dom.el:
	* lisp/faces.el:
	* lisp/htmlfontify.el: Turn on lexical-binding.
	(htmlfontify-string): Use pushnew instead of add-to-list.
	* lisp/info-xref.el:
	* lisp/isearch.el:
	* lisp/man.el:
	* lisp/ps-def.el:
	* lisp/ps-print.el:
	* lisp/replace.el: Turn on lexical-binding.  Require cl-lib at compile
	time.
	(multi-occur): Use cl-pushnew instead of add-to-list.
	(replace-match-string-symbols): Remove unused lexical variable.
	(replace-search, replace-highlight): Fix argument shadowing.
	* lisp/sort.el:
	* lisp/xml.el: Turn on lexical-binding.
	(xml--parse-buffer): Use push instead of add-to-list.
	* lisp/xt-mouse.el: Turn on lexical-binding.

2016-09-27  Michael Albinus  <michael.albinus@gmx.de>

	* admin/notes/bug-triage: Do not mention closed bugs

	* admin/notes/bug-triage: Do not mention closed bugs, they are
	suppressed by default in debbugs-{gnu,org}.

2016-09-27  Michael Albinus  <michael.albinus@gmx.de>

	* etc/PROBLEMS: Remove problem Bug#22814, again.

2016-09-26  Paul Eggert  <eggert@cs.ucla.edu>

	Stick with debbugs-supported tags in triage

	* admin/notes/bug-triage: Stick to the tag "unreproducible", which
	debbugs supports, rather than suggesting "doneunreproducible" or
	"unreproducable".

2016-09-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9fc9988 Improve documentation of 'expand-abbrev' and wrapper hooks
	c14a1d4 Minor copyedits of MS-Windows installation instructions
	f281924 Fix display of cursor when 'blink-cursor-delay' has small value

	# Conflicts:
	#	lisp/minibuffer.el

2016-09-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	0ae9a81 Document 'timerp'
	2c72c46 Improve documentation of overlay priorities
	f6fa160 Fix 'dired-compress-files'
	2b8c5f0 Update commentary of STRING_CHAR and FETCH_MULTIBYTE_CHAR

	# Conflicts:
	#	lisp/dired.el
	#	src/buffer.h
	#	src/character.h

2016-09-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	cf9e174 Document the optional zlib library in MS-Windows builds
	84eb144 ; * admin/notes/unicode: Mention BidiCharacterTest.txt.
	73c67dd Fix tagging of DEFUN by etags
	ea1960b Avoid resetting track-mouse by mouse clicks
	505fef3 Improve nt/README.W32 instructions
	1229cc4 Document that desktop file overrides frame parameters
	f0eb70d ; Update ChangeLog.2 and ldef-boot.el for Emacs 25.1 release

	# Conflicts:
	#	ChangeLog.2
	#	admin/notes/unicode
	#	lisp/ldefs-boot.el

2016-09-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	0ffc9ce Update admin/authors.el
	0ad7410 Update Antinews in ELisp manual
	ea0f750 Fix comments on window height macros
	0bbdeed Fix 'url-http-create-request' when cookies are used
	0045998 Fix cross reference in frames.texi
	1392894 ; * etc/DEBUG: Minor copyedits.
	304a5c8 ; * etc/DEBUG: Improve documentation of getting control to GDB.
	56bf7d7 Fix regexp-opt documentation (bug #17862)
	803ad6f ; Fix documentation of seq-subseq
	ed4530d * lisp/emacs-lisp/gv.el (gv-ref): Fix example of PLACE in doc...
	88ea396 ; Spelling fixes
	17197d0 Fix tags-query-replace docstring
	80a7f8b Clarify documentation of precision in format specs
	88a5052 Improve and clarify documentation of subprocesses
	89eb09f * etc/PROBLEMS: Mention gnutls-cli 3.5.3 (Bug#24247).

	# Conflicts:
	#	etc/PROBLEMS
	#	src/process.c

2016-09-26  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-compat.el (tramp-compat-funcall): Don't use `subrp'.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Fix 'dired-mark-extension' with prefix argument

	* lisp/dired-x.el (dired-mark-extension): Allow to specify
	MARKER-CHAR interactively as a string, not as a character's
	codepoint.  (Bug#24518)

	* doc/misc/dired-x.texi (Advanced Mark Commands): Document the
	behavior when invoked with a prefix arg.

2016-09-24  Simen Heggestøyl  <simenheg@gmail.com>

	Support completion of classes and IDs in CSS mode

	* lisp/textmodes/css-mode.el (css-class-list-function): New variable
	holding the function to call for retrieving completions of class
	names.
	(css-id-list-function): New variable holding the function to call for
	retrieving completions of IDs.
	(css--foreign-completions): New function for retrieving completions
	from other buffers.
	(css--complete-selector): Support completing HTML class names and IDs
	from other buffers in addition to completing HTML tags.

	* lisp/textmodes/sgml-mode.el (html--buffer-classes-cache): New
	variable holding a cache for `html-current-buffer-classes'.
	(html--buffer-ids-cache): New variable holding a cache for
	`html-current-buffer-ids'.
	(html-current-buffer-classes): New function returning a list of class
	names used in the current buffer.
	(html-current-buffer-ids): New function returning a list of IDs used
	in the current buffer.
	(html-mode): Set `css-class-list-function' and `css-id-list-function'
	to `html-current-buffer-classes' and `html-current-buffer-ids'
	respectively.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Update test suite files due to removal of test/lisp/legacy

	* test/README: Reference file-organization.org.
	* test/file-organization.org: Remove the description of files in
	the lisp/legacy/ directory.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Incorporate syntax-tests in lisp-tests.

	* test/lisp/emacs-lisp/lisp-tests.el: Add tests from
	test/lisp/legacy/syntax-tests.el.
	* test/lisp/legacy/syntax-tests.el: File deleted.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Incorporate occur-tests in replace-tests

	* test/lisp/replace-tests.el: Add tests from
	test/lisp/legacy/occur-tests.el.
	* test/lisp/legacy/occur-tests.el: File deleted.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Incorporate lexbind-tests.el in bytecomp-test.el

	* test/lisp/emacs-lisp/bytecomp-tests.el: Added tests from
	test/lisp/legacy/lexbind-tests.el.
	* test/lisp/legacy/lexbind-tests.el: File deleted.

2016-09-24  Paul Eggert  <eggert@cs.ucla.edu>

	Improve integer overflow handling a bit

	* src/charset.c (read_hex): Use INT_LEFT_SHIFT_OVERFLOW for clarity.
	The machine code is the same on my platform.
	* src/doprnt.c (doprnt):
	* src/emacs-module.c (module_funcall):
	* src/font.c (font_intern_prop):
	* src/keyboard.c (Frecursion_depth):
	* src/lread.c (read1):
	Use WRAPV macros instead of checking overflow by hand.
	* src/editfns.c (hi_time, time_arith, decode_time_components):
	* src/emacs-module.c (Fmodule_load):
	Simplify by using FIXNUM_OVERFLOW_P.
	* src/emacs-module.c: Include intprops.h.
	* src/xdisp.c (percent99): New function.
	(decode_mode_spec): Use it to simplify overflow avoidance and
	formatting of %p and %P.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Incorporate core-elisp-tests in lisp-tests

	* test/lisp/emacs-lisp/lisp-tests.el: Added tests from
	test/lisp/legacy/core-elisp-tests.el.
	* test/lisp/legacy/core-elisp-tests.el: File removed.

2016-09-24  Eli Zaretskii  <eliz@gnu.org>

	Move coding-tests.el and decoder-test.el to their places

	* test/src/coding-tests.el: Added all the tests from
	test/lisp/legacy/decoder-tests.el.
	* test/lisp/legacy/decoder-tests.el: File deleted.

2016-09-23  Vibhav Pant  <vibhavp@gmail.com>

	Use correct TYPE value for displaying error messages in (erc-display-message)

2016-09-23  Eli Zaretskii  <eliz@gnu.org>

	Bump the version to 25.2.50

	* README:
	* configure.ac:
	* etc/NEWS:
	* msdos/sed2v2.inp: Increment the Emacs version to 25.2.50.

2016-09-22  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-do-view-other-frame: Display each buffer in a new frame

	* lisp/ibuffer.el (ibuffer-do-view-1):
	When TYPE equals 'other-frame, then display each buffer
	in a new frame (Bug#24086).

2016-09-22  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-09-22 stdint: port to GCC 7
	2016-09-22 limits-h, stdint: don't assume extensions
	* doc/misc/texinfo.tex, m4/limits-h.m4, m4/stdint.m4: Copy from gnulib.

2016-09-22  Alan Mackenzie  <acm@muc.de>

	* lisp/progmodes/cc-engine.el (c-forward-decl-or-cast-1): Fix coding error

2016-09-21  Paul Eggert  <eggert@cs.ucla.edu>

	Port recent flexmember changes to NetBSD

	The NetBSD library supports localtime_rz directly, and without
	this change 'configure' omitted the flexmember test that is marked
	as conditional on localtime_rz.  Emacs now needs to use
	flexmember.m4 even when localtime_rz works.
	Problem reported by Thomas Klausner.
	* admin/merge-gnulib (GNULIB_MODULES): Add flexmember.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.

2016-09-21  Paul Eggert  <eggert@cs.ucla.edu>

	* doc/misc/texinfo.tex: Copy from gnulib.

2016-09-21  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp.el (tramp-clear-passwd): Call also `auth-source-forget'.

2016-09-20  Paul Eggert  <eggert@cs.ucla.edu>

	Use flexmembers on IBM XL C for AIX

	This removes a workaround where Emacs did not use flexible
	array members when compiled with IBM XL C.  Instead, avoid
	the problem by making the aliasing issues more obvious to
	this compiler.
	* admin/merge-gnulib: Don’t remove m4/flexmember.m4.
	* m4/flexmember.m4: Copy from gnulib.
	* configure.ac (AC_C_FLEXIBLE_ARRAY_MEMBER): Remove workaround.
	* src/alloc.c (allocate_string_data): Rephrase to avoid aliasing
	problem that would otherwise mess up code generated for flexible
	array members by IBM XL C for AIX, V12.1.
	* src/conf_post.h (FLEXIBLE_ARRAY_MEMBER): Remove; now done
	by gnulib code.

2016-09-19  Michael Albinus  <michael.albinus@gmx.de>

	Fix a problem with Tramp when the temporary dir isn't C:/Temp on w32

	* lisp/net/tramp-sh.el (tramp-sh-handle-expand-file-name): Don't use
	`tramp-drop-volume-letter' any longer, it causes collateral
	damages.  Reported by Chris Zheng <chriszheng99@gmail.com>.

2016-09-17  Paul Eggert  <eggert@cs.ucla.edu>

	Port January __morecore changes to AIX 7.1

	* src/vm-limit.c (__MALLOC_HOOK_VOLATILE, __morecore)
	(__after_morecore_hook):
	* src/ralloc.c (__morecore):
	Declare if DOUG_LEA_MALLOC is not defined, not if HAVE_MALLOC_H is
	not defined.  <malloc.h> does not declare these in AIX 7.1.

2016-09-17  Paul Eggert  <eggert@cs.ucla.edu>

	Define _GNU_SOURCE in files delaying config.h

	Problem reported by Richard Copley in:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00440.html
	* src/w32.c, src/w32notify.c, src/w32proc.c (_GNU_SOURCE):
	Define early.

2016-09-17  Eli Zaretskii  <eliz@gnu.org>

	Update the bidi test code and data

	* test/manual/BidiCharacterTest.txt: Import the version from
	Unicode Standard 9.0.0.
	* test/manual/biditest.el (biditest-generate-testfile): Allow 'x'
	in the 4th field of the test data.

2016-09-17  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-do-toggle-read-only: Fix unused argument

	* lisp/ibuffer.el (ibuffer-do-toggle-read-only): Call
	'read-only-mode' with ARG when its an integer.
	Clarify the meaning of ARG in doc string.

2016-09-17  Alan Mackenzie  <acm@muc.de>

	Improve accuracy of line/column numbers in byte compiler's warning messages.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-set-symbol-position): ensure new
	value of byte-compile-last-position is not lower than old value.
	(byte-compile-function-warn): call byte-compile-set-symbol-position.

2016-09-17  Michael Albinus  <michael.albinus@gmx.de>

	Minor Tramp tweaks

	* lisp/net/tramp.el (tramp-get-buffer): Reuse connection
	property "process-buffer" if already existing.
	(tramp-connectable-p): Suppress debug messages.

2016-09-16  Paul Eggert  <eggert@cs.ucla.edu>

	Define _GNU_SOURCE in unexmacosx.c

	Problem reported by Bob Halley in:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00427.html
	* src/unexmacosx.c (_GNU_SOURCE): Define if not already defined.

2016-09-16  Alan Mackenzie  <acm@muc.de>

	C Mode: Fix mis-fontification of macro invocation as function declaration

	This happened with a macro invocation which was followed by a statement block
	in braces.

	* lisp/progmodes/cc-engine.el (c-forward-decl-or-cast-1): CASE 11: distinguish
	between contexts nil and top, being less permissive in the former case.
	(c-just-after-func-arglist-p): call c-forward-decl-or-cast-1 with context top.

2016-09-16  Eli Zaretskii  <eliz@gnu.org>

	Improve the doc string of 'format'

	* src/editfns.c (Fformat): Fix ambiguity in the doc string's usage
	of a literal period.  (Bug#24407)

2016-09-16  Eli Zaretskii  <eliz@gnu.org>

	Improve doc strings in whitespace.el

	* lisp/whitespace.el (whitespace-mode, whitespace-newline-mode)
	(global-whitespace-mode, global-whitespace-newline-mode): Improve
	the doc strings.  (Bug#24413)

2016-09-16  Eli Zaretskii  <eliz@gnu.org>

	Improve detectability of 'next-logical-line' and 'previous-logical-line'

	* lisp/simple.el (next-line, previous-line): Mention
	'next-logical-line' and 'previous-logical-line' in the doc
	strings.  (Bug#24443)

2016-09-16  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-09-16 extensions: fix typo in comment
	2016-09-16 stdio: don't redefine __USE_MINGW_ANSI_STDIO
	* m4/extensions.m4, m4/stdio_h.m4: Copy from gnulib.

2016-09-15  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer now-standard int width macros

	* src/data.c (ULL_WIDTH):
	* src/lisp.h (EMACS_INT_WIDTH, BITS_PER_BITS_WORD):
	* src/lread.c (read_integer):
	* src/term.c (produce_glyphless_glyph):
	* src/xterm.c (x_send_scroll_bar_event):
	Use *_WIDTH macros instead of CHAR_BIT * sizeof.
	* src/data.c (ULL_WIDTH): Rename from BITS_PER_ULL for consistency
	with the *_WIDTH standard macros.  All uses changed.
	* src/gmalloc.c (INT_BIT): Remove.  All uses replaced with INT_WIDTH.
	* src/lisp.h (EMACS_INT_WIDTH): Rename from BITS_PER_EMACS_INT
	for consistency with the *_WIDTH standard macros.  All uses changed.
	(BITS_PER_CHAR): Remove; all uses replaced by CHAR_BIT.  This must
	be the same as CHAR_WIDTH and avoids confusion with Elisp
	char-width, which counts columns not bits.
	(BITS_PER_SHORT): Remove; all uses replaced by SHRT_WIDTH.
	(BITS_PER_LONG): Remove; all uses replaced by LONG_WIDTH.
	* src/lread.c: Do not include limits.h since CHAR_BIT is no longer
	used directly.

2016-09-15  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-09-15 stdint: support new _WIDTH macros
	2016-09-15 limits-h: new module
	2016-09-15 sys_types: avoid glibc 2.25 warnings about major()
	2016-09-15 extensions: port to more ISO C TSes
	2016-09-13 intprops: new macro TYPE_WIDTH
	2016-09-13 extensions: port to recent ISO C TRs
	* .gitignore: Add lib/limits.h.
	* doc/misc/texinfo.tex, lib/ftoastr.h, lib/intprops.h:
	* lib/stdint.in.h, m4/extensions.m4, m4/stdint.m4, m4/stdio_h.m4:
	* m4/sys_types_h.m4: Copy from gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	* lib/limits.in.h, m4/limits-h.m4: New files, copie from gnulib.
	* nt/gnulib.mk: Merge changes from lib/gnulib.mk.

2016-09-15  Michael Albinus  <michael.albinus@gmx.de>

	Rework fixing Bug#24432

	* lisp/net/tramp.el (tramp-get-buffer): Set connection property
	"process-buffer" in order to mark connection as active.

	* lisp/net/tramp-cache.el (tramp-get-hash-table)
	(tramp-set-connection-property)
	(tramp-dump-connection-properties): Do not use "active" property.
	(tramp-list-connections): Use "process-buffer" property.

	* lisp/net/tramp-cmds.el (tramp-cleanup-connection): Flush process
	properties prior deletion of process.

2016-09-14  Johan Bockgård  <bojohan@gnu.org>

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Fix debug spec (Bug#24430).

	* lisp/emacs-lisp/edebug.el (defun): Fix debug spec.

2016-09-14  Eli Zaretskii  <eliz@gnu.org>

	Avoid compiler warning on MS-Windows due to clone_file

	* src/fileio.c (clone_file): Condition on !WINDOWSNT, since the
	call to it is not compiled in that build, and having it defined
	causes compiler warnings.

2016-09-14  Eli Zaretskii  <eliz@gnu.org>

	Avoid aborts in GC due to abort_on_gc

	* src/lisp.h:
	* src/print.c (Fprin1_to_string):
	* src/eval.c (signal_or_quit):
	* src/alloc.c (garbage_collect_1): Remove declarations, setting,
	and testing the value of abort_on_gc.  It is no longer needed, and
	using it causes rare aborts in GC for no good reason.  (Bug#23912)

2016-09-14  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#24432

	* lisp/net/tramp-cache.el (tramp-get-hash-table): Initialize a
	connection as inactive.
	(tramp-set-connection-property): Make the connection active.
	(tramp-dump-connection-properties): Don't save "active" property.
	(tramp-list-connections): List only active connections.  (Bug#24432)

2016-09-14  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't bug out on all-whitespace URLs

	* lisp/net/shr.el (shr-expand-url): Don't bug out on
	degenerate all-whitespace URLs.

2016-09-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	sieve-manage.el: Rename sieve-manage-ignore-broken-tls

	* lisp/net/sieve-manage.el (sieve-manage-ignore-starttls):
	Rename from sieve-manage-ignore-broken-tls.  If it is set,
	sieve-manage will never use STARTTLS even if the server says
	it is capable (but may be broken).

2016-09-13  Paul Eggert  <eggert@cs.ucla.edu>

	Port to ISO/IEC TS 18661-1:2014

	* src/character.h (CHARACTER_WIDTH): Rename from CHAR_WIDTH.
	All uses changed.

2016-09-13  Tino Calancha  <tino.calancha@gmail.com>

	dired-jump: Expand file-name before dired-goto-file call

	Command dired-goto-file requires its argument to be an absolute
	file name.  Interactively FILE-NAME is read with read-file-name,
	which could return an abbreviated file name (Bug#24409).
	* lisp/dired-x.el (dired-jump): Use expand-file-name on FILE-NAME.
	Clarify in doc string the meaning of arg FILE-NAME.

2016-09-13  Tino Calancha  <tino.calancha@gmail.com>

	Add test for Bug#21454

	* test/lisp/legacy/files-tests.el (files-test-bug-21454): New test.

2016-09-12  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/sieve-manage.el (sieve-manage-ignore-broken-tls): Add :version.

2016-09-12  TSUCHIYA Masatoshi  <tsuchiya@namazu.org>

	sieve.el: Make the buffer to edit unmodified initially (bug#24423)

	* lisp/net/sieve.el (sieve-edit-script):
	Make the buffer to edit be not modified-p initially (bug#24423).

2016-09-12  TSUCHIYA Masatoshi  <tsuchiya@namazu.org>

	sieve-manage.el: Allow user to avoid STARTTLS capability test (bug#24422)

	* lisp/net/sieve-manage.el
	(sieve-manage-ignore-broken-tls): New user option.
	(sieve-manage-open-server):
	Don't test STARTTLS capability if the option is set (bug#24422).

2016-09-12  Michal Nazarewicz  <mina86@mina86.com>

	Fix compiler thinking width and height may be unitialized in frame.c

	This fixes the following warning:

		frame.c: In function ‘x_set_frame_parameters’:
		frame.c:3329:25: error: ‘width’ may be used uninitialized in
			this function [-Werror=maybe-uninitialized]
		       adjust_frame_size (f, width_change ? width : -1,
	                         ^

	* src/frame.c (x_set_frame_parameters): Drop width_changed and
	height_changed variables in favor of storing that information in
	width and height variables.

2016-09-12  Michal Nazarewicz  <mina86@mina86.com>

	Fix compiler thinking tmpdir may be unitialized in emacsclient

	This fixes the following warning:

		emacsclient.c: In function ‘set_local_socket’:
		/usr/include/x86_64-linux-gnu/bits/string3.h:111:3: error:
			‘tmpdir’ may be used uninitialized in this function
			[-Werror=maybe-uninitialized]
		   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest));
		   ^
		emacsclient.c:1197:17: note: ‘tmpdir’ was declared here
		     const char *tmpdir;

	* lib-src/emacsclient.c (set_local_socket): Get rid of use_tmpdir
	variable and instead use tmpdir being non-NULL as sign that it should
	be used.

2016-09-12  Tino Calancha  <tino.calancha@gmail.com>

	image-dired: Signal an error before calling a missing executable

	Reverts commit ca473907
	Add a defun to check if an executable exists, and call it
	on each function using an external program: when the executable
	is not available signal an error.
	See discussion on:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00135.html
	* lisp/image-dired.el (image-dired--check-executable-exists): New defun.
	Throw and error when the executable arg is missing.
	(image-dired-display-image, image-dired-rotate-thumbnail)
	(image-dired-rotate-original, image-dired-set-exif-data)
	(image-dired-get-exif-data):
	Use it.

2016-09-12  Eli Zaretskii  <eliz@gnu.org>

	Fix daemon shutdown when emacs-kill-hooks ask questions

	* lisp/server.el (server-start): Put the server's kill-emacs-hook
	last, to allow other hooks to have a frame to interact with the
	user.  (Bug#24326)

2016-09-12  Paul Eggert  <eggert@cs.ucla.edu>

	* src/casefiddle.c (casify_word): Simplify.

	* src/casefiddle.c (casify_word): Return Qnil.

2016-09-12  Michal Nazarewicz  <mina86@mina86.com>

	Refactor common code in {upcase,downcase,capitalize}-word functions

	* src/casefiddle.c (operate_on_word): Removed in favor of…
	(casify_word) …new function which does what operate_on_word did plus
	what all of the common code from *-word functions.
	(upcase-word, downcase-word, capitalize-word): Move code common between
	those functions (pretty much the whole body of those functions) into
	casify_word and use that instead of now deleted operate_on_word.

2016-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	* doc/lispref/files.texi: Remove @vindex.

2016-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	Remove unnecessary ref to coreutils manual

	* doc/lispref/files.texi: Document write-region-inhibit-fsync.

2016-09-11  Alan Mackenzie  <acm@muc.de>

	Correctly fontify C++ direct initializations with parens inside functions

	Or, more clearly, when something looks like a function declaration and it's
	inside a function, fontify it as a direct initialization.

	For this purpose, introduce a "brace stack" for each buffer, where an entry on
	the brace stack states how deeply nested a particular position is inside
	braces inside a "top level", which includes classes and namespaces.

	Also introduce a new "context", "top", with which c-font-lock-declarations
	signals to c-forward-decl-or-cast-1 that point is at the top level.

	* lisp/progmodes/cc-langs.el (c-get-state-before-change-functions): add
	c-truncate-bs-cache.
	(c-flat-decl-block-kwds, c-brace-stack-thing-key, c-brace-stack-no-semi-key)
	(c-type-decl-operator-prefix-key): new language constants/variables.

	* lisp/progmodes/cc-engine.el (c-bs-interval, c-bs-cache, c-bs-cache-limit)
	(c-bs-prev-pos, c-bs-prev-stack): New mostly local variables for the brace
	stack cache.
	(c-init-bs-cache, c-truncate-bs-cache, c-truncate-bs-cache, c-brace-stack-at)
	(c-bs-at-toplevel-p): New functions which manipulate the brace stack (cache).
	(c-find-decl-prefix-search): Keep track of whether we're at top level.
	(c-find-decl-spots): New local variable cfd-top-level which records what it
	says.  On calling cfd-fun, pass cfd-top-level as an additional argument.
	(c-forward-declarator): Add new element DECORATED to the result list.  Set it
	to non-nil when a match for c-type-decl-operator-prefix-key is found.
	(c-forward-decl-or-cast-1): Handle the newly introduced context "top".
	Introduce "CASE 9.5", which recognizes direct initializations.

	* lisp/progmodes/cc-fonts.el (c-font-lock-complex-decl-prepare)
	(c-font-lock-enum-tail, c-font-lock-cut-off-declarators)
	(c-font-lock-enclosing-decls, c-simple-decl-matchers, c-basic-matchers-after):
	Add appropriate `not-top' argument to calls to c-font-lock-declarators.
	(c-font-lock-declarators): Additional parameter `not-top'.  Use not-top to
	participate in the decision whether to fontify an identifier as a function or
	a variable.
	(c-font-lock-declarations): The internal lambda function takes an additional
	argument `toplev' from c-find-decl-spots, which it uses in determining the
	"context" of a declaration.  Add appropriate `not-top' argument to calls to
	c-font-lock-declarators.
	(c-font-lock-objc-methods): Add extra parameter to internal lambda function,
	like for c-font-lock-declarators.

	* lisp/progmodes/cc-mode.el (c-basic-common-init): Initialize the brace stack
	cache.

2016-09-11  Eli Zaretskii  <eliz@gnu.org>

	Avoid signaling errors when computing "Stop" in GDB menu

	* lisp/progmodes/gdb-mi.el (gdb-show-stop-p): Don't assume
	'gdb-running-threads-count' must have a numeric value.
	(Bug#24414)

2016-09-11  Philipp Stephani  <phst@google.com>

	Stop calling ‘byte-compile-log-warning’

	For errors, use ‘byte-compile-report-error’ instead so that the error
	is registered and causes compilation to fail (Bug#24359).

	For warnings, use ‘byte-compile-warn’ instead so that
	‘byte-compile-error-on-warn’ is honored (Bug#24360).

	* lisp/emacs-lisp/macroexp.el (macroexp--funcall-if-compiled)
	(macroexp--warn-and-return): Use ‘byte-compile-warn’ instead of
	‘byte-compile-log-warning’.

	* lisp/emacs-lisp/bytecomp.el (byte-compile-form, byte-compile-unfold-bcf)
	(byte-compile-setq, byte-compile-funcall): Use
	‘byte-compile-report-error’ instead of ‘byte-compile-log-warning’.
	(byte-compile-log-warning): Convert comment to documentation
	string.  Explain that the function shouldn’t be called directly.
	(byte-compile-report-error): Add optional FILL argument.

	* lisp/emacs-lisp/cconv.el (cconv-convert, cconv--analyze-use)
	(cconv--analyze-function, cconv-analyze-form): Use
	‘byte-compile-warn’ instead of ‘byte-compile-log-warning’.

	* lisp/emacs-lisp/byte-opt.el (byte-compile-inline-expand): Use
	‘byte-compile-warn’ instead of ‘byte-compile-log-warning’.

	* lisp/subr.el (add-to-list): Use ‘byte-compile-report-error’ instead
	of ‘byte-compile-log-warning’.
	(do-after-load-evaluation): Use ‘byte-compile-warn’ instead of
	‘byte-compile-log-warning’.

2016-09-10  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/NEWS: Remove comment lost in emacs-25 merge.

2016-09-10  Paul Eggert  <eggert@cs.ucla.edu>

	Document file synchronization issues

	* doc/lispref/files.texi (Files and Storage): New section.

2016-09-10  Paul Eggert  <eggert@cs.ucla.edu>

	copy-file now uses GNU/Linux file cloning

	From a suggestion by Kieran Colford (see Bug#23904).
	* configure.ac: Check for linux/fs.h.
	* src/fileio.c [HAVE_LINUX_FS_H]: Include sys/ioctl.h and linux/fs.h.
	(clone_file): New function.
	(Fcopy_file): Use it.

2016-09-10  Alan Third  <alan@idiocy.org>

	Invert y coord of NS image files (bug#7847)

	* src/nsterm.m (ns_dumpglyphs_image): Invert y co-ordinate of the image
	when compositing.

2016-09-10  Noam Postavsky  <npostavs@gmail.com>

	Don't require isearch-update before isearch-done

	It is useful to be able to call `isearch-done' unconditionally to
	ensure a non-isearching state.

	* lisp/isearch.el (isearch-done): Check that `isearch--current-buffer'
	is a live buffer before using it (Bug #21091).
	* test/lisp/isearch-tests.el (isearch--test-done): Test it.

2016-09-09  Simen Heggestøyl  <simenheg@gmail.com>

	* lisp/emacs-lisp/ring.el: Use lexical-binding

	* lisp/emacs-lisp/ring.el (ring-elements): Don't use the RESULT
	argument of `dotimes' when the iteration variable isn't referred by
	it.
	(ring-member): Don't pass nil as the RESULT argument of `dotimes'
	since it's the default.

2016-09-08  Michal Nazarewicz  <mina86@mina86.com>

	Split regex character class test into smaller chunks

	Having one test for all character classes it is not always trivial to
	determine which class is failing.  This happens when failure is caused
	by ‘(should (equal (point) (point-max)))’ not being met.

	With per-character class tests, it is immidiatelly obvious which test
	causes issues plus tests for all classes are run even if some of them
	fail.

	* test/src/regex-tests.el (regex-character-classes): Delete and split
	into…
	(regex-tests-alnum-character-class, regex-tests-alpha-character-class,
	regex-tests-ascii-character-class, regex-tests-blank-character-class,
	regex-tests-cntrl-character-class, regex-tests-digit-character-class,
	regex-tests-graph-character-class, regex-tests-lower-character-class,
	regex-tests-multibyte-character-class,
	regex-tests-nonascii-character-class,
	regex-tests-print-character-class, regex-tests-punct-character-class,
	regex-tests-space-character-class,
	regex-tests-unibyte-character-class,
	regex-tests-upper-character-class, regex-tests-word-character-class,
	regex-tests-xdigit-character-class): …new tests.

2016-09-08  Michal Nazarewicz  <mina86@mina86.com>

	Don’t allocate char-table’s extra slots in regexp-out-charset

	* lisp/emacs-lisp/regexp-opt.el (regexp-opt-charset): Do not use
	'case-table as charmap char-table’s property.  The function has nothing
	to do with casing and in addition using 'case-table causes unnecessary
	extra slots to be allocated which ‘regexp-opt-charset’ does not use.

2016-09-08  Michal Nazarewicz  <mina86@mina86.com>

	Remove dead loop iterations in regex.c

	RE_CHAR_TO_MULTIBYTE(c) yields c for ASCII characters and a byte8
	character for c ≥ 0x80.  Furthermore, CHAR_BYTE8_P(c) is true only
	for byte8 characters.  This means that

		c = RE_CHAR_TO_MULTIBYTE (ch);
		if (! CHAR_BYTE8_P (c) && re_iswctype (c, cc))

	is equivalent to:

		c = c;
		if (! false && re_iswctype (c, cc))

	for 0 ⪬ c < 0x80, and

		c = BYTE8_TO_CHAR (c);
		if (! true && re_iswctype (c, cc))

	for 0x80 ⪬ c < 0x100.  In other words, the loop never executes for
	c ≥ 0x80 and RE_CHAR_TO_MULTIBYTE call is unnecessary for c < 0x80.

	* src/regex.c (regex_compile): Simplyfy a for loop by eliminating
	dead iterations and unnecessary macro calls.

2016-09-08  Michal Nazarewicz  <mina86@mina86.com>

	Replace decimalnump with alphanumericp

	decimalnump was used in regex.c only in ISALNUM macro which ored it with
	alphabeticp.  Because both of those functions require Unicode general
	category lookup, this resulted in unnecessary lookups (if alphabeticp
	return false decimalp had to perform another lookup).  Drop decimalnump
	in favor of alphanumericp which combines decimelnump with alphabeticp.

	* src/character.c (decimalnump): Remove in favor of…
	(alphanumericp): …new function.

	* src/regex.c (ISALNUM): Use alphanumericp.

2016-09-08  Michal Nazarewicz  <mina86@mina86.com>

	Remove inaccurate comment in regex.c

	* src/regex.c (regex_compile): Remove comment indicating that wctype of
	some character classes may be negative.  All wctypes are in fact
	non-negative.

2016-09-08  Michal Nazarewicz  <mina86@mina86.com>

	STRING_CHAR does not unify characters; update documentation

	* src/character.h (STRING_CHAR): Update doc.
	* src/buffer.h (FETCH_MULTIBYTE_CHAR): Update doc.  While at it, change
	the function to use BYTE_POS_ADDR instead of open-coding it.

2016-09-08  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for ring.el

	* test/lisp/emacs-lisp/ring-tests.el: New file with tests for ring.el.

2016-09-07  Martin Rudalics  <rudalics@gmx.at>

	New file test/src/marker-tests.el

2016-09-07  Paul Eggert  <eggert@cs.ucla.edu>

	Port flexible array members to GCC + valgrind

	These changes are needed to conform to the C standard's rule for
	allocating structs containing flexible array members.  C11 says
	that malloc (offsetof (struct s, m) + n) does not suffice to
	allocate a struct with an n-byte tail; instead, malloc’s arg
	should be rounded up to the nearest multiple of alignof (struct s).
	Although this is arguably a defect in C11, gcc -O2 + valgrind
	sometimes complains when this rule is violated, and when debugging
	it’s better to keep valgrind happy.
	For details please see the thread containing the message at:
	https://gcc.gnu.org/ml/gcc-patches/2016-09/msg00416.html
	* lib-src/ebrowse.c, src/alloc.c, src/image.c, src/process.c:
	Include flexmember.h.
	* lib-src/ebrowse.c (add_sym, add_member, make_namespace)
	(register_namespace_alias):
	* src/alloc.c (SDATA_SIZE, allocate_string_data):
	* src/image.c (xpm_cache_color, imagemagick_create_cache):
	* src/process.c (Fmake_network_process):
	Use FLEXSIZEOF instead of offsetof and addition.
	* src/alloc.c (SDATA_SIZE, vector_alignment):
	Use FLEXALIGNOF instead of sizeof (ptrdiff_t).
	* src/lisp.h (ALIGNOF_STRUCT_LISP_VECTOR):
	Remove, as alloc.c can now calculate this on its own.

2016-09-07  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-09-07 flexmember: new macro FLEXALIGNOF
	2016-09-07 flexmember: port better to GCC + valgrind
	2016-08-18 Port modules to use getprogname explicitly
	2016-09-02 manywarnings: add -fno-common
	* admin/merge-gnulib (GNULIB_TOOL_FLAGS): Don’t avoid flexmember,
	since time_rz now uses part of it.  Instead, remove m4/flexmember.m4.
	* configure.ac (AC_C_FLEXIBLE_ARRAY_MEMBER): Define away,
	since Emacs assumes C99 and therefore removes m4/flexmember.m4.
	* lib/euidaccess.c, lib/group-member.c, lib/time_rz.c:
	* m4/manywarnings.m4: Copy from gnulib.
	* lib/flexmember.h: New file, from gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.

2016-09-07  Noam Postavsky  <npostavs@gmail.com>

	Don't --load directories

	* lisp/startup.el (command-line-1): Only pass expanded FILENAME argument
	of --load when it refers to a normal file, since `load' doesn't handle
	directories (Bug #16406).

2016-09-07  Peder O. Klingenberg  <peder@klingenberg.no>

	Avoid error in icalendar--read-element

	* lisp/calendar/icalendar.el (icalendar--read-element): Avoid a regex
	stack overflow by not using regex to extract values from calendar
	events. (Bug#24315)

2016-09-07  Kaushal Modi  <kaushal.modi@gmail.com>

	Fix back-white <-> black-white typo

	* lisp/ps-print.el (ps-begin-job): back-white -> black-white (Bug#24308)

2016-09-07  Alan Third  <alan@idiocy.org>

	Fix cursor at bottom left of rectangle (bug#24364)

	* lisp/rect.el (rectangle--col-pos): Don't assume point at EOL doesn't
	require rectangle--point-crutches to be set.

2016-09-07  Eli Zaretskii  <eliz@gnu.org>

	Fix documentation of convert-standard-filename on MS-Windows

	* lisp/files.el (convert-standard-filename): Doc fix.  (Bug#24387)

	* etc/NEWS: Suggest a way for mirroring slashes where previously
	'convert-standard-filename' was used.

2016-09-06  Paul Eggert  <eggert@cs.ucla.edu>

	Use DEV_TTY more consistently

	* src/conf_post.h (DEV_TTY): Move from here ...
	* src/keyboard.c, src/keyboard.h: ... to here, as it doesn’t need
	to be visible everywhere.  Make it a constant.
	* src/keyboard.c (handle_interrupt, Fset_quit_char):
	* src/process.c (create_process): Prefer DEV_TTY to "/dev/tty".

2016-09-06  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertion violations when using marker positions

	* src/intervals.c (set_point_from_marker): If MARKER comes from
	another buffer, recalculate its byte position before using it to
	set point.
	* src/marker.c (set_marker_internal): If POSITION is a marker from
	another buffer, recalculate its byte position before using it.
	(Bug#24368)

2016-09-06  Alan Mackenzie  <acm@muc.de>

	* lisp/progmodes/cc-engine.el (c-syntactic-re-search-forward): Fix coding bug

2016-09-06  Alan Mackenzie  <acm@muc.de>

	New options for handling of literals in c-syntactic-re-search-forward

	* lisp/progmodes/cc-engine.el (c-syntactic-re-search-forward): `noerror' can
	be given the values `before-literal' and `after-literal', so that when a
	search fails, and the `bound' is inside a literal, point is left respectively
	before or after that literal.

2016-09-05  Eli Zaretskii  <eliz@gnu.org>

	Avoid assertion violations when scrolling narrowed buffer

	* src/window.c (window_scroll_pixel_based):
	* src/xdisp.c (pos_visible_p): Don't allow simulated redisplay to
	start outside the accessible portion of the buffer.  This avoids
	assertion violations when some Lisp narrows the buffer to less
	than the current window, and then attempts to scroll the buffer.

2016-09-05  Eli Zaretskii  <eliz@gnu.org>

	Treat SIGINT correctly in GUI sessions on MS-Windows

	* src/w32proc.c (sys_signal): Don't reject SIGINT, as it is
	supported by MS runtime.
	* src/term.c (DEV_TTY): Move from here ...
	* src/conf_post.h (DEV_TTY): ... to here.  Separate definitions
	for WINDOWSNT and for the rest.
	* src/keyboard.c (handle_interrupt_signal): Use DEV_TTY instead of
	a literal "/dev/tty".

	* etc/NEWS: Mention the behavior change.

2016-09-04  Alan Third  <alan@idiocy.org>

	Fix synthetic bold on macOS retina displays

	* src/macfont.m (macfont_draw): Multiply the synthetic bold scaling
	factor by the OS window backing scale factor.

2016-09-04  Tino Calancha  <tino.calancha@gmail.com>

	image-dired: Report when a necessary executable is not found

	See discussion on:
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00552.html
	* lisp/image-dired.el (image-dired-cmd-rotate-original-program)
	(image-dired-cmd-create-thumbnail-program)
	(image-dired-cmd-create-temp-image-program)
	(image-dired-cmd-rotate-thumbnail-program)
	(image-dired-cmd-write-exif-data-program)
	(image-dired-cmd-read-exif-data-program):
	Use executable-find to set the default value of this option.
	(image-dired-cmd-rotate-original-program): Idem.
	Search for program 'convert' if 'jpegtran' is not available.
	(image-dired-cmd-rotate-original-options):
	Set the default value consistent with the executable in
	image-dired-cmd-rotate-original-program.
	(image-dired-create-thumb, image-dired-display-image)
	(image-dired-rotate-thumbnail, image-dired-rotate-original)
	(image-dired-set-exif-data, image-dired-get-exif-data):
	Throw and error when the executable used in the function is missing.
	(image-dired-next-line, image-dired-previous-line):
	Use 'forward-line'.

2016-09-03  Tino Calancha  <tino.calancha@gmail.com>

	image-type-from-file-name: Perform a case insensitive match

	Fix Bug#24317
	* lisp/image.el (image-type-from-file-name): Bind case-fold-search
	to a non-nil value to force a case insensitive match.
	* lisp/image-dired.el (image-dired-rotate-original):
	Use image-type (Bug#24317).
	(image-dired-get-exif-file-name): Idem.
	Set 'no-exif-data-found' and 'data' in same setq call.
	Use file-attribute-modification-time.

2016-09-03  Tino Calancha  <tino.calancha@gmail.com>

	image-increase-size: Fix non-interactive calls

	* lisp/image.el (image-increase-size, image-decrease-size):
	Compute a floating point division.
	Problem reported in:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00067.html

2016-09-03  Robert Cochran  <robert-git@cochranmail.com>

	Fix uses of (call-interactively) in lisp/emacs-lisp/checkdoc.el

	Passing the prefix argument as the 3rd argument to 'call-interactively'
	causes the prefix argument to be interpreted as events, which is not
	only wrong, but also causes a type error, as 'current-prefix-arg' can
	never be a vector as 'call-interactively' expects.  'call-interactively'
	automatically passes its prefix argument to the called function, so just
	do that, eliminating faulty behavior.

	* lisp/emacs-lisp/checkdoc.el (checkdoc-ispell):
	(checkdoc-ispell-current-buffer):
	(checkdoc-ispell-interactive):
	(checkdoc-ispell-message-text):
	(checkdoc-ispell-start):
	(checkdoc-ispell-continue):
	(checkdoc-ispell-comments):
	(checkdoc-ispell-defun):
	Do not pass 'current-prefix-arg' to 'call-interactively' as an event
	vector; merely allow it to propagate forward to the interactive call.

2016-09-03  Richard Stallman  <rms@gnu.org>

	Fix mail-combine-fields

	* lisp/mail/sendmail.el (mail-combine-fields): Call `save-excursion' to
	avoid losing our place in the search loop.

2016-09-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	Check actual contents before promting about changed file

	* lisp/userlock.el (userlock--check-content-unchanged)
	(userlock--ask-user-about-supersession-threat): New functions.
	* src/filelock.c (lock_file): Use them to avoid spurious prompting.
	* doc/lispref/buffers.texi (Modification Time): Update doc of
	ask-user-about-supersession-threat.

2016-09-02  Michael Albinus  <michael.albinus@gmx.de>

	Make a reference to fakecygpty in the Tramp manual

	* doc/misc/tramp.texi (Windows setup hints): Make a reference to
	fakecygpty on the Emacs Wiki.
	(Frequently Asked Questions): Fix url.

2016-09-01  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t create fd >= FD_SETSIZE

	This avoids a potential crash if too many subprocesses (Bug#24325).
	* src/process.c [HAVE_SETRLIMIT]: Include <sys/resource.h>.
	(init_process_emacs): If ulimit -n is greater than FD_SETSIZE,
	set it to FD_SETSIZE.

2016-09-01  Alan Mackenzie  <acm@muc.de>

	Fix c-declaration-limits to return correct limits in all cases.

	This function is the guts of c-indent-defun and c-mark-function.

	In particular, when c-defun-tactic is nil, return a correct value rather than
	always nil, and when it's 'go-outward, go through an intricate algorithm to
	determine the requisite narrowing before the "top-level" defuns go to work.

	* lisp/progmodes/cc-cmds.el (c-narrow-to-most-enclosing-decl-block): Enhance
	to take additional optional parameter LEVEL, saying how many enclosing levels
	of decl-block to narrow to.
	(c-declaration-limits): Introduce algorithm to determine narrowing.  Use
	c-where-wrt-to-brace-block to determine whether to go back to BOD to determine
	lower bound.

2016-09-01  Eli Zaretskii  <eliz@gnu.org>

	* nt/inc/ms-w32.h (execve) [MINGW_W64]: Make commentary more accurate.

2016-09-01  Eli Zaretskii  <eliz@gnu.org>

	Avoid compiler warnings with MinGW64 GCC 6

	* nt/inc/ms-w32.h (execve) [MINGW_W64]: Make the prototype match
	the GCC 6 builtin, to avoid warnings.  For more details, see
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00721.html.

2016-08-31  Paul Eggert  <eggert@cs.ucla.edu>

	Fix over-substitution of quotes on error

	Problem reported by Tino Calancha in:
	https://lists.gnu.org/r/emacs-devel/2016-09/msg00000.html
	* src/print.c (print_error_message):
	Substitute quotes in errmsg only when gotten from a property.

2016-08-31  Eli Zaretskii  <eliz@gnu.org>

	Improve testing of etags

	* test/manual/etags/y-src/cccp.c:
	* test/manual/etags/y-src/parse.c: Correct #line directives to
	allow testing invalidate_nodes in etags.c.
	* test/manual/etags/ETAGS.good_1:
	* test/manual/etags/ETAGS.good_2:
	* test/manual/etags/ETAGS.good_3:
	* test/manual/etags/ETAGS.good_4:
	* test/manual/etags/ETAGS.good_5:
	* test/manual/etags/ETAGS.good_6:
	* test/manual/etags/CTAGS.good: Adapt to changes in test files.

2016-08-31  Eli Zaretskii  <eliz@gnu.org>

	* lib-src/etags.c (invalidate_nodes): Fix another thinko.

2016-08-31  Paul Eggert  <eggert@cs.ucla.edu>

	Fix etags problems found by static checking

	* lib-src/etags.c (invalidate_nodes, put_entry):
	Remove now-unnecessary tests for null pointers.  Simplify.
	(put_entries): Rewrite to avoid GCC 6.2 warning about
	dereferencing null pointer.

2016-08-31  Eli Zaretskii  <eliz@gnu.org>

	Fix a thinko in etags.c

	* lib-src/etags.c (invalidate_nodes): Don't try to dereference
	a null pointer.

2016-08-31  Eli Zaretskii  <eliz@gnu.org>

	Avoid recursive calls in etags

	* lib-src/etags.c (stack_entry): New struct.
	(push_node, pop_node, put_entry): New functions.
	(free_tree, add_node, invalidate_nodes, put_entries): Re-implement
	in a non-recursive way, to avoid stack overflow.  (Bug#5847)

2016-08-31  Leo Liu  <sdl.web@gmail.com>

	Add 451 to url-http-codes

	* lisp/url/url-http.el (url-http-codes): Add 451.

2016-08-30  Paul Eggert  <eggert@Penguin.CS.UCLA.EDU>

	* src/editfns.c (Fformat_message): Fix doc to match current behavior.

2016-08-30  Paul Eggert  <eggert@cs.ucla.edu>

	Minor doc quoting fixes

	* doc/misc/htmlfontify.texi (Interactive):
	* lisp/htmlfontify.el (htmlfontify-buffer):
	Spell out character names, for clarity.  The old doc string
	generated the *Help* text ‘^L ([FF]) or ¤ (244)’, where ‘[FF]’
	stands for a form feed character; this was confusing.
	* lisp/electric.el (electric-quote-mode):
	* src/doc.c (syms_of_doc):
	* src/editfns.c (Fformat_message):
	Remove no-longer-necessary ‘\=’s in doc strings.

2016-08-30  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-08-30 intprops: tune INT_NEGATE_OVERFLOW for GCC 5 and 6
	2016-08-29 xalloc-oversized.h: port change to GCC 6.2.0
	2016-08-29 intprops.h: port recent changes to GCC 6.2.0
	2016-08-29 intprops.h: use __typeof__ with GCC 7
	2016-08-29 intprops.h, xalloc-oversized.h: work with gcc 7
	2016-08-24 intprops: fix paren typo on old platforms
	2016-08-24 intprops: port to OpenVMS
	* lib/intprops.h, lib/xalloc-oversized.h: Copy from gnulib.

2016-08-30  Tassilo Horn  <tsdh@gnu.org>

	Fix rules for \phi and \varphi which were reversed

	* lisp/leim/quail/latin-ltx.el: Special-case phi/varphi because those
	  are reversed in ucs-names.  Also remove FIXME stating sigma/varsigma
	  were reversed which is not true (anymore?).

2016-08-30  Tassilo Horn  <tsdh@gnu.org>

	Fix prettification of \phi, \varphi, and \varsigma

	* lisp/textmodes/tex-mode.el (tex--prettify-symbols-alist): Fix
	  prettification of \phi, \varphi, and \varsigma.

	Concretely, \phi's symbol was actually varphi, \varphi was missing, and
	\varsigma was commented out with a FIXME that it was reversed with
	\sigma which it was not.

2016-08-30  Karl Fogel  <kfogel@red-bean.com>

	Use normal double quotes in TeX / LaTeX comments

	* lisp/textmodes/tex-mode.el (tex-insert-quote): When in a comment,
	  default to inserting a normal double quote (") instead of TeX-style
	  open (``) or close ('') quote marks.

	* etc/NEWS (TeX mode): Note the change.

	* test/lisp/electric-tests.el (autowrapping-7): Adjust accordingly.

	See this thread for discussion:

	  https://lists.gnu.org/r/emacs-devel/2016-08/msg00611.html
	  From: Karl Fogel <kfogel {_AT_} red-bean.com>
	  To: Emacs Development <emacs-devel {_AT_} gnu.org>
	  Subject: [PATCH] Have LaTeX mode use normal double quotes in comments.
	  Date: Mon, 29 Aug 2016 14:44:12 -0500
	  Message-ID: <87twe3icmr.fsf@red-bean.com>

2016-08-30  Alan Mackenzie  <acm@muc.de>

	Correctly analyze C++ list initialization in member init areas.

	* lisp/progmodes/cc-engine.el (c-back-over-list-of-member-inits): Remove a
	superfluous call to c-backward-syntactic-ws.
	(c-looking-at-or-maybe-in-bracelist): Change calling convention, so that it
	reports encountering the Java "new" keyword.  Add, as an alternative, a check
	that we can move back over member initializations, and handle this as finding
	a brace block.
	(c-looking-at-special-brace-list, c-guess-continued-construct): Adapt to the
	new calling convention of c-looking-at-or-maybe-in-bracelist.
	(c-guess-basic-syntax, CASE 5A.3): Replace lots of inline ad-hoc code with
	calls to c-backward-over-enum-header and c-looking-at-or-maybe-in-bracelist,
	using the extra info from the value of that function to generate a
	topmost-into-cont element where needed (in Java).

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Adapt to the new
	calling convention of c-looking-at-or-maybe-in-bracelist.

	* lisp/progmodes/cc-mode.el (c-fl-decl-start): Adapt to the new calling
	convention of c-looking-at-or-maybe-in-bracelist.

2016-08-30  Michael Albinus  <michael.albinus@gmx.de>

	Use `file-attribute-*' in Tramp

	* lisp/net/tramp-compat.el (tramp-compat-file-attribute-type)
	(tramp-compat-file-attribute-link-number)
	(tramp-compat-file-attribute-user-id)
	(tramp-compat-file-attribute-group-id)
	(tramp-compat-file-attribute-modification-time)
	(tramp-compat-file-attribute-size)
	(tramp-compat-file-attribute-modes): New defaliases.

	* lisp/net/tramp.el (tramp-handle-file-modes)
	(tramp-handle-file-newer-than-file-p)
	(tramp-handle-file-regular-p, tramp-handle-file-symlink-p)
	(tramp-handle-set-visited-file-modtime)
	(tramp-handle-verify-visited-file-modtime)
	(tramp-get-local-gid, tramp-check-cached-permissions):
	* lisp/net/tramp-adb.el (tramp-adb-handle-file-directory-p)
	(tramp-adb-handle-file-truename, tramp-adb-handle-copy-file):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-delete-directory)
	(tramp-gvfs-handle-file-directory-p)
	(tramp-gvfs-handle-write-region, tramp-gvfs-get-remote-uid)
	(tramp-gvfs-get-remote-gid):
	* lisp/net/tramp-sh.el (tramp-sh-handle-file-truename)
	(tramp-sh-handle-set-visited-file-modtime)
	(tramp-sh-handle-verify-visited-file-modtime)
	(tramp-sh-handle-file-newer-than-file-p)
	(tramp-sh-handle-file-ownership-preserved-p)
	(tramp-do-copy-or-rename-file)
	(tramp-do-copy-or-rename-file-via-buffer)
	(tramp-do-copy-or-rename-file-directly)
	(tramp-do-copy-or-rename-file-out-of-band)
	(tramp-sh-handle-file-local-copy)
	(tramp-sh-handle-write-region):
	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory)
	(tramp-smb-handle-copy-file)
	(tramp-smb-handle-file-directory-p)
	(tramp-smb-handle-file-writable-p)
	(tramp-smb-handle-insert-directory): Use them.

2016-08-30  Martin Rudalics  <rudalics@gmx.at>

	In `pop-to-buffer' handle case where `display-buffer' fails (Bug#24332)

	* lisp/window.el (pop-to-buffer): Don't assume that
	`display-buffer' has supplied a window (Bug#24332).
	Rename BUFFER argument to BUFFER-OR-NAME.
	* doc/lispref/windows.texi (Switching Buffers): Fix
	`pop-to-buffer' documentation.

2016-08-29  Alan Third  <alan@idiocy.org>

	Clarify docstrings

	* src/nsterm.m: Clarified that ns-x-modifier variables require a symbol.

2016-08-29  Michael Albinus  <michael.albinus@gmx.de>

	Use `process-live-p' in Tramp

	* lisp/net/tramp-compat.el (tramp-compat-process-live-p): New defun.

	* lisp/net/tramp.el (tramp-connectable-p, tramp-handle-file-remote-p)
	(tramp-handle-file-notify-valid-p)
	(tramp-action-process-alive, tramp-action-out-of-band)
	(tramp-wait-for-regexp):
	* lisp/net/tramp-adb.el (tramp-adb-parse-device-names)
	(tramp-adb-maybe-open-connection):
	* lisp/net/tramp-cache.el (tramp-get-connection-property):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-notify-add-watch):
	* lisp/net/tramp-gw.el (tramp-gw-gw-proc-sentinel)
	(tramp-gw-aux-proc-sentinel, tramp-gw-open-connection):
	* lisp/net/tramp-sh.el (tramp-process-sentinel)
	(tramp-sh-handle-file-notify-add-watch)
	(tramp-maybe-open-connection):
	* lisp/net/tramp-smb.el (tramp-smb-action-with-tar)
	(tramp-smb-handle-copy-directory, tramp-smb-action-get-acl)
	(tramp-smb-handle-process-file, tramp-smb-action-set-acl)
	(tramp-smb-get-cifs-capabilities)
	(tramp-smb-get-stat-capability)
	(tramp-smb-maybe-open-connection, tramp-smb-wait-for-output)
	(tramp-smb-kill-winexe-function): Use it.

2016-08-29  Eli Zaretskii  <eliz@gnu.org>

	Avoid crashes for invalid value of key modifiers

	* src/keyboard.c (parse_solitary_modifier): If the argument SYMBOL
	is not a symbol, don't try to recognize it.  See
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00502.html
	for the details.

	* test/src/keymap-tests.el (keymap-where-is-internal-test): New
	test, for testing the above fix.

2016-08-29  Oleh Krehel  <ohwoeowho@gmail.com>

	Make dired-do-compress understand files with spaces in them

	* lisp/dired-aux.el (dired-compress-file): Add `shell-quote-argument'
	  and `literal' flag to `replace-regexp-in-string'.

2016-08-28  Paul Eggert  <eggert@cs.ucla.edu>

	* INSTALL.REPO: Suggest Texinfo 4.13 or later.

2016-08-28  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for dom.el

	* test/lisp/dom-tests.el: New file with tests for dom.el.

2016-08-28  Paul Eggert  <eggert@cs.ucla.edu>

	Memory allocator alignment fixes

	These changes remove some assumptions about heap allocator
	alignment that may not be true on unusual platforms.
	* src/alloc.c (POWER_OF_2): New macro.
	(ROUNDUP): Use it.
	(BLOCK_ALIGN): Verify that it is a power of 2.
	(aligned_alloc): Check that alignment passed to posix_memalign
	satisfies POSIX restrictions.
	(lisp_align_malloc): Check that size passed to aligned_alloc
	satisfies C11 restrictions.
	(MALLOC_IS_GC_ALIGNED): Check that GCALIGNMENT is 8, since the
	code has not been verified to work with other GCALIGNMENT values
	and the ice is thin here.  On GNU/Linux, malloc can return a value
	that is a multiple of 8 but not 16, even though __alignof__
	(max_align_t) is 16.  See:
	https://gcc.gnu.org/ml/gcc-patches/2016-08/msg01902.html
	(lmalloc) [USE_ALIGNED_ALLOC]: Use aligned_alloc only if size
	is a multiple of alignment, since C11 says the behavior is
	undefined otherwise.
	(lmalloc, lrealloc): Don't use INT_ADD_WRAPV on size_t, as in
	general this macro is restricted to signed types.  Remove
	assertion that the result is a multiple of GCALIGNMENT, as that
	need not be true.

2016-08-28  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings for lib-src/pop.c

	* lib-src/pop.c: Include c-ctype.h.
	(socket_connection): Pacify --enable-gcc-warnings by rewriting to
	avoid 'if (v = E) ...'.  Use c_tolower, instead of a combination
	of the (undeclared) isupper and tolower.  Fix pointer constness
	problem.

2016-08-27  Alan Mackenzie  <acm@muc.de>

	Handle the C++ "identifiers" "final" and "override" correctly.

	This fixes bug #24319, allowing destructors affixed with these identifiers to
	be correctly fontified.

	* lisp/progmodes/cc-engine.el (c-forward-type, c-forward-decl-or-cast-1):
	After reaching the "end" of a type expression, skip over any occurrences of
	c-type-decl-suffix-ws-ids-key.

	* lisp/progmodes/cc-langs.el (c-type-modifier-kwds): Remove "override" and
	"final" from the C++ value.
	(c-type-decl-suffix-ws-ids-kwds, c-type-decl-suffix-ws-ids-key): New lang
	constants/variables for "final" and "override".

2016-08-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/page-ext.el (pages-directory-mode): Use special-mode.

2016-08-27  Alan Mackenzie  <acm@muc.de>

	Handle template delimiters in C++ member init constructs.

	* lisp/progmodes/cc-engine.el (c-back-over-list-of-member-inits): Add
	handling for "<....>"s.

2016-08-26  Eli Zaretskii  <eliz@gnu.org>

	Fix etags test suite messed up by merges from emacs-25

	* test/manual/etags/go-src/test.go:
	* test/manual/etags/go-src/test1.go: Move from test/etags/.
	* test/manual/etags/ruby-src/test1.ru: Replace test1.ruby.
	* test/etags/: Directory deleted.

2016-08-26  Simen Heggestøyl  <simenheg@gmail.com>

	Add "supports" to list of CSS at-rules

	* lisp/textmodes/css-mode.el (css-at-ids): Add "supports" at-rule.

2016-08-26  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-sh.el (tramp-get-remote-perl): Perform a basic check.

	(Bug#22478)

2016-08-25  Tino Calancha  <tino.calancha@gmail.com>

	Rename option to shell-command-dont-erase-buffer

	Suggested by Clément Pit--Claudel in:
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00487.html
	* lisp/simple.el (shell-command-dont-erase-buffer):
	(shell-command--save-pos-or-erase):
	(shell-command--set-point-after-cmd):
	(shell-command-on-region):
	* doc/emacs/misc.texi (shell-command-dont-erase-buffer):
	* etc/NEWS (Changes in Emacs 25.2):
	Rename from shell-command-not-erase-buffer.

2016-08-25  Alan Mackenzie  <acm@muc.de>

	Fix an infinite loop in C++ Mode when we have "{ .... [ .... }"

	* lisp/progmodes/cc-fonts.el (c-font-lock-c++-lambda-captures): In the inner
	`while' form's condition, check for "\\s)" rather than merely "\\]", so that
	the loop won't hang at a "terminating" paren of a different type (due to the
	c-syntactic-re-search-forward at the end of the loop stopping at such
	characters).

2016-08-25  Tino Calancha  <tino.calancha@gmail.com>

	call-shell-region: New defun

	Suggested by Stefan Monnier in Bug#22679.
	* lisp/subr.el (call-shell-region): New defun; execute a command
	in an inferior shell with the buffer region as input.
	* lisp/simple.el (shell-command-on-region): Use it.
	* lisp/gnus/message.el (message-do-fcc): Idem.
	* doc/lispref/processes.texi: Document call-shell-region in the manual.
	;* etc/NEWS: Add entry for this new function.

2016-08-25  Martin Rudalics  <rudalics@gmx.at>

	In ‘clone-indirect-buffer’ fix argument mixup (Bug#24306)

	* lisp/simple.el (clone-indirect-buffer): Add value for ACTION
	argument in `pop-to-buffer' call (Bug#24306).

2016-08-25  Martin Rudalics  <rudalics@gmx.at>

	Some fixes around `delete-other-frames' and `next-frame'

	* src/frame.c (Fdelete_frame): Clarify doc-string.
	* lisp/frame.el (delete-other-frames): Delete other frames on
	FRAME's terminal instead of the current terminal.  Delete
	non-minibuffer-only surrogate frames too.  See
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00467.html
	* doc/lispref/frames.texi (Deleting Frames): Minor fixes for
	docs of `delete-frame' and `frame-live-p'.  Add entry for
	`delete-other-frames'.
	(Finding All Frames): Fix doc of `next-frame'.

2016-08-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Find message.el thumbnail toggling

	* lisp/gnus/message.el (message-toggle-image-thumbnails):
	Don't infloop when toggling thumbnails.

2016-08-24  Alan Third  <alan@idiocy.org>

	Fix macOS 12 deprecation notices

	* src/nsterm.h: Add #defines to allow older versions of macOS to use the
	new constant names.
	* src/nsmenu.m: Replace old constant names with
	new.
	(fillWithWidgetValue): Remove calls to deprecated
	setMenuChangedMessagesEnabled.
	* src/nsterm.m: Replace old constant names with new.
	* src/nsfns.m: Replace old constant names with new.

2016-08-23  Alan Mackenzie  <acm@muc.de>

	Analyze and fontify correctly a C++ `enum' with colon, but lacking a tag.

	* lisp/progmodes/cc-engine.el (c-backward-typed-enum-colon): Check for "enum"
	directly preceding the colon, and handle it.

2016-08-23  Noah Friedman  <friedman@splode.com>

	* src/xfns.c (Fx_change_window_property): Modify previous change.
	Instead of forcing format to 8 for strings, check that the length of
	the string is appropriate for whatever format given.
	(Fx_window_property_attributes): If prop isn't found on frame's inner window,
	try its outer window.  This mimics the behavior of Fx_window_property.

2016-08-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix invalid image rotations

	* lisp/image.el (image-rotate): Limit rotation to 360 degrees.

2016-08-23  Tino Calancha  <tino.calancha@gmail.com>

	call-process instead of call-process-region with empty region

	* lisp/calc/calc-graph.el (calc-graph-show-tty):
	Use call-process and shell-command-switch.

2016-08-22  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	927afa1 ; Update ChangeLog.2 and ldef-boot.el for Emacs 25.1 RC2
	6bf83b5 * etc/AUTHORS: Update the AUTHORS file
	73cbb81 ; ChangeLog spelling fixes
	9b99772 Some assorted documentation clarifications
	37d4723 Improve commentary in src/character.h
	5ccd593 ; Fix typo in /etc/NEWS
	96e3d16 * etc/NEWS: Mention the change in json-encode-string.
	2e524034 ; * etc/NEWS: Mention incompatible change in url-http-create...
	2e4e74e Merge branch 'emacs-25' of git.savannah.gnu.org:/srv/git/emac...
	66dea65 ; * doc/lispref/windows.texi (Window Parameters): Grammar twe...

	# Conflicts:
	#	ChangeLog.2
	#	lisp/ldefs-boot.el

2016-08-22  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	66dea65 ; * doc/lispref/windows.texi (Window Parameters): Grammar twe...

2016-08-22  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	8c2946e In NEWS describe new handling of window margins (Bug#24193)
	0cee66c Facultatively ignore margins when splitting and resizing wind...
	8d68147 Document CATEGORY arg to modify-category-entry
	8342e74 Document char-script-table's effect on word motion
	e9ff485 Further fix for 'url-http-create-request' and multibyte strings
	0695235 Fix docstring of eval-expression
	98b01dd Clarify when 'cursor' property is in effect
	75f1882 Convert the remaining strings to unibyte before concatenating
	d2db5dd Fix bug with handling the bidi cache
	ccd0e92 * doc/lispref/text.texi (Change Hooks): Minor copyedits.
	f785ff4 Clarify documentation of before/after-change-functions
	3c9cb57 Document use of vectors in keymaps

	# Conflicts:
	#	src/xdisp.c

2016-08-22  Michael Albinus  <michael.albinus@gmx.de>

	Handle remote file names in gdb-mi.el

	* lisp/progmodes/gdb-mi.el (gdb-jsonify-buffer):
	If `default-directory' is remote, full file names are adapted
	accordingly.  (Bug#23608)

2016-08-22  Eli Zaretskii  <eliz@gnu.org>

	Display mini-window resized even when there are several frames

	* src/xdisp.c (x_consider_frame_title): Bind inhibit-redisplay to
	t to avoid resizing back the mini-window as result of considering
	the title of other frames.  (Bug#24285)
	(redisplay_window): No need to bind inhibit-redisplay here.

2016-08-22  Michael Albinus  <michael.albinus@gmx.de>

	Explain gdb warning on remote hosts

	* doc/misc/tramp.texi (Remote processes): Explain gdb warning
	on remote hosts.  (Bug#4604, Bug#6360, Bug#622569)

2016-08-21  Martin Rudalics  <rudalics@gmx.at>

	Fix (next-frame nil t) crash (Bug#24281)

	* src/frame.c (candidate_frame): Check minibuf argument before
	comparing it to zero (Bug#24281).

2016-08-21  Noah Friedman  <friedman@splode.com>

	Fix interpretation of signed vs unsigned values when retrieving X
	Window properties, and make sure the full value is returned when not
	parsed.

	New subr to export type and format information about X Window
	properties to lisp.

	* src/xselect.c (selection_data_to_lisp_data): Treat any data as
	unsigned unless its actual type is INTEGER.
	CARDINALs, in particular, are unsigned.

	* src/xfns.c (Fx_change_window_property): If value is a string, ignore
	any provided format and force to 8.
	(x_window_property_intern): If returning value as a string, the length
	is actual_size times the actual format of each element, which is not
	necessarily bytes.
	(Fx_window_property_attributes): New subr.
	(syms_of_xfns): Declare it.

2016-08-21  Noam Postavsky  <npostavs@gmail.com>

	Improve error when installing non-package dirs

	* lisp/emacs-lisp/package.el (package-dir-info): Throw meaningful error
	when no file with package info is found (Bug #19851).

2016-08-21  Alan Mackenzie  <acm@muc.de>

	Adapt CC Mode for C++11 uniform initialization.

	For fontification, introduce a new "context", 'non-decl, to be used for
	brace
	lists; also a new value for the property 'c-type, called 'c-not-decl.

	* lisp/progmodes/cc-engine.el (c-back-over-compound-identifier): Check that
	an ostensible symbol we're going to move over isn't a keyword.
	(c-forward-decl-or-cast-1): CASE 1: Where we have two consecutive identifiers
	(hence a declaration), and an unmatched open paren, perform
	c-fdoc-shift-type-backwards to recognize the partial construct correctly.
	Whilst checking a type decl expression, check for and handle C++11's "copy
	initialization", where we have <type>(<constant>).  Recognize
	<id><id>(... (where the paren is unclosed) as a declaration.
	(c-looking-at-or-maybe-in-bracelist): New function, extracted from
	c-inside-bracelist-p.  Recognize as bracelists "{"s which are preceded by
	valid tokens other than "=".  Recognize a bracelist when preceded by a
	template declaration.
	(c-inside-bracelist-p): Call c-looking-at-or-maybe-in-bracelist in place of
	much inline code.
	(c-looking-at-inexpr-block): Amend so that it won't wrongly recognize an
	initialization starting "({" as an in-expression block, by checking for
	semicolons, as opposed to commas, separating elements inside it.
	(c-guess-continued-construct): (CASE B-2): Recognize a brace-list-open by
	calling c-looking-at-or-maybe-in-bracelist rather than checking for a
	preceding "=".  (CASE B-5): New code to recognize new construct "return {
	...}".
	(c-guess-basic-syntax): (CASE 5A.3): Additionally recognize a "{" preceded by
	"return", or "{" preceded by <type><identifier> as a bracelist.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Recognize brace
	lists, giving them `context' 'non-decl.  Pass over elements of one by regexp
	search for "," rather than calling c-forward-decl-or-cast-1.

	* lisp/progmodes/cc-langs.el (c-return-kwds, c-return-key): New lang
	constants/variables to recognize "return".
	(c-pre-id-bracelist-key): New lang constant/variable to recognize tokens
	which, when preceding an identifier followed by a brace, signify the brace as
	a bracelist.

	* lisp/progmodes/cc-mode.el (c-fl-decl-start): When searching outwards for
	the start of a "local" declaration, move out from an enclosing brace when
	that is the start of a brace list.

2016-08-21  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-08-17 maint: preprocessor changes to support z/OS
	2016-08-17 string: rename to avoid '__string'
	* doc/misc/texinfo.tex, lib/alloca.in.h, lib/string.in.h:
	Copy from gnulib.

2016-08-21  Paul Eggert  <eggert@cs.ucla.edu>

	Minor text-quoting-style fixes

	* src/charset.c (check_iso_charset_parameter):
	* src/frame.c (store_frame_param):
	* src/xselect.c (x_fill_property_data):
	Use grave accent for left single quote in ‘error’ format strings.

2016-08-21  Martin Rudalics  <rudalics@gmx.at>

	Fix semantics of 'minibuffer' frame parameter

	The 'minibuffer' frame parameter is now t for a normal frame
	(a frame with a root window plus a minibuffer window) and the
	frame's minibuffer window for a minibuffer-less frame (a frame
	whose minibuffer window is on another frame).  See also:
	https://lists.gnu.org/r/emacs-devel/2016-07/msg01259.html

	* src/frame.c (make_frame, make_frame_without_minibuffer)
	(make_minibuffer_frame): When assigning the frame's minibuffer
	window also store corresponding 'minibuffer' frame parameter.
	(store_frame_param): Move the 'minibuffer' parameter checks to
	the beginning so we can silently override the value before it
	gets stored in the parameter alist.  Fix error handling.
	(Fframe_parameters): Return value of 'minibuffer' parameter
	unmodified.

	* lisp/frameset.el (frameset-filter-minibuffer): When the cdr of
	the parameter is a minibuffer window, save (minibuffer . nil)
	instead of (minibuffer . t).
	(frameset--reuse-frame): To find a non-minibuffer-only frame
	look out for a frame whose 'minibuffer' parameter is t instead
	of that frame's minibuffer window.
	(frameset-minibufferless-first-p): To find a minibuffer-less
	frame look out for a frame whose 'minibuffer' parameter is a
	window instead of nil.

2016-08-20  Alan Mackenzie  <acm@muc.de>

	* lisp/progmodes/cc-defs.el (c-safe-scan-lists): Resolve overelaborate "nil"

2016-08-20  Alan Mackenzie  <acm@muc.de>

	In c-\(go-\)?-\(up-\|down-\)?list-\(forward\|backward\) check limit isn't nil

	Check the limit both at macro expansion time (for a hard coded nil) and at run
	time in the generated code.  Tidy up these macros generally.

	* lisp/progmodes/cc-defs.el (c-safe-scan-lists): Check `limit' is present and
	not identically nil before generating a narrow-to-region call.  Generate code
	to check `limit' is not nil at run time.
	(c-go-list-forward, c-go-list-backward): Remove the generation of redundant
	narrow-to-region, instead calling c-safe-scan-lists directly.
	(c-go-up-list-forward, c-go-up-list-backward, c-go-down-list-forward)
	(c-go-down-list-backward): Invoke the corresponding macros without the "go-"
	to determine the destination position instead of generating a redundant
	narrow-to-region.

2016-08-19  Robert Cochran  <robert-git@cochranmail.com>

	* lisp/emacs-lisp/map.el (map--dispatch): Fix docstring

	The docstring referenced a non-existant parameter, as well as a
	parameter that has been renamed since the docstring was written. Fix
	both errors, fixing (Bug#24182).

2016-08-19  Alan Mackenzie  <acm@muc.de>

	Amend hack-local-variables-prop-line not always to return any mode on line 1.

	This fixes bug #24266.

	* lisp/files.el (hack-local-variables-prop-line): Change the name of the
	parameter mode-only to handle-mode.  Change its meaning, such that it being
	set to a value non-nil and not t removes any mode parameter from the result
	list.  Leave its values nil and t with the same meanings they had.
	(hack-local-variables): Call hack-local-variables-prop-line appropriately.

2016-08-19  Daiki Ueno  <ueno@gnu.org>

	Improve doc string of epg-*-program

	* lisp/epg-config.el (epg-gpg-program, epg-gpgsm-program):
	Suggest to use Customize when setting.  (Bug#24229)

2016-08-19  Tino Calancha  <tino.calancha@gmail.com>

	Add tests for Bug#24264

	* test/lisp/emacs-lisp/cl-seq-tests.el (cl-seq-test-bug24264):
	Add test for Bug#24264.
	(cl-seq-fill-test, cl-seq-replace-test)
	(cl-seq-remove-test ,cl-seq-delete-test)
	(cl-seq-remove-duplicates-test, cl-seq-substitute-test)
	(cl-seq-nsubstitute-test, cl-seq-position-test)
	(cl-seq-count-test, cl-seq-mismatch-test)
	(cl-seq-search-test, cl-seq-test-bug24264):
	Add tests for all functions in the file; test all keywords.

2016-08-18  Johan Bockgård  <bojohan@gnu.org>

	Fix bug in --eval reply message from server

	* lisp/server.el (server-reply-print): Fix check for truncated quote
	sequence at end of message. Problem reported in:
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00101.html

2016-08-18  Eli Zaretskii  <eliz@gnu.org>

	Add tests for 'substitute-command-keys'

	* test/src/doc-tests.el (doc-test-substitute-command-keys): New
	tests.

2016-08-18  Oleh Krehel  <ohwoeowho@gmail.com>

	lisp/textmodes/table.el (table-generate-source): Fix completing-read call

	Doesn't make sense to pass '(("html") ("latex") ("cals")) to
	`completing-read'.

2016-08-18  Oleh Krehel  <ohwoeowho@gmail.com>

	lisp/dired-aux.el (dired-compress-file-suffixes): Add entry for tgz

	The previous behavior resulted in a "tgz" -> "tar" -> "tgz" loop,
	without any files being extracted.

2016-08-18  Andreas Politz  <politza@hochschule-trier.de>

	Don't let window start override window point in `window-state-put' (Bug#24240)

	* lisp/window.el (window--state-put-2): Set 'noforce argument
	when restoring a window's start position.  This avoids that the
	effect of `set-window-point' gets overidden by that of
	`set-window-start' (Bug#24240).

2016-08-17  Alan Mackenzie  <acm@muc.de>

	Fontify constructs following "::" in C++ argument lists correctly - part 2.

	This fixes bug #24246.

	* lisp/progmodes/cc-engine.el (c-find-decl-prefix-search): Put a
	`save-match-data' around the new `looking-at' introduced by the previous CC
	Mode patch this evening.

2016-08-17  Alan Mackenzie  <acm@muc.de>

	Fontify constructs following "::" in C++ argument lists correctly.

	This fixes bug #24246.

	* lisp/progmodes/cc-engine.el (c-find-decl-prefix-search): In the "pseudo
	match" loop, test a found string for a match with c-opt-identifier-concat-key
	(e.g. with "::").

2016-08-17  Paul Eggert  <eggert@cs.ucla.edu>

	* src/doc.c (Fsubstitute_command_keys): Clarify GC comments.

2016-08-17  K. Handa  <handa@gnu.org>

	Fix hz encoding and decoding (bug#23814)

	* lisp/language/china-util.el (decode-hz-region): Pay
	attention to "~~}" sequence at the end of Chinese character
	range.
	(hz-category-table): New variable.
	(encode-hz-region): Convert non-encodable characters to
	\u... and \U...  Preserve ESC on ecoding.  Put
	`chinese-gb2312' `charset' text property in advance to force
	iso-2022-encoding to select chinese-gb2312 designation.

2016-08-17  Tino Calancha  <tino.calancha@gmail.com>

	file-attribute-collect: New defun

	* lisp/files.el (file-attribute-collect):
	Return a sublist of the attributes returned by 'file-attributes'.
	Suggested by Ted Zlatanov in:

	https://lists.gnu.org/r/emacs-devel/2016-07/msg01195.html

2016-08-17  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#24203

	* lisp/comint.el (comint-password-prompt-regexp): Relax regexp.  (Bug#24203)

2016-08-16  Karl Fogel  <kfogel@red-bean.com>

	Improve doc string.

	* src/fileio.c (Ffile_name_as_directory): Be precise about the
	conditions under which a slash is appended.

2016-08-16  Paul Eggert  <eggert@cs.ucla.edu>

	Omit substitute-command-keys code no longer needed

	* src/doc.c (Fsubstitute_command_keys):
	Remove duplicate initializations.

2016-08-16  Tino Calancha  <tino.calancha@gmail.com>

	Allow not erase output buffer in shell commands

	* lisp/simple.el (shell-command-not-erase-buffer): New option to allow
	not erasing the output buffer between shell commands.  Defaults to nil.
	(shell-command-on-region): Use it.
	(shell-command--save-pos-or-erase): New defun; store a buffer position
	if 'shell-command-not-erase-buffer' is non-nil; otherwise
	erase the output buffer of the shell command.
	(shell-command, shell-command-on-region): Use it.
	(shell-command--set-point-after-cmd): New defun;
	if 'shell-command-not-erase-buffer' is non-nil, set point
	in the output buffer to the position in 'shell-command-saved-pos'.
	(shell-command-sentinel, shell-command-on-region): Use it.
	* doc/emacs/misc.texi (shell-command-not-erase-buffer):
	Document this feature in the manual.
	See discussion on:
	https://lists.gnu.org/r/emacs-devel/2016-07/msg00610.html

2016-08-16  Michael Albinus  <michael.albinus@gmx.de>

	Rearrange Tramp manual title page

	* doc/misc/tramp.texi: Move @insertcopying out of the title
	page.  Do not use @ifnottex anymore.

2016-08-15  Glenn Morris  <rgm@gnu.org>

	* doc/misc/tramp.texi: Adapt 2016-08-14 change for makeinfo 4.

2016-08-15  Alan Mackenzie  <acm@muc.de>

	Fix minor bug in c-syntactic-re-search-forward.

	Bug was: when NOERROR is neither nil nor t, BOUND is non-nil, PAREN-LEVEL is
	non-nil, and the first internal search attempt fails, point wrongly ends up at
	BOUND, rather than just before the next closing paren.

	* lisp/progmodes/cc-engine.el (c-syntactic-re-search-forward): Guard against
	the above situation.

2016-08-15  Alan Mackenzie  <acm@muc.de>

	Handle C++11 lambda functions.

	* lisp/progmodes/cc-engine.el (c-looking-at-inexpr-block): Enhance also to
	handle C++ lambda functions.
	(c-looking-at-c++-lambda-capture-list): New function.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Recognize the
	parameter list of a lambda function and set `context' and
	`c-restricted-<>-arglists' suitably for it.
	(c-font-lock-c++-lambda-captures): New function.
	(c-complex-decl-matchers): Insert c-font-lock-c++-lambda-captures into it.

	* lisp/progmodes/cc-langs.el (c-pre-lambda-tokens, c-pre-lambda-tokens-re):
	New language constants/variables.
	(c-paren-nontype-kwds): Include "noexcept" in the C++ value.

	* lisp/progmodes/cc-mode.el (c-fl-decl-start): Handle being in a C++ lambda
	function capture list.

2016-08-15  Michael Albinus  <michael.albinus@gmx.de>

	Fix stale cache problem in Tramp

	* lisp/net/tramp-cache.el (tramp-get-connection-property):
	Check, that a process as key is still running.  (Bug#22478)

2016-08-14  Paul Eggert  <eggert@cs.ucla.edu>

	* doc/misc/tramp.texi (Configuration): Fix @xref typo.

2016-08-14  Eli Zaretskii  <eliz@gnu.org>

	Another fix for scroll-conservatively and overlay strings

	* src/xdisp.c (redisplay_window): Handle also the case where the
	calculated window-start point has an overlay string touching it.
	(Bug#24179)

2016-08-14  Michael Albinus  <michael.albinus@gmx.de>

	Improve handling of defcustoms in tramp

	* doc/misc/tramp.texi: Protect all multi-line examples by
	@group ... @end group.  Use proper `custom-set-variables'
	examples.  Use consequently @option for user options.  Remove
	superfluous @cindex and @vindex entries.
	(Top): Remove reference to outdated mail archives.
	(Configuration): Tune references.
	(Default Method): Make `tramp-default-method' and
	`tramp-default-method-alist' a @defopt.
	(Default User): Make `tramp-default-user' and
	`tramp-default-user-alist' a @defopt.
	(Default Host): Make `tramp-default-host' and
	`tramp-default-host-alist' a @defopt.

	* lisp/net/tramp.el (tramp-mode, tramp-verbose)
	(tramp-backup-directory-alist, tramp-auto-save-directory)
	(tramp-encoding-shell, tramp-encoding-command-switch)
	(tramp-encoding-command-interactive, tramp-default-method)
	(tramp-default-method-alist, tramp-default-user)
	(tramp-default-user-alist, tramp-default-host)
	(tramp-default-host-alist, tramp-default-proxies-alist)
	(tramp-save-ad-hoc-proxies)
	(tramp-restricted-shell-hosts-alist)
	(tramp-local-end-of-line, tramp-rsh-end-of-line)
	(tramp-login-prompt-regexp, tramp-shell-prompt-pattern)
	(tramp-password-prompt-regexp, tramp-wrong-passwd-regexp)
	(tramp-yesno-prompt-regexp, tramp-yn-prompt-regexp)
	(tramp-terminal-prompt-regexp)
	(tramp-operation-not-permitted-regexp)
	(tramp-copy-failed-regexp, tramp-process-alive-regexp)
	(tramp-syntax, tramp-chunksize)
	(tramp-process-connection-type, tramp-connection-timeout)
	(tramp-connection-min-time-diff)
	(tramp-completion-reread-directory-timeout):
	* lisp/net/tramp-adb.el (tramp-adb-program)
	(tramp-adb-connect-if-not-connected, tramp-adb-prompt):
	* lisp/net/tramp-cache.el (tramp-connection-properties)
	(tramp-persistency-file-name):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-methods)
	(tramp-gvfs-zeroconf-domain)
	(tramp-bluez-discover-devices-timeout):
	* lisp/net/tramp-sh.el (tramp-inline-compress-start-size)
	(tramp-copy-size-limit, tramp-terminal-type)
	(tramp-histfile-override)
	(tramp-use-ssh-controlmaster-options, tramp-remote-path)
	(tramp-remote-process-environment, tramp-sh-extra-args):
	* lisp/net/tramp-smb.el (tramp-smb-program, tramp-smb-acl-program)
	(tramp-smb-conf, tramp-smb-winexe-program)
	(tramp-smb-winexe-shell-command)
	(tramp-smb-winexe-shell-command-switch): Add :require 'tramp.

2016-08-13  Paul Eggert  <eggert@cs.ucla.edu>

	Minor text-quoting-style fixes

	* lisp/cus-edit.el (custom-buffer-create-internal):
	* lisp/recentf.el (recentf-edit-list):
	Follow text-quoting-style preference when quoting in UI strings.
	* src/doc.c (Fsubstitute_command_keys): Don’t say that curved
	quotes are substituted for, as this is no longer true.

2016-08-13  Paul Eggert  <eggert@cs.ucla.edu>

	Fix substitute-command-keys unibyte, alloc bugs

	* src/doc.c (Fsubstitute_command_keys): Fix some problems with
	unibyte strings and with buffer allocation.  Make strings
	multibyte, to avoid problems with unibyte strings that are not
	valid UTF-8 (Bug#24206).  Redo buffer allocation so that it is
	O(N), not O(N**2).  Avoid going past the end of the input string
	when given invalid input.  Avoid some unlikely problems in
	accessing the wrong storage after a GC.

2016-08-13  Joakim Jalap  <joakim.jalap@fastmail.com>

	Fix "C-u" when an input method is active

	* lisp/international/quail.el (quail-input-method): Defer to the
	input method iff 'overriding-terminal-local-map' is
	'universal-argument-map' and the given key has no binding there.
	(Bug#22958)

2016-08-13  Martin Rudalics  <rudalics@gmx.at>

	Fix docs on `display-buffer-below-selected' (Bug#24213)

	* lisp/window.el (display-buffer-below-selected): Fix
	doc-string (Bug#24213).
	* doc/lispref/windows.texi (Display Action Functions): Fix
	documentation of `display-buffer-below-selected'.

2016-08-12  Tino Calancha  <tino.calancha@gmail.com>

	cl-fill: Rename arguments to cl-seq and cl-item

	* lisp/emacs-lisp/cl-seq.el (cl-fill):
	Rename arguments to 'cl-seq' and 'cl-item' as elsewhere.

2016-08-12  Thomas Fitzsimmons  <fitzsim@fitzsim.org>

	Fix display.texi typo

	* doc/lispref/display.texi (Faces): Fix typo.

2016-08-11  Paul Eggert  <eggert@cs.ucla.edu>

	Fix process leak with make-network-process

	This problem was introduced by the recent async changes (Bug#23808).
	* src/process.c (Fmake_process): Move USE_SAFE_ALLOCA later,
	so that it follows the start_process_unwind unwind-protect.
	Set pid to -1 while the process is being created.
	(start_process_unwind): Omit unnecessary emacs_abort test.
	(connect_network_socket): Simplify use of counts.  Unwind
	bind_polling_period a bit earlier, so that a remove_process
	unwind-protect can be added when needed; this is the heart of
	the fix.  Undo the unwind-protect just before returning.

2016-08-11  Eli Zaretskii  <eliz@gnu.org>

	Avoid annoying re-scroll when buffer has many overlay strings

	* src/xdisp.c (redisplay_window): Add better recovery from a
	situation where window-start is on buffer position which has a
	before-string that includes newlines, with the result that point
	is not visible in the window, because the display engine starts
	displaying with the before-string.  (Bug#24179)

2016-08-10  Paul Eggert  <eggert@cs.ucla.edu>

	Omit unnecessary process initialization

	* src/process.c (make_process, Fmake_process)
	(Fmake_pipe_process, Fmake_serial_process)
	(Fmake_network_process, server_accept_connection):
	Omit unnecessary initialization of already-cleared storage.

2016-08-10  Tino Calancha  <tino.calancha@gmail.com>

	cl-delete-duplicates: Parse :if to have cl-if bound

	* lisp/emacs-lisp/cl-seq.el (cl--delete-duplicates):
	We need also to parse keyword :if, otherwise cl-if
	is unbound.
	This reverts commit:
	68fdbeb917b80e29e0b15506f18f7ed41d8ffdfd

2016-08-10  Tino Calancha  <tino.calancha@gmail.com>

	cl-delete-duplicates: do not parse :if keyword

	* lisp/emacs-lisp/cl-seq.el (cl--delete-duplicates):
	Parse only the supported keywords.

2016-08-10  Michael Albinus  <michael.albinus@gmx.de>

	Add compatibility layer for `temporary-file-directory-function'

	* lisp/net/tramp-compat.el
	(tramp-compat-temporary-file-directory-function): New defalias.

	* lisp/net/tramp.el (tramp-handle-make-nearby-temp-file): Use it.

	* test/lisp/net/tramp-tests.el (tramp-test32-make-nearby-temp-file):
	Skip for older Emacs versions.

2016-08-10  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/comint.el (comint-password-prompt-regexp): Add "PEM" for OpenVPN.

	(Bug#24059)

2016-08-10  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Handle nil cell value in compiled printer functions.

	* doc/misc/ses.texi (Quick Tutorial): Minor clarification about the
	ses-range `!' modifier.
	(More on cell printing): Fix this that the fallback printer is
	`ses-prin1', not "%S".  That makes a difference for any cell value for
	which "%S" would insert a backslash characters.

	* lisp/ses.el (ses-local-printer-compile): Handle the nil cell value
	--- contrary to emacs-25 branches ses-call-printer does not handle
	prior to calling a function printer.  Not doing this would still work
	because the compiled function would throw and error and SES would in
	the end resort to the ses-prin1 fallback, however this way would not
	be in line with the raison d'être of compiling printer which is speed.

2016-08-09  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical-binding in json.el

	Measuring with (benchmark-run 100 (json-read-file "foobar.json"))
	showed 12-31% reduction in execution time.
	* lisp/json.el: Turn on lexical-binding.

2016-08-09  Mark Oteiza  <mvoteiza@udel.edu>

	Nudge WoMan toward lexical-binding

	* lisp/woman.el (woman-parse-man.conf, woman-manpath-add-locales):
	Use cl-pushnew instead of add-to-list.
	(woman-justify-list): Rename to woman-justify-styles.
	(woman-justify-styles): New array.
	(woman-justify, woman-decode-region, woman2-ad, woman2-na): Use it.
	(woman-cached-data): Use cl-pushnew instead of add-to-list.

2016-08-09  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Apply changes from commits 3c97b0f758 and 8a38e948b0 to master branch.

	Here follows the logs from the two commits which I apply to master.

	commit 3c97b0f7589e06aeb1ab0147f0ee32974c32926d
	Author: Vincent Belaïche <vincentb1@users.sourceforge.net>
	Date:   Fri Jul 29 13:44:14 2016 +0200

	Fix ses-delete-blanks to delete only blanks + documentation.

	* doc/misc/ses.texi (Quick Tutorial): Mention the '!'
	'ses-range' modifier as an alternative to 'ses+'.
	(Advanced Features): Add a refernce to node 'Nonrelocatable
	references' concerning function 'ses-rename-cell'.
	(Standard formula functions): Mention the '!' 'ses-range'
	modifier as an alternative to 'ses-delete-blanks'.
	(More on cell printing): Fix fallback printer
	definition.  Minor editorial formatting changes.
	(Nonrelocatable references): Document the use of
	'ses-rename-cell' as a better way to make cell reference
	non-relocatable.
	(The data area): Document the presence of local printer
	definitions in the data area.

	* lisp/ses.el (ses-delete-blanks): Do not remove
	*error*.  Any error in an argument should propagate into the
	using formula rather than being silently hidden !

	commit 8a38e948b039516e70176ebe20c5349e2ade6ac5
	Author: Vincent Belaïche <vincentb1@users.sourceforge.net>
	Date:   Thu Jul 28 19:49:37 2016 +0200

	Fix local printer set to left aligned string formatter.

	* lisp/ses.el (ses-local-printer-compile): Add missing case
	for left-aligned string formatter.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	* .dir-locals.el (c-noise-macro-names): Remove NONVOLATILE.

2016-08-09  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cconv.el: Fix λ-lifting in the presence of shadowing

	Change the code which detects and circumvents the case where one of the
	variables used in λ-lifting is shadowed, so that it also works when the
	shadowing comes before the λ-lifted function (bug#24171).

	(cconv--remap-llv): New function, extracted from cconv-convert.
	(cconv-convert): Use it, but differently for `let' and `let*'.

2016-08-09  Alan Mackenzie  <acm@muc.de>

	CC Mode: check for and fix missing call to before_change_functions.

	Fixes bug #24094 and bug #24074.

	This can happen with `revert-buffer' or sometimes `find-file', when the file
	is already in a buffer, but the file has been changed outside of Emacs.

	* lisp/progmodes/cc-mode.el (c-after-change): When we detect a missing
	invocation of c-before-change-functions, we assume the changed region is the
	entire buffer, and call c-before-change explicitly before proceding.

2016-08-09  Alan Mackenzie  <acm@muc.de>

	Make c-deprepertize-CPP work on deletion/insertion of "s.  Fixes bug #24132.

	* lisp/progmodes/cc-mode.el (c-depropertize-CPP): Rewrite function.

2016-08-09  Michael Albinus  <michael.albinus@gmx.de>

	Support $ENV in Tramp

	* doc/misc/tramp.texi (Remote processes): Explain setting $ENV.

	* etc/NEWS: Explain the "ENV" environment variable in
	`tramp-remote-process-environment'.

	* lisp/net/tramp-sh.el (tramp-remote-process-environment): Add "ENV=''".
	(tramp-open-shell): Read $ENV value from
	`tramp-remote-process-environment'.
	(tramp-open-connection-setup-interactive-shell): Set values in
	proper order.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify exec_byte_code via moving decls etc.

	* src/bytecode.c (exec_byte_code): Simplify, mostly by moving
	initializers into decls, and by omitting some unnecessary
	changes to ‘top’.  This improves performance a bit on x86-64,
	as it happens.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Remove interpreter’s byte stack

	This improves performance overall on my benchmark on x86-64,
	since the interpreted program-counter resides in a machine
	register rather than in RAM.
	* etc/DEBUG, src/.gdbinit: Remove xbytecode GDB command, as there
	is no longer a byte stack to decode.
	* src/bytecode.c (struct byte_stack, byte_stack_list)
	(relocate_byte_stack): Remove.  All uses removed.
	(FETCH): Simplify now that pc is now local (typically, in a
	register) and no longer needs to be relocated.
	(CHECK_RANGE): Remove.  All uses now done inline, in a different way.
	(BYTE_CODE_QUIT): Remove; now done by op_relative_branch.
	(exec_byte_code): Allocate a copy of the function’s bytecode,
	so that there is no problem if GC moves it.
	* src/lisp.h (struct handler): Remove byte_stack member.
	All uses removed.
	(SAFE_ALLOCA_LISP_EXTRA): New macro, a generalization of
	SAFE_ALLOCA_LISP.
	(SAFE_ALLOCA_LISP): Use it.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Remove arbitrary limit on bytecode maxdepth

	* src/bytecode.c (exec_byte_code): Remove MAX_ALLOCA-based limit
	on bytecode maxdepth, by using SAFE_ALLOCA_LISP instead of alloca.

	pipeline is fuller.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Tune bytecode quitting

	* src/bytecode.c (BYTE_CODE_QUIT): Check for GC, too.  Do the
	check only once every 256 times.  This should be good enough, and
	improves performance significantly on x86-64 as branch-prediction
	typically assumes checking will not be done so the instruction
	pipeline stays fuller.
	(exec_byte_code): Set up the quit counter.  Don’t call maybe_gc
	directly, as BYTE_CODE_QUIT does that now.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify BYTE_CODE_SAFE checking

	* src/bytecode.c (BYTE_CODE_SAFE): Default to false, so that it
	can be used outside #if.  All uses of ‘defined BYTE_CODE_SAFE’
	changed to ‘BYTE_CODE_SAFE’.  Use BYTE_CODE_SAFE in plain
	expressions instead of #if expressions when this is easy.
	(struct byte_stack) [BYTE_CODE_SAFE]: Remove member ‘bottom’,
	as it is no longer needed.
	(exec_byte_code): Omit #if BYTE_CODE_SAFE when this is easy.
	Simplify stack-overflow checking when BYTE_CODE_SAFE.

2016-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Get BYTE_CODE_METER working again

	BYTE_CODE_METER hasn’t worked since 2013, and nobody seems to have
	noticed.  Perhaps we should remove it?
	* src/bytecode.c (METER_2) [BYTE_CODE_METER]:
	Use *aref_addr instead of AREF, since it needs to be an lvalue.

2016-08-08  Eli Zaretskii  <eliz@gnu.org>

	Fix cursor position under scroll-conservatively and overlay strings

	* src/xdisp.c (try_scrolling): Handle the case where the last
	visible screen line of a window displays a before- or after-string
	that takes up the whole screen line, and therefore there's no
	place to display the cursor, even though the window does seem to
	include the position of point.  (Bug#24179)

2016-08-08  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/files.el (file-ownership-preserved-p): Fix docstring.  (Bug#23998)

2016-08-07  Paul Eggert  <eggert@cs.ucla.edu>

	Tune interpretation of integer arglist descriptor

	* src/bytecode.c (exec_byte_code):
	Simplify and tune when INTEGERP (args_template).

2016-08-07  Noam Postavsky  <npostavs@gmail.com>

	Fix debugging of string-match-p errors

	* src/eval.c (call_debugger): Bind inhibit-changing-match-data to nil so
	that debugger code that needs to do regexp match won't break
	(Bug #23949, Bug #24166, Bug#16294).

2016-08-07  Michael Albinus  <michael.albinus@gmx.de>

	Add `make-nearby-temp-file' and `temporary-file-directory'

	* doc/lispref/files.texi (Unique File Names):
	Introduce `make-nearby-temp-file' and `temporary-file-directory'.
	(Magic File Names): Mention `make-nearby-temp-file' and
	`temporary-file-directory'.

	* etc/NEWS (provided): Mention `make-nearby-temp-file' and
	`temporary-file-directory'.

	* lisp/files.el (mounted-file-systems): New defcustom.
	(temporary-file-directory, make-nearby-temp-file): New defuns.
	(normal-backup-enable-predicate): Fix docstring.

	* lisp/net/tramp-adb.el (tramp-adb-file-name-handler-alist):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist):
	* lisp/net/tramp-sh.el (tramp-sh-file-name-handler-alist):
	* lisp/net/tramp-smb.el (tramp-smb-file-name-handler-alist):
	<make-nearby-temp-file, temporary-file-directory>: Add handler.

	* lisp/net/tramp.el (tramp-file-name-for-operation):
	Add `make-nearby-temp-file' and `temporary-file-directory'.
	(tramp-get-remote-tmpdir): Remove compatibility code.
	(tramp-handle-temporary-file-directory)
	(tramp-handle-make-nearby-temp-file): New defuns.

	* lisp/org/ob-core.el (org-babel-local-file-name):
	* lisp/progmodes/gud.el (gud-common-init):
	* lisp/vc/vc-hooks.el (vc-user-login-name): Use `file-remote-p'.

	* lisp/vc/vc-git.el (vc-git-checkin): Handle remote log message.

	* test/lisp/net/tramp-tests.el (tramp-test06-directory-file-name):
	Check `tramp--test-enabled'.
	(tramp-test18-file-attributes): Add tests for
	`file-ownership-preserved-p'.
	(tramp-test27-start-file-process, tramp-test28-shell-command):
	Reduce timeouts in `accept-process-output'.
	(tramp-test--shell-command-to-string-asynchronously): Add timeout.
	(tramp-test29-environment-variables): Remove additional sleep calls.
	(tramp-test32-make-nearby-temp-file): New test.
	(tramp--test-special-characters, tramp--test-utf8): Adapt docstring.
	(tramp-test33-special-characters)
	(tramp-test33-special-characters-with-stat)
	(tramp-test33-special-characters-with-perl)
	(tramp-test33-special-characters-with-ls, tramp-test34-utf8)
	(tramp-test34-utf8-with-stat, tramp-test34-utf8-with-perl)
	(tramp-test34-utf8-with-ls)
	(tramp-test35-asynchronous-requests)
	(tramp-test36-recursive-load, tramp-test37-unload): Rename.
	(tramp--test-ftp-p): Simplify check.
	(tramp--test-sh-p): New defun.
	(tramp-test20-file-modes, tramp-test22-file-times)
	(tramp-test26-process-file, tramp-test27-start-file-process)
	(tramp-test28-shell-command)
	(tramp-test29-environment-variables)
	(tramp-test30-vc-registered)
	(tramp-test33-special-characters-with-stat)
	(tramp-test33-special-characters-with-perl)
	(tramp-test33-special-characters-with-ls)
	(tramp-test34-utf8-with-stat, tramp-test34-utf8-with-perl)
	(tramp-test34-utf8-with-ls)
	(tramp-test35-asynchronous-requests): Use it.

2016-08-06  Michael Albinus  <michael.albinus@gmx.de>

	Add missing dcstrings in Tramp, remove chec for obsolee methods

	* lisp/net/tramp.el (tramp-progress-reporter-update)
	(tramp-unload-file-name-handlers, tramp-get-local-uid)
	(tramp-get-local-gid, tramp-get-local-locale):
	* lisp/net/tramp-adb.el (tramp-adb-ls-date-regexp)
	(tramp-adb-ls-toolbox-regexp, tramp-adb-get-ls-command):
	* lisp/net/tramp-compat.el (tramp-compat-funcall):
	* lisp/net/tramp-ftp.el (tramp-ftp-enable-ange-ftp):
	* lisp/net/tramp-gw.el (tramp-gw-process-filter):
	* lisp/net/tramp-sh.el (tramp-get-remote-path)
	(tramp-get-remote-locale, tramp-get-ls-command)
	(tramp-get-ls-command-with-dired)
	(tramp-get-ls-command-with-quoting-style)
	(tramp-get-ls-command-with-w-option)
	(tramp-get-test-nt-command, tramp-get-file-exists-command)
	(tramp-get-remote-ln, tramp-get-remote-perl)
	(tramp-get-remote-stat, tramp-get-remote-readlink)
	(tramp-get-remote-trash, tramp-get-remote-touch)
	(tramp-get-remote-gvfs-monitor-dir)
	(tramp-get-remote-inotifywait, tramp-get-remote-id)
	(tramp-get-remote-uid-with-id)
	(tramp-get-remote-uid-with-perl, tramp-get-remote-python)
	(tramp-get-remote-uid-with-python, tramp-get-remote-uid)
	(tramp-get-remote-gid-with-id)
	(tramp-get-remote-gid-with-perl)
	(tramp-get-remote-gid-with-python, tramp-get-remote-gid)
	(tramp-get-env-with-u-option): Add missing docstrings.

	* lisp/net/tramp.el (tramp-obsolete-methods)
	(tramp-warned-obsolete-methods): Remove.
	(tramp-find-method): Do not check for obsolete methods any longer.

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Make sh-mode always use p-s-lookup-properties

	This lets functions which rely on syntax-propertize for parsing
	work correctly even before font lock has a chance to run.

	* lisp/progmodes/sh-script.el (sh-set-shell): Set
	parse-sexp-lookup-properties unconditionally (Bug #4920).

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Fix cl-assert with atomp FORM, non-nil SHOW-ARGS

	* lisp/emacs-lisp/cl-macs.el (cl-assert): Don't require that FORM is a
	list when showing its (non-existent) arguments (Bug #18587).

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Don't delete selection after indent-rigidly

	* lisp/indent.el (indent-rigidly): Pass `deactivate-mark' as the ON-EXIT
	function to `set-transient-map', this prevents `delete-selection-mode'
	from deleting the text that was just indented (Bug #20408).

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Fix byte-compile of interactive closures

	* lisp/emacs-lisp/bytecomp.el (byte-compile--reify-function): Put
	bindings after docstring and `interactive' form, if any (Bug #24122).

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Error if --eval arg has text beyond 1 expression

	* lisp/startup.el (command-line-1): If --eval argument has more data
	than constitutes a single Lisp expression, signal an error (Bug #23159).

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Fix quoted lambda warning from lexical-let

	* lisp/emacs-lisp/cl.el (cl--function-convert): Quote the inner lambda
	with `function', not `quote' (Bug #11357).

2016-08-06  Noam Postavsky  <npostavs@gmail.com>

	Make emerge always use shell-quote-argument

	* lisp/vc/emerge.el (emerge-metachars): Obsolete.
	(emerge-protect-metachars): Delete.
	(emerge-make-diff-list, emerge-make-diff3-list): Replace all calls to
	`emerge-protect-metachars' with `shell-quote-argument' so that shell
	quoting is done the same on all system types (Bug #6136).  Also shell
	quote `emerge-diff-program' and `emerge-diff3-program'.

2016-08-06  Eli Zaretskii  <eliz@gnu.org>

	Fix 'dired-diff' when backup file is in another directory

	* lisp/dired-aux.el (dired-diff): Clarify the doc string wrt how
	the default for FILE is computed, especially when backup files
	are involved.  Support backup files in another directory.
	Don't suggest the default FILE if it doesn't exist.  (Bug#24089)

2016-08-06  Eli Zaretskii  <eliz@gnu.org>

	Fix the 'T' command in Dired with non_ASCII file names

	* lisp/dired-aux.el (dired-do-chxxx): Bind coding-system-for-write
	to correctly encode file names passed to the invoked PROGRAM.
	(Bug#24162)

2016-08-05  Noam Postavsky  <npostavs@gmail.com>

	* lisp/files.el (version-control): Drop :group vc (Bug #14687)

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d841a03 ; Spelling fix
	a6ae479 Post AppDefined events from the main thread ONLY (bug#23934)
	d35d398 Update to the AUTHORS file for Bob Weiner
	4d2f4df Revert "Fix local printer set to left aligned string formatter."
	cd1b4d6 Revert "Fix ses-delete-blanks to delete only blanks + documen...
	f7ceb8e Revert "Fix English."
	baa7abd Improve doc strings of 'gud-gdb' and 'gdb'
	aa4271a Fix doc string of 'minibuffer-message-timeout'
	b275cc7 Fix English.
	3c97b0f Fix ses-delete-blanks to delete only blanks + documentation.
	272391f profiler: document prefix arg for tree expansion
	442cc39 Clarify usage of eshell-visual-options
	b443c3c Fix comment in files-in-below-directory
	8a38e94 Fix local printer set to left aligned string formatter.
	0f0b191 ; Fix typos in NEWS
	6bdf687 ; * etc/NEWS: Remove temporary marks

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d08afa1 * etc/AUTHORS: Update the AUTHORS file
	2668500 ;; * ChangeLog.2: ChangeLog update.
	7acfaea ; ChangeLog fixes
	97d28b4 * admin/authors.el (authors-valid-file-names): Addition.
	9ab52f6 * admin/authors.el: Additions.
	0e646c7 Warn about Cairo-related problems
	bc4c07f Don't let completion break `declare' handling
	66f95e0 Adjust match data before calling after-change-funs
	52cf0d5 Do not show string-rectangle preview if minibuffer is empty
	6a3d031 * etc/PROBLEMS: Add entry about selection problems under Plas...

	# Conflicts:
	#	ChangeLog.2
	#	src/lisp.h

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9a41cd1 ; Fix typo
	9356fe2 Expand FIXME near definition of fboundp
	219b39f kill-rectangle should mention killed-rectangle
	59fa4c3 Avoid assertion violations in nhexl-mode

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9ba51ed Document buffer-swap-text+save-excursion interaction
	452aa94 Fix eieio vs cl-generic incompatibilities found in Rudel (bug...
	248d5dd Include cl-generic in package--builtin-versions (bug#22817)
	8f5a8b6 Improve timing in `tramp-test29-environment-variables'
	05ba7a0 Add test for handling environment variables in Tramp
	e393d4f * lisp/emacs-lisp/package.el (describe-package-1) (package-st...
	5e38887 ; * lisp/net/tramp.el: Fix 2010-10-04 comment typo.  (Bug#23913)
	90f2169 ; Spelling fixes
	069fc05 Improve documentation of search functions
	0a0144a Delete environment variables in Tramp when needed
	f624671 Add "New in Emacs 25" section to the FAQ
	658daf9 Fix 'vertical-motion' in non-interactive sessions
	686b520 Fix memory leak in imagemagick-types
	4069b71 Update ELisp manual to match 'string-collate-equalp' doc string
	1b2d6a6 Clarify docstring of find-feature-regexp
	aac62a6 Add details to cl-lib defining macros' docstrings
	d6aa4da Clarify doc string of 'save-buffer'
	03bcf11 Un-confuse doc string of 'string-collate-equalp'
	c53135b Clarify documentation of 'mouse-on-link-p'

	# Conflicts:
	#	lisp/emacs-lisp/eieio-core.el

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	6f285d9 Amend last addition to etc/PROBLEMS
	7067890 * etc/PROBLEMS: Mention GTK+ problem with unexpected frame wi...

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d4c6774 Fix missing point information in undo
	3a9d629 Avoid crashes when buffer modification hooks clobber match data
	178b2f5 Note combine-and-quote-strings doesn't shell quote
	dec7567 Explain when package-initialize isn't called
	113d1e2 Fix escaping in sh-indent-after-continuation docstr
	80e2044 ; * etc/NEWS: Improve previous change.
	5bb9e6c ; * etc/NEWS: Document how to avoid horizontal scroll bars.
	38f4b8e Clarify the documentation of back-references in replacements

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	850ba44 Clarify lexical binding with symbol args behavior
	f981b31 * lisp/net/tramp-sh.el (tramp-remote-path): Doc fix.
	68fc964 * lisp/net/tramp-sh.el (tramp-remote-path): Doc fix.  (Bug#23...
	21110af Avoid assertion violations when rendering some fonts
	6192b6c Document more details of package activation
	272ddc6 Fixup warning message regarding HOME a bit more
	43206d6 * lisp/leim/quail/indian.el ("bengali-probhat"): Change indic...
	d41f7ff Fix input method "probhat" for Bengali
	c150a64 ; Fix typo in commit before last
	ebf0472 Add to elisp-completion-at-point's docstring
	fd9fad0 Give more helpful warning about setting HOME
	ea6b01d ; * lisp/term.el (term-mode): FIXME comment about bidi reorde...

	# Conflicts:
	#	lisp/term.el

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	26d4da0 New input method "probhat" for Bengali
	4f445bf ; Spelling fix
	f403f03 ; Fix typo

2016-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling and minor grammar fixes

	* test/file-organization.org: Rename from test/file-organisation.org.

2016-08-04  Alan Mackenzie  <acm@muc.de>

	Widen in certain low level CC Mode functions.  This fixes bug #24148.

	* lisp/progmodes/cc-engine.el (c-state-semi-pp-to-literal)
	(c-state-full-pp-to-literal): Widen around the functionality.
	(c-parse-ps-state-below): Correct the order of save-excursion and
	save-restriction.

2016-08-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	Fix Bug#24149

	* lisp/subr.el (set-transient-map): Don't wait if MAP not present in
	overriding-terminal-local-map.  (Bug#24149)

2016-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-07-03 mktime: call tzset as per POSIX
	* doc/misc/texinfo.tex, lib/mktime.c, m4/mktime.m4:
	Copy from gnulib.

2016-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Fix GnuTLS includes

	* src/gnutls.c [HAVE_GNUTLS]: Don’t include gnutls/gnutls.h
	a second time; although it doesn’t hurt, it’s not needed.
	* src/sysdep.c [!HAVE_GNUTLS]: Don’t include gnutls/crypto.h,
	as it may not be available.  Problem reported by Glenn Morris in:
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00100.html

2016-08-03  Michal Nazarewicz  <mina86@mina86.com>

	Fix accessing regex-resources in out-of-tree test runs in regex-tests

	[82a487d: Fix reading of regex-resources in regex-tests] attempted to
	fix regex-tests failing when run from the source tree (i.e. via make)
	by hard-coding path to regex-resources directory relative to the test
	directory.

	This fixed runs from the tree but broke the test when run using other
	methods.

	Fix by trying ‘load-file-name’ or ‘buffer-file-name’, whichever is set.

	* test/src/regex-tests.el (regex-tests--resources-dir): New variable
	storing path to the regex-resources directory.
	(regex-tests-generic-line): Use aforementioned variable.

2016-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify by assuming GnuTLS 2.12.2 or later

	* src/gnutls.c (gnutls_certificate_details):
	* src/sysdep.c: Assume GnuTLS 2.12.2 or later.

2016-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Port to systems lacking GNUTLS_NONBLOCK

	Problem reported by Colin Baxter in:
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00096.html
	* src/gnutls.c (Fgnutls_boot): Don’t assume GNUTLS_NONBLOCK is defined.

2016-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Fix non-blocking GnuTLS with slow connection

	Although the problem is reported for OS X (Bug#23982), it seems to
	be possible on other POSIXish platforms.
	* src/gnutls.c (emacs_gnutls_nonblock_errno) [!WINDOWSNT]:
	New function.
	(emacs_gnutls_handshake) [!WINDOWSNT]:
	Use it as the errno function, if non-blocking.
	(Fgnutls_boot): Use GNUTLS_NONBLOCK if non-blocking.

2016-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	Require GnuTLS 2.12.2 or later

	* configure.ac, etc/NEWS: Require GnuTLS 2.12.2 or later,
	instead of merely 2.6.6 or later (Bug#23982#20).
	* src/gnutls.c (init_gnutls_functions, emacs_gnutls_handshake)
	[WINDOWSNT]: Don’t bother with gnutls_check_version or
	gnutls_transport_set_lowat, as they are no longer needed now that
	we require gnutls 2.12.2 or later.

2016-08-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/window.c (sanitize_window_sizes): Remove unused arg `frame'

	* src/window.h (sanitize_window_sizes): Adjust prototype.
	* src/frame.c (adjust_frame_size): Adjust calls.

2016-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix (mapcar F S) crash when F alters S’s length

	* src/fns.c (mapcar1): Return number of elements computed,
	which can be less than LENI if the function alters the list.
	All callers changed.  (Bug#24118)

2016-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	Port window changes to --enable-gcc-warnings

	* src/window.c (sanitize_window_sizes): Return void.
	This pacifies GCC, and no caller uses the return value anyway.

2016-08-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/window.c: Fix bootstrap failure due to window.el changes

	(sanitize_window_sizes): Adjust to new calling convention of
	window--sanitize-window-sizes and only call it if defined.
	(Fwindow__sanitize_window_sizes): Remove.
	(syms_of_window): Don't defsubr it.

2016-08-02  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#23883

	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	Call `process-actions' with adapted position.  The connection
	buffer might have been cleaned up already.  (Bug#23883)

2016-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	Port regex changes to strict ISO C

	* src/regex.c (regex_compile): Redo casts.

2016-08-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/window.el: Use lexical-binding

	(window--min-size-ignore-p): Remove unused arg `horizontal'.
	(window--sanitize-window-sizes): Remove unused arg `frame'.
	(window-edges): Remove unused vars left-off and right-off.
	(display-buffer-reuse-mode-window): Remove unused var `frame?'.
	Avoid extraneous setq and do a bit of CSE.
	(fit-frame-to-buffer): Remove unused vars `window', `fit-width',
	and `toolbar-extra-height'.
	(window-adjust-process-window-size): Remove unused arg `process'.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Fix unused lexical variable

	This fixes the following warning:

	    In toplevel form:
	    src/regex-tests.el:416:1:Warning: Unused lexical variable ‘newline’

	* test/src/regex-tests.el (regex-tests-BOOST): Remove unused lexical
	variable.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Remove unused STREQ macro

	This fixes the following compilation warning:

	    regex.c:516:0: warning: macro "STREQ" is not used [-Wunused-macros]
	     #define STREQ(s1, s2) ((strcmp (s1, s2) == 0))
	     ^

	* src/regex.c (STREQ): Remove unused macro.  It should have been removed
	in a [4538a5e: Refactor regex character class parsing in [:name:]]
	commit but was mistakenly left out.

2016-08-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-generic.el: Fix problems introduced by new
	load-history format

	* lisp/emacs-lisp/cl-generic.el (cl--generic-load-hist-format): New function.
	(cl-generic-define-method, cl--generic-describe): Use it.
	(cl--generic-search-method): Adjust for new format.

	* lisp/progmodes/elisp-mode.el (elisp--xref-find-definitions):
	* test/lisp/progmodes/elisp-mode-tests.el:
	Use cl--generic-load-hist-format rather than hard-coding cl-generic's
	internal format.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Hardcode regex syntax to remove dead code handling different syntax

	Emacs only ever uses its own regex syntax so support for other syntaxes
	is never used.  Hardcode the syntax so that the compilar can detect such
	dead code and remove it from compiled code.

	The only exception is RE_NO_POSIX_BACKTRACKING which can be separatelly
	specified.  Handle this separatelly with a function argument (replacing
	now unnecessary syntax argument).

	With this patchset, size of Emacs binary on x86_64 machine is reduced by
	around 60 kB:

		new-sizes:-rwx------ 3 mpn eng 30254720 Jul 27 23:31 src/emacs
		old-sizes:-rwx------ 3 mpn eng 30314828 Jul 27 23:29 src/emacs

	* src/regex.h (re_pattern_buffer): Don’t define syntax field #ifdef emacs.
	(re_compile_pattern): Replace syntax with posix_backtracking argument.

	* src/regex.c (print_compiled_pattern): Don’t print syntax #ifdef emacs.
	(regex_compile): #ifdef emacs, replace syntax argument with
	posix_backtracking which is now used instead of testing for
	RE_NO_POSIX_BACKTRACKING syntax.
	(re_match_2_internal): Don’t access bufp->syntax #ifndef emacs.
	(re_compile_pattern): Replace syntax with posix_backtracking argument.

	* src/search.c (compile_pattern_1): Pass boolean posix_backtracking
	instead of syntax to re_compile_pattern.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Get rid of re_set_whitespace_regexp

	* src/regex.h (re_set_whitespace_regexp): Delete.
	(re_compile_pattern): Add whitespace_regexp argument #ifdef emacs.

	* src/regex.c (re_set_whitespace_regexp, whitespace_regexp): Delete.
	(regex_compile): Add whitespace_regexp argument #ifdef emacs and wrap
	whitespace_regexp-related code in an #ifdef emacs so it’s compiled out
	unless building Emacs.
	(re_compile_pattern): Pass whitespace_regexp argument to regex_compile

	* src/search.c (compile_pattern_1): Don’t use re_set_whitespace_regexp,
	pass the regex as argument to re_compile_pattern instead.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Get rid of re_set_syntax

	Instead of using a global variable for storing regex syntax, pass it
	to re_compile_pattern.  This is only enabled when compiling Emacs (i.e.
	‘#ifdef emacs’).

	* src/regex.h (re_set_syntax): Declare only #ifndef emacs.
	(re_compile_pattern): Now takes syntax argument #ifdef emacs.

	* src/regex.c (re_syntax_options): Define only #ifndef emacs.
	(re_compile_pattern): Use the new syntax argument #ifdef emacs.

	* src/search.c (compile_pattern_1): Don’t use re_set_syntax and
	instead pass syntax to re_compile_pattern directly.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Remove dead opcodes in regex bytecode

	There is no way to specify before_dot and after_dot opcodes in a regex
	so code handling those ends up being dead.  Remove it.

	* src/regex.c (print_partial_compiled_pattern, regex_compile,
	analyze_first, re_match_2_internal): Remove handling and references to
	before_dot and after_dot opcodes.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Refactor regex character class parsing in [:name:]

	re_wctype function is used in three separate places and in all of
	those places almost exact code extracting the name from [:name:]
	surrounds it.  Furthermore, re_wctype requires a NUL-terminated
	string, so the name of the character class is copied to a temporary
	buffer.

	The code duplication and unnecessary memory copying can be avoided by
	pushing the responsibility of parsing the whole [:name:] sequence to
	the function.

	Furthermore, since now the function has access to the length of the
	character class name (since it’s doing the parsing), it can take
	advantage of that information in skipping some string comparisons and
	using a constant-length memcmp instead of strcmp which needs to take
	care of NUL bytes.

	* src/regex.c (re_wctype): Delete function.  Replace it with:
	(re_wctype_parse): New function which parses a whole [:name:] string
	and returns a RECC_* constant or -1 if the string is not of [:name:]
	format.
	(regex_compile): Use re_wctype_parse.
	* src/syntax.c (skip_chars): Use re_wctype_parse.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Split regex glibc test cases into separet tests

	* test/src/regex-tests.el (regex-tests): Remove and split into multiple
	tests cases.
	(regex-tests-glbic-BOOST, regex-tests-glibc-PCRE,
	regex-tests-glibc-PTESTS, regex-tests-glibc-TESTS): New test cases split
	from ‘regex-tests’.

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Don’t (require 'cl)

	* test/src/regex-tests.el: Don’t (require 'cl).
	(regex-tests-PCRE): s/loop/cl-loop/

2016-08-02  Michal Nazarewicz  <mina86@mina86.com>

	Fix reading of regex-resources in regex-tests

	* test/src/regex-tests.el (regex-tests-generic-line): Referring to
	‘buffer-file-name’ does not work when running the test from command
	line, i.e. via make, which results in (wrong-type-argument stringp nil)
	failures.  Replace it with hard-coded path.
	(regex-tests-BOOST, regex-tests-PCRE, regex-tests-PTESTS-whitelist,
	regex-tests-TESTS-whitelist): ‘regex-tests-generic-line’ now  includes
	the ‘regex-resources’ path component so the tests don’t need to specify
	it explicitly.

2016-08-02  Dima Kogan  <dima@secretsauce.net>

	Added driver for the regex tests

	* test/src/regex-tests.el (regex-tests): Test executing glibc tests
	cases.

	[mina86@mina86.com: merged test with existing file]

2016-08-02  Dima Kogan  <dima@secretsauce.net>

	New regex tests imported from glibc 2.21

	* test/src/regex-resources/BOOST.tests:
	* test/src/regex-resources/PCRE.tests:
	* test/src/regex-resources/PTESTS:
	* test/src/regex-resources/TESTS:
	New test data files

	[mina86@mina86.com: Moved files from test/src/regex/* to test/src/*.]

2016-08-02  Paul Eggert  <eggert@cs.ucla.edu>

	Fix use-after-close in connect_network_socket

	* src/process.c (connect_network_socket):
	Reverse sense of previous fix.  Problem reported by Ken Brown in:
	https://lists.gnu.org/r/emacs-devel/2016-08/msg00004.html

2016-08-01  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/autoload.el (autoload-generate-file-autoloads):
	Respect autoload-timestamps for "actual autoloads are elsewhere" case.

2016-07-31  Stefan Merten  <stefan@merten-home.de>

	* lisp/textmodes/rst.el: Major refactoring, minor changes, minor fixes

	(rst-Ado, rst-Hdr, rst-Ttl, rst-Stn): Introduce classes
	representing reStructuredText section header concepts.
	(rst-mode-map, rst-new-preferred-hdr)
	(rst-update-section, rst-classify-adornment)
	(rst-ttl-at-point, rst-all-ttls-cache)
	(rst-hdr-hierarchy-cache, rst-reset-section-caches)
	(rst-all-ttls, rst-infer-hdr-hierarchy, rst-hdr-hierarchy)
	(rst-all-ttls-with-level, rst-get-previous-hdr)
	(rst-adornment-complete-p, rst-next-hdr, rst-adjust)
	(rst-adjust-section, rst-promote-region)
	(rst-display-hdr-hierarchy, rst-straighten-sections)
	(rst-all-stn, rst-remaining-stn, rst-toc-insert)
	(rst-toc-insert-node, rst-toc-node, rst-toc)
	(rst-forward-section, rst-adornment-level)
	(rst-font-lock-handle-adornment-pre-match-form)
	(rst-imenu-convert-cell, rst-imenu-create-index): Refactor
	using classes.
	(rst-compare-adornments, rst-get-adornment-match): Remove
	functions now in classes.
	(rst-re-alist-def, rst-toc-mode)
	(rst-font-lock-extend-region-extend): Minor improvements.
	(rst-mode, rst-compile): Use `setq-local'.
	(rst-cvs-header, rst-svn-rev, rst-svn-timestamp)
	(rst-official-version, rst-official-cvs-rev)
	(rst-package-emacs-version-alist): Maintain version tags.

2016-07-30  Martin Rudalics  <rudalics@gmx.at>

	Fix calculation of tool bar width reported by `frame-geometry' (Bug#24107)

	* src/w32fns.c (Fw32_frame_geometry): Fix calculation of tool
	bar width (Bug#24107).  Reindent.
	* src/xfns.c (frame_geometry): Fix calculation of tool bar
	width on non-GTK builds.

2016-07-30  Eli Zaretskii  <eliz@gnu.org>

	Fix region display while dragging mouse

	* lisp/mouse.el (mouse-drag-track): Reset deactivate-mark in the
	buffer of the drag event, to allow mark to be set and the region
	be shown as we drag the mouse.  (Bug#24030)

2016-07-30  Tino Calancha  <tino.calancha@gmail.com>

	Copy just non-empty strings to kill-ring

	* lisp/dired.el (dired-copy-filename-as-kill):
	Do not change the kill ring when the string is empty (Bug#24103).

2016-07-30  Eli Zaretskii  <eliz@gnu.org>

	Avoid warnings about undo list while decoding

	* src/coding.c (coding_restore_undo_list): New function.
	(decode_coding_gap, decode_coding_object): Temporarily set the
	buffer's undo list to t, to avoid warnings when decoding changes
	the buffer many times, e.g. due to post-read-conversion.  Use
	coding_restore_undo_list to make sure the undo list is restored.
	(Bug#23813)

2016-07-28  Noam Postavsky  <npostavs@gmail.com>

	profiler: Add mouse-1 binding for tree expansion

	(profiler-report-mode-map): Add mouse-1 binding for
	profiler-report-toggle-entry (Bug #13455).

2016-07-28  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Enable addition of local printers from a mode hook.

	* doc/misc/ses.texi (Printer functions): Split the node into 5
	sub-nodes + add some extra documentation.
	(Various kinds of printer functions): Make an itemization to
	disintguish better the 3 types of printers, give an example of
	lambda printer definition.
	(Standard printer functions): Add documentation for ses-prin1
	printer function.
	(Local printer functions): Add documentation for creating
	local printers programmatically from a hook.
	(Writing a lambda printer function): Add documentation about
	anti-stackoverflow precautions to take when you call the
	standard printer functions from inside a local printer.

	* lisp/ses.el (ses-standard-printer-functions): Add ses-prin1
	among standard printer function, and update docstring
	accordingly.
	(ses-call-printer, ses-export-tab): Call `ses-prin1' instead
	of prin1-to-string.
	(ses-define-local-printer): Add definition to arguments so
	that a local printer can be defined programmatically from a
	mode hook.  Make docstring more substantial.  Use completing
	read for local printer name input.  Plus some minor
	optimization.
	(ses-define-if-new-local-printer): New defsubst.
	(ses-center, ses-center-span, ses-dashfill)
	(ses-dashfill-span, ses-tildefill-span): Allow to pass printer
	as an optional argument to superseed column printer/default
	spreadsheet printer.
	(ses-prin1): New defun.

2016-07-27  Ted Zlatanov  <tzz@lifelogs.com>

	Prompt to save gnus-cloud-method.

	Since `gnus-cloud-method' is a defcustom, when it's set, we should
	prompt the user to save it, so the customization is not lost on
	restart.

	* lisp/gnus/gnus-srvr.el (gnus-server-toggle-cloud-method-server):
	Prompt to save the customization of `gnus-cloud-method'.

2016-07-27  Ken Brown  <kbrown@cornell.edu>

	Fix dired-test-bug22694

	* test/lisp/dired-tests.el (dired-test-bug22694): Delete the
	"bug22694" directory, if it exists, before running the test.  It
	might be left over from a previous aborted run of the test.

2016-07-27  Michal Nazarewicz  <mina86@mina86.com>

	Fix ‘is multibyte’ test regex.c’s mutually_exclusive_p (bug#24020)

	* src/regex.c (mutually_exclusive_p): Fix how whether character is
	unibyte is tested when calling execute_charset function.  This bug has
	been introduced by [6dc6b00: Fix ‘[[:cc:]]*literal’ regex failing to
	match ‘literal’] which dropped a call to IS_REAL_ASCII (c) macro.
	Reinstitute it.

2016-07-27  Tino Calancha  <tino.calancha@gmail.com>

	Remove hook when disabling ibuffer-auto-mode

	* lisp/ibuf-ext.el (ibuffer-auto-mode):
	Remove 'ibuffer-auto-update-changed' from 'post-command-hook'.

2016-07-26  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/subr.el (cancel-change-group): Reset cell in case of error

	Since the setcdr/setcdr is supposed to be temporary, use unwind-protect
	to make sure we properly undo the temporary change even in case of error.

2016-07-26  Eli Zaretskii  <eliz@gnu.org>

	Avoid segfaults in compute_motion

	* src/indent.c (compute_motion): Don't turn on and don't use the
	width cache unless the buffer's width-table is non-nil.  This
	avoids segfaults because code that uses the width cache assumes
	the width-table exists.  (Bug#24064)

2016-07-26  Nicolas Petton  <nicolas@petton.fr>

	Do not sharp-quote lambdas

	* lisp/progmodes/sql.el: Remove sharp-quotes in lambdas.

2016-07-25  Ted Zlatanov  <tzz@lifelogs.com>

	* lisp/gnus/gnus-cloud.el (gnus-cloud-encode-data): Fix
	'base64-gzip encoding.

2016-07-25  Andrew Hyatt  <ahyatt@gmail.com>

	Add warning to format-alist docs.

	*/doc/lispref/files.texi (format-alist) Change documentation for
	format-alist to warn against file modifications when formatting, which
	leads to incorrect results.  (Bug#5440)

	Changes suggested by Eli.

2016-07-25  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/gnus/mm-decode.el (mm-convert-shr-links):
	Preserve key bindings that shr adds (bug#23964).

2016-07-25  Michal Nazarewicz  <mina86@mina86.com>

	Fix ‘[[:cc:]]*literal’ regex failing to match ‘literal’ (bug#24020)

	The regex engine tries to optimize Kleene star by avoiding backtracking
	when it can detect that star’s operand cannot match what follows it in
	the pattern.

	For example, when ‘[[:alpha:]]*1’ tries to match a ‘foo’, the engine
	will test the longest match for ‘[[:alpha:]]*’, namely ’foo’ which is
	the entire string.  Literal digit one still present in the pattern will
	however not match the remaining empty string.

	Normally, backtracking would be performed trying a shorter match for the
	character class (namely ‘fo’ leaving ‘o’ in the string), but since the
	engine knows whatever would be put back into the string cannot possibly
	match literal digit one so no backtracking will be attempted.

	In the regexes of the form ‘[[:CC:]]*X’, the optimization can be applied
	if the character class CC does not match character X.  In the above
	example, this holds because digit one is not in alpha character class.

	This test is performed by mutually_exclusive_p function but it did not
	check class bits of a charset opcode.  This resulted in an assumption
	that character classes do not match multibyte characters.  For example,
	it would incorrectly conclude that [[:alpha:]] doesn’t match ‘ż’.

	This, in turn, led to the aforementioned Kleene star optimization being
	incorrectly applied in patterns such as ‘[[:graph:]]*☠’ (which should
	match ‘☠’ but doesn’t as can be tested by executing
	    (string-match-p "[[:graph:]]*☠" "☠")
	which should return 0 but instead yields nil.

	This issue affects any class witch matches multibyte characters, i.e.
	if ‘[[:cc:]]’ matches a multibyte character X then ‘[[:cc:]]*X’ will
	fail to match ‘X’.

	* src/regex.c (executing_charset): A new function for executing the
	charset and charset_not opcodes.  It performs check on the character
	taking into consideration existing bitmap, range table and class bits.
	It also advances the pointer in the regex bytecode past the parsed
	opcode.
	(CHARSET_LOOKUP_RANGE_TABLE_RAW, CHARSET_LOOKUP_RANGE_TABLE): Removed.
	Code now included in executing_charset.
	(mutually_exclusive_p, re_match_2_internal): Changed to take advantage
	of executing_charset function.

	* test/src/regex-tests.el: New file with tests for the character class
	matching.

2016-07-25  Nicolas Petton  <nicolas@petton.fr>

	Fix auto-reverting image-mode buffer (bug#21598)

	When auto-reverting an image buffer, `image-mode' is not called since
	`revert-buffer' is called with `preserve-modes' set to non-nil.

	* lisp/image-mode.el (image-after-revert-hook): Check if there is an
	image display property for the current buffer before updating it.

2016-07-24  Paul Eggert  <eggert@cs.ucla.edu>

	‘signal’ no longer returns

	Although for decades ‘signal’ has been documented to not return,
	a corner case in the Lisp debugger causes ‘signal’ to return.
	Remove the corner case and adjust Emacs internals accordingly.
	An alternative would be to document the corner case, but this
	would complicate the Lisp API unnecessarily.  (Bug#24047)
	* src/eval.c (signal_or_quit): New function, with most of the
	old contents of Fsignal.
	(quit): New function, which uses signal_or_quit and which
	might return.  All keyboard-based callers of Fsignal (Qquit,
	Qnil) changed to use this new function instead.
	(Fsignal): Use signal_or_quit.  Now _Noreturn.  All callers
	changed.
	(xsignal): Move to lisp.h.
	* src/lisp.h (xsignal): Now an inline function, as it's now
	just an alias for Fsignal.

2016-07-24  Paul Eggert  <eggert@cs.ucla.edu>

	Require libgnutls unless --with-gnutls=no

	* configure.ac: Report an error if the gnutls library is missing,
	unless --with-gnutls=no is specified.

2016-07-23  Alan Mackenzie  <acm@muc.de>

	Fontify C++ parameter packs.

	This fixes debbugs #23610.

	* lisp/progmodes/cc-langs.el (c-pack-ops, c-pack-key): New
	c-lang-defconsts/defvars.
	(c-type-decl-prefix-key): Add "..." and "&&" into the C++ version.

	* lisp/progmodes/cc-engine.el (c-forward-type): Handle matches of c-pack-key.

2016-07-23  Alan Mackenzie  <acm@muc.de>

	Java Mode: Handle strings as case labels correctly.

	This fixes debbugs #23901.

	* lisp/progmodes/cc-langs.el (c-nonlabel-token-key): Remove "\"" from the
	Java value.

2016-07-22  Kaushal Modi  <kaushal.modi@gmail.com>

	Avoid repeated warnings while restoring desktop

	* lisp/desktop.el (desktop-restore-file-buffer): Do not print warnings
	when files are being opened during desktop restore.

2016-07-22  Eli Zaretskii  <eliz@gnu.org>

	Fix compilation warning in the MinGW build

	* nt/inc/ms-w32.h: Include stdint.h.
	(_execvp, execve): Provide prototypes.

	* lib-src/emacsclient.c [WINDOWSNT]: Remove prototype for execvp,
	it is now in nt/inc/ms-w32.h.
	* lib-src/ntlib.c (getppid): Avoid compiler warnings due to format
	mismatch.
	(sys_ctime): Remove, not used.

2016-07-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Move read-multiple-choice to subr-x.el

	* lisp/faces.el (read-multiple-choice-face): Fix doc string.

	* lisp/emacs-lisp/subr-x.el (read-multiple-choice): Move here
	from subr.el.

	* lisp/gnus/message.el (subr-x): Ditto.

	* lisp/net/nsm.el: Require subr-x for read-multiple-choice.

	read-multiple-choice doesn't need to be in the dumped Emacs, so move
	it to a less central file.

2016-07-22  Tino Calancha  <tino.calancha@gmail.com>

	Update define-ibuffer-op doc string

	* lisp/ibuf-macs.el (define-ibuffer-op):
	Mention that BODY is evaluated with 'buf' bound to the actual
	marked buffer being processed.

2016-07-22  Tino Calancha  <tino.calancha@gmail.com>

	Update define-ibuffer-op doc string

	* lisp/ibuf-macs.el (define-ibuffer-op): Document arg COMPLEX
	instead of refer the reader to the source code.
	Document arg BODY.

2016-07-21  Tino Calancha  <tino.calancha@gmail.com>

	Fix shell-command[-on-region] doc strings

	* lisp/simple.el (shell-command, shell-command-on-region):
	Drop the sentence saying that the command may delete the buffer
	'*Shell Command Output*': the command never delete such
	buffer (Bug#23936).

2016-07-21  Mark Oteiza  <mvoteiza@udel.edu>

	;Revert ";Partially revert 2649105a"

	This reverts commit b7651649c2b1321a0c510116c1ac2442599d9a2e.

2016-07-21  Mark Oteiza  <mvoteiza@udel.edu>

	;Partially revert 2649105a

	* lisp/textmodes/tex-mode.el (tex-common-initialization): Use
	setq-local to modify prettify-symbols-compose-predicate.

2016-07-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/bytecode.c: Fix compilation with BYTE_CODE_SAFE

	(struct byte_stack): Re-add `bottom'.
	(exec_byte_code): Initialize it.

2016-07-21  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Use default output buffer for shell commands

	* lisp/ibuf-ext.el (shell-command-pipe): Insert the output in buffer
	'*Shell Command Output*', as command 'shell-command-file'.

2016-07-21  Tino Calancha  <tino.calancha@gmail.com>

	Fix failing test

	* test/lisp/erc/erc-track-tests.el (erc-track--erc-faces-in):
	Enable Font Lock mode in order to initialize
	'char-property-alias-alist' (Bug#23954).

2016-07-21  Paul Eggert  <eggert@cs.ucla.edu>

	Fix use-after-close in connect_network_socket

	* src/process.c (connect_network_socket): Don’t use
	external_sock_fd after closing it.  Problem found by Coverity Scan.

2016-07-21  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/net/shr.el (shr-fill-line):
	Preserve text properties in folded lines (bug#24034).

2016-07-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix lifetime bug in tzlookup

	* src/editfns.c (tzlookup): Fix storage lifetime bug when
	INTEGERP (zone) && settz.  Problem found by Coverity Scan.

2016-07-20  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix shr.el/image build problem

	(Bug#24035)

	* lisp/net/shr.el: Require image, since some builds seem to
	break without it (bug#24035).

2016-07-20  Ted Zlatanov  <tzz@lifelogs.com>

	Bring the Gnus Cloud package into working order.

	* lisp/gnus/gnus-sync.el: Removed in favor of gnus-cloud.el.

	* lisp/gnus/gnus-cloud.el: Autoload EPG functions. Change storage format to
	simplify non-file data.
	(gnus-cloud-storage-method): New defcustom to support nil, Base64,
	Base64+gzip, or EPG encoding on the Gnus Cloud IMAP server. Defaults to
	EPG if that's available, Base64+gzip otherwise.
	(gnus-cloud-interactive): New defcustom to make Gnus Cloud operations
	interactive, defaults to enabled.
	(gnus-cloud-group-name): New variable for the Gnus Cloud group name.
	(gnus-cloud-make-chunk): Tag with "Gnus-Cloud-Version" instead of just
	"Version".
	(gnus-cloud-insert-data): Simplify and support :newsrc-data entries.
	(gnus-cloud-encode-data, gnus-cloud-decode-data): Support various
	storage methods as per gnus-cloud-storage-method.
	(gnus-cloud-parse-chunk): Look for "Gnus-Cloud-Version" marker.
	(gnus-cloud-parse-version-1): Fix parsing loop bug. Handle :newsrc-data
	entries.
	(gnus-cloud-update-all): Handle :newsrc-data entries and dispatch to
	file and data handlers.
	(gnus-cloud-update-newsrc-data): New function to handle :newrsc-data
	entries.
	(gnus-cloud-update-file): Rework to support gnus-cloud-interactive and
	be more careful.
	(gnus-cloud-delete-file): Remove; merged into gnus-cloud-update-file.
	(gnus-cloud-file-covered-p, gnus-cloud-all-files)
	(gnus-cloud-files-to-upload, gnus-cloud-ensure-cloud-group)
	(gnus-cloud-add-timestamps, gnus-cloud-available-chunks)
	(gnus-cloud-prune-old-chunks): Fix indentation.
	(gnus-cloud-timestamp): New function to make a standard Gnus Cloud
	timestamp.
	(gnus-cloud-file-new-p): Use it.
	(gnus-cloud-upload-all-data): Add interactive convenience function to
	upload all data.
	(gnus-cloud-upload-data): Make interactive; collect files and newsrc
	data separately; refresh Gnus Cloud group after insert.
	(gnus-cloud-download-all-data): Add interactive convenience function to
	download all data.
	(gnus-cloud-download-data): Rework to support "Gnus-Cloud-Version"
	marker and different storage methods.
	(gnus-cloud-host-server-p): New function to check if a server is the
	Gnus Cloud host.
	(gnus-cloud-collect-full-newsrc): Tag entries with :newsrc-data.
	(gnus-cloud-host-acceptable-method-p): New function so
	other code can check if a server method can host the Gnus cloud.
	(gnus-cloud-storage-method): Use 'radio instead of 'choice for better UI.
	(gnus-cloud-method): Make this a defcustom and note how to set it.

	* lisp/gnus/gnus-group.el (gnus-group-cloud-map): Add Gnus Cloud autoloaded
	keybindings under the `~' prefix.

	* lisp/gnus/gnus-srvr.el (gnus-server-mode-map, gnus-server-make-menu-bar)
	(gnus-server-cloud, gnus-server-cloud-host)
	(gnus-server-font-lock-keywords, gnus-server-insert-server-line)
	(gnus-server-toggle-cloud-method-server): Support Gnus Cloud
	synchronized servers and synchronization host server toggling (`i' and
	`I') and visual display.
	(gnus-server-toggle-cloud-method-server): Use
	gnus-cloud-host-acceptable-method-p.
	(gnus-server-toggle-cloud-method-server): Use custom-set-variables to
	set the gnus-cloud-method. Ask the user if it's OK to upload the data
	right now.

	* doc/misc/gnus.texi: Document Gnus Cloud package.

2016-07-20  Paul Eggert  <eggert@cs.ucla.edu>

	Remove CHECK_FRAME_FONT cruft from bytecode.c

	* src/bytecode.c [CHECK_FRAME_FONT]: Do not include frame.h, xterm.h.
	Remove some old ‘#if 0’ code.

2016-07-20  Paul Eggert  <eggert@cs.ucla.edu>

	Work around GCC bug 54561 in a better way

	The new approach is less selective, but also less intrusive on C code.
	* src/bytecode.c, src/image.c, src/keyboard.c: Ignore -Wclobbered.
	* src/conf_post.h (NONVOLATILE): Remove.  All uses removed.

2016-07-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix port to glibc 2.24 (pre-release) + ppc64

	* src/callproc.c (child_setup): Use emacs_exec_file
	so that ASLR is enabled in the child process.
	* src/emacs.c: Move some personality details into sys/sysdep.c.
	Do not include <sys/personality.h>.
	(main): Disable ASLR earlier, so that we don’t chdir twice.
	* src/lisp.h (disable_address_randomization): New decl.
	* src/sysdep.c (disable_address_randomization)
	[HAVE_PERSONALITY_ADDR_NO_RANDOMIZE]: Move personality details
	here from emacs.c.
	(emacs_exec_file): New function.

2016-07-19  Alan Third  <alan@idiocy.org>

	Prevent bar cursor overwriting next glyph (bug#16856)

	* src/nsterm.m (ns_draw_window_cursor): Test glyph width vs cursor width
	before setting final size.

2016-07-19  Eli Zaretskii  <eliz@gnu.org>

	Fix 'transpose-regions' when LEAVE-MARKERS arg is non-nil

	* src/insdel.c (adjust_markers_bytepos): New function.
	* src/lisp.h (adjust_markers_bytepos): Add prototype.
	* src/insdel.c (replace_range, replace_range_2):
	* src/editfns.c (Ftranspose_regions): Call
	adjust_markers_bytepos.  (Bug#5131)

	* test/src/editfns-tests.el (transpose-test-reverse-word)
	(transpose-test-get-byte-positions): New functions.
	(transpose-ascii-regions-test)
	(transpose-nonascii-regions-test-1)
	(transpose-nonascii-regions-test-2): New tests.

2016-07-19  Katsumi Yamaoka  <yamaoka@jpl.org>

	Make gif animation work (bug#24004)

	* lisp/image.el (image-animate-timeout): Fix the logic that tests if
	an animation is too big (bug#24004).

2016-07-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/simple.el (undo-amalgamate-change-group): New function

	* lisp/emulation/viper-cmd.el (viper-adjust-undo): Use it.
	(viper-set-complex-command-for-undo): Save current state with
	prepare-change-group.
	* lisp/emulation/viper-init.el (viper-undo-needs-adjustment)
	(viper-buffer-undo-list-mark): Remove.

2016-07-18  Noam Postavsky  <npostavs@gmail.com>

	Keep w32 environment settings internal only

	* src/emacs.c (main) [WINDOWSNT]: Move init_environment calls after the
	set_initial_environment call.  This prevents Emacs' modifications to the
	environment from contaminating Vprocess_environment and
	Vinitial_environment (Bug #10980).
	* src/callproc.c (getenv_internal) [WINDOWSNT]: Consult Emacs' internal
	environment in as a fallback to Vprocess_environment.
	* test/src/callproc-tests.el (initial-environment-preserved): New Test.

2016-07-18  Nicolas Petton  <nicolas@petton.fr>

	Better documentation for cl-reduce (bug#24014)

	* lisp/emacs-lisp/cl-seq.el (cl-reduce): Explain what reducing means.

2016-07-17  Alan Third  <alan@idiocy.org>

	Remove separate pool for popup dialogs (bug#23856)

	* src/nsmenu.m (pop_down_menu, ns_popup_dialog): Remove references to
	autorelease pool and Popdown_data struct.

2016-07-17  Mark Oteiza  <mvoteiza@udel.edu>

	Use eldoc-documentation-functions

	* lisp/hexl.el (hexl-mode):
	* lisp/ielm.el (inferior-emacs-lisp-mode):
	* lisp/progmodes/cfengine.el (cfengine3-mode):
	* lisp/progmodes/elisp-mode.el (emacs-lisp-mode):
	* lisp/progmodes/octave.el (octave-mode, inferior-octave-mode):
	* lisp/progmodes/python.el (python-mode):
	* lisp/simple.el (read--expression): Add buffer-locally to hook
	eldoc-documentation-functions.

2016-07-16  Noam Postavsky  <npostavs@gmail.com>

	Optimize ucs-normalize.el compilation

	* lisp/international/ucs-normalize.el (ucs-normalize-combining-chars-regexp):
	(quick-check-list-to-regexp): Use regexp-opt-charset instead of
	regexp-opt.
	* lisp/international/ucs-normalize.el (quick-check-list): Reuse a single
	temp buffer for the whole loop.

2016-07-16  Noam Postavsky  <npostavs@gmail.com>

	Add tests for ucs-normalize.el

	Some tests are marked as expected to fail.

	* test/lisp/international/ucs-normalize-tests.el: New tests.
	* admin/unidata/NormalizationTest.txt: Add data for tests.
	* admin/unidata/README: Add URL for NormalizationTest.txt.
	* admin/notes/unicode: Add note about running (and updating the data
	for) the new tests.  Remove note about normalization being unsupported.

2016-07-16  Alan Third  <alan@idiocy.org>

	Fix cursor display (bug#23993)

	* src/xdisp.c (get_phys_cursor_geometry): Fix invalid C operator.

2016-07-15  Paul Eggert  <eggert@cs.ucla.edu>

	Stop worrying about Alliant in bytecode.c

	* src/bytecode.c (PUSH): Remove workaround for long-obsolete compiler.

2016-07-15  Paul Eggert  <eggert@cs.ucla.edu>

	Remove BYTE_MAINTAIN_TOP

	It is no longer needed now that we assume GC_MARK_STACK ==
	GC_MAKE_GCPROS_NOOPS.
	* src/bytecode.c (BYTE_MAINTAIN_TOP): Remove.
	All uses removed, and code simplified accordingly.
	(BEFORE_POTENTIAL_GC, AFTER_POTENTIAL_GC): Remove, since they
	are always no-ops now.  All uses removed.
	(MAYBE_GC): Remove.  All uses replaced by maybe_gc,
	since it is now equivalent.

2016-07-15  Paul Eggert  <eggert@cs.ucla.edu>

	Remove now-inaccurate bytecode comments

	* src/bytecode.c: Remove comments that are no longer accurate.
	Most of these are actually old ChangeLog entries.

2016-07-15  Paul Eggert  <eggert@cs.ucla.edu>

	Port to glibc 2.24 (pre-release) + ppc64

	Inspired by a suggestion by Florian Weimer in:
	https://sourceware.org/ml/libc-alpha/2016-07/msg00425.html
	* configure.ac (HAVE_PERSONALITY_ADDR_NO_RANDOMIZE):
	Rename from HAVE_PERSONALITY_LINUX32, and check for
	ADDR_NO_RANDOMIZE (the crucial thing) instead of for LINUX32.
	All uses changed.
	* src/emacs.c (main) [HAVE_PERSONALITY_ADDR_NO_RANDOMIZE]:
	Use ADDR_NO_RANDOMIZE from personality.h rather than inventing the
	flag ourselves.  Just set that flag, rather than also setting the
	persona.  When doing it, avoid functions like putenv that may
	allocate memory.

2016-07-14  Mark Oteiza  <mvoteiza@udel.edu>

	Revert "Add a couple cells to lisp-prettify-symbols-alist"

	This reverts commit bdda4855c635ecf4135e23321bdba023e9ae65c9.

2016-07-14  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/simple.el (shell-command): Add save-match-data comment

2016-07-14  Alan Mackenzie  <acm@muc.de>

	CC Mode: correct incorrect invocation of parse-partial-sexp.

	Fixes bug #23944.

	* lisp/progmodes/cc-engine.el (c-literal-limits): make the sixth argument of
	an invocation of parse-partial-sexp 'syntax-table, not the fourth.

2016-07-14  Andreas Schwab  <schwab@suse.de>

	Fix configure summary for hybrid malloc configurations

	* configure.ac ("$hybrid_malloc" = yes): Set GNU_MALLOC to no,
	parenthesize value of GNU_MALLOC_reason.

2016-07-14  Stephen Berman  <stephen.berman@gmx.net>

	Fix delete-duplicate-lines

	* lisp/sort.el (delete-duplicate-lines): Delete duplicate
	first line when operating backward (bug#23863).

2016-07-14  Andreas Schwab  <schwab@suse.de>

	Remove unused SHEAP_OBJ

	* Makefile.in (base_obj): Remove $(SHEAP_OBJ).

2016-07-13  Katsumi Yamaoka  <yamaoka@jpl.org>

	* lisp/gnus/mm-decode.el (mm-convert-shr-links):
	Use shr-image-map instead of shr-map (bug#23964).

2016-07-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/mouse.el (mouse): Consolidate group definition here

	* lisp/cus-edit.el (mouse): Remove both group definitions.

2016-07-13  Chris Feng  <chris.w.feng@gmail.com>

	Include versioned preloaded libraries in `package--builtin-versions'

	* lisp/emacs-lisp/autoload.el (update-directory-autoloads): Do not
	exclude preloaded libraries or remove entries generated for them.
	(autoload-generate-file-autoloads): Do not generate autoload
	statements for preloaded libraries.

2016-07-13  Paul Eggert  <eggert@cs.ucla.edu>

	Omit unnecessary #includes from xwidget.c

	* src/xwidget.c: Remove #include directives that are not needed.
	Also, don’t conditionalize #includes on HAVE_X_WINDOWS, since this
	file is compiled only if the X interface is available.

2016-07-13  Paul Eggert  <eggert@cs.ucla.edu>

	Port xwidget.c to GCC 6 with --enable-gcc-warnings

	* src/xwidget.c (x_draw_xwidget_glyph_string, xwidget_end_redisplay):
	Adjust to pacify GCC.  Add a couple of FIXME comments, suggesting
	possible bugs found by GCC.

2016-07-12  Tino Calancha  <tino.calancha@gmail.com>

	Escape meta chars in commands processed by shell

	* lisp/progmodes/grep.el (grep-compute-defaults): Quote braces
	in all commands to be passed to a shell (Bug#23959).

2016-07-12  John Wiegley  <johnw@newartisans.com>

	Revert "Cleanup tooltips"

	This reverts commit 20038f8ab75dd1551412a43cd58520c483c22921.

	I am reverting this change because it was applied without prior discussion
	on emacs-devel, and has been found to break the NS port.  It needs more
	testing and review before it should be applied here.

2016-07-12  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-macs.el (cl--prog): New function

	(cl-prog, cl-prog*): New macros.

2016-07-12  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-generic.el (cl-defmethod): Make docstring dynamic

	* lisp/emacs-lisp/cl-generic.el (cl-defmethod): Make docstring dynamic.
	(cl--generic-make-defmethod-docstring): New function for that.
	(cl-defmethod, cl-generic-generalizers): Tweak docstrings accordingly.
	(cl-generic-define-method, cl--generic-describe): Change `load-history'
	format of cl-defmethods, so as not to confused methods with equal
	specializers but different qualifiers.
	* lisp/emacs-lisp/eieio-core.el (cl-generic-generalizers): Provide docstrings.

2016-07-12  Eli Zaretskii  <eliz@gnu.org>

	Don't install keyboard hook when debugged on MS-Windows

	* src/w32fns.c (setup_w32_kbdhook): Don't install the keyboard
	hook if we are being debugged.  This avoids hosing the debugger,
	because the hook is global, and is called in the context of the
	thread which installed it, and that thread is stopped when GDB has
	control.  Reported by Fabrice Popineau <fabrice.popineau@gmail.com>.

2016-07-12  Alan Mackenzie  <acm@muc.de>

	Amend CC Mode to handle big C++ raw strings correctly.

	Problems were caused by such a string spanning jit-lock chunks, and by a flaw
	in the +-500 bytes boundaries imposed for macros.

	* lisp/progmodes/cc-mode.el (c-extend-region-for-CPP): Check the +-500 byte
	macro boundaries here.
	(c-extend-font-lock-region-for-macros): Remove the check on the +-500 byte
	lower boundary.  Fix the check on the upper boundary.

	* lisp/progmodes/cc-fonts.el (c-font-lock-raw-strings): Handle the starting
	point already being within a raw string.

	* lisp/progmodes/cc-engine.el (c-raw-string-pos)
	(c-depropertize-raw-strings-in-region, c-after-change-re-mark-raw-strings):
	Modify regexp element "\\{,16\\}" to "\\{0,16\\}" for greater compatibility
	with other Emacsen.

2016-07-12  Stephen Berman  <stephen.berman@gmx.net>

	* lisp/mouse.el (mouse-select-region-move-to-beginning): Add :group.

2016-07-11  Dmitry Antipov  <dmantipov@yandex.ru>

	Cleanup tooltips

	* src/dispextern.h (toplevel): Remove 'tip_frame' and 'tip_window' decls.
	* src/frame.h (struct frame): New bitfield to indicate tooltip frame.
	(FRAME_TOOLTIP_P): New macro.
	* src/frame.c (make_frame): Mark new frame as regular frame by default.
	(Fframe_list, delete_frame): Redesign to use FRAME_TOOLTIP_P.
	(syms_of_frame): Don't DEFSYM 'Qtooltip' but use 'Qtooltip_timer'
	and 'Qtooltip_parameters' instead.
	* src/gtkutil.h (toplevel): Add 'xg_hide_tip' decl.
	* src/gtkutil.c (xg_hide_tip): New function.
	(xg_hide_tooltip): Adjust to cancel GTK event loop timeout if needed.
	* src/menu.c (Fx_popup_menu): Adjust call to Fx_hide_tip.
	* src/nsfns.m (toplevel): Remove 'tip_frame' leftover.
	* src/w32fns.c (unwind_create_tip_frame): Remove.
	(w32_display_monitor_attributes_list)
	(w32_display_monitor_attributes_list_fallback): Use FRAME_TOOLTIP_P.
	(toplevel): Remove 'tip_frame', 'tip_window' and 'last_show_tip_args'.
	(x_create_tip_frame): Use do_unwind_create_frame.  Mark new frame
	as a tooltip frame and record it using appropriate display info.
	(x_hide_tooltip): Add frame arg.
	(Fx_show_tip): Adjust to avoid globals, store tooltip parameters among
	base frame parameters, store tooltip hide timer among tooltip frame
	parameters.
	(Fx_hide_tip): Add frame arg, hide tooltips on all displays by default.
	(syms_of_w32fns): Don't DEFSYM 'Qtip_frame', don't initialize
	and GC-protect 'tip_timer', 'tip_frame' and 'last_show_tip_args'.
	* src/w32term.c (w32_read_socket): Extract tooltip window id from
	per-display data.  Use FRAME_TOOLTIP_P where appropriate.
	(x_new_font): Use FRAME_TOOLTIP_P.
	(x_free_frame_resources): Reset pointer to tooltip frame.
	* src/w32term.h (struct w32_display_info): New member 'w32_tooltip_frame'.
	* src/xdisp.c (init_iterator, x_consider_frame_title, prepare_menu_bars):
	Use FRAME_TOOLTIP_P.
	* src/xfns.c (x_make_monitor_attribute_list)
	(Fx_display_monitor_attributes_list): Likewise.
	(unwind_create_tip_frame): Remove.
	(toplevel): Remove 'tip_frame', 'tip_window' and 'last_show_tip_args'.
	(x_create_tip_frame): Use do_unwind_create_frame.  Mark new frame
	as a tooltip frame and record it using appropriate display info.
	(x_hide_tooltip): Add frame arg.
	(Fx_show_tip): Adjust to avoid globals, store tooltip parameters among
	base frame parameters, store tooltip hide timer among tooltip frame
	parameters.  To hide GTK system tooltip, use timeout hooked into GTK
	event loop.
	(Fx_hide_tip): Add frame arg, hide tooltips on all displays by default.
	(syms_of_xfns): Don't DEFSYM 'Qtip_frame', don't initialize
	and GC-protect 'tip_timer', 'tip_frame' and 'last_show_tip_args'.
	* src/xterm.c (handle_one_xevent): Extract tooltip window id from
	per-display data.  Use FRAME_TOOLTIP_P where appropriate.
	(x_new_font, x_set_window_size): Use FRAME_TOOLTIP_P.
	(x_free_frame_resources): Reset pointer to tooltip frame.
	* src/xterm.h (struct x_display_info): New member 'x_tooltip_frame'.
	(struct x_output) [USE_GTK_TOOLTIP]: New member 'ttip_timeout'.

2016-07-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	* src/fns.c (syms_of_fns): Leave `features' lexically scoped

2016-07-11  Mario Lang  <mlang@delysid.org>

	Test mapcan

	* test/src/fns-tests.el (fns-tests-mapcan): New test.

2016-07-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	Prevent to apply funcall on t

	* lisp/vc/ediff-util.el (ediff-really-quit): Ignore the global part of
	'ediff-after-quit-hook-internal' hook (Bug#23933).

2016-07-11  Tino Calancha  <tino.calancha@gmail.com>

	Ignore angle mode while simplifying units

	* lisp/calc/calc-forms.el (math-to-hms, math-from-hms):
	Ignore value of 'calc-angle-mode' when 'math-simplifying-units'
	is non-nil (Bug#23889).
	* lisp/calc/calc-math.el (math-to-radians, math-from-radians)
	(math-from-radians-2, math-to-radians-2): Idem.

2016-07-11  Eli Zaretskii  <eliz@gnu.org>

	Fix display of composed characters

	* src/xdisp.c (x_produce_glyphs): Fix off-by-one error in
	iteration through composition glyphs.  (Bug#23938)

2016-07-11  Paul Eggert  <eggert@cs.ucla.edu>

	Fix composition bug caused by off-by-1 typo

	* src/xdisp.c (x_produce_glyphs): Fix off-by-one typo when
	computing composition glyph (Bug#23938).

2016-07-10  Tino Calancha  <tino.calancha@gmail.com>

	Dired always read file system

	* lisp/dired.el (dired-always-read-filesystem): Add new option.
	(dired-mark-files-containing-regexp): Use it (Bug#22694).
	* doc/emacs/dired.texi: Mention it in the manual.
	* test/lisp/dired-tests.el (dired-test-bug22694): Add test.
	;* etc/NEWS: Add entry for this change.

2016-07-10  YAMAMOTO Mitsuharu  <mituharu@math.s.chiba-u.ac.jp>

	* src/macfont.m (mac_font_shape): Make sure that total_advance is increasing.

2016-07-10  Tino Calancha  <tino.calancha@gmail.com>

	Avoid 'unused var' 'not left unused var' warnings

	* lisp/ibuffer.el (ibuffer-locked-buffer-p): Remove unused var 'char'.
	Rename used var '_buffer' to 'cbuffer'.

	* lisp/ibuf-ext.el (ibuffer-unmark-all): Rename used var '_mark'
	to cmark'.

2016-07-10  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/simple.el (shell-command, shell-command-on-region): Fix doc strings

2016-07-10  Michael Albinus  <michael.albinus@gmx.de>

	Add a note how to use `tramp-own-remote-path'

	* doc/misc/tramp.texi (Inline methods, External methods)
	(Remote shell setup, Android shell setup)
	(Frequently Asked Questions, Frequently Asked Questions):
	Use @command and @samp consequently.
	(Remote programs): The remote shell must support the -l
	argument, in order to use `tramp-own-remote-path'.  (Bug#23914)

2016-07-10  Alan Third  <alan@idiocy.org>

	Remove App Nap setting from Info.plist (bug#22993)

	* nextstep/templates/Info.plist.in: Remove LSAppNapIsDisabled key since
	it doesn't actually disable app nap.

2016-07-09  Mario Lang  <mlang@delysid.org>

	An efficient built-in mapcan

	A built-in version of `mapcan' avoids consing up (and GC'ing) the
	intermediate list.

	* src/fns.c (Fmapcan): New built-in.
	(syms_of_fns): Define.

	* lisp/emacs-lisp/cl.el (mapcan): Remove defalias.

	* lisp/emacs-lisp/cl-extra.el (cl-mapcan): Use built-in `mapcan'
	if only one sequence is provided.

	* lisp/progmodes/hideif.el (hif-delimit):
	* lisp/dired-aux.el (dired-do-find-regexp):
	* lisp/woman.el (woman-parse-colon-path): Use `mapcan' instead of
	`cl-mapcan'.

	* lisp/woman.el (eval-when-compile): Require 'cl-lib only when
	compiling.

	* lisp/mouse.el (mouse-buffer-menu-map):
	* lisp/net/pop3.el (pop3-uidl-dele):
	* lisp/progmodes/gud.el (gud-jdb-build-source-files-list):
	* lisp/cedet/semantic/db-find.el (semanticdb-fast-strip-find-results):
	* lisp/cedet/semantic/symref/grep.el (semantic-symref-derive-find-filepatterns):
	* lisp/gnus/nnmail.el (nnmail-split-it):
	* lisp/gnus/gnus-sum.el (gnus-articles-in-thread):
	* lisp/gnus/gnus-registry.el (gnus-registry-sort-addresses):
	* lisp/gnus/gnus-util.el (gnus-mapcar): Use `mapcan'.

2016-07-09  Tino Calancha  <tino.calancha@gmail.com>

	Detect aliases to built-in functions

	* lisp/help-fns.el (describe-function-1): Check for aliases
	defined with (defalias alias (symbol-function built-in)) (Bug#23887).

	* test/lisp/help-fns-tests.el (help-fns-test-bug23887): Untag as
	failing this test.

2016-07-09  Michael Albinus  <michael.albinus@gmx.de>

	Avoid recursive detection of remote uid and gid in tramp-gvfs.el

	* lisp/net/tramp-gvfs.el (tramp-gvfs-get-remote-uid-gid-in-progress):
	New variable.
	(tramp-gvfs-maybe-open-connection): Use it.

	* test/lisp/net/tramp-tests.el (tramp-test18-file-attributes):
	Reorder test.

2016-07-09  Jürgen Hötzel  <juergen@archlinux.org>

	Wrap around error in coreutil's ls

	* lisp/net/tramp-sh.el (tramp-sh-handle-insert-directory): Add switch
	"--quoting-style=literal" if remote host supports quoting style.
	Recent versions of coreutils changed default quoting style to
	"--quoting=shell-escape".

2016-07-09  Eli Zaretskii  <eliz@gnu.org>

	Minor tweaks of copying text properties when padding strings

	* src/editfns.c (styled_format): Don't include padding on the left
	in the properties at the beginning of the string.  (Bug#23897)

	* test/src/editfns-tests.el (format-properties): Add tests for
	faces when the string is padded on the left or on the right.

2016-07-08  Mario Lang  <mlang@delysid.org>

	No need to require the same feature twice.

	* lisp/dired-aux.el (require 'cl-lib): Remove.

2016-07-08  Mark Oteiza  <mvoteiza@udel.edu>

	Turn on lexical binding

	* lisp/net/secrets.el (secrets-collection-handler): Use cl-pushnew.
	(secrets-search-items, secrets-create-item): Use append.
	(secrets-show-secrets): Remove unused binding.
	(secrets-expand-item, secrets-tree-widget-after-toggle-function):
	Ignore unused arguments.

2016-07-08  Mark Oteiza  <mvoteiza@udel.edu>

	Derive secrets-mode from special-mode

	* lisp/net/secrets.el: Remove top-level secrets-mode hack.
	(secrets-mode-map): New variable.  Add key bindings to n and p for
	navigating lines.
	(secrets-mode): Derive from special-mode.  Remove keymap code and
	initialization code.  Do not record undo information.  Make
	secrets-show-collections the local revert-buffer-function.
	(secrets-show-collections): Change signature to satisfy revert-buffer.

2016-07-08  Mark Oteiza  <mvoteiza@udel.edu>

	Add a couple cells to lisp-prettify-symbols-alist

	* lisp/emacs-lisp/lisp-mode.el (lisp-prettify-symbols-alist): Add
	"sqrt" and "not".

2016-07-08  Michael Albinus  <michael.albinus@gmx.de>

	Detect remote uid and gid in tramp-gvfs.el

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-expand-file-name)
	(tramp-gvfs-handler-mounted-unmounted)
	(tramp-gvfs-connection-mounted-p):
	Make "default-location" a connection property.
	(tramp-gvfs-get-remote-uid, tramp-gvfs-get-remote-gid): New defuns.
	(tramp-gvfs-maybe-open-connection): Use them.

2016-07-08  Eli Zaretskii  <eliz@gnu.org>

	Yet another fix for copying properties by 'format'

	* src/textprop.c (extend_property_ranges): Accept an additional
	argument OLD_END, and only extend the end of a property range if
	its original end is at OLD_END; all the other ranges are left
	intact.  (Bug#23897)
	* src/editfns.c (styled_format): Pass the original length of the
	string to 'extend_property_ranges'.
	* src/intervals.h (extend_property_ranges): Adjust prototype.

	* test/src/editfns-tests.el (format-properties): Add tests for
	bug#23897.

2016-07-08  Stephen Berman  <stephen.berman@gmx.net>

	Allow selecting region with mouse to move point to beginning

	* etc/NEWS: Mention new user option
	`mouse-select-region-move-to-beginning'.

	* doc/emacs/frames.texi (Mouse Commands): Add cross-reference
	to the following.
	(Word and Line Mouse): Describe how double-clicking mouse-1 to
	activate region and `mouse-select-region-move-to-beginning'
	affect point.

	* lisp/mouse.el (mouse-select-region-move-to-beginning): New defcustom.
	(mouse-set-point): Use it.  (Bug#23478)

2016-07-08  Stephen Berman  <stephen.berman@gmx.net>

	Fix menu bar breakage

	* lisp/menu-bar.el (menu-bar-showhide-scroll-bar-menu): Use backquoting
	to prevent void variable errors, and fix typo (bug#23918).

2016-07-08  Tino Calancha  <tino.calancha@gmail.com>

	Copy buffer names to kill ring

	* lisp/ibuf-ext.el (ibuffer-copy-buffername-as-kill): New command.
	* lisp/ibuffer.el (ibuffer-mode-map): Bound it to 'B'.
	;* etc/NEWS: Add entry for this new feature.

2016-07-07  Tino Calancha  <tino.calancha@gmail.com>

	Remove just input mark

	* lisp/ibuffer.el (ibuffer-unmark-all): When MARK is not ?\r remove
	just MARK.

2016-07-07  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer change marks

	* lisp/ibuffer.el (ibuffer-change-marks): New command.
	(ibuffer-mode-map): Bind it to '* c'.
	(ibuffer-mode-groups-popup): Update menus.
	(ibuffer-mode): Update mode doc.

2016-07-07  Alan Third  <alan@idiocy.org>

	Prevent NS event loop being re-entered (bug#11049)

	* src/nsterm.m (ns_read_socket, ns_select): Return -1 if already
	in event loop instead of aborting.

2016-07-07  Alan Third  <alan@idiocy.org>

	Fix some deprecated functions

	* src/nsterm.m (firstRectForCharacterRange): In OS X >10.6 replace
	convertBaseToScreen with convertRectToScreen.
	* src/nsmenu.m (ns_update_menubar): Remove attachedMenu, deprecated in
	OS X 10.2, and always seems to return nil.

2016-07-07  Aaron Jensen  <aaronjensen@gmail.com>  (tiny change)

	Disable App Nap (bug#22993)

	* nextstep/templates/Info.plist.in: Insert AppNap disable code.

2016-07-07  Michael Albinus  <michael.albinus@gmx.de>

	Fix an error in Tramp for rsync

	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file-out-of-band):
	Make it work for "rsync".
	(tramp-make-copy-program-file-name): Apply `directory-file-name'.

2016-07-07  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Mark locked buffers

	* lisp/ibuf-ext.el (ibuffer-locked-buffer-p): New defun.
	(ibuffer-mark-by-locked): New command.
	(ibuffer-mode-map): Bind it to '% L'; update menus.
	(ibuffer-mode): Update mode doc.
	;* etc/NEWS: Add NEWS entry for these changes and previous two commits.

2016-07-07  Tino Calancha  <tino.calancha@gmail.com>

	* lisp/ibuffer.el: Add face for locked buffers

	* lisp/ibuffer.el: Add mark for locked buffers

	;* etc/NEWS (Ibuffer): Update entry according with last commit

2016-07-07  Tino Calancha  <tino.calancha@gmail.com>

	Remove duplicate binding

	* lisp/ibuffer.el (ibuffer-mode-map): 'ibuffer-mark-by-content-regexp'
	just bound to '% g'.
	As suggested in:
	https://lists.gnu.org/r/emacs-devel/2016-07/msg00165.html

2016-07-07  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Drop needless binding

	* lisp/ibuffer.el (ibuffer-mark-interactive): 'inhibit-read-only'
	already bound to 't' inside 'ibuffer-set-mark'.

2016-07-07  Phillip Lord  <phillip.lord@russet.org.uk>

	Run tests from non-byte compiled files

	* test/Makefile.in: Eval non-byte-compiled files for tests.

2016-07-06  Mark Oteiza  <mvoteiza@udel.edu>

	Replace eldoc-documentation-function with a hook

	* lisp/emacs-lisp/eldoc.el (eldoc-documentation-functions): New hook.
	(eldoc-documentation-function): Make into obsolete alias.
	(eldoc-echo-area-use-multiline-p, eldoc-highlight-function-argument):
	(eldoc-argument-case, global-eldoc-mode): Update docstrings.
	(eldoc-print-current-symbol-info): Use run-hook-with-args-until-success
	on eldoc-documentation-functions.
	(eldoc-supported-p): New function.
	(eldoc-mode, global-eldoc-mode, eldoc-schedule-timer): Use eldoc-supported-p.
	* etc/NEWS: Mention eldoc-documentation-functions.
	* doc/lispref/modes.texi: Update reference.

2016-07-06  Simen Heggestøyl  <simenheg@gmail.com>

	Complete "initial" and "unset" in CSS mode

	* lisp/textmodes/css-mode.el (css--complete-property-value): Make
	"initial" and "unset" completion candidates for all CSS properties,
	just like "inherit".

	* test/lisp/textmodes/css-mode-tests.el
	(css-test-complete-property-value): Update test to reflect the above
	change.

2016-07-06  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/net/tramp-gvfs.el (tramp-gvfs-mount-spec): Fix typo.

2016-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify rfc1345.el a bit

	* lisp/leim/quail/rfc1345.el: Omit commented-out codes for ASCII
	that would no longer parse.  Replace control characters with
	escapes in character constants.  Omit unnecessary \ after ?.
	This does not change behavior.

2016-07-05  Dmitry Antipov  <dmantipov@yandex.ru>

	Prefer 'frame-parameter' where it is expected to be a bit faster

	* lisp/international/mule-diag.el (mule-diag):
	* lisp/menu-bar.el (menu-bar-showhide-scroll-bar-menu):
	* lisp/mouse.el (mouse-drag-line, font-menu-add-default):
	* lisp/scroll-bar.el (toggle-scroll-bar, toggle-horizontal-scroll-bar):
	* lisp/faces.el (x-resolve-font-name): Use 'frame-parameter'.

2016-07-05  Dmitry Antipov  <dmantipov@yandex.ru>

	Reduce consing caused by vertical motion commands

	* src/frame.c (Fframe_parameter): Avoid call to Fframe_parameters for the
	parameters frequently requested by calls to 'next-line' and 'previous-line'.

2016-07-05  Michael Albinus  <michael.albinus@gmx.de>

	Make all Tramp tests pass for "gdrive" method

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-delete-directory)
	* lisp/net/tramp-compat.el (tramp-compat-copy-directory)
	(tramp-compat-delete-directory):
	* lisp/net/tramp-smb.el (tramp-smb-handle-delete-directory):
	Use `directory-files-no-dot-files-regexp'.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-handler-mounted-unmounted)
	(tramp-gvfs-send-command): Call `tramp-flush-file-property' in
	case of problems.

	* test/lisp/net/tramp-tests.el (tramp--instrument-test-case):
	Adapt docstring.
	(tramp-test14-delete-directory): Make further tests.

2016-07-05  Eli Zaretskii  <eliz@gnu.org>

	Fix redisplay with window-start on continuation lines

	* src/xdisp.c (pos_visible_p): Return false if the window starts
	after CHARPOS.
	(compute_window_start_on_continuation_line): Don't return
	window-start position that is after point in the buffer, as the
	callers don't expect this to happen, and will generally display an
	empty window with the cursor in its middle.  (Bug#23871)

2016-07-05  Tino Calancha  <tino.calancha@gmail.com>

	Add :expected-result :failed for unfixed bug test

	* test/lisp/help-fns-tests.el (help-fns-test-bug23887):

2016-07-05  Tino Calancha  <tino.calancha@gmail.com>

	* test/lisp/help-fns-tests.el: Add several tests for 'describe-function'.

2016-07-04  Michal Nazarewicz  <mina86@mina86.com>

	Don’t create unnecessary marker in ‘delete-trailing-whitespace’

	* lisp/simple.el (delete-trailing-whitespace): If END argument is nil,
	there is no need for the end-marker to be created.

2016-07-04  Michal Nazarewicz  <mina86@mina86.com>

	Simplify ‘delete-trailing-whitespace’ by not treating \n as whitespace

	* lisp/simple.el (delete-trailing-whitespace): Set newline’s character
	syntax to non-whitespace so that ‘\s-’ regular expression does not match
	it.

	This simplifies the loop slightly since a simple ‘\s-+$’ can be used and
	as a consequence ‘line-beginning-position’ function does not need to be
	called any longer.

	Furthermore, when newline has whitespace syntax, ‘\s-$’ regular
	expression ends up matching empty lins since ‘\s-’ matches newline
	characetr of proceeding line.  This leads to needless loop iterations.

	Since previous change to ‘delete-trailing-whitespace’ already introduced
	‘with-syntax-table’, take advantage of it and also overwrite newline’s
	character syntax.

2016-07-04  Michal Nazarewicz  <mina86@mina86.com>

	Make ‘delete-trailing-whitespace’ delete spaces after form feed

	* lisp/simple.el (delete-trailing-whitespace): Treat form fead as
	a non-whitespace character (regradless of whether it’s character syntax
	is whitespace) and delete any whitespace following it instead of leaving
	lines with form feeds completely unchanged.  I.e. a line like "\f " will
	now became "\f".

2016-07-04  Dmitry Antipov  <dmantipov@yandex.ru>

	Cleanup XEditRes hack

	* configure.ac [USE_X_TOOLKIT]: Define X_TOOLKIT_EDITRES if
	_XEditResCheckMessages is declared in X11/Xmu/Editres.h and may be
	linked with -lXmu.  This should work with any non-ancient Xmu library.
	* src/xfns.c (toplevel): Remove old cruft.
	(x_window) [USE_X_TOOLKIT]: Use X_TOOLKIT_EDITRES.
	* src/xterm.c (toplevel): Remove old cruft.
	(handle_one_xevent): Use X_TOOLKIT_EDITRES.
	* src/xterm.h (toplevel): Include X11/Xmu/Editres.h if X_TOOLKIT_EDITRES.

2016-07-04  Michael Albinus  <michael.albinus@gmx.de>

	Add Google Drive support to Tramp

	* doc/misc/tramp.texi: Add `gdrive' method.

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.1-pre".

	* etc/NEWS: Add Tramp connection method "gdrive".

	* lisp/net/tramp-gvfs.el (tramp-gvfs-methods) <gdrive>: Add.
	(tramp-default-user-alist, tramp-default-host-alist): Add rule
	for "gdrive".
	(tramp-gvfs-file-attributes): Add "name", remove "standard::icon".
	(tramp-gvfs-file-attributes-with-gvfs-ls-regexp): Simplify regexp.
	(tramp-gvfs-get-directory-attributes): Improve loop.  Use
	"standard::display-name" as file name, if available.
	(tramp-gvfs-handle-file-name-all-completions): Simplify.
	(tramp-gvfs-url-file-name, tramp-gvfs-handler-mounted-unmounted)
	(tramp-gvfs-connection-mounted-p, tramp-gvfs-mount-spec):
	Map between "gdrive" and "google-drive".

	* lisp/net/tramp.el (tramp-call-process): Do not signal error.

	* test/lisp/net/tramp-tests.el (tramp--instrument-test-case):
	Do not enable `tramp-message-show-message'.
	(tramp-test13-make-directory, tramp-test14-delete-directory):
	Do not specify error type.

2016-07-04  Tino Calancha  <tino.calancha@gmail.com>

	Calc: Update mode line after change mode

	* lisp/calc/calc-ext.el (calc-change-mode): Call 'calc-set-mode-line'.

2016-07-03  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/simple.el (save-mark-and-excursion): Add declare forms.

2016-07-03  Paul Eggert  <eggert@cs.ucla.edu>

	Re-fix open-network-stream responsiveness

	Problem reported by Christer Ekholm (Bug#23864).
	* src/process.c (wait_reading_process_output): Further fix for
	typo introduced in 2015-07-06T02:19:13Z!eggert@cs.ucla.edu when
	wait == INFINITY and got_output_end_time is invalid.  See:
	https://bugs.gnu.org/23864#20

2016-07-03  Alan Mackenzie  <acm@muc.de>

	Remove redundant forms from CC Mode for faster fontification

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Remove four arms of
	the "main" cond form in the function, which have been redundant since the
	extraction of c-font-lock-cut-off-declarators from the function on
	2016-06-15/16.

2016-07-03  Alan Mackenzie  <acm@muc.de>

	Speed up CC Mode fontification with less accurate functions extending region

	* lisp/progmodes/cc-fonts.el (c-font-lock-cut-off-declarators)
	(c-font-lock-enclosing-decls)
	* lisp/progmodes/cc-mode.el (c-fl-decl-start): Replace invocations of
	c-beginning-of-decl-1 with less accurate invocations of
	c-syntactic-skip-backwards to speed up fontification.

2016-07-03  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: unmark all buffers without confirmation

	* lisp/ibuffer.el (ibuffer-unmark-all-marks): New command (Bug#23680).
	(ibuffer-mouse-popup-menu): Use it.
	(ibuffer-mode): Update mode doc.
	(ibuffer-mode-map): Bind 'ibuffer-unmark-all-marks' to 'U'.
	Rebind 'ibuffer-do-replace-regexp' to 'r'.

2016-07-03  Paul Eggert  <eggert@cs.ucla.edu>

	Fix open-network-stream responsiveness

	Problem reported by Constantin Kulikov (Bug#23684).
	* src/process.c (wait_reading_process_output):
	Fix typo introduced in 2015-07-06T02:19:13Z!eggert@cs.ucla.edu
	when wait == INFINITY and got_output_end_time is invalid.
	In this case the code should break, not continue.

2016-07-02  Tino Calancha  <tino.calancha@gmail.com>

	Ibuffer: Mark buffers by content

	* lisp/ibuf-ext.el (ibuffer-mark-by-content-regexp): New command.
	(ibuffer-never-search-content-name): New option.
	(ibuffer-never-search-content-mode): Idem.
	(ibuffer-mark-by-content-regexp): Use them (Bug#23734).

	* lisp/ibuffer.el (ibuffer-mode-map): Bind new command to '% c' and '% g'.
	(ibuffer-mode): Update mode documentation.

2016-07-02  Tino Calancha  <tino.calancha@gmail.com>

	ibuffer-copy-filename-as-kill verbosity increase

	* lisp/ibuf-ext.el (ibuffer-copy-filename-as-kill):
	Use shorter name, result, for a local bound var.
	Show the string result in the echo area.

2016-07-02  Eli Zaretskii  <eliz@gnu.org>

	Fix cursor positioning on TTY frames after stretch glyph

	* src/term.c (append_glyph, append_composite_glyph)
	(append_glyphless_glyph): Set the avoid_cursor_p and multibyte_p
	members of the produced 'struct glyph'.  Fixes cursor positioning
	on the first character after a stretch glyph produced from
	line-prefix, wrap-prefix, etc. on TTY frames.

2016-07-02  Eli Zaretskii  <eliz@gnu.org>

	Fix vertical-movement in buffers with wrap-prefix

	* src/indent.c (Fvertical_motion): Zero the current_y coordinate
	whenever we zero the vpos vertical position of the iterator.
	* src/xdisp.c (move_it_in_display_line_to): Handle line-prefix and
	wrap-prefix regardless of whether the current Y coordinate is
	inside the window dimensions.  (Bug#23879)

2016-07-02  Eli Zaretskii  <eliz@gnu.org>

	Rename FACE_OPT_FROM_ID to FACE_FROM_ID_OR_NULL

	* src/dispextern.h (FACE_FROM_ID_OR_NULL): Renamed from
	FACE_OPT_FROM_ID; all callers changed.
	* src/xdisp.c (extend_face_to_end_of_line): Call FACE_FROM_ID, not
	FACE_FROM_ID_OR_NULL, as the resulting face is immediately
	dereferenced.
	(fill_gstring_glyph_string): Call FACE_FROM_ID, not
	FACE_FROM_ID_OR_NULL, as the resulting face will be dereferenced
	when the glyph string is drawn.
	(BUILD_COMPOSITE_GLYPH_STRING): Call FACE_FROM_ID, not
	FACE_FROM_ID_OR_NULL, as the resulting face will be dereferenced
	in fill_composite_glyph_string.
	(calc_line_height_property): Call FACE_FROM_ID_OR_NULL rather that
	FACE_FROM_ID, since the function and its caller can cope with that
	situation.  Conflate 3 tests of missing face or font into just
	one.
	* src/xfaces.c (Fx_list_fonts, Fface_font, lookup_face): Call
	FACE_FROM_ID_OR_NULL rather that FACE_FROM_ID, since these
	functions can cope with that situation.
	(lookup_derived_face): Don't call FACE_FROM_ID if the result will
	not be used.
	* src/w32console.c (w32_face_attributes): Remove redundant 'eassert'.

2016-07-01  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/gnus/gnus-art.el (gnus-article-send-map): Remove extra quote.

2016-07-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/auth-source.el (auth-source--symbol-keyword): Fix namespace

	i.e. rename from auto-source--symbol-keyword.

2016-07-01  Dmitry Antipov  <dmantipov@yandex.ru>

	Avoid yet another possible NULL pointer dereference found by GCC 6.1.1

	* lwlib/lwlib.c (lw_get_all_values): Always check the value returned by
	get_widget_info.

2016-06-30  Alan Mackenzie  <acm@muc.de>

	CC Mode: truncate the semi-nonlit cache when applying syntax-table to a quote

	This applies to applying or removing syntax-table text properties in raw
	strings which affect the stringiness of a piece of text.  This fixes the
	bug
	reported in
	https://lists.gnu.org/r/emacs-devel/2016-06/msg00695.html.

	* lisp/progmodes/cc-engine.el (c-truncate-semi-nonlit-pos-cache): new
	defsubst.
	(c-invalidate-state-cache-1): Call new function in place of inline
	manipulation.
	(c-depropertize-raw-string, c-propertize-raw-string-opener): truncate the
	semi-nonlit cache when pertinent syntax-table text properties get applied to
	the text.

2016-06-29  Dmitry Antipov  <dmantipov@yandex.ru>

	Minor tweaks to openp

	* src/lread.c (openp): Move invariant code out of the loop
	and thus avoid redundant calls to memcpy.  Adjust comments.

2016-06-29  Dmitry Antipov  <dmantipov@yandex.ru>

	Simplify handling of frame parameters

	* src/frame.c (x_set_frame_parameters): Avoid extra loop processing
	foreground color, background color and font parameters.  Adjust
	comments.

2016-06-29  Dmitry Antipov  <dmantipov@yandex.ru>

	Cleanup around mature character manipulation functions

	* lisp/international/mule-diag.el (decode-codepage-char): Remove.

	* lisp/ldefs-boot.el (toplevel): Adjust accordingly.

	* lisp/subr.el (toplevel): Do not advertise calling conventions
	for 'decode-char' and 'encode-char'.

	* src/charset.c (Fdecode_char, Fencode_char): Remove unused 3rd arg.

2016-06-29  Alan Mackenzie  <acm@muc.de>

	Fix C-M-a in a C function finding the start of a macro preceding it.

	Also amend some pertinent documentation.  This fixes bug #23818.

	* lisp/progmodes/cc-engine.el (c-beginning-of-decl-1): Also check for a
	virtual semicolon at a place where we check for other types of statement ends.

	* lisp/progmodes/cc-vars.el (c-macro-nacmes-with-semicolon): Remove from the
	doc string the bit saying that the variable is a prototype and liable to
	change.

	* doc/misc/cc-mode.texi (Macros with ;): Enhance, stating that configuring
	macros with semicolon can prevent C-M-a missing the beginning of defun.

2016-06-28  Dmitry Antipov  <dmantipov@yandex.ru>

	Avoid possible NULL pointer dereference found by GCC 6.1.1

	* src/xfns.c (x_get_monitor_attributes_xrandr): Always check
	the value returned by XRRGetOutputInfo.

2016-06-28  Tino Calancha  <tino.calancha@gmail.com>

	Dired recognize dirs when file size in human units

	* lisp/dired.el (dired-re-inode-size): Update 'dired-re-inode-size'
	to match when Dired displays the allocated file size column
	in human readable units (Bug#22255).

2016-06-28  Mark Oteiza  <mvoteiza@udel.edu>

	Fix breakage from previous change

	* lisp/textmodes/tex-mode.el (tex-font-lock-keywords-1):
	* lisp/vc/log-view.el (log-view-font-lock-keywords): Quote face.

2016-06-28  Mark Oteiza  <mvoteiza@udel.edu>

	Fix breakage from previous change.

	* lisp/textmodes/texinfo.el (texinfo-font-lock-keywords): Quote face.

2016-06-28  Eli Zaretskii  <eliz@gnu.org>

	Add tests for copying properties by 'format'

	* test/src/editfns-tests.el (format-properties): New test.

2016-06-28  Eli Zaretskii  <eliz@gnu.org>

	Fix copying properties in 'format' when it produces padding

	* src/textprop.c (extend_property_ranges): Correct range extension
	when the new end is beyond the old end.  (Bug#23859)

2016-06-27  Alan Third  <alan@idiocy.org>

	Enable dividers in NS (bug#22973)

	src/nsfns.m: Add color settings functions to ns_frame_park_handlers.
	src/nsterm.m (ns_draw_window_divider): ns_focus has to go before the
	attempt to set the color.
	src/nsterm.m (ns_draw_vertical_window_border): This had the same bug as
	above, although I didn't see any errors.

2016-06-27  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Fix the prefix action of shr-copy-url

	* lisp/net/shr.el (shr-copy-url): Make the command really copy
	the image url if given a prefix.

2016-06-27  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	New functions svg-text and svg-remove

	* doc/lispref/display.texi (SVG Images): Document svg-remove.

	* doc/lispref/display.texi (SVG Images): Document svg-text.

	* lisp/svg.el (svg-remove): New function.
	(svg-text): New function.

2016-06-27  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Add new function dom-remove-node

	* doc/lispref/text.texi (Document Object Model): Document
	dom-remove-node.

	* lisp/dom.el (dom-remove-node): New function.

2016-06-27  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Add a new function `svg-embed'

	* doc/lispref/display.texi (SVG Images): Document `svg-embed'.

	* lisp/svg.el (svg-embed): New function.
	(svg--image-data): Ditto.

2016-06-27  Eli Zaretskii  <eliz@gnu.org>

	* lisp/descr-text.el (describe-char-unicode-data): Fix copy/paste errors.

2016-06-27  Eli Zaretskii  <eliz@gnu.org>

	Fix 'move-to-window-line' when EOB is on last screen line

	* src/window.c (displayed_window_lines): Fix an off-by-one error
	when the bottom of the last display line is exactly at window's
	last pixel.  Remove kludgey fix for TTY frames that is no longer
	needed.  (Bug#15760)
	(Fmove_to_window_line): Doc fix.

	* doc/lispref/positions.texi (Screen Lines): Clarify and make more
	accurate the documentation of 'move-to-window-line'.

2016-06-27  Alan Mackenzie  <acm@muc.de>

	Amend a cache so that typing into C++ raw strings has no undue delay.

	Also amend the code so that low-level searches to the end of literals are done
	only when these positions get used.

	* lisp/progmodes/cc-engine.el (c-crosses-statement-barrier-p): Use the new
	c-literal-start instead of c-literal-limit.
	(c-state-semi-nonlit-pos-cache): Change the structure of this cache, such that
	it stores details of the literal at a point, rather than merely points outside
	of literals.
	(c-state-semi-pp-to-literal, c-state-full-pp-to-literal)
	(c-cache-to-parse-ps-state, c-parse-ps-state-to-cache, c-ps-state-cache-pos)
	(c-parse-ps-state-below, c-literal-start): New functions.
	(c-state-semi-safe-place): Removed.
	(c-in-literal): Use c-state-semi-pp-to-literal, so as not to scan to its end.
	(c-literal-limits, c-determine-limit-get-base): consequential amendments.
	(c-find-decl-spots, c-before-change-check-<>-operators, c-raw-string-pos)
	(c-guess-basic-syntax (CASE 2)): Avoid needless scans to end of literals.

	* lisp/progmodes/cc-fonts.el (c-font-lock-doc-comments): Avoid needless scans
	to end of literals.

	* lisp/progmodes/cc-mode.el (c-fl-decl-start): Avoid needless scans to end of
	literals.

	* lisp/progmodes/cc-cmds.el (c-beginning-of-defun, c-end-of-defun)
	(c-defun-name, c-declaration-limits): Avoid needless scans to end of literals.

2016-06-26  Dmitry Gutov  <dgutov@yandex.ru>

	Also handle escaping when string begins with a quote

	* lisp/progmodes/ruby-mode.el (ruby-toggle-string-quotes):
	Handle quoting of the first character in the string.

	* test/lisp/progmodes/ruby-mode-tests.el
	(ruby-toggle-string-quotes-quotes-correctly): Update.

2016-06-26  Sriram Thaiyar  <sriram.thaiyar@gmail.com>  (tiny change)

	Fix quote escaping in ruby-toggle-string-quotes

	* lisp/progmodes/ruby-mode.el (ruby-toggle-string-quotes):
	Change logic to quote based on the current quote of the string.

	* test/lisp/progmodes/ruby-mode-tests.el
	(ruby-toggle-string-quotes-quotes-correctly): Add test.

2016-06-26  Noam Postavsky  <npostavs@gmail.com>

	Fix test-completion with completion-regexp-list

	* src/minibuf.c (Ftest_completion): Handle alist COLLECTION with non-nil
	completion-regexp-list (Bug #23533).

2016-06-26  Paul Eggert  <eggert@cs.ucla.edu>

	Try other addresses when connecting to multihomed

	Problem reported by Juliusz Chroboczek (Bug#17976)
	and by Artur Malabarba (Bug#23620).
	Patch from a suggestion by Andreas Schwab in:
	https://bugs.gnu.org/17976#39
	This patch is for non-MS-Windows platforms.
	I don't know the situation on MS-Windows.
	* src/process.c (connecting_status):
	New function, for (connect . ADDRINFOS).
	(connect_network_socket, check_for_dns, wait_for_socket_fds)
	(wait_while_connecting, wait_reading_process_output, status_notify):
	Use it.
	(decode_status, Fmake_network_process):
	Support (connect . ADDRINFOS) status.
	(connect_network_socket) [!WINDOWSNT]:
	If the connection failed and there are other addresses to try, do not
	signal an error; instead, loop around to try the next address.
	(wait_reading_process_output): Advance to the next address
	if there are multiple addresses and the first remaining address
	failed.
	* src/process.h (struct Lisp_Process.status): Adjust comment
	to describe (connect . ADDRINFOS).

2016-06-26  Paul Eggert  <eggert@cs.ucla.edu>

	Fix GNUC_PREREQ for GCC 2.8.1 etc.

	Problem reported by Eli Zaretskii in:
	https://lists.gnu.org/r/emacs-devel/2016-06/msg00608.html
	* src/conf_post.h (GNUC_PREREQ): Port to GCC versions like GCC
	2.8.1 (1998), which come before GCC 3.0 and which have nonzero
	patchlevel numbers.

2016-06-26  Eli Zaretskii  <eliz@gnu.org>

	Don't set 'bidi-paragraph-direction' in 'ansi-term'

	* lisp/term.el (ansi-term): Remove unnecessary setting of
	'bidi-paragraph-direction'.  The underlying problem is solved in
	bidi.c by changing the regexps that define the paragraph beginning
	and end.  (Bug#20611)

2016-06-26  Michael Albinus  <michael.albinus@gmx.de>

	Sync with Tramp 2.3.0

	* doc/misc/trampver.texi:
	* lisp/net/trampver.el: Change version to "2.3.0".

2016-06-26  Paul Eggert  <eggert@cs.ucla.edu>

	Fix GNUC_PREREQ off-by-1 typo

	Problem reported by Martin Rudalics in:
	https://lists.gnu.org/r/emacs-devel/2016-06/msg00587.html
	* src/conf_post.h (GNUC_PREREQ) [__GNUC_PATCHLEVEL__]:
	Fix < vs <= typo.

2016-06-26  Michael Albinus  <michael.albinus@gmx.de>

	Fix some oddities in Tramp's rsync and smb methods

	* lisp/net/tramp-sh.el (tramp-methods) <rsync>: Add "-p" and
	"-s" arguments.
	(tramp-do-copy-or-rename-file-out-of-band):
	Call `file-name-directory' also for remote NEWNAME.

	* test/lisp/net/tramp-tests.el (tramp-test15-copy-directory):
	Do not skip for tramp-smb.el.  Test als COPY-CONTENTS case.
	(tramp-test24-file-name-completion): Improve check for
	hostname completion.
	(tramp--test-rsync-p): New defun.
	(tramp-test31-special-characters)
	(tramp-test31-special-characters-with-stat)
	(tramp-test31-special-characters-with-perl)
	(tramp-test31-special-characters-with-ls, tramp-test32-utf8)
	(tramp-test32-utf8-with-stat, tramp-test32-utf8-with-perl)
	(tramp-test32-utf8-with-ls): Skip for "rsync".

	* lisp/net/tramp-smb.el (tramp-smb-handle-copy-directory):
	Check also for CIFS capabilities.

2016-06-26  Ury Marshak  <ury.marshak@gmail.com>  (tiny change)

	Fix FRAME_INTERNAL_BORDER_WIDTH use (Bug#23841)

	* src/nsfns.m (x_set_internal_border_width): Replace assignments to
	FRAME_INTERNAL_BORDER_WIDTH.

2016-06-25  Leo Liu  <sdl.web@gmail.com>

	Deprecations (bug#23850)

	* lisp/subr.el (string-to-unibyte, string-as-unibyte,
	string-to-multibyte, string-as-multibyte): Make obsolete.

2016-06-25  Tino Calancha  <tino.calancha@gmail.com>

	Do not prompt twice to save a buffer

	* lisp/hilit-chg.el (highlight-markup-buffers): (Bug#23824).

2016-06-25  Alan Third  <alan@idiocy.org>

	Move text line right when in box (bug#23755)

	* src/nsterm.m (ns_draw_glyph_string_foreground): Create to take
	CHAR_GLYPH specific code and move glyphs right if within a box.
	(ns_draw_glyph_string): Move CHAR_GLYPH specific code into above
	function.

2016-06-25  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	0377fe2 ; Spelling fixes
	f253695 Update docs for `customize-mode'
	4395aaa Fix documentation of 'assoc-string' and 'compare-strings'
	ab0ebb9 ; Only load .elc file in tests.
	a98aa02 Error on multibyte characters in HTTP request
	ea512a7 * lisp/gnus/mm-decode.el (mm-convert-shr-links): Mask keys th...
	8297331 ; Revert "Ensure undo-boundary after insert-file-contents."
	dc5e65b Unset GIT_DIR when calling Git commands
	6cdd8f7 Ensure undo-boundary after insert-file-contents.
	4793f5f Clarify documentation of 'line-spacing' and 'line-height'
	5f37572 Fix removal of variables from process-environment
	e5e886d * admin/authors.el (authors-ignored-files, authors-valid-file...
	db0777b * admin/authors.el (authors-aliases, authors-fixed-case): Add...

	# Conflicts:
	#	doc/lispref/modes.texi
	#	lisp/gnus/mm-decode.el

2016-06-25  Mark Oteiza  <mvoteiza@udel.edu>

	Teach net-utils more iproute2 and nl80211 tools

	* lisp/net/net-utils.el (iwconfig-program): Add iw(8).
	(iwconfig-program-options): Add "dev" argument for iw.  Another useful
	option is "phy"; beyond that one needs to know the interface name.
	(netstat-program): Add ss(8).
	(route-program): Add ip(8).
	(route-program-options): Add "route" argument for ip.

2016-06-24  Leo Liu  <sdl.web@gmail.com>

	Use use-region-p in prolog.el

	* lisp/progmodes/prolog.el (region-exists-p): Remove.
	* lisp/progmodes/prolog.el (prolog-edit-menu-runtime,
	prolog-edit-menu-insert-move): Use use-region-p.

2016-06-24  Leo Liu  <sdl.web@gmail.com>

	Remove compatibility with Emacs 24.3 in octave-mode

	* lisp/progmodes/octave.el: Clean up and remove compatibility with
	Emacs 24.3.

2016-06-24  Alan Mackenzie  <acm@muc.de>

	Ensure hack-local-variables is run in a fundamental mode buffer.

	This fixes bug #23827.

	* src/buffer.c (set-buffer-major-mode): Run `fundamental-mode' when the buffer
	gets set to that mode, so that `run-mode-hooks', and thus
	`hack-local-variables' get run.

2016-06-24  Tino Calancha  <tino.calancha@gmail.com>

	Fix caller to ediff-setup

	* lisp/hilit-chg.el (hilit-chg-get-diff-info): #Bug23820.

2016-06-24  Alan Mackenzie  <acm@muc.de>

	Implement ' separators in C++ integer literals.

	* lisp/progmodes/cc-langs.el (c-get-state-before-change-functions): insert
	c-before-after-change-digit-quote into the C++ value.
	(c-before-font-lock-functions): Insert c-depropertize-new-text into the values
	for all languages.  Insert c-before-after-change-digit-quote into the C++
	value.

	* lisp/progmodes/cc-mode.el (c-depropertize-CPP): Wrap the function in
	c-save-buffer-state.
	(c-depropertize-new-text, c-before-after-change-digit-quote): New functions.

2016-06-24  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-06-24 intprops: port better to GCC 7
	2016-06-13 xalloc-oversized: port to GCC 7; fewer warnings
	* doc/misc/texinfo.tex, lib/xalloc-oversized.h, lib/intprops.h:
	Copy from gnulib.

2016-06-24  Martin Rudalics  <rudalics@gmx.at>

	Remove two uses of 'min' in Fwindow_text_pixel_size

	* src/xdisp.c (Fwindow_text_pixel_size): Don't use 'min' since
	it calls move_it_to twice.  Suggested by Eli Zaretskii.

2016-06-23  Paul Eggert  <eggert@cs.ucla.edu>

	Clarify intent of FACE_FROM_ID and IMAGE_FROM_ID

	* src/dispextern.h (FACE_OPT_FROM_ID): Don’t use FACE_FROM_ID,
	since it is intended to be used only when it returns a non-null
	pointer, and here the pointer might be null.
	(IMAGE_OPT_FROM_ID): Don’t use IMAGE_FROM_ID, for similar reasons.

2016-06-23  Mark Oteiza  <mvoteiza@udel.edu>

	Remove some more face aliases obsoleted in 22.1

	* lisp/eshell/em-ls.el (eshell-ls-directory-face, eshell-ls-symlink-face,
	eshell-ls-executable-face, eshell-ls-readonly-face,
	eshell-ls-unreadable-face, eshell-ls-special-face,
	eshell-ls-missing-face, eshell-ls-archive-face, eshell-ls-backup-face,
	eshell-ls-product-face, eshell-ls-clutter-face): Remove.
	* lisp/isearch.el (isearch-lazy-highlight-face, lazy-highlight-face): Remove.
	(isearch-lazy-highlight-update): Use face symbol.
	* lisp/net/sieve-mode.el (sieve-control-commands-face,
	sieve-action-commands-face, sieve-test-commands-face,
	sieve-tagged-arguments-face): Remove.
	(sieve-font-lock-keywords): Use non-obsolete faces.
	* lisp/progmodes/sh-script.el (sh-heredoc-face): Remove.
	(sh-get-indent-info, sh-prev-line): Use face symbol.
	* lisp/textmodes/tex-mode.el (tex-font-lock-keywords-1):
	Use non-obsolete face.
	(tex-math-face, tex-verbatim-face): Remove.
	(tex-font-lock-syntactic-face-function): Use face symbols.

2016-06-23  Mark Oteiza  <mvoteiza@udel.edu>

	Remove some face aliases obsoleted in 22.1

	* lisp/faces.el (modeline-inactive, modeline-highlight, modeline-buffer-id):
	* lisp/hilit-chg.el (highlight-changes-face, highlight-changes-delete-face):
	* lisp/info.el (Info-title-1-face, Info-title-2-face, Info-title-3-face,
	Info-title-4-face, info-menu-5):
	* lisp/obsolete/old-whitespace.el (whitespace-highlight-face):
	* lisp/paren.el (show-paren-match-face, show-paren-mismatch-face):
	* lisp/progmodes/make-mode.el (makefile-space-face):
	* lisp/textmodes/texinfo.el (texinfo-heading-face): Remove.
	(texinfo-font-lock-keywords): Use texinfo-heading face.
	* lisp/vc/add-log.el (change-log-date-face, change-log-name-face,
	change-log-email-face, change-log-file-face, change-log-list-face,
	change-log-conditionals-face, change-log-function-face,
	change-log-acknowledgement-face):
	* lisp/vc/diff-mode.el (diff-header-face, diff-file-header-face,
	diff-index-face, diff-hunk-header-face, diff-removed-face, diff-added-face,
	diff-changed-face, diff-function-face, diff-context-face,
	diff-nonexistent-face): Remove.
	(diff-use-changed-face, diff-font-lock-keywords): Use non-obsolete face
	symbols.
	(diff-hunk-file-names): Fix comment.
	(diff-refine-change): Remove.
	(diff-refine-removed, diff-refine-added, diff-refine-hunk): Use
	non-obsolete face.
	* lisp/vc/log-view.el (log-view-file-face, log-view-message-face): Remove.
	(log-view-font-lock-keywords): Use non-obsolete face names.
	* lisp/vc/pcvs-info.el (cvs-header-face, cvs-filename-face, cvs-unknown-face,
	cvs-handled-face, cvs-need-action-face, cvs-marked-face, cvs-msg-face):
	* lisp/wid-edit.el (widget-documentation-face, widget-button-face,
	widget-field-face, widget-single-line-field-face, widget-inactive-face,
	widget-button-pressed-face):
	* lisp/woman.el (woman-italic-face, woman-bold-face, woman-unknown-face,
	woman-addition-face): Remove.

2016-06-23  Eli Zaretskii  <eliz@gnu.org>

	* lisp/international/characters.el (standard-case-table): Improve last change.

2016-06-23  Eli Zaretskii  <eliz@gnu.org>

	Improve results of 'upcase' for characters with title-case

	* lisp/international/characters.el (standard-case-table): Swap the
	order of some lines, to have 'upcase' return the upper-case
	variant, not the title-case, for some characters whose lower-case
	map to the same codepoints.  (Bug#23833)

2016-06-23  Alan Mackenzie  <acm@muc.de>

	Make typing into incomplete C++ raw strings work, and make it work fast enough

	* lisp/progmodes/cc-engine.el (c-beginning-of-macro, c-state-pp-to-literal):
	Put `save-match-data' around calls to `looking-at' to enable the use of the
	match data in higher level functions.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations)
	(c-font-lock-cut-off-declarators): Use `limit' rather than `(point-max)' as a
	limit to speed up handling of C++ raw strings.

2016-06-23  Eli Zaretskii  <eliz@gnu.org>

	Fix handling of LWINDOW key on MS-Windows

	* src/w32fns.c (funhook): Correct a typo which broke handling of
	the LWINDOW key.  (Bug#23830)

2016-06-22  Eli Zaretskii  <eliz@gnu.org>

	Update Unicode data files from Unicode 9.0.0

	* admin/unidata/copyright.html:
	* admin/unidata/BidiBrackets.txt:
	* admin/unidata/UnicodeData.txt: Update from Unicode 9.0.0, just
	released.

2016-06-22  Eli Zaretskii  <eliz@gnu.org>

	Fix test for whether the '.el' file is newer than '.elc'

	* src/lread.c (Fload): Don't overwrite the last character of the
	file name in FOUND with 'c', unless the file name ended in ".elc"
	to begin with.  Don't treat empty files as byte-compiled.  See
	https://lists.gnu.org/r/emacs-devel/2016-06/msg00463.html
	for more details of the problem this caused.

2016-06-22  Eli Zaretskii  <eliz@gnu.org>

	Fix 'insert-file-contents' when REPLACE is non-nil

	* src/fileio.c (maybe_move_gap): New function to move the gap to
	the end of a buffer, if it isn't there already.
	(Finsert_file_contents): Call 'maybe_move_gap' before using
	conversion_buffer's text as a C 'char' array.  (Bug#23659)
	* src/coding.c (decode_eol): Compute the byte increment before
	calling del_range_2, because the latter can invalidate the pointer
	to buffer text.

2016-06-22  Ken Brown  <kbrown@cornell.edu>

	Avoid compiler warning

	* src/w32fns.c (Fx_show_tip): Don’t jump over auto initialization.

2016-06-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/syntax.el (syntax-propertize): Flush extended region.

2016-06-22  Ken Brown  <kbrown@cornell.edu>

	Fix last change to FRAME_INTERNAL_BORDER_WIDTH

	* src/w32fns.c (x_set_internal_border_width): Don’t use
	FRAME_INTERNAL_BORDER_WIDTH(), which is now a function call, as an
	lvalue.

2016-06-21  Paul Eggert  <eggert@cs.ucla.edu>

	Improve --without-x GCC pacification

	* src/composite.c (autocmp_chars):
	* src/conf_post.h (DebPrint) [HAVE_NTGUI && !DebPrint && !EMACSDEBUG]:
	Use simpler ((void) 0) for no-op expression returning void.
	* src/dispextern.h [HAVE_WINDOW_SYSTEM]:
	Include fontset.h, for face_for_char.
	(FACE_SUITABLE_FOR_ASCII_CHAR_P, FACE_FOR_CHAR):
	Now inline functions instead of macros.  This avoids the need for
	all those casts to void.
	(FACE_SUITABLE_FOR_ASCII_CHAR_P): Omit 2nd (unused) arg.
	All uses changed.
	* src/frame.c (Ficonify_frame, Fset_frame_position):
	* src/xdisp.c (Fmove_point_visually, show_mouse_face):
	* src/xdisp.c (note_mode_line_or_margin_highlight)
	(note_mouse_highlight):
	Assume HAVE_WINDOW_SYSTEM for simplicity, since the code should
	now work either way without generating warnings.
	* src/frame.c (display_available) [HAVE_WINDOW_SYSTEM]: New function.
	(window_system_available) [HAVE_WINDOW_SYSTEM]: Move to frame.h.
	(decode_window_system_frame): Use check_window_system instead of
	rolling the code ourself.  Return needed only if HAVE_WINDOW_SYSTEM.
	(decode_window_system_frame, check_window_system):
	Merge the HAVE_WINDOW_SYSTEM and !HAVE_WINDOW_SYSTEM versions into one.
	* src/frame.c (Ficonify_frame, Fset_frame_position):
	* src/xdisp.c (show_mouse_face, define_frame_cursor1)
	(note_mouse_highlight):
	Narrow the scope of the HAVE_WINDOW_SYSTEM #ifdef;
	this is a better way to pacify GCC.
	* src/xdisp.c (x_set_left_fringe, x_set_right_fringe)
	(x_set_right_divider_width, x_set_bottom_divider_width):
	* src/xfns.c (x_set_internal_border_width):
	Don’t use what are now function calls as lvalues.
	* src/frame.h (WINDOW_SYSTEM_RETURN): New macro.
	(decode_window_system_frame, check_window_system):
	Use it, to avoid the need for duplicate declarations.
	(window_system_available): Now an inline function.
	(display_available): New decl.
	(frame_dimension): New inline function.
	(FRAME_FRINGE_COLS, FRAME_LEFT_FRINGE_WIDTH)
	(FRAME_RIGHT_FRINGE_WIDTH, FRAME_TOTAL_FRINGE_WIDTH)
	(FRAME_INTERNAL_BORDER_WIDTH, FRAME_RIGHT_DIVIDER_WIDTH)
	(FRAME_BOTTOM_DIVIDER_WIDTH):
	Use it, to avoid the need for duplicate definitions.
	Now inline functions instead of macros.
	* src/gnutls.c (gnutls_log_function2i): Remove.
	* src/gnutls.h (GNUTLS_LOG2i): Use ‘message’ directly.
	This avoids complaints about gnutls_log_function2i being defined
	and not used on older platforms that do not need to call GNUTLS_LOG2i.
	* src/image.c (DefaultDepthOfScreen) [0]: Remove unused macro.
	* src/lisp.h (AUTO_STRING_WITH_LEN): Revert change from ‘type id =
	expr’ to ‘type id; id = expr’, as this would suppress valid
	jump-misses-init diagnostics.  Let’s find a better way to address
	the problem.
	* src/vm-limit.c (__MALLOC_HOOK_VOLATILE):
	Define only if needed.
	* src/xdisp.c (handle_single_display_spec):
	Simplify fringe_bitmap computation.
	(define_frame_cursor1): Do nothing unless in a window system.
	All callers changed and simplified.
	* src/xfaces.c (realize_default_face):
	Use a simpler way to pacify GCC when a return value is not used
	on some platforms.

2016-06-21  Phillip Lord  <phillip.lord@russet.org.uk>

	Ensure undo-boundary after all commands

	* lisp/simple.el (undo-auto--boundaries): Ensure an undo-boundary after
	  every command whether it (apparently) changes the buffer or not.

	See Bug#23785 for discussion.

2016-06-21  Eli Zaretskii  <eliz@gnu.org>

	Fix vertical layout calculations when newline has line-height property

	* src/xdisp.c (move_it_in_display_line_to): Reset the iterator's
	'constrain_row_ascent_descent_p' flag after processing the
	newline, similar to what 'display_line' does.  Without this, the
	flag remains set once set by x_produce_glyphs, and causes the
	vertical layout calculations to go awry, because Emacs thinks the
	screen lines have zero height.	(Bug#23850)

2016-06-20  Ken Brown  <kbrown@cornell.edu>

	Fix compiler warnings in Cygwin-w32 build

	* src/conf_post.h (DebPrint) [!EMACSDEBUG]: Add empty do-while
	loop to avoid compiler warnings about empty body of 'if'
	statement.

	* src/image.c [HAVE_NTGUI] (DefaultDepthOfScreen): Disable unused
	macro.
	(x_create_bitmap_from_data): Declare 'frame'.
	(x_create_bitmap_from_file): Don't declare unused variable
	'dpyinfo'.

	* src/lisp.h (AUTO_STRING_WITH_LEN): Avoid initialization to
	prevent "jump-misses-init" compiler warnings.

	* src/w32fns.c (check_w32_winkey_state): Define and use only if
	WINDOWSNT.
	(Fx_show_tip): Declare 'f'.
	(Fx_file_dialog): Declare 'filter_a' only if not NTGUI_UNICODE.
	(w32_strerror): Use format specifier %d for sprintf argument of
	type int.
	(emacs_abort): Cast sprintf argument of type DWORD to unsigned
	int, and use format specifier %x, for compatibility with Cygwin.
	(unicode_append_menu) [NTGUI_UNICODE]:
	* src/w32menu.c [NTGUI_UNICODE] (get_menu_item_info)
	(set_menu_item_info, unicode_append_menu)
	(unicode_message_box):
	* src/menu.c [NTGUI_UNICODE] (unicode_append_menu): Define as
	functions rather than macros to avoid "address will always
	evaluate as true" compiler warnings.

	* src/w32font.c (w32_to_x_charset): Use format specifier %d for
	sprintf argument of type int.

	* src/w32term.c (x_draw_glyphless_glyph_string_foreground): Cast
	sprintf argument of type int to unsigned int to match %X format
	specifier.
	(w32_scroll_bar_handle_click):
	(w32_horizontal_scroll_bar_handle_click): Declare 'f'.

	* src/w32term.h (FRAME_DISPLAY_INFO): Explicitly discard unused
	argument.

2016-06-20  Ken Brown  <kbrown@cornell.edu>

	Fix compiler warnings in no-window-system-build

	* src/composite.c (autocmp_chars): Declare and set 'f' only if
	HAVE_WINDOW_SYSTEM.

	* src/dispextern.h (FACE_SUITABLE_FOR_ASCII_CHAR_P)
	(FACE_FOR_CHAR): Explicitly discard unused arguments.

	* src/font.c (font_open_entity): Declare 'min_width' where it is
	first set, and only if HAVE_WINDOW_SYSTEM.

	* src/frame.c [!HAVE_WINDOW_SYSTEM] (decode_window_system_frame):
	Define _Noreturn version to avoid "suggest attribute noreturn"
	compiler warning.
	(check_window_system): Declare as _Noreturn.
	(Ficonify_frame):
	(Fset_frame_position): Don’t declare and set 'f'.

	* src/frame.h [!HAVE_WINDOW_SYSTEM] (decode_window_system_frame)
	(check_window_system):  Add _Noreturn prototypes.
	(FRAME_FRINGE_COLS, FRAME_TOTAL_FRINGE_WIDTH)
	(FRAME_LEFT_FRINGE_WIDTH, FRAME_RIGHT_FRINGE_WIDTH)
	(FRAME_INTERNAL_BORDER_WIDTH, FRAME_RIGHT_DIVIDER_WIDTH)
	(FRAME_BOTTOM_DIVIDER_WIDTH): Explicitly discard unused argument.

	* src/xdisp.c (handle_single_display_spec): Declare
	'fringe_bitmap' only if HAVE_WINDOW_SYSTEM.
	(append_space_for_newline): Declare 'g' where it is first set.
	(Fmove_point_visually): Declare and set 'target_is_eol_p' only if
	HAVE_WINDOW_SYSTEM.
	(show_mouse_face): Declare and set 'f' and 'phys_cursor_on_p' only
	if HAVE_WINDOW_SYSTEM.
	(note_mode_line_or_margin_highlight):
	(note_mouse_highlight): Declare and set 'cursor' and 'pointer'
	only if HAVE_WINDOW_SYSTEM.

	* src/xfaces.c (realize_default_face): Declare and set 'face' only
	if HAVE_X_WINDOWS.  Remove redundant #ifdef.

2016-06-20  Michael Albinus  <michael.albinus@gmx.de>

	Weaken test conditions in filenotify-tests.el

	* test/lisp/filenotify-tests.el (file-notify--test-with-events):
	Fix thinko in test.
	(file-notify-test02-events, file-notify-test04-file-validity)
	(file-notify-test07-backup)
	(file-notify-test08-watched-file-in-watched-dir): Make test
	conditions more weak.  (Bug#23618)

2016-06-19  Paul Eggert  <eggert@cs.ucla.edu>

	Minor ABLOCKS_BUSY cleanups in alloc.c

	* src/alloc.c (ABLOCKS_BUSY): Rename arg to avoid potential clash
	with member ‘abase’ in definiens.
	(lisp_align_malloc, lisp_align_free): Use bool for boolean.
	Avoid compiler warning with fewer casts.
	(lisp_align_free): Check busy-field values; this can help the
	compiler a bit when optimizing, too.

2016-06-19  Dmitry Gutov  <dgutov@yandex.ru>

	ASCII-fy coding-system-for-read used for Git commands

	* lisp/vc/vc-git.el (vc-git--asciify-coding-system):
	New function.
	(vc-git-diff, vc-git-annotate-command): Use it.

2016-06-19  Dmitry Gutov  <dgutov@yandex.ru>

	Prohibit multibyte characters in url-http-data

	It didn't work anyway, but this makes any such errors more obvious
	by catching them earlier.

	* lisp/url/url-http.el (url-http-create-request):
	Use string-to-unibyte (bug#23750).

2016-06-19  Eli Zaretskii  <eliz@gnu.org>

	Fix setting a range of char-table slots in a singular case

	* src/chartab.c (char_table_set_range): Start the loop from the
	first character of the block to which FROM belongs.  (Bug#23797)

	* test/src/chartab-tests.el: New test file.

2016-06-19  Alan Mackenzie  <acm@muc.de>

	Fix CC Mode fontification problem apparent in test file decls-6.cc.

	* lisp/progmodes/cc-engine.el (c-forward-decl-or-cast-1): Recognize
	"bar (gnu);" as a declarator only when the construct is directly inside a
	class (etc.) called "bar".
	(c-directly-in-class-called-p): New function.

2016-06-19  Alan Mackenzie  <acm@muc.de>

	c-renarrow-state-cache: take care when new point is inside old brace pair.

	Also add display of point-min to the c-parse-state debugging output.

	* lisp/progmodes/cc-engine.el (c-renarrow-state-cache): When the new
	point is inside an old recorded brace pair, clear the cache.
	(c-debug-parse-state): Output the value of point-min.

2016-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	Rename ALIGN to pointer_align

	* src/alloc.c (pointer_align): Rename from ALIGN.
	This fixes Bug#23764 in a simpler way.

2016-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d1efbaf Fix documentation of completion functions
	65c96cc Clarify documentation of 'font-lock-maximum-decoration'
	2ad3d01 * doc/misc/cl.texi (Usage): Add some more details.
	b49cb0a Fbackward_prefix_chars: stay within buffer bounds

2016-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	2317c61 Fix last todo-mode change
	5d4d8a3 Improve last todo-mode fix
	d7084f2 Fix todo-mode use of minibuffer completion keymap (bug#23695).
	27dec52 * src/alloc.c (ALIGN): Avoid error on DragonFly BSD.  (Bug#23...
	f526191 * lisp/emacs-lisp/nadvice.el (advice--make-docstring): Avoid ...
	e881070 * lisp/help-fns.el (describe-function-1): Avoid reporting adv...
	d308aa1 Minor grammar fix (bug#23746)
	20de667 Doc fixes for grammar and typos (bug#23746)
	a67a4e5 * doc/lispref/processes.texi (Process Buffers): Minor rewordi...
	27f440e Add cross-reference to ELisp manual
	10802d8 ; make change-history-commit
	4b2d77d * lisp/emacs-lisp/macroexp.el (macroexp--expand-all): Fix (bu...
	12e009e Restore initial undo boundary with viper
	291fe0a Revert "Fix viper undo breakage from undo-boundary changes"
	6921f4a Fix dbus crash on 32-bit Cygwin

2016-06-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9ae514a * etc/AUTHORS: Update the AUTHORS file
	3ca428e add entries to authors.el
	66d556b Fix eldoc-related freezes in python mode
	d59bcbc Handle mouse leaving initial window in `mouse-set-region' (Bu...
	27fe1e4 org.el: Fix bindings of < and > for calendar scrolling
	a813487 Fix undo boundary in recursive edit (Bug#23632)
	1f85b7c Doc fixes re alist-get.  (Bug#23548)
	ba3f206 * lisp/progmodes/python.el (inferior-python-mode): Avoid tabs...
	56fa055 * src/syntax.c (syms_of_syntax) <comment-end-can-be-escaped>:...
	4c1370a * lisp/help-fns.el (describe-function-1): Fix handling of fil...
	a3f7ae8 * lisp/emacs-lisp/cl-macs.el (cl-loop): Doc fix re "by".
	601b9b2 * doc/misc/cl.texi (Mapping over Sequences): Fix cl-notevery.

2016-06-18  Nicolas Petton  <nicolas@petton.fr>

	* lisp/emacs-lisp/map.el (map-contains-key): Better docstring

2016-06-18  Nicolas Petton  <nicolas@petton.fr>

	Fix seq-contains

	Make sure seq-contains return the element of the sequence instead of t.

	* lisp/emacs-lisp/seq.el (seq-contains): Fix the function.
	* test/lisp/emacs-lisp/seq-tests.el: Add a regression test.

2016-06-18  Nicolas Petton  <nicolas@petton.fr>

	Add new function map-do

	* lisp/emacs-lisp/map.el (map-do, map--do-alist, map--do-array): New
	  functions.
	* test/lisp/emacs-lisp/map-tests.el: Add a unit test for map-do.

2016-06-18  Nicolas Petton  <nicolas@petton.fr>

	Add seq-do-indexed

	* lisp/emacs-lisp/seq.el (seq-do-indexed): New function.
	* test/lisp/emacs-lisp/seq-tests.el: Add a unit test for seq-do-indexed.

2016-06-17  Stefan Monnier  <monnier@iro.umontreal.ca>

	map.el (map-merge*): Use `map-into' at beginning rather than end

	* lisp/emacs-lisp/map.el (map-merge): Use `map-into' for the first map,
	and don't use of an intermediate alist.
	(map-merge-with): Same, plus use `cl-callf' to try and avoid performing
	3 lookups per inner iteration.

2016-06-16  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/window.el (switch-to-buffer-preserve-window-point): Bump :version.

2016-06-15  Alan Mackenzie  <acm@muc.de>

	Speed up CC Mode's font locking by taking some code out of a hot loop.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Remove code which
	tests for bare declarators.
	(c-font-lock-cut-off-declarators): New function.
	(c-complex-decl-matchers): insert c-font-lock-cut-off-declarators.

2016-06-15  Stefan Monnier  <monnier@iro.umontreal.ca>

	Automatically find vars and functions via definition-prefixes

	* lisp/help-fns.el (help-definition-prefixes): New var and function.
	(help--loaded-p, help--load-prefixes, help--symbol-completion-table):
	New functions.
	(describe-function, describe-variable): Use them.

	* lisp/emacs-lisp/radix-tree.el (radix-tree--prefixes)
	(radix-tree-prefixes, radix-tree-from-map): New functions.

2016-06-15  Michal Nazarewicz  <mina86@mina86.com>

	Automatically detect whether .h file is C or C++

	* lisp/progmodes/cc-mode.el (c-or-c++-mode): A new function which
	analyzes contents of the buffer to determine whether it looks like C++
	source code and based on that enables c-mode or c++-mode.
	(c-or-c++-mode--regexp): Regular expression which, when matches
	a buffer, signals file is C++.

2016-06-15  Alan Mackenzie  <acm@muc.de>

	Parse compound identifiers in C++ member initialization lists.

	* lisp/progmodes/cc-engine.el (c-back-over-compound-identifier): New function.
	(c-back-over-member-initializer-braces, c-back-over-list-of-member-inits)
	(c-back-over-member-initializers): Call c-back-over-compound-identifier rather
	than c-simple-skip-symbol-backward.

2016-06-15  Stefan Monnier  <monnier@iro.umontreal.ca>

	Advertize set-keymap-parent as replacement for copy-keymap

	* doc/lispref/keymaps.texi (Creating Keymaps):
	* src/keymap.c (Fcopy_keymap): Advertize set-keymap-parent as replacement.

2016-06-15  Ted Zlatanov  <tzz@lifelogs.com>

	* lisp/generic-x.el (ansible-inventory-generic-mode): Warn if
	value is missing

2016-06-15  Tim Chambers  <tbc@alum.mit.edu>  (tiny change)

	Add new ansible-inventory-generic-mode (Bug#23762)

	* lisp/generic-x.el (ansible-inventory-generic-mode): Add new mode.

2016-06-14  Paul Eggert  <eggert@cs.ucla.edu>

	Fix ifdef-vs-if typo with RANDR13_LIBRARY

	* src/xfns.c (x_get_monitor_attributes_xrandr): Use #if, not #ifdef.
	This ports to systems that predate xrandr 1.3. See Christian Lynbech in:
	https://lists.gnu.org/r/emacs-devel/2016-06/msg00198.html

2016-06-14  Paul Eggert  <eggert@cs.ucla.edu>

	Port to platforms where char * has top bit set

	This fixes a five-year-old FIXME comment.  Although I don’t know
	of a platform where this is a problem in practice, better safe
	than sorry.
	* src/doc.c (Fdocumentation): If SUBRP, simply use doc as integer,
	as it is now an integer, not char *.
	(store_function_docstring): Offset is now EMACS_INT, not ptrdiff_t;
	this is a file offset and EMACS_INT is better if --with-wide-int.
	If SUBRP, simply store the offset rather than negating it and
	converting it to char *.
	* src/lisp.h (struct Lisp_Subr.doc): Now EMACS_INT, not char *.

2016-06-14  Paul Eggert  <eggert@cs.ucla.edu>

	Remove recursion from store_function_docstring

	* src/doc.c (store_function_docstring):
	Refactor to avoid the need for C-level recursion.

2016-06-14  Ken Brown  <kbrown@cornell.edu>

	Remove system-specific -I switch from Cygwin-w32 build

	Suggested by Eli Zaretskii in discussion of bug#18302.

	* src/image.c [HAVE_NTGUI]: Remove the unused macro
	PIXEL_ALREADY_TYPEDEFED.  On Cygwin, include "noX/xpm.h" instead of
	"X11/xpm.h".

	* configure.ac [CYGWIN && HAVE_W32]: Change the xpm test to use
	"noX/xpm.h".  Don't add a -I switch to CPPFLAGS.

2016-06-14  Noam Postavsky  <npostavs@gmail.com>

	Make python.el work in Emacs 24

	* lisp/progmodes/python.el: Bump version.
	(python-define-auxiliary-skeleton): Only use format-message if
	fbound (Bug#23126).

2016-06-13  Ken Brown  <kbrown@cornell.edu>

	Avoid compiler warning

	* src/w32fns.c (deliver_wm_chars): Add 'const' to declaration of
	'type_CtrlAlt'.

2016-06-13  Paul Eggert  <eggert@cs.ucla.edu>

	Call tzset after setting TZ

	* src/editfns.c (tzlookup): Call tzset after setting TZ, so that
	the setting change propagates into Emacs local time (Bug#23600).
	(emacs_setenv_TZ): Clarify comments.

2016-06-13  Paul Eggert  <eggert@cs.ucla.edu>

	Update texinfo.tex

	* doc/misc/texinfo.tex: Update from gnulib.

2016-06-12  Paul Eggert  <eggert@cs.ucla.edu>

	New macro GNUC_PREREQ for GCC version

	* src/conf_post.h (GNUC_PREREQ): New macro.
	Change uses of __GNUC_MINOR__ and __GNUC_PATCHLEVEL__ to use this
	macro instead, for clarity and consistency.
	(PRINTF_ARCHETYPE): New macro.  Define it to __gnu_printf__ only
	if glibc, since non-GNU platforms don’t necessarily support GNU
	printf formats.
	(ATTRIBUTE_FORMAT_PRINTF): Use it.

2016-06-12  Nicolas Petton  <nicolas@petton.fr>

	* lisp/emacs-lisp/seq.el (seq-drop): Better list implementation

2016-06-12  Eli Zaretskii  <eliz@gnu.org>

	Fix printf-related compilation warnings on MinGW

	* src/conf_post.h (ATTRIBUTE_FORMAT_PRINTF) [__MINGW32__]: Use
	'__ms_printf__', not '__gnu_printf__', as the latter is not what
	MS 'printf' supports, and causes bogus compilation warnings.
	* src/lisp.h (pI) [__MINGW32__]: Define to "I64", as MS 'printf'
	doesn't support the "ll" modifier.

2016-06-11  Paul Eggert  <eggert@cs.ucla.edu>

	emacs_strerror cleanups

	* src/buffer.c, src/emacs.c, src/lread.c: Don’t include coding.h;
	no longer needed, now that emacs_strerror is declared by lisp.h.
	* src/coding.c (emacs_strerror): Remove; moved to emacs.c.
	* src/coding.h (emacs_strerror) [emacs]: Remove decl; moved
	to lisp.h.
	* src/emacs.c (emacs_strerror): Move here from coding.c.  Do not
	convert result string; this is now the caller’s responsibility,
	as some need conversion and others don’t.
	* src/fileio.c (report_file_errno, report_file_notify_error):
	Use emacs_strerror rather than rolling it ourselves.
	* src/lisp.h (emacs_strerror): Move decl here from coding.h.
	* src/lread.c (dir_warning): Just call emacs_strerror rather than
	both strerror and emacs_strerror.  Convert its result from
	locale-coding-system, since it no longer does that conversion.
	* src/sound.c (sound_perror):
	* src/sysdep.c (emacs_perror, str_collate):
	Use emacs_strerror, not strerror.

2016-06-10  David Reitter  <david.reitter@gmail.com>

	Prevent compiler warning for unused arguments

	* lisp/international/ucs-normalize.el
	(ucs-normalize-hfs-nfd-pre-write-conversion):
	Prevent compiler warning for unused arguments, add coment.

2016-06-10  Paul Eggert  <eggert@cs.ucla.edu>

	Catch malloc_get_state, malloc_set_state failure

	This should help insulate Emacs better from configuration screwups.
	Future versions of the GNU C library are planned to deprecate
	these functions, but will continue to support them in
	already-built-and-dumped Emacs executables.
	* src/alloc.c (malloc_initialize_hook) [DOUG_LEA_MALLOC]:
	Abort if malloc_set_state fails.
	(alloc_unexec_pre) [DOUG_LEA_MALLOC]:
	Report malloc_get_state failure, and exit.

2016-06-10  Eli Zaretskii  <eliz@gnu.org>

	Show returned value after gdb-mi "finish" command

	* lisp/progmodes/gdb-mi.el (gdb-stopped): Display the expected
	"Value returned" message in response to "finish", when not
	produced by GDB/MI.  (Bug#23720)

2016-06-10  David Reitter  <david.reitter@gmail.com>

	Simplify pre-write-conversion for utf-8-hfs coding system

	* lisp/international/ucs-normalize.el
	(ucs-normalize-hfs-nfd-pre-write-conversion): Refactor.

	May address an issue where Emacs consumed large amounts of CPU
	because of neverending toolbar updating (which was caused
	by, but also called this function).

2016-06-09  Martin Rudalics  <rudalics@gmx.at>

	Revert "Bind `widget-button-click' to mouse-1/-2 instead of down-mouse-1/-2"

	* lisp/wid-edit.el (widget-keymap): Bind `widget-button-click'
	to mouse-1/-2 instead of down-mouse-1/-2.  Suggested by Stefan
	Monnier.  (Bug#19185, Bug#20398)

	This reverts commit 72166f2f3dba18f1217c666574032f5a0351ed65.

	That commit did more harm than good (Bug#23571).

2016-06-09  Paul Eggert  <eggert@cs.ucla.edu>

	Port __builtin_assume_aligned to Sun C 5.13

	* src/conf_post.h (__builtin_assume_aligned):
	Fix typo: the extra arg did not conform to C99.

2016-06-09  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer getsockopt to getpeername on non-MS-Windows

	* admin/CPP-DEFINES: Remove HAVE_GETPEERNAME.
	* configure.ac: Don’t check for getpeername.
	* src/process.c (wait_reading_process_output) [!WINDOWSNT]:
	Use getsockopt even if not GNU/Linux, as the platforms where
	getsockopt used to hang are no doubt long dead.

2016-06-09  Paul Eggert  <eggert@cs.ucla.edu>

	Fix XFASTINT of non-fixnum in process status

	* src/process.c (decode_status): 3rd arg is now Lisp_Object *,
	not int *, and is not decoded.  All uses changed.
	(status_message): Do not assume ‘failed’ code is an integer.
	* src/process.h: Document codes better.

2016-06-09  Glenn Morris  <rgm@gnu.org>

	Make messcompat.el obsolete.

	* lisp/obsolete/messcompat.el: Move here from lisp/gnus.
	* doc/misc/message.texi (Compatibility): Remove section.

2016-06-09  Glenn Morris  <rgm@gnu.org>

	Leading "*" in the doc of defvars is long obsolete.

	* lisp/plstore.el (plstore-encrypt-to):
	* lisp/cedet/semantic/lex-spp.el
	(semantic-lex-spp-macro-max-length-to-save):
	* lisp/cedet/semantic/symref.el (semantic-symref-tool):
	* lisp/cedet/semantic/bovine/el.el
	(semantic-elisp-store-documentation-in-tag):
	* lisp/cedet/semantic/wisent/comp.el (wisent-verbose-flag)
	(wisent-expected-conflicts):
	* lisp/cedet/semantic/wisent/wisent.el (wisent-parse-verbose-flag):
	* lisp/gnus/gnus-agent.el (gnus-category-menu-hook):
	* lisp/gnus/gnus-group.el (gnus-group-listing-limit):
	* lisp/gnus/gnus-srvr.el (gnus-server-menu-hook)
	(gnus-browse-menu-hook):
	* lisp/gnus/message.el (message-shoot-gnksa-feet):
	* lisp/gnus/mm-decode.el (mm-path-name-rewrite-functions):
	* lisp/gnus/mm-util.el (mm-extra-numeric-entities):
	* lisp/gnus/mm-view.el (mm-w3m-standalone-supports-m17n-p):
	* lisp/gnus/mml.el (mml-generate-multipart-alist):
	* lisp/gnus/nndraft.el (nndraft-required-headers):
	* lisp/gnus/nnheader.el (nnheader-max-head-length)
	(nnheader-head-chop-length, nnheader-file-name-translation-alist)
	(nnheader-directory-separator-character)
	(nnheader-pathname-coding-system):
	* lisp/gnus/nnmail.el (nnmail-pathname-coding-system)
	(nnmail-active-file-coding-system):
	* lisp/gnus/nnrss.el (nnrss-file-coding-system):
	* lisp/gnus/nntp.el (nntp-record-commands):
	* lisp/gnus/score-mode.el (gnus-score-edit-done-hook)
	(gnus-score-mode-hook, gnus-score-menu-hook):
	* lisp/mail/rfc2047.el (rfc2047-header-encoding-alist)
	(rfc2047-allow-irregular-q-encoded-words)
	(rfc2047-allow-incomplete-encoded-text):
	* lisp/mh-e/mh-alias.el (mh-alias-system-aliases):
	* lisp/mh-e/mh-e.el (mh-mail-header-separator, mh-x-mailer-string):
	* lisp/mh-e/mh-scan.el (mh-scan-format-mh, mh-scan-format-nmh):
	* lisp/net/pop3.el (pop3-password):
	* lisp/play/animate.el (animate-n-steps):
	* lisp/progmodes/cc-vars.el (c-old-style-variable-behavior):
	Convert from defvar with leading * to defcustom.


	* lisp/emulation/viper-init.el (viper-heading-end):
	* lisp/gnus/mm-url.el (mm-url-html-entities):
	* lisp/gnus/nnmaildir.el (nnmaildir-article-file-name):
	* lisp/mh-e/mh-e.el (mh-invisible-header-fields-compiled):
	* lisp/net/tramp-adb.el (tramp-adb-method): Remove leading * from doc.

	* lisp/gnus/messcompat.el: Mark (pointless) file not for compilation.
	(message-from-style, message-interactive, message-indentation-spaces)
	(message-signature, message-signature-file):
	Remove settings that match the defaults.
	(message-setup-hook, message-mode-hook, message-default-headers)
	(message-send-hook, message-send-mail-function):
	Just use setq rather than redefining.

	* lisp/gnus/nnrss.el (nnrss):
	* lisp/mail/rfc2047.el (rfc2047):
	* lisp/play/animate.el (animate): New custom groups.

2016-06-09  Glenn Morris  <rgm@gnu.org>

	Remove obsolete leading * from defcustom, defface doc strings.

	* lisp/cedet/ede/linux.el, lisp/cedet/ede/project-am.el:
	* lisp/cedet/ede/simple.el, lisp/cedet/semantic/bovine/c.el:
	* lisp/cedet/semantic/complete.el, lisp/cedet/semantic/db.el:
	* lisp/cedet/semantic/decorate/include.el:
	* lisp/cedet/semantic/decorate/mode.el, lisp/cedet/semantic/format.el:
	* lisp/cedet/semantic/ia.el, lisp/cedet/semantic/idle.el:
	* lisp/cedet/semantic/imenu.el, lisp/cedet/semantic/lex-spp.el:
	* lisp/cedet/semantic/mru-bookmark.el, lisp/cedet/semantic/sb.el:
	* lisp/cedet/srecode/fields.el, lisp/ecomplete.el:
	* lisp/gnus/gnus-agent.el, lisp/gnus/gnus-art.el:
	* lisp/gnus/gnus-async.el, lisp/gnus/gnus-cache.el:
	* lisp/gnus/gnus-cite.el, lisp/gnus/gnus-delay.el:
	* lisp/gnus/gnus-diary.el, lisp/gnus/gnus-dup.el:
	* lisp/gnus/gnus-fun.el, lisp/gnus/gnus-group.el:
	* lisp/gnus/gnus-kill.el, lisp/gnus/gnus-msg.el:
	* lisp/gnus/gnus-picon.el, lisp/gnus/gnus-salt.el:
	* lisp/gnus/gnus-score.el, lisp/gnus/gnus-start.el:
	* lisp/gnus/gnus-sum.el, lisp/gnus/gnus-topic.el:
	* lisp/gnus/gnus-util.el, lisp/gnus/gnus-uu.el, lisp/gnus/gnus-win.el:
	* lisp/gnus/gnus.el, lisp/gnus/mail-source.el, lisp/gnus/message.el:
	* lisp/gnus/mm-url.el, lisp/gnus/mm-uu.el, lisp/gnus/mml.el:
	* lisp/gnus/nndiary.el, lisp/gnus/nnir.el, lisp/gnus/nnmail.el:
	* lisp/gnus/smiley.el, lisp/gnus/smime.el, lisp/mail/mail-extr.el:
	* lisp/mh-e/mh-e.el, lisp/net/mailcap.el, lisp/net/pop3.el:
	* lisp/net/starttls.el, lisp/progmodes/cc-vars.el:
	* lisp/progmodes/cperl-mode.el, test/manual/cedet/tests/test.el:
	Remove obsolete leading * from defcustom, defface doc strings.

2016-06-09  Eli Zaretskii  <eliz@gnu.org>

	Fix copying text properties by 'format'

	* src/editfns.c (styled_format): Fix copying text properties from
	the format specification to the produced string representation.
	(Bug#23730)
	(Fformat) Doc fix.

	* doc/lispref/strings.texi (Formatting Strings): Document that
	text properties from the format specifiers are also copied to the
	produced string.

2016-06-09  Alan Mackenzie  <acm@muc.de>

	Handle C++ raw strings.

	* lisp/progmodes/cc-engine.el (c-raw-string-pos, c-depropertize-raw-string)
	(c-depropertize-raw-strings-in-region,
	c-before-change-check-raw-strings)
	(c-propertize-raw-string-opener, c-after-change-re-mark-raw-strings): New
	functions.

	* lisp/progmodes/cc-fonts.el (c-basic-matchers-before): Insert a clause for
	c-font-lock-raw-strings.
	(c-font-lock-raw-strings): New function.

	* lisp/progmodes/cc-langs.el (c-get-state-before-change-functions): Insert
	c-before-change-check-raw-strings into the C++ value, and c-depropertize-CPP
	into the values for C, C++, and Objective C.
	(c-before-font-lock-functions): Insert c-after-change-re-mark-raw-strings into
	the C++ value.

	* lisp/progmodes/cc-mode.el (c-old-BEG, c-old-END): New variables.
	(c-depropertize-CPP): New function, extracted from
	c-neutralize-syntax-in-and-mark-CPP.
	(c-neutralize-syntax-in-and-mark-CPP): Remove the call to
	c-clear-char-property-with-value for 'syntax-table value '(1) at the beginning
	of the function.
	(c-after-change): Set c-old-BEG and c-old-END to the current values of
	c-new-BEG and c-new-END.

2016-06-09  Daiki Ueno  <ueno@gnu.org>

	epg: don't use obsolete function

	* lisp/epg.el (epg-sign-string, epg-encrypt-string): Remove
	redundant configuration check, which is now done in
	`epg-make-context'.

2016-06-09  Daiki Ueno  <ueno@gnu.org>

	epg: don't start pinentry if it is useless

	* lisp/epg.el (epg--start): Don't start pinentry server if the
	session is non-interactive or pinentry-mode is set.

2016-06-08  Paul Eggert  <eggert@cs.ucla.edu>

	Replace IF_LINT by NONVOLATILE and UNINIT

	Inspired by a suggestion from RMS in: https://bugs.gnu.org/23640#58
	* .dir-locals.el (c-mode): Adjust to macro changes.
	* src/conf_post.h (NONVOLATILE, UNINIT): New macros (Bug#23640).
	(IF_LINT): Remove.  All uses replaced by the new macros.

2016-06-08  Michal Nazarewicz  <mina86@mina86.com>

	Remove ‘ert-with-function-mocked’ macro in favor of ‘cl-letf’ macro

	* lisp/emacs-lisp/ert-x.el (ert-with-function-mocked): Remove macro
	in favor of ‘cl-letf’ macro which is more generic.  All existing
	uses are migrated accordingly.  The macro has not been included in
	an official release yet so it should be fine to delete it.

2016-06-08  Glenn Morris  <rgm@gnu.org>

	* test/lisp/emacs-lisp/package-tests.el
	(package-test-update-archives-async): Try re-enabling on hydra.

2016-06-08  Paul Eggert  <eggert@cs.ucla.edu>

	* src/fileio.c (auto_save_error): Omit unused local.

2016-06-08  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify overflow check via INT_SUBTRACT_WRAPV

	* src/editfns.c (check_tm_member): Simplify integer overflow check.

2016-06-07  Glenn Morris  <rgm@gnu.org>

	Try to avoid hangs and stray procs in network-stream-tests.  (Bug#23560)

	* test/lisp/net/network-stream-tests.el (connect-to-tls-ipv4-wait)
	(connect-to-tls-ipv4-nowait, connect-to-tls-ipv6-nowait):
	Ensure gnutls-serv process gets killed.
	(echo-server-nowait, connect-to-tls-ipv4-nowait):
	Limit the amount of time we might wait.

2016-06-07  Glenn Morris  <rgm@gnu.org>

	Reduce allout.el's pollution of the namespace.

	* lisp/allout.el (allout-set-regexp): Rename from set-allout-regexp.
	Keep old name as obsolete alias.
	(allout-produce-mode-menubar-entries, allout-nullify-prefix-data)
	(allout-solicit-char-in-string)
	(allout-count-trailing-whitespace-region, allout-regexp-sans-escapes):
	Rename to add an "allout-" prefix.

2016-06-07  Glenn Morris  <rgm@gnu.org>

	* configure.ac (emacs_config_features): Add CANNOT_DUMP.

2016-06-07  Glenn Morris  <rgm@gnu.org>

	Misc small webjump updates.

	* lisp/net/webjump.el (webjump): Add custom group.
	(webjump-sample-sites): Make it a constant.
	Remove explicit, old list of GNU ftp mirrors.
	(webjump-state-to-postal-alist): Make it a constant.
	(webjump-sites): Make it a defcustom.
	(webjump-to-iwin): Update for changed remote service.

2016-06-07  Glenn Morris  <rgm@gnu.org>

	Do not hard-code port for package test server.  (Bug#23708)

	* test/lisp/emacs-lisp/package-resources/package-test-server.py:
	Do not hard-code port.
	* test/lisp/emacs-lisp/package-tests.el (package-test-update-archives-async):
	Update for the above change.

2016-06-07  Tino Calancha  <f92capac@gmail.com>

	* lisp/ibuffer.el (ibuffer): Improve 'other-window' case.  (Bug#23617)

2016-06-07  Glenn Morris  <rgm@gnu.org>

	* src/fileio.c (auto_save_error): Use display-warning.  (Bug#23703)

2016-06-07  Tino Calancha  <f92capac@gmail.com>

	* lisp/ibuf-ext.el (ibuffer-do-shell-command-file):
	Fix non-file-visiting-buffer case.  (Bug#22678)

2016-06-07  Paul Eggert  <eggert@cs.ucla.edu>

	Port --enable-gcc-warnings to clang 3.7.0

	* configure.ac: Add -Wno-tautological-compare to avoid bogus
	warnings about 0 <= rlim.rlim_max.  Remove flags that no longer
	seem to be needed, at least in Fedora 23 x86-64.

2016-06-07  Paul Eggert  <eggert@cs.ucla.edu>

	Use __builtin_assume_aligned on untagged Lisp vals

	* src/conf_post.h (__has_builtin, __builtin_assume_aligned):
	New macros, for compilers not already defining them.
	(__has_builtin___builtin_assume_aligned): New macro.
	* src/lisp.h (lisp_h_XUNTAG): Use __builtin_assume_aligned.
	This shrinks text space by 0.2% on x86-64 with GCC 6.1.

2016-06-07  Glenn Morris  <rgm@gnu.org>

	* lisp/help-fns.el (describe-function-1): Avoid reporting advised
	aliases as the type of their targets.

2016-06-07  Tino Calancha  <f92capac@gmail.com>

	* lisp/simple.el (process-menu-mode, list-processes--refresh):
	Include PID.  (Bug#21725)

2016-06-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	6e3adf8 Fix crash in syntax.c after GC
	973ce5a Improve squiggly heredoc support in non-SMIE Ruby mode
	9d5cceb Fix doc string quoting
	0b33a23 Fix mouse dragging of vertical dividers with scroll bars on l...
	a5d05f4 * etc/PROBLEMS: Mention the link-time problems on FreeBSD 11.

2016-06-07  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	604f656 * test/automated/viper-tests.el (viper-test-undo-kmacro): Del...
	20eb531 * lisp/mail/footnote.el (footnote-mode): Fix doc typo.
	a7a2244 * doc/misc/smtpmail.texi (Encryption): Fix 2012-12-22 typo.
	07bd972 * lisp/emacs-lisp/lisp-mode.el (lisp--mode-syntax-table): Fix...

2016-06-06  Paul Eggert  <eggert@cs.ucla.edu>

	Use standard Unicode names for Thai, Lao

	* lisp/language/lao-util.el, lisp/language/thai-util.el:
	Don’t override standard Unicode character name (Bug#23698).

2016-06-06  Glenn Morris  <rgm@gnu.org>

	* lisp/man.el (Man-reference-regexp, Man-default-man-entry):
	Handle U+2010 hyphen at eol, as used when LANG=en_US.utf8.

2016-06-06  Michael Albinus  <michael.albinus@gmx.de>

	Some fixes in filenotify-tests.el for cygwin

	* test/lisp/filenotify-tests.el (file-notify--test-timeout):
	Reintroduce value for cygwin, it's needed on slow systems.
	(file-notify--wait-for-events): Move up definition.
	(file-notify--test-no-descriptors): Use `file-notify--wait-for-events'.
	(file-notify--test-with-events-check, file-notify--test-with-events)
	(file-notify-test08-watched-file-in-watched-dir):
	Use :random rather than `random.
	(file-notify-test06-many-events): Do not skip for cygwin.

2016-06-05  Juri Linkov  <juri@linkov.net>

	* src/casefiddle.c (Fupcase_region): Add arg ‘region-noncontiguous-p’.

	If non-nil, operate on multiple chunks.  (Bug#23655)

	* src/search.c (Freplace_match): Use Qnil for new arg of Fupcase_region.

2016-06-05  Juri Linkov  <juri@linkov.net>

	* lisp/wdired.el (wdired-next-line, wdired-previous-line): Add "^"

	to interactive spec to handle shift-selection.  (Bug#23642)

2016-06-05  Michael Albinus  <michael.albinus@gmx.de>

	Improve robustness of filenotify-tests.el (Bug#23618)

	* test/lisp/filenotify-tests.el (file-notify--test-no-descriptors)
	(file-notify--test-no-descriptors-explainer)
	(file-notify--test-cleanup-p): New defuns.
	(file-notify--test-cleanup): Don't check for
	`file-notify--test-event' anymore, that's done in
	`file-notify--test-no-descriptors'.
	(file-notify--test-with-events-check)
	(file-notify--test-with-events): Handle the `random' marker.
	(file-notify--test-with-events-explainer): Improve readability.
	(file-notify-test00-availability)
	(file-notify-test01-add-watch, file-notify-test02-events)
	(file-notify-test03-autorevert)
	(file-notify-test04-file-validity)
	(file-notify-test05-dir-validity)
	(file-notify-test06-many-events, file-notify-test07-backup)
	(file-notify-test08-watched-file-in-watched-dir)
	(file-notify-test09-sufficient-resources): Check also
	`file-notify--test-cleanup-p'.
	(file-notify-test04-file-validity)
	(file-notify-test05-dir-validity): Use `ignore' as handler.
	(file-notify-test05-dir-validity)
	(file-notify-test06-many-events): Delete directory finally.
	(file-notify-test08-watched-file-in-watched-dir): Add `random' marker.

2016-06-05  Stephen Berman  <stephen.berman@gmx.net>

	man.el: Fix links on hyphenated words (bug#23647)

	* lisp/man.el (Man-bgproc-sentinel): Make links work on
	hyphenated words.

2016-06-05  K. Handa  <handa@gnu.org>

	Add category 'j' to more characters.

	* lisp/international/characters.el: Add category 'j' (Japanese)
	to characters in japanese-jisx0213.2004-1.

2016-06-04  Tino Calancha  <f92capac@gmail.com>

	isearch-edit-string resumes multi isearches

	* lisp/isearch.el (with-isearch-suspended): Remember and restore
	multi-isearch variables.  (Bug#21663)

2016-06-04  Eli Zaretskii  <eliz@gnu.org>

	Fix Eshell display when RTL characters are involved

	* lisp/eshell/esh-mode.el (eshell-mode): Set
	'bidi-paragraph-direction' to 'left-to-right'.  (Bug#23652)

2016-06-02  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Make ses-jump with completing input.

	* lisp/ses.el (ses-jump): Make symbol input completing against list of
	  named cells.

2016-06-01  Paul Eggert  <eggert@cs.ucla.edu>

	Port angle-bracket TZ settings to MS-Windows

	* doc/lispref/os.texi (Time Zone Rules): Document MS-Windows
	lack of support for numeric time zone abbreviations.
	* src/w32.c (sys_putenv): Convert angle-bracket TZ syntax
	to MS-compatible syntax if possible, and to "ZZZ" otherwise.
	Problem reported by Kazuhiro Ito (Bug#23600).

2016-06-01  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid delving into Git internals for version

	* lisp/loadup.el (exec-path): Set it to nil later, so that
	emacs-repository-get-version can invoke git commands in the PATH.
	* lisp/version.el (emacs-repository--version-git-1): Remove.
	(emacs-repository-get-version): Let Git do it rather than
	delving into Git internals.

2016-06-01  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/autoload.el (autoload--make-defs-autoload): Expand less

2016-06-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix emacs-repository-get-version with packed .git

	* lisp/version.el (emacs-repository-get-version):
	Parse .git/packed-refs if it exists.
	Problem reported by Martin Rudalics in:
	https://lists.gnu.org/r/emacs-devel/2016-05/msg00554.html

2016-06-01  Michael Albinus  <michael.albinus@gmx.de>

	Minor change in tramp.texi

	* doc/misc/tramp.texi (Password handling): Do not discuss
	anymore how to get password-cache.el.  It is bundled with
	Emacs.

2016-06-01  Alan Mackenzie  <acm@muc.de>

	Correct fontification and indentation of C++'s "constexpr" expressions

	* lisp/progmodes/cc-langs.el (c-type-modifier-kwds): Remove "constexpr".
	(c-modifier-kwds): Add "constexpr".

2016-05-31  Ikumi Keita  <ikumi@ikumi.que.jp>

	Cosmetic change to kinsoku-eol.  (tiny change)

	* lisp/international/kinsoku.el (kinsoku-eol): Make the
	order of characters match with the comments.

2016-05-31  Ikumi Keita  <ikumi@ikumi.que.jp>

	Add HIRAGANA ITERATION MARK to japanese-kana-table.  (tiny change)

	* lisp/language/japan-util.el (japanese-kana-table): Add an
	entry for HIRAGANA ITERATION MARK (U+309D).
	(japanese-alpha-numeric-table): Fix docstring.

2016-05-31  K. Handa  <handa@gnu.org>

	Fix incomplete handling of translation table in a coding system.

	* src/coding.c (get_translation): New arg NCHARS.  Even if TRANS
	is an alist, return a character or a vector of character.
	(produce_chars): Adjust for the above change.
	(consume_chars): Likewise.

2016-05-31  Michael Albinus  <michael.albinus@gmx.de>

	Improve robustness for out-of-band copy in Tramp

	* lisp/net/tramp-adb.el (tramp-adb-execute-adb-command)
	* lisp/net/tramp-cmds.el (tramp-append-tramp-buffers)
	* lisp/net/tramp-gvfs.el (tramp-gvfs-do-copy-or-rename-file):
	Cosmetic changes.

	* lisp/net/tramp-sh.el (tramp-do-copy-or-rename-file-out-of-band):
	Use local `default-directory'.  Simplify command to send.
	Don't check return code, this was already done in
	`tramp-process-actions'.
	(tramp-get-inline-coding): Don't set `default-directory'.

	* lisp/net/tramp.el (tramp-action-out-of-band):
	Throw `out-of-band-failed'.
	(tramp-process-actions): Handle `out-of-band-failed'.
	(tramp-call-process, tramp-call-process-region):
	Use local `default-directory'.

2016-05-31  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	788c9b6 ; Spelling fix
	25c4a30 * lisp/recentf.el (recentf-dialog-mode-map): Remove follow-li...
	0992ec3 Correct cl-flet usage (Bug#22317)
	50caae3 Release MH-E manual version 8.6
	602bb40 Update MH-E's documentation about HTML renderers
	89018f0 Fx the we->the typo
	845ee57 Restore frames into the current display by default
	ee28b4c * lisp/recentf.el (recentf-open-files-item): Quick fix for (b...
	01c3cd1 etc/TODO: Remove out-of-place issue
	5e18486 Clarify doc string of 'file-name-sans-extension'
	bffda22 Fix the MSDOS build
	f907f98 * lisp/progmodes/elisp-mode.el (elisp-function-argstring): Ca...
	1a2ffd0 * src/dired.c (Ffile_name_all_completions): Doc fix.  (Bug#23...
	f7ffc4b Fix infloop in 'number-sequence'
	4ab2673 ; Spelling and punctuation fixes in comments
	71c152e * lisp/emacs-lisp/find-func.el (find-function-library):

2016-05-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/autoload.el: Use radix-tree.

	 (autoload--make-defs-autoload): Rewrite.
	(autoload--split-prefixes-1): Remove.
	(autoload-def-prefixes-max-entries): Rename from
	autoload-defs-autoload-max-size.
	(autoload-popular-prefixes): Remove.
	(autoload-def-prefixes-max-length): New const.

	* lisp/emacs-lisp/radix-tree.el: New file.

2016-05-30  Ken Brown  <kbrown@cornell.edu>

	* src/conf_post.h (SYSTEM_PURESIZE_EXTRA) [CYGWIN]: Increase.

2016-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Omit IF_LINT code that no longer seems needed

	Nowadays GCC is smarter, or the Emacs code has mutated, or both,
	and now is as good a time as any to remove uses of IF_LINT that
	now seem to be unnecessary.
	* lib-src/emacsclient.c (set_local_socket):
	* lib-src/movemail.c (main) [MAIL_USE_MAILLOCK && HAVE_TOUCHLOCK]:
	* src/buffer.c (fix_start_end_in_overlays, fix_overlays_before):
	* src/casefiddle.c (casify_region):
	* src/charset.c (load_charset_map):
	* src/coding.c (decode_coding_object, encode_coding_object):
	* src/data.c (Fmake_variable_buffer_local, Fmake_local_variable)
	(cons_to_unsigned, cons_to_signed):
	* src/frame.c (make_frame, x_set_frame_parameters):
	* src/keyboard.c (read_event_from_main_queue):
	* src/regex.c (regex_compile):
	* src/syntax.c (back_comment):
	* src/window.c (Frecenter):
	* src/xfaces.c (Fx_list_fonts):
	Remove IF_LINT that no longer seems necessary.
	* src/image.c (png_load_body, jpeg_load_body): Simplify use of IF_LINT.
	* src/keyboard.c (read_char): Use IF_LINT (volatile) rather than
	a pragma dance to pacify GCC -Wclobbered.
	* src/xdisp.c (x_produce_glyphs): Rewrite to avoid need for IF_LINT.

	* src/xterm.c (x_connection_closed): Now _Noreturn, which should
	mean we do not need IF_LINT any more.
	(x_io_error_quitter): Now _Noreturn.  Put an 'assume (false)’
	at the end, to forestall warnings from older compilers.

2016-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Port --enable-gcc-warnings to Cygwin, FreeBSD

	These platforms have a bug where _Noreturn is empty when 'lint' is
	defined.  Problem reported by Ken Brown (Bug#23640).
	* configure.ac (GCC_LINT): Rename from 'lint'.
	* src/conf_post.h (IF_LINT): Use GCC_LINT, not just 'lint’.

2016-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	Update from gnulib

	This incorporates:
	2016-05-30 Use GCC_LINT, not lint
	2016-05-29 secure_getenv: Port to many more platforms.
	* doc/misc/texinfo.tex, lib/secure_getenv.c, lib/verify.h:
	* m4/secure_getenv.m4: Copy from gnulib.

2016-05-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/pcase.el: Undo last change's spurious changes

	* lisp/emacs-lisp/pcase.el (pcase-mutually-exclusive-predicates): Add `atom'.

2016-05-30  Ken Brown  <kbrown@cornell.edu>

	* src/regex.c (IF_LINT): Remove; it’s in conf_post.h

2016-05-30  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#23631 for Tramp

	* lisp/net/tramp-adb.el (tramp-adb-handle-file-name-all-completions)
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-name-all-completions)
	* lisp/net/tramp-sh.el (tramp-sh-handle-file-name-all-completions):
	Fix caching problems.

	* lisp/net/tramp-sh.el (tramp-perl-file-name-all-completions): Simplify.

	* lisp/net/tramp-smb.el (tramp-smb-handle-directory-files):
	Move duplicate deletion ...
	(tramp-smb-handle-file-name-all-completions): ... here.

	* lisp/net/tramp.el (tramp-handle-file-name-completion):
	Handle `completion-ignored-extensions'.  (Bug#23631)

	* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
	Test also `completion-regexp-list' and `completion-ignored-extensions'.

2016-05-29  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/wid-edit.el (link): Remove :follow-link property (bug#22434)

	* lisp/recentf.el (recentf-dialog-mode-map): Remove unecessary mapping.

2016-05-29  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Fix up remainder of the mml property change

	* lisp/gnus/message.el (message-send-mail): Use the renamed
	mml-buffer-substring-no-properties-except-some function.
	(message-send-news): Ditto.

2016-05-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow preserving EXIF rotations when sending HTML messages

	* lisp/gnus/mml.el (mml--possibly-alter-image): Allow image
	rotation if you have exiftool installed and the image format
	supports it.
	(mml-expand-html-into-multipart-related): Use it.
	(mml-buffer-substring-no-properties-except-some): Renamed and
	copy display properties, too.

2016-05-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Make message-toggle-image-thumbnails work better

	* lisp/gnus/message.el (message-toggle-image-thumbnails): Use
	`insert-image' instead of `put-image' to make it possible to
	edit the resulting text in a sensible manner.

2016-05-29  Alan Mackenzie  <acm@muc.de>

	Rationalize the use of c-new-BEG and c-new-END in CC Mode.

	Remove the now redundant c-old-BOM and c-old-EOM.

	* lisp/progmodes/cc-engine.el (c-macro-cache-syntactic): Change and simplify
	meaning.
	(c-macro-cache-no-comment): New variable.
	(c-invalidate-macro-cache, c-beginning-of-macro, c-end-of-macro): incorporate
	the new c-macro-cache-no-comment.
	(c-syntactic-end-of-macro): Make better use of c-macro-cache-syntactic.
	(c-no-comment-end-of-macro): New function.

	* lisp/progmodes/cc-langs.el (c-before-font-lock-functions): Add
	c-extend-font-lock-region-for-macros to C/C++/ObjC value.

	* lisp/progmodes/cc-mode.el (c-old-BOM, c-old-EOM): Remove.
	(c-extend-region-for-CPP): Put results in c-new-BEG/END rather than
	c-old-BOM/EOM.
	(c-extend-font-lock-region-for-macros): Simplify meaning, no longer returning
	a cons for the new region, since the function is now called as an after-change
	function.  No longer adjust c-new-END for the length of inserted/deleted
	text.  Move the size restrictions on macros to here from
	c-neutralize-syntax-in-and-mark-CPP.
	(c-neutralize-syntax-in-and-mark-CPP): No longer adjust c-new-BEG/END here.
	Use c-no-comment-end-of-macro rather than c-syntactic-end-of-macro to find the
	upper boundary to "neutralize" syntactically obtrusive characters.
	(c-change-expand-fl-region): Don't set c-new-END to next BOL when already at
	one.

2016-05-28  Ken Brown  <kbrown@cornell.edu>

	Avoid compiler warnings

	* src/cygw32.c (chdir_to_default_directory): Use "void" as
	argument list.  Use SSDATA instead of SDATA.

	* src/unexcw.c (fixup_executable): Use %td as format specifier for
	argument of type ptrdiff_t.  Use %zu for argument of type size_t.

2016-05-28  Eli Zaretskii  <eliz@gnu.org>

	Fix 'next-line' and 'previous-line' during keyboard macro

	* lisp/simple.el (line-move-visual): Handle the case when point
	moves outside of the visible portion of the buffer while executing
	a keyboard macro.  (Bug#13452)  (Bug#23551)  (Bug#23555)

2016-05-28  Alan Mackenzie  <acm@muc.de>

	C++ Mode: attribute in class declaration fouls up indentation.  Fix!

	* lisp/progmodes/cc-engine.el (c-looking-at-decl-block): Add code to skip
	back over noise clauses and attribute clauses.

	* lisp/progmodes/cc-langs.el (c-paren-nontype-key): New language variable.

2016-05-28  Ken Olum  <kdo@cosmos.phy.tufts.edu>

	Prevent locked-file errors in Rmail

	* lisp/mail/rmail.el (rmail-get-new-mail-1): Lock file before
	calling 'rmail-insert-inbox-text'.  Unlock if
	'rmail-insert-inbox-text' doesn't modify buffer.
	(rmail-insert-inbox-text): Remove lock-checking code.  (Bug#17706)

2016-05-28  Michael Albinus  <michael.albinus@gmx.de>

	Sync with Tramp repository.

	* lisp/net/tramp-adb.el (tramp-adb-handle-start-file-process):
	* lisp/net/tramp-sh.el (tramp-sh-handle-start-file-process)
	* lisp/net/tramp-smb.el (tramp-smb-handle-start-file-process):
	Create BUFFER if it doesn't exist.  Reported by Nikolay
	Kudryavtsev <nikolay.kudryavtsev@gmail.com>.

	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-attributes)
	(tramp-gvfs-file-attributes-with-gvfs-ls-regexp)
	(tramp-gvfs-file-attributes-with-gvfs-info-regexp): New defconst.
	(tramp-gvfs-get-directory-attributes)
	(tramp-gvfs-get-root-attributes)
	(tramp-gvfs-get-file-attributes): New defun.
	(tramp-gvfs-handle-file-attributes)
	(tramp-gvfs-handle-file-name-all-completions): Use them.
	(tramp-gvfs-handle-file-directory-p): Use `file-truename'.
	(tramp-gvfs-maybe-open-connection): Set :noquery flag for process.
	(tramp-gvfs-send-command): Add locale settings to `process-environment'.
	(top): Suppress D-Bus error messages during zeroconf initialization.

	* lisp/net/tramp.el (tramp-unknown-id-string)
	(tramp-unknown-id-integer): New defconst.
	(tramp-check-cached-permissions)
	* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-attributes)
	* lisp/net/tramp-sh.el (tramp-do-file-attributes-with-ls)
	(tramp-convert-file-attributes, tramp-get-remote-uid)
	(tramp-get-remote-gid): Use them.

	* lisp/net/tramp-sh.el (tramp-display-escape-sequence-regexp):
	Rename from `tramp-color-escape-sequence-regexp'.
	(tramp-sh-handle-insert-directory)
	(tramp-convert-file-attributes): Adapt callees.
	(tramp-device-escape-sequence-regexp): New defconst.
	(tramp-wait-for-output): Use it.  Reported by Matthías Páll
	Gissurarson <icetritlo@gmail.com>.

	* lisp/net/tramp-smb.el (tramp-smb-handle-file-name-all-completions):
	Simplify.

	* test/lisp/net/tramp-tests.el (tramp-test26-process-file)
	(tramp-test28-shell-command):
	Use `tramp-display-escape-sequence-regexp'.

2016-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t document declare-function internals

	Suggested by Stefan Monnier in:
	https://lists.gnu.org/r/emacs-devel/2016-05/msg00618.html
	* doc/lispref/functions.texi (Declaring Functions):
	* lisp/subr.el (declare-function):
	* lisp/emacs-lisp/bytecomp.el:
	(byte-compile-macroexpand-declare-function):
	Document as (fn file &optional arglist fileonly)
	even though it is really (fn file &rest args).

2016-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	* src/puresize.h (BASE_PURESIZE): Increase it some more.

2016-05-27  Glenn Morris  <rgm@gnu.org>

	* src/puresize.h (BASE_PURESIZE): Increase it by a little bit.

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Tweak previous to
	avoid build failure.

2016-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Port to platforms where rlim_max < 0

	* src/emacs.c (main): Do not treat a negative rlim_max as a limit;
	this can happen if a special value like RLIM_INFINITY is negative.

2016-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Robustify stack-size calculation

	* src/emacs.c: Include getpagesize.h.
	(main): Check for integer overflow when computing stack size.
	Round new rlim_cur to pagesize boundary on all platforms, as this
	is easy and would have prevented Bug#23622.  If setrlimit
	fails, use current limit to determine re_max_failures.

2016-05-27  Ken Brown  <kbrown@cornell.edu>

	Adjust filenotify-tests on Cygwin

	* test/lisp/filenotify-tests.el (file-notify--test-timeout):
	Remove special case for Cygwin.
	(file-notify-test07-backup): Update expected results on Cygwin.

2016-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	Improve define-function omitted-arg documentation

	* doc/lispref/functions.texi (Declaring Functions):
	* lisp/subr.el (declare-function):
	Be clearer when documenting omitted args for define-function.

2016-05-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/cl-macs.el (cl-defstruct): Add docstring to accessors.

2016-05-27  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/subr.el (definition-prefixes): Expand docstring

	* lisp/emacs-lisp/autoload.el (autoload--split-prefixes):
	Remove unused function.

2016-05-27  Phillip Lord  <phillip.lord@russet.org.uk>

	Fix broken viper deactivation

	* lisp/emulation/viper.el (viper--deactivate-advice-list): Destructure
	  args to advice-remove.
	  (viper--advice-add): Use cons not list.

	Addresses bug#23625

2016-05-27  Mark Oteiza  <mvoteiza@udel.edu>

	Preserve buffer point in windows by default (Bug#4041).

	* doc/lispref/windows.texi: Mention new default.
	* etc/NEWS: Mention new default.
	* lisp/window.el (switch-to-buffer-preserve-window-point): Default to t.

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Fix byte-compiler pacification for declare-function

	Problem reported by Michael Heerdegen in:
	https://lists.gnu.org/r/emacs-devel/2016-05/msg00590.html
	* lisp/emacs-lisp/bytecomp.el:
	(byte-compile-macroexpand-declare-function):
	Revert signature to previous value.
	* lisp/subr.el (declare-function): Change signature to
	match the reverted signature used in the byte compiler.

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Update texinfo.tex

	This fixes Bug#23611 in a different (and presumably better) way.
	* doc/misc/texinfo.tex: Update from gnulib.

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify 'make check-declare'

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Repair damage from emacs-25 merge

	* test/lisp/character-fold-tests.el:
	Remove, as it was renamed to test/lisp/char-fold-tests.el.
	* test/lisp/emulation/viper-tests.el:
	Rename from test/automated/viper-tests.el.

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	c3489d0 * lisp/w32-fns.el (set-message-beep, w32-get-locale-info) (w3...
	a4d882c Correct old cell name unbinding when renaming cell.
	6c12c53 Merge branch 'emacs-25' of git.sv.gnu.org:/srv/git/emacs into...
	0be6725 Document problem: slow screen refresh on missing font.
	853b9b9 * admin/admin.el (add-release-logs): Basic check of existing ...
	5fa80cf * build-aux/gitlog-to-emacslog: Handle empty generated Change...
	3c79e51 * admin/admin.el (add-release-logs): Generate ChangeLog if ne...
	42275df * doc/misc/texinfo.tex: Revert previous change (Bug#23611).
	3f4a9d9 * admin/authors.el (authors): First update the ChangeLog.
	897fb6f ; 'Changes from the pre-25.1 API' copyedits
	825ca25 Rename vc-stay-local back to vc-cvs-stay-local
	4efb3e8 * doc/emacs/files.texi (Comparing Files): * doc/emacs/trouble...
	b995d1e * doc/misc/eww.texi (Advanced): Fix xref.
	2e589c0 Fix cross-references between manuals
	f3d2ded * doc/misc/vhdl-mode.texi (Sample Init File): Rename node to ...
	906c810 ; * admin/release-process: Move etc/HISTORY from here... ; * ...
	bea1b65 * admin/admin.el (add-release-logs): Also update etc/HISTORY.
	503e752 ; * CONTRIBUTE: Fix a typo.
	fbfd478 Avoid aborting due to errors in arguments of 'set-face-attrib...
	bdfbe6d ; * admin/release-process: Copyedits.
	44a6aed ; * test/automated/data-tests.el: Standardize license notice.
	c33ed39 ; * test/automated/viper-tests.el: Standardize license notice.
	df4a14b Add automated test for viper-tests.el
	c0139e3 Fix viper undo breakage from undo-boundary changes
	920d76c Fix reference to obsolete fn ps-eval-switch
	18a9bc1 Do not trash symlinks to init file
	2671179 Don't print the "decomposition" line for control chars in wha...
	869092c Bring back xterm pasting with middle mouse
	5ab0830 Provide workaround for xftfont rendering problem
	c9f7ec7 * lisp/desktop.el: Disable restore frameset if in non-graphic...
	30989a0 Mention GTK+ problems in etc/PROBLEMS
	421e3c4 * lisp/emacs-lisp/package.el (package-refresh-contents):
	dadfc30 Revert "epg: Add a way to detect gpg1 executable for tests"
	e41a5cb Avoid errors with Czech and Slovak input methods
	d4ae6d7 epg: Add a way to detect gpg1 executable for tests
	ebc3a94 * lisp/emacs-lisp/package.el: Fix free variable warnings.
	6e71295 * lisp/emacs-lisp/package.el (package--with-response-buffer):
	c45d9f6 Improve documentation of 'server-name'
	3b5e38c Modernize ASLR advice in etc/PROBLEMS
	1fe1e0a * lisp/char-fold.el: Rename from character-fold.el.

2016-05-26  Eli Zaretskii  <eliz@gnu.org>

	Avoid byte-compiler warnings due to 'declare-function'

	* lisp/w32-fns.el (set-message-beep, w32-get-locale-info)
	(w32-get-valid-locale-ids):
	* lisp/progmodes/js.el (ido-mode): Specify arglist in
	'declare-function' forms, to avoid byte-compiler warnings.

2016-05-26  Glenn Morris  <rgm@gnu.org>

	* lisp/info.el (Info-default-directory-list): Don't check /share,info.

	No-one puts info pages there.  If /share does exist, it's likely to
	contain remote file systems where access could be slow.

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	2d76405 etc/AUTHORS: Update the AUTHORS file

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	06cb28f Fix bug#23462: Crash when iconifying frame on OS X.

2016-05-26  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	939eb75 Fix bug in default setting of 'ps-paper-type'

2016-05-26  Glenn Morris  <rgm@gnu.org>

	* lisp/info.el (Info-default-directory-list): Remove obsolete suffixes.

2016-05-26  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#23614.

	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	Let-bind `process-coding-system-alist' in order to suppress
	the value for "cmdproxy".

	* lisp/net/tramp.el (tramp-encoding-shell):
	`w32-shell-name' is a function.
	(tramp-encoding-command-switch)
	(tramp-encoding-command-interactive): Use `w32-shell-dos-semantics'.

	* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
	Suppress some tests on MS Windows.  (Bug#23614)

2016-05-26  Stephen Berman  <stephen.berman@gmx.net>

	hl-line.el: Fix flickering of highlighted line (bug#23510)

	* lisp/hl-line.el (hl-line-maybe-unhighlight)
	(global-hl-line-highlight-all)
	(global-hl-line-maybe-unhighlight): New functions.
	(hl-line-overlay-buffer): New variable.
	(hl-line-mode): Use it.  Replace hl-line-unhighlight on
	pre-command-hook by hl-line-maybe-unhighlight on
	post-command-hook, to prevent hl-line from flickering.
	Adjust document string.
	(global-hl-line-mode): Use global-hl-line-highlight-all to
	simultaneously highlight the current line in all live windows.
	Replace global-hl-line-unhighlight on pre-command-hook by
	global-hl-line-maybe-unhighlight on post-command-hook, to
	prevent global-hl-line from flickering.  Remove
	global-hl-line-unhighlight from change-major-mode-hook on
	disabling the mode.  Adjust document string.

2016-05-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	Make autoloads populate a new definition-prefixes table

	* lisp/subr.el (definition-prefixes): New hash table.
	(register-definition-prefixes): New function.

	* lisp/emacs-lisp/autoload.el (autoload-compute-prefixes): New var.
	(autoload--split-prefixes-1, autoload--split-prefixes)
	(autoload--make-defs-autoload): New functions.
	(autoload-defs-autoload-max-size, autoload-popular-prefixes): New vars.
	(autoload-generate-file-autoloads): Obey autoload-compute-prefixes.
	(update-directory-autoloads): Don't touch loaddefs.el if the set of
	autoloads hasn't changed (i.e. if only the timestamp would change).

	* lisp/loadup.el: Purify definition-prefixes.

	* lisp/w32-fns.el: Keep name space clean.
	(w32-set-default-process-coding-system): Rename from
	set-default-process-coding-system.
	(w32-set-system-coding-system): Rename from set-w32-system-coding-system.

2016-05-24  Ken Brown  <kbrown@cornell.edu>

	Allow network-stream-tests to work for out-of-tree builds

	* test/lisp/net/network-stream-tests.el
	(network-stream-tests--datadir): New defconst.
	(make-tls-server): Use it.

2016-05-24  Ken Brown  <kbrown@cornell.edu>

	Fix failing echo-server-nowait test

	* test/lisp/net/network-stream-tests.el (echo-server-nowait):
	Specify IPv4 for the client, to match the family of the server.
	(Bug#23606)

2016-05-24  Ken Brown  <kbrown@cornell.edu>

	Allow shr-tests to work for out-of-tree builds

	* test/lisp/net/shr-tests.el (shr-tests--datadir): New defconst.
	(shr-test, rendering): Use it.

2016-05-24  Ken Brown  <kbrown@cornell.edu>

	Update allowable arguments for open-network-stream

	* src/coding.c (Ffind_operation_coding_system): Allow t as a
	target for open-network-stream.  (Bug #23540)

2016-05-24  Dmitry Gutov  <dgutov@yandex.ru>

	Make js-mode's syntax highlighting work again

	* lisp/progmodes/js.el (js-mode): Fix the assigned
	font-lock-defaults value (bug#23603).

2016-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-mode.el: Add minor comments

	(c-change-expand-fl-region): Mark args as unused.

2016-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/url/url-http.el: Use lexical-binding

	(url-http-simple-after-change-function): Use buffer-size rather than `nd'.
	(url-http-wait-for-headers-change-function): Remove unused var
	`content-length'.
	(url-http): Remove unused vars `host' and `port'.

2016-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/widget.el (define-widget): Use `declare' (which does work now).

	(widget-plist-member): Mark as obsolete.

2016-05-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/image.el: Use lexical-binding

	(image-scaling-factor, imagemagick-types-inhibit)
	(imagemagick-enabled-types): Remove redundant :group.
	(image--get-image): Apply de-Morgan and use car-safe.
	(image-compute-scaling-factor): Use the argument.

2016-05-23  Glenn Morris  <rgm@gnu.org>

	* lisp/image.el (image--get-image): Remove nonsensical code.

	* lisp/image.el (image--get-image): Avoid requiring a library for
	one trivial operation.

2016-05-23  Paul Eggert  <eggert@cs.ucla.edu>

	Don’t use only last protocol from getaddrinfo

	Problem reported by Ken Brown in:
	https://lists.gnu.org/r/emacs-devel/2016-05/msg00483.html
	* src/process.c (conv_addrinfo_to_lisp): New function.
	(connect_network_socket): Arg is now a list of addrinfos, not
	merely IP addresses.  All uses changed.  Use protocol from
	each addrinfo.
	(Fmake_network_process): Accumulate protocols into addrinfos
	rather than just using the last one found.
	(check_for_dns): Accumulate protocols here, too.
	* src/process.h (struct Lisp_Process): Remove ai_protocol;
	no longer needed.

2016-05-23  Paul Eggert  <eggert@cs.ucla.edu>

	Fix seq requirement that broke bootstrap

	* lisp/image.el (image--get-image): Require seq here, not at the
	top level, to avoid ‘(require seq) while preparing to dump’ while
	bootstrapping.  Suggested by Tino Calancha in:
	https://lists.gnu.org/r/emacs-devel/2016-05/msg00477.html

2016-05-22  Nicolas Petton  <nicolas@petton.fr>

	Add missing dependencies to seq.el

	* lisp/emacs-lisp/find-func.el:
	* lisp/ibuffer.el:
	* lisp/image.el: Require seq.

2016-05-22  Alp Aker  <alp@food52.com>

	* src/process.c (SOCK_NONBLOCK): Fix typo.

2016-05-22  Etienne Prud’homme  <e.e.f.prudhomme@gmail.com>

	Add completion of colors in CSS mode

	* lisp/textmodes/css-mode.el (css-value-class-alist): Add CSS colors
	from "CSS Color Module Level 3".

	* test/lisp/textmodes/css-mode-tests.el (css-test-property-values):
	Update test.

2016-05-21  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer SOCK_NONBLOCK to O_NONBLOCK

	* src/process.c (SOCK_NONBLOCK): Define to 0 if not already defined.
	(connect_network_socket): Create the socket with SOCK_NONBLOCK, to
	avoid an fcntl with O_NONBLOCK if SOCK_NONBLOCK works.  Put the
	SOCK_DGRAM check a bit later, to keep the logic cleaner, as
	the order does not matter here.

2016-05-21  Alan Third  <alan@idiocy.org>

	Fix bug#16856, cursor leaves garbage in fringe on OS X.

	* src/nsterm.m (ns_draw_window_cursor): Prevent the cursor from
	being drawn outside the text area.

2016-05-21  Eli Zaretskii  <eliz@gnu.org>

	Fix compiler warnings in the MinGW build

	* configure.ac [mingw32]: Don't add -Wpointer-sign, and add
	-Wno-pointer-sign, to keep the noise level down.

	* nt/mingw-cfg.site (gl_cv_warn_c__Wredundant_decls): Disable
	-Wredundant-decls, as that produces a lot of noise due to
	redeclaration of time-related functions by gnulib.
	* nt/runemacs.c (set_user_model_id): Fix argument type of
	'SetCurrentProcessExplicitAppUserModelID'.

	* src/image.c (x_create_bitmap_from_file) [HAVE_NTGUI]: Don't
	declare 'dpyinfo', as it is unused.
	(xpm_load): Fix warnings about pointer signedness.
	* src/w32proc.c (IsValidLocale, init_winsock): Remove redundant
	prototypes.
	(sys_spawnve): Avoid warnings about discarding 'const' qualifier.
	(sys_select): Provide prototype.
	(g_b_init_compare_string_w): Move declaration to file scope.
	* src/w32heap.c (dumped_data_commit): Now static.
	(FREEABLE_P): Avoid warnings about pointer comparison with integer.
	(mmap_realloc): Cast to 'char *' for arithmetics on void pointers.
	* src/w32console.c (ctrl_c_handler, sys_tputs, sys_tgetstr)
	(evalcost, cmputc, cmcheckmagic, cmcostinit, cmgoto, Wcm_clear):
	Provide prototypes.
	* src/w32.c (globals_of_w32, conv_sockaddr_to_lisp): Remove
	redundant prototypes.
	(w32_get_internal_run_time, map_w32_filename): Provide prototype.
	(init_environment, sys_ctime): Avoid warnings about discarding
	'const' qualifier.
	Include utimens.h.
	(sys_ctime, sys_chdir, sys_creat, sys_fopen, sys_mkdir)
	(sys_open, sys_rename, sys_rmdir, is_slow_fs, term_winsock)
	(sys_close, sys_dup2, sys_read, sys_write, sys_localtime): Provide
	prototypes.
	(sys_rename_replace): Use %d to avoid compiler warnings.
	(_wsa_errlist): Make the message text 'const char *', to avoid
	compilation warnings.
	(dynlib_reset_last_error): Move prototype to file scope.
	(w32_get_resource): First argument is now 'const char *'.
	* src/w32uniscribe.c (syms_of_w32uniscribe): Provide prototype.
	(otf_features): Second argument is no 'const char *'.
	* src/w32term.c (free_frame_menubar, x_wm_set_size_hint)
	(x_set_window_size): Remove redundant prototypes.
	(XChangeGC, XGetGCValues, w32_draw_underwave)
	(w32_draw_rectangle, w32_shift_glyphs_for_insert, x_mouse_leave)
	(x_calc_absolute_position, x_destroy_window): Now static.
	(menubar_selection_callback): Move prototype to file scope.
	* src/w32font.c (g_b_init_get_glyph_outline_w): Remove redundant
	declaration.
	(w32_to_x_charset): Fix warnings about discarding 'const' qualifier.
	(w32font_full_name): Fix warnings about implicit conversion of
	'float' to 'double'.
	* src/w32reg.c (w32_get_rdb_resource): Fix warnings about
	discarding 'const' qualifier.
	* src/w32menu.c (syms_of_w32menu, globals_of_w32menu)
	(set_frame_menubar): Remove redundant prototypes.
	(menubar_selection_callback, w32_menu_display_help): Provide
	prototypes.
	(simple_dialog_show): Avoid warnings about discarding 'const'
	qualifier.
	* src/w32fns.c (syms_of_w32fns, globals_of_w32fns)
	(free_frame_menubar, w32_strerror, x_set_menu_bar_lines)
	(x_set_tool_bar_lines, x_set_internal_border_width): Remove
	redundant prototypes.
	(current_popup_menu): Remove redundant declaration.
	(colormap_t): Member 'name' is now 'const char *'.
	(add_system_logical_colors_to_map): Fix signed/unsigned warnings.
	(x_decode_color, x_set_border_pixel)
	(x_clear_under_internal_border, x_set_name, hook_w32_key)
	(reset_w32_kbdhook_state, deliver_wm_chars, w32_backtrace): Now
	static.
	(w32_load_cursor, w32_key_to_modifier, map_keypad_keys)
	(w32_msg_worker, w32_last_error): Provide prototypes.
	(funhook, lookup_vk_code): Avoid warnings about missing
	parentheses.
	(x_default_font_parameter, Fw32_notification_notify): Avoid
	warnings about discarding 'const' qualifier.
	(Fx_create_frame): Avoid warnings about empty body of 'else'.
	(x_screen_planes): Ifdef away unused function.
	(Fx_show_tip): Remove unused variables.
	(Fw32_battery_status): Avoid warnings about implicit promotion
	from float to double.
	(Fw32_notification_notify): Initialize 'timeout'.
	* src/profiler.c (profiler_cpu_running) [HAVE_ITIMERSPEC]: Only
	define the TIMER_SETTIME_RUNNING value if it will be used.
	* src/w32notify.c (send_notifications): Ifdef away an empty if
	clause.  Remove unused variable.
	(watch_end, watch_completion): Provide prototypes.
	* src/sound.c (sound_warning) [WINDOWSNT]: Don't define: unused.
	* src/callproc.c (child_setup, getenv_internal_1) [WINDOWSNT]: Fix
	warning with pointer signedness.
	* src/gnutls.c (gnutls_x509_crt_get_signature)
	(gnutls_alert_send_appropriate) [WINDOWSNT]: Don't define, and
	don't load them from the GnuTLS library, as they are no longer
	used.
	* src/process.c (DATAGRAM_CHAN_P) [!DATAGRAM_SOCKETS]: Don't
	define, as it's unused.
	* src/unexw32.c (open_input_file, open_output_file)
	(close_file_data): Remove redundant prototypes.
	(_start): provide prototype.
	(mainCRTStartup): Move prototype to file level.
	(find_section): Use type-cast to shut up compiler warnings.
	(offset_to_section, relocate_offset): Now static.
	(find_section): First argument is now a 'const char *'.
	(offset_to_section): Ifdef away, as it's unused.
	* src/w32heap.h (find_section): Adjust prototype.
	* src/dynlib.c (dynlib_reset_last_error): Provide prototype.
	* src/dired.c (directory_files_internal_w32_unwind): Avoid
	warnings about missing prototypes.
	(is_slow_fs) [WINDOWSNT]: Provide prototype at file level.
	(directory_files_internal) [WINDOWSNT]: Fix warnings about pointer
	signedness.
	* src/fileio.c (Ffile_writable_p, Ffile_regular_p) [WINDOWSNT]:
	Fix warnings about pointer signedness.
	* src/filelock.c (WTMP_FILE) [WINDOWSNT]: Don't define, it's
	unused.
	* src/sysdep.c (_getpid): Remove redundant prototype.
	(sys_subshell) [DOS_NT]: Don't define 'status', it's unused.
	[!MSDOS]: Don't define 'st', it's unused.
	(init_sys_modes) [DOS_NT]: Don't define 'terminal', it's unused.
	(str_collate) [WINDOWSNT]: Avoid warnings about pointer signedness.
	* src/keyboard.c (tty_read_avail_input) [WINDOWSNT]: Don't define
	n_to_read, as it is not used.
	(MAX_ENCODED_BYTES) [WINDOWSNT]: Don't define, as it's unused.
	* src/w32font.h (syms_of_w32font): Remove redundant prototype.
	* src/xfaces.c (x_display_info) [HAVE_NTGUI]: Remove unused macro.
	* src/term.c (init_tty) [DOS_NT]: Ifdef away variables that are
	not used by DOS_NT builds, to avoid compiler warnings.
	* src/menu.c (current_popup_menu) [HAVE_NTGUI]: Remove redundant
	declaration.
	* src/dispnew.c (init_display) [WINDOWSNT]: Use type-cast to shut
	up compiler warnings.
	* src/w32term.h (x_set_window_size, x_get_focus_frame)
	(x_make_frame_visible, x_make_frame_invisible, x_iconify_frame)
	(x_set_frame_alpha, x_activate_menubar, x_bitmap_icon)
	(x_free_frame_resources, x_real_positions)
	(display_x_get_resource): Remove redundant prototypes.

	* lib-src/ntlib.c (sys_ctime, sys_fopen, sys_chdir, mkostemp)
	(sys_rename, gettimeofday): Provide prototypes.
	* lib-src/ntlib.h (getuid, geteuid, mkostemp): Remove redundant
	declarations.
	* lib-src/emacsclient.c (w32_getenv): Argument is now 'const char *'.
	(xstrdup, w32_get_resource, w32_window_app, w32_execvp, ttyname)
	(close_winsock, initialize_sockets, w32_set_user_model_id)
	(w32_find_emacs_process, w32_give_focus) [WINDOWSNT]: Add
	prototypes.
	(w32_get_resource) [WINDOWSNT]: Fix a warning about signedness
	difference.
	(w32_set_user_model_id): Update prototype of
	SetCurrentProcessExplicitAppUserModelID to avoid compiler
	warnings.
	(start_daemon_and_retry_set_socket) [WINDOWSNT]: Use type-cast to
	shut up compiler warnings.
	* lib-src/etags.c (MAXPATHLEN) [WINDOWSNT]: Remove unused macro.

2016-05-21  Eli Zaretskii  <eliz@gnu.org>

	Fix 'vertical-motion' and 'posn-at-point' under 'visual-line-mode'

	* src/xdisp.c (move_it_in_display_line_to): Don't assume we can
	wrap on a whitespace character if it's followed by another
	whitespace character.  When returning under WORD_WRAP for a screen
	line that is continued, restore to wrap point when atpos/atx
	position would be displayed on the next screen line due to
	line-wrap.  (Bug#23570)

2016-05-21  Puneeth Chaganti  <punchagan@muse-amuse.in>

	* lisp/svg.el (svg-create): Fix a typo: xmlsn -> xmlns.  (Bug#23589)

2016-05-20  Andrew Hyatt  <ahyatt@gmail.com>

	Added tests for dos unibyte decoding.

	The underlying bug was previously fixed by Eli Zaretskii in commit
	c8109d9c4057d8cac79e2c139758cadd410e7446.

2016-05-20  Philipp Stephani  <phst@google.com>

	Fix handling of ‘mouse-on-link-p’.

	If ‘mouse-on-link-p’ returns a string or vector, the first element
	is to be used as new event.  Translation to ‘mouse-2’ should only
	happen if the return value is not a string or vector.  See
	docstring of ‘mouse-on-link-p’ and Bug#23288.

	* lisp/mouse.el (mouse--down-1-maybe-follows-link): Process return
	value of ‘mouse-on-link-p’ according to documentation.

	* test/lisp/mouse-tests.el (bug23288-use-return-value)
	(bug23288-translate-to-mouse-2): Tests for Bug#23288.

2016-05-20  Daiki Ueno  <ueno@gnu.org>

	epg: Add a way to detect gpg1 executable for tests

	Fixes bug#23561.

	* test/automated/epg-tests.el
	(epg-tests-program-alist-for-passphrase-callback): New
	constant.
	(epg-tests-find-usable-gpg-configuration): New function,
	renamed from `epg-tests-gpg-usable'.  All callers changed.
	(epg-tests-gpg-usable): Remove.

	* lisp/epg-config.el (epg-config--program-alist): Factor out
	constructor element to...
	(epg-config--configuration-constructor-alist): ...here.
	(epg-find-configuration): Rename FORCE argument to NO-CACHE,
	and add PROGRAM-ALIST argument.

2016-05-19  Mark Oteiza  <mvoteiza@udel.edu>

	Put point at beginning of display-time-world buffer.

	If display-time-world decides to popup vertically from the bottom of the
	frame and scroll-margin is nonzero, the top of the buffer contents are
	hidden due to scroll.
	* lisp/time.el (display-time-world-display): Move point to point-min
	after inserting contents.

2016-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Allow null entries in face and image cache

	Problem reported by Tino Calancha (Bug#23580).
	* src/dispextern.h (FACE_FROM_ID, IMAGE_FROM_ID):
	Don’t assume that the result is non-null.
	* src/xdisp.c (fill_image_glyph_string):
	Restore check that image pointer is non-null.

2016-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	Fix flyspell highlighting

	Problem reported by Jim Meyering (Bug#23575).
	* src/xdisp.c (extend_face_to_end_of_line):
	Fix typo in previous change.

2016-05-18  Eli Zaretskii  <eliz@gnu.org>

	* lisp/server.el (server-name): Add autoload cookie.  (Bug#23576)

2016-05-18  Sam Steingold  <sds@gnu.org>

	python-describe-at-point: add and bind

2016-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	‘make check-declare’ now chatters less

	* etc/NEWS: Document this.
	* lisp/emacs-lisp/check-declare.el (check-declare-locate):
	Return relative names, not absolute.
	(check-declare-scan, check-declare-verify, check-declare-warn)
	(check-declare-file, check-declare-directory):
	Generate less chatter.  Use relative file names rather than
	absolute.  Don’t give up on computing a good file name for a
	diagnostic merely because the function name was bad.  Make
	malformed declarations more noticeable.  Don’t warn about
	"ext:..." declarations if check-declare-ext-errors is nil.
	(check-declare-errmsg): Remove.
	(check-declare-warn): New optional arg LINE.
	(check-declare-files): Put status into mode line rather than
	chattering.

2016-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify byte-compiler for byte-compile-macroexpand-declare-function

	* lisp/emacs-lisp/bytecomp.el: Change signature of
	byte-compile-macroexpand-declare-function to match that of
	declare-function.

2016-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify byte-compiler for with-wrapper-hook

	* lisp/subr.el (subr--with-wrapper-hook-no-warnings):
	New macro, split out from with-wrapper-hook.
	* lisp/abbrev.el (abbrev--default-expand):
	* lisp/minibuffer.el (completion--in-region):
	* lisp/simple.el (buffer-substring--filter):
	* lisp/subr.el (with-wrapper-hook):
	Use it.

2016-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify byte-compiler in lisp/url

	* lisp/url/url-misc.el, lisp/url/url-file.el (mm-disable-multibyte):
	Add decl.

2016-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	Port --enable-gcc-warnings to GCC 6.1

	* configure.ac (WERROR_CFLAGS): Omit -Wunused-const-variable=2.
	* lib-src/etags.c (LOOKING_AT, LOOKING_AT_NOCASE):
	Omit test whether pointer plus a constant equals a null pointer.
	* src/alloc.c (compact_small_strings):
	Avoid pointer arithmetic on null pointers.
	* src/alloc.c (mark_face_cache):
	* src/fontset.c (free_realized_fontsets, Fset_fontset_font):
	* src/fringe.c (draw_fringe_bitmap_1)
	(Fset_fringe_bitmap_face):
	* src/macfont.m (macfont_draw):
	* src/msdos.c (IT_set_face, IT_clear_screen):
	* src/nsfont.m (nsfont_draw):
	* src/nsterm.h (FRAME_DEFAULT_FACE):
	* src/nsterm.m (ns_draw_window_cursor)
	(ns_draw_vertical_window_border, ns_draw_window_divider)
	(ns_dumpglyphs_box_or_relief)
	(ns_maybe_dumpglyphs_background, ns_dumpglyphs_image)
	(ns_dumpglyphs_stretch):
	* src/w32term.c (w32_draw_vertical_window_border)
	(w32_draw_window_divider, x_set_mouse_face_gc):
	* src/xdisp.c (estimate_mode_line_height, init_iterator)
	(handle_face_prop, handle_single_display_spec, pop_it)
	(CHAR_COMPOSED_P, get_next_display_element)
	(next_element_from_display_vector, extend_face_to_end_of_line)
	(fill_gstring_glyph_string,BUILD_COMPOSITE_GLYPH_STRING):
	* src/xfaces.c (Finternal_merge_in_global_face, Fface_font)
	(lookup_named_face):
	* src/xterm.c (x_draw_vertical_window_border)
	(x_draw_window_divider, x_set_mouse_face_gc):
	Prefer FACE_OPT_FROM_ID to FACE_FROM_ID when the result might be null.
	* src/xterm.c (try_window_id):
	Redo loop to convince GCC 6.1 that it is null pointer safe.
	(x_color_cells):
	Use eassume as necessary to pacify GCC 6.1.
	* src/dispextern.h (FACE_FROM_ID, IMAGE_FROM_ID): Now returns non-null.
	(FACE_OPT_FROM_ID, IMAGE_OPT_FROM_ID): New macro, with the old
	behavior of the non-_OPT macro, to be used when the result
	might be a null pointer.
	* src/dispnew.c (buffer_posn_from_coords, marginal_area_string)
	[HAVE_WINDOW_SYSTEM]:
	* src/intervals.h (INTERVAL_WRITABLE_P):
	* src/term.c (turn_off_face):
	* src/xdisp.c (get_glyph_face_and_encoding, fill_image_glyph_string)
	(produce_image_glyph, produce_xwidget_glyph):
	* src/xfaces.c (lookup_named_face):
	Remove unnecessary test for null pointer.
	* src/keyboard.c (read_char): Suppress bogus -Wclobbered warning.
	* src/process.c (would_block): New function.
	(server_accept_connection, wait_reading_process_output, send_process):
	Use it.
	* src/xdisp.c (get_window_cursor_type, note_mouse_highlight):
	Prefer IMAGE_OPT_FROM_ID to IMAGE_FROM_ID when the result
	might be null.

2016-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from gnulib

	This incorporates:
	2016-05-17 manywarnings: update for GCC 6.1
	2016-05-13 intdiv0, memmem, nocrash, strcasestr, strstr: no exit
	* m4/manywarnings.m4, m4/nocrash.m4: Copy from gnulib.

2016-05-16  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/ert.el (ert-summarize-tests-batch-and-exit):
	Include more details on hydra.

2016-05-16  Alan Mackenzie  <acm@muc.de>

	Tidy up redundant code in cc-vars.el caused by mistake in emacs-25 -> master

2016-05-16  Alan Mackenzie  <acm@muc.de>

	Fix spurious fontification of "for (; a * b;)" in CC Mode.

	This fixes bug #7918 (again).

	* lisp/progmodes/cc-engine.el (c-delq-from-dotted-list): New function.
	(c-forward-decl-or-cast-1): Return a 4 element list in place of the previous
	cons cell - additionally, return a flag indicating whether the declaration
	parsed might have been an expression, and the position of the type identifier
	in the said declaration.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): When
	c-forward-decl-or-cast-1 has indicated it might have parsed an expression,
	check for it being a spurious declaration in a "for" statement.

2016-05-14  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify ‘make check-declare’

	* lisp/cedet/srecode/insert.el (data-debug-new-buffer)
	(data-debug-insert-stuff-list, data-debug-insert-thing):
	* lisp/emulation/viper-ex.el (viper-change-state-to-vi)
	(viper-change-state-to-emacs):
	* lisp/emulation/viper-macs.el (viper-change-state-to-vi):
	* lisp/org/ob-asymptote.el (orgtbl-to-generic):
	* lisp/org/ob-awk.el (orgtbl-to-generic):
	* lisp/org/ob-core.el (org-edit-src-code, orgtbl-to-generic):
	* lisp/org/ob-emacs-lisp.el (orgtbl-to-generic):
	* lisp/org/ob-exp.el (org-element-context):
	* lisp/org/ob-gnuplot.el (org-time-string-to-time)
	(orgtbl-to-generic):
	* lisp/org/ob-haskell.el (org-export-to-file):
	* lisp/org/ob-latex.el (org-create-formula-image)
	(org-latex-compile):
	* lisp/org/ob-python.el (run-python):
	* lisp/org/ob-sh.el (orgtbl-to-generic):
	* lisp/org/ob-tangle.el (org-link-escape, org-back-to-heading):
	* lisp/org/org-colview.el (org-agenda-redo):
	* lisp/org/org-feed.el (url-retrieve-synchronously):
	* lisp/org/org-info.el (Info-find-node):
	* lisp/org/org-list.el (org-previous-line-empty-p):
	* lisp/org/org-macs.el (org-string-match-p):
	* lisp/org/org.el (org-beamer-mode):
	Fix prototype to match current definition.
	* lisp/emacs-lisp/advice.el (function-called-at-point):
	* lisp/progmodes/prolog.el (compilation-shell-minor-mode):
	Fix typo: extra '.
	* lisp/emacs-lisp/cl-generic.el (cl-defmethod):
	Insert ,' to pacify check-declare.
	* lisp/org/ob-comint.el (tramp-flush-directory-property):
	* lisp/org/ob-tangle.el (org-babel-update-block-body):
	* lisp/org/org-bibtex.el (org-babel-trim):
	* lisp/org/org-pcomplete.el (org-export-backend-options):
	* lisp/org/org-protocol.el (org-publish-get-project-from-filename):
	Fix file name in declare-function.
	* lisp/org/ob-comint.el (with-parsed-tramp-file-name)
	* lisp/org/ob-core.el (with-parsed-tramp-file-name):
	* lisp/org/org.el (org-beamer-mode):
	* lisp/url/url-http.el (gnutls-negotiate):
	Append ‘t’ to declare-function, since the declaration isn’t a defun.
	* lisp/org/ob-core.el (show-all):
	Declare outline-show-all instead, since it is the
	non-obsolete version of this function.
	(org-save-outline-visibility): Remove; not needed.
	* lisp/org/ob-scheme.el (run-geiser, geiser-mode)
	(geiser-eval-region, geiser-repl-exit):
	* lisp/org/ox-org.el (htmlize-buffer):
	Prepend "ext:" to file name, since it is not part of Emacs.
	* lisp/org/ob-sh.el (org-babel-comint-in-buffer)
	* lisp/org/org-gnus.el (nnimap-group-overview-filename):
	Remove decl, since function was removed.
	* lisp/org/ob-sh.el (org-babel-comint-with-output):
	* lisp/org/org-macro.el (org-with-wide-buffer):
	Omit unnecessary (and mismatching) decl.
	* lisp/org/org-agenda.el (calendar-absolute-from-iso):
	* lisp/org/org-clock.el (calendar-iso-to-absolute):
	Declare calendar-iso-to-absolute instead, since it is the
	non-obsolete version of this function.
	* lisp/org/org-compat.el (w32-focus-frame):
	Remove decl, since function is now obsolete.

2016-05-14  Lars Ingebrigtsen  <larsi@gnus.org>

	:max-width/height fixes for shr after the scaling changes

	* lisp/net/shr.el (shr-rescale-image): Ensure that we respect
	max-width and max-height even after the scaling changes done
	earlier this year.

2016-05-14  Eli Zaretskii  <eliz@gnu.org>

	Fix reading minibuffer input in viper-mode

	* lisp/emulation/viper-cmd.el (viper-read-string-with-history):
	Restore an assignment to viper-initial that got lost when
	viper-cmd.el was switched to lexical-binding.  (Bug#23536)

2016-05-14  Paul Eggert  <eggert@cs.ucla.edu>

	Port autogen.sh to Git 2.4

	Problem reported by Michael Brand in:
	https://lists.gnu.org/r/emacs-devel/2016-05/msg00367.html
	* autogen.sh (git_config): Don't assume that git rev-parse
	groks --git-common-dir.

2016-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	6de0715 Properly reject malformed or empty package sigs
	edae7d9 Remove buggy non-native image scrolling

2016-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	Improve display of tex-verbatim and Info quoted

	Problem reported by Glenn Morris (Bug#19889).
	* doc/emacs/display.texi (Standard Faces):
	* doc/lispref/display.texi (Basic Faces):
	* etc/NEWS: Mention fixed-pitch-serif.
	* lisp/faces.el (face-font-family-alternatives):
	New family alias Monospace Serif.
	(fixed-pitch-serif): New face, which uses the new family.
	* lisp/info.el (Info-quoted):
	* lisp/textmodes/tex-mode.el (tex-verbatim): Use the new face.
	* test/lisp/legacy/font-parse-tests.el (font-parse-tests--data):
	Add test case for Monospace Serif.

2016-05-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/net/sieve-mode.el: Handle the text:... notation

	Get rid of redundant :group keywords.
	(sieve-mode-syntax-table): Move initialization into declaration.
	(sieve-syntax-propertize, sieve-syntax-propertize-text): New functions.
	(sieve-mode): Use them.

2016-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	Tweak check-declare-directory performance

	* lisp/emacs-lisp/check-declare.el (check-declare-directory):
	Use ‘find ... -exec ... +’ for speed.

2016-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from gnulib

	This incorporates a spelling fix, plus:
	2016-05-09 Fix undefined behavior in gettext.h
	* lib/gettext.h, lib/mktime.c:
	Copy from gnulib.

2016-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9c2a1a2 * doc/misc/texinfo.tex: Sync from gnulib.
	66cd4d8 * lisp/emacs-lisp/find-func.el (find-feature-regexp) (find-al...
	1a5a05c Do not mistake colon at the end of regexp for slash symbol
	4c5a00b Make package-install-from-buffer not move point
	9596ea1 ; Revert "* emacs-lisp/lisp-mnt.el (lm-header): save-excursion"
	f79c352 Redo the fix for bug#21839
	8d2f78c Don't treat JS spread as contination method call

2016-05-12  Chris Feng  <chris.w.feng@gmail.com>

	Correct server/client address

	* src/process.c (Fmake_network_process): :local is for servers and :remote
	is for clients.

2016-05-12  Ken Brown  <kbrown@cornell.edu>

	Autosave buffers on logout if HAVE_NTGUI

	* src/w32fns.c (w32_wnd_proc): Pass a WM_ENDSESSION message on to
	w32_read_socket.

	* src/w32term.c (w32_read_socket): Create an event of type
	END_SESSION_EVENT if a WM_ENDSESSION message is received.

	* src/termhooks.h [HAVE_NTGUI]: New event kind END_SESSION_EVENT.

	* src/keyboard.c [HAVE_NTGUI] (syms_of_keyboard): New symbol
	`end-session'.
	(kbd_buffer_get_event): Return an end-session event if an event of
	type END_SESSION_EVENT is read.
	(keys_of_keyboard): Bind the end-session event to kill-emacs in
	special-event-map.  (Bug#23483)

2016-05-12  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/cedet/semantic/{db-el,symref}.el: Mark unused vars

	* lisp/cedet/semantic/db-el.el: Use _ to mark unused vars.
	(object-print): Use cl-call-next-method instead of call-next-method.
	* lisp/cedet/semantic/symref.el: Use _ to mark unused vars.

2016-05-12  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/cedet/semantic: Silence some warnings

	* lisp/cedet/semantic/db-el.el (emacs-lisp-mode)
	(semanticdb-get-database-tables): Use make-instance to silence warnings.

	* lisp/cedet/semantic/symref.el: Require semantic/find since we use
	some macros from there.  Silence compilation warnings:
	Replace initargs with slot names in oref/oset.
	Move `SYMREF TOOLS' section earlier so definitions precede their use.

2016-05-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Support srcset in <img>

	* lisp/net/shr.el (shr--preferred-image): Allow <img> tags
	with srcset specifiers (bug#23459).

2016-05-12  Michael Albinus  <michael.albinus@gmx.de>

	Do not autoload some functions of tramp.el

	* lisp/net/tramp.el (tramp-completion-file-name-handler):
	Autoload a shortened version of this function, avoid recursive load.
	(tramp-completion-file-name-handler-alist)
	(tramp-completion-mode-p)
	(tramp-completion-handle-expand-file-name)
	(tramp-completion-handle-file-name-all-completions)
	(tramp-completion-handle-file-name-completion): Do not autoload.

2016-05-12  Michael Albinus  <michael.albinus@gmx.de>

	Avoid recursive load of tramp.el

	* lisp/net/tramp.el (tramp-completion-file-name-handler):
	Autoload a shortened version of this function, avoid recursive load.

2016-05-11  Michael Albinus  <michael.albinus@gmx.de>

	Fix a problem of tramp-tests on hydra.

	* test/lisp/net/tramp-tests.el (tramp-test06-directory-file-name):
	Nullify `tramp-default-method' due to hydra.

2016-05-10  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify byte-compiler in lisp/vc

	* lisp/vc/vc-bzr.el, lisp/vc/vc-cvs.el, lisp/vc/vc-hg.el:
	* lisp/vc/vc-rcs.el, lisp/vc/vc-src.el:
	Declare functions defined elsewhere, to forestall “might not
	be defined at runtime” warnings.

2016-05-10  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d0d9f55 Allow newlines inside cl function arglists
	963541a Publicize cl--generic-all-functions
	3c581d5 ; Fix typo
	e58f900 Add some "safe-local-variable" declarations for compatibility...

2016-05-10  Paul Eggert  <eggert@cs.ucla.edu>

	'text-quoting-style' now affects only ` and '

	Change 'text-quoting-style' so that it no longer affects
	formatting of curved quotes in format arguments to functions like
	'message'.  In particular, when this variable's value is 'grave',
	all quotes in formats are output as-is.
	* doc/lispref/help.texi (Keys in Documentation):
	* doc/lispref/strings.texi (Formatting Strings):
	* doc/lispref/tips.texi (Documentation Tips):
	* etc/NEWS:
	* src/doc.c (syms_of_doc): Document this.
	* lisp/help-fns.el (describe-function-1):
	* src/doc.c (text_quoting_style, Fsubstitute_command_keys)
	(syms_of_doc):
	* src/editfns.c (styled_format): Omit now-unnecessary code.
	* src/lisp.h (LEAVE_QUOTING_STYLE): Remove.

2016-05-10  Alan Mackenzie  <acm@muc.de>

	Revert "Fix spurious fontification of "for (; a * b;)" in CC Mode."

	This reverts commit 89d1776b81ab552192ee41f13ce84ff86bda4556.  It is
	being reverted because it slowed down CC Mode's fontification too much
	(factor ~3).  It was the fix to bug #7918.

2016-05-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Move "Recent messages" earlier in report-emacs-bug

	* lisp/mail/emacsbug.el (report-emacs-bug): Move the "Recent
	messages" part earlier so that users can see it and remove it
	if they want.

2016-05-09  Michael Albinus  <michael.albinus@gmx.de>

	Pacify byte compiler in tramp.el

	* lisp/net/tramp.el (tramp-time-diff): Use `tramp-compat-funcall'.

2016-05-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	3b47898 Fix doc string in `insert'
	b479dea * doc/misc/emacs-mime.texi (time-date): Document now-builtins...
	cd27f73 Say 'All results processed' at the end
	4ffec91 Document automatic adjustment of process' logical window dime...
	dc66271 ; Fix typos and stylistic glitches in NEWS

2016-05-09  Alan Mackenzie  <acm@muc.de>

	CC Mode now uses the new :after-hook feature of define-derived-mode

	It now runs internal variable setting functions after the mode hooks, no
	longer runs the mode hooks twice, and declares the configuration variables for
	noise macros and macros with semicolons as safe variables (when given suitable
	arguments).

	Fixes bug #16759 and bug #23476.

	* .dir-locals.el: Put the c-noise-macros-with-paren-names setting
	back into the C Mode value.

	* lisp/progmodes/cc-mode.el: (c-basic-common-init): Remove the call to
	c-make-macro-with-semi-re.
	(c-mode, c++-mode, objc-mode, java-mode, idl-mode, pike-mode, awk-mode): Move
	c-make-noise-macro-regexps and c-make-macro-with-semi-re (where appropriate)
	and c-update-modeline into the :after-hook form.  Remove the explicit settings
	of the syntax table, the abbreviation table and the local key map, since they
	duplicate forms generated by define-derived-mode.  Remove the explicit
	invocation of each mode's mode hook, since they duplicate ones generated by
	define-derived-mode.

	* lisp/progmodes/cc-vars.el: (c-string-list-p, c-string-or-string-list-p): New
	functions.
	(c-noise-macro-names, c-noise-macro-with-parens-names): give the
	save-local-variable property c-string-list-p.
	(c-macro-names-with-semicolon): give the save-local-variable property
	c-string-or-string-list-p.

	* doc/misc/cc-mode.texi: (Macros with ;, Noise Macros): Note that it's not
	necessary to call the regexp generating functions after setting the pertinent
	configuration values in a mode hook.

2016-05-09  Dmitry Gutov  <dgutov@yandex.ru>

	Fix the jit-lock-fontify-now test names

	* test/lisp/jit-lock-tests.el
	(jit-lock-fontify-now-mends-the-gaps)
	(jit-lock-fontify-now-does-not-refontify-unnecessarily):
	Fix the test names.

2016-05-09  Michael Albinus  <michael.albinus@gmx.de>

	Extend completion candidates in tramp.el

	* lisp/net/tramp.el (tramp-parse-default-user-host): New defun.
	(tramp-get-completion-function): Use it.

2016-05-09  Michael Albinus  <michael.albinus@gmx.de>

	Revert e2f785991d0c696fbb2bc2f331f888d979b8da82 for tramp.el

	* lisp/net/tramp.el (tramp-time-diff): Revert previous change due to backwards
	compatibility.

2016-05-08  Dmitry Gutov  <dgutov@yandex.ru>

	Emulate interactive mode

	* test/lisp/jit-lock-tests.el (jit-lock-tests--setup-buffer)
	(jit-lock-does-not-refontify-unnecessarily):
	Bind noninteractive to nil (bug#23278).

2016-05-08  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify now that float-time etc. are built-in

	This was prompted by warnings about calls to now-obsolete functions.
	* lisp/calendar/time-date.el (encode-time-value):
	Use setq rather than a recursive call, to avoid a warning
	about calling this obsolete function.
	* lisp/calendar/time-date.el (encode-time-value)
	(with-decoded-time-value, time-to-seconds, time-to-number-of-days):
	* lisp/erc/erc.el (erc-emacs-time-to-erc-time):
	* lisp/net/rcirc.el (rcirc-float-time):
	* lisp/org/org-compat.el (org-float-time):
	Simplify now that time-add and float-time are now built-in.
	* lisp/calendar/time-date.el (time-add, time-subtract, time-less-p):
	* lisp/net/newst-backend.el (time-add):
	* lisp/org/org.el (time-subtract):
	Remove backward-compatibility definitions; they are now built-in.
	* lisp/calendar/timeclock.el (timeclock-time-to-seconds)
	(timeclock-seconds-to-time):
	* lisp/net/rcirc.el (rcirc-float-time):
	* lisp/org/org-compat.el (org-float-time):
	Now obsolete, since callers can just use float-time and
	seconds-to-time.  All uses changed.
	* lisp/emacs-lisp/ert.el (ert-results-pop-to-timings):
	* lisp/gnus/gnus-art.el (article-lapsed-string):
	* lisp/gnus/gnus-diary.el (gnus-user-format-function-d):
	* lisp/gnus/gnus-group.el (gnus-group-timestamp-delta):
	* lisp/gnus/nndiary.el (nndiary-compute-reminders):
	* lisp/net/tramp.el (tramp-time-diff):
	* lisp/org/org-clock.el (org-clock-timestamps-change):
	Prefer the time-subtract builtin to the subtract-time alias.
	* lisp/files.el (dir-locals-find-file, dir-locals-read-from-dir):
	* test/lisp/character-fold-tests.el (character-fold--speed-test):
	Prefer the float-time builtin to the time-to-seconds alias.
	* lisp/org/org-agenda.el, lisp/org/org-clock.el, lisp/org/org-list.el:
	* lisp/org/org-timer.el, lisp/org/org.el:
	Adjust to org-float-time deprecation.

2016-05-08  Alan Mackenzie  <acm@muc.de>

	Add :after-hook facility to define-derived-mode.

	This allow a form to be evaluated _after_ a major mode's hooks have been run.
	It is needed to solve some problems in CC Mode, including bug #16759 and
	bug #23476.

	* lisp/emacs-lisp/derived.el (define-derived-mode): introduce the new argument
	`:after-hook', and generate the requisite code for it.
	(derived-mode-make-docstring): Take account of the possibility of :after-hook.

	* lisp/subr.el (delayed-after-hook-forms): New variable.
	(run-mode-hooks): As the last thing evaluate the forms in
	delayed-after-hook-forms.

	* doc/lispref/modes.texi (Derived Modes): Document :after-hook.
	(Mode Hooks): Document the new feature in run-mode-hooks.

	* etc/NEWS: Note the new feature.

2016-05-08  Michael Albinus  <michael.albinus@gmx.de>

	Fix recursive load of tramp.elc

	* lisp/net/tramp.el (tramp-completion-file-name-handler):
	Check also for `tramp-completion-mode-p'.
	(tramp-completion-mode, tramp-completion-mode-p): Autoload them.

2016-05-07  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer grep -E/-F to egrep/fgrep

	POSIX marked egrep and fgrep as legacy apps in SUSv2 (1997) and
	withdrew them in SUSv3 (2001), and these days grep -E and grep -F
	are probably more portable.
	* lib-src/etags.c (main):
	* lisp/eshell/em-unix.el (eshell-grep, eshell/egrep)
	(eshell/fgrep):
	* lisp/cedet/semantic/symref.el (semantic-symref-find-text):
	* lisp/eshell/esh-var.el (eshell-apply-indices):
	* lisp/progmodes/ada-xref.el (ada-xref-search-with-egrep)
	(ada-find-in-src-path):
	* lisp/textmodes/ispell.el (ispell-grep-command):
	(ispell-lookup-words):
	Use or document grep -E and grep -F instead of egrep and fgrep.
	* lisp/textmodes/ispell.el (ispell-grep-options):
	Use -Ei on all platforms, not just MS-Windows.

2016-05-07  Dmitry Gutov  <dgutov@yandex.ru>

	Avoid unnecessary work if a chunk is empty

	* lisp/jit-lock.el (jit-lock-fontify-now): Avoid unnecessary work
	if a chunk is empty (bug#23278).

2016-05-07  Dmitry Gutov  <dgutov@yandex.ru>

	* test/lisp/jit-lock-tests.el: New file.

2016-05-07  Michael Albinus  <michael.albinus@gmx.de>

	Continue to fix Bug#10085

	* lisp/net/tramp.el (tramp-completion-file-name-handler-alist)
	<expand-file-name>: Add handler.
	(tramp-completion-handle-expand-file-name): New defun.
	(tramp-handle-file-name-as-directory): Handle completion mode case.

	* test/lisp/net/tramp-tests.el (tramp-test06-directory-file-name):
	Fix test.
	(tramp-test24-file-name-completion): Extend test.

2016-05-07  Alan Mackenzie  <acm@muc.de>

	Revert change 8e4595a... due to annoyance it causes the development team.

	Change 8e4595a438fe85dd109756886cdeaeea2e665afb from 2016-04-30 17:28:24
	+0000 was an enhancement to .dir-locals to allow correct fontification
	of certain macro constructs.

	* .dir-locals.el: Remove the two forms for C Mode dealing with noise macros.

2016-05-07  Alan Mackenzie  <acm@muc.de>

	* lisp/emacs-lisp/edebug.el (edebug-sit-on-break): Give it a version number.

2016-05-07  Simen Heggestøyl  <simenheg@gmail.com>

	Add tests for CSS mode completion

	* test/lisp/textmodes/css-mode-tests.el (css-test-property-values)
	(css-test-property-values-no-duplicates)
	(css-test-value-class-lookup): Use `seq-sort'.
	(css-mode-tests--completions): New helper function for retrieving CSS
	completions.
	(css-test-complete-bang-rule, scss-test-complete-bang-rule)
	(css-test-complete-property-value, css-test-complete-pseudo-class)
	(css-test-complete-pseudo-element, css-test-complete-at-rule)
	(scss-test-complete-at-rule, css-test-complete-property)
	(css-test-complete-selector, css-test-complete-nested-selector)
	(scss-test-complete-nested-selector): New tests.

2016-05-06  Alan Mackenzie  <acm@muc.de>

	Add an option in Edebug to prevent pauses after `h', 'f', and `o'.

	Requested by Paul Pogonyshev.  Also add in documentation for Edebug config
	variables which was missing.

	* lisp/emacs-lisp/edebug.el (edebug-sit-on-break): New customizable option.
	(edebug--display-1): Test edebug-sit-on-break before pausing 1 second.

	* doc/lispref/edebug.texi (Jumping): Document the effect of the new option.
	(Edebug Options): Document the new option.  Also add documentation for
	edebug-eval-macro-args, edebug-print-length, edebug-print-level,
	edebug-print-circle, edebug-sit-for-seconds.

	* etc/NEWS: Note the new feature.

2016-05-07  Jorgen Schaefer  <contact@jorgenschaefer.de>

	scheme.el: Turn literal tabs into \t

	* lisp/progmodes/scheme.el: The last change to turn tabs into spaces
	also caught some literal tabs in character classes. Fix this by
	adding \t to those classes.

2016-05-07  Tino Calancha  <f92capac@gmail.com>

	Make 'backtab' work in table-mode on text terminals

	* lisp/textmodes/table.el (table-cell-bindings): Bind 'backtab'
	explicitly.  (Bug#23456)

2016-05-07  Eli Zaretskii  <eliz@gnu.org>

	Try to speed-up display of many all-blank lines

	* src/bidi.c (bidi_initialize): Use anchored regexps for
	paragraph start and paragraph separator sequences.  (Bug#23457)

2016-05-06  Alan Mackenzie  <acm@muc.de>

	Correct hack-local-variables change from Thu May 5 11:05:49 2016 +0000

	Prevent hack-local-variables being called from the fundamental-mode mode call
	early in normal-mode.  This fixes bug #23460 and bug #23463.

	* lisp/files.el (normal-mode) Replace call to fundamental-mode with calls to
	the things it calls, with the exception of hack-local-variables.

	* etc/NEWS: Add an entry to note the calling of hack-local-variables at each
	major mode initialization.

2016-05-06  Paul Eggert  <eggert@cs.ucla.edu>

	Port xref-tests to master branch

	Also, add a test to make this problem less likely in the future.
	* test/Makefile.in (check-no-automated-subdir): New rule.
	(check, check-expensive, check-maybe): Depend on it.
	* test/automated/data/xref/file1.txt: Rename to ...
	* test/data/xref/file1.txt: ... here.
	* test/automated/data/xref/file2.txt: Rename to ...
	* test/data/xref/file2.txt: ... here.
	* test/automated/xref-tests.el: Rename to ...
	* test/lisp/progmodes/xref-tests.el: ... here.
	(xref-tests-data-dir): Use EMACS_TEST_DIRECTORY.

2016-05-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	50650cb Doc fixes for fclist and grep
	5e814e0 Minor doc fixes for quoting
	3347a73 `nreverse' the marker pairs list
	1a4127d Use save-excursion in xref-location-marker more
	ab3ba91 shell-quote-argument DIR when appropriate
	922c7a3 Rework xref-query-replace-in-results
	3fe3510 * lisp/replace.el (query-replace-read-from): Use minibuffer-w...
	0932b94 Fix todo-mode bug involving archived items (bug#23447)
	e68ad1f ; * etc/NEWS: Tiny edit. (Bug#23432)
	adc80b7 ; * test/automated/xref-tests.el: Add copyright and license.
	4d8fd9c Handle "empty line" regexp in xref searches
	f559b37 Add tests for xref-collect-matches
	6428aa0 Use grep-find-ignored-directories instead of vc-directory-exc...
	6f82d8e Clear buffer-undo-list when showing xrefs
	c68a091 Note the quote translation in `message' in section "incompati...
	52f86a7 * etc/NEWS: Mention (message "%s" (format ...)).
	93703c5 (Common Keywords): Correct what missing :group means
	79e5800 Improve documentation of Dired's 'A' and 'Q' commands
	2ea2a2f Doc fixes for quoting
	8544b98 posnp doc clarification
	805204f Mention what a missing :group does
	ec554d7 Fix documentation of dired-aux search/replace commands

2016-05-05  Simen Heggestøyl  <simenheg@gmail.com>

	Support completion of HTML tags in CSS selectors

	* lisp/textmodes/css-mode.el (css--html-tags): New variable holding a
	list of HTML tags for completion.
	(css--nested-selectors-allowed): New variable for determining whether
	nested selectors are allowed in the current mode.
	(css--complete-selector): New function for completing part of a CSS
	selector.
	(css-completion-at-point): Support completion of selectors.
	(scss-mode): Allow nested selectors.

2016-05-05  Lars Ingebrigtsen  <larsi@gnus.org>

	Make `R' in eww work more reliably

	* lisp/net/eww.el (eww-score-readability): Protect against
	null children.

2016-05-05  Alan Mackenzie  <acm@muc.de>

	Call hack-local-variables from major modes rather than from file visiting

	This prevents file/directory local variables from being lost when the major
	mode is set or changed.

	This fixes bug #15577 and bug #23407.

	* lisp/files.el (normal-mode): Call `hack-local-variables' when the major mode
	function hasn't already done so.
	(hack-local-variables): Rename parameter `mode-only' to `handle-mode', make
	its previous non-nil setting be t, and introduce the following action for a
	non-nil non-t value: apply all settings apart from `mode'.

	* lisp/subr.el (run-mode-hooks): call `hack-local-variables' for buffers
	which are visiting files.

	* doc/emacs/custom.texi (File Variables): Note that setting a major mode also
	sets file variables.
	(Directory Variables): Note that `mode', `eval', and `unibyte' can be set as
	dir local variables, but `coding' can't.

	* doc/lispref/modes.texi (Major Mode Conventions): Say that `run-mode-hooks'
	also calls `hack-local-variables'.
	(Auto Major Mode): Say that `find-file' no longer runs `hack-local-variables',
	as from 25.2.  Remove vagueness from `normal-mode' and `set-auto-mode' by
	saying that the mode IS SET, not merely "selected" or "chosen".
	(Mode Hooks): Document change to `run-mode-hooks'.

	* doc/lispref/variables.texi (File Local Variables): Document change to
	`hack-local-variables'.

2016-05-05  Michael Albinus  <michael.albinus@gmx.de>

	tramp-sh.el: Work around a stat bug

	* lisp/net/tramp-sh.el (tramp-get-remote-stat): Do not use
	stat versions which produce shell quoted output.  See also
	coreutils Bug#23422.

2016-05-04  Noam Postavsky  <npostavs@gmail.com>

	Fix autogen.sh for separate worktrees

	* autogen.sh: Use the $hooks variable in the $sample_hooks loop, instead
	of assuming .git/hooks is a directory.

2016-05-04  Alan Mackenzie  <acm@muc.de>

	Allow `text-quoting-style' to be `leave', i.e. no translation of quotes.

	* lisp/help-fns.el (describe-function-1): Don't set coding system to UTF-8
	when text-quoting-style is `leave'.

	* src/lisp.h (enum text_quoting_style): Add identifier LEAVE_QUOTING_STYLE.

	* src/doc.c (syms_of_doc): New symbol "leave".  Amend doc string of
	`text_quoting_style'.
	(text_quoting_style): Handle `leave' by returning LEAVE_QUOTING_STYLE.
	(Fsubstitute_command_keys): Don't translate quotes when quoting_style is
	LEAVE_QUOTING_STYLE.

	* src/editfns.c (styled_format): Set quoting_style to -1 when
	text-quoting-style is `leave'.

2016-05-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emulation/viper.el:
	* lisp/emulation/viper-cmd.el: Use lexical-binding.
	(viper-change-state-to-vi, viper-change-state-to-emacs): Allow dummy
	args, for use in advice-add.
	(viper--init-message): Rename from init-message.
	(viper-minibuffer-standard-hook): Adjust accordingly.
	(viper-undo): Remove unused var `modified'.
	(viper-read-string-with-history, viper-set-searchstyle-toggling-macros):
	Don't use dynamic vars as args.
	(viper-submit-report): Clarify use of dynamic vars.

	* lisp/emulation/viper.el: Use lexical-binding and nadvice.
	Remove redundant :group keywords.  Group the (if viper-mode) at top-level.
	Use add-function rather than a `(lambda ...).
	(viper--advice-list): New var.
	(viper--advice-add, viper--deactivate-advice-list): New funs.
	(viper-go-away, viper-set-hooks, viper-non-hook-settings): Use them.
	(viper-non-hook-settings): Don't hook into find-file any more.

2016-05-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/vc/ediff-util.el: Use lexical-binding.

	* lisp/progmodes/js.el (js-syntax-propertize): Recognize shebang line.

2016-05-03  Lars Ingebrigtsen  <larsi@gnus.org>

	Add an animation sanity check

	* lisp/image.el (image-multi-frame-p): Give up on animations
	if it seems like they are too slow (bug#23431).

2016-05-03  Lars Ingebrigtsen  <larsi@gnus.org>

	abbrev-tests.el fix

	* test/lisp/abbrev-tests.el (abbrev-table-p-test): Don't check
	internal implementation detail.

2016-05-03  Lars Ingebrigtsen  <larsi@gnus.org>

	(shr-rescale-image): Clarify logic slightly

	* lisp/net/shr.el (shr-rescale-image): Clarify logic slightly.

2016-05-02  Martin Rudalics  <rudalics@gmx.at>

	Bind `widget-button-click' to mouse-1/-2 instead of down-mouse-1/-2

	* lisp/wid-edit.el (widget-keymap): Bind `widget-button-click'
	to mouse-1/-2 instead of down-mouse-1/-2.  Suggested by Stefan
	Monnier.  (Bug#19185, Bug#20398)

2016-05-02  Lee Bochicchio  <lboc.home@gmail.com>

	Add more abbrev tests

	* test/lisp/abbrev-tests.el
	(clear-abbrev-table-test): Use `abbrev-expansion'
	(abbrev-table-empty-p-test, list-abbrevs-test)
	(prepare-abbrev-list-buffer-test, insert-abbrevs-test)
	(edit-abbrevs-test, define-abbrevs-test)
	(read-write-abbrev-file-test)
	(abbrev-edit-save-to-file-test): New tests (bug#23139).

2016-05-02  Philipp Stephani  <p.stephani2@gmail.com>  (tiny change)

	Allow eval-ing named character literals

	* lisp/progmodes/elisp-mode.el (elisp--preceding-sexp): Skip over
	named character literals.
	* test/lisp/progmodes/elisp-mode-tests.el
	(elisp--preceding-sexp--char-name): Add test for skipping over
	named character literals (bug#23354).

2016-05-02  Aaron Conole  <aconole@redhat.com>

	Call va_end in boot_error

	* src/gnutls.c (boot_error): A recent change added a function
	to signal an error or return an error code. That function uses
	a variadic argument list to populate an error message
	string. However, it missed calling va_end after using the
	variadic argument list.

	  Copyright-paperwork-exempt: yes

2016-05-02  Aaron Conole  <aconole@bytheb.org>

	Fix the call to set_network_coding_system

	* src/process.c (Fmake_network_process): A recent commit
	modified the set_network_socket_coding_system function to take
	arguments host, service, and name. However, those arguments
	appear to be swapped.

	  Copyright-paperwork-exempt: yes

2016-05-02  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "alas, a map can have only one parent"

	This reverts commit d05806fda1cbba2db112bc783597fbe9d27175b2.

	This had already been fixed by using `make-composed-map'.  And
	we don't want image-map to inherit from special-mode-map, anyway.

2016-05-02  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	bf21c84 Fix quoting problem in cc-engine debug message
	8f36614 Add electric-quote-string unit test
	6280531 Don’t electrically quote ‘'’ in Python
	fd7b430 `nreverse' Grep hits before passing them to xref--convert-hits

2016-05-02  Sam Steingold  <sds@gnu.org>

	alas, a map can have only one parent

	* lisp/image-mode.el (image-model-map): Cannot have two parents.
	* lisp/image.el (image-map): Inherit from `special-mode-map'.

2016-05-02  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#10085

	* lisp/net/tramp.el (tramp-find-foreign-file-name-handler):
	Add optional arguments OPERATION and COMPETION.  Handle
	`file-name-as-directory', `file-name-directory' and
	`file-name-nondirectory' also in completion mode.
	(tramp-file-name-handler): Use it.  (Bug#10085)

	* test/lisp/net/tramp-tests.el (tramp-test06-directory-file-name):
	Extend test.

2016-05-01  Martin Rudalics  <rudalics@gmx.at>

	* src/minibuf.c (read_minibuf): Use CONSP instead of Fconsp.

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Tweak .gitignore

	* .gitignore: Remove leim/changed.misc, leim/changed.tit,
	as these files are no longer created.  Add gmon.out, for
	-pg profiling.  Sort.

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from gnulib

	This incorporates:
	2016-05-01 mktime: port to stricter signed overflow checking
	2016-05-01 mktime: speed up DEBUG_MKTIME benchmarks
	2016-05-01 mktime: resurrect DEBUG_MKTIME testing
	2016-05-01 mktime: simplify DEBUG_MKTIME
	2016-05-01 Port mktime_internal offset to unsigned time_t
	2016-04-27 xstrtol: prohibit monstrosities like "1bB"
	2016-04-13 mktime: improve integer overflow checking
	2016-04-13 intprops: check two's complement assumption
	2016-04-13 intprops, mktime, strtol: assume two's complement
	* lib/intprops.h, lib/mktime-internal.h, lib/mktime.c:
	* lib/strtol.c, lib/timegm.c, m4/mktime.m4, m4/std-gnu11.m4:
	Copy from gnulib.

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	c695fb3 ; Spelling fixes
	03750c0 * doc/misc/texinfo.tex: Sync from gnulib.
	42fed3b * lisp/isearch.el (isearch-forward-symbol-at-point): Add isea...

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	d8affa3 Use ‘T *restrict’ proto, not ‘T[restrict]’
	d38d2a8 Fix documentation of 'url-retrieve-synchronously'
	586b213 * lisp/url/url.el (url-retrieve-synchronously): Doc fix.  (Bu...

	# Conflicts:
	#	doc/misc/url.texi
	#	lisp/url/url.el

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	16e5e8e Fix last change to isearch-update (bug#23406)
	b755d98 Autoload cursor-sensor-inhibit (bug#23406)
	b52ebd4 org-map-entries: Fix org-agenda-prepare-buffers call
	86aa409 Followup for last commit in the user manual
	7004459 Improve doc string of 'set-goal-column'
	ccdaf04 Fix the MSDOS build
	ffe701c Remove \= from format string (bug#18190)
	1c58fa1 Fix variable-pitch font on MS-Windows
	c6077bf Restore follow-scroll-up/down to scrolling by the combined si...
	b671e21 Revert unneeded change which harms syntactic parsing.  This f...
	48b24c9 Correct indentation of ids in a C++ enum after a protection k...
	5c3534f * lisp/window.el (window--process-window-list): No-op if no p...
	734fb3a Port dumping to NetBSD with PaX
	0255a70 Don't mistake `for' inside a function for a part of array com...

	# Conflicts:
	#	src/Makefile.in

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	71fb0e0 Improve last change to vc-git-mode-line-string
	6858e77 Todo mode doc bug fix
	e55d0db Fix revision calculation in vc-git-mode-line-string
	ca87b34 ; Fix errant revert ccb75d7
	40bfebe Add Python 3.5 keyword "await"
	fa7886a Add new keywords of Python 3.5
	ccb75d7 Partially revert previous change.
	8ee168a ; * etc/NEWS: Update entry about color fonts on OS X with a w...
	b09ca27 Say why text-quoting-style is not a user option

2016-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	5a952eb Don't mention ~/.emacs.bmk literally in doc strings
	c338cf3 * etc/NEWS: Explain why multicolor font display is disabled o...
	c30d1b4 Port to Ubuntu 16.04 --enable-gcc-warnings

2016-05-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention the `find-library-name' changes

2016-05-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix text in menu in minor-mode-menu-from-indicator

	* lisp/mouse.el (minor-mode-menu-from-indicator): Don't
	capitalize "Off" in "Turn Off" (bug#11028).

2016-05-01  David Engster  <deng@randomsample.de>

	gitmerge: Add cherry pick to gitmerge-skip-regexp

	* admin/gitmerge.el (gitmerge-skip-regexp): Add "cherry picked
	from commit", which is the string appended by 'git cherry-pick
	-x'.

2016-05-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow `global-set-key' to bind keys under the `M-o' map

	* lisp/subr.el (global-set-key): Allow binding keys under the
	`M-o' map (bug#9730).

2016-05-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Add `size-indication-mode' to the menu on `mouse-1' "Top"

	* lisp/bindings.el (mode-line-column-line-number-mode-map):
	Add `size-indication-mode' to the menu (bug#5727).

2016-05-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow finding libraries loaded manually outside the load-path

	* lisp/emacs-lisp/find-func.el (find-library--from-load-path):
	New function to find a library from a load path (bug#5661).
	(find-library-name): Use it.

	There are so many combinations of inputs and possibly entries in
	`load-history' that the code looks like an entry in a code obfuscation
	contest.  If anybody has a better implementation, please substitute.

	But remember that the input given may be foo, foo.el, foo.elc, and the
	entries in load-history may be foo.el, foo.elc and foo.el.gz, and we
	want to return only foo.el and foo.el.gz.  *phew*

2016-05-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow minibuffer prompts to use faces

	* doc/lispref/minibuf.texi (Text from Minibuffer): Document
	`minibuffer-prompt-properties' and explain how faces work in
	the minibuffer prompt.

	* src/minibuf.c (read_minibuf): If `face' is in
	`minibuffer-prompt-properties', apply it to the end of the
	face list to allow users to have their own faces on the
	prompts (bug#16136).

2016-05-01  Peter Feigl  <peter.feigl@nexoid.at>  (tiny change)

	Add R7RS syntax forms to scheme.el

	* lisp/progmodes/scheme.el (scheme-font-lock-keywords-2): Add
	a number of special forms introduced in R7RS-small.
	* lisp/progmodes/scheme.el (scheme-indent-function): Same.

2016-05-01  Alan Third  <alan@idiocy.org>

	Implement horizontal scroll bars on NS

	* lisp/scroll-bar.el (horizontal-scroll-bars-available-p): Remove NS
	check.
	* lisp/term/ns-win.el: Remove custom NS scroll-bar handlers and bind
	scroll-bar mouse clicks to standard handlers.
	* src/nsterm.h (EmacsScroller): Add 'horizontal' property and rename
	pixel_height to pixel_length.
	* src/nsterm.m (x_set_window_size): Remove left-hand scroll-bar code. It
	caused scroll-bars to be over-drawn and the best working solution
	appears to be complete removal.
	(ns_set_horizontal_scroll_bar): Rewrite to handle horizontal scrollers
	correctly.
	(ns_set_vertical_scroll_bar): Set width to actual scroller width.
	(setFrame): Handle horizontal case.
	(dealloc): Handle horizontal case.
	(judge): Handle horizontal case.
	(setPosition): Rename pixel_height to pixel_length.
	(sendScrollEventAtLoc): Handle horizontal case.
	(mouseDown): Handle horizontal case and general tidy up of code.
	(mouseDragged): Handle horizontal case. Call sendScrollEventAtLoc with
	absolute pixel size instead of ratio.
	* src/window.h: Remove NS check.

2016-05-01  Michael Albinus  <michael.albinus@gmx.de>

	tramp.texi: Revert last change due to backward compatibility

2016-04-30  Paul Eggert  <eggert@cs.ucla.edu>

	Fix the buffer-count patch (Bug#23394)

	* src/buffer.c (Fgenerate_new_buffer_name): Increment count just
	once each time through the loop.  Reported by Lars Ingebrigtsen in:
	https://lists.gnu.org/r/emacs-devel/2016-04/msg00918.html

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	cua-prefix-override-inhibit-delay doc fix

	* lisp/emulation/cua-base.el
	(cua-prefix-override-inhibit-delay): Typo fix in doc string
	(bug#23401).

2016-04-30  Paul Eggert  <eggert@cs.ucla.edu>

	Fix generate-new-buffer-name increment typo

	Problem reported by Chaitanya Koparkar (Bug#23394).
	* src/buffer.c (Fgenerate_new_buffer_name): Increment count when
	generating a new buffer.  This fixes a typo I introduced in
	2014-04-05T00:04:58Z!eggert@cs.ucla.edu.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	global-eldoc-mode doc fix

	* lisp/emacs-lisp/eldoc.el (global-eldoc-mode): Be more
	specific about what "applicable" means (bug#23071).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the legend in describe-categories a link

	* lisp/help-fns.el (describe-categories): Make the "see
	bottom" text a link (bug#22227).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	normal-top-level-add-subdirs-to-load-path doc fix

	* lisp/startup.el (normal-top-level-add-subdirs-to-load-path):
	Doc fix (bug#21962).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	isearch-search-fun-function doc tweak

	* lisp/isearch.el (isearch-search-fun-function): Mention what
	the STRING parameter is (bug#21552).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fill some imenu--index-alist doc lines

	* lisp/imenu.el (imenu--index-alist): Fill some doc lines (bug#21269).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Make describe-variable look up the variable in the current buffer

	* lisp/help-fns.el (describe-variable): Get the variable
	definition in the buffer we were called from (in case it only
	exists there) (bug#21252).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fmarker_position doc string clarification

	* src/marker.c (Fmarker_position): Clarify the doc string
	(bug#21231).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Further define-obsolete-* doc fixups

	* lisp/emacs-lisp/byte-run.el (define-obsolete-face-alias):
	Fix up last change.
	(define-obsolete-variable-alias): Ditto.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Describe WHEN in all the define-obsolete- macros

	* lisp/emacs-lisp/byte-run.el (define-obsolete-face-alias):
	Say more verbosely what WHEN is (bug#21225).
	(define-obsolete-function-alias): Describe the WHEN parameter.
	(define-obsolete-variable-alias): Ditto.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention with-silent-modifications in the lispref manual

	* doc/lispref/text.texi (Changing Properties): Document
	with-silent-modifications (bug#21171).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	with-silent-modifications doc clarification

	* lisp/subr.el (with-silent-modifications): Rearrange the doc
	string a bit so that the most pertinent information is at the
	top (bug#21171).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	clear-visited-file-modtime doc string fix

	* lisp/files.el (clear-visited-file-modtime): Fix possibly
	confusing doc string wording (bug#21169).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Document mode mode line variables

	* doc/lispref/modes.texi (Mode Line Variables): Document
	`mode-line-front-space, `mode-line-misc-info',
	`mode-line-end-spaces' (bug#21014).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a cross ref to Optional Mode Line

	* doc/lispref/modes.texi (Mode Line Variables): Add a cross
	reference to the Emacs mode line node that explains things
	like `display-time-string' (bug#21002).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a doc string to display-time-string

	* lisp/time.el: Add a doc string to `display-time-string',
	because it's referred to in the manual, and is too mysterious
	otherwise (bug#21002).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	custom-buffer-style doc fix

	* lisp/cus-edit.el (custom-buffer-style): Document the `tree'
	value (bug#20724).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Document how to check for ImageMagick support

	* doc/lispref/display.texi (ImageMagick Images): Say how to
	check for ImageMagick support, which isn't quite obvious
	(bug#20702).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Minor doc fix for ImageMagick/SVG builds

	* doc/lispref/display.texi (SVG Images): Don't imply that you
	have to build Emacs yourself (bug#20702).
	(ImageMagick Images): Ditto.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Rearrange the doc of query-replace slightly

	* lisp/replace.el (query-replace): Move the mention of the
	interactive prefix arg earlier so that users can find it
	(bug#20654).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	apropos-print doc fix

	* lisp/apropos.el (apropos-print): Document the undocumented
	parameters (bug#20520).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	completion-table-with-predicate doc string fix

	* lisp/minibuffer.el (completion-table-with-predicate): t ->
	non-nil in the doc string (bug#20460).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fill the completion-table-with-predicate doc string

	* lisp/minibuffer.el (completion-table-with-predicate): Fill
	the doc string (bug#20460).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	replace-match-maybe-edit doc clarification

	* lisp/replace.el (replace-match-maybe-edit): Say what
	MATCH-DATA is (bug#20304).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	add-timeout doc fix

	* lisp/emacs-lisp/timer.el (add-timeout): Mention the return
	value (bug#20181).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Extremely minor doc fix in Choosing Window

	* doc/lispref/windows.texi (Choosing Window): There's only one
	action alist, I think (bug#20158).

2016-04-30  Alan Mackenzie  <acm@muc.de>

	* .dir-locals.el: Amend for correct fontification of *.[ch]
	containing "IF_LINT"

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Transform mentions of `eval-after-load' to `with-eval-after-load'

	* doc/lispref/loading.texi (Hooks for Loading): Update text to
	not mention `eval-after-load' (bug#20038).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	cursor-type doc fix

	* src/buffer.c (syms_of_buffer): Mention that cursor-type's
	WIDHT/HEIGHT can't exceed the frame char size (bug#19215).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a link from Tool Bar to Images

	* doc/lispref/keymaps.texi (Tool Bar): Add a link to the
	Images node (bug#19722).

2016-04-30  Alan Mackenzie  <acm@muc.de>

	CC Mode: Recognize a noise macro with parens after a declarator's identifier

	* lisp/progmodes/cc-engine.el (c-forward-decl-or-cast-1): In the while loop
	following comment "Skip over type decl suffix operators." insert code also
	to check for noise macros with parentheses.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	(default-mode-line-format): More explicit obsolete info

	* lisp/subr.el (default-mode-line-format): Be more explicit in
	how default values are now handled (bug#19424).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fcompare_buffer_substrings doc string clarification

	* src/editfns.c (Fcompare_buffer_substrings): Extremely minor
	doc string clarification (bug#19255).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	insert-file-contents-literally doc fix

	* lisp/files.el (insert-file-contents-literally): Say that the
	parameters are explained in the other function (bug#18317).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix custom types for cursor-in-non-selected-windows

	* lisp/cus-start.el (standard): Use the same custom types for
	cursor-in-non-selected-windows as for cursor-type (bug#19214).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc clarification to mwheel-scroll

	* lisp/mwheel.el (mwheel-scroll): Mention that the restriction
	does not apply to Windows (bug#19209).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify the doc of eval-expression-print-format

	* lisp/simple.el (eval-expression-print-format): Doc
	clarification (bug#19114).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	(extended-command-suggest-shorter): Add a version string

	* lisp/simple.el (extended-command-suggest-shorter): Add a
	version string.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Document extended-command-suggest-shorter

	* doc/emacs/m-x.texi (M-x): Mention
	extended-command-suggest-shorter (bug#19152).

2016-04-30  Ivan Shmakov  <ivan@siamics.net>

	Add a variable to control "shorter command" suggestions

	* lisp/simple.el (extended-command-suggest-shorter): New variable (bug#19152).
	(execute-extended-command): Use it.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Explictly explain that package-initialize loads the packages

	* lisp/emacs-lisp/package.el (package-initialize): Be explicit
	in saying that `package-initialize' obviates adjusting the
	path or requiring the packages, as this is a question that
	apparently comes up now and then (bug#18829).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Have the doc strings of `load-path' and `require' mention each other

	* src/fns.c (Frequire): Mention `load-path' and fill the doc
	string (bug#18829).

	* src/lread.c (syms_of_lread): Mention that `require' uses
	`load-path'.

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix for insert-pair-alist

	* lisp/emacs-lisp/lisp.el (insert-pair-alist): Say what
	COMMAND-CHAR is (bug#18809).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Move doc of backup-directory-alist to the Backup node

	* doc/emacs/files.texi (Backup): Move the documentation of
	`backup-directory-alist' here from the "Single or Numbered
	Backups" node, because it doesn't seem to have much to do with
	numbering (bug#18692).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Tiny doc clarification for create-fontset-from-fontset-spec

	* lisp/international/fontset.el (create-fontset-from-fontset-spec):
	Clarify what the optional part is (bug#18686).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fill the doc string of font-lock-keywords

	* lisp/font-lock.el (font-lock-keywords): Fill the lines and
	reorganize some explanations (bug#21427).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix for font-lock-remove-keywords

	* lisp/font-lock.el (font-lock-remove-keywords): Add a link to
	`font-lock-add-keywords' to describe KEYWORDS (bug#18634).

2016-04-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify whitespace-style doc string

	* lisp/whitespace.el (whitespace-style): Doc clarification
	(bug#18296).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	No need to test for jka-compr

	* lisp/vc/ediff-util.el (ediff-file-compressed-p): jka-compr
	is always available; no need to test (bug#18204).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fixed for next-error-buffer-p

	* lisp/simple.el (next-error-buffer-p): Clarify doc string
	(bug#18202).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Tiny doc fix

	* src/fileio.c (Ffile_accessible_directory_p): Tiny doc fix
	(and fill) (bug#18201).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix

	* src/keymap.c (Fdefine_prefix_command): Clarify doc string
	slightly (bug#18092).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	delsel doc touch ups

	* lisp/delsel.el (delete-selection-helper): Use non-nil
	instead of t and clarify function return values (bug#18089).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fixes for menu-bar.el

	* lisp/menu-bar.el (clipboard-kill-ring-save): Describe the
	REGION parameter (bug#18028).
	(clipboard-kill-region): Ditto.

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix

	* lisp/rect.el (delete-whitespace-rectangle): Doc fix (bug#18026).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Minor doc clarification

	* lisp/subr.el (y-or-n-p): Document the return value from "n"
	(bug#18024).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Fill font-lock-mode doc string

	* lisp/font-core.el (font-lock-mode): Fill the text to make it
	narrower (bug#18008).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Wrap the auto-generated doc string

	* lisp/emacs-lisp/easy-mmode.el (define-minor-mode): Wrap a
	string to make it less likely that we get overlong lines
	(bug#17999).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify hi-lock-find-patterns

	* lisp/hi-lock.el (hi-lock-find-patterns): Doc clarification
	(bug#17989).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Warning fix in jit-lock-mode

	* lisp/jit-lock.el (jit-lock-mode): Don't issue a warning when
	turning the mode on in an indirect buffer, if this somehow has
	happened (bug#17738).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a doc string to `winner-mode'

	* lisp/winner.el (winner-mode): Add a doc string based on the
	comments in the file (bug#17716).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix for align-newline-and-indent

	* lisp/align.el (align-newline-and-indent): Mention that
	alignment is done by `align' (bug#17707).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Cancel the eldoc timer when switching off eldoc mode

	* lisp/emacs-lisp/eldoc.el (eldoc-mode): Cancel the eldoc
	timer when switching off eldoc mode.  It will be restarted
	again if needed (bug#17582).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix for `kbd'

	* lisp/subr.el (kbd): Describe more fully the format of the
	parameter (bug#17039).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a sanity check to apropos-documentation-internal

	* lisp/apropos.el (apropos-documentation-internal): Add a
	sanity check to be less fragile in the presence of invalid
	data (bug#16725).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc tweak

	* lisp/simple.el (use-empty-active-region): Doc tweak.
	There's only one region (bug#16513).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify `read-face-name' doc and tweak the code

	* lisp/faces.el (read-face-name): Clarify the documentation
	and allow a mix of faces and faces names in all cases
	(bug#16483).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove ": ?" from the read-face-name prompt

	* lisp/faces.el (read-face-name): Remove ": ?" from the prompt
	to be more backwards compatible (bug#15909).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Link from (emacs)Exiting to (lisp)Killing Emacs

	* doc/emacs/entering.texi (Exiting): Link to the lispref
	manual for further customizations (bug#15445).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	find-lisp doc touchups

	* lisp/find-lisp.el (find-lisp-format): Copy over the doc
	string (bug#15047).
	(find-lisp-find-files): Clarify doc.

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't have the manual claim that it lists all CL incompatibilities

	* doc/misc/cl.texi (Common Lisp Compatibility): The list of
	incompatibilities isn't exhaustive, so don't say that it is
	(bug#15171).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix call of `kmacro-display'

	* lisp/kmacro.el (kmacro-view-ring-2nd): Fix call of
	`kmacro-display' (bug#15020).

2016-04-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Change all occurrences of "Mouse-[0-9]" to "mouse-[0-9]"

	* doc/emacs/*.texi: Change all occurrences of "Mouse-[0-9]" to
	"mouse-[0-9]".  These are case sensitive, and the keys are lower case
	(bug#14554).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Rename "Directory Search" menu to "Servers"

	* lisp/menu-bar.el (menu-bar-tools-menu): Rename "Directory
	Search" to "Directory Servers".  Suggested by Eli
	Zaretskii. (bug#14919).

	* lisp/net/eudc.el: Rename ditto throughout.

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove uses of the unused to-end parameter from simple.el

	* lisp/simple.el (line-move-partial): Remove usages of the
	unused to-end parameter, and make it optional (bug#14844).
	(line-move): Remove use of the unused to-end parameter.

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fix: _ chars are automatically removed.

	* lisp/cus-edit.el (custom-buffer-create): _ chars are
	automatically removed when displaying help, so fix the last
	doc change.
	(custom-buffer-create-other-window): Ditto.

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc string change to enable-recursive-minibuffers

	* src/minibuf.c (syms_of_minibuf): Mention
	minibuffer-depth-indicator-mode in the doc string to
	enable-recursive-minibuffers (bug#14147).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix definition of nobreak-space

	* lisp/faces.el (nobreak-space): The definition to
	nobreak-space was inadvertantly changed by the previous checkin.

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify the `interactive' doc string slightly

	* src/callint.c (Finteractive): Clarify the doc string slightly
	  (bug#14577).

2016-04-28  Drew Adams  <drew.adams@oracle.com>

	Make icomplete respect `completion-ignored-extensions'

	* lisp/icomplete.el (icomplete-completions): Heed
	`completion-ignored-extensions' (bug#12939).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Make ibuffer not break on newline-embedded buffer names

	* lisp/ibuffer.el (name): When buffer names contain newlines,
	quote those newlines before displaying (bug#12378).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a new face for non-breaking hyphen characters

	* doc/emacs/display.texi (Standard Faces): Mention nobreak-hyphen.
	(Text Display): Ditto.

	* lisp/faces.el (nobreak-hyphen): New face (bug#12048).

	* src/xdisp.c (get_next_display_element): Use it instead of
	the escape-glyph face.

	* src/xdisp.c (syms_of_xdisp): New symbil Qnobreak_hyphen.

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Make a menu less ambiguous

	* doc/emacs/custom.texi (Key Bindings): The Modifier Keys node
	is about using modifier keys, not binding them (bug#10942).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Make kill-emacs-query-functions into defcustom

	* lisp/files.el (save-buffers-kill-terminal): Mention
	`save-buffers-kill-emacs' (bug#10794).
	(kill-emacs-query-functions): Made into a defcustom.

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Have describe-variable output multi-line values better

	* lisp/help-fns.el (describe-variable): When printing
	multi-line expressions, display them prettier (bug#10723).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up custom-buffer-create code slightly

	* lisp/cus-edit.el (custom-buffer-create-other-window): Don't
	pass the unused description value on (for clarity) (bug#10540).
	(custom-buffer-create): Ditto

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify some doc strings

	* lisp/emacs-lisp/syntax.el (syntax-propertize-via-font-lock):
	Clarify doc string (bug#8693).
	(syntax-propertize): Clarify doc string.

2016-04-28  Nicolas Richard  <theonewiththeevillook@yahoo.fr>

	Fix number-at-point in lisp buffers

	* lisp/thingatpt.el (number-at-point): Don't say that things
	like ?a are numbers in lisp mode buffers (bug#8634).

2016-04-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't consider colons to be paragraphs starting chars in strings

	* lisp/emacs-lisp/lisp-mode.el (lisp-fill-paragraph): Don't
	consider colons to start paragraphs in (doc) strings
	(bug#7751).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Make `undo' of `C-x r t' put point where it should be

	* lisp/rect.el (string-rectangle): Make `undo' of a this
	command put point back where it was (bug#7522).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Add some concept index entries for custom types

	* doc/lispref/customize.texi (Composite Types): Add concept
	index entries for restricted-sexp, radio and choice (bug#7385).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention `lisp-indent-function' in the lispref manual

	* doc/lispref/macros.texi (Indenting Macros): Mention
	`lisp-indent-function' (bug#3393).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify doc string of internal compilation function

	* lisp/progmodes/compile.el (compilation-get-file-structure):
	Clarify doc string (bug#3137).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid having `C-x h' mark the prompt part of the minibuffer

	* lisp/simple.el (mark-whole-buffer): Don't mark the prompt
	part of the minibuffer (bug#2589).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow a prefix argument to find-library to pop to a different window

	* lisp/emacs-lisp/find-func.el (find-library): Allow a prefix
	argument to pop to a different window (bug#2270).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Move the diff command to "Operate" in ibuffer

	* lisp/ibuffer.el (ibuffer-mode-operate-map): Move the diff
	command to the "Operate" menu, and remove the customization
	entry to make the "View" menu more logical (bug#1150).

2016-04-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the minor modes in help buffers into buttons

	* lisp/help.el (describe-mode): Make the minor modes into
	buttons to enable easier documentation traversal (bug#1149).

2016-04-27  Jorgen Schaefer  <contact@jorgenschaefer.de>

	Add a number of Python 3 exceptions

	* lisp/progmodes/python.el (python-font-lock-keywords): Clean up
	the exception list, adding a number of new Python 3 exceptions and
	moving some exceptions to the Python 2 and 3 list as Python 2.7
	includes them.

2016-04-26  Anders Lindgren  <andlind@gmail.com>

	Fix bug#22891: wrong terminal width when a fringe width is zero.

	When either fringe width is zero, Emacs reserved one column for a
	continuation glyph. Terminal windows does not take this into
	account when the frame is resized.

	* lisp/window.el (window-adjust-process-window-size): Use
	`window-max-chars-per-line' instead of `window-body-width'.
	* lisp/term.el (term-window-width): Remove function. (It does the
	same as `window-max-chars-per-line' but without recent bug fixes.)
	(term-mode): Use `window-max-chars-per-line' instead of
	`term-window-width'.

2016-04-26  Simen Heggestøyl  <simenheg@gmail.com>

	Add completion of `calc()' in CSS mode

	* lisp/textmodes/css-mode.el (css-value-class-alist): Add `calc()' as
	a completion candidate for several value classes.
	(css--value-class-lookup): Return only unique results.

	* test/lisp/textmodes/css-mode-tests.el
	(css-test-property-values-no-duplicates)
	(css-test-value-class-lookup): Update to reflect the above changes.

2016-04-26  Paul Eggert  <eggert@cs.ucla.edu>

	Fix socketd fd startup bug that I introduced

	Problem reported by Matthew Leach in:
	https://lists.gnu.org/r/emacs-devel/2016-04/msg00778.html
	* src/emacs.c (main): Indicate more clearly the coupling between
	the --daemon option and init_process_emacs.
	* src/lisp.h: Adjust to API changes.
	* src/process.c (set_external_socket_descriptor):
	Remove, replacing by ...
	(init_process_emacs): ... passing the socket FD here instead.
	All uses changed.

2016-04-25  Tao Fang  <fangtao0901@gmail.com>

	Fix: (void-variable url-http-response-status)

	* lisp/url/url-http.el
	(url-https-proxy-after-change-function): Display the error
	message before doing the callback to avoid a void variable
	situation (bug#23290).

2016-04-25  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	smtpmail would say it's done before it is

	* lisp/mail/smtpmail.el (smtpmail-via-smtp): Move the sending
	of the data end marker from here... (bug#23020).
	(smtpmail-send-data): ... to here, so that we don't get a
	"Sending done" before we've sent the final "." (which can make
	the SMPT server reject the email.

2016-04-25  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	`url-retrieve-synchronously' now takes an optional timeout parameter

	* doc/misc/url.texi (Retrieving URLs): Document optional parameters.

	* lisp/url/url.el (url-retrieve-synchronously): Allow passing
	in a timeout parameter (bug#22940).

2016-04-25  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Include "Retype" as a comint password prompt

	* lisp/comint.el (comint-password-prompt-regexp): Include
	"Retype" to catch "Retype password for [account]:" from the
	"pass" utility (bug#22942).

2016-04-25  Alan Mackenzie  <acm@muc.de>

	Fix spurious fontification of "for (; a * b;)" in CC Mode.

	* lisp/progmodes/cc-fonts.el (c-font-lock-declarations): Check for being
	inside the parens of a for statement and after a semicolon near the beginning
	of the lambda form.

2016-04-25  Paul Eggert  <eggert@cs.ucla.edu>

	New function ‘char-from-name’

	This also fixes the mishandling of "\N{CJK COMPATIBILITY
	IDEOGRAPH-F900}", "\N{VARIATION SELECTOR-1}", etc.
	Problem reported by Eli Zaretskii in:
	https://lists.gnu.org/r/emacs-devel/2016-04/msg00614.html
	* doc/lispref/nonascii.texi (Character Codes), etc/NEWS: Document this.
	* lisp/international/mule-cmds.el (char-from-name): New function.
	(read-char-by-name): Use it.  Document that "BED" is treated as
	a name, not as a hexadecimal number.  Reject out-of-range integers,
	floating-point numbers, and strings with trailing junk.
	* src/lread.c (character_name_to_code): Call char-from-name
	instead of inspecting ucs-names directly, so that we handle
	computed names like "VARIATION SELECTOR-1".  Do not use an auto
	string, since char-from-name might GC.
	* test/src/lread-tests.el: Add tests for new behavior, and
	fix some old tests that were wrong.

2016-04-25  Alan Mackenzie  <acm@muc.de>

	c-forward-<>-arglist no longer directly applies face properties in Java Mode.

	This allows the calling of c-restore-<>-properties from c-common-init without
	the test suite giving spurious errors.

	* lisp/progmodes/cc-engine.el (c-forward-<>-arglist): Remove the form that
	sets face properties.
	(c-forward-<>-arglist-recur): Reformulate the bit that handles types inside
	template brackets using c-inside-<>-type-key.  Don't bind
	c-record-type-identifiers or c-record-found-types around the recursive call,
	allowing positions of found types to flow back to the caller.

	* lisp/progmodes/cc-langs.el (c-inside-<>-type-kwds, c-inside-<>-type-key):
	new lang consts/var.

	* lisp/progmodes/cc-mode.el (c-common-init): Don't remove
	c-restore-<>-properties from the list of functions called at mode
	initialization.

2016-04-25  Jun Hao  <jun_hao@aol.com>

	Pass in port only if provided by caller in the OS X keychain

	* lisp/auth-source.el (auth-source-macos-keychain-search): Pass in
	port only if provided (bug#23374).

2016-04-25  Alan Mackenzie  <acm@muc.de>

	Add fontification for a C declaration which looks like a function call.

	For example, "t1 *fn (t2 *b);".

	* lisp/progmodes/cc-engine.el (c-forward-decl-or-cast-1): Add new variable
	at-decl-start, setting it to whether the putative decl starts immediately
	after ; or { or }.  Accept such a construct as a decl when at-decl-start is
	non-nil.

	* lisp/progmodes/cc-langs.el (c-pre-start-tokens): New language variable.

2016-04-25  Eli Zaretskii  <eliz@gnu.org>

	Don't mirror slashes in convert-standard-filename on MS-Windows

	* lisp/w32-fns.el (w32-convert-standard-filename): Don't mirror
	slashes into backslashes.  This avoids producing ugly file names,
	and is deemed no longer necessary, and should certainly be
	unrelated to which shell is in use.

2016-04-24  Dmitry Gutov  <dgutov@yandex.ru>

	Revert the disputed VC change and update the tests

	* lisp/vc/vc-hooks.el (vc-working-revision):
	Remove the previous change.
	(vc-state): Same.  And update the old, incorrect comment about
	unregistered files
	(https://lists.gnu.org/r/emacs-devel/2016-04/msg00526.html).

	* test/lisp/vc/vc-tests.el (vc-test--state): Remove the check
	calling `vc-state' on default-directory (VC state is undefined
	for directories).  Check that `vc-state' returns nil where it
	returned `unregistered' before.  Remove all checks comparing
	invocations with the backend passed in explictly and without.
	(vc-test--working-revision): Remove all checks comparing
	invocations with the backend passed in explictly and without.
	Update comments, and add a new one.

2016-04-24  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/NEWS: Grammar and punctuation improvements.

2016-04-24  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9daf1cf * etc/NEWS: Improve wording of vc-git-log-output-coding-syste...
	0cd2e92 Don't kill ~/ if it's the top level directory
	4f40f5f describe-char: fix insert char documentation
	87ee542 (vc-git-mode-line-string): Don't use `replace-regexp-in-string'

2016-04-24  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	960f90d * etc/AUTHORS: Update the AUTHORS file
	b21e9d4 * admin/update_autogen: Use #!/usr/bin/env bash

2016-04-24  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	78f9af7 ; ChangeLog fixes
	162e549 * admin/authors.el (authors-ignored-files): Additions.
	2b31a0c In x_set_window_size restore do_pending_window_change calls
	401857e Fix Alt-modified keys on some European MS-Windows keyboards
	a77cf24 Document 'help-go-forward'
	1ba947f Revert "Allow to customize names of executables used by grep.el"
	570e0fa Revert "Don't use 'find-program'"
	645f4ef Revert "Use 'grep-find-program' in check-declare.el"
	aa03257 Clarify documentation of 'dired-mark-files-containing-regexp'
	ce0d8c7 Make tmm-menubar work in correct order again
	b8d5a8f Remove the Meta-CVS VC backend

2016-04-24  Simen Heggestøyl  <simenheg@gmail.com>

	Don't let `css--property-values' return duplicates

	* lisp/textmodes/css-mode.el (css--property-values): Don't return
	duplicate values.

	* test/lisp/textmodes/css-mode-tests.el (css-test-property-values):
	Take the above into account.
	(css-test-property-values-no-duplicates): Test that duplicates aren't
	returned by `css--property-values'.

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Call `make-composed-keymap' correctly

	* lisp/image-mode.el (image-mode-map): Call
	`make-composed-keymap' correctly.

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Use `make-composed-keymap' instead of copying the keymap

	* lisp/image-mode.el (image-mode-map): Use
	`make-composed-keymap' instead of copying the keymap.

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Make `q' etc work in image mode again

	* lisp/image-mode.el (image-mode-map): Restore
	special-mode-map as the parent keymap of image-mode-map (bug#23167).

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Fix typo in last url.texi checkin

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Make STARTTLS error messages better

	* lisp/net/network-stream.el (network-stream-open-starttls):
	Output a better error message when TLS negotiation fails while
	doing STARTTLS (bug#23027).

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Encode the shr tests files with trailing white space

2016-04-24  Simen Heggestøyl  <simenheg@gmail.com>

	Cache results of `css--property-values'

	* lisp/textmodes/css-mode.el (css--property-values): Cache computed
	values.

	* test/lisp/textmodes/css-mode-tests.el (css-test-property-value-cache):
	New regression test for the above.

2016-04-24  Michael Albinus  <michael.albinus@gmx.de>

	Some improvements in vc

	* lisp/vc/vc-hooks.el (vc-state, vc-working-revision):
	Check, whether FILE is registered.

	* lisp/vc/vc-rcs.el (vc-rcs-checkout-model): Return `locking'
	for nonexistent files.

	* test/lisp/vc/vc-tests.el (w32-application-type): Declare.
	(vc-test--revision-granularity-function)
	(vc-test--unregister-function): Use `vc-call-backend'.
	(vc-test--run-maybe-unsupported-function): New defmacro.
	(vc-test--register, vc-test--state, vc-test--working-revision)
	(vc-test--checkout-model): Use it.  Fix also expected results.
	(vc-test-src02-state, vc-test-rcs04-checkout-model): They pass now.

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Document the nil/default values of url-user-agent

	* doc/misc/url.texi (Customization): Document the nil/default
	values of url-user-agent.

2016-04-24  Clément Pit--Claudel  <clement.pit@gmail.com>

	Compute User-Agent dynamically in url-http

	* lisp/url/url-http.el (url-http-user-agent-string): Compute
	User-Agent string dynamically.
	(url-http--user-agent-default-string): New function.

	* lisp/url/url-vars.el (url-privacy-level): Allow `emacs' in list
	of information not to send.
	(url-user-agent): Add nil and `default' options; do not
	pre-compute value.

2016-04-24  Jun Hao  <jun_hao@aol.com>

	Handle auth-source items with special characters on OS X

	* lisp/auth-source.el
	(auth-source-macos-keychain-search-items): Handle keychain
	output correctly when has special chararcters (bug#22824).

2016-04-24  Magnus Henoch  <magnus.henoch@gmail.com>

	Implement process-attributes for Darwin

	* src/sysdep.c (timeval_to_timespec, make_lisp_timeval)
	(system_process_attributes): Implement process-attributes
	for Darwin (bug#16579).

2016-04-24  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Use Unicode literals instead of hex values

	* lisp/net/shr.el (shr-tag-bdo): Use Unicode literals instead
	of hex values for greater readability.
	(shr-tag-bdi): Ditto.

2016-04-24  Steve Purcell  <steve@sanityinc.com>

	Allow _ characters in SQL prompts

	* lisp/progmodes/sql.el (sql-product-alist): Allow _
	characters in SQL prompts (bug#22596).

	Fixes issue 22596, whereby "_" is now not considered a word constituent
	character in sql-interactive-mode, so prompts like "foo_dev# " are not
	correctly detected. Rather than piggy-back on the symbol table, we
	explicitly match against alphanumeric chars or "_".

2016-04-23  Glenn Morris  <rgm@gnu.org>

	When autoload-timestamps is nil, use a dummy timestamp rather than "t".

	* lisp/emacs-lisp/autoload.el (autoload--non-timestamp): New constant.
	(autoload-generate-file-autoloads, autoload-find-destination)
	(update-directory-autoloads): Use autoload--non-timestamp.

2016-04-23  Glenn Morris  <rgm@gnu.org>

	* test/lisp/xt-mouse-tests.el: Move from test/automated/.

2016-04-22  Jö Fahlke  <jorrit@jorrit.de>  (tiny change)

	Regexps for matching CMake output

	* lisp/progmodes/compile.el (compilation-error-regexp-alist-alist): Add
	regexps for matching CMake output.
	* test/lisp/progmodes/compile-tests.el (compile-tests--test-regexps-data): Add
	CMake test cases.
	* etc/compilation.txt (CMake): Add CMake examples.

2016-04-22  Artur Malabarba  <bruce.connor.am@gmail.com>

	* lisp/net/tramp-sh.el (tramp-ssh-controlmaster-options):

	Fix docstring quotes.

2016-04-21  Paul Eggert  <eggert@cs.ucla.edu>

	Improve character name escapes

	* doc/lispref/nonascii.texi (Character Properties):
	Avoid duplication of Unicode names.  Reformat examples to fit in
	narrow pages.
	* doc/lispref/objects.texi (General Escape Syntax):
	Simplify and better-organize explanation of \N{...} escapes.
	* src/character.h (CHAR_SURROGATE_PAIR_P): Remove; unused.
	(char_surrogate_p): New inline function.
	* src/lread.c: Do not include string.h; no longer needed.
	(invalid_character_name, check_scalar_value): Remove; the ideas
	behind these functions are now bundled into character_name_to_code.
	(character_name_to_code): Remove undocumented support for "CJK
	IDEOGRAPH-XXXX" names, as "U+XXXX" suffices.  Reject monstrosities
	like "\N{U+-0}" and null bytes in \N escapes.  Reject floating
	point in \N escapes instead of returning garbage.  Use
	AUTO_STRING_WITH_LEN to lessen pressure on the garbage collector.
	* test/src/lread-tests.el (lread-char-number, lread-char-name)
	(lread-string-char-number, lread-string-char-name):
	Test runtime behavior, not compile-time, as the test framework
	is not set up to test compile-time.
	(lread-char-surrogate-1, lread-char-surrogate-2)
	(lread-char-surrogate-3, lread-char-surrogate-4)
	(lread-string-char-number-2, lread-string-char-number-3):
	New tests.
	(lread-string-char-number-1): Rename from lread-string-char-number.

2016-04-21  Philipp Stephani  <phst@google.com>

	Use 'ucs-names' for character name escapes

	* src/lread.c (invalid_character_name, check_scalar_value)
	(parse_code_after_prefix, character_name_to_code): New helper
	functions that use 'ucs-names' and parsing for CJK ideographs.
	(read_escape): Use helper functions.
	(syms_of_lread): New symbol 'ucs-names'.
	* test/src/lread-tests.el: New tests; fix a couple of bugs in
	existing tests.

2016-04-21  Philipp Stephani  <phst@google.com>

	Minor cleanups for character name escapes

	* src/lread.c (init_character_names): Add missing 'void'.
	Remove top-level 'const'.
	(read_escape): Simplify loop a bit.  Remove top-level 'const'.

2016-04-21  Philipp Stephani  <phst@google.com>

	Add documentation for character name escapes

2016-04-21  Philipp Stephani  <phst@google.com>

	Implement named character escapes, similar to Perl

	* src/lread.c (init_character_names): New function.
	(read_escape): Read Perl-style named character escape sequences.
	(syms_of_lread): Initialize new variable 'character_names'.
	* test/src/lread-tests.el (lread-char-empty-name): Add test file
	for src/lread.c.

2016-04-21  Fabrice Popineau  <fabrice.popineau@gmail.com>

	Avoid run-time dependency on libwinpthread DLL on MS-Windows

	* nt/mingw-cfg.site (ac_cv_search_clock_gettime)
	(ac_cv_func_clock_gettime, ac_cv_func_clock_settime): Force to not
	present, so that MinGW64 builds don't depend on libwinpthread.
	(Bug#22959)

2016-04-21  Matthew Leach  <matthew@mattleach.net>

	Add LIBSYSTEMD to the list of supported features

	* configure.ac: Add LIBSYSTEMD to EMACS_CONFIG_FEATURES and print a
	message at the end of configure stating whether Emacs will be build
	with libsystemd support.

2016-04-21  Vasilij Schneidermann  <v.schneidermann@gmail.com>

	Support absolute column movement in 'ansi-term'

	* lisp/term.el (term-handle-ansi-escape): Handle the "\E[G" sequence
	for absolute column movement.  (Bug#23303)

2016-04-21  Jorgen Schaefer  <contact@jorgenschaefer.de>

	Add Python 3.5 keyword "await"

	* lisp/progmodes/python.el (python-font-lock-keywords): Add await as
	keyword.

2016-04-20  Simen Heggestøyl  <simenheg@gmail.com>

	Add "keyframes" to list of CSS at-rules

	* lisp/textmodes/css-mode.el (css-at-ids): Add "keyframes" at-rule.

2016-04-20  Phillip Lord  <phillip.lord@russet.org.uk>

	Prevent bootstrap autoload backup files

	* lisp/emacs-lisp/autoload.el (autoload-find-generated-file): Suppress
	backups in newly created file.

	(autoload-ensure-default-file): Function split into two.
	(autoload-ensure-file-writeable): New function from split.

	(Bug#23203)

2016-04-20  Paul Eggert  <eggert@penguin.cs.ucla.edu>

	Fix org-timestamp-change typo

	Problem reported by Peter Münster (Bug#23299).
	* lisp/org/org.el (org-timestamp-change): Fix typo that relied
	on undocumented behavior in ‘encode-time’.  In practice the
	old code used local time, so use that.

2016-04-19  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid AC_PREPROC_IFELSE glitch in configure.ac

	Problem reported by Angelo Graziosi in:
	https://lists.gnu.org/r/emacs-devel/2016-04/msg00545.html
	* configure.ac (gl_gcc_warnings): Work around an Autoconf glitch:
	AC_PREPROC_IFELSE doesn’t generate a simple shell command.

2016-04-19  Michael Albinus  <michael.albinus@gmx.de>

	autorevert: Resume with polling if file is deleted

	* lisp/autorevert.el: Use consistent wording in comments and
	docstrings.
	(auto-revert-mode): Add local function to `kill-buffer-hook'.
	(auto-revert-notify-handler): Improve handling of `stopped' event.

	* test/lisp/autorevert-tests.el
	(auto-revert-test02-auto-revert-deleted-file): New test.
	(auto-revert-test03-auto-revert-tail-mode)
	(auto-revert-test04-auto-revert-mode-dired): Rename them.

2016-04-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	5a0cbe5 Fix Bug#23276
	2007e32 Sync with upstream vhdl mode v3.38.1.
	b6d2552 Tweak configure.ac syntax in recent module patch

2016-04-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ac00a92 Make sh-electric-here-document-mode accessible in sh-mode-hoo...
	3287f48 ; Add entry to MAINTAINERS
	b85981f * configure.ac (HAVE_MODULES): Exclude gnu-kfreebsd from prev...
	0f33284 Make use of rectangle-preview custom variable.
	aa0d83a Make use of rectangle-preview face.
	33bef6e Use 'grep-find-program' in check-declare.el
	a8560e5 Improve "C-h S" for cl-lib symbols
	52e798b Fix minor issues with removing left or right fringes
	d6ffd64 Speed up redisplay in ansi-term mode
	4ab671c Simplify 8-bit character handling by terminal for 'raw-text'
	f3653ec * configure.ac (HAVE_MODULES): Treat gnu like gnu-linux.  (Bu...
	ab849b7 Fix w32 memory-management problem when extending buffer text

2016-04-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	32364bb substitute-command-keys keeps quotes’ text props
	567ab52 * src/xwidget.c (x_draw_xwidget_glyph_string): More clipping ...
	24b87a1 Add semantic-symref-filepattern-alist entry for lisp-interact...
	cc0b713 Perform xref searches without visiting unopened files
	5045575 Revert "Prevent bootstrap autoload backup files"

2016-04-18  Philipp Stephani  <p.stephani2@gmail.com>

	* lisp/emacs-lisp/easy-mmode.el (define-minor-mode): Fix docstring

	so that it matches the actual implementation.
	See https://lists.gnu.org/r/help-gnu-emacs/2016-04/msg00071.html

2016-04-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/ispell.el: Compile with lexical-binding

	(declare-function): Don't define any more.
	(ispell-check-minver, ispell-looking-back): Tweak definition so that
	the compiler can obviously know that it's always defined.
	(ispell-debug-buffer): Declare var.
	(ispell-hunspell-fill-dictionary-entry)
	(ispell-parse-hunspell-affix-file, ispell-hunspell-add-multi-dic)
	(ispell-find-hunspell-dictionaries, ispell-set-spellchecker-params)
	(ispell-command-loop): Avoid add-to-list on local variables.

2016-04-17  Paul Eggert  <eggert@cs.ucla.edu>

	Minor fixups for external socket launching

	* configure.ac (HAVE_LIBSYSTEMD): Change earliest version to 222.
	* doc/emacs/misc.texi (Emacs Server):
	* etc/NEWS: Spelling and doc fixes.
	* src/emacs.c (main) [HAVE_LIBSYSTEMD]:
	Check for sd_is_socket returning positive, not zero.
	* src/process.c (external_sock_fd): Instead of initializing here ...
	(init_process_emacs): ... initialize it here, so that it does the
	right thing after dump/restore.
	(connect_network_socket): Simplify socket_to_use test.

2016-04-17  Simen Heggestøyl  <simenheg@gmail.com>

	Add HTML5 tags to HTML mode

	* lisp/textmodes/sgml-mode.el (html-tag-alist): Add HTML5 tags.
	(html-tag-help): Add short descriptions of those tags.

2016-04-17  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Finish idna->puny changes in last Message patch

	* lisp/gnus/message.el (message-idna-to-ascii-rhs-1): Use puny
	instead of idna functions.

2016-04-17  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Use puny.el instead of idna.el functions in Gnus

	* lisp/gnus/gnus-art.el (gnus-use-idna): Default to t (since
	Emacs comes with IDNA support built in).
	(article-decode-idna-rhs): Use `puny-decode-domain' instead of
	`idna-to-unicode'.

	* lisp/gnus/gnus-sum.el (gnus-summary-idna-message): Ditto.

2016-04-17  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Mention `message-use-idna' in NEWS

2016-04-17  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Default `message-use-idna' to t

	* lisp/gnus/message.el (message-use-idna): Default to t (since
	Emacs comes with puny.el now).

2016-04-16  Matthew Leach  <matthew@mattleach.net>

	Extend battery.el to exotic power supply types

	* lisp/battery.el (battery-linux-sysfs-regexp): Rename from
	'battery--linux-sysfs-regexp' and make a defcustom. All users
	changed.  (Bug#23216)

2016-04-16  Matthew Leach  <matthew@mattleach.net>

	Add external socket launching support

	* src/process.c (connect_network_socket): Allow a pre-allocated socket
	descriptor to be used if passed to Emacs, avoiding the call to
	'socket' and 'bind'.
	(Fmake_network_process): Allow users to pass ':use-external-socket' in
	the parameter plist to use any sockets that have been passed to Emacs.
	(wait_reading_process_output): Call 'socket' and 'bind' every time.
	(syms_of_process): New symbol ':use-external-socket'.
	(set_external_socket_descriptor): New function.
	(external_sock_fd): New variable.
	* src/lisp.h: (set_external_socket_descriptor): New declaration.
	* src/emacs.c (main): Call 'sd_listen_fds' to read the number of sockets
	passed and call 'set_external_socket_descriptor' to set the external
	socket.
	* src/Makefile.in: Add libsystemd library and C flags to the Emacs
	compilation options.

	* configure.ac: Add new default-on option "systemd" and check for
	libsystemd at configure time.

	* lisp/server.el (server-start): Set ':use-external-socket' to 't' when
	calling 'make-network-process'.

	* etc/NEWS: Document new socket-passing functionality and the configure
	option to disable systemd interaction.

	* doc/emacs/misc.texi (Emacs Server): Document systemd socket passing
	functionality and provide systemd unit examples.
	* doc/lispref/processes.texi (Network Processes): Document new
	'make-network-process' option ':use-external-socket'.

2016-04-16  Matthew Leach  <matthew@mattleach.net>

	Don't spell-check argument of 'cref' TeX macro

	* lisp/textmodes/ispell.el (ispell-tex-skip-alists): Add the cref
	macro to skip spell-checking the cref macro argument.

2016-04-14  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify use of O_BINARY

	* src/callproc.c (call_process):
	* src/fileio.c (write_region):
	* src/filelock.c (read_lock_data):
	* src/image.c (x_find_image_fd):
	* src/lread.c (openp):
	* src/sysdep.c (init_random, emacs_fopen):
	* src/unexcw.c (unexec):
	Omit unnecessary use of O_BINARY, since emacs_open now arranges
	that for us.

2016-04-14  Paul Eggert  <eggert@cs.ucla.edu>

	* src/indent.c (Fvertical_motion): Pacify GCC

	5.3.1 20160406 (Red Hat 5.3.1-6) on x86-64.

2016-04-13  Paul Eggert  <eggert@cs.ucla.edu>

	Port ‘./autogen.sh git’ to non-clones

	Problem reported by Angelo Graziosi in:
	https://lists.gnu.org/r/emacs-devel/2016-04/msg00341.html
	* autogen.sh (do_git): Default to false when the arg is ‘all’ but
	there is no ‘.git’.
	(git_common_dir, hooks): New vars.
	(git_config, tailored_hooks, sample_hooks): Use them.

2016-04-13  Paul Eggert  <eggert@cs.ucla.edu>

	Do not require that .git be a directory

	Problem reportyed by Phillip Lord.
	* admin/update_autogen, autogen.sh, build-aux/gitlog-to-emacslog:
	* configure.ac, make-dist:
	Do not require that .git be a directory, as 'git worktree' makes
	it a file and not a directory.

2016-04-12  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid now-obsolete function gmm-format-time-string

	* lisp/gnus/message.el (message-insert-formatted-citation-line):
	Use format-time-string instead of obsolete function
	gmm-format-time-string.

2016-04-12  Paul Eggert  <eggert@cs.ucla.edu>

	Support OFFSET and (OFFSET ABBR) time zone rules

	This simplifies Gnus and VC time zone support, by letting them
	feed the output of ‘current-time-zone’ and ‘decode time’ to
	primitives that accept time zone arguments.
	* doc/lispref/os.texi (Time Zone Rules, Time Conversion):
	* etc/NEWS:
	* lisp/gnus/message.el (message-insert-formatted-citation-line):
	* lisp/org/org.el (org-timestamp-format):
	* src/editfns.c (Fformat_time_string, Fdecode_time):
	(Fcurrent_time_string, Fcurrent_time_zone, Fset_time_zone_rule):
	Document new behavior.
	* lisp/gnus/gmm-utils.el (gmm-format-time-string):
	* lisp/vc/add-log.el (add-log-iso8601-time-zone):
	Mark as obsolete, as it is now just an alias or narrow wrapper
	around format-time-string.
	* src/editfns.c (tzlookup): Also support integer OFFSET and
	list (OFFSET ABBR) as time zone rules.
	(Fencode_time): No longer need a special case for a cons ZONE.
	(Fcurrent_time_zone): If the time zone string is missing, compute
	it the same way the other new code does.

2016-04-12  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ca50981 Improve time zone documentation
	c23c965 Prevent bootstrap autoload backup files
	9344612 Disable multicolor fonts on OS X since they are not supported...
	c41ce1c Capitalize “Universal Time” in documentation
	10597c9 Don't use 'find-program'

2016-04-11  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	b134c20 Sync with gnulib
	bb30fa9 Fix last change on 2016-01-02
	488a72f ; Spelling fixes
	9b1aab9 Port run-prolog EMACS to SWI-Prolog 7.2.3
	0e7bcec Avoid crashes due to unreasonably large or small text scaling
	85f257c Improve documentation of 'with-eval-after-load'
	668c7bc Improve handling of non-ASCII characters in Git log messages
	b570769 Remove undefined behavior in OS X dumper.
	97211f3 Fix clipping of xwidgets
	e87fbc0 Improve Lisp-level documentation of tooltips
	9f1786e Faces names should not end in "-face".
	3283271 * src/xsmfns.c (syms_of_xsmfns): Remove stray "s in doc strings.
	a1f221b Comint and compile no longer set EMACS
	5c28890 * lisp/subr.el (read-key): Don't let the prompt linger (bug#2...
	a75b9a6 Merge branch 'emacs-25' of git.savannah.gnu.org:/srv/git/emac...
	c93ae7a Allow to customize names of executables used by grep.el
	f6497c6 Set locale encoding to UTF-8 when run from OS X GUI.
	7ad1d07 Avoid signaling errors in 'M-n' at the 'C-x C-f' prompt
	a3f1ac2 Avoid infinite loop in 'studlify-word'
	f36df4b Don’t recommend obsolete EMACS env var
	fb0b531 * lisp/emacs-lisp/package.el: Change from a few days ago need...

2016-04-11  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	96d9e78 Fix "Beginning of buffer" error in forward-page
	20686f7 Add a `transient' project type

2016-04-11  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	80128a7 Fix stability confusion in sort-tests
	1e4aa42 Avoid describe-key error with lambdas
	a05fb21 * lisp/emacs-lisp/package.el (package-install-selected-packag...
	f501116 Sync with gnulib
	c4963f9 Fix doc for Universal Time

2016-04-10  Etienne Prud'homme  <e.e.f.prudhomme@gmail.com>  (tiny change)

	Fix alignement rule for CSS

	* lisp/align.el (align-rules-list): Support CSS properties that have
	multiple words.

2016-04-10  Tassilo Horn  <tsdh@gnu.org>

	New custom option for overriding mailcap choices

	* lisp/net/mailcap.el (mailcap--get-user-mime-data): New function.
	(mailcap--set-user-mime-data): New function.
	(mailcap-user-mime-data): New customization option.
	(mailcap-select-preferred-viewer): New function.
	(mailcap-mime-info): Use it.

	* doc/misc/emacs-mime.texi (mailcap): Document `mailcap-user-mime-data'.

2016-04-10  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#23207

	* src/keyboard.c (read_char): Resume idle timers in case of
	dbus-event, file-notify-event and config-changed-event.
	Reported by Johan Claesson <johanclaesson@bredband.net>.  (Bug#23207)

2016-04-09  Michael Albinus  <michael.albinus@gmx.de>

	Add vc-backend and vc-responsible-backend tests

	* lisp/vc/vc-hooks.el (vc-file-setprop, vc-file-getprop)
	(vc-file-clearprops): Use properties on absolute files.

	* test/lisp/vc/vc-tests.el (vc-test--unregister-function):
	Clear file properties.
	(vc-test--register): Add tests for `vc-backend' and
	`vc-responsible-backend'.  Catch other errors but `vc-not-supported'.
	(vc-test--state, vc-test--checkout-model): Catch other errors
	but `vc-not-supported'.
	(vc-test--working-revision): Fix test for RCS and SCCS.  Catch
	other errors but `vc-not-supported'.
	(vc-test-src02-state): Mark as an expected failure.

2016-04-08  Paul Eggert  <eggert@cs.ucla.edu>

	Minor improvements for hash function primitives

	* src/fns.c (hashfn_eql): Define in terms of hashfn_equal and
	hashfn_eq rather than reaching inside them.
	(hashtest_eq, hashtest_eql, hashtest_equal):
	Now constants with initializers.
	(syms_of_fns): Omit no-longer-needed initialization.
	* src/lisp.h (LISPSYM_INITIALLY): New macro.
	(DEFINE_LISP_SYMBOL): Use it.

2016-04-08  Paul Pogonyshev  <pogonyshev@gmail.com>

	New primitives sxhash-eq, sxhash-eql

	* doc/lispref/hash.texi (Defining Hash), etc/NEWS: Document this.
	* lisp/emacs-lisp/byte-opt.el (side-effect-free-fns):
	Add sxhash-equal, sxhash-eq, sxhash-eql.
	* lisp/subr.el (sxhash): Now an alias for sxhash-equal.
	* src/fns.c (Fsxhash_eq, Fsxhash_eql): New functions.n

2016-04-08  Eli Zaretskii  <eliz@gnu.org>

	Teach Dired support parallel execution of commands on MS-Windows

	* lisp/dired-aux.el (dired-shell-stuff-it): Support
	parallel-in-background execution of commands on MS-Windows.
	Test 'w32-shell-dos-semantics' instead of the underlying OS
	when determining whether addition of 'wait' is needed.

2016-04-08  Tino Calancha  <f92capac@gmail.com>

	Make 'dired-do-shell-command' wait for all background jobs

	* lisp/dired-aux.el (dired-shell-stuff-it): Force POSIX shells to
	wait until all background jobs exit.  (Bug#23206).

2016-04-07  Vivek Dasmohapatra  <vivek@etla.org>

	Prefer 'font-lock-face to 'face in erc where appropriate

	* lisp/erc/erc-button.el (erc-button-add-face): Prefer
	'font-lock-face to 'face where appropriate.
	* lisp/erc/erc-capab.el (erc-capab-identify-add-prefix)
	* lisp/erc/erc-dcc.el (erc-dcc-chat-parse-output)
	* lisp/erc/erc-goodies.el (erc-controls-propertize)
	* lisp/erc/erc-stamp.el (erc-format-timestamp)
	* lisp/erc/erc-track.el (erc-faces-in)
	* lisp/erc/erc.el (erc-load-irc-script-lines, erc-display-msg)
	(erc-display-command, erc-make-notice, erc-highlight-notice)
	(erc-format-my-nick, erc-format-@nick, erc-format-privmessage)
	(erc-display-prompt, erc-display-message-highlight)
	(erc-log-irc-protocol): Ditto.

	* test/lisp/erc/erc-track-tests.el: Converted asserts into ert
	tests.

2016-04-06  Lele Gaifax  <lele@metapensiero.it>

	Add new keywords of Python 3.5

	Python 3.5, released in mid September 2015, introduced a few new
	keywords to better support asynchronous code, "async" and "await"
	in particular. See https://www.python.org/dev/peps/pep-0492/ for
	details. (Bug#21783)
	* lisp/progmodes/python.el (python-rx-constituents): Add async
	def/for/with as block-start and async def as defun.
	* lisp/progmodes/python.el (python-font-lock-keywords): Add async
	def/for/with as keyword.
	* test/automated/python-tests.el (python-indent-after-async-block-1,
	python-indent-after-async-block-2, python-indent-after-async-block-3,
	python-nav-beginning-of-defun-3): New tests to test indentation and
	navigation for the async keyword.

2016-04-05  Etienne Prud'homme  <e.e.f.prudhomme@gmail.com>  (tiny change)

	Support completion of at-rules in SCSS mode

	lisp/textmodes/css-mode.el (scss-at-ids): New defconst holding
	SCSS-specific at-rules.
	(css--at-ids): New buffer-local variable holding the list of at-rules
	for the current mode.
	(css--complete-at-rule): Retrieve at-rules from `css--at-ids`.
	(scss-mode): Set `css--at-ids'.

2016-04-05  Paul Eggert  <eggert@cs.ucla.edu>

	Enable GCC warnings in developer builds

	However, do not fail; just issue the warnings.  Add an option
	--enable-gcc-warnings=warn-only to configure, to implement this.
	* INSTALL, etc/NEWS: Document this.
	* configure.ac (gl_GCC_VERSION_IFELSE): New macro, from coreutils.
	(gl_gcc_warnings, WERROR_CFLAGS): Use it to add new option.
	Don’t treat --with-x-toolkit=no as a special case when configuring
	warnings.

2016-04-05  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Inhibit querying for the encoding of the headers when resending

	* lisp/gnus/message.el (message-resend): Inhibit querying for
	the encoding of the headers when resending.

2016-04-04  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer AUTO_STRING_WITH_LEN to make_formatted_string

	* src/buffer.c (Fgenerate_new_buffer_name):
	* src/filelock.c (get_boot_time):
	* src/minibuf.c (get_minibuffer):
	* src/process.c (make_process):
	* src/xdisp.c (ensure_echo_area_buffers):
	Prefer AUTO_STRING_WITH_LEN + sprintf to make_formatted_string
	when either will do.

2016-04-04  Tao Fang  <fangtao0901@gmail.com>

	Allow URL using HTTPS proxies using CONNECT

	* lisp/url/url-http.el (url-http-find-free-connection): Allow
	using proxies (bug#11788).
	(url-http-end-of-document-sentinel): Ditto.
	(url-http): The protocol may change from http to https and
	vice versa.
	(url-https-proxy-connect): Allow using CONNECT proxies for https.

2016-04-04  Paul Eggert  <eggert@cs.ucla.edu>

	New C macro AUTO_STRING_WITH_LEN

	Put a bit less pressure on the garbage collector by defining a
	macro that is like AUTO_STRING but also allows null bytes in strings,
	and by extending AUTO_STRING to work with any unibyte string.
	* src/alloc.c (verify_ascii): Remove; all uses removed.
	AUTO_STRING can now be used on non-ASCII unibyte strings.
	* src/lisp.h (AUTO_STRING): Now allows non-ASCII unibyte strings.
	(AUTO_STRING_WITH_LEN): New macro.
	* src/coding.c (from_unicode_buffer):
	* src/editfns.c (format_time_string):
	* src/emacs-module.c (module_make_string, module_format_fun_env):
	* src/fileio.c (Fexpand_file_name):
	* src/font.c (font_parse_family_registry):
	* src/ftfont.c (ftfont_get_charset):
	* src/keymap.c (silly_event_symbol_error):
	* src/menu.c (single_menu_item):
	* src/sysdep.c (system_process_attributes):
	Use AUTO_STRING_WITH_LEN if possible.
	* src/emacs-module.c (module_make_function):
	* src/fileio.c (report_file_errno, report_file_notify_error):
	* src/fns.c (Flocale_info):
	* src/sysdep.c (system_process_attributes):
	Use AUTO_STRING if possible.  This is doable more often now
	that AUTO_STRING works on any unibyte string.

2016-04-04  Paul Eggert  <eggert@cs.ucla.edu>

	Port redirect-debugging-output to MS-Windows

	Suggested by Eli Zaretskii in:
	https://lists.gnu.org/r/emacs-devel/2016-04/msg00037.html
	* src/print.c [WINDOWSNT]: Include sys/socket.h.
	* src/w32.c (sys_dup2): Work around problem with MS-Windows _dup2.

2016-04-04  Paul Eggert  <eggert@cs.ucla.edu>

	Port redirect-debugging-output to non-GNU/Linux

	Problem reported by Kylie McClain for musl in:
	https://lists.gnu.org/r/emacs-devel/2016-03/msg01592.html
	* etc/DEBUG, etc/NEWS: Mention this.
	* src/callproc.c (child_setup) [!MSDOS]:
	* src/dispnew.c (init_display):
	* src/emacs.c (main, Fdaemon_initialized):
	* src/minibuf.c (read_minibuf_noninteractive):
	* src/regex.c (xmalloc, xrealloc):
	Prefer symbolic names like STDERR_FILENO to magic numbers like 2,
	to make file-descriptor manipulation easier to follow.
	* src/emacs.c (relocate_fd) [!WINDOWSNT]: Remove; no longer needed
	now that we make sure stdin, stdout and stderr are open.  All uses
	removed.
	(main): Make sure standard FDs are OK.  Prefer symbolic names like
	EXIT_FAILURE to magic numbers like 1.  Use bool for boolean.
	* src/lisp.h (init_standard_fds): New decl.
	* src/print.c (WITH_REDIRECT_DEBUGGING_OUTPUT) [GNU_LINUX]:
	Remove; no longer needed.
	(Fredirect_debugging_output): Define on all platforms, not just
	GNU/Linux.  Redirect file descriptor, not stream, so that the code
	works even if stderr is not an lvalue.  Report an error if the
	file arg is neither a string nor nil.
	(syms_of_print): Always define redirect-debugging-output.
	* src/sysdep.c (force_open, init_standard_fds): New functions.

2016-04-03  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

2016-04-03  John Wiegley  <johnw@newartisans.com>

	Revert "Add `r'/`l' grep command history commands"

	This reverts commit a32eea60ac90d367435860fe3a10bf843e6f497c.

2016-04-03  John Wiegley  <johnw@newartisans.com>

	Revert "Restore the point in grep buffers when traversing the history"

	This reverts commit f7c5f79ca565d3ef3feeb1e0af5ca261f1bcf58a.

2016-04-03  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	787df9d ; * src/keyboard.c (read_char): Fix typos in a comment.

2016-04-03  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	b787d55 More format-time-string change fixups
	13c8f29 make-xwidget unused arg cleanup
	36e05f0 Remove unused arguments from make-xwidget
	1042217 Document incompatible changes in 'format-time-string'
	7228eb8 Improve documentation of byte-code objects
	0020047 Adapt calls to 'format-time-string' to changes in Emacs 25
	17b5152 Improve vc-diff with Git backend
	c28f87a (js--continued-expression-p): Special-case unary plus and minus
	2d02a5f ; * lisp/vc/vc-annotate.el (vc-annotate): Clarify commentary.
	9151f16 Prevent C++ Mode wrongly fontifying some identifiers near tem...
	b3b523c Avoid crashes due to insanely large columns in tabulated-list...
	a3daa34 Teach M-x disassemble a default argument.
	e30c3e9 Fix EOL decoding in vc-annotate with SVN back-end on MS-Windows
	df441b3 Fix OS X specific settings in tramp-tests
	2244331 Finish fixing a cacheing bug in CC Mode (see 2016-03-09)

	# Conflicts:
	#	lisp/net/tramp-sh.el
	#	lisp/progmodes/cc-engine.el

2016-04-03  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Restore the point in grep buffers when traversing the history

	* lisp/progmodes/grep.el (grep-process-setup): Allow moving
	point to a specific place after finishing the grep command.
	(grep-mode): Use it to restore point after traversing the history.
	(grep--history-point): New internal variable.
	(grep--save-history, grep-forward-history): Use it to restore
	the point.

2016-04-03  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Add `r'/`l' grep command history commands

	* doc/emacs/building.texi (Grep Searching): Mention the
	`r'/`l' commands.

	* lisp/progmodes/grep.el (grep-forward-history): New command.
	(grep-backward-history): Ditto.
	(grep--save-buffers): New function.
	(grep): Use it to record the history.
	(grep--command-history, grep--history-inhibit)
	(grep--history-place): New internal variables for the grep
	history (bug#22627).

2016-04-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#23186, again

	* lisp/net/tramp.el (tramp-encoding-shell)
	(tramp-encoding-command-switch)
	(tramp-encoding-command-interactive): Check for
	`w32-shell-name'.  (Bug#23186)

2016-04-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#23186

	* lisp/net/tramp.el (tramp-encoding-command-switch)
	(tramp-encoding-command-interactive):
	* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
	`tramp-encoding-shell' could be nil.  (Bug#23186)

2016-04-03  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#22145

	* lisp/net/tramp-cache.el (tramp-get-connection-property)
	(tramp-set-connection-property, tramp-connection-property-p)
	(tramp-flush-connection-property): Improve docstring.

	* lisp/net/tramp-sh.el (tramp-maybe-open-connection): Use it.

	* lisp/net/tramp.el (tramp-get-local-locale): New defun.

	* test/automated/tramp-tests.el (tramp--test-utf8):
	Improve settings of coding systems.  (Bug#22145)

2016-04-02  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	7c1802f * doc/lispref/text.texi (Columns): Remove a nonexistent refer...
	9034c50 * doc/man/emacsclient.1: Document +line:column option.
	06495c9 Fix rare problems with echo-area display and multiple frames
	f99b512 In M-%, avoid making buffer-local binding of text-property-de...

2016-04-02  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	e65c307 * src/font.c (QCuser_spec): Add missing colon to :user-spec.
	c8b868b Don't start the 'midnight' timer twice
	278c8a7 * src/xwidget.c (Fxwidget_resize): Fix inappropriate use of X...
	e5c17f4 Fix todo-mode category movement
	bc70fda * lisp/xt-mouse.el (xterm-mouse-utf-8): Add :version.
	cf40f38 Ignore non-nil. non-cons values of unread-command-events
	8ee4c52 Improve documentatuon of 'truncate-partial-width-windows'
	fb9a62c * src/ftfont.c (ftfont_shape_by_flt): Parenthesize as per GNU...
	1e1ea22 Fix 'dired-goto-file' in Dired buffers produced by find-dired
	3a13472 Fix map-put and map-delete for alists (Bug#23105)
	422c3da Minor copyedits of documentation for temporary displays
	90fb9b3 Add customization option for using UTF-8 coordinates in xt-mouse
	f14d463 Minor doc string fixes in replace.el
	e70ee9d Fix scrolling upwards with 'xwidget-webkit-browse-url'
	44782de Fix display of Indic scripts
	326c64f Fix splash screen display at startup
	7ab2a97 ; In NEWS mention new display of minibuffer completions window
	a1cd84c Describe temporary displays in Emacs manual
	5ec1056 Avoid stray As next to IDLW icons
	45577d5 Avoid GTK 3 crash with icons and masks
	e99ff6e * lisp/minibuffer.el (minibuffer-completion-help): Use fit-wi...
	077b78c Define make_save_ptr_ptr unconditionally
	20a1003 Preserve current buffer when popping up TTY menus
	7eba90c Improve font selection by family on MS-Windows
	73d213f Comint, term, and compile now set EMACS
	9524ec5 Ignore more merges when generating ChangeLog
	ad250f2 Sync with gnulib
	c0165ea Resurrect GNUS-NEWS autogeneration
	1e5327c ; Backport ChangeLog.2 fixes from master
	e643977 Make `toggle-frame-maximized' respect the dock on OS X (bug#2...
	38a43f1 Fix bug in displaying header line with a box face
	91e6676 Fix an Isearch var to be a string (Bug#23038)
	76ef522 Fix (args-out-of-range 1) error in cursor-sensor--detect
	8a35f83 Render empty <ul><li><ul> correctly
	d8b2ce5 Ignore invalid base64 encoded embedded images
	52ba24b Fix <p> and <div> newlines with or without <li> in shr
	b8ea08b Avoid errors in 'newline'
	fc3cd53 Fix Bug#23032
	dd2737b Adjudicate review comments in abbrevs.texi
	26f9c50 Fixup the "normal" matcher; highlight global var symbols, too
	413e73b ; Small theme additions
	cd950da Honor prefix arg in doc-view-next-line-or-next-page
	ed909c0 ; Spelling fixes
	6da3a6d Port to strict C99 offsetof
	de7601f Port to GTK with strict C11 compiler
	658aa2d Port to GTK with strict C99 compiler
	1df7173 Avoid screen artifacts with new OS X visible bell after scrol...
	7a2edd3 Merge branch 'emacs-25' of git.sv.gnu.org:/srv/git/emacs into...
	dca240a Suppress some Tramp tests for OSX, do not merge with master
	9094304 * lisp/progmodes/xref.el (xref-buffer-name, xref--window): Mo...
	cbedfc2 * lisp/gnus/mm-decode.el (gnus-format-message): Autoload it.
	005ac7c * lisp/mail/rmail.el (rmail-mime-entity-truncated): Declare.
	9ab03f2 ; Auto-commit of loaddefs files.
	56df617 Address compilation warnings due to 2016-01-03 mml refactoring.
	a1ef911 * lisp/emacs-lisp/smie.el (smie-indent-keyword): Don't burp i...
	79ae7fb * lisp/dired-x.el (dired-omit-here-always): Correct error mes...
	253929f * lisp/dired-x.el (dired-omit-here-always): Replace undefined...
	ce53389 * lisp/xml.el (xml-parse-tag-1): Replace undefined function.
	d6d164f Avoid segfaults due to frame image cache being absent
	bc7f6f6 Improve documentation of glyphless-character display
	6b6916e ; * src/xdisp.c (with_echo_area_buffer): Fix typos in comments.
	ee9a1f7 Support safe navigation operator in non-SMIE indentation code
	c3ed95b Move xsd:base64Binary decoding fix to debbugs.el 0.9.1
	2036be4 Fix Ruby's operator precedence
	1d686c2 (ruby-interpolation-inside-another-interpolation): New failin...
	7950e1d Port to clang 3.7.0 on x86-64
	218ae59 * test/automated/package-test.el (package-test-signed): Tweak...
	ba33b7c Sync with gnulib
	38b276d Fix startup of "emacs -nw" on systems that CANNOT_DUMP
	dbfbedd Do not tokenize a comment before continuation as ';'
	0403620 Don't misindent arguments of a method call inside continuation
	e6776f8 * src/keyboard.c (echo_keystrokes_p): Don't test cursor_in_ec...
	8475f3d ASCII-only etc/NEWS etc.
	5cc6919 Fix a cacheing bug, which led to inordinately slow c-beginnin...
	0ce37ea Fix Isearch prompt when invoked with an argument
	f3033d4 Fix a typo in the Emacs manual
	4235d2d Curved quotes in etc/NEWS etc.
	26b56dc Fix some single quotes in documentation
	80ec484 Make lisp-completion-at-point's argument optional
	9d463ae Tweak the left precedence of '=>'
	5b705bc Indent '.' relative to the first sibling expression
	04f5525 Make '.' associative, for easier sexp navigation
	ba24c99 Revert "Simplify "Visit New File" to "New File""

2016-04-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/erc/erc-backend.el: Use lexical-binding. Silence byte-compiler

	Use #' to quote functions.
	(erc-server-delayed-reconnect): Remove unused arg `event'.
	(erc-process-sentinel-2): Adjust accordingly.
	Don't pass `err' to condition-case if we don't use it.
	(define-erc-response-handler): Use add-hook rather than add-to-list.
	(NICK): Use cl-pushnew rather than add-to-list.
	(331): Remove unused var `topic'.
	(352): Remove unused var `hopcount'.

2016-04-02  Paul Pogonyshev  <pogonyshev@gmail.com>

	Support macros in 'func-arity'

	* src/eval.c (Ffunc_arity): Support Lisp macros as well.

2016-04-02  Andy Moreton  <andrewjmoreton@gmail.com>

	Fix compilation of Cygwin w32 port

	* src/w32xfns.c (init_crit, delete_crit) [HAVE_W32NOTIFY]: Only
	initialize and free the notification set if compiling with
	w32notify feature.

2016-04-01  Paul Eggert  <eggert@penguin.cs.ucla.edu>

	Fix resize incompatibility with GTK+ master

	Problem reported by Matthias Clasen (Bug#23144).
	* src/xterm.c (handle_one_xevent) [USE_GTK]:
	Do not call xg_frame_resized.

2016-04-01  Paul Eggert  <eggert@cs.ucla.edu>

	Fix check for subscript errors in module calls

	* src/emacs-module.c (check_vec_index): New function.
	(module_vec_set, module_vec_get): Use it instead of a
	not-strict-enough check.

2016-03-31  Simen Heggestøyl  <simenheg@gmail.com>

	Support completion of bang-rules in CSS mode

	lisp/textmodes/css-mode.el (css--bang-ids): New buffer-local variable
	holding the list of bang-rules for the current mode.
	(css--font-lock-keywords): Retrieve bang-rules from `css--bang-ids'
	instead of computing them.
	(css--complete-bang-rule): New function for completing a bang-rule.
	(css-completion-at-point): Add support for completing bang-rules.
	(scss-font-lock-keywords): Change from a variable to a function in
	order to recompute `css--font-lock-keywords' when `css--bang-ids' has
	changed.
	(scss-mode): Set `css--bang-ids' and recompute font-lock keywords.

2016-03-30  Simen Heggestøyl  <simenheg@gmail.com>

	Add HTML4 tags to HTML mode

	* lisp/textmodes/sgml-mode.el (html-tag-alist): Add HTML4 tags.
	(html-tag-help): Add short descriptions of those tags.

2016-03-29  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings for buffer-hash etc.

	* src/fns.c (make_digest_string): Now static.
	(secure_hash): Omit unused local.

2016-03-29  Oleh Krehel  <ohwoeowho@gmail.com>

	Add support for 7z archives

	* lisp/dired-aux.el (dired-compress-file-suffixes): "Z" should now
	  also work with 7z archives.

	The shell command should produce a single extracted directory named
	after the archive's name.

	In case the extracted directory exists, all files will be overwritten
	without a prompt. This matches the expected behavior with the "tar.gz"
	archives.

2016-03-29  Nicolas Petton  <nicolas@petton.fr>

	* lisp/emacs-lisp/seq.el: Require cl-lib instead of cl-extra

2016-03-29  Michael Albinus  <michael.albinus@gmx.de>

	Fix typo in network-stream-tests.el

	* test/lisp/net/network-stream-tests.el
	(connect-to-tls-ipv6-nowait): Fix typo.

2016-03-29  Nicolas Petton  <nicolas@petton.fr>

	New function seq-sort-by in seq.el

	* lisp/emacs-lisp/seq.el (seq-sort-by): New function.
	* test/lisp/emacs-lisp/seq-tests.el: New test for seq-sort-by.
	* doc/lispref/sequences.texi: Add documentation for seq-sort-by.

2016-03-28  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Mention the `M-q' changes

2016-03-28  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Have `M-q' not mark buffers are changed when they haven't

	* lisp/textmodes/fill.el (fill-paragraph): Use `buffer-hash'
	to avoid marking buffers as changed when they haven't.

2016-03-28  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Add a new function `buffer-hash'

	* doc/lispref/text.texi (Checksum/Hash): Document `buffer-hash'.

	* src/fns.c (Fbuffer_hash): New function.
	(make_digest_string): Refactored out into its own function.
	(secure_hash): Use it.

	* test/src/fns-tests.el (fns-tests-hash-buffer): New tests.

2016-03-27  Paul Eggert  <eggert@cs.ucla.edu>

	Rename C names to match Lisp symbols better

	This was inspired by commit e65c3079c65595d95749348366af9811fafff062,
	which fixed a bug where the C name for a symbol disagreed with the
	symbol name itself.  Fix other instances of disagreements that I found.
	Although this doesn’t fix a bug, it should make code easier to follow.
	The remaining disagreements are idiosyncratic: Qminus, Qplus,
	Qsans__serif, Qbackquote, Qcomma, Qcomma_at, Qcomma_dot.
	All uses changed.
	* src/alloc.c (QAutomatic_GC): Rename from Qautomatic_gc.
	* src/dbusbind.c (QCsystem): Rename from QCdbus_system_bus.
	(QCsession): Rename from QCdbus_session_bus.
	(QCtimeout): Rename from QCdbus_timeout.
	(QCbyte): Rename from QCdbus_type_byte.
	(QCboolean): Rename from QCdbus_type_boolean.
	(QCint16): Rename from QCdbus_type_int16.
	(QCuint16): Rename from QCdbus_type_uint16.
	(QCint32): Rename from QCdbus_type_int32.
	(QCuint32): Rename from QCdbus_type_uint32.
	(QCint64): Rename from QCdbus_type_int64.
	(QCuint64): Rename from QCdbus_type_uint64.
	(QCdouble): Rename from QCdbus_type_double.
	(QCstring): Rename from QCdbus_type_string.
	(QCobject_path): Rename from QCdbus_type_object_path.
	(QCsignature): Rename from QCdbus_type_signature.
	(QCunix_fd): Rename from QCdbus_type_unix_fd.
	(QCarray): Rename from QCdbus_type_array.
	(QCvariant): Rename from QCdbus_type_variant.
	(QCstruct): Rename from QCdbus_type_struct.
	(QCdict_entry): Rename from QCdbus_type_dict_entry.
	(QCserial): Rename from QCdbus_registered_serial.
	(QCmethod): Rename from QCdbus_registered_method.
	(QCsignal): Rename from QCdbus_registered_signal.
	* src/emacs-module.c (Qinternal__module_call):
	Rename from Qinternal_module_call.
	* src/frame.c (Qwindow__pixel_to_total):
	Rename from Qwindow_pixel_to_total.
	* src/gnutls.c (QChostname): Rename from QCgnutls_bootprop_hostname.
	(QCpriority): Rename from QCgnutls_bootprop_priority.
	(QCtrustfiles): Rename from QCgnutls_bootprop_trustfiles.
	(QCkeylist): Rename from QCgnutls_bootprop_keylist.
	(QCcrlfiles): Rename from QCgnutls_bootprop_crlfiles.
	(QCmin_prime_bits): Rename from QCgnutls_bootprop_min_prime_bits.
	(QCloglevel): Rename from QCgnutls_bootprop_loglevel.
	(QCcomplete_negotiation): Rename from QCgnutls_complete_negotiation.
	(QCverify_flags): Rename from QCgnutls_bootprop_verify_flags.
	(QCverify_error): Rename from QCgnutls_bootprop_verify_error.
	* src/w32fns.c (Qfont_parameter): Rename from Qfont_param.
	(Qgnutls): Rename from Qgnutls_dll.
	(Qlibxml2): Rename from Qlibxml2_dll.
	(Qzlib): Rename from Qzlib_dll.
	* src/w32select.c (Qutf_16le_dos): Rename from QUNICODE.
	* src/window.c (Qwindow__resize_root_window):
	Rename from Qwindow_resize_root_window.
	(Qwindow__resize_root_window_vertically):
	Rename from Qwindow_resize_root_window_vertically.
	(Qwindow__sanitize_window_sizes):
	Rename from Qwindow_sanitize_window_sizes.
	(Qwindow__pixel_to_total): Rename from Qwindow_pixel_to_total.
	* src/xdisp.c (Qredisplay_internal_xC_functionx):
	Rename from Qredisplay_internal.
	* src/xfns.c (Qfont_parameter): Rename from Qfont_param.
	* src/xselect.c (Q_EMACS_TMP_): Rename from QEMACS_TMP.

2016-03-26  Paul Eggert  <eggert@cs.ucla.edu>

	func-arity minor improvements

	* src/bytecode.c (get_byte_code_arity): Omit unnecessary
	runtime test for integer argument, unless debugging.
	Use EMACS_INT for Emacs integers.
	* src/eval.c (Ffunc_arity): Omit unused locals.
	Avoid side effects in ‘if’ expr.
	(lambda_arity): Use bool for boolean, and EMACS_INT for Emacs ints.

2016-03-26  John Wiegley  <johnw@newartisans.com>

	Restore the fix to bug#18527 from commit d6868025

2016-03-26  Martin Rudalics  <rudalics@gmx.at>

	Safely run window size change functions

	* src/window.c (run_window_size_change_functions): Use
	safe_call1 when running a size change function.
	(grow_mini_window, shrink_mini_window): Report error when
	minibuffer window cannot be resized.

2016-03-26  Paul Pogonyshev  <pogonyshev@gmail.com>

	Implement 'func-arity'

	* src/eval.c (Ffunc_arity, lambda_arity): New functions.
	* src/bytecode.c (get_byte_code_arity): New function.
	* src/lisp.h (get_byte_code_arity): Add prototype.

	* doc/lispref/functions.texi (What Is a Function): Document
	'func-arity'.

	* etc/NEWS: Mention 'func-arity'.

	* test/src/fns-tests.el (fns-tests-func-arity): New test set.

2016-03-25  Alan Mackenzie  <acm@muc.de>

	Fix absence of c-noise-macro-name-re, etc., in languages which don't use it

	* lisp/progmodes/cc-engine.el (c-forward-keyword-prefixed-id, c-forward-type)
	(c-forward-declarator, c-forward-decl-or-cast-1, c-backward-over-enum-header)
	(c-guess-basic-syntax): Check c-opt-cpp-prefix before `looking-at'
	c-noise-macro-with-parens-name-re.

	* lisp/progmodes/cc-fonts.el (c-complex-decl-matchers): The same as for
	cc-engine.el.

	* lisp/progmodes/cc-mode.el (c-basic-common-init): Add call to
	`c-make-noise-macro-regexps'.
	(c-mode, c++-mode, objc-mode): Remove calls to `c-make-noise-macro-regexps'.

	* lisp/progmodes/cc-vars.el (c-noise-macro-with-parens-name-re)
	(c-noise-macro-with-re): Initialize to "\\<\\>" rather than nil.

2016-03-25  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	(shr-insert): Respect non-breaking space in non-<pre> text

	* lisp/net/shr.el (shr-insert): Respect non-breaking space in
	non-<pre> text.

2016-03-25  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	parse-times-string doc string clarification

	* lisp/calendar/parse-time.el (parse-time-string): Note that
	we accept RFC2822 strings.

2016-03-25  Marcin Borkowski  <mbork@mbork.pl>

	Doc string fix

	* lisp/calendar/parse-time.el (parse-time-tokenize): Clarify
	doc string and clean up code.

2016-03-25  Michael Albinus  <michael.albinus@gmx.de>

	Cleanup file notification code in Tramp

	* lisp/net/tramp-sh.el (tramp-sh-handle-file-notify-add-watch):
	Make `events' a list of symbols for "inotifywait".
	(tramp-sh-gvfs-monitor-dir-process-filter): Make event a list.
	Call `file-notify-handle-event' for better traces.
	(tramp-sh-inotifywait-process-filter): Check for expected events.
	Call `file-notify-handle-event' for better traces.

2016-03-24  Michael Albinus  <michael.albinus@gmx.de>

	Adapt filenotify-tests.el according latest tests

	* test/lisp/filenotify-tests.el (file-notify-test02-events)
	(file-notify-test04-file-validity, file-notify-test05-dir-validity):
	Remove superfluous `read-event' calls.
	(file-notify-test02-events): Expect different events under MS
	Windows 7 and 10.
	(file-notify-test04-file-validity): Move `file-notify-valid-p'
	check up.

2016-03-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	ad250f2 Sync with gnulib
	c0165ea Resurrect GNUS-NEWS autogeneration

	# Conflicts:
	#	etc/GNUS-NEWS
	#	lisp/Makefile.in

2016-03-23  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	e643977 Make `toggle-frame-maximized' respect the dock on OS X (bug#2...
	38a43f1 Fix bug in displaying header line with a box face

2016-03-23  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/NEWS: Use straight quotes.

2016-03-23  Simen Heggestøyl  <simenheg@gmail.com>

	Support completion of attribute values in CSS mode

	* lisp/textmodes/css-mode.el (css-property-alist): New defconst
	holding CSS identifiers and the values they can have.
	(css-property-ids): Compute dynamically from `css-property-alist'.
	(css-value-class-alist): New defconst holding property value classes
	and their values.
	(css--property-value-cache): New variable providing a cache for
	`css--property-values'.
	(css--value-class-lookup): New function for computing a list of values
	in a value class.
	(css--property-values): New function for computing a list of possible
	values for a CSS property.
	(css--complete-property-value): New function for completing a property
	value.
	(css-completion-at-point): Add support for completing property values.
	* test/lisp/textmodes/css-mode-tests.el: New file.

2016-03-22  Wilson Snyder  <wsnyder@wsnyder.org>

	Sync with verilog-mode development tree.

	* lisp/progmodes/verilog-mode.el (verilog-imenu-generic-expression,
	verilog-speedbar-initialize): Automatically add verilog-mode
	extensions when in speedbar mode, bug1045, bug1046.  Reported by
	David Shleifman.
	(verilog-mode-map): Move `verilog-star-comment' from M-* to C-c/ to
	avoid conflict with `pop-tag-mark'. Reported by Ian Perryman.
	(verilog-read-always-signals-recurse): Fix :: notation for
	auto-reset signals.  Reported by Andrew Jones.
	(verilog-font-lock-grouping-keywords-face): Fix highlighting of
	grouping keywords, bug1002. Reported by Paul Sargent.
	(verilog-save-font-no-change-functions): Commentary and fix
	pre-Emacs 21 behavior.

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	Compute a better commit message for merges

	Problem reported by David Engster in:
	https://lists.gnu.org/r/emacs-devel/2016-03/msg01270.html
	* admin/gitmerge.el (gitmerge-commit-message):
	Truncate the computed commit message to at most 72 characters per line.
	(gitmerge-maybe-resume): Don’t use "-" as the commit message for
	merges; use the computed commit message instead.

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	* admin/gitmerge.el (gitmerge-skip-regexp): Add "no need to merge".

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	Change do-not-merge pattern to "do not merge"

	This should avoid the problem we recently had with
	automatically-generated merge messages, while still letting people
	specify commits not to merge.
	* admin/gitmerge.el (gitmerge-skip-regexp): Add "do not merge".
	(gitmerge-highlight-skip-regexp): Fold case when searching
	for gitmerge-skip-regexp.

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	91e6676 Fix an Isearch var to be a string (Bug#23038)
	76ef522 Fix (args-out-of-range 1) error in cursor-sensor--detect

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	-

	-

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	Keep "merge" commits by default in gitmerge

	* admin/gitmerge.el (gitmerge-skip-regexp): Omit "merge", as it
	causes false positives.  See:
	https://lists.gnu.org/r/emacs-devel/2016-03/msg01234.html

2016-03-22  Paul Eggert  <eggert@cs.ucla.edu>

	Assume NON_BLOCKING_CONNECT (Bug#22946)

	* lisp/proced.el (proced-signal-list): Omit comment about
	obsolete systems that do not support POSIX 1003.1-2001 signals.
	* src/process.c (NON_BLOCKING_CONNECT): Remove, since we can now
	assume POSIX 1003.1-2001 or better here.  Assume it’s defined.
	(connect_network_socket): Assume EINPROGRESS is defined,
	as that’s portable too now.
	(Fmake_network_process): Use bool for boolean.

2016-03-21  Eli Zaretskii  <eliz@gnu.org>

	Fix problems caused by new implementation of sub-word mode

	* lisp/subr.el (forward-word-strictly, backward-word-strictly):
	New functions.
	(word-move-empty-char-table): New variable.

	* etc/NEWS: Mention 'forward-word-strictly' and
	'backward-word-strictly'.

	* doc/lispref/positions.texi (Word Motion): Document
	'find-word-boundary-function-table', 'forward-word-strictly', and
	'backward-word-strictly'.  (Bug#22560)

	* src/syntax.c (syms_of_syntax)
	<find-word-boundary-function-table>: Doc fix.

	* lisp/wdired.el (wdired-xcase-word):
	* lisp/textmodes/texnfo-upd.el (texinfo-copy-node-name)
	(texinfo-copy-section-title, texinfo-start-menu-description)
	(texinfo-copy-menu-title, texinfo-specific-section-type)
	(texinfo-insert-node-lines, texinfo-copy-next-section-title):
	* lisp/textmodes/texinfo.el (texinfo-clone-environment)
	(texinfo-insert-@end):
	* lisp/textmodes/texinfmt.el (texinfo-format-scan)
	(texinfo-anchor, texinfo-multitable-widths)
	(texinfo-multitable-item):
	* lisp/textmodes/tex-mode.el (latex-env-before-change):
	* lisp/textmodes/flyspell.el (texinfo-mode-flyspell-verify):
	* lisp/skeleton.el (skeleton-insert):
	* lisp/simple.el (count-words):
	* lisp/progmodes/vhdl-mode.el (vhdl-beginning-of-libunit)
	(vhdl-beginning-of-defun, vhdl-beginning-of-statement-1)
	(vhdl-update-sensitivity-list, vhdl-template-block)
	(vhdl-template-break, vhdl-template-case, vhdl-template-default)
	(vhdl-template-default-indent, vhdl-template-for-loop)
	(vhdl-template-if-then-use, vhdl-template-bare-loop)
	(vhdl-template-nature, vhdl-template-procedural)
	(vhdl-template-process, vhdl-template-selected-signal-asst)
	(vhdl-template-type, vhdl-template-variable)
	(vhdl-template-while-loop, vhdl-beginning-of-block)
	(vhdl-hooked-abbrev, vhdl-port-copy, vhdl-hs-forward-sexp-func):
	* lisp/progmodes/verilog-mode.el (verilog-backward-sexp)
	(verilog-forward-sexp, verilog-beg-of-statement)
	(verilog-set-auto-endcomments, verilog-backward-token)
	(verilog-do-indent):
	* lisp/progmodes/vera-mode.el (vera-guess-basic-syntax)
	(vera-indent-block-closing):
	* lisp/progmodes/simula.el (simula-context)
	(simula-backward-up-level, simula-forward-down-level)
	(simula-previous-statement, simula-next-statement)
	(simula-skip-comment-backward, simula-calculate-indent)
	(simula-find-if, simula-electric-keyword):
	* lisp/progmodes/sh-script.el (sh-smie--rc-newline-semi-p):
	* lisp/progmodes/ruby-mode.el (ruby-smie--redundant-do-p)
	(ruby-smie--forward-token, ruby-smie--backward-token)
	(ruby-singleton-class-p, ruby-calculate-indent)
	(ruby-forward-sexp, ruby-backward-sexp):
	* lisp/progmodes/ps-mode.el (ps-run-goto-error):
	* lisp/progmodes/perl-mode.el (perl-syntax-propertize-function)
	(perl-syntax-propertize-special-constructs)
	(perl-backward-to-start-of-continued-exp):
	* lisp/progmodes/pascal.el (pascal-indent-declaration):
	* lisp/progmodes/octave.el (octave-function-file-p):
	* lisp/progmodes/mantemp.el (mantemp-insert-cxx-syntax):
	* lisp/progmodes/js.el (js--forward-function-decl):
	* lisp/progmodes/idlwave.el (idlwave-show-begin-check)
	(idlwave-beginning-of-block, idlwave-end-of-block)
	(idlwave-block-jump-out, idlwave-determine-class):
	* lisp/progmodes/icon.el (icon-is-continuation-line)
	(icon-backward-to-start-of-continued-exp, end-of-icon-defun):
	* lisp/progmodes/hideif.el (hide-ifdef-define):
	* lisp/progmodes/f90.el (f90-change-keywords):
	* lisp/progmodes/cperl-mode.el (cperl-electric-pod)
	(cperl-linefeed, cperl-electric-terminator)
	(cperl-find-pods-heres, cperl-fix-line-spacing)
	(cperl-invert-if-unless):
	* lisp/progmodes/cc-engine.el (c-forward-<>-arglist-recur):
	* lisp/progmodes/cc-align.el (c-lineup-java-inher):
	* lisp/progmodes/ada-mode.el (ada-compile-goto-error)
	(ada-adjust-case-skeleton, ada-create-case-exception)
	(ada-create-case-exception-substring)
	(ada-case-read-exceptions-from-file, ada-after-keyword-p)
	(ada-scan-paramlist, ada-get-current-indent, ada-get-indent-end)
	(ada-get-indent-if, ada-get-indent-block-start)
	(ada-get-indent-loop, ada-get-indent-type)
	(ada-search-prev-end-stmt, ada-check-defun-name)
	(ada-goto-decl-start, ada-goto-matching-start)
	(ada-goto-matching-end, ada-looking-at-semi-or)
	(ada-looking-at-semi-private, ada-in-paramlist-p)
	(ada-search-ignore-complex-boolean, ada-move-to-start)
	(ada-move-to-end, ada-which-function, ada-gen-treat-proc):
	* lisp/net/quickurl.el (quickurl-grab-url):
	* lisp/mail/sendmail.el (mail-do-fcc):
	* lisp/mail/rmail.el (rmail-resend):
	* lisp/mail/mailabbrev.el (mail-abbrev-complete-alias):
	* lisp/mail/mail-extr.el (mail-extract-address-components):
	* lisp/json.el (json-read-keyword):
	* lisp/files.el (insert-directory):
	* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine):
	* lisp/completion.el (symbol-under-point, symbol-before-point)
	(symbol-before-point-for-complete, next-cdabbrev)
	(add-completions-from-c-buffer):
	* lisp/cedet/semantic/texi.el (semantic-up-context)
	(semantic-beginning-of-context):
	* lisp/cedet/semantic/bovine/el.el (semantic-get-local-variables):
	use 'forward-word-strictly' and 'backward-word-strictly' instead
	of 'forward-word' and 'backward-word'.

	[This reapplies commit c1d32a65372c72d7de4808d620eefd3214a8e92a,
	which was inadvertently lost by merge commit
	c71e7cc113ed0d5f01aaa2e441a3e3c9fbeb9fa5.]

2016-03-21  Paul Eggert  <eggert@cs.ucla.edu>

	* etc/TODO: Minor quoting and grammar fixes.

	[This reapplies commit 433407d8230a8a256b26c6c7615d3921b43f59ce,
	which was inadvertently lost by merge commit
	5ab243f40e4db91586ff74b01a775a5218a1d5be.]

2016-03-21  Alan Mackenzie  <acm@muc.de>

	Don't confuse "::" with ":" when trying to parse member initializers.

	* lisp/progmodes/cc-engine.el (c-back-over-member-initializers): Check
	more robustly for ":" token when searching backwards for it.

	* lisp/progmodes/cc-langs.el (c-:$-multichar-token-regexp): New
	language variable.

	[This reapplies commit 9e5452f7166e3634f2d8e943815ed722e1672714,
	which was inadvertently lost by merge commit
	7823745acbe9b87eea2db4ef434e379fc903ec35.]

2016-03-21  Eli Zaretskii  <eliz@gnu.org>

	Ensure positive number of glyphs for margins of positive width

	* src/dispnew.c (margin_glyphs_to_reserve): Always return a
	positive value when a non-zero width of the marginal area was
	requested.  (Bug#22356)

	[This reapplies commit 740849fe986b62a839bce4bbf67d0036fc1be0b9,
	which was inadvertently lost by merge commit
	7823745acbe9b87eea2db4ef434e379fc903ec35.]

2016-03-21  Alan Mackenzie  <acm@muc.de>

	In comment-dwim with style `extra-line', respect indent-tabs-mode.

	This fixes bug #22369.

	* lisp/newcomment.el (comment-make-bol-ws): New function.
	(comment-make-extra-lines): Use new function instead of a crude `make-string'.

	[This reapplies commit 016b3d5894b8c424eab262aeefc646c6cd03a70a,
	which was inadvertently lost by merge commit
	7823745acbe9b87eea2db4ef434e379fc903ec35.]

2016-03-21  Eli Zaretskii  <eliz@gnu.org>

	Merge doc fixes for 'random' lost in previous merge

	[This reapplies part of commit
	3ffe81e245d854a694ae1734f1b6a995bdc5e724,
	which was inadvertently lost by merge commit
	7823745acbe9b87eea2db4ef434e379fc903ec35.]
	(Bug#22202)

2016-03-21  Eli Zaretskii  <eliz@gnu.org>

	Unhide the --no-line-directive option to 'etags'

	* lib-src/etags.c (print_help): Un-undocument the --no-line-directive
	option.  (Bug#22306)

	* doc/man/etags.1: Document the --no-line-directive option.

	[This reapplies commit fee0526a189f43e8470d78e8374bd425890fbe6f,
	which was inadvertently lost by merge commit
	7823745acbe9b87eea2db4ef434e379fc903ec35.]

2016-03-21  Alan J Third  <alan@idiocy.org>  (tiny change)

	Fix picture-mode wrt double-width characters

	* lisp/textmodes/picture.el (picture-insert): Check the width of
	the character being replaced, not just that of the replacement.
	(Bug#1808)

	[This reapplies commit b70dba4e18514411ed38b5bbb846558158842ace,
	which was inadvertently lost by merge commit
	7823745acbe9b87eea2db4ef434e379fc903ec35.]

2016-03-20  Martin Rudalics  <rudalics@gmx.at>

	Resurrect earlier fix of resize_frame_windows

	* src/window.c (resize_frame_windows): Resurrect earlier fix for
	calculating the number of columns of the minibuffer window which
	was lost in subsequent merges.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Move the cert files to the data directory

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Further empty <li> tweaks

	* lisp/net/shr.el (shr-tag-li): When showing several empty
	<li> elements, ensure that they really get inserted on a new line.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Don't remove too much white space at the end of documents

	* lisp/net/shr.el (shr--remove-blank-lines-at-the-end): Don't
	remove too much white space -- leave it on the last line (in
	case there's a background color).

2016-03-20  Alan Mackenzie  <acm@muc.de>

	Amend parse-partial-sexp correctly to handle two character comment delimiters

	Do this by adding a new field to the parser state: the syntax of the last
	character scanned, should that be the first char of a (potential) two char
	construct, nil otherwise.
	This should make the parser state complete.
	Also document element 9 of the parser state.  Also refactor the code a bit.

	* src/syntax.c (struct lisp_parse_state): Add a new field.
	(SYNTAX_FLAGS_COMSTARTEND_FIRST): New function.
	(internalize_parse_state): New function, extracted from scan_sexps_forward.
	(back_comment): Call internalize_parse_state.
	(forw_comment): Return the syntax of the last character scanned to the caller
	when that character might be the first of a two character construct.
	(Fforward_comment, scan_lists): New dummy variables, passed to forw_comment.
	(scan_sexps_forward): Remove a redundant state parameter.  Access all `state'
	information via the address parameter `state'.  Remove the code which converts
	from external to internal form of `state'.  Access buffer contents only from
	`from' onwards.  Reformulate code at the top of the main loop correctly to
	recognize comment openers when starting in the middle of one.  Call
	forw_comment with extra argument (for return of syntax value of possible first
	char of a two char construct).
	(Fparse_partial_sexp): Document elements 9, 10 of the parser state in the
	doc string.  Clarify the doc string in general.  Call
	internalize_parse_state.  Take account of the new elements when consing up the
	output parser state.

	* doc/lispref/syntax.texi: (Parser State): Document element 9 and the new
	element 10.  Minor wording corrections (remove reference to "trivial
	cases").
	(Low Level Parsing): Minor corrections.

	* etc/NEWS: Note new element 10, and documentation of element 9 of parser
	state.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Allow the shr test files to have trailing blank space.

	* .gitattributes: Allow the shr test files to have trailing
	blank space.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Add tests for empty <ul><li>

2016-03-20  Paul Eggert  <eggert@cs.ucla.edu>

	* src/alloc.c (purecopy): Use AUTO_STRING.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Ignore invalid base64 encoded embedded images

	* lisp/net/shr.el (shr-image-from-data): Ignore invalid base64
	encoded embedded images (bug#22928).

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Render empty <ul><li><ul> correctly

	* lisp/net/shr.el (shr-tag-ul): Render empty <ul><li><ul>
	correctly (bug#22964).

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Fix <p> and <div> newlines with or without <li> in shr

	* lisp/net/shr.el (shr-ensure-newline): Respect that we're in
	a <li>, if we are, and don't insert newlines there.
	(shr-ensure-paragraph): When mixing newlines and paragraph
	ensurements, don't insert too many blank lines.
	(shr-tag-div): A <div> shouldn't introduce a paragraph, but a
	new line.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Add more shr HTML rendering tests

	Add a test harness for shr HTML rendering and one test

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Remove code left over from when overlays were used for padding

	* lisp/net/shr.el (shr-previous-newline-padding-width): Remove.
	(shr-remove-trailing-whitespace): Ditto.
	(shr-insert-document): Don't call them.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Remove trailing blank lines in shr

	* lisp/net/shr.el (shr--remove-blank-lines-at-the-end): New function.
	(shr-insert-document): Use it to remove trailing blank lines
	at the end of documents, since these never seem to be very useful.

2016-03-20  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Don't bug out on nil `patch-buf' arguments

	* lisp/vc/ediff.el (ediff-patch-file): Don't bug out on nil
	`patch-buf' arguments.

2016-03-20  Ernest Adrogué  <nfdisco@gmail.com>

	Add a Catalan language environment

	* lisp/international/mule-cmds.el (locale-language-names): Map locale
	  language name `ca' to language environment `Catalan'.

	* lisp/language/european.el: Add definition of language
	environment for the Catalan language.

	* lisp/leim/quail/latin-pre.el: Add quail rule to the
	`catalan-prefix' input method to support input of middle dot
	characters through composition (bug#18279).

2016-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	No need to block input when reading directories

	* src/dired.c: Don’t include blockinput.h.
	(open_directory, directory_files_internal_unwind)
	(directory_files_internal, file_attributes):
	Don’t block input here, as the reasons for blocking input should
	no longer apply.  See blockinput.h FIXME.  (Bug#22996).

2016-03-19  Oscar Fuentes  <ofv@wanadoo.es>

	* lisp/vc/vc-hooks.el: Fix typo

2016-03-19  Fabrice Popineau  <fabrice.popineau@gmail.com>

	Improve w32notify notifications

	* src/w32notify.c (DIRWATCH_BUFFER_SIZE): New macro.
	(struct notification): 'terminate' is now a HANDLE.
	(send_notifications): Argument is now a pointer to a
	notification.  Don't loop waiting for the notification to be
	acknowledged by the main thread; instead, just add the
	notification to the linked list of notifications waiting to be
	acknowledged.
	(watch_end): Don't close the directory handle.
	(watch_completion): Allocate a new notification structure to be
	added to the notifications set.  Call ReadDirectoryChangesW
	immediately after adding the new notification, and before sending
	a message to the main thread about them.
	(watch_worker): Don't loop calling ReadDirectoryChangesW; instead,
	call it just once -- it will be called again in watch_completion.
	Loop waiting for the main thread's indication to terminate.
	(start_watching): Create the event to be used to indicate to the
	worker thread that its should terminate.
	(remove_watch): Indicate to the worker thread that it should
	terminate.
	* src/w32term.c (queue_notifications): Loop over all the
	notifications in the linked list, processing all of them in one
	go.
	* src/w32inevt.c (handle_file_notifications): Loop over all the
	notifications in the linked list.
	* src/w32xfns.c (init_crit): Initialize the linked list of file
	notifications.
	(delete_crit): Free the linked list of file notifications,
	including any unprocessed notifications left in it.
	* src/w32term.h (struct notifications_se): New struct.

	* test/lisp/filenotify-tests.el (file-notify-test02-events)
	(file-notify-test05-dir-validity): Add read-event calls to
	facilitate event recognition by the main thread in batch mode.

2016-03-17  Sam Steingold  <sds@gnu.org>

	make `vc-log-operation' buffer local to allow multiple simultaneous editing

2016-03-17  Glenn Morris  <rgm@gnu.org>

	Simplify some rococo Gnus code that loads or tests for other libraries.

	* lisp/gnus/gnus-art.el (gnus-treat-ansi-sequences): Simplify default.
	* lisp/gnus/mml-smime.el (epg): Simply require it.
	(mml-smime-use): Simplify the default.  Doc fix.
	* lisp/gnus/mml2015.el (epg-config): Require it.
	(mml2015-use): Simplify the default.
	* lisp/gnus/smime.el (password-cache): Simply require it.
	(password-read-and-add): Remove declaration.

2016-03-16  Glenn Morris  <rgm@gnu.org>

	* test/lisp/dabbrev-tests.el: Merge fix: move here from test/automated.

2016-03-16  Thomas Fitzsimmons  <fitzsim@fitzsim.org>
	    Alex Harsanyi  <AlexHarsanyi@gmail.com>

	Sync with soap-client repository, version 3.1.1

	* lisp/net/soap-client.el (soap-encode-xs-complex-type): Fix error
	message.
	(soap-find-port): Delete trailing whitespace.
	(soap-find-operation): Fix documentation and rename parameter.
	(soap-find-port): Likewise.
	(soap-operation-arity): Likewise.

	* lisp/net/soap-client.el: Update copyright years.
	(soap-warning): Fix docstring quoting.
	(soap-decode-date-time): Likewise.
	(soap-validate-xs-simple-type): Remove tabs for indentation.
	* lisp/net/soap-inspect.el: Update copyright years.

	* lisp/net/soap-client.el (soap-encode-xs-basic-type): Do not
	assume xsd:base64Binary values are UTF-8 strings.
	(soap-decode-xs-basic-type): Likewise.
	(soap-invoke): Document xsd:base64Binary handling.

	* lisp/net/soap-client.el (soap-find-port, soap-find-operation)
	(soap-operation-arity): new defuns
	(soap-invoke-internal): use soap-find-port, soap-find-operation.

2016-03-15  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This incorporates:
	2016-03-15 std-gnu11: improve clang support
	* m4/std-gnu11.m4: Copy from gnulib.

2016-03-14  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Disable MOVE more for Dovecot

	* lisp/gnus/nnimap.el (nnimap-process-expiry-targets): Also
	disable MOVE when expirying.
	(nnimap-split-incoming-mail): And when splitting mail.

2016-03-14  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Don't use MOVE on Dovecot

	* lisp/gnus/nnimap.el (nnimap-request-move-article): Don't use
	MOVE on Dovecot, since it's broken in many versions.
	(nnimap-quirks): Mark MOVE on Dovecot as non-working.

2016-03-13  Paul Eggert  <eggert@cs.ucla.edu>

	Improve diff hunk headers when maintaining Emacs

	* .gitattributes: Improve diff hunk header support for makefiles,
	shell scripts, Ada, C, C++, Objective C, HTML, SHTML, XML, Java,
	Perl, PHP, Python, Ruby, and TeX, all of which are used in Emacs
	somewhere (sometimes just in test cases).
	* autogen.sh: Add regexes for makefiles and shell scripts.

2016-03-12  Eli Zaretskii  <eliz@gnu.org>

	Update handling of <bdo> per Unicode 9.0

	* lisp/net/shr.el (shr-tag-bdo): Wrap in FSI..PDI as well, per
	Unicode 9.0 changes in UAX#9, paragraph 2.7.

2016-03-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	facb5e2 Update Emacs manual section related to character folding
	4efea8e ; * etc/DEBUG: Fix a typo.  (Bug#22984)
	f8df21b Update admin/notes/unicode
	950be68 Add symref-filepattern entries for c?perl-mode
	8b8a6ad Don't use XRANDR 1.3 extensions if the server doesn't support them.
	985dacf ; NEWS update for the last change in etags
	741a6f8 Sync with gnulib
	7352c6c Rework C source files to avoid ^(
	a589e9a By default, etags produces unqualified Perl tag names
	72c7438 Indent methods with keyword names correctly
	28532a9 Propertize character literals and special global variables
	        differently
	a7d6f39 ; Fix last change in NEWS
	83b2a20 Change how /etc/NEWS presents character folding
	b417c5a Revert "Revert "Backport: * lisp/isearch.el: Turn char-folding
	        off by default""
	711ca36 Properly handle lambda as read function (bug 22961)
	1b9d616 Propertize operator symbol names with symbol syntax class
	9b16bc2 Stop recognizing :#{} as symbol in ruby-mode
	366ec77 Allow using the left shift operator without spaces on both sides
	02bf7cc Properly handle unquoting in wdired (bug 22938)
	16cf469 ; Spelling fix and tighten up comment
	f50bc04 Allow splat operator before percent literal
	991c801 Don't apply the return value of goto-char as syntax class
	6e63b3e Guard against nested percent literals
	066f3bc Recognize iuwu-mod after an escaped newline
	6f7a57c Fix symbolic mode string conversion for s and t
	50b9826 Update 'ucs-names' database
	993b2fb Improve doc string of 'shell-command'
	b71c717 Make the code in movemail_strftime more general
	cc057e4 Speed up redisplay of binary files with long series of nulls
	e51b27e Remove the highlighting support for quoting 'like this' inside
	        Lisp docstrings
	b1abce1 Restore leading space in movemail pop output
	98b8d44 Fix bidi-paragraph-direction in Rmail view buffer
	dc9d837 Don't misindent computed property generator methods
	7923112 Fix mbox files produced by movemail on MS-Windows
	c45a1ca doc string file descriptor exhaustion fix
	265141b Fix Bug#22814

2016-03-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	620951f Fix previous fix of enlarge-/shrink-window
	2e78353 * lisp/isearch.el (isearch-define-mode-toggle): Fix toggling logic
	66d2717 Complete temperature units in calc-convert-temperature
	dbb02bf Make sure to use case-sensitive search
	8b01e69 Prevent infinite loop on not-well-formed xml. (Bug#16344)
	100346a Add the missing test case for the previous patch
	5aba61e Use the correct dabbrev expansion

2016-03-11  Michael Albinus  <michael.albinus@gmx.de>

	Remove compat code in Tramp

	* lisp/net/tramp-sh.el (tramp-open-connection-setup-interactive-shell):
	Remove compat code.

2016-03-10  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/tex-mode.el: Complete local envs.  Use #'.

	Use #' for function names.
	(latex-complete-envnames): Include existing environments in
	current buffer.
	(latex-insert-block): Use latex-complete-envnames.
	(tildify-foreach-ignore-environments): Declare.

2016-03-10  Alain Schneble  <a.s@realize.ch>

	Fix asynchronous TLS connections on MS-Windows

	* src/w32.c (sys_write): Don't switch the socket to blocking mode
	if the connection attempt is in progress.  Instead, return either
	EWOULDBLOCK immediately if the connection is in progress, or the
	error code produced by '_sys_wait_connect' if the connection
	failed.  Switching the socket to blocking mode was found to
	interfere with GnuTLS handshake.  (Bug#22789)

2016-03-10  Alan Mackenzie  <acm@muc.de>

	Clarify the documentation of nested comments.

	* doc/lispref/syntax.texi (Syntax Flags): State that only comments of the same
	style are recognized inside nestable comments.
	(Low-Level Parsing): Clarify that parsing will stop after the start or end of
	UNNESTED comments.

2016-03-10  Nicolas Richard  <youngfrog@members.fsf.org>

	Add new function display-buffer-reuse-mode-window

	* lisp/window.el (display-buffer-reuse-mode-window): New function.
	* doc/lispref/windows.texi (Display Action Functions): Document it.

2016-03-09  Paul Eggert  <eggert@cs.ucla.edu>

	Minor fixes for getaddrinfo_a usage

	* src/process.c (Fdelete_process): Check gai_cancel return value.
	That way, there’s no need to invoke gai_error.  Check gai_suspend
	return value.
	(Fmake_network_process): Don’t assume gai_strerror returns a UTF-8
	string.  Simplify call to connect_network_socket.
	(check_for_dns): Avoid unnecessary initialization of local.

2016-03-09  Sam Steingold  <sds@gnu.org>

	declare `rmail-mime-entity-truncated' and `rmail-mime-render-html-function'

	The former avoids a compiler warning, the latter fixes a bug whereas
	the variable is compiled as lexical instead of dynamic.

2016-03-08  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings

	* src/xfns.c (x_create_tip_frame): Omit unused local.
	(Fx_show_tip): Don’t jump over auto initialization.

2016-03-07  Martin Rudalics  <rudalics@gmx.at>

	Optionally reuse tooltip frames instead of deleting/recreating them.

	* src/frame.c (tooltip_reuse_hidden_frame): New option.
	* src/w32fns.c (x_create_tip_frame): Remove argument TEXT.  Fix
	handling of dividers.
	(x_hide_tip): New function.
	(Fx_show_tip): Try to reuse old tooltip frame when
	`tooltip-reuse-hidden-frame' is non-nil and frame parameters
	have not changed.  Insert STRING here instead of passing it to
	x_create_tip_frame.  Compute size of tooltip window with
	Fwindow_text_pixel_size.  Obey Vw32_tooltip_extra_pixels when
	padding tooltip window.
	(Fx_hide_tip): Call x_hide_tip.
	(Vw32_tooltip_extra_pixels): New variable.
	* src/xdisp.c (Fwindow_text_pixel_size): Don't return negative y
	value.  Fix doc-string.
	* src/xfns.c (x_create_tip_frame): Remove argument TEXT.  Call
	make_frame with mini_p argument false.
	(x_hide_tip): New function.
	(Fx_show_tip): Try to reuse old tooltip frame when
	`tooltip-reuse-hidden-frame' is non-nil and frame parameters
	have not changed.  Insert STRING here instead of passing it to
	x_create_tip_frame.  Compute size of tooltip window with
	Fwindow_text_pixel_size.
	(Fx_hide_tip): Call x_hide_tip.
	* lisp/cus-start.el (tooltip-reuse-hidden-frame): Add
	customization entry.

2016-03-07  Paul Eggert  <eggert@cs.ucla.edu>

	Assume getaddrinfo in C code

	* admin/CPP-DEFINES, configure.ac: Remove HAVE_GETADDRINFO, HAVE_H_ERRNO.
	All uses removed.
	* doc/lispref/processes.texi (Network, Network Processes), etc/NEWS:
	Say that port numbers can be integer strings.
	* lib-src/pop.c (h_errno) [!WINDOWSNT && !HAVE_H_ERRNO]: Remove decl.
	(socket_connection): Assume HAVE_GETADDRINFO.
	* lisp/mpc.el (mpc--proc-connect):
	* lisp/net/network-stream.el (open-network-stream):
	It’s now OK to use integer strings as port numbers.
	* src/process.c (conv_numerical_to_lisp) [!HAVE_GETADDRINFO]: Remove.
	(Fmake_network_process): Assume HAVE_GETADDRINFO.

2016-03-07  Paul Eggert  <eggert@cs.ucla.edu>

	Remove support for IRIX

	The IRIX port wasn’t really working anyway, and the code was
	getting in the way of other changes (e.g., getaddrinfo fixes).
	IRIX’s supplier dropped support for IRIX in 2013.
	* admin/CPP-DEFINES:
	* configure.ac (opsys):
	* doc/lispref/os.texi (System Environment):
	* etc/MACHINES, etc/PROBLEMS:
	* lisp/find-dired.el (find-grep-options):
	* lisp/lpr.el (lpr-lp-system):
	* lisp/ls-lisp.el (ls-lisp-emulation):
	* lisp/mail/rmail.el (rmail-spool-directory):
	* lisp/net/net-utils.el (ping-program-options):
	* lisp/progmodes/gud.el (gud-irix-p, gud-dbx-use-stopformat-p):
	* lisp/progmodes/ps-mode.el (ps-mode-print-function):
	* src/conf_post.h [IRIX6_5]:
	* src/emacs.c (Vsystem_type):
	* src/filelock.c (get_boot_time_1):
	* src/process.c (process_send_signal):
	* src/unexelf.c (unexec):
	Omit IRIX-specific code and/or documentation.
	* configure.ac (NON_GCC_TEST_OPTIONS, IRIX6_5, PREFER_VSUSP):
	Remove.  All uses removed.
	* etc/NEWS: Document the change.

2016-03-06  John Wiegley  <johnw@newartisans.com>

	Revert "Use colors in the VC mode lines"

	This reverts commit 2621c293d82c15c00d9e73a8db75d70da7d0a23b.

2016-03-06  Ken Brown  <kbrown@cornell.edu>

	Fix Cygwin-w32 build

	* src/w32fns.c (funhook, setup_w32_kbdhook, remove_w32_kbdhook):
	Define only if WINDOWSNT, and update all uses accordingly.
	* src/w32term.h (check_w32_winkey_state, setup_w32_kbdhook)
	(remove_w32_kbdhook): Declare only if WINDOWSNT.
	(w32_kbdhook_active): Define as 0 if not WINDOWSNT.

2016-03-06  Eli Zaretskii  <eliz@gnu.org>

	Unbreak the MinGW64 build

	* nt/inc/ms-w32.h [MINGW_W64]: Undefine HAVE_GAI_STRERROR.  See
	https://lists.gnu.org/r/emacs-devel/2016-03/msg00130.html
	for the details.  Reported by Angelo Graziosi
	<angelo.graziosi@alice.it>.

2016-03-06  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Don't signal errors on E_AGAIN

	* src/gnutls.c (Fgnutls_errorp): Qgnutls_e_again is not an
	error now that TLS is async.

2016-03-05  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Allow making TLS negotiation blocking

	* lisp/net/gnutls.el (gnutls-negotiate): Make negotiation blocking.

	* src/gnutls.c (Fgnutls_boot): Provide a new keyword,
	:complete-negotiation, to specify that we want complete
	negotiation even if the socket is non-blocking.
	(gnutls_try_handshake): Complete negotiation if given that keyword.

	* src/process.h (L): Added gnutls_complete_negotiation_p.

2016-03-05  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Don't run ipv6 test on systems without ipv6

	* test/lisp/net/network-stream-tests.el
	(connect-to-tls-ipv6-nowait): Skip on systems without ipv6.

2016-03-05  Eli Zaretskii  <eliz@gnu.org>

	Implement getaddrinfo fallback for MS-Windows

	See https://lists.gnu.org/r/emacs-devel/2016-02/msg01602.html
	for more details.

	* nt/mingw-cfg.site (ac_cv_func_getaddrinfo)
	(ac_cv_func_gai_strerror): Set to "yes", as the configure script's
	test program is not smart enough to auto-detect these.
	* nt/inc/sys/socket.h (getaddrinfo, freeaddrinfo): Redirect to
	sys_getaddrinfo and sys_freeaddrinfo.  Provide prototypes for
	sys_getaddrinfo and sys_freeaddrinfo.

	* src/w32.c (init_winsock): Try loading getaddrinfo and
	freeaddrinfo from ws2_32.dll.
	(sys_getaddrinfo, sys_freeaddrinfo): New functions.

	* lib-src/pop.c [WINDOWSNT]: Include winsock2.h, not winsock.h,
	and also ws2tcpip.h.
	(getaddrinfo, freeaddrinfo) [WINDOWSNT]: Redirect to
	sys_getaddrinfo and sys_freeaddrinfo, respectively.
	(load_ws2, sys_getaddrinfo, sys_freeaddrinfo) [WINDOWSNT]: New
	functions.

2016-03-04  Glenn Morris  <rgm@gnu.org>

	* lisp/files.el: Fix recent typo.

	* lisp/subr.el (read-multiple-choice): Avoid free variable.

	* doc/lispref/files.texi (File Attributes): Fix typo.

2016-03-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the describe-key prompts clearer

	* lisp/help.el (describe-key-briefly): Make the prompt clearer
	(bug#14854).
	(describe-key): Ditto.

2016-03-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow scrolling while querying multiple choice

	* lisp/subr.el (read-multiple-choice): Allow scrolling the
	buffer while querying (bug#22827).

2016-03-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Add accessors for `file-attributes'

	* doc/lispref/files.texi (File Attributes): Mention the accessors.

	* lisp/files.el (file-attribute-type)
	(file-attribute-link-number, file-attribute-user-id)
	(file-attribute-group-id, file-attribute-access-time)
	(file-attribute-modification-time)
	(file-attribute-change-time, file-attribute-size)
	(file-attribute-modes, file-attribute-inode-number)
	(file-attribute-device-number): New functions.

	* src/dired.c (Ffile_attributes): Mention the accessors (bug#22890).

2016-03-04  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#22814

	* lisp/autorevert.el (global-auto-revert-mode): Do not set
	`auto-revert-use-notify' to nil.

	* etc/NEWS: Mention this.

	* etc/PROBLEMS: Remove problem Bug#22814.

	* src/kqueue.c: Include <sys/resource.h>.
	(Fkqueue_add_watch): Limit the number of used file descriptors.
	(Bug#22814)

	* test/lisp/filenotify-tests.el (file-notify--test-remote-enabled)
	(file-notify-test00-availability, file-notify-test01-add-watch)
	(file-notify-test02-events, file-notify-test06-many-events):
	Use #' read syntax for functions.
	(file-notify-test05-dir-validity)
	(file-notify-test06-many-events): Simplify directory creation.
	(file-notify-test09-sufficient-ressources): New test.

2016-03-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix insertion of edited servers in the dribble file

	* lisp/gnus/gnus-srvr.el (gnus-server-update-server): Don't
	insert explicit newlines, because they're quoted (bug#22903).

2016-03-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Move cl-seq-tests to the right place after the merge

	Move cl-seq-tests to the right place after the merge

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	d6f6b7d * etc/AUTHORS: Update the AUTHORS file
	5cf7c39 authors.el updates
	a26f193 ; fix changelog entries
	fbc85c7 ; make change-history-commit
	06da00c Fix Bug#22859
	ab30bf5 ; * src/w32proc.c: Update the commentary to sys_select.
	1481029 Fix reordering of bidi text in an isolate inside an override
	60e0596 Document c-guess-basic-syntax in the CC Mode manual.

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	f5d1435 Fix targets in test/automated/Makefile.in

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	b6d6304 Comment on last change to define-derived-mode

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	cb1e3da Also allow setting the paragraph direction to nil
	bbe8a89 Made the new OS X visible bell more visible.

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	aae436e Uncomment the next-error-function integration in xref
	5f0d096 Remove the word "valid", to avoid ambiguity

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	5a44bfe Set auto-revert-use-notify to nil in global-auto-revert-mode.  (Bug#22814)
	0d60bfc Fix ModelSim error parsing

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	b13cab6 Add a eww command to toggle paragraph direction
	4e46128 * nextstep/WISHLIST: Merge into etc/TODO and remove.
	9e078e5 Fix char signedness issue in bidi code
	064adf6 * lib-src/pop.c (socket_connection): Fix format string.
	14060a9 Avoid inflooping in thing-at-point-looking-at
	098d47b * lisp/emacs-lisp/derived.el (define-derived-mode): Revert
	        indent change.
	b5db8e0 etc/PROBLEMS: Mention problems with using file descriptors
	ec10ef9 * lisp/apropos.el (apropos-variable): Doc fix.  (Bug#22813).
	d2dd614 Remove unneeded workaround in xftfont.c
	9b7593c ; * etc/NEWS: Reflect latest changes in saveplace.
	fde0cd1 * lisp/saveplace.el (save-place-local-mode): New minor mode
	06a872b Fix redisplay on a TTY after 'make-frame'
	95f5a43 Make double-click-1 work with unbalanced parens in CC Mode.
	        Fixes bug#5560.
	7d206fc Input method polish-slash should not use keyboard translation
	8be32cf Fix an assertion
	040e0d6 Fix 'toggle-save-place'
	5244db2 * src/keyboard.c: Don't inadvertently set immediate_echo (bug#22581)

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	e6a3819 Update HISTORY section in readme for the NextStep interface.
	f67f1ed ; * doc/lispref/modes.texi (Font Lock Basics): Minor rewording.
	7c81a0b Improve documentation of 'save-place-mode'
	cab3f0a Allocate glyph matrices for the initial frame
	e01c72f Fix white space in last checkin
	370eb67 Make `insert-pair' always leave the cursor where documented
	b594393 etc/NEWS: Mention the new second parameter to `package-install'

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	bd58c13 Improve documentation of focus-related hooks
	00a4720 Further improve doc string of 'disable-point-adjustment'
	c582def Further adaptions in file-notify-tests.el for w32notify
	a1585e1 Don't bug out on localized dates in gnus-icalendar

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	7bc4820 Make setf for frame-height/width work again

2016-03-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	6620944 (cl-union): Do not ignore :test argument when lists are equal.
	17dd3fb Add `isearch' to `basic-faces'
	c1ec743 Make $, : and @ "prefix characters" in ruby-mode
	e72a26e Make find-tag-default-bounds more strict
	1bc0e0a Minor fixes in filenotify.el

2016-03-02  Alain Schneble  <a.s@realize.ch>

	Fix issue of inserting images on some systems

	* lisp/net/shr.el (shr-tag-img): Construct a non-empty range
	to pass to shr-image-fetched, to indicate where to insert the
	image.  Fixes the issue introduced with commit
	80852f843e69b81618f29cfb9aa4b074946cb3c4
	(bug#22789).

2016-03-02  Lars Ingebrigtsen  <larsi@gnus.org>

	Ensure TLS negotiation progress

	* src/gnutls.h (GNUTLS_EMACS_HANDSHAKES_LIMIT): Increase the
	number of retries so that we try for about a minute.

	* src/process.c (wait_reading_process_output): Ensure progress
	for DNS resolution and TLS negotiation.

2016-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	emacs-module.h slight simplification

	* src/emacs-module.c (emacs_init_function, emacs_subr): Move here ...
	* src/emacs-module.h: ... from here, as they don’t need to be public.
	(enum emacs_arity): Remove useless enum tag.  The enum value is
	used in ptrdiff_t contexts.

	* src/emacs-module.c (CHECK_USER_PTR): Fix typo in previous change.

2016-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	* src/emacs-module.c (CHECK_USER_PTR): Fix typo in previous change.

2016-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	emacs-module.c simplification and tuneup

	* src/emacs-module.c (CHECK_USER_PTR): New function.
	(module_get_user_ptr, module_set_user_ptr)
	(module_get_user_finalizer, module_set_user_finalizer): Use it.
	(module_make_global_ref, module_copy_string_contents)
	(module_make_string, module_vec_set, module_vec_get): Omit
	unnecessary runtime tests.  For example, vector sizes are always
	fixnums, so we don’t need to test that they are in fixnum range.

2016-03-02  Philipp Stephani  <phst@google.com>

	Use standard checks whenever possible.

	This is possible in all functions where we catch signals anyway.

	* src/emacs-module.c (module_make_global_ref, module_funcall)
	(module_copy_string_contents, module_make_string): Use xsignal0
	and CHECK macros for argument checks.

2016-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	Deterministic build improvements

	* configure.ac (BUILD_DETAILS): Rename from DETERMINISTIC_DUMP,
	and negate its sense.  Use it via AC_SUBST, not AC_DEFINE,
	and have its value be either empty or --no-build-details.
	All uses changed.  Change option to --disable-build-details.
	* doc/emacs/cmdargs.texi (Initial Options):
	Document --no-build-details.
	* doc/lispref/internals.texi (Building Emacs):
	* etc/NEWS:
	Document --disable-build-details.
	* doc/lispref/intro.texi (Version Info): Say that
	emacs-build-time can be nil.
	* lisp/erc/erc-compat.el (erc-emacs-build-time):
	Now nil if details are omitted.
	* lisp/erc/erc.el (erc-cmd-SV):
	* lisp/version.el (emacs-build-time):
	Now nil if no build details.
	(emacs-version):
	Output build time only if build details.
	* src/Makefile.in (BUILD_DETAILS): New macro.
	(temacs, bootstrap-emacs): Use it.
	* src/emacs.c (build_details): New var.
	(standard_args, main): Support --no-build-details.
	(Vdeterministic_dump): Remove; all uses replaced
	by !build_details.
	(syms_of_emacs): Set Vbuild_details to a boolean, not
	to a Lisp_Object.
	* src/lisp.h (build_details): New decl.
	* src/sysdep.c (init_system_name): When !build_details,
	set system-name to nil, not to "elided".

2016-03-02  Philipp Stephani  <phst@google.com>

	Remove build system name from deterministic dumps

	* configure.ac (DETERMINISTIC_DUMP): New configuration option.
	* lisp/version.el (emacs-build-time): Add a comment to make the
	build time deterministic if requested.
	(emacs-build-system): Make variable deterministic if requested.
	* src/emacs.c (main): Initialize `deterministic-dump' from the
	configuration option.
	(syms_of_emacs): New constant `deterministic-dump'.
	* src/sysdep.c (init_system_name): Use a constant
	if a deterministic dump is requested.

2016-03-02  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove buggy parse-time test

	* test/lisp/calendar/parse-time-tests.el (parse-time-tests):
	Remove the iso parse test, since it doesn't work.

2016-03-01  Paul Eggert  <eggert@cs.ucla.edu>

	* src/syntax.c (syntax_multibyte): Omit unnecessary parens.

2016-02-29  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/autoload.el (autoload-timestamps):
	Experiment with setting to nil.

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the revert command in timer-list-mode work

	* lisp/emacs-lisp/timer-list.el (timer-list): Make the revert
	command work.

2016-02-29  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/autoload.el (autoload-find-destination):
	Fix 6-week old merge error.

	* lisp/emacs-lisp/autoload.el (update-file-autoloads):
	Ensure timestamps.

	* lisp/emacs-lisp/package.el (package-generate-autoloads):
	Disable timestamps.

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow binding `url-mime-accept-string'

	* lisp/url/url-http.el (url-http): Allow binding
	`url-mime-accept-string' (bug#22855).

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a NEWS entry for the colorful VC indicator

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Use colors in the VC mode lines

	* lisp/vc/vc-hooks.el: Make the mode line faces default to
	using colors to more clearly tell the user what the status is.

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Support <bdo> and <bdi>

	* lisp/net/shr.el (shr-tag-bdo): New function.
	(shr-tag-bdi): Ditto.

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Respect <html dir=auto>

	* lisp/net/shr.el (shr-tag-html): Respect the "auto"
	directional HTML setting.

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Default bidi paragraph direction to nil

	* lisp/net/eww.el (eww-display-html): Default bidi rendering
	to nil, so that possibly more Arabic web pages render
	correctly (bug#22786).
	(eww-setup-buffer): Ditto.

2016-02-29  Mathias Dahl  <mathias.dahl@gmail.com>

	Preserve current column, going up/down in thumbnail view.

2016-02-29  Alan Mackenzie  <acm@muc.de>

	Handle "noise" macros and compiler directives.

	* lisp/progmodes/cc-langs.el (c-symbol-char-key): New language variable.

	* lisp/progmodes/cc-vars.el (c-noise-macro-names)
	(c-noise-macro-with-parens-names): New customizable variables.
	(c-noise-macro-name-re, c-noise-macro-with-parens-name-re): New variables.
	(c-make-noise-macro-regexps): New function.

	* lisp/progmodes/cc-engine.el (c-forward-sws, c-backward-sws): Adapt to treat
	members of c-noise-macro-names as whitespace.
	(c-forward-noise-clause): New function.
	(c-forward-keyword-prefixed-id, c-forward-type, c-forward-declarator)
	(c-forward-decl-or-cast-1, c-backward-over-enum-header)
	(c-guess-basic-syntax CASE 5A.3, CASE 5A.5, CASE 9A):
	Handle "noise clauses" in parallel with, e.g., "hangon key clauses".

	* lisp/progmodes/cc-fonts.el (c-complex-decl-matchers): Handle "noise clauses"
	in parallel with "prefix-spec keywords".

	* lisp/progmodes/cc-mode.el (c-mode, c++-mode, objc-mode): call
	c-make-noise-macro-regexps to initialize the internal variables.

	* doc/misc/cc-mode.texi ("Noise Macros"): New section documenting the new
	facilities.

2016-02-29  Paul Eggert  <eggert@cs.ucla.edu>

	Stop calling res_init

	Emacs shouldn’t need to call res_init any more, now that nscd or
	equivalent is everywhere.  On modern systems, calling res_init
	simply slows Emacs down.  On ancient systems lacking nscd Emacs
	will still work well enough with this change; it’s just that it
	won’t respond to changes in /etc/resolv.conf.
	* configure.ac (HAVE_RES_INIT): Remove.  Worry about -lresolv only
	when configured --with-hesiod.  Hesiod is still used; see, e.g.:
	https://soylentnews.org/meta/article.pl?sid=15/07/13/0255214
	* src/Makefile.in (LIBRESOLV): Remove.  All uses removed.

2016-02-29  Glenn Morris  <rgm@gnu.org>

	* lisp/progmodes/grep.el (grep-save-buffers): Fix type, tweak doc.

	* lisp/progmodes/grep.el (grep-save-buffers): Don't autoload defcustoms.

2016-02-29  Paul Eggert  <eggert@cs.ucla.edu>

	* src/process.c (Fdelete_process): Simplify cast.

2016-02-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Use the correct background color when filling nested <divs>

	* lisp/net/shr.el (shr-face-background): Return the first
	background, because that's the one that's visible (bug#22680).

2016-02-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Make <div> in <li> not insert extra newlines

	* lisp/net/shr.el (shr-tag-div): Make <div> in <li> not insert
	extra newlines (bug#19587).

2016-02-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow reading Gnus reports from an offline cache

	* lisp/gnus/gnus-group.el (gnus-read-ephemeral-bug-group):
	Allow reading bug reports from an offline cache directory.

2016-02-28  Tino Calancha  <f92capac@gmail.com>

	Meta + shift + Fn combos are recognized by xterm>=216.

	* lisp/term/xterm.el (xterm-alternatives-map): Meta + shift +
	Fn combos are recognized by xterm>=216 (bug#22837).

2016-02-28  Simen Heggestøyl  <simenheg@gmail.com>

	Declare $ as an expression prefix in SCSS

	* lisp/textmodes/css-mode.el (scss-mode-syntax-table): Declare $ as an
	expression prefix (bug#22841).

2016-02-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "Declare $ as an expression prefix in SCSS"

	This reverts commit ffb33264f21e8af60b8055c47baffcf0f6c300df.

	Revering to fix author name.

2016-02-28  Simen  <simenheg@gmail.com>

	Declare $ as an expression prefix in SCSS

	* lisp/textmodes/css-mode.el (scss-mode-syntax-table): Declare $ as an
	expression prefix (bug#22841).

2016-02-28  Hugh Brown  <aardvark@saintaardvarkthecarpeted.com>

	Save buffers before running grep commands

	* lisp/progmodes/grep.el (grep-ask-about-save): New variable (bug#96).
	(grep, lgrep, rgrep): Use it (bug#96).

	* doc/emacs/building.texi (Grep Searching): Document
	`grep-save-buffers'.

	* lisp/progmodes/grep.el (grep-save-buffers): Rename from
	`grep-ask-about-save'.
	(grep--save-buffers): New function.
	(grep, lgrep, rgrep): Use it.

2016-02-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow sorting flyspell corrections

	* lisp/textmodes/flyspell.el (flyspell-sort): New function (bug#2405).
	(flyspell-sort-corrections-functionx): New variable.
	(flyspell-sort-corrections-alphabetically): New function.
	(flyspell-notify-misspell): Use them.
	(flyspell-auto-correct-word): Ditto.
	(flyspell-emacs-popup): Ditto.
	(flyspell-xemacs-popup): Ditto.  Suggested by Sebastien Delafond.

2016-02-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Wait for async DNS to complete before freeing resources

	* src/process.c (Fdelete_process): Wait for async DNS to
	complete before freeing the data structures it needs.

2016-02-28  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/faces.el: Remove duplicated functions from previous patch.

2016-02-28  Eli Zaretskii  <eliz@gnu.org>

	Fix TLS connections on MS-Windows

	* src/w32.c (sys_write): If 'send' returns with WSAENOTCONN, and
	this is a non-blocking socket whose connection is in progress, set
	errno to EWOULDBLOCK, as expected by GnuTLS and other callers.
	Avoid overwriting the errno value from 'send' by 'ioctlsocket'.
	Suggested by Alain Schneble <a.s@realize.ch>.  (Bug#22789)

2016-02-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a NEWS entry for the read-color change

2016-02-27  Jan Moringen  <jan.moringen@uni-bielefeld.de>

	Show the face colors when completing in `read-color'

	* lisp/faces.el (defined-colors-with-face-attributes): New function.
	(readable-foreground-color, defined-colors-with-face-attributes)
	(readable-foreground-color): Ditto.
	(read-color): Use them (bug#5305).

2016-02-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up the code in parse-time-string-chars

	* lisp/calendar/parse-time.el (parse-time-string-chars):
	Clean up the code a bit.

2016-02-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Add some tests for parse-time.el

	* test/lisp/calendar/parse-time-tests.el: New file.

2016-02-27  Dima Kogan  <dima@secretsauce.net>

	Strip out some leading whitespace when looking at logs

	* lisp/vc/vc-git.el (vc-git-expanded-log-entry): When looking
	at expanded git logs with `vc-print-root-log' (C-x v L, then
	<enter> by default), Emacs was stripping out all leading
	whitespace from git logs.  I now strip exactly 2 leading
	spaces, which retains the indentation in the logs (bug#18110).

2016-02-27  Dima Kogan  <dima@secretsauce.net>

	Use a separate history variable for align-regexp

	* lisp/align.el (align-regexp-history): New variable (bug#16891).
	(align-regexp): Use it.

2016-02-27  Phil Sung  <philbert@gmail.com>

	Create subdirectories automatically in wdired

	* lisp/wdired.el (wdired-create-parent-directories): New
	variable (bug#6817).
	(wdired-create-parentdirs): New function.
	(wdired-do-renames): Use it.
	* doc/emacs/dired.texi (Wdired): Mention
	`wdired-create-parent-directories'

2016-02-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Return the correct error values from gnutls.c

	* src/gnutls.c (emacs_gnutls_read): Set errno to the value
	expected by process.c.
	(gnutls_try_handshake): Set gnutls_p to true earlier to avoid
	possible race condition with the process.c socket polling
	functions.

2016-02-27  Aaron S. Hawley  <aaron.s.hawley@gmail.com>

	Don't make assumptions about mkdir.  (Bug#22822)

	* test/Makefile.in (MKDIR_P): New, set by configure.
	(%.log): Use MKDIR_P.

2016-02-27  Alexander Kuleshov  <kuleshovmail@gmail.com>

	Support switching to hexl-mode from image-mode

	* lisp/image-mode.el (image-toggle-hex-display)
	(image-mode-to-text): New functions.
	(image-mode-map, image-minor-mode-map): Bind "C-c C-x" to
	image-toggle-hex-display.
	(image-mode-map): New menu item "Show as Hex".
	(image-mode): Update doc string and echo-area message.
	(image-toggle-display): Support toggle to hex.  (Bug#22453)

	* doc/emacs/files.texi (File Conveniences): Document
	'image-toggle-hex-display'.

2016-02-27  Eli Zaretskii  <eliz@gnu.org>

	Remove unused code in coding.c

	* src/coding.c (decode_eol): Remove unused code that handled the
	case of coding->dst_object being nil.  Replace it with an
	assertion.

2016-02-26  Aurelien Aptel  <aaptel@suse.com>

	* src/syntax.c: Fix result of syntax_multibyte()

	The ?: operator has a lower precedence than ||.
	Bug introduced by commit 45b683a.

2016-02-26  Paul Eggert  <eggert@cs.ucla.edu>

	--enable-gcc-warnings now uses -Wjump-misses-init

	When configuring with --enable-gcc-warnings, also enable
	-Wjump-misses-init, as it’s confusing to use a goto to skip over
	an initialization.  Fix the few places in the code that run afoul
	of this warning.
	* configure.ac (WERROR_CFLAGS): Add -Wjump-misses-init.
	* src/doc.c (Fsubstitute_command_keys):
	* src/image.c (svg_load_image):
	* src/regex.c (re_match_2_internal):
	* src/xdisp.c (redisplay_internal, redisplay_window):
	Don’t jump over initialization.

2016-02-26  Jussi Lahdenniemi  <jussi@aprikoodi.fi>

	Improve the register-hotkey functionality on MS-Windows

	* src/w32fns.c (_WIN32_WINNT): Define to 0x0600, needed for
	keyboard hook functionality.
	Include w32inevt.h, basetyps.h and unknwn.h.
	(VK_ANY, WM_WTSSESSION_CHANGE, WTS_SESSION_LOCK): New macros.
	(kbdhook): A new struct definition.
	(funhook, setup_w32_kbdhook, remove_w32_kbdhook, hook_w32_key)
	(check_w32_winkey_state, reset_w32_kbdhook_state): New functions.
	(modifier_set): Call check_w32_winkey_state if a Win key was
	pressed and the keyboard hook is active.
	(w32_wnd_proc): Don't handle Win key combinations if the keyboard
	hook is active.  Only register/unregister the hotkeys if the
	keyboard hook is not active.  When WM_CREATE is received, call
	setup_w32_kbdhook.  When WM_DESTROY is received, call
	reset_w32_kbdhook_state.
	(lookup_vk_code): When the keyboard hook is active, map
	alphanumeric characters to themselves.
	(w32_parse_and_hook_hot_key): Renamed from w32_parse_hot_key.  Map
	modified keys to VK_ANY if the keyboard hook is active.  Register
	Alt-x and Win-x combinations.
	(Fw32_shell_execute): Update doc string to reflect new
	functionality.  Bypass the code that posts the
	WM_EMACS_REGISTER_HOT_KEY message if the keyboard hook is active.
	(Fw32_unregister_hot_key): Bypass the code that posts the
	WM_EMACS_UNREGISTER_HOT_KEY message if the keyboard hook is active.
	(syms_of_w32fns) <w32-pass-lwindow-to-system>
	<w32-pass-rwindow-to-system, w32-phantom-key-code>
	<w32-lwindow-modifier, w32-rwindow-modifier>: Update doc strings
	to reflect the new functionality.
	* src/w32console.c (initialize_w32_display): Install the low-level
	keyboard hook.
	* src/w32inevt.c (key_event): Handle Win-x combinations only if
	the keyboard hook is not active.  If the hook is active, use
	check_w32_winkey_state instead.
	* src/w32term.h (setup_w32_kbdhook, remove_w32_kbdhook)
	(check_w32_winkey_state): Add prototypes.
	(w32_kbdhook_active): New macro.

	* doc/emacs/msdos.texi (Windows Keyboard): Update to reflect the
	new functionality.

2016-02-25  Aaron S. Hawley  <aaron.s.hawley@gmail.com>

	Add forward-sexp (and related) tests

	* test/lisp/emacs-lisp/lisp-tests.el: New file for testing
	forward-sexp and related functions (bug#22800).

2016-02-25  Jan Tatarik  <jan.tatarik@gmail.com>

	Don't use (localized) week days in dates

	* lisp/gnus/gnus-icalendar.el
	(gnus-icalendar-event:org-timestamp): Don't use (localized)
	week days in the dates, because that messes up things later.

2016-02-25  Thierry Volpiatto  <thierry.volpiatto@gmail.com>

	Update pcomplete/find

	* lisp/pcmpl-gnu.el (pcomplete/find): Update to newest version
	(bug#10487).

2016-02-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Make parse-time-string-chars more efficient

	* lisp/calendar/parse-time.el (parse-time-string-chars): The
	string has already been downcase, so don't care about case
	(bug#18522).

2016-02-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove killed buffers from the list of Gnus buffers

	* lisp/gnus/gnus.el (gnus-prune-buffers): Remove killed
	buffers from the list of Gnus buffers (bug#18522).

2016-02-25  Paul Eggert  <eggert@cs.ucla.edu>

	Integer overflow cleanups for ports and socklen

	* src/process.c (struct sockaddr_and_len, conv_sockaddr_to_lisp)
	(get_lisp_to_sockaddr_size, Fset_process_datagram_address)
	(connect_network_socket):
	Use ptrdiff_t, not int, for signed object sizes.
	This addresses only a theoretical problem, as in practice these
	object sizes are less than 2**31, but we might as well use the
	same style here as elsewhere in Emacs.
	(string_integer_p): Remove; all uses removed.
	(Fmake_network_process): Check that port number is in range.
	When converting an integer-string service, rely on strtol
	rather than rechecking the string by hand.
	* src/process.h, src/w32.c (conv_sockaddr_to_lisp):
	Adjust prototypes to match.

2016-02-24  Thierry Volpiatto  <thierry.volpiatto@gmail.com>

	Add pcomplete support for find

	* lisp/pcmpl-gnu.el (pcomplete/find): Add pcomplete support
	for find (bug#10487).

2016-02-24  Per Starbäck  <starback@stp.lingfil.uu.se>

	Replace XXX acronyms with draft standard ones

	* lisp/international/characters.el (c1-acronyms): Replace XXX
	entries with the acronyms PAD, HOP, SGCI from draft DIS 10646
	(bug#13745).

2016-02-24  Kevin Ryde  <user42@zip.com.au>

	Make checkdoc warn about variables described as "True"

	* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine):
	Docstrings for variables "True...", and functions "Return
	true...", should usually be "non-nil" (bug#15506).

2016-02-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Add NEWS entry for "number string" change

2016-02-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow using "number strings" as services on non-GNU systems

	* src/process.c (string_integer_p): New function.
	(Fmake_network_process): Use it to allow connecting to
	services specified as "993" even when getaddrbyname isn't
	available.

2016-02-24  Michael Albinus  <michael.albinus@gmx.de>

	Fix problem in tramp.texi

	* doc/misc/tramp.texi (File name completion): Do not use
	@trampfn{} for IPv6 addresses.  Somehow, it results in errors
	during PDF creation.

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Make image commands available in image-mode

	* lisp/image-mode.el (image-mode-map): Inherit from
	`image-map' so that the usual image commands work.

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Move `o' to `O' in shr-map

	* lisp/net/shr.el (shr-map): `shr-save-contents' has moved
	from `o' to `O' to avoid collisions with `image-map'.

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Make setting the coding system non-blocking

	* src/process.c (Fset_process_filter_multibyte): Defer
	completing coding system setup in asynchronous processes.
	(Fset_process_coding_system): Ditto.

2016-02-23  Gregoire Jadi  <daimrod@gmail.com>

	Mention `proced-toggle-auto-update' in the proced-mode doc string

	* lisp/proced.el (proced-mode): Mention
	`proced-toggle-auto-update' (bug#14341).

2016-02-23  Joshua Datko  <jbdatko@gmail.com>  (tiny change)

	Add a fortune-message command

	* lisp/play/fortune.el (fortune-message): Add a command to
	display fortunes in the echo area (bug#14915).

2016-02-23  Susanne Oberhauser  <froh@suse.com>  (tiny change)

	Add hideshow bindings analogous to outline mode

	* lisp/progmodes/hideshow.el (hs-minor-mode-map): Add bindings
	analogous to outline mode bindings (bug#15324).

2016-02-23  Bastien Guerry  <bzg@altern.org>

	Allow highlighting things like @math{2^{12}}

	* lisp/textmodes/texinfo.el (texinfo-font-lock-keywords):
	Allow highlighting things like @math{2^{12}} (bug#16390).

2016-02-23  Per Bothner  <per@bothner.com>

	Make `C-{up,down,left,right}' work in term mode

	* lisp/term.el (term-raw-map): Define C-{up,down,left,right}
	to send the same escape sequence that xterm sends.  This makes
	backward-word and forward-word work in readline (bug#16746).

2016-02-23  Dima Kogan  <dima@secretsauce.net>

	Allow ff-find-other-file (etc) to work with indirect clone buffers

	* lisp/find-file.el (ff-buffer-file-name): New function to
	allow the feature to work with indirect buffers, too
	(bug#16904).
	(ff-find-the-other-file): Use it.
	(ff-other-file-name): Ditto.
	(ff-get-file-name): Ditto.

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix error in add-change-log-entry when the entry has no newline

	* lisp/vc/add-log.el (add-change-log-entry): The entry in the
	ChangeLog may end without a new line starting with blanks.

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid using mm-util functoins in gravatar.el

	* lisp/image/gravatar.el (gravatar-retrieve): Avoid using
	mm-util functions.
	(gravatar-retrieve-synchronously): Ditto.

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Move low-level library files from the lisp/gnus directory

	The files moved from lisp/gnus are:

	auth-source.el -> /
	compface.el -> /image
	ecomplete.el -> /
	flow-fill.el -> /mail
	gravatar.el -> /image
	gssapi.el -> /net
	html2text.el -> /net
	ietf-drums.el -> /mail
	mail-parse.el -> /mail
	mail-prsvr.el -> /mail
	mailcap.el -> /net
	plstore.el -> /
	pop3.el -> /net
	qp.el -> /mail
	registry.el -> /
	rfc1843.el -> /international
	rfc2045.el -> /mail
	rfc2047.el -> /mail
	rfc2231.el -> /mail
	rtree.el -> /
	sieve-manage.el -> /net
	sieve-mode.el -> /net
	sieve.el -> /net
	starttls.el -> /net
	utf7.el -> /international
	yenc.el -> /mail

2016-02-23  Tino Calancha  <f92capac@gmail.com>

	Allow undoing changes while doing query-replace

	* doc/lispref/searching.texi (Search and Replace): Mention
	undo (bug#21684).

	* lisp/replace.el (query-replace-help): Document undo.
	(perform-replace): Implement undo while replacing text.

2016-02-23  John F. Trudeau  <JFTrudeau@aetna.com>  (tiny change)

	Highlight assignments in Makefiles more correctly

	* lisp/progmodes/make-mode.el (makefile-macroassign-regex):
	Highlight assignments preceded by a TAB character correctly
	(bug#20787).

2016-02-23  Fredrik Bergroth  <fbergroth@gmail.com>  (tiny change)

	Use memmove instead of memcpy on overlapping regions

	* src/editfns.c (Ftranspose_regions): Regions may overlap, so
	use memmove instead of memcpy (bug#19213).

2016-02-23  Paul Eggert  <eggert@cs.ucla.edu>

	Port to --enable-gcc-warnings sans getaddrinfo_a

	* src/process.c (Fmake_network_process): Add ATTRIBUTE_UNUSED
	to a local unused when getaddrinfo_a is missing.
	Resize portbuf to size needed.  Do cheap test first.
	Move local to block where it’s needed.

2016-02-23  Paul Eggert  <eggert@cs.ucla.edu>

	Minor cleanups for async DNS etc.

	* src/frame.h (FRAME_WINDOW_CONFIGURATION_CHANGED):
	Omit unnecessary parens.
	* src/gnutls.c (gnutls_try_handshake, emacs_gnutls_deinit)
	(gnutls_verify_boot):
	Use bool for boolean.
	(ATTRIBUTE_FORMAT_PRINTF): Add printf attribute.
	* src/process.c (free_dns_request, Fmake_network_process):
	Allocate and free async request control block all in one go.
	(set_network_socket_coding_system, finish_after_tls_connection)
	(connect_network_socket):
	Now static.
	(conv_numerical_to_lisp): 2nd arg is now int, not unsigned.
	(Fmake_network_process): Use list1 for brevity.
	(wait_for_socket_fds): 2nd arg is now const ptr.
	* src/process.h (struct Lisp_Process.dns_request):
	Now struct gaicb *, not struct gaicb **, since there was always
	exactly one.  All uses changed.
	* src/window.c, src/window.h (run_window_configuration_change_hook):
	Now static.

2016-02-23  Carlos Pita  <carlosjosepita@gmail.com>

	Allow more shell script defun forms

	* lisp/progmodes/sh-script.el (sh-mode): Allow more shell
	script defun forms, like function name () {...} (bug#19754).

2016-02-23  Martin Rudalics  <rudalics@gmx.at>

	Fix `window-configuration-change-hook' and `window-size-change-functions'

	(1) Run `window-configuration-change-hook' if and only if at least
	one window was deleted or created or shows another buffer since
	last redisplay.

	(2) Run `window-size-change-functions' if and only if at least
	one window changed its size since last redisplay (in a few cases
	`window-size-change-functions' will also run when no window
	changed its size).

	(3) Provide two functions `window-pixel-height-before-size-change'
	and `window-pixel-width-before-size-change' that allow to easily
	detect which window changed size.

	* src/frame.h (struct frame): New boolean member
	window_configuration_changed.
	(FRAME_WINDOW_SIZES_CHANGED): Remove macro.
	(FRAME_WINDOW_CONFIGURATION_CHANGED): New macro.
	* src/frame.c (adjust_frame_size): Don't run
	`window-configuration-change-hook'.
	* src/window.h (struct window): New fields
	pixel_width_before_size_change and pixel_height_before_size_change.
	(WINDOW_INTERNAL_P): New macro.
	* src/window.c (Fwindow_pixel_width_before_size_change)
	(Fwindow_pixel_height_before_size_change): New functions.
	(Fdelete_other_windows_internal, Fwindow_resize_apply)
	(resize_frame_windows, Fsplit_window_internal)
	(Fdelete_window_internal, grow_mini_window)
	(shrink_mini_window, Fresize_mini_window_internal): Don't call
	FRAME_WINDOW_SIZES_CHANGED.
	(window_size_changed, window_set_before_size_change_sizes)
	(run_window_size_change_functions): New functions.
	(make_window): Initialize pixel_width_before_size_change and
	pixel_height_before_size_change.
	(Fdelete_window_internal): Don't call
	run_window_configuration_change_hook.
	(struct saved_window): Add pixel_height_before_size_change and
	pixel_width_before_size_change.
	(Fset_window_configuration): Try to identify window configuration
	changes correctly so run_window_configuration_change_hook and
	run_window_size_change_functions run only if configuration and size
	really changed.
	(save_window_save): Set the pixel_height_before_size_change and
	pixel_width_before_size_change fields.
	(Vwindow_size_change_functions): Move here definition from xdisp.c.
	* src/xdisp.c (prepare_menu_bars, redisplay_internal): Call
	run_window_size_change_functions.
	(Vwindow_size_change_functions): Move definition to window.c.
	* src/xfns.c (x_set_menu_bar_lines): Don't call
	run_window_configuration_change_hook.
	* doc/lispref/windows.texi (Window Sizes): Document new
	functions `window-pixel-height-before-size-change' and
	`window-pixel-width-before-size-change'.
	(Window Configurations): Mention that this may trigger
	execution of `window-size-change-functions' although no window
	changed size.
	(Window Hooks): Update descriptions of `window-size-change-functions'
	and `window-configuration-change-hook'.

2016-02-23  Drew Adams  <drew.adams@oracle.com>

	(ls-lisp-insert-directory): Make -B work

	* lisp/ls-lisp.el (ls-lisp-insert-directory): Make -B work
	(bug#20776).

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix typo in message-setup-fill-variables

	* lisp/gnus/message.el (message-setup-fill-variables): Fix
	typo in a recent checkin that used `setq-default' instead of
	`setq-local' (bug#22781).

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	`message-dont-reply-to-names' can also be a list of regexps

	* lisp/gnus/message.el (message-dont-reply-to-names):
	`message-dont-reply-to-names' can also be a list of regexps (bug#22773).

2016-02-23  Vaidheeswaran C  <vaidheeswaran.chinnaraju@gmail.com>

	Make buttons in header lines work

	* lisp/help-mode.el (help-button-action): `help-xref-button' in
	header line doesn't work (bug#21024).

2016-02-23  Vasilij Schneidermann  <v.schneidermann@gmail.com>

	Place apples randomly in Snake

	* lisp/play/snake.el (snake-score): New variable (bug#21359).
	(snake-set-dot): Place the apples randomly.

2016-02-23  Tino Calancha  <f92capac@gmail.com>

	Allow optional parameter to be nil

	* lisp/ibuf-ext.el (ibuffer-copy-filename-as-kill): Allow the
	optional parameter to be nil (bug#21576).

2016-02-23  Tino Calancha  <f92capac@gmail.com>

	Completely ignore buffers with no name when copying file names

	* lisp/ibuf-ext.el (ibuffer-copy-filename-as-kill): Completely
	ignore buffers with no file name. (bug#21577).

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Make spelling of "Eshell" consistent

	* lisp/eshell/esh-mode.el (eshell-mode): Spell it "Eshell".
	* lisp/eshell/eshell.el (eshell-command):
	Spell it "Eshell" (bug#21678).

2016-02-23  Simen Heggestøyl  <simenheg@gmail.com>

	Allow pretty lambdas in Scheme mode

	* lisp/progmodes/scheme.el (scheme-mode-variables): Borrow
	`prettify-symbols-alist' from Lisp mode (bug#21679).

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Rename lisp--prettify-symbols-alist

	* lisp/emacs-lisp/lisp-mode.el (lisp-prettify-symbols-alist):
	Rename from `lisp--prettify-symbols-alist' since we're going
	to use it in Scheme mode, too.
	(lisp-mode-variables): Use it.

2016-02-23  Chunyang Xu  <xuchunyang56@gmail.com>  (tiny change)

	Remove spurious newline in package list

	* lisp/emacs-lisp/package.el (describe-package-1): Remove
	spurious newline (bug#21706).

2016-02-23  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "Remove spurious newline in package list"

	This reverts commit fad14c289d36a2c61e0fd34105ebb1f62c80d71d.

2016-02-23  Chunyang Xu  <xuchunyang56@gmail.com>

	Remove spurious newline in package list

	* lisp/emacs-lisp/package.el (describe-package-1): Remove
	spurious newline (bug#21706).

2016-02-22  Tino Calancha  <f92capac@gmail.com>  (tiny change)

	Keep the position in the process buffer when deleting processes

	* lisp/simple.el (process-menu-delete-process): Keep the
	position in the buffer after killing a process (bug#21759).

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Require that the buffer that we're trying to patch exist

	* lisp/vc/ediff.el (ediff-patch-buffer): Require that the
	buffer that we're trying to patch exist (bug#21852).

2016-02-22  Tino Calancha  <f92capac@gmail.com>  (tiny change)

	Require that the buffer that we're trying to patch exist

	* lisp/vc/ediff.el (ediff-patch-buffer): Require that the
	buffer that we're trying to patch exist (bug#21852).

2016-02-22  Tino Calancha  <f92capac@gmail.com>  (tiny change)

	Be more verbose when changing frame mode in ediff

	* lisp/vc/ediff-util.el (ediff-toggle-multiframe): Say what
	mode we toggled to (bug#21853).

2016-02-22  Łukasz Stelmach  <stlman@poczta.fm>

	Encode header strings before printing

	* lisp/ps-print.el (ps-generate-header-line): Encode the
	header strings to avoid problems with non-ASCII headers
	(bug#22611).

2016-02-22  Michal Nazarewicz  <mina86@mina86.com>

	Test message-strip-subject-trailing-was

	* test/lisp/gnus/message-tests.el (message-strip-subject-trailing-was):
	New test (bug#22632).

2016-02-22  Michal Nazarewicz  <mina86@mina86.com>

	Make use of the `ert-with-function-mocked' macro

	* test/lisp/calendar/icalendar-tests.el (icalendar--create-uid):
	* test/lisp/vc/vc-bzr-tests.el (vc-bzr-test-bug9781): Use
	`ert-with-function-mocked' instead of implementing the fragile
	`unwind-protect' logic openly.

2016-02-22  Michal Nazarewicz  <mina86@mina86.com>

	message-strip-subject-trailing-was: Refactor

	* lisp/gnus/message.el (message-strip-subject-trailing-was): Refactor
	the function replacing sequence of `if' calls with a mixture of `or'
	and `and' calls instead.  This makes it shorter and containing less
	internal state thus easier to follow.

2016-02-22  Michal Nazarewicz  <mina86@mina86.com>

	ert-with-function-mocked: New macro

	* lisp/emacs-lisp/ert-x.el (ert-with-function-mocked): New macro which
	allows evaluating code while particular function is replaced with
	a mock.  The original definition of said function is restored once the
	macro finishes.

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Move Gnus functions frm rfc1843 to new file gnus-rfc1843

	* lisp/gnus/gnus-rfc1843.el: New file for Gnus/rfc1843
	interface functions.

	* lisp/gnus/gnus-rfc1843.el: Move all Gnus-specifig functions to
	gnus-rfc1843.

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use mm-util functions in qp.el

	* lisp/gnus/qp.el (quoted-printable-decode-region): Don't use
	mm-util functions.
	(quoted-printable-encode-string): Ditto.
	(quoted-printable-encode-region): Ditto.

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't require mm-util

	* lisp/mail/ietf-drums.el (mm-util): Don't require.

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus functions from auth-source.el

	* lisp/gnus/auth-source.el (auth-source-netrc-parse-entries):
	Remove usage of Gnus utility function.
	(mm-util, gnus-util): Don't require.

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow deleting all non-matching cookies

	* lisp/url/url-cookie.el (url-cookie-delete-cookies): Allow
	keeping matching cookies (bug#22720).

2016-02-22  Lars Ingebrigtsen  <larsi@gnus.org>

	Make (setf (image-property ...)) return VALUE

	* lisp/image.el (image--set-property): Return VALUE, not IMAGE.

2016-02-22  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	a9c48d5 Additional fixes for file notification
	6bd9d69 Fix documentation of 'global-disable-point-adjustment'
	8c22ac9 ; Spelling fix
	2975784 Set file modes of pinentry socket for extra safety
	2667b3e Clarify GnuPG version compatibility chapter
	5e34c36 Revert "Change the default socket location for pinentry"
	e19c1c3 Kill off xref--display-history
	5698947 Keep the xref buffer visible until the user quits it explicitly
	e34fbde Change the default socket location for pinentry
	5f89658 Mention how to enable pinentry feature
	db51224 Sync with gnulib
	aa5a794 Remove `semanticdb-save-all-db-idle' from `auto-save-hook'
	2d8b2fd Restore point when writing semantic table to disk
	27d3430 Mention pinentry.el in epa manual
	5baa001 Fix Bug#22736
	7261355 Grammar fix in doc string
	d0f3b18 Naming fix for consistency
	74ec92d Prefer customized value for GnuPG executable
	ea0b604 Fix memory reservation on MS-Windows
	c5f72aa Update NextStep readme and add wish list.
	6de26a7 Report also result in `file-notify--test-event-handler'
	5d17ae7 Improve file-notify-test08-watched-file-in-watched-dir
	1cb1268 Fix todo-mode item date editing bugs
	1e996cf Fix "[:upper:]" for non-ASCII characters
	896f993 Allow customizing the article mode cursor behavior
	24c1c1d Use pop-to-buffer-same-window in woman.el
	2a75f64 New filenotify test for bug#22736
	c9bccf7 Report critical battery errors
	d675db9 Make eww message toggling message clearer
	5e0bb40 * lisp/calc/calc-units.el (math-standard-units): Update to 2014 CODATA adjustment.
	fa8fd65 ; Improve character-folding entries in NEWS
	3722a69 Fix bugs in window resizing code
	289d5c6 Fix decoding DOS EOL in a unibyte buffer
	2abcb06 Correct c-parse-state cache manipulation error.
	14aec91 Take advantage of new GnuPG version check function
	e80c2a7 Make GnuPG version check robuster
	15a9464 Fix x-load-color-file pointer signedness
	132dbf0 * lisp/time-stamp.el (time-stamp-time-zone): Fix doc string punct.
	78ab6f1 Follow convention for greek letter constants.
	106b5bb Add Stefan-Boltzmann constant to calc units table.
	b96baa8 * lisp/calc/calc-units.el (math-build-units-table-buffer): Use special-mode.
	5f91cf9 Avoid loading cl-lib for term/xterm.elc, eg in -Q -nw.  (Bug#22669)
	2d40f7d Fix soffice UserInstallation-URL for Windows
	b1a3ebe Fix display of <pre> elements
	57d0e3d ; * lisp/help-fns.el: Remove outdated comment.
	7a0628d ; * admin/make-tarball.txt: Mention cleaning.

2016-02-22  Oleh Krehel  <ohwoeowho@gmail.com>

	lisp/calendar/appt.el (appt-delete-window): Check if buffer is live

	* lisp/calendar/appt.el (appt-delete-window): Avoid trying to delete a
	  non-existing buffer.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention the further asynchronousity

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix async TLS boot problem

	* src/process.c (wait_reading_process_output): Verify the boot
	of the correct process.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up forgotten text in manual

	* doc/lispref/display.texi (Defining Images): Remove example
	forgotten when making previous change.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up debugging code

	* src/process.c (Fmake_network_process): Remove debugging printf.
	(wait_for_socket_fds, wait_while_connecting)
	(wait_for_tls_negotiation): Remove newlines from messages.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix merge conflicts in network-stream-tests.el

2016-02-21  Paul Eggert  <eggert@penguin.cs.ucla.edu>

	Port recent filevercmp addition to MS-Windows

	Reported by Andy Moreton in:
	https://lists.gnu.org/r/emacs-devel/2016-02/msg01302.html
	* nt/gnulib.mk (libgnu_a_SOURCES): Add filevercmp.c.
	(EXTRA_DIST): Add filevercmp.h.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	add_to_log expects Lisp parameters

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention sentinels in conjunction with :nowait t.

	* doc/lispref/processes.texi (Network Processes): Mention the
	recommended way of using sentinels with :nowait t.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention in the doc strings that process functions may block

	(Fprocess_contact, Fprocess_datagram_address)
	(Fset_process_datagram_address, Fset_network_process_option)
	(Fprocess_send_region, Fprocess_send_string): Mention that the
	functions may block.
	(Fset_process_coding_system): Ditto.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Add blocker warnings to the *Messages* buffer

	* src/process.c (wait_for_socket_fds): Add warning to the log.
	(wait_while_connecting): Ditto.
	(wait_for_tls_negotiation): Ditto.

2016-02-21  Lars Ingebrigtsen  <larsi@gnus.org>

	Rework the image property getter/setters

	* doc/lispref/display.texi (Defining Images): Document the
	renamed `image-get/set-property' functions.

	* lisp/image.el (image--set-property): Rename from
	image-set-property.
	(image-property): Declare a setf form.
	(image-property): Rename from `image-get-property'.

2016-02-21  Paul Eggert  <eggert@cs.ucla.edu>

	Use Gnulib filevercmp for version comparison

	* admin/merge-gnulib (GNULIB_MODULES): Add filevercmp.
	* doc/lispref/strings.texi (Text Comparison):
	* etc/NEWS, src/fns.c:
	* test/src/fns-tests.el (fns-tests-string-version-lessp):
	Rename newly-introduced function to string-version-lessp, by
	analogy with strverscmp.
	* lib/filevercmp.c, lib/filevercmp.h: New files, copied from gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	* src/fns.c: Include <filevercmp.h>.
	(gather_number_from_string): Remove.
	(Fstring_version_lessp): Reimplement via filevercmp.

2016-02-20  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a function to delete URL cookies

	* doc/misc/url.texi (Cookies): Document
	url-cookie-delete-cookies.

	* lisp/url/url-cookie.el (url-cookie-delete-cookies): New function.

2016-02-20  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid integer overflows in string-numeric-lessp

	* src/fns.c (Fstring_numeric_lessp): If we have an integer
	overflow, compare lexicographically.

2016-02-20  Lars Ingebrigtsen  <larsi@gnus.org>

	Add the string-numeric-lessp function

	* doc/lispref/strings.texi (Text Comparison): Document
	`string-numerical-lessp'.

	* src/fns.c (Fstring_numeric_lessp): New function.
	(gather_number_from_string): Helper function for that function.

	* test/src/fns-tests.el (fns-tests-string-numeric-lessp): Add tests.

2016-02-20  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify levels of :nowait t.

	* doc/lispref/processes.texi (Network Processes): Mention
	levels of asynchronicity.

2016-02-20  Alain Schneble  <a.s@realize.ch>

	Respect DNS timeouts

	* src/process.c (check_for_dns): If the async DNS request
	failed and the associated process is still in "connect" state,
	deactivate the process and set status to "failed".

2016-02-19  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a frame around the placeholder image in shr

	* lisp/net/shr.el (shr-make-placeholder-image): Add a frame
	around the image.

2016-02-19  Lars Ingebrigtsen  <larsi@gnus.org>

	Use placeholder images in shr to avoid text moving around

	* lisp/net/shr.el (shr-rescale-image): Pass in width/height
	from the HTML.
	(shr-tag-img): Ditto.
	(shr-string-number): New function.
	(shr-make-placeholder-image): Make placeholder images.
	(shr-tag-img): Insert them if we have SVG support.

2016-02-19  Lars Ingebrigtsen  <larsi@gnus.org>

	Get explicit width/height + scale computations right

	* src/image.c (compute_image_size): :scale should also be
	taken into account when :width and :height are explicitly names.

2016-02-19  Lars Ingebrigtsen  <larsi@gnus.org>

	New functions for getting and setting image properties

	* doc/lispref/display.texi (Defining Images): Document
	image-get/set-property.

	* lisp/image.el (image-set-property): New function.
	(image-get-property): Ditto.

2016-02-19  Alan Mackenzie  <acm@muc.de>

	Await the final mouse event in C-h c and C-h k.

	* lisp/help.el (describe-key-briefly, describe-key): On receiving a mouse
	event, keep reading further events until a timeout occurs, to ensure we have
	the complete mouse event from the user.

2016-02-18  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a library for creating and manipulating SVG images

	* doc/lispref/display.texi (SVG Images): New section.

	* lisp/svg.el: New file.

2016-02-18  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix up tests for async TLS negotiation

2016-02-18  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix coding system setup

	* src/process.c (set_network_socket_coding_system): Pass in
	the host/service that's been computed already.

2016-02-18  Michael Albinus  <michael.albinus@gmx.de>

	Reference `tramp-theme' in GNU ELPA.

	* doc/misc/tramp.texi (Frequently Asked Questions):
	Reference `tramp-theme' in GNU ELPA.

2016-02-17  Lars Ingebrigtsen  <larsi@gnus.org>

	Verify the TLS connection asynchronously

	* src/gnutls.c (gnutls_verify_boot): Refactor out into its own
	function so that we can call it asynchronously.
	(Fgnutls_boot): Use it.

	* src/process.c (wait_reading_process_output): Verify the TLS
	negotiation.

2016-02-16  Simen Heggestøyl  <simenheg@gmail.com>

	Add column layout module to CSS property list

	* lisp/textmodes/css-mode.el (css-property-ids): Add properties from
	CSS Multi-column Layout Module.

2016-02-16  Michael Albinus  <michael.albinus@gmx.de>

	Minor cleanup in CONTRIBUTE and test/README

	* CONTRIBUTE: Remove detailed explanation about testing; this
	is now in test/README.

	* test/README: Don't mention automated/ subdirectory.

2016-02-15  Glenn Morris  <rgm@gnu.org>

	Provide 'term/name in lisp/term files.

	* lisp/term/AT386.el, lisp/term/bobcat.el, lisp/term/cygwin.el:
	* lisp/term/internal.el, lisp/term/iris-ansi.el, lisp/term/linux.el:
	* lisp/term/lk201.el, lisp/term/news.el, lisp/term/ns-win.el:
	* lisp/term/pc-win.el, lisp/term/rxvt.el, lisp/term/screen.el:
	* lisp/term/sun.el, lisp/term/tty-colors.el, lisp/term/tvi970.el:
	* lisp/term/vt100.el, lisp/term/vt200.el, lisp/term/w32-win.el:
	* lisp/term/w32console.el, lisp/term/wyse50.el, lisp/term/x-win.el:
	For consistency, provide 'term/name in all files that don't already.

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Deactivate the correct process

	* src/process.c (wait_reading_process_output): Deactivate the
	correct process on failure.

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Implement asynch TLS negotiation

	* src/gnutls.c (gnutls_try_handshake): Factor out into its own
	function.
	(emacs_gnutls_handshake): Use it.
	(emacs_gnutls_read): Just return instead of retrying the handshake.

	* src/process.c (finish_after_tls_connection): Factor out
	into its own function.
	(connect_network_socket): Use it.
	(wait_reading_process_output): Retry TLS handshakes.
	(wait_reading_process_output): Defer sentinel until TLS completes.

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Simplify the DNS resolution loop a bit

	* src/process.c (wait_reading_process_output): Simplify the
	DNS resolution loop a bit.

2016-02-15  Alain Schneble  <a.s@realize.ch>

	Loop over the process list instead of maintaining a separate list

	* src/process.c: Remove declaration/definition of dns_processes list.
	* src/process.c (wait_reading_process_output): Loop over all processes in
	Vprocess_alist instead of dns_processes, to check for completed DNS
	requests.

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow setting the filter masks later

	* src/process.c (Fset_process_filter): Don't set the socket
	masks here, because we may not have a socket yet.
	(set_process_filter_masks): New function.
	(connect_network_socket): Set the filter masks here.

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove debugging

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Ensure we always free DNS resources when deleting a process

	* src/process.c (free_dns_request): Factor out into own function.
	(Fdelete_process): When deleting a process, free any DNS
	structures associated with it.
	(check_for_dns): Always free all DNS resources.

2016-02-15  Alain Schneble  <a.s@realize.ch>

	Don't block in set-process-window-size

	* src/process.c (set-process-window-size): Explicitly return Qnil when
	called with network processes as set_window_size won't work anyway on
	socket fds.  As a welcome side effect, this makes the blocking
	wait_for_socket_fds call obsolete.

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Do most of the coding system setup earlier

	* src/process.c (Fmake_network_process): Set the read/write
	coding systems here, so that special bindings work.
	(Fmake_network_process): Complete the coding system setup here.

2016-02-15  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	d4b93e1 Minor fixes in global-auto-composition-mode
	02b037b Allow arithmetic operators inside C++ template constructs.
	44b16f6 Avoid crashes in semi-malformed 'condition-case'
	652e5b4 Allow arithmetic operators inside C++ template constructs.
	d9ea795 Fix regression with 'recent-keys' and keyboard macros
	903603f Fix wording in a doc-view.el comment
	cf79616 ; Spelling fixes
	f8bf1b3 CONTRIBUTE cleanups and updates
	f3aaca3 Port USE_STACK_LISP_OBJECTS fix to Clang
	1834ac7 Port to x86 GCC 4.3.1 and earlier
	8482949 Fix point movement under 'scroll-conservatively'
	c1313b5 Replace colon in file name (not legal on Windows)
	f7af26c Fix a typo in edt.texi
	8badf95 Make 'mmap_realloc' on MS-Windows more reliable
	856cd94 Grep alias `all' shall not match parent directory

2016-02-15  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	dacde7e * etc/AUTHORS: Update the AUTHORS file
	478ca5d ; fix changelog entries
	2b7d006 ; make change-history-commit
	851decb * lisp/dired-aux.el: Require cl-lib.  (Bug#22613)
	47896c8 ; Improve commentary in insdel.c
	53ca1e1 Index tilde characters in names of backup files
	d97f522 Document deprecation of hi-lock-mode's 'C-x w' bindings
	b55f06d ; * etc/NEWS: Use double spaces to end a sentence.
	28bb214 Announce that the `C-x w' bindings are deprecated
	1c98f98 Suppress GNUstep hardening
	d82f24b Fix redisplay after a large insertion
	85a2753 Revert "Fix gnus-group-get-new-news-this-group on group with
	        closed server"
	e8e3db0 ; Improve merge documentation in CONTRIBUTE
	5be9989 * lib-src/make-docfile.c: Include stdarg.h.
	c95ebbf Extend gpm-mouse-mode's doc string and doc to point out
	        limitations.

2016-02-15  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	f5d6b9b Revert "Support integer image rotation and respect EXIF rotations"
	afe7d1f Revert "Document EXIF image rotation"
	c6f377c Document OS X LANG default
	eb4a18c Set locale when run from OS X GUI
	456c0a3 make-docfile cleanup for I/O, etc.
	25ec995 Memory-management cleanup in make-docfile
	02d925e Kevin Gallagher has new email address
	4ef153b Improve doc strings of 'forward/backward-word-strictly'
	3ad05a0 Describe Makefile test targets in test/README

2016-02-15  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	10b8ed2 Document EXIF image rotation
	0f60049 Support integer image rotation and respect EXIF rotations
	7dd45b6 Quote table names for postgres listings (sql-mode)
	6bac035 * lisp/replace.el (replace-match-maybe-edit): Make arg
	        `backward' optional.
	ee909aa * lisp/simple.el (next-line-or-history-element): Reset
	        temporary-goal-column.
	0a289d3 Suppress ACL ops if configured with --disable-acl
	1a9dbf5 Mention web bugs
	fa55da2 Make mm-html-blocked-images default to "" again

2016-02-15  Lars Ingebrigtsen  <larsi@gnus.org>

	Protect against initial handshake failures

	* src/process.c (connect_network_socket): Mark the connection
	as failed if the handshake didn't succeed yet.  This should be
	reworked later.

2016-02-14  Lars Ingebrigtsen  <larsi@gnus.org>

	Call the network security manager after doing TLS negotiation

	* lisp/net/network-stream.el (network-stream-open-tls):
	Postpone NSM verification when running async.

	* src/process.c (Fset_process_filter): This function doesn't
	need to wait.
	(connect_network_socket): Set the process status to "run" only
	after TLS negotiation.
	(wait_for_socket_fds): Take a name parameter for more debugging.
	(wait_reading_process_output): Don't change status to "run"
	unless TLS negotiation has finished.
	(send_process): Wait for the process here instead of
	send_process_string.
	(connect_network_socket): Call the network security manager.

2016-02-14  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove some #ifdefs and update documentation

	* doc/lispref/processes.texi (Network Processes): Remove
	mention of `dns'.

	* lisp/net/network-stream.el (open-network-stream): Remove
	mention of `dns'.

	* src/process.c (Fset_process_filter)
	(Fset_process_window_size, Fprocess_contact)
	(Fprocess_datagram_address, Fset_process_datagram_address)
	(Fset_network_process_option, Fprocess_send_region)
	(Fprocess_send_string, Fset_process_coding_system)
	(Fset_process_filter_multibyte): Remove the #ifdef
	HAVE_GETADDRINFO_A checks.
	(Fprocess_send_string): Wait for TLS negotiation.
	(wait_for_tls_negotiation): New function.
	(send_process): Remove the TLS boot check.

	* src/process.c (Fmake_network_process): Ditto.

2016-02-14  Lars Ingebrigtsen  <larsi@gnus.org>

	Use :nowait t in url-gw

	* lisp/url/url-gw.el (url-open-stream): Just use :nowait t,
	since we're not differentiating.

2016-02-14  Alain Schneble  <a.s@realize.ch>

	Add blockers to process functions

	* src/process.c (set-process-filter, set-process-window-size,
	process-contact, process-datagram-address, set-process-datagram-address,
	set-network-process-option): Make functions wait (block) on network
	process until pending DNS requests have been processed and associated
	socket initialized.

	* src/process.c (process-send-region, process-send-string,
	process-send-eof): Make functions wait (block) while network process is
	in connect state.

2016-02-14  Simen Heggestøyl  <simenheg@gmail.com>

	Add fragmentation module to CSS property list

	* lisp/textmodes/css-mode.el (css-property-ids): Add properties from
	CSS Fragmentation Module Level 3.

2016-02-14  Nicolas Petton  <nicolas@petton.fr>

	* doc/lispref/sequences.texi: Add documentation for seq-map-indexed

2016-02-14  Nicolas Petton  <nicolas@petton.fr>

	New function seq-map-indexed

	* lisp/emacs-lisp/seq.el (seq-map-indexed): New function.
	* test/lisp/emacs-lisp/seq-tests.el: Add tests for seq-map-indexed.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/mm-util.el: Remove the mm-string-as-multibyte alias.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix problem with wrong encoding of non-ASCII message bodies

	* lisp/gnus/mml.el (mml-generate-mime-1): Disable
	multibyteness before encoding the data.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove codepage setup code from mm-util

	* lisp/gnus/mm-util.el (mm-codepage-setup): Remove.
	(mm-codepage-iso-8859-list): Remove.
	(mm-codepage-ibm-list, mm-setup-codepage-iso-8859)
	(mm-setup-codepage-ibm): Remove.
	(mm-charset-eval-alist): Remove the code pages from the
	default value.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code for older Emacsen

	* lisp/gnus/gnus-art.el (gnus-button-url-regexp): Remove
	XEmacs compat code.

	* lisp/gnus/gnus-sync.el (gnus-sync-json-alist-p): Remove
	unused compat function.
	(gnus-sync-json-plist-p): Ditto.

	* lisp/gnus/message.el (message-default-charset): Make obsolete.
	(message-info): Remove compat code.
	(message-setup-fill-variables): Remove kludge needed earlier
	to not overwrite `normal-auto-fill-function'.
	(message-split-line): Remove compat code.

	* lisp/gnus/mm-view.el (mm-display-inline-fontify): Remove
	compat code.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove some compat functions from gmm-utils.el

	* lisp/gnus/gmm-utils.el (gmm-tool-bar-from-list): Remove
	compat code.
	(gmm-image-search-load-path): Remove.
	(gmm-image-load-path-for-library): Remove.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove the gmm-lazy and nnmail-lazy compat widgets

	* lisp/gnus/gmm-utils.el (gmm-lazy): Remove.

	* lisp/gnus/nnmail.el (nnmail-lazy): Remove.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up nnimap-request-move-article slightly

	* lisp/gnus/nnheader.el (subr-x): Require.

	* lisp/gnus/nnimap.el (nnimap-request-move-article): Clean up
	the code slightly.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Use open-network-stream instead of open-protocol-stream

	* lisp/gnus/nnimap.el: Use open-network-stream instead of
	open-protocol-stream.

	* lisp/gnus/nntp.el: Ditto.

	* lisp/gnus/pop3.el: Ditto.

	* lisp/net/sieve-manage.el: Ditto.

	* lisp/net/network-stream.el (open-protocol-stream): Make obsolete.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code that relies on (featurep 'mule)

	* lisp/gnus/gnus-group.el (gnus-group-name-decode): Remove
	compat code.

	* lisp/gnus/gnus-start.el (gnus-read-descriptions-file):
	Remove compat code.

	* lisp/gnus/mm-bodies.el (mm-decode-body, mm-decode-string):
	Remove compat code.

	* lisp/gnus/mm-view.el (mm-w3m-standalone-supports-m17n-p):
	Remove compat code.
	(mm-w3m-standalone-supports-m17n-p): Ditto.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat functions from starttls.el

	* lisp/net/starttls.el
	(starttls-set-process-query-on-exit-flag): Remove.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat functions from smime.el

	* lisp/gnus/smime.el (smime-replace-in-string): Remove.
	(smime-make-temp-file): Remove.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from smiley

	* lisp/gnus/smiley.el (smiley-style): Remove compat code.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from rfc2047

	* lisp/mail/rfc2047.el (rfc2047-encode-message-header): Remove
	compat code.
	(rfc2047-decode-string): Ditto.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat function from pop3

	* lisp/gnus/pop3.el (pop3-set-process-query-on-exit-flag): Remove.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code in Gnus backends

	* lisp/gnus/nndiary.el (nndiary-error): Remove.

	* lisp/gnus/nndraft.el (nndraft-request-associate-buffer): Ditto.

	* lisp/gnus/nnfolder.el (nnfolder-read-folder): Ditto.

	* lisp/gnus/nnheader.el (nnheader-find-file-noselect): Ditto.

	* lisp/gnus/nnimap.el (nnimap-log-buffer): Remove compat code.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from some mml files

	* lisp/gnus/mml-sec.el (mml-secure-passphrase-cache-expiry):
	Remove compat code.

	* lisp/gnus/mml-smime.el (mml-smime-openssl-sign-query):
	Always use `mail-extract-address-components', since this isn't
	time critical.
	(mml-smime-get-dns-cert): Ditto.

	* lisp/gnus/mml.el (mml-preview): Remove compat code.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code and compat functions from mm-util.el

	* lisp/gnus/mm-util.el (mm-mime-mule-charset-alist): Remove
	compat code.
	(mm-coding-system-priorities)
	(mm-mule-charset-to-mime-charset, mm-charset-after)
	(mm-mime-charset, mm-iso-8859-x-to-15-region): Remove compat code.
	(mm-detect-coding-region): Define unconditionally.
	(mm-detect-mime-charset-region): Ditto.
	(mm-coding-system-to-mime-charset): It's 'mime-charset now.
	(coding-system-name)
	(find-file-coding-system-for-read-from-filename)
	(find-operation-coding-system): Remove aliases.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove some compat code from mm-*.el

	* lisp/gnus/mm-bodies.el (mm-decode-body): Ditto.

	* lisp/gnus/mm-decode.el (mm-tmp-directory)
	(mm-valid-image-format-p): Remove compat code.

	* lisp/gnus/mm-url.el (mm-url-insert-file-contents): Remove
	"Connection" "Close" workaround for older Emacsen.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code and functions from message.el

	* lisp/gnus/message.el (message-send-mail-function): Remove
	compat code.
	(message-dont-reply-to-names, message-mode)
	(message-setup-fill-variables, message-fill-paragraph)
	(message-remove-blank-cited-lines, message-make-from)
	(message-forward-rmail-make-body, message-tool-bar-gnome)
	(message-tab): Remove compat code.
	(message-completion-in-region): Remove.
	(message-read-from-minibuffer): Remove compat code.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Declare rfc1843 instead of autoloading

	* lisp/gnus/gnus-art.el (rfc1843-decode-region): Declare
	instead of autoload.

2016-02-13  Eli Zaretskii  <eliz@gnu.org>

	Avoid signaling an error in 'dired-do-find-regexp-and-replace'

	* lisp/dired-aux.el: Require cl-lib, so that 'cl-mapcan' is
	autoloaded correctly.  (Bug#22613)

2016-02-13  Eli Zaretskii  <eliz@gnu.org>

	Fix network-stream-tests.el for MS-Windows

	* test/lisp/net/network-stream-tests.el
	(connect-to-tls-ipv6-nowait): Skip for MS-Windows builds.
	(connect-to-tls-ipv4-wait): Add a 0.1 sleep-for.

2016-02-13  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove some Message compat functions

	* lisp/gnus/message.el (message-kill-all-overlays): Define
	unconditionally.
	(message-window-inside-pixel-edges): Remove.
	(mail-dont-reply-to): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove some Gnus compat code

	* lisp/gnus/gnus-art.el (gnus-mime-inline-part): Remove compat code.
	(gnus-mm-display-part): Ditto.

	* lisp/gnus/gnus-start.el (gnus-dribble-read-file): Remove
	compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Sort groups before inserting them into the group buffer

	* lisp/gnus/gnus-group.el (gnus-group-describe-all-groups):
	Sort groups before inserting them.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Make "unseen" tracking work again in Gnus

	* lisp/gnus/gnus-sum.el (gnus-update-marks): Make "unseen"
	tracking work again.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus compat functions defined in gnus.el

	* lisp/gnus/gnus.el (gnus-extent-detached-p): Remove.
	(gnus-extent-start-open, gnus-character-to-event)
	(gnus-assq-delete-all, gnus-add-text-properties)
	(gnus-put-text-property, gnus-key-press-event-p):

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-uu and win

	* lisp/gnus/gnus-util.el (gnus-image-type-available-p): Remove
	compat code.

	* lisp/gnus/gnus-uu.el (gnus-uu-tmp-dir): Remove compat code.

	* lisp/gnus/gnus-win.el (gnus-frames-on-display-list): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove several gnus-util compat functions

	* lisp/gnus/gnus-util.el (gnus-set-process-query-on-exit-flag): Remove.
	(gnus-read-shell-command): Remove.
	(gnus-match-substitute-replacement): Remove.
	(gnus-string-match-p): Remove.
	(gnus-string-prefix-p): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove the gnus-merge alias

	* lisp/gnus/gnus-util.el (gnus-merge): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove the gnus-union alias

	* lisp/gnus/gnus-util.el (gnus-union): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove the gnus-delete-alist alias

	* lisp/gnus/gnus-util.el (gnus-run-mode-hooks): Remove compat code.
	(gnus-delete-alist): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove the gnus-float-time alias

	* lisp/gnus/gnus-util.el (gnus-completion-styles): Remove
	compat code.
	(gnus-float-time): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-srvr, start and sum

	* lisp/gnus/gnus-srvr.el (gnus-browse-foreign-server): Remove
	compat code.

	* lisp/gnus/gnus-start.el (gnus-check-reasonable-setup):
	Remove compat code.

	* lisp/gnus/gnus-sum.el (gnus-summary-display-arrow)
	(gnus-summary-make-menu-bar, gnus-summary-make-tool-bar)
	(gnus-recenter)
	(gnus-summary-limit-strange-charsets-predicate)
	(gnus-summary-show-thread): Remove compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-spec.el

	* lisp/gnus/gnus-spec.el (gnus-lrm-string-p): Remove compat code.
	(gnus-balloon-face-function): Remove compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix compat change in last check-in

	* lisp/gnus/gnus-group.el
	(gnus-group-name-charset-group-alist): `find-coding-system'
	doesn't exist in Emacs.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Always use url-queue

	* lisp/gnus/gnus-html.el (gnus-html-schedule-image-fetching):
	Always use url-queue.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat functions from gnus-html.el

	* lisp/gnus/gnus-html.el (gnus-html-encode-url-chars): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-group.el

	* lisp/gnus/gnus-group.el (gnus-group-name-charset-group-alist)
	(gnus-group-make-tool-bar, gnus-group-update-tool-bar): Remove compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Define gnus-diary-kill-entire-line unconditionally

	* lisp/gnus/gnus-diary.el (gnus-diary-kill-entire-line):
	Define unconditionally.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-cache and gnus-bookmark

	* lisp/gnus/gnus-bookmark.el (gnus-bookmark-bmenu-mode-map): Ditto.

	* lisp/gnus/gnus-cache.el (gnus-cache-decoded-group-name):
	Remove compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-art.el

	* lisp/gnus/gnus-art.el (gnus-article-prepare)
	(gnus-mime-copy-part, gnus-output-to-file)
	(gnus-article-reply-with-original)
	(gnus-button-handle-apropos-variable)
	(gnus-button-handle-apropos-documentation):

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-agent.el

	* lisp/gnus/gnus-agent.el (gnus-agent-make-mode-line-string):
	Remove compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Rewrite gmm-labels usage to use cl-labels

	* lisp/gnus/gmm-utils.el (gmm-tool-bar-style): Remove compat code.
	(gmm-labels): Remove.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from canlock.el

	* lisp/gnus/canlock.el (defmacro): Remove

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from auth-source

	* lisp/gnus/auth-source.el (auth-source-read-char-choice):
	Remove compat code.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix gnus-group.el compilation warnings about unprefixed variables

	* lisp/gnus/gnus-group.el (gnus-group-update-eval-form): Avoid
	compilation warnings by passing in the dynamic variables as
	explicit lexical parameters to `eval'.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix the :tracker slot name

	* lisp/gnus/registry.el (registry-lookup-secondary): The
	`tracker' slot is called `tracker', not `:tracker'.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix compilation warnings in gnus-art.el

	* lisp/gnus/gnus-art.el (rfc1843-decode-region): Autoload.
	(gnus-article-hide): Avoid compilation warnings.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix compilation warning in gnus-score.el

	* lisp/gnus/gnus-score.el (gnus-art): Require to silence byte
	compiler.

2016-02-12  Andreas Schwab  <schwab@linux-m68k.org>

	Revert "Fix gnus-group-get-new-news-this-group on group with closed server"

	This reverts commit 9dc77e37aa84c6df9b3ddb4609f3c09201b0580e.

	This makes nnimap groups not be activated.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix encoding problem introduced by previous patch series

	* lisp/mail/rfc2047.el: Ditto (bug#22648).

	* lisp/mail/rfc2231.el: Fix problem created by the
	mm-replace-in-string conversion.

2016-02-12  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert "Avoid defvarring prefix-less variables"

	This reverts commit 303390bda34f98b400798d5383cf0d722e35ba19.

	The defvars are needed if we're doing lexical-binding

2016-02-12  Glenn Morris  <rgm@gnu.org>

	* test/lisp/url/url-auth-tests.el (url-auth-test-digest-auth):
	Make it pass.

	* test/lisp/url/url-auth-tests.el
	(url-auth-test-digest-auth-retrieve-cache): Fix obvious typo.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Finish up cl-defmethoding registry,el

	* lisp/gnus/registry.el (initialize-instance): Use cl-defmethod.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Revert the gnus-replace-in-string change, fix arguments, reapply

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Silence more message.el compilation warnings

	* lisp/gnus/message.el (message-generate-headers): Don't use
	variable values directly to get the header values, because
	that breaks with lexical binding (without unprefixed defvars).

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix various compilation warnings in message.el

	* lisp/gnus/message.el (message-fix-before-sending): Use
	read-multiple-choice instead of gnus-multiple-choice.
	(mm-util): Require.
	(rfc2047): Require.
	(message-remove-blank-cited-lines): Use message instead of
	gnus-message.
	(message-send): Use y-or-n-p instead of gnus-y-or-n-p.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Silence compilation warning in mm-view

	* lisp/gnus/mm-view.el (mm-display-inline-fontify): Silence
	compilation warning.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix epg-related compilation warnings in mml-sec

	* lisp/gnus/mml-sec.el: Fix compilation warnings from the epg
	library.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	rmail-dont-reply-to-names is obsolete

	* lisp/gnus/nnmail.el (nnmail-fancy-expiry-target): Don't bind
	the obsolete `rmail-dont-reply-to-names' variable.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Partially revert the defmethod->cl-defmethod change in registry.el

	* lisp/gnus/registry.el (initialize-instance): Use defmethod,
	since cl-defmethod doesn't work with :after.
	(initialize-instance): Ditto, but with :before.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid obsolete function in plstore

	* lisp/gnus/plstore.el (plstore--insert-buffer): Use setf
	instead of the obsolete epg-context-set-armor.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Use cl-defmethod in registry.el

	* lisp/gnus/registry.el: Use cl-defmethod instead of the
	obsolete defmethod.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Make sieve-manage require sasl

	* lisp/net/sieve-manage.el: Fix compilation warning by
	requiring sasl.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid defvarring prefix-less variable

	* lisp/gnus/mm-uu.el (mm-uu-entry): Rename from `entry'.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/mailcap.el: Remove usage of mailcap-delete-duplicates.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use the obsolete char-valid-p function

	* lisp/gnus/mm-url.el (mm-url-decode-entities): Don't use the
	obsolete char-valid-p function.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix missed translation in a previous commit

	* lisp/gnus/mailcap.el (mailcap-mime-types): Fix missed
	translation of mailcap-delete-duplicates.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid using mm-make-temp-file

	* lisp/gnus/mail-source.el (mail-source-delete-crash-box): Ditto.

	* lisp/gnus/mm-decode.el (mm-display-external): Ditto.

	* lisp/gnus/mml-smime.el (mml-smime-openssl-encrypt): Ditto.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix compilation warning in gnus-start

	* lisp/gnus/gnus-start.el (gnus-slave-save-newsrc): Avoid
	mm-make-temp-file.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid the obsoleted defmethod

	* lisp/gnus/gnus-icalendar.el: Use cl-defmethod instead of
	defmethod.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid defvarring prefix-less variables

	* lisp/gnus/gnus-group.el (gnus-group-update-eval-form): We
	don't need to `defvar' the short variables to allow `eval' to
	use them.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	nnweb doesn't need unibyte buffers

	* lisp/gnus/nnweb.el (nnweb-retrieve-headers)
	(nnweb-read-overview, nnweb-request-article)
	(nnweb-google-reference): Unibyte buffers are not needed here.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Encode before sending from nnspool

	* lisp/gnus/nnspool.el (nnspool-request-post): Encode data
	before sending it to the news server.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	nnrss buffers don't have to be unibyte

	* lisp/gnus/nnrss.el (nnrss-insert): The buffer doesn't have
	to be unibyte just to receive data, I think.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use mm-with-unibyte-current-buffer in mml2015

	* lisp/gnus/mml2015.el (mml2015-mailcrypt-encrypt): Don't use
	mm-with-unibyte-current-buffer.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use mm-with-unibyte-current in mml1991

	* lisp/gnus/mml1991.el (mml1991-epg-sign): Don't use
	mm-with-unibyte-current.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use mm-with-unibyte-current in mml1991

	* lisp/gnus/mml1991.el (mml1991-pgg-sign): Don't use
	mm-with-unibyte-current.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use mm-with-unibyte-buffer in utf7

	* lisp/international/utf7.el (utf7-fragment-encode): Don't use
	mm-with-unibyte-buffer.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove XEmacs compat code from Gnus helper libraries

	* lisp/gnus/plstore.el (plstore-called-interactively-p): Remove.

	* lisp/gnus/pop3.el (pop3-make-date): Remove XEmacs compat.

	* lisp/gnus/sieve-mode.el: Remove XEmacs compat.

	* lisp/gnus/spam-stat.el (spam-stat-called-interactively-p): Remove.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove XEmacs compat code from Gnus backends

	* lisp/gnus/mm-view.el (mm-inline-image-xemacs): Remove.
	(mm-inline-image): Rename from mm-inline-image-emacs.

	* lisp/gnus/mml.el: Remove XEmacs compat code.

	* lisp/gnus/nnheader.el: Remove XEmacs compat code.

	* lisp/gnus/nnimap.el (nnimap-open-connection-1): Remove
	XEmacs compat code.

	* lisp/gnus/nnir.el (nnir-run-gmane): Remove XEmacs compat code.

	* lisp/gnus/nnmail.el (nnmail-pathname-coding-system): Remove
	XEmacs compat code.

	* lisp/gnus/nnmairix.el: Remove XEmacs compat code.

	* lisp/gnus/nnrss.el: Remove XEmacs compat code.

	* lisp/gnus/nntp.el: Remove XEmacs compat code.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove XEmacs compat functions from mm-util.el

	* lisp/gnus/mm-util.el (mm-special-display-p): Remove.
	(mm-decode-coding-string, mm-encode-coding-string)
	(mm-decode-coding-region, mm-encode-coding-region): Remove.
	(mm-string-to-multibyte): Remove.
	(mm-char-or-char-int-p): Remove.
	(mm-ucs-to-char): Remove compat versions of the function.
	(mm-read-coding-system): Remove.
	(mm-coding-system-p): Remove compat code.
	(mm-enrich-utf-8-by-mule-ucs): Remove.
	(mm-enable-multibyte, mm-disable-multibyte): Remove compat versions.
	(mm-delete-duplicates): Remove.
	(mm-multibyte-p): Remove compat versions.
	(mm-xemacs-find-mime-charset-1): Remove.
	(mm-xemacs-find-mime-charset): Remove.
	(mm-make-temp-file): Made obsolete.
	(mm-find-buffer-file-coding-system): Remove XEmacs compat.

2016-02-11  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Message and mm-decode XEmacs compat code

	* lisp/gnus/message.el: Remove XEmacs compat code.

	* lisp/gnus/mm-decode.el (mm-create-image-xemacs): Remove.

	* lisp/gnus/mm-util.el: Remove some XEmacs compat code.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove som XEmacs compat code from message.el

	* lisp/gnus/message.el: Remove some XEmacs compat code.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove XEmacs compat code from ietf-drums.el

	* lisp/mail/ietf-drums.el (ietf-drums-syntax-table): Drop
	XEmacs compat.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove XEmacs compat code from gravatar.el

	* lisp/gnus/gravatar.el: Remove XEmacs compat code from
	gravatar.el.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove more XEmacs compat code from Gnus

	* lisp/gnus/gnus-util.el (gnus-bound-and-true-p): Remove.
	(gnus-timer--function): Remove.

	* lisp/gnus/gnus-uu.el (gnus-uu-save-article): Remove XEmacs
	19.2 compat.

	* lisp/gnus/gnus-win.el: Remove XEmacs compat code.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove more XEmacs compat functions from gnus-util.el

	* lisp/gnus/gnus-util.el (gnus-put-display-table): Remove.
	(gnus-get-display-table): Remove.
	(gnus-format-message): Remove.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove more XEmacs compat functions from Gnus

	* lisp/gnus/gnus-util.el (gnus-next-char-property-change): Remove.
	(gnus-previous-char-property-change): Remove.
	(gnus-graphic-display-p): Remove.
	(gnus-select-frame-set-input-focus): Remove.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove more XEmacs compat code from gnus-util

	* lisp/gnus/gnus-util.el (gnus-make-local-hook): Remove (and
	all its usages).
	(gnus-invisible-p): Remove.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove gnus-make-local-hook

	* lisp/gnus/gnus-util.el (gnus-make-local-hook): Remove (and
	all its usages).

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	gnus-replace-in-string -> replace-regexp-in-string

	* lisp/gnus/gnus-util.el (gnus-replace-in-string): Declare
	obsolete.  Transform all usages of it into
	replace-regexp-in-string.

	* lisp/gnus/mailcap.el (mailcap-replace-in-string): Remove.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus XEmacs compat

	* lisp/gnus/gnus-start.el (gnus-dribble-enter): Remove comment
	about code that doesn't work in XEmacs.

	* lisp/gnus/gnus-sum.el: Remove XEmacs compat.

	* lisp/gnus/gnus-topic.el: Remove XEmacs compat.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat functions in gnus-spec.el

	* lisp/gnus/gnus-spec.el (gnus-string-width-function): Remove.
	(gnus-substring-function): Remove.
	(gnus-use-correct-string-widths): Remove.
	(gnus-make-format-preserve-properties): Remove.
	(gnus-xmas-format): Remove.

	* lisp/gnus/gnus-srvr.el (gnus-server-mode): Remove XEmacs compat.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus XEmacs compat functions

	* lisp/gnus/gnus-registry.el: Remove XEmacs compat.

	* lisp/gnus/gnus-salt.el: Remove XEmacs compat.

	* lisp/gnus/gnus-score.el (gnus-decay-score): Remove XEmacs compat.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus XEmacs compatibility

	* lisp/gnus/gnus-demon.el (gnus-demon-idle-since): Remove
	XEmacs compat.

	* lisp/gnus/gnus-dired.el: Remove XEmacs compat.

	* lisp/gnus/gnus-draft.el: Remove XEmacs compat.

	* lisp/gnus/gnus-gravatar.el (gnus-gravatar-insert): Remove
	XEmacs compat.

	* lisp/gnus/gnus-group.el: Remove XEmacs compat.

	* lisp/gnus/gnus-html.el: Remove XEmacs compat.

	* lisp/gnus/gnus-ml.el: Remove XEmacs compat.

	* lisp/gnus/gnus-picon.el (gnus-picon-style): Remove XEmacs comment.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't use image-map if it isn't defined

	* lisp/net/shr.el (shr-image-map): Only use image-map as a
	parent if it's defined (bug#22614).

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Check for MagickAutoOrientImage

	* configure.ac: Check for MagickAutoOrientImage.

	* src/image.c (imagemagick_load_image): Don't use
	MagickAutoOrientImage unless it's available.

2016-02-10  Lars Ingebrigtsen  <larsi@gnus.org>

	Document EXIF image rotation

	* doc/lispref/display.texi (ImageMagick Images): Mention EXIF rotation.

2016-02-10  Dima Kogan  <dima@secretsauce.net>

	Support integer image rotation and respect EXIF rotations

	* src/image.c (imagemagick_load_image): Allow integer rotations in
	addition to floating point rotations (bug#22591).
	* src/image.c (imagemagick_load_image): Images that have an
	orientation given in EXIF and have no explicit :rotation tag are now
	pre-rotated.  All information such as width/height is reported for the
	rotated image.

2016-02-10  Wolfgang Jenkner  <wjenkner@inode.at>

	* lisp/net/shr.el (image-map): Defvar it.  (Bug#22614)

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/gnus-cite.el: Remove XEmacs compat code.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from gnus-bookmark.el

	* lisp/gnus/gnus-bookmark.el (gnus-bookmark-mouse-available-p): Remove.
	(gnus-bookmark-remove-properties): Remove.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove XEmacs compat code from gnus-a*.el

	* lisp/gnus/gnus-agent.el: Remove compat code.

	* lisp/gnus/gnus-art.el: Remove compat code.

	* lisp/gnus/gnus-async.el: Remove compat code.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove gmm compat functions

	* lisp/gnus/gmm-utils.el (gmm-image-search-load-path): Remove.
	(gmm-write-region): Remove.
	(gmm-called-interactively-p): Remove.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/ecomplete.el: Remove XEmacs compat code.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove compat code from compface.el

	* lisp/image/compface.el: Remove XEmacs compat code throughout.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove the now empty gnus-ems.el and references to it

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus compat names for mouse bindings

	* lisp/gnus/gnus-ems.el (gnus-widget-button-keymap): Remove.
	(gnus-down-mouse-2): Remove.
	(gnus-down-mouse-3): Remove.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Drop Gnus compat functions

	* lisp/gnus/gnus-ems.el (gnus-mule-max-width-function): Remove.

	* lisp/gnus/gnus-util.el (gnus-kill-all-overlays): Move here.

	* lisp/gnus/gnus.el (gnus-mode-line-modified): Remove.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Get rid of gnus-ems-redefine

	* lisp/gnus/gnus-ems.el (gnus-mouse-face-prop): Remove.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/gnus-spec.el: Move definition here from gnus-ems.el.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus compat code

	* lisp/gnus/gnus-ems.el (gnus-ems-redefine): Remove
	transitional code from ten years ago.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow interactively scaling past :max-width etc

	* lisp/image.el (image--current-scaling)
	(image--image-without-parameters): New functions.
	(image--change-size): Use them to allow changing the size of a
	image even if it has :width/:max-width (etc.) already set.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/mm-decode.el (shr-image-map): Compilation fix.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow accessing the image commands via shr

	* lisp/gnus/mm-decode.el (mm-convert-shr-links): Allow
	accessing the image commands.

	* lisp/net/shr.el (shr-image-map): New map used for images.
	(shr-urlify): Don't overwrite image maps when applying URL maps.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Use a sparse image keymap

	* lisp/image.el (image-map): Use a sparse keymap.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Put a keymap on images created with insert-image and friends

	* lisp/image.el (image-save): New command.
	(image-rotate): Ditto.
	(image-map): New keymap.
	(insert-image): Put the image-map on all images.
	(insert-sliced-image): Ditto.
	* doc/lispref/display.texi (Showing Images): Document the
	image map.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix some folding issues in read-multiple-choice

	* lisp/subr.el (read-multiple-choice): Fix folding when you
	have many items.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix typo in last checkin

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove Gnus compat functions

	* lisp/gnus/gnus-ems.el (gnus-mark-active-p)
	(gnus-region-active-p, gnus-select-lowest-window)
	(gnus-summary-display-table, gnus-max-width-function): Remove
	compat functions.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Move non-compat Gnus functions to gnus-util.el

	* lisp/gnus/gnus-util.el (gnus-remove-image, gnus-put-image)
	(gnus-create-image, gnus-image-type-available-p): Move here
	from gnus-ems.el, since these aren't compat functions.

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	Omit valloc decl if redundant

	* src/gmalloc.c (valloc): Omit decl if malloc.h is included,
	to pacify --enable-gcc-warnings.

2016-02-09  Wolfgang Jenkner  <wjenkner@inode.at>

	Restore the calloc family.

	* src/gmalloc.c (calloc, gcalloc, hybrid_calloc): Restore definitions.
	They were lost in a4817d8 but calloc is still (marginally) used in
	code statically liked with emacs, so hybrid_calloc is needed.
	Also, in the non-hybrid case, we can't get rid of calloc anyway as
	other libraries liked with emacs may need it.
	* src/conf_post.h: Restore redefinition of calloc to hybrid_calloc.

2016-02-09  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove some Gnus compat functions

	* lisp/gnus/gnus-ems.el (gnus-string-mark-left-to-right)
	(gnus-window-inside-pixel-edges, gnus-set-process-plist)
	(gnus-process-plist, gnus-process-get, gnus-process-put): Remove.

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	-

	-

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	4feb962 * lisp/comint.el (comint-prompt-read-only): Clean tabs in docstring
	cc419fb Don't inloop gnus-uu-mark-thread on the last thread
	51c77a2 Display non-ASCII group names better in prompts
	f93d669 Default to gpg2 instead of gpg

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	9ffe7dd * lisp/isearch.el (isearch-define-mode-toggle): Improve logic
	16140f7 * lisp/menu-bar.el (menu-bar-options-menu): New search submenu
	3db6adb * lisp/isearch.el (search-default-mode)
	4ea1ea7 * lisp/isearch.el: Rename search-default-regexp-mode to search-default-mode
	c77ffc8 Use monitor's resolution for positioning tooltips
	49e5749 Fix file-notify-test on MS-Windows
	be1d874 Fix issues found by auditing w32notify code
	87ae218 Extend etags Ruby support for accessors
	aa35257 Update publicsuffix.txt.
	6816bff Ensure that Gnus dribble handling allows removing entries
	691feae Be consistent when using encoded strings in nnimap data
	3ed423b Display the decoded Gnus group name
	5428b5b Use completion-ignore-case instead of defining command

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	1eaf68f * test/automated/file-notify-tests.el (file-notify-test06-many-events):
	d333716 ; * etc/NEWS: Expand news entry for scss-mode
	c32c16f ; Better document changes in ls-lisp default behavior
	dc6eed2 Fix doc string of tls-program

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	2c117fc * etc/NEWS: Document new mpc.el features
	71a0496 * lisp/custom.el (defface): Revert indentation change.  (Bug#22524)
	9dfece1 Correctly fontify C++ initializations which "look like" functions.
	4485222 Improve newsticker-treeview-selection-face
	4236944 Minor fix in tagging Ruby accessors by etags
	35fc77d Spelling fixes
	3dda110 Remove 'def X' from the example

2016-02-09  Eli Zaretskii  <eliz@gnu.org>

	Fix network-stream-tests on MS-Windows

	* test/lisp/net/network-stream-tests.el (make-local-unix-server):
	Skip if local sockets are not supported.

2016-02-09  Michael Albinus  <michael.albinus@gmx.de>

	* admin/notes/bug-triage: Fix bug priorities.  Explain colors in debbugs-gnu.

2016-02-09  Eli Zaretskii  <eliz@gnu.org>

	Disable 'timer-list'

	* lisp/emacs-lisp/timer-list.el: Make 'timer-list' a disabled
	command.

2016-02-09  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid aligned_alloc static/extern collision

	* src/alloc.c (aligned_alloc): Define to private name when a
	static function, to avoid collision with lisp.h extern decl.
	Reported by John Yates in:
	https://lists.gnu.org/r/emacs-devel/2016-02/msg00439.html

2016-02-08  David Edmondson  <dme@dme.org>

	src/process.c Correctly convert AF_INET6 addresses

	* src/process.c (conv_lisp_to_sockaddr): AF_INET6 addresses are
	converted to a list of 16 bit quantities by
	conv_sockaddr_to_lisp(). conv_lisp_to_sockaddr() should follow the
	same scheme rather than expecting a (longer) list of 8 bit
	quantities.

2016-02-08  Michal Nazarewicz  <mina86@mina86.com>

	Make `message-beginning-of-line' aware of folded headers

	* lisp/gnus/message.el (message-beginning-of-header): New function which
	moves point to the beginning of a mail header.  The function is aware of
	folded headers and with non-nil argument looks for the true beginning of
	a header while with nil argument moves to the indented text of header's
	value.
	(message-beginning-of-line): Function is now aware of folded headers and
	either moves point to the indention of a header or, in visual-line-mode,
	searches for the beginning of the header.

2016-02-08  Michal Nazarewicz  <mina86@mina86.com>

	Optimize ‘point in message header’ check

	* lisp/gnus/message.el (message-point-in-header-p): Replace two unbound
	regular expression matches with a single bound string match thus
	reducing amount of work the function is doing.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the `R' command get the correct relative <img>s

	* lisp/net/eww.el (eww-readable): Preserve the base URL so
	that image expansions are fetched from the right place (bug#22605).

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a mode to list and cancel timers

	* doc/lispref/os.texi (Timers): Menton `timer-list'.

	* lisp/emacs-lisp/timer-list.el: New file.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Add new commands to allow changing the size of images

	* lisp/image.el (image-increase-size, image-decrease-size):
	New commands.
	(image-change-size): New function.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow the image scale to be a floating point number

	* src/image.c (compute_image_size): The scale can be a
	floating point number.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Add an IPv6 test

	* test/lisp/net/network-stream-tests.el
	(connect-to-tls-ipv6-nowait): Add an ipv6 test, too.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Use gnutls-serv instead of openssh

	* test/lisp/net/network-stream-tests.el (make-tls-server): Use
	gnutls-serv instead of openssh.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Skip TLS tests if we don't have openssl

	* test/lisp/net/network-stream-tests.el (connect-to-tls): Skip
	TLS tests if we don't have openssl and GnuTLS.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Add an IPv6 test

	* test/lisp/net/network-stream-tests.el
	(connect-to-tls-ipv6-nowait): Add an ipv6 test, too.

2016-02-08  Lars Ingebrigtsen  <larsi@gnus.org>

	Use gnutls-serv instead of openssh

	* test/lisp/net/network-stream-tests.el (make-tls-server): Use
	gnutls-serv instead of openssh.

2016-02-08  Daniel Colascione  <dancol@dancol.org>

	Performance improvements for vc-hg

	Teach vc-hg how to read some Mercurial internal data structures,
	allowing us to avoid the need to run hg status -A, which is very slow
	for large repositories.  Fall back to running hg if anything looks
	funny.  vc-hg now puts the _working directory_ revision in the
	modeline instead of the file revision, which greatly improves
	performance and which allows us to again skip running hg in the case
	that we have an active bookmark.

	* lisp/vc/vc-hg.el (vc-hg-state): Try calling `vc-hg-statefast'
	(vc-hg-symbolic-revision-styles)
	(vc-hg-use-file-version-for-mode-line-version)
	(vc-hg-parse-hg-data-structures): New user preferences
	(vc-hg--active-bookmark-internal, vc-hg--run-log)
	(vc-hg--symbolic-revision, vc-hg-mode-line-string)
	(vc-hg--read-u8, vc-hg--read-u32-be)
	(vc-hg--raw-dirstate-search, vc-hg--cached-dirstate-search)
	(vc-hg--parts-to-string, vc-hg--pcre-to-elisp-re)
	(vc-hg--glob-to-pcre, vc-hg--hgignore-add-pcre)
	(vc-hg--hgignore-add-glob, vc-hg--hgignore-add-path)
	(vc-hg--slurp-hgignore-1, vc-hg--slurp-hgignore)
	(vc-hg--ignore-patterns-valid-p)
	(vc-hg--ignore-patterns-ignored-p, vc-hg--time-to-fixnum)
	(vc-hg--file-ignored-p, vc-hg--read-repo-requirements)
	(vc-hg--requirements-understood-p, vc-hg--dirstate-scan-cache)
	(vc-hg-state-fast): New functions.
	(vc-hg--hgignore-patterns, vc-hg--hgignore-filenames)
	(vc-hg--cached-ignore-patterns, vc-hg--dirstate-scan-cache)
	(vc-hg--dirstate-scan-cache): New internal variables.
	* lisp/vc/vc-hooks.el (vc-refresh-state): Invoke vc find-file-hook
	before updating modeline.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Skip TLS tests if we don't have openssl

	* test/lisp/net/network-stream-tests.el (connect-to-tls): Skip
	TLS tests if we don't have openssl and GnuTLS.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Automatically scale images up on high-density screens

	* doc/lispref/display.texi (ImageMagick Images): Mention :scale.
	(Defining Images): Mention image-scaling-factor.

	* lisp/image.el (image-compute-scaling-factor): New function
	(bug#22172).
	(create-image): Use it.
	(image-scaling-factor): New variable.

	* src/image.c (compute_image_size): Take :scale into account.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Ensure progress when fetching from the queue

	* lisp/url/url-queue.el (url-queue-check-progress): Ensure
	that we have progress when fetching queued requests (bug#22576).

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Make mail-extract-address-components return the user name more

	* lisp/mail/mail-extr.el (mail-extract-address-components):
	Return the name even if it's the same as the mailbox name (if
	`mail-extr-ignore-single-names' isn't set) (bug#22594).

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Message no longer warns about unknown top level domains

2016-02-07  Jarno Malmari  <jarno@malmari.fi>

	Add tests for url-auth

	* test/lisp/url/url-auth-tests.el: New file.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a TLS connection test

	* test/lisp/net/network-stream-tests.el (connect-to-tls): Add
	a TLS connection test.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Add more network tests

	* test/lisp/net/network-stream-tests.el (echo-server-nowait):
	New test.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Add network tests

	* test/lisp/net/network-stream-tests.el: New suite of network tests.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a TLS connection test

	* test/lisp/net/network-stream-tests.el (connect-to-tls): Add
	a TLS connection test.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Add more network tests

	* test/lisp/net/network-stream-tests.el (echo-server-nowait):
	New test.

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Add network tests

	* test/lisp/net/network-stream-tests.el: New suite of network tests.

2016-02-07  Rasmus Pank Roulund  <rasmus@gmx.us>

	Allow various Gnus and Message address variables to be functions

	* doc/misc/gnus.texi (To From Newsgroups):
	gnus-ignored-from-addresses can be a function.

	* doc/misc/message.texi (Wide Reply):
	message-dont-reply-to-names can be a function.

	* lisp/gnus/gnus-icalendar.el (gnus-icalendar-identities):
	message-alternative-emails can be a function.

	* lisp/gnus/gnus-notifications.el (gnus-notifications):
	message-alternative-emails can be a function (bug#22315).

	* lisp/gnus/gnus-sum.el
	(gnus-summary-from-or-to-or-newsgroups):
	gnus-ignored-from-addresses can be a function (bug#22315).

2016-02-07  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix typo in Gnus regexp

	* lisp/gnus/gnus-art.el (gnus-button-valid-fqdn-regexp): Fix
	typo in last change to this regexp (bug#22592).

2016-02-07  Paul Eggert  <eggert@cs.ucla.edu>

	Port to FreeBSD x86

	Reported by Herbert J. Skuhra in:
	https://lists.gnu.org/r/emacs-devel/2016-02/msg00336.html
	* src/lisp.h (NONPOINTER_BITS) [__FreeBSD__]: Zero in this case too,
	since malloc always returns a multiple of 8 in FreeBSD.

2016-02-07  Alan Mackenzie  <acm@muc.de>

	On leaving CC Mode, clean up by removing character properties.

	* lisp/progmodes/cc-mode.el (c-leave-cc-mode-mode): Remove from the buffer
	all instances of the text properties/extents category, syntax-table,
	c-is-sws, c-in-sws, c-type, and c-awk-NL-prop.

2016-02-06  Lars Ingebrigtsen  <larsi@gnus.org>

	message-valid-fqdn-regexp no longer exists

	* lisp/gnus/gnus-art.el (gnus-button-valid-fqdn-regexp): Don't use
	the no-longer-existing message-valid-fqdn-regexp variable.

2016-02-06  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove message-valid-fqdn-regexp, since it changes too much now

	* lisp/gnus/message.el (message-valid-fqdn-regexp): Remove.
	(message-bogus-recipient-p): Don't use it any more.
	(message-make-fqdn): Ditto.  Suggested by Lars-Johan Liman.

2016-02-06  Paul van der Walt  <paul@denknerd.org>

	Match "Re :" as a "Re:" prefix

	* lisp/gnus/message.el (message-subject-re-regexp): Also match
	"Re :" as a "Re:" prefix (commonly used in France).

2016-02-06  Adam Sjøgren  <asjo@koldfront.dk>

	lisp/net/shr.el (shr-tag-del, shr-tag-ins): New functions.

	* lisp/net/shr.el (shr-tag-del, shr-tag-ins): New functions.

2016-02-06  David Edmondson  <dme@dme.org>

	src/process.c Correctly convert AF_INET6 addresses

	* src/process.c (conv_lisp_to_sockaddr): AF_INET6 addresses are
	converted to a list of 16 bit quantities by
	conv_sockaddr_to_lisp(). conv_lisp_to_sockaddr() should follow the
	same scheme rather than expecting a (longer) list of 8 bit
	quantities.

2016-02-05  Martin Jesper Low Madsen  <martin@martinjlowm.dk>

	Search for host/port combinations in auth-source on OS X

	* lisp/gnus/auth-source.el (auth-source-macos-keychain-search):
	Search for all host/port (or protocol) combinations for a match in
	the OS X keychain.

2016-02-05  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove nonsensical setting of gnus-newsgroup-unseen

	* lisp/gnus/gnus-sum.el (gnus-update-marks): Remove nonsensical
	setting of gnus-newsgroup-unseen.

2016-02-05  Lars Ingebrigtsen  <larsi@gnus.org>

	Use underline on all terminals that support it

	* lisp/subr.el (read-multiple-choice): Use
	display-supports-face-attributes-p instead of
	display-graphic-p to determine whether we can use underlining.

2016-02-05  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the nsm query say what it did after the user interaction

	* lisp/net/nsm.el (nsm-query): Issue a message about
	aborting/accepting messages (suggested by N. Jackson)
	(bug#22531).

2016-02-05  Paul Eggert  <eggert@cs.ucla.edu>

	Omit XLI (init) == 0 optimization in make-vector

	* src/alloc.c (Fmake_vector): Simplify by omitting the (XLI (init)
	== 0) case, as this optimization is probably not worth the hassle.
	Just for the record, the test for that case could have been
	(XLI (init) % ((EMACS_UINT) -1 / UCHAR_MAX) == 0) (!),
	assuming the typical platform with no padding bits and where
	conversion to int omits the most significant bits.

2016-02-05  Paul Eggert  <eggert@cs.ucla.edu>

	* autogen.sh: Port to dash (Bug#22556).

2016-02-05  Michael Albinus  <michael.albinus@gmx.de>

	Minor cleanup for Tramp "doas".

	* doc/misc/tramp.texi (Inline methods): Add "doas" method.

	* etc/NEWS: Add Tramp connection method "doas".

	* lisp/net/tramp-sh.el (tramp-methods) <doas>:
	Add `tramp-remote-shell-args'.

2016-02-05  Xi Lu  <lx@shellcodes.org>

	* lisp/net/tramp-sh.el (tramp-methods) <doas>: Add.  (Bug#22542)

	(tramp-default-user-alist): Add rule for "doas".
	(top): Completion function for "doas" is
	`tramp-completion-function-alist-su'.

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Restore the window configuration

	* lisp/net/nsm.el (nsm-query-user): Restore the window
	configuration (bug#22532).

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Use an X popup in read-multiple-choice if running from a mouse command

	* lisp/subr.el (read-multiple-choice): Use an X popup if
	called from a mouse action (bug#19368).

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Display cursor in echo area when prompting

	* lisp/subr.el (read-multiple-choice): Display the cursor in
	the echo area when prompting (bug#19368).

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Make NSM prompting clearer

	* lisp/net/nsm.el (nsm-query-user): Use read-multiple-choice
	to prompt in a nicer way (bug#19368).

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Underline read-multiple-choice-face

	* lisp/faces.el (read-multiple-choice-face): Also underline
	the choice.

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Make url.el use async DNS

	* lisp/url/url-gw.el (url-open-stream): Use non-blocking DNS.

	* src/process.c (syms_of_process): Add a `dns' subfeature for
	make-network-process.

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Only do async DNS if requested with :nowait 'dns

	* doc/lispref/processes.texi (Network Processes): Mention the
	dns value of :nowait.

	* src/process.c (Fmake_network_process): Only do async DNS if
	:nowait is `dns'.

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Add sanity check for checking async DNS

	* src/process.c (check_for_dns): Disregard processes that have
	already been killed.

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	Make the read-multiple-choice prompt a bit prettier

	* doc/lispref/commands.texi (Reading One Event): Mention
	read-multiple-choice-face.

	* lisp/subr.el (read-multiple-choice): Make the prompting a bit
	prettier.

2016-02-04  Paul Eggert  <eggert@cs.ucla.edu>

	Prefer memcpy and memset to doing it by hand

	* src/alloc.c (Fmake_vector):
	* src/ccl.c (setup_ccl_program):
	Use memset to clear array.
	* src/alloc.c (Fvector, Fmake_byte_code):
	* src/charset.c (Fdefine_charset_internal):
	Use memcpy to copy array.

2016-02-04  Nicolas Petton  <nicolas@petton.fr>

	Do not ignore redirections of 301, 302 and 307 status codes

	The current version of HTTP/1.1 (RFC 7231) no longer requires
	confirmation on 301, 302 or 307 status codes, therefore we do not have
	to ignore redirects for other requests than GET and HEAD.

	* lisp/url/url-http.el (url-http-parse-headers): Do not ignore 301, 302
	and 307 redirects for other requests than GET and HEAD.

2016-02-04  Mark Oteiza  <mvoteiza@udel.edu>

	* lisp/net/eww.el (eww-switch-to-buffer): Use pop-to-buffer-same-window instead.

2016-02-04  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify USE_ALIGNED_ALLOC

	* src/alloc.c (USE_ALIGNED_ALLOC): Simplify, now that we’ve merged
	in the emacs-25 changes.  Omit no-longer-needed decl for aligned_alloc.

2016-02-04  Eric Abrahamsen  <eric@ericabrahamsen.net>

	Honor docstring of gnus-group-get-new-news

	* lisp/gnus/gnus-start.el (gnus-get-unread-articles): If the prefix arg
	is t, but non-numeric, unconditionally consider all groups to need
	updating.

2016-02-04  Lars Ingebrigtsen  <larsi@gnus.org>

	New function read-multiple-choice

	* doc/lispref/commands.texi (Reading One Event): Document
	read-multiple-choice.

	* lisp/faces.el (read-multiple-choice-face): New face.

	* lisp/subr.el (read-multiple-choice): New function.

2016-02-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	ee73997 Make erc work better when encountering unknown prefix chars
	b99141d Make erc completion case-insensitive again
	66c4620 Make complection in erc use consistent casing
	8c562b2 Make /QUIT in erc more robust
	d93d2c5 Make tracking faces in Emacs work more reliably
	af6ab7e Make shr not bug out on images on non-graphical displays
	3311f40 Fix bookmark display widths
	d90ab1e Fix typo in eww-make-unique-file-name
	7f81825 Make it possible to TAB to input fields
	a43a1dc Insert complete alt texts when images are disabled
	56ed4e1 Allow eww text fields to grow
	66b315c Make erc work when subword-mode is switched on
	255b68f Fix IMAP doc example
	91557f5 Quoting fixes in doc strings and diagnostics
	2c0dc9f Fix warning message in hack-local-variables
	504696d Etags: yet another improvement in Ruby tags
	8784ebf Fix x-popup-menu on TTYs without a mouse
	8b87ecb * lisp/emacs-lisp/map.el: Improvements to the docstring of the
	        pcase macro
	6191003 Use pop-to-buffer-same-window in eww
	fe321fd * autogen.sh: Revert all recent changes.
	74ebd4a * make-dist: Updates related to nt/.
	737193a * make-dist: Add modules/.
	3696bf2 * make-dist: Update for super-special file that can't live in etc/.
	a4278e2 Fix failure to compile ns-win.el in parallel builds
	860da4d Fix names of tags generated for Ruby accessors
	f6213ce Fix file-name recognition in 'etags'
	e42e662 Change Ruby file names and extensions recognized by 'etags'
	58bfb6a More improvements for Ruby support in 'etags'
	c04e911 Add --git-config option to autogen.sh
	5713466 Fix editing undo changes in eww fields
	51362d6 Allow the user more control of popping up the eww window
	ee0fbd8 Make eww-browse-url with new-window parameter work again
	9c3142d Clean up eww code slightly
	cb035f3 Don't insert nil faces in shr
	4c3fae3 ; * lisp/progmodes/prolog.el: Remove some obsolete commentary.
	93f2153 Improve the custom type of some user options.
	9f60d7e Mark some risky calendar variables.
	1d07dcd Highlight two additional SCSS keywords
	ee8b466 Recommend enabling integrity-checking in git
	e639e10 Some corrections in Elisp manual
	d766ca8 Chatter when autogen.sh changes Git configuration
	3b734e1 * org/org-compat.el (org-font-lock-ensure): Fix bogus test (bug#22399)
	43cb9f8 Omit unnecessary history from Lisp intro
	2fbd1da * etc/HISTORY: Add some more history, plus git tags.
	c90e1b4 Improve elisp “Security Considerations” doc
	cedd7ca autogen.sh now arranges for git to check hashes
	86ce76b ; Fix ChangeLog.2 commit ID.
	7b1d2b1 Fix (c & 040) typo in emergency escapes
	a8273da Fix display of overlay strings with 'display' and 'box' property
	fc48106 Fix imap-starttls-open
	cdecbed Fix return value of imap-starttls-open
	20c7e34 ; * etc/NEWS: Fix renamed command name
	98bdbdb Correct reference to DARWIN_OS preprocessor symbol
	b250d29 Spelling fix
	b920a0e Spelling fixes
	93b144b Pacify GCC on C library without glibc API

2016-02-03  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	ea26c8a * lisp/net/browse-url.el (browse-url-default-browser): Lower
	        priority of non-free Chrome.
	0fac75f Improve the custom type of some user options.
	2df0e04 Highlight CSS variables with variable name face
	3cf5e81 * lisp/gnus/gnus-kill.el (gnus-winconf-kill-file): Not
	        user-serviceable.
	2a5233c Mark some user options that can get evalled as risky.
	39b166f Disable DebPrint in sys_read on MS-Windows
	9fd0189 ;Fix ChangeLog entry
	4bb7233 Fix typos in Introduction to Emacs Lisp manual

2016-02-03  Mark Oteiza  <mvoteiza@udel.edu>

	Add a new command to switch between erc buffers

	* doc/misc/eww.texi: Document eww-switch-to-buffer and its keybinding
	* etc/NEWS: Mention new command
	* lisp/net/eww.el (eww-mode-map): Bind eww-switch-to-buffer to "s"
	(eww-mode-map): Add menu item
	(eww-switch-to-buffer): New command

2016-02-03  David Edmondson  <dme@dme.org>

	Make erc work better when encountering unknown prefix chars

	* lisp/erc/erc.el (erc-channel-receive-names): Output a warning
	instead of erroring out on unknown prefix chars (bug#22380).

2016-02-03  Vasilij Schneidermann  <v.schneidermann@gmail.com>  (tiny change)

	Allow sending empty hidden values in eww

	* lisp/net/eww.el (eww-tag-input): Allow sending empty hidden
	values (bug#22388).

2016-02-03  Andrew Hyatt  <ahyatt@gmail.com>

	Remove packages obsoleted before Emacs 24.

	In accordance with the policy discussed in the emacs-devel list,
	packages that have been obsoleted for a full major release cycle are up
	for deletion.

	This removes almost all packages that are now eligible for deletion,
	with the exception of "cl-compat", which seems it is likely to still be
	used, and "optional", which offers some functionality that doesn't have
	a replacement yet.

2016-02-03  Paul Eggert  <eggert@cs.ucla.edu>

	Mention context when resume from emergency escape

	That way, if the user has been doing something else for a while,
	they are reminded of the situation when restarting Emacs,
	and are more likely to understand the two questions.
	* doc/emacs/trouble.texi (Emergency Escape): Document this.
	* src/keyboard.c (handle_interrupt): Implement this.

2016-02-03  Paul Eggert  <eggert@cs.ucla.edu>

	Port aligned_alloc decl to Cygwin.

	Problem reported by Ken Brown (Bug#22522#38).
	* configure.ac (aligned_alloc): Check for decl too.
	* src/lisp.h (aligned_alloc): Declare if not already declared.

2016-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	autogen.sh now configures git only on request

	* autogen.sh (do_autoconf, do_git): New vars.
	Support new arguments --help, all, autoconf, git.
	By default, just do autoconf-related configuration, not git.
	Prefer 'echo' to 'cat <<EOF ...', as this tends to avoid temp files.
	If GNU cp is available, use it to backup .git/config before
	changing it.  When configuring git, chatter about what is being
	done, and configure git to check hashes.  Avoid some duplicate
	file name specification when creating git hooks.

	* GNUmakefile (ALL_IF_GIT): New macro.
	(configure): Use it.
	* INSTALL.REPO: Suggest './autogen.sh all'.

2016-02-02  Lars Ingebrigtsen  <larsi@gnus.org>

	Doc fixes and refactorings based on comments from Eli Zaretskii

	* doc/lispref/processes.texi (Network Processes): Clarify the
	meaning of :tls-parameters.

	* lisp/net/gnutls.el (open-gnutls-stream): Clarify :nowait.

	* lisp/net/gnutls.el (gnutls-boot-parameters): Factor out into
	own function.
	(gnutls-negotiate): Use it.
	(open-gnutls-stream): Ditto.

	* src/eval.c (vformat_string): Refactor out the printing bits
	from verror.
	(verror): Use it.

	* src/gnutls.c (boot_error): Mark failed processes with the
	real error message.

	* src/lisp.h: Declare vformat_string.

2016-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Build with C11 if available

	* admin/merge-gnulib (GNULIB_MODULES): Add std-gnu11.
	* m4/std-gnu11.m4: New file, from gnulib.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.

2016-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Update gnulib copy

	* doc/misc/texinfo.tex: Copy from gnulib.

2016-02-02  Glenn Morris  <rgm@gnu.org>

	* lisp/vc/add-log.el (change-log-directory-files, find-change-log):
	Doc tweaks.

2016-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Port better to platforms lacking aligned_alloc

	Problem reported by Ken Brown (Bug#22522).
	* src/lisp.h (hybrid_aligned_alloc)
	[HYBRID_MALLOC && !HAVE_ALIGNED_ALLOC]: New decl.

2016-02-02  Paul Eggert  <eggert@cs.ucla.edu>

	Port malloc.h hygiene fix to LTO

	* src/alloc.c (__malloc_initialize_hook):
	Make it externally visible (Bug#22522).

2016-02-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Build fix for --enable-check-lisp-object-type

	* src/process.c (check_for_dns): Type fix reported by YAMAMOTO
	Mitsuharu.

2016-02-01  Glenn Morris  <rgm@gnu.org>

	Make find-change-log prefer a VCS root, if no ChangeLog exists.

	* lisp/vc/add-log.el (change-log-directory-files): New option.
	(find-change-log): Respect change-log-directory-files.
	* doc/emacs/maintaining.texi (Change Log Commands):
	Mention change-log-directory-files.

2016-02-01  Lars Ingebrigtsen  <larsi@gnus.org>

	Boot parameter check fix

	* src/process.c (send_process): Fix test for boot parameters noted
	by Andy Moreton.

2016-02-01  Paul Eggert  <eggert@cs.ucla.edu>

	Double static heap size.

	* src/sheap.h (STATIC_HEAP_SIZE): Double it, since it was too
	small on FreeBSD (Bug#22086).

2016-02-01  Michael Albinus  <michael.albinus@gmx.de>

	Fix Bug#20821

	* lisp/net/tramp.el (tramp-file-name-handler):
	* lisp/net/tramp-sh.el (tramp-sh-handle-expand-file-name):
	Use `tramp-drop-volume-letter'.  (Bug#20821)

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Style fix

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Return the correct server port number

	* src/process.c (connect_network_socket): Return the correct
	server port number.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix autoconf test for getaddrinfo_a

	* configure.ac: Make the test for getaddrinfo_a work.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Better async error reporting

	* src/process.c (connect_network_socket): Mark failed processes
	with a better error message.
	(check_for_dns): Ditto.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Clarify :tls-parameters.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Always boot TLS if given parameters

	* src/process.c (connect_network_socket): If we have the TLS
	parameters, then boot the socket.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Add documentation for :tls-parameters

	* doc/lispref/processes.texi (Network Processes): Mention
	:tls-parameters.

	* src/process.c (Fmake_network_process): Document the
	:tls-parameters parameter.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Build fix for glibc systems.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Make network connections work again on non-glibc systems

	* lisp/net/gnutls.el (open-gnutls-stream): Pass the TLS
	keywords in directly so that they can be used when doing
	synchronous DNS on non-synchronous connections.

	* lisp/net/network-stream.el (open-network-stream): Allow
	passing in the TLS parameters directly.

	* src/process.c (conv_numerical_to_lisp): New function to convert
	numerical addresses to Lisp.
	(Fmake_network_process): Rework the non-HAVE_ADDRINFO code
	paths so that they work again.
	(syms_of_process): Build fix for non-glibc systems.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Windows build fix

	* src/process.c (Fmake_network_process): Build fix for systems
	without local sockets.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Use XCAR/XCDR instead of Fcar etc

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix GC problem in async TLS connection

	* src/process.h: All Lisp_Object slots have to come first,
	otherwise they won't be protected from gc.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Further TLS async work

	* src/gnutls.c (boot_error): New function to either signal an
	error or return an error code.
	(Fgnutls_boot): Don't signal errors when running asynchronously.

	* src/process.h (pset_status): Move here from process.c to be
	able to use from gnutls.c.

	* src/process.c (connect_network_socket): Do the TLS boot here
	when running asynchronously.
	(wait_reading_process_output): Rework the dns_processes
	handling for more safety.

2016-01-31  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up dead code

	* lisp/net/gnutls.el (gnutls-async-sentinel): Remove.

2016-01-31  Dave Barker  <kzar@kzar.co.uk>

	Add ability to give rcirc servers an alias name

	* lisp/net/rcirc.el (rcirc-server-alist): Add :server-alias
	customization option.
	(rcirc, rcirc-connect): Take server alias into account.

2016-01-31  Paul Eggert  <eggert@cs.ucla.edu>

	Port new hybrid malloc to FreeBSD

	Problem reported by Wolfgang Jenkner in: https://bugs.gnu.org/22086#118
	* src/gmalloc.c (__malloc_initialize_hook, __after_morecore_hook)
	(__morecore) [HYBRID_MALLOC]: Define in this case too.

2016-01-31  Wolfgang Jenkner  <wjenkner@inode.at>

	* configure.ac: Stop using mmap for buffers for FreeBSD.

2016-01-31  Michael Albinus  <michael.albinus@gmx.de>

	Merge changes from Tramp repository

	* doc/misc/Makefile.in (${buildinfodir}/tramp.info tramp.html):
	No EXTRA_OPTS needed.

	* doc/misc/tramp.texi: Merge changes from Emacsemacs-25
	branch, especially for @trampfn{}.
	(Top): Move @ifnottex down.
	(History): XEmacs support has been removed.
	(GVFS based methods, Remote processes): Do not use emacsgvfs flag.
	(Auto-save and Backup): Use both syntax versions.
	(File name Syntax): Remark on IPv6 adresses is valid for
	unified syntax only.

	* doc/misc/trampver.texi: Do not set emacsgvfs flag.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

2016-01-30  Glenn Morris  <rgm@gnu.org>

	* lisp/vc/add-log.el (find-change-log): Use locate-dominating-file.

2016-01-30  Matthew Carter  <m@ahungry.com>

	Quote table names for postgres listings (sql-mode)

	* lisp/progmodes/sql.el (sql-postgres-completion-object): Avoid passing
	  unquoted table names to the completion list.

2016-01-30  Glenn Morris  <rgm@gnu.org>

	Change Smerge "Mine" and "Other" for "Upper" and "Lower.  (Bug#20878)

	* lisp/vc/smerge-mode.el (smerge-diff-switches)
	(smerge-context-menu, smerge-match-conflict, smerge-swap): Doc fixes.
	(smerge-upper, smerge-upper-face, smerge-keep-upper)
	(smerge-diff-base-upper): Rename from smerge-mine, smerge-mine-face,
	smerge-keep-mine, smerge-diff-base-mine.  Update all uses.
	(smerge-mine-face, smerge-other-face): Remove obsolete face aliases.
	(smerge-lower, smerge-lower-face, smerge-lower-re, smerge-keep-lower)
	(smerge-diff-base-lower): Rename from smerge-other, smerge-other-face,
	smerge-other-re, smerge-keep-other, smerge-diff-base-lower.
	Update all uses.
	(smerge-basic-map): Add "l" and "u" bindings.
	(smerge-mode-menu): Update menu bindings for renaming.
	(smerge-font-lock-keywords): Update face names.
	(smerge-match-names): Update names.
	(smerge-diff-upper-lower): Rename from smerge-diff-mine-other.
	(smerge-match-conflict, smerge-ediff): Rename local variables.
	(smerge-makeup-conflict): Relabel markers.
	(smerge-parsep-re): Use renamed variables.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Port recent my_edata change to MS-Windows

	* src/lastfile.c (my_edata): Also define if WINDOWSNT.

2016-01-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Rework the mechanisms for async GnuTLS connections

	* lisp/net/gnutls.el (open-gnutls-stream): Compute the
	gnutls-boot parameters and pass them to the process object.
	(gnutls-negotiate): New parameter :return-keywords that won't
	connect to anything, just compute the keywords.

	* lisp/url/url-http.el (url-http): Revert async TLS sentinel
	hack, which is no longer necessary.

	* src/gnutls.c (Fgnutls_asynchronous_parameters): Rename from
	gnutls-mark-process.

	* src/process.c (connect_network_socket): If we're connecting to
	an asynchronous TLS socket, complete the GnuTLS boot sequence here.

	* src/process.h: New parameter gnutls_async_parameters.

2016-01-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix segfault from double free

	* src/process.c (check_for_dns): Protect against double free
	issues.

2016-01-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Remove debugging

2016-01-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Implement asynchronous GnuTLS connections

	* doc/misc/emacs-gnutls.texi (Help For Developers): Mention
	the nowait parameter.

	* lisp/net/gnutls.el (open-gnutls-stream): Allow asynchronous
	connections with the new nowait parameter.

	* lisp/net/network-stream.el (network-stream-open-tls): Pass
	on :nowait to open-gnutls-stream.

	* lisp/url/url-http.el (url-http): Don't overwrite the
	sentinel created by open-gnutls-stream.

	* src/gnutls.c (Fgnutls_mark_process): New function.

	* src/process.c (send_process): Don't write to GnuTLS sockets that
	haven't been initialized yed.

	* src/process.h: New slot gnutls_wait_p.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Tell Automake the new lib/Makefile.am is OK

	* lib/Makefile.am (AUTOMAKE_OPTIONS): Add -Wno-portability.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Make it easy to override preferred-branch test

	* Makefile.in (preferred-branch-is-current):
	Rename from emacs-25-branch-is-current.  All uses changed.
	(PREFERRED_BRANCH): New macro.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Shrink static heap a bit

	* src/sheap.h: Include lisp.h, for Lisp_Object.
	(STATIC_HEAP_SIZE): Now an enum constant, not a macro.
	Make it 2 MiB * sizeof (Lisp_Object), which is a bit more
	conservative than the old value.
	(Bug#22086)

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Fix extern symbols defined and not used

	* src/alloc.c: Always include <signal.h>.
	(malloc_warning) [!SIGDANGER && (SYSTEM_MALLOC || HYBRID_MALLOC)]:
	Do not define; unused.
	* src/emacs.c, src/lisp.h (might_dump) [!DOUG_LEA_MALLOC]: Now static.
	* src/gmalloc.c (gdefault_morecore): Rename from __default_morecore,
	to avoid collision with glibc.  Now static.  All uses changed.
	* src/lastfile.c (my_edata): Define only if
	((!defined SYSTEM_MALLOC && !defined HYBRID_MALLOC && !defined
	WINDOWSNT) \ || defined CYGWIN || defined DARWIN_OS).
	(Bug#22086)

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Build lib/e-*.o only on platforms that need it

	* configure.ac (hybrid malloc): Simplify configuration.
	(SHEAP_OBJ): Remove; no longer needed.
	(HYBRID_MALLOC): New var. Subst it.
	(HYBRID_MALLOC_LIB): New Automake conditional.
	* lib/Makefile.am (noinst_LIBRARIES): Add libegnu.a only if
	HYBRID_MALLOC_LIB.
	(libegnu_a_CPPFLAGS): Omit AM_CPPFLAGS; not needed.
	(MOSTLYCLEANFILES): Add libegnu.a.
	* src/Makefile.in (SHEAP_OBJ): Remove.
	(HYBRID_MALLOC): New macro.
	(base_obj): Use it to conditionally add sheap.o.
	(LIBEGNU_ARCHIVE): New macro.
	($(LIBEGNU_ARCHIVE)): New rule, replacing $(lib)/libegnu.a.
	All uses of the latter replaced by the former.
	* src/alloc.c (USE_ALIGNED_ALLOC): Simplify configuration.
	Correct misspelling ALIGNED_ALLOC to HAVE_ALIGNED_ALLOC.
	* src/gmalloc.c: Update comment.
	* src/lisp.h (aligned_alloc)
	[!DOUG_LEA_MALLOC && !HYBRID_MALLOC && !SYSTEM_MALLOC]:
	New decl.
	(Bug#22086)

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Include <malloc.h> when advisable

	This should help insulate us better from future glibc changes.
	It is good hygiene to include .h files for APIs that Emacs uses.
	Fix type clashes between Emacs and GNU <malloc.h> (Bug#22086).
	* configure.ac: Check for malloc.h.
	* src/alloc.c: Include <malloc.h> depending on HAVE_MALLOC_H,
	not on DOUG_LEA_MALLOC.
	* src/emacs.c, src/gmalloc.c (malloc_enable_thread):
	Remove decl (now in lisp.h).
	* src/gmalloc.c: Include stddef.h earlier, for ptrdiff_t.
	[emacs]: Include lisp.h.
	[HAVE_MALLOC_H]: Include <malloc.h>.
	(__MALLOC_HOOK_VOLATILE): New macro, if not already defined.
	(__after_morecore_hook, __malloc_initialize_hook, __morecore)
	(__default_morecore):
	[!HAVE_MALLOC_H]: New decls near non-inclusion of <malloc.h>.
	(calloc): Make it clear that the macro should not be used.
	Remove unused decl.
	(malloc_info): New macro, to avoid clash with glibc <malloc.h>.
	(__morecore, __default_morecore, __after_morecore_hook)
	(__malloc_extra_blocks, __malloc_initialize_hook, __free_hook)
	(__malloc_hook, __realloc_hook, __memalign_hook, memory_warnings):
	Remove later decls.
	(gmalloc_hook, gfree_hook, grealloc_hook):
	Rename from __malloc_hook, __free_hook, __realloc_hook to
	avoid type collision with glibc <malloc.h>.  All uses changed.
	(gmalloc_hook):
	(__malloc_extra_blocks) [DOUG_LEA_MALLOC||HYBRID_MALLOC||SYSTEM_MALLOC]:
	Now static.
	(gmalloc_hook, __malloc_extra_blocks): Define even if [!HYBRID_MALLOC].
	(__malloc_initialize_hook, __after_morecore_hook):
	Declare with types compatible with glibc.
	(__memalign_hook, hybrid_calloc) [HYBRID_MALLOC]:
	Remove.  All uses removed.
	* src/lisp.h (__malloc_extra_blocks, malloc_enable_thread): New decls.
	* src/ralloc.c, src/vm-limit.c:
	Simplify includes and include <malloc.h> if available.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	* src/alloc.c: Include "sheap.h".

	(alloc_unexec_pre, alloc_unexec_post) [HYBRID_MALLOC]:
	Set and clear bss_sbrk_did_unexec, on all platforms not just Cygwin.
	* src/lisp.h (alloc_unexec_pre, alloc_unexec_post) [!DOUG_LEA_MALLOC]:
	Declare unconditionally.
	* src/unexcw.c, src/unexelf.c (bss_sbrk_did_unexec): Remove decl.
	(unexec): Don’t set or clear bss_sbrk_did_unexec;
	the caller now does this.
	(Bug#22086)

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify --enable-gcc-warnings when HYBRID_MALLOC

	* src/buffer.c (init_buffer):
	* src/emacs.c (main):
	* src/xsmfns.c (smc_save_yourself_CB, x_session_initialize):
	Use emacs_get_current_dir_name, not get_current_dir_name.
	* src/conf_post.h (aligned_alloc) [HYBRID_MALLOC && emacs]: New macro.
	(HYBRID_GET_CURRENT_DIR_NAME, get_current_dir_name): Remove.
	* src/emacs.c: Include "sheap.h".
	(report_sheap_usage): Remove decl.
	(Fdump_emacs) [HYBRID_MALLOC]: Report usage directly.
	Don't assume ptrdiff_t can be printed as int.
	* src/gmalloc.c [HYBRID_MALLOC]:
	Include "sheap.h" rather than declaring its contents by hand.
	(get_current_dir_name, gget_current_dir_name)
	(hybrid_get_current_dir_name): Remove.
	(emacs_abort): Remove duplicate decl.
	(aligned_alloc): Undef, like malloc etc.
	(ALLOCATED_BEFORE_DUMPING): Now a static function, not a macro.
	Make it a bit more efficient.
	(malloc_find_object_address): Remove unused decl.
	(enum mcheck_status, mcheck, mprobe, mtrace, muntrace, struct mstats)
	(mstats, memory_warnings): Declare only if GC_MCHECK.
	* src/lisp.h (emacs_get_current_dir_name):
	New decl, replacing get_current_dir_name.
	* src/sheap.c: Include sheap.h first.
	(STATIC_HEAP_SIZE): Remove; now in sheap.h.
	(debug_sheap): Now static.
	(bss_sbrk_buffer_end): Remove; no longer used.
	(bss_sbrk_ptr): Now static and private.
	(bss_sbrk_did_unexec): Now bool.
	(BLOCKSIZE): Remove, to avoid GCC warning about its not being used.
	(bss_sbrk): Don't treat request_size 0 as special, since the code
	works without this being a special case.
	Avoid overflow if request size exceeds INT_MAX.
	(report_sheap_usage): Remove; now done in emacs.c.
	* src/sheap.h: New file.
	* src/sysdep.c (get_current_dir_name): Remove macro.
	Include "sheap.h".
	(emacs_get_current_dir_name): Rename function from
	get_current_dir_name.  Handle HYBRID_MALLOC here;
	this is simpler.
	(Bug#22086)

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Report static heap usage on non-Cygwin, too

	* src/emacs.c (Fdump_emacs) [HYBRID_MALLOC]: Report sheap usage here ...
	* src/unexcw.c (unexec): ... instead of here, since sheap can be used
	on platforms other than Cygwin (Bug#22086).

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Pacify GCC on extern decls

	* src/unexelf.c (bss_sbrk_did_unexec): Move decl to top level
	to pacify recent GCC (Bug#22086).

2016-01-30  Wolfgang Jenkner  <wjenkner@inode.at>

	Add musl patch to support HYBRID_MALLOC on elf systems

	* src/gmalloc.c: Adjust for HYBRID_MALLOC in the non CYGWIN case.
	(__default_morecore): Here, in particular.
	* configure.ac: Define HYBRID_MALLOC when unexelf.o is used.
	New variable SHEAP_OBJ.
	* src/Makefile.in: Use it.
	(Bug#22086)

2016-01-30  Rich Felker  <dalias@libc.org>  (tiny change)

	unexelf.c hook to support HYBRID_MALLOC on ELF

	* src/unexelf.c (unexec) [HYBRID_MALLOC]:
	Define bss_sbrk_did_unexec (Bug#22086).

2016-01-30  Wolfgang Jenkner  <wjenkner@inode.at>

	Link temacs with gnulib compiled with -Demacs

	This is done to support HYBRID_MALLOC, since some static variables
	(e.g., last_environ in putenv.c) hold pointers to memory malloced
	before dumping (Bug#22086).
	* lib/Makefile.am: Add incantation to install libegnu.a.
	* src/Makefile.in ($(lib)/libgnu.a): Replace with libegnu.a
	(temacs$(EXEEXT)): Use it.

2016-01-30  Wolfgang Jenkner  <wjenkner@inode.at>

	Internal linkage for gmalloc etc. if HYBRID_MALLOC

	This avoids clashes with symbols if the after-dump malloc is
	derived from Doug Lea's implementation (Bug#22086).

	* src/gmalloc.c (emacs_abort, __morecore, __default_morecore):
	Move declarations up.  For HYBRID_MALLOC, turn all `extern'
	declarations below to `static' ones.
	(aligned_alloc): Declare for !MSDOS as well.
	(heapsize, _fraghead): Move resp. copy declaration downwards.
	For HYBRID_MALLOC, conditionalize out the other definitions,
	since the previous `static' declarations double as tentative
	definitions, anyway.
	(_malloc, _free, _realloc, __free_hook, _aligned_blocks)
	(__realloc_hook, __memalign_hook): Conditionalize out.
	(cfree, memalign, valloc): Ditto.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	-

	-

	-

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from origin/emacs-25

	3f481ad Rename xref-query-replace to xref-query-replace-in-results
	62f4ed4 Update cl-defgeneric and cl-defmethod docstrings
	2111e0e Comment out next-error-function integration in xref
	4e11ad3 Correct a use of "which" in intro.texi
	a1865bc Distinguish the two meanings of Java's keyword "default".  Fixes bug #22358.
	76045f7 Don't operate on menu bar of nonexistent frame
	c32f3bc Unbreak the GNUstep build.

2016-01-30  Paul Eggert  <eggert@cs.ucla.edu>

	-

	-

2016-01-30  Andreas Schwab  <schwab@linux-m68k.org>

	Re-enable checks in member, memql, delete to complain about non-lists

	* src/fns.c (Fmember, Fmemql, Fdelete): Revert 2007-10-16 change.

2016-01-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up compilation warnings

2016-01-30  Lars Ingebrigtsen  <larsi@gnus.org>

	Make async resolution more efficient

	* src/process.c (wait_reading_process_output): Use a list of
	process objects instead of looping through an array to check
	for name resolution.  This should be much faster.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	More async memory leaks

	* src/process.c (check_for_dns): Free even more allocated async stuff.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Compilation for for systems with getaddrinfo_a

	* src/process.c (Fmake_network_process): Make stuff work again on
	systems with getaddrinfo_a.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Save correct server data

	* src/process.c (connect_network_socket): Save the correct contact
	info for servers.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Compilation for for non-GNU systems

	* src/process.c (Fmake_network_process): Make compilation work
	again on hosts that don't have getaddrinfo_a.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Avoid memory leaks in async DNS

	* src/process.c (check_for_dns): Free async DNS resources after
	they've been used.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	* src/process.c (check_for_dns): Free the result data.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix server connections

	* src/process.c (Fmake_network_process): Make creating server
	listening ports work again.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Further make_network_process clean up

	* src/process.c (Fmake_network_process): Remove setting of unused
	family variable.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up GETADDRINFO usage in make-network-process

	* src/process.c (Fmake_network_process): Clean up the GETADDRINFO
	handling.

2016-01-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Implement asynchronous name resolution

	* src/process.c (Fmake_network_process): Do asynchronous DNS
	lookups if we have getaddrinfo_a and the user requests :nowait.
	(check_for_dns): New function.
	(wait_reading_process_output): Check for pending name
	resolution in the idle loop.

	* src/process.h: Add structure for async DNS.

2016-01-28  Glenn Morris  <rgm@gnu.org>

	Remove some useless-use-of eval.

	* lisp/gnus/gnus.el (gnus-load-hook): Don't use eval.
	* lisp/gnus/nnrss.el (xml): Simply require it.
	(xml-rpc-method-call): Use declare-function.

2016-01-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix memory leak

	* src/process.c (connect_network_socket): Free previous sockaddr
	before allocating a new one.

2016-01-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Return IP addresses in the correct order

	* src/process.c (Fmake_network_process): Return the IP addresses
	in the same order as getaddrinfo does.
	(set_network_socket_coding_system): Clean up the code slightly.

2016-01-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Add checks for getaddrinfo_a

	* configure.ac: Detect getaddrinfo_a.

2016-01-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Refactor make_network_process

	* src/process.c (set_network_socket_coding_system)
	(connect_network_socket): Refactor out of
	make_network_process to allow calling connect_network_socket
	asynchronously.
	(Fmake_network_process): Do nothing but parsing the parameters
	and name resolution, leaving the connection to
	connect_network_socket.

2016-01-28  Glenn Morris  <rgm@gnu.org>

	* lisp/emacs-lisp/bytecomp.el (byte-compile-nogroup-warn):
	Warn if defcustom has no type.  (Bug#16276)

2016-01-27  Glenn Morris  <rgm@gnu.org>

	* test/lisp/vc/vc-hg-tests.el: Move from test/automated/.

2016-01-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	(rng-c-fix-escaped-newlines): Use subst-char-in-string

	* lisp/nxml/rng-cmpct.el (rng-c-fix-escaped-newlines):
	Use subst-char-in-string.

2016-01-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/textmodes/sgml-mode.el (sgml-forward-sexp): New function

	(sgml-cursor-sensor, sgml-pretty-print, sgml-parse-tag-backward)
	(sgml-calculate-indent): Use it.

2016-01-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/org: Fix some compiler warnings

	* lisp/org/ob-core.el (org-babel-check-confirm-evaluate)
	(org-babel-map-src-blocks): Don't emit warnings if added vars are not used.
	(*this*): Declare as dyn-bound.
	(org-babel-expand-src-block, org-babel-load-in-session)
	(org-babel-switch-to-session-with-code, org-babel-get-rownames):
	Mark unused args.
	(org-babel-combine-header-arg-lists): Remove unused var `args'.
	(org-babel-find-named-block): Remove unused var `msg'.

	* lisp/org/org-src.el (org-inhibit-startup, org-src-fontify-natively):
	Declare as dyn-bound.
	(org-edit-src-code): Remove unused var `lfmt'.
	(org-edit-fixed-width-region): Remove unused var `preserve-indentation'.

2016-01-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/font-lock.el: Use #' to quote function symbols

2016-01-23  Michael Albinus  <michael.albinus@gmx.de>

	Improve user name completion in Tramp

	* lisp/net/tramp.el (tramp-parse-passwd, tramp-parse-etc-group):
	Call also "getent passwd" or "getent group", if possible.
	(tramp-parse-putty): Cache the result.

2016-01-22  Michael Albinus  <michael.albinus@gmx.de>

	* etc/NEWS: Move kqueue entries to Emacs 25.1 sections.

2016-01-20  Glenn Morris  <rgm@gnu.org>

	Remove handling of non-string time-stamp formats, obsolete for 20 years.

	* lisp/time-stamp.el (time-stamp-format): Doc fix.
	(time-stamp-old-format-warn, time-stamp-fconcat): Remove.
	(time-stamp-string): Ignore non-string formats.

2016-01-20  Eli Zaretskii  <eliz@gnu.org>

	Anoter fix for problematic merge from emacs-25

	* src/w32fns.c (globals_of_w32fns): Move initialization of
	resetstkoflw to a non-Cygwin part.

2016-01-20  Michael Albinus  <michael.albinus@gmx.de>

	* test/Makefile.in (mostlyclean): Use ${LOGFILES}.

2016-01-20  Eli Zaretskii  <eliz@gnu.org>

	Fix MS-Windows build broken by a botched merge from emacs-25

	* src/w32.c (w32_crypto_hprov): New static variable.
	(globals_of_w32): Initialize w32_crypto_hprov.
	(w32_init_crypt_random, w32_init_random): New functions.
	Include wincrypt.h.
	* src/w32.h (w32_init_random): Add prototype.

2016-01-19  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Correct a whole bunch of bugs coming with renamed cell relocation.

	* lisp/ses.el (ses-localvars): rename variable
	`ses--renamed-cell-symb-list' into `ses--in-killing-named-cell-list'
	and adjust the comment about it.
	(ses-plist-delq): new defun.
	(ses--ses-buffer-list): new defvar.
	(ses--unbind-cell-name): new defun.
	(ses-relocate-symbol): Do not relocate symbol when it is a named cell.
	(ses-relocate-formula): Undo change of
	2011-12-27T19:30:39Z!vincentb1@users.sourceforge.net that was
	preventing relocation for named cell --- now doing this is delegated
	to function `ses-relocate-symbol'.
	(ses-relocate-range): In docstring, undo change of
	2016-01-03T07:31:52Z!johnw@newartisans.com, `ses-range' must remain
	lower case as it is not a variable.
	(ses-relocate-all): Cell name relocation : 1) check that cell is a
	renamed cell by testing `ses-cell' property to :ses-named, rather than
	comparing name to corresponding standard name. Set rowcol of renamed
	cell into the hashmap --- `ses-cell' property must not be used for
	that as the same name can be used for different locations in different
	SES sheets ; 2) use `local-variable-if-set-p' rather than `boundp' and
	`local-variable-p' to check if cell name is already in use in this
	sheet or needs initialization.
	(ses-relocate-all): Cell value relocation : 1) like for name
	relocation use the `ses-cell' property rather than comparing actual
	name to corresponding standard name. 2) Correct bug introduced in
	2011-12-27T19:30:39Z!vincentb1@users.sourceforge.net, as the test was
	made the other way round than the intention --- ie value relocation
	was disabled for standard cell, not for renamed cell as was the
	intention.
	(ses-relocate-all): Add loop for unbinding deleted renamed cells
	names.
	(ses-killbuffer-hook): new defun.
	(ses-mode): Add the ses--ses-buffer-list maintenance mechanism ---
	kill buffer hook, plus pushing current buffer if new in list.
	(ses-delete-row, ses-delete-column): Collect deleted renamed cells
	into `ses--in-killing-named-cell-list'.
	(ses-rename-cell): Remove update of variable
	`ses--renamed-cell-symb-list', this variable is renamed to
	`ses--in-killing-named-cell-list', and its setting is done in
	functions `ses-delete-row' and , `ses-delete-column' now.
	(ses-rename-cell): Change correction of
	2015-12-30T23:10:37Z!vincentb1@users.sourceforge.net concerning
	computation of the range over which `cursor-intangible' property was
	to be updated. This correction was ok for non spilling cells, but not
	for cells spilling over following blank cells. Simply use
	`next-single-property-change' rather than computing the end column
	from column widths.

2016-01-18  John Wiegley  <johnw@newartisans.com>

	-

2016-01-18  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	3ae7934 ; * etc/NEWS: Mark entries that don't need further treatment.
	6165c36 * lisp/files.el (dir-locals--all-files): Respect absolute file-names
	2ffdf15 * lisp/help-fns.el (describe-variable): Fix a left-over parenthesis
	71ecd62 * lisp/dired-x.el (dired-omit-here-always): Use add-dir-local-variable
	f0b82b3 * lisp/files.el (dir-locals--all-files): Use completion instead of wildcards
	86e4513 Fix incompatbilities with MS-Windows 2000 and older
	4e96521 Mention in PROBLEMS an issue with MS-Windows NT4
	15c23aa Ensure 8-byte aligned memory allocation on MS-Windows 9X
	39afa42 Fix tests for active region in hideif.el
	05df666 Fix interactive specs in some hideif.el commands

2016-01-18  John Wiegley  <johnw@newartisans.com>

	-

2016-01-18  Paul Eggert  <eggert@cs.ucla.edu>

	Avoid stdio in SIGINT handler

	* admin/merge-gnulib (GNULIB_MODULES): Add ignore-value.
	* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
	* lib/ignore-value.h: New file, from gnulib.
	* src/keyboard.c: Include it.
	(write_stdout, read_stdin): New functions.
	(handle_interrupt): Use them instead of printf and getchar,
	and avoid fflush when handling signals.

2016-01-18  Jens Lechtenboerger  <jens.lechtenboerger@fsfe.org>

	Refactor mml-smime.el, mml1991.el, mml2015.el

	(Maybe this is the last merge from Gnus git to Emacs git)

	Cf. discussion on ding mailing list, messages in
	<http://thread.gmane.org/gmane.emacs.gnus.general/86228>.
	Common code from the three files mml-smime.el, mml1991.el, and
	mml2015.el is moved to mml-sec.el.  Auxiliary functions are added
	to gnus-util.el.

	The code is supported by test cases with necessary test keys.

	Documentation in message.texi is updated.

	* doc/misc/message.texi (Security, Using S/MIME):
	Update for refactoring mml-smime.el, mml1991.el, mml2015.el.
	(Using OpenPGP): Rename from "Using PGP/MIME"; update contents.
	(Passphrase caching, Encrypt-to-self, Bcc Warning): New sections.

	* lisp/gnus/gnus-util.el (gnus-test-list, gnus-subsetp, gnus-setdiff):
	New functions.

	* lisp/gnus/mml-sec.el: Require gnus-util and epg.
	(epa--select-keys): Autoload.
	(mml-signencrypt-style-alist, mml-secure-cache-passphrase): Doc fix.
	(mml-secure-openpgp-signers): New user option;
	make mml1991-signers and mml2015-signers obsolete aliases to it.
	(mml-secure-smime-signers): New user option;
	make mml-smime-signers an obsolete alias to it.
	(mml-secure-openpgp-encrypt-to-self): New user option;
	make mml1991-encrypt-to-self and mml2015-encrypt-to-self obsolete
	aliases to it.
	(mml-secure-smime-encrypt-to-self): New user option;
	make mml-smime-encrypt-to-self an obsolete alias to it.
	(mml-secure-openpgp-sign-with-sender): New user option;
	make mml2015-sign-with-sender an obsolete alias to it.
	(mml-secure-smime-sign-with-sender): New user option;
	make mml-smime-sign-with-sender an obsolete alias to it.
	(mml-secure-openpgp-always-trust): New user option;
	make mml2015-always-trust an obsolete alias to it.
	(mml-secure-fail-when-key-problem, mml-secure-key-preferences):
	New user options.
	(mml-secure-cust-usage-lookup, mml-secure-cust-fpr-lookup)
	(mml-secure-cust-record-keys, mml-secure-cust-remove-keys)
	(mml-secure-add-secret-key-id, mml-secure-clear-secret-key-id-list)
	(mml-secure-cache-passphrase-p, mml-secure-cache-expiry-interval)
	(mml-secure-passphrase-callback, mml-secure-check-user-id)
	(mml-secure-secret-key-exists-p, mml-secure-check-sub-key)
	(mml-secure-find-usable-keys, mml-secure-select-preferred-keys)
	(mml-secure-fingerprint, mml-secure-filter-keys)
	(mml-secure-normalize-cust-name, mml-secure-select-keys)
	(mml-secure-select-keys-1, mml-secure-signer-names, mml-secure-signers)
	(mml-secure-self-recipients, mml-secure-recipients)
	(mml-secure-epg-encrypt, mml-secure-epg-sign): New functions.

	* lisp/gnus/mml-smime.el: Require epg;
	refactor declaration and autoloading of epg functions.
	(mml-smime-use): Doc fix.
	(mml-smime-cache-passphrase, mml-smime-passphrase-cache-expiry):
	Obsolete.
	(mml-smime-get-dns-cert, mml-smime-get-ldap-cert):
	Use format instead of gnus-format-message.
	(mml-smime-epg-secret-key-id-list): Remove variable.
	(mml-smime-epg-passphrase-callback, mml-smime-epg-find-usable-key)
	(mml-smime-epg-find-usable-secret-key): Remove functions.
	(mml-smime-epg-sign, mml-smime-epg-encrypt): Refactor.

	* lisp/gnus/mml1991.el (mml1991-cache-passphrase)
	(mml1991-passphrase-cache-expiry): Obsolete.
	(mml1991-epg-secret-key-id-list): Remove variable.
	(mml1991-epg-passphrase-callback, mml1991-epg-find-usable-key)
	(mml1991-epg-find-usable-secret-key): Remove functions.
	(mml1991-epg-sign, mml1991-epg-encrypt): Refactor.

	* lisp/gnus/mml2015.el (mml2015-cache-passphrase)
	(mml2015-passphrase-cache-expiry): Obsolete.
	(mml2015-epg-secret-key-id-list): Remove variable.
	(mml2015-epg-passphrase-callback, mml2015-epg-check-user-id)
	(mml2015-epg-check-sub-key, mml2015-epg-find-usable-key)
	(mml2015-epg-find-usable-secret-key): Remove functions.
	(mml2015-epg-decrypt, mml2015-epg-clear-decrypt, mml2015-epg-sign)
	(mml2015-epg-encrypt): Refactor.

2016-01-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from gnulib

	This mostly just updates copyright dates of gnulib files.
	It also updates to the latest version of texinfo.tex.

2016-01-18  YAMAMOTO Mitsuharu  <mituharu@math.s.chiba-u.ac.jp>

	Move variables to inner loop, preparing for Mac port merge

	* src/keyboard.c (command_loop_1): Move variables `cmd',
	`keybuf', and `i' to inner loop.

2016-01-17  Bill Wohler  <wohler@newt.com>

	* lisp/mh-e/mh-e.el (mh-version): Add +git to version.

2016-01-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/syntax.el (syntax-ppss-table): New var

	(syntax-ppss):
	* lisp/font-lock.el (font-lock-fontify-syntactically-region): Use it.

2016-01-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	lisp/nxml: Use syntax-tables for comments

	* lisp/nxml/nxml-mode.el (nxml-set-face): Prepend.
	(nxml-mode): Set syntax-ppss-table.
	Use sgml-syntax-propertize-function for syntax-propertize-function.
	Let font-lock highlight strings and comments.
	(nxml-degrade): Don't touch "nxml-inside" property any more.
	(nxml-after-change, nxml-after-change1): Remove functions.
	(comment): Don't set fontify rule any more.
	(nxml-fontify-attribute): Don't highlight the value any more.
	(nxml-namespace-attribute-value-delimiter, nxml-namespace-attribute-value)
	(nxml-comment-delimiter, nxml-comment-content): Remove faces.

	* lisp/nxml/nxml-rap.el (nxml-scan-end): Remove.
	(nxml-get-inside, nxml-inside-start, nxml-inside-end): Use syntax-ppss.
	(nxml-clear-inside, nxml-set-inside): Remove.
	(nxml-scan-after-change): Remove function.
	(nxml-scan-prolog, nxml-tokenize-forward): Simplify.
	(nxml-ensure-scan-up-to-date): Use syntax-propertize.
	(nxml-move-outside-backwards):
	* lisp/nxml/nxml-outln.el (nxml-section-tag-backward): Adjust to new
	nxml-inside-start behavior.

	* lisp/nxml/nxml-util.el (nxml-debug-set-inside)
	(nxml-debug-clear-inside): Remove macros.

	* lisp/nxml/xmltok.el (xmltok-forward-special): Remove function.
	(xmltok-scan-after-comment-open): Simplify.

2016-01-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/elisp-mode.el
	(elisp--font-lock-flush-elisp-buffers): Fix comment

2016-01-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/nxml: Use standard completion; it also works for company-mode

	* lisp/nxml/nxml-mode.el (nxml-complete): Obsolete.
	(nxml-completion-at-point-function): Remove.
	(nxml-mode): Don't set completion-at-point-functions.
	* lisp/nxml/rng-nxml.el (rng-nxml-mode-init): Set it here instead.
	(rng-completion-at-point): Rename from rng-complete and mark it
	non-interactive.  It is now to be used as completion-at-point-function.
	(rng-complete-tag, rng-complete-end-tag, rng-complete-attribute-name)
	(rng-complete-attribute-value): Don't perform completion, but return
	completion data instead.
	(rng-complete-qname-function, rng-generate-qname-list): Add a few
	arguments, previously passed via dynamic coping.
	(rng-strings-to-completion-table): Rename from
	rng-strings-to-completion-alist.  Don't return an alist.  Don't both
	sorting and uniquifying.

	* lisp/nxml/rng-util.el (rng-complete-before-point): Delete function.
	(rng-completion-exact-p, rng-quote-string): Delete functions.

	* lisp/nxml/rng-valid.el (rng-recover-start-tag-open)
	(rng-missing-attributes-message, rng-missing-element-message)
	(rng-mark-missing-end-tags): Use explicit ".." in formats rather than
	calling rng-quote-string everywhere.

2016-01-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use sgml-electric-tag-pair-mode also in nxml-mode

	* lisp/nxml/rng-nxml.el: Require sgml-mode.
	(rng-nxml-easy-menu): Add entry for sgml-electric-tag-pair-mode.
	(rng-complete-qname-function): Use complete-with-action.

	* lisp/textmodes/sgml-mode.el (sgml-electric-tag-pair-before-change-function):
	Let-bind forward-sexp-function, since nxml-mode binds it to
	something incompatible.

	* lisp/nxml/nxml-mode.el: Use setq-local and defvar-local.

2016-01-15  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/nxml/xmltok.el: Mark the "sole --" rather than the comment
	opener.

	* lisp/nxml/xmltok.el (xmltok-scan-after-comment-open): Put the error
	marker on the "sole --" rather than on the comment opener.

2016-01-15  Sam Steingold  <sds@gnu.org>

	replace `tramp-compat-split-string' (removed) with `split-string'

	(python-shell-tramp-refresh-process-environment)
	(python-shell-calculate-pythonpath): use `split-string'
	instead of defunct `tramp-compat-split-string'

2016-01-15  Stefan Monnier  <monnier@iro.umontreal.ca>

	Update nXML to use Emacs's Unicode support, and lexical-binding

	* etc/nxml/*.el: Remove obsolete char-name files.
	* lisp/nxml/xsd-regexp.el (xsdre-range-list-difference): Remove unused
	var `next'.
	* lisp/nxml/rng-nxml.el (rng-set-state-after): Don't assume point-min==1.
	* lisp/nxml/rng-match.el (rng-update-match-state): Simplify.
	* lisp/nxml/nxml-outln.el (nxml-outline-state-transform-exceptions)
	(nxml-target-section-pos, nxml-depth-in-target-section)
	(nxml-outline-state-transform-alist)
	(nxml-outline-display-section-tag-function): Move decl before first use.
	* lisp/nxml/nxml-mode.el (nxml-char-name-ignore-case)
	(nxml-char-name-alist, nxml-char-name-table)
	(nxml-autoload-char-name-set-list, nxml-named-char-history): Remove vars.
	(nxml-enable-char-name-set, nxml-disable-char-name-set)
	(nxml-char-name-set-enabled-p, nxml-autoload-char-name-set)
	(nxml-define-char-name-set, nxml-get-char-name): Remove functions.
	(nxml-insert-named-char): Use read-char-by-name instead.
	(nxml-char-ref-display-extra): Use get-char-code-property.
	* lisp/nxml/nxml-maint.el (nxml-create-unicode-char-name-sets):
	Remove function.
	* lisp/nxml/nxml-glyph.el, lisp/nxml/nxml-uchnm.el: Remove files.

2016-01-15  Michael Albinus  <michael.albinus@gmx.de>

	Add "sg" method to Tramp

	* doc/misc/tramp.texi (Inline methods): Add "sg" method.
	(Customizing Completion): Add function `tramp-parse-etc-group'.

	* lisp/net/tramp-sh.el (tramp-methods) <sg>: Add.  (Bug#22329)
	(tramp-completion-function-alist-sg): New defconst.
	(top): Completion function for "sg" is
	`tramp-completion-function-alist-sg'.

	* lisp/net/tramp.el (tramp-completion-function-alist): Adapt docstring.
	(tramp-parse-etc-group, tramp-parse-etc-group-group): New defuns.

2016-01-14  Michael Albinus  <michael.albinus@gmx.de>

	Remove XEmacs compatibility in Tramp

	* doc/misc/tramp.texi: Replace flags by their hard coded name.
	Remove unused flags and the enclosed alternative text for XEmacs.

	* doc/misc/trampver.texi: Use "Tramp" CamelCase.  Rename "emacs"
	and "xemacs" flags to "unified" and "separate".  Remove flags
	"emacsgw", "emacsname", "emacsdir", "ftppackagename",
	"emacsothername", "emacsotherdir" and "emacsotherfilename".
	(trampver):
	* lisp/net/trampver.el (tramp-version): Set to "2.3.0-pre".

	* lisp/net/tramp.el (bkup-backup-directory-info)
	(directory-sep-char, ls-lisp-use-insert-directory-program)
	(outline-regexp, tramp-backup-directory-alist)
	(tramp-default-method, tramp-shell-prompt-pattern, tramp-syntax)
	(tramp-file-name-regexp-unified)
	(tramp-file-name-regexp-separate)
	(tramp-completion-file-name-regexp-unified)
	(tramp-completion-file-name-regexp-separate, tramp-chunksize)
	(tramp-get-method-parameter, tramp-find-method, tramp-find-user)
	(tramp-debug-message, tramp-progress-reporter-update)
	(with-tramp-progress-reporter)
	(tramp-rfn-eshadow-setup-minibuffer)
	(rfn-eshadow-setup-minibuffer-hook, tramp-unload-hook)
	(tramp-rfn-eshadow-update-overlay)
	(rfn-eshadow-update-overlay-hook, tramp-default-file-modes)
	(tramp-file-name-for-operation)
	(tramp-completion-file-name-handler)
	(tramp-autoload-file-name-handler, tramp-completion-mode-p)
	(tramp-handle-directory-files)
	(tramp-handle-directory-files-and-attributes)
	(tramp-handle-dired-uncache, tramp-handle-find-backup-file-name)
	(tramp-handle-insert-file-contents, tramp-handle-load)
	(tramp-handle-shell-command)
	(tramp-handle-verify-visited-file-modtime)
	(tramp-handle-file-notify-valid-p, tramp-accept-process-output)
	(tramp-check-for-regexp, tramp-wait-for-regexp)
	(tramp-send-string, tramp-mode-string-to-int)
	(tramp-get-local-gid, tramp-check-cached-permissions)
	(tramp-get-remote-tmpdir, tramp-make-tramp-temp-file)
	(auto-save-file-name-transforms)
	(tramp-handle-make-auto-save-file-name, tramp-read-passwd)
	(tramp-clear-passwd, tramp-time-diff):
	* lisp/net/tramp-adb.el (directory-listing-before-filename-regexp)
	(directory-sep-char, tramp-adb-file-name-handler-alist)
	(tramp-adb-parse-device-names)
	(tramp-adb-handle-expand-file-name)
	(tramp-adb-handle-file-truename, tramp-adb--gnu-switches-to-ash)
	(tramp-adb-handle-file-local-copy)
	(tramp-adb-handle-write-region, tramp-adb-handle-set-file-modes)
	(tramp-adb-handle-rename-file, tramp-adb-handle-process-file)
	(tramp-adb-handle-shell-command)
	(tramp-adb-handle-start-file-process, tramp-adb-get-device)
	(tramp-adb-maybe-open-connection):
	* lisp/net/tramp-cache.el (tramp-persistency-file-name)
	(tramp-cache-print):
	* lisp/net/tramp-cmds.el (tramp-cleanup-all-connections)
	(tramp-bug, tramp-reporter-dump-variable)
	(tramp-load-report-modules, tramp-append-tramp-buffers):
	* lisp/net/tramp-compat.el (tramp-compat-funcall)
	(tramp-advice-file-expand-wildcards)
	(tramp-compat-temporary-file-directory)
	(tramp-compat-make-temp-file, tramp-compat-copy-file)
	(tramp-compat-delete-directory, )
	(tramp-compat-process-running-p):
	* lisp/net/tramp-ftp.el (tramp-methods) <ftp>:
	(tramp-default-method-alist, tramp-foreign-file-name-handler-alist):
	* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist)
	(tramp-gvfs-do-copy-or-rename-file, tramp-gvfs-handle-copy-file)
	(tramp-gvfs-handle-file-local-copy)
	(tramp-gvfs-handle-file-name-all-completions)
	(tramp-gvfs-handle-file-notify-add-watch)
	(tramp-gvfs-monitor-file-process-filter)
	(tramp-gvfs-handle-file-readable-p)
	(tramp-gvfs-handle-rename-file, tramp-gvfs-handle-write-region)
	(tramp-gvfs-file-name, tramp-gvfs-handler-askquestion)
	(tramp-gvfs-maybe-open-connection)
	(tramp-gvfs-parse-device-names):
	* lisp/net/tramp-gw.el (tramp-gw-aux-proc-sentinel)
	(tramp-gw-open-connection, tramp-gw-open-network-stream):
	* lisp/net/tramp-sh.el (directory-sep-char)
	(tramp-sh-file-name-handler-alist)
	(tramp-sh-handle-file-truename)
	(tramp-sh-handle-set-visited-file-modtime)
	(tramp-sh-handle-verify-visited-file-modtime)
	(tramp-sh-handle-set-file-modes, tramp-sh-handle-set-file-times)
	(tramp-sh-handle-file-acl)
	(tramp-sh-handle-file-name-all-completions)
	(tramp-sh-handle-copy-file, tramp-sh-handle-rename-file)
	(tramp-do-copy-or-rename-file-directly)
	(tramp-do-copy-or-rename-file-out-of-band)
	(dired-compress-file-suffixes, dired-remove-file)
	(tramp-sh-handle-dired-compress-file)
	(tramp-sh-handle-insert-directory)
	(tramp-sh-handle-expand-file-name)
	(tramp-sh-handle-start-file-process)
	(tramp-sh-handle-process-file, tramp-sh-handle-file-local-copy)
	(tramp-sh-handle-write-region, tramp-sh-handle-vc-registered)
	(tramp-sh-handle-file-notify-add-watch)
	(tramp-sh-gvfs-monitor-dir-process-filter)
	(tramp-sh-inotifywait-process-filter, tramp-maybe-send-script)
	(tramp-find-executable)
	(tramp-open-connection-setup-interactive-shell)
	(tramp-find-inline-encoding, tramp-compute-multi-hops)
	(tramp-maybe-open-connection, tramp-convert-file-attributes)
	(tramp-get-remote-path, tramp-get-remote-touch):
	* lisp/net/tramp-smb.el (tramp-smb-file-name-handler-alist)
	(tramp-smb-handle-copy-directory, tramp-smb-handle-copy-file)
	(tramp-smb-handle-delete-directory)
	(tramp-smb-handle-directory-files, tramp-smb-handle-file-acl)
	(tramp-smb-handle-make-directory-internal)
	(tramp-smb-handle-process-file, tramp-smb-handle-rename-file)
	(tramp-smb-handle-set-file-acl, tramp-smb-handle-set-file-modes)
	(tramp-smb-handle-write-region, tramp-smb-get-file-entries)
	(tramp-smb-get-cifs-capabilities)
	(tramp-smb-maybe-open-connection):
	* lisp/net/trampver.el (tramp-repository-get-version):
	Remove XEmacs compat code.

	* lisp/net/tramp-cmds.el (mml-mode, mml-insert-empty-tag)
	(reporter-dump-variable): Declare functions.

	* lisp/net/tramp.el (tramp-bkup-backup-directory-info)
	(tramp-advice-minibuffer-electric-separator)
	(tramp-advice-minibuffer-electric-tilde)
	(tramp-handle-unhandled-file-name-directory):
	* lisp/net/tramp-compat.el (tramp-compat-with-temp-message)
	(tramp-compat-font-lock-add-keywords)
	(tramp-compat-load, tramp-compat-number-sequence)
	(tramp-compat-split-string, tramp-compat-delete-dups):
	* lisp/net/tramp-sh.el (tramp-sh-handle-insert-file-contents-literally):
	Remove.

	* lisp/net/tramp-sh.el (tramp-methods) <psftp>: This does not work
	recursively.

2016-01-14  K. Handa  <handa@gnu.org>

	fix previous change of src/ftfont.c (ftfont_shape_by_flt)

	* src/ftfont.c (ftfont_shape_by_flt): Fix previous change.  Access the
	second glyph only when there are enough glyphs.

2016-01-13  Glenn Morris  <rgm@gnu.org>

	* src/buffer.c (Fset_buffer_major_mode): Allow default major-mode,

	or its hook, to move point.  (Bug#22348)

2016-01-12  Michael Albinus  <michael.albinus@gmx.de>

	Merge missing commit from emacs-25 branch

	* test/Makefile.in (SELECTOR_DEFAULT, SELECTOR_EXPENSIVE, SELECTOR):
	New variables.
	(check-expensive, check-doit): New targets.

	* Makefile.in (check-expensive): New target.

	* test/lisp/autorevert-tests.el
	(auto-revert-test01-auto-revert-several-files):
	* test/lisp/filenotify-tests.el (file-notify--deftest-remote)
	(file-notify-test06-many-events):
	* test/lisp/net/tramp-tests.el (tramp-test26-process-file)
	(tramp-test27-start-file-process, tramp-test28-shell-command)
	(tramp-test29-vc-registered)
	(tramp-test31-special-characters-with-stat)
	(tramp-test31-special-characters-with-perl)
	(tramp-test31-special-characters-with-ls)
	(tramp-test32-utf8-with-stat, tramp-test32-utf8-with-perl)
	(tramp-test32-utf8-with-ls, tramp-test33-asynchronous-requests)
	(tramp-test35-unload): Tag the tests as :expensive-test.

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	1f6898d test/automated/vc-hg.el: Support out-of-tree build
	3adb56e Minor change in tramp-tests.el
	2b535ba ; * etc/NEWS: Update the js.el entry.
	76b518c * etc/HELLO: Add Armenian and Mongolian greetings.
	b51f1ef Java Mode: Fontify identifiers in the presence of annotations.
	36b9539 Avoid an infloop when we run out of memory
	2006752 Avoid unnecessary failures of auto-saving after fatal error
	eef6784 Simplify HAVE_MODULES use in mark_maybe_pointer
	552694a Revert attempt to use 'noexcept' in typedef
	6ad0d39 Update documentation of 'indirect-function'
	c6a5314 ; * etc/NEWS: Move entry of 'inhibit-point-motion-hooks'.
	303141a Update documentation for obsoleting 'syntax-begin-function'
	4e6f61c ; * etc/NEWS: Mark documented and not-to-be-documented entries.
	e667bbb Document new features if Eshell
	9c4e4e0 ; * etc/NEWS: Update EUDC entries.
	1089dc9 Handle too long commands in Tramp
	684eb58 * .gitattributes: *.cur and *.pif are binary files too.
	d2c7fda * src/alloc.c (mark_maybe_pointer): HAVE_MODULES may be undefined
	bd3f53d * sh-script.el (sh-smie-sh-rules): Improve indentation inside $(...)
	09b2b8a * src/alloc.c (mark_maybe_pointer): Also check wide-int's emacs_value
	cca0f93 ; Account for spaces before the filename
	c71e1e8 Use short date for 'hg annotate', and output the author
	f50027b Spelling fix
	c7dff67 ; * etc/NEWS: Fix the Xref entries that got separated.
	cc140bc Document user-level functions in project.el
	f8208b6 Document the user-level features of the Xref package
	b131fb8 * loading.texi: Add `define-type' entry for load-history
	db3c2a8 Improve doc strings and prompts in xref.el
	f6117ef Allow the use of `font-lock-extend-region-multiline' in CC Mode.
	90fd798 Fix coding system for Tramp on OS X.
	e985a0e ; * etc/NEWS: Mark the 'check-expensive' entry not to be documented.
	9dfcbf0 Update 'load-history' docs
	207e191 Fix (error ...) error
	457738f Correctly analyze brace arguments in templated C++ function declarations.
	d57724a * lisp/cedet/mode-local.el (describe-function-orig-buffer): Declare.
	2a9532d * lisp/ffap.el (ffap-latex-mode): Avoid free variable.
	1a6b084 * lisp/play/dunnet.el (dun-fix-screen): Avoid `end-of-buffer`.
	8be046f Respect fontification region calculated by major mode.  Fixes bug #22316.
	4b37cba Improve documentation of Delete Selection mode
	a034dd3 Fix two project-find-file issues
	30abf29 Clarify doc string of 'dired-current-directory'
	e990bb2 Use the face of preceding text for displaying the ellipsis
	5810ac3 Suppress Chinese file name test for OSX in tramp-tests.el
	eeb710a ; * lisp/startup.el: Sentences end with two spaces.
	428b3de * admin/admin.el (set-version): Also handle the NEWS file.
	648de81 ; Add NEWS entry for project.el
	671862f apropos-library: Skip obvious duplicates; don't error on generics
	51668a5 ; Grammar fix
	ed41d11 Add project-find-file and project-or-external-find-file
	056da45 ; Improve commentary in 'setup_for_ellipsis'
	269d008 ; Improve docstring for `inhibit-startup-echo-area-message'

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	ce4a052 Add defvar-local to lisp-imenu-generic-expression
	a0121bc Revert commit b1e3d14845517bfa9fa5d6d3840f3ab3160306fd
	76fe2d5 * lisp/emacs-lisp/autoload.el (autoload-find-destination): Doc fix.
	1ae088f * lisp/emacs-lisp/autoload.el (autoload-find-destination):
	b6b47af Properly encode/decode base64Binary data in SOAP
	c632466 Obey coding-system-for-write when writing stdout/stderr in batch
	2f32cb5 * doc/misc/efaq.texi (Packages that do not come with Emacs):
	        Update the URI of MELPA and marmalade-repo.
	        Reported by CHENG Goa <chenggao@royau.me> in
	        https://lists.gnu.org/r/emacs-devel/2016-01/msg00390.html.
	d2937aa * lisp/progmodes/opascal.el (opascal-mode-syntax-table):
	5330c25 * lisp/progmodes/xscheme.el (xscheme-prompt-for-expression-exit):
	7380990 Remove function wrongly on AWK Mode value of context
	fontification hook.
	d400753 * src/buffer.c: Stick with ASCII in doc string.
	221240c Reword transient-mark-mode doc string
	977d3ea Update doc string of 'selective-display'
	229c3fa Make C++ buffers writeable when writing their initial text
	        properties.
	f5c762c Additional changes for "make check-expensive"
	1729cf3 ; * admin/MAINTAINERS: Remove myself.
	33219d3 Apply text properties for <, > in new after-change function
	        (C++ Java Modes).

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	9fb185a shr-tag-video bug fix
	6300655 Minor fixes in tramp-tests.el
	50575b1 Ensure redisplay when 'truncate-lines' is set
	0d9e80d Fix a doc string of 'transient-mark-mode'
	0000ae5 MS-Windows followup to latest gnulib update
	4bc5e02 Spelling fix
	f1093f7 Do secure signed Bcc handling

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	861022f * doc/misc/texinfo.tex: Revert unwanted copyright change.
	46e47a5 ; * etc/refcards/ru-refcard.tex (cyear): Update via M-x set-copyright.
	71ea138 * lisp/align.el (align): Simplify a lambda
	5618a50 * lisp/align.el (align): Fix arg order in call to `align-region'
	1f680db Fix compilation next-error in buffers with selective-display
	d20a948 * nsm.el (nsm-check-protocol): Fix typo in the message.
	1da116f Add SHA1 warnings for high network security settings
	e48bacd ; * etc/NEWS: Typo fix.

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	43662a2 ; Clarify that xref is still experimental
	0a6e6ca ; * admin/release-process: Remove some obsolete records.
	c2e9e3d * lisp/progmodes/fortran.el (fortran-make-syntax-propertize-function):
	8637f3d (semantic-symref-derive-find-filepatterns): Return a list
	0a7ad07 ; Re-arrange xref-related entries in NEWS.
	fe903ef Fix xref-find-references on MS-Windows
	55a28d8 ; Fixed visual bell artifact problem on NextStep.
	d064034 Document new features of tildify-mode
	964bea7 Document new features of Whitespace mode
	cd68f47 Improve documentation of new Hide-IfDef features
	723b8bf Fix regression in font-locking cl-assert and cl-check-type

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	ef33bc7 Spelling and grammar fixes
	9c3dbab Fix copyright years by hand
	0e96320 Update copyright year to 2016

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	9ee6ecb lisp/emacs-lisp/chart.el (chart-new-buffer): Move to silence byte compiler.
	526d80c Port chart.el methods to cl-generic.
	410bb69 Add nt/INSTALL.W64 build instructions
	8f5b524 Add new input method 'programmer-dvorak'
	6d11f6e Allow to invoke original M-TAB binding in 'flyspell-prog-mode'
	bb83bb1 Fix EWW rendering of long RTL lines
	b1a8509 fix  bug#21054
	ce5ad12 Clean up cairo printing code

2016-01-11  John Wiegley  <johnw@newartisans.com>

	Merge from origin/emacs-25

	6ee327d Add handle_user_signal_hook
	47580e0 Avoid writing to purespace
	0588be7 Remove unused variable
	89e7483 * configure.ac: Find libxml2 headers in Xcode SDK dir on Darwin.
	3b95e9c Use posix_openpt instead of openpty on Darwin
	86312ff Document support for ':documentation' in Lisp mode
	c930e75b Document new features of TeX mode
	7c83d84 Clarify docs of hscroll in RTL text
	4c8f8db Fix rendering of HTML pages that use character composition
	a8d37ca Avoid some compiler warnings in w32.c
	ce106f3de Undo ill-advised change
	be0bba4 Unbreak completion in python-mode buffers

2016-01-08  Andrew Hyatt  <ahyatt@gmail.com>

	Adding example replies to bug-triage.

	* admin/notes/bug-triage: Added example replies. Also, as requested,
	  making the process notes into more of a checklist.

2016-01-08  Andrew Hyatt  <ahyatt@gmail.com>

	Rename the notes/admin/triage file to bug-triage.

	* CONTRIBUTE: Change reference to the triage file name.
	* admin/notes/triage: Rename file to admin/notes/bug-triage.

2016-01-08  K. Handa  <handa@gnu.org>

	Fix outdated comments.

2016-01-06  Glenn Morris  <rgm@gnu.org>

	Allow creation of loaddefs files without timestamps.

	* lisp/emacs-lisp/autoload.el (autoload-timestamps): New variable.
	(autoload-generate-file-autoloads, update-directory-autoloads):
	If autoload-timestamps is nil, write "t" instead of file timestamp.
	(autoload-find-destination, update-directory-autoloads):
	If timestamp is "t", use the modtime of the output file instead.

2016-01-06  Glenn Morris  <rgm@gnu.org>

	Doc tweaks.

	* lisp/calendar/cal-hebrew.el (diary-hebrew-list-entries):
	* lisp/calendar/cal-iso.el (calendar-iso-to-absolute)
	(calendar-iso-from-absolute):
	* lisp/calendar/cal-tex.el (cal-tex-comment):
	* lisp/calendar/solar.el (calendar-time-display-form): Doc tweaks.

2016-01-06  Glenn Morris  <rgm@gnu.org>

	Build tweaks related to tags files.

	* lib-src/Makefile.in (tagsfiles): New variable.
	(TAGS): Also depend on the source files.  Use our own etags program.
	* lisp/Makefile.in (ETAGS): Add EXEEXT.
	(lisptagsfiles1, lisptagsfiles2, lisptagsfiles3, lisptagsfiles4):
	Remove.
	(tagsfiles): New, replacing lisptagsfiles1 etc.
	Remove irrelevant source files here rather than in the TAGS rule.
	(${ETAGS}): New rule.
	(TAGS): Also depend on the etags executable.
	* lwlib/Makefile.in (EXEEXT): New, set by configure.
	(ETAGS): Add EXEEXT.
	(${ETAGS}): New rule.
	(ctagsfiles): Use "wildcard".
	(TAGS): Also depend on the etags executable.
	* nt/Makefile.in (ETAGS, tagsfiles): New variables.
	(${ETAGS}): New rule.
	(TAGS): Fix dependencies.
	* oldXMenu/Makefile.in (EXEEXT): New, set by configure.
	(ETAGS): New variable, replacing $TAGS.  Use our own etags program.
	Remove "-t" argument.
	(${ETAGS}): New rule.
	(tagsfiles): New variable.
	(TAGS): New rule, with proper dependencies.
	* src/Makefile.in (ETAGS): Add EXEEXT.  Add a build rule.
	(ctagsfiles1, ctagsfiles2): Use "wildcard".
	(ctagsfiles3): Remove.
	(TAGS): Depend on etags.
	(../lisp/TAGS, $(lwlibdir)/TAGS): Let the rules in the relevant
	directories decide if updates are needed.

2016-01-06  Glenn Morris  <rgm@gnu.org>

	* lisp/Makefile.in (CAL_SRC): Skip calendar.el.

2016-01-06  Glenn Morris  <rgm@gnu.org>

	* test/lisp/emacs-lisp/package-tests.el

	(package-test-macro-compilation): Fixup branch merge.

2016-01-05  Eli Zaretskii  <eliz@gnu.org>

	Fix fallout from merging emacs-25 branch in test/

	* .gitignore: Update for the new place of biditest.txt.
	* test/automated/: Directory removed.  All files moved to their
	proper places.
	* test/etags/: Directory removed.  All files moved to their proper
	places.
	* test/automated/url-parse-tests.el: File removed; it was an exact
	copy of the same file in test/lisp/url/.
	* test/automated/url-expand-tests.el: Moved to test/lisp/url/.

2016-01-04  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes

2016-01-04  Daniel Colascione  <dancol@dancol.org>

	Let users disable unsafe signal handling code

	* src/keyboard.c (syms_of_keyboard): New user variables
	`attempt-stack-overflow-recovery' and
	`attempt-orderly-shutdown-on-fatal-signal'.
	* src/sysdep.c (stack_overflow): Check
	`attempt-stack-overflow-recovery'.
	* src/emacs.c (terminate_due_to_signal): Check
	`attempt-orderly-shutdown-on-fatal-signal'.

2016-01-03  Michael Albinus  <michael.albinus@gmx.de>

	* configure.ac: Add error message for gfile on Nextstep.

2016-01-02  John Wiegley  <johnw@newartisans.com>

	Merge branch 'emacs-25-merge'

2016-01-02  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Align textually on fix done for emacs-25 branch for bug#21054

	* lisp/ses.el (ses-check-curcell): Suppress ``temporary fix'' comment,
	and useless `(if t ...)' in order to align textually on fix done for
	emacs-25 branch for bug#21054.

2016-01-01  K. Handa  <handa@gnu.org>

	support rendering of wider range of combinging characters by ftfont backend

	* lisp/language/hebrew.el (hebrew-shape-gstring): If the font backend
	supports rendering of combining characters, call
	font-shape-gstring.

	* src/font.c (Ffont_get): Handle `combining-capability' property.
	(syms_of_font): New symbol ":combining-capability'.

	* src/font.h (struct font_driver): New member combining_capability.

	* src/ftfont.c: Include "category.h".
	(ftfont_driver): Initialize combining_capability to
	ftfont_combining_capability.
	(ftfont_shape_by_flt): If OTF is null, try to find a suitable
	FLT in advance.
	(ftfont_combining_capability): New function.

2016-01-01  Andrew Hyatt  <ahyatt@gmail.com>

	Add notes on bug triage procedure

	* CONTRIBUTE: In section on the issue tracker, point to new triage file.
	* admin/notes/triage: New file explaining triage procedure.

2015-12-30  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Correct ses-rename-cell cursor-intangible text prop updating.

	There were two problems:

	- First ses-rename-cell has to work when called non interactively
	  (with non-nil CELL argument), so in this case the start pos of
	  put-text-property cannot be plainly (point), you need a
	  ses-goto-print call before

	- Second, the range itself was computed erronously, only the first
	  char was affected instead of the full cell width. This was not
	  noticeable prior to changes (Deprecate `intangible' and
	  `point-entered' properties) made by Stefan on 2015-04-13T19:51:15Z

	* lisp/ses.el (ses-rename-cell): Correct computation of position range
	to which the 'cursor-intangible text property has to be set to cell
	new name.

2015-12-30  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Don't fake empty cells value by "" when printing with a lambda.

	When using a lambda expression printer function the user should be
	free to format differently a really empty cell, ie. containing nil,
	from a cell containing an empty string "".

	* lisp/ses.el (ses-call-printer): Replace `(or value "")' by just
	`value' in the case of a lambda expression printer function.

	* doc/misc/ses.texi (Printer functions): Add example and
	description about lambda expression printer function handling all
	the possible values, including unexpected ones.

2015-12-30  Vincent Belaïche  <vincentb1@users.sourceforge.net>

	Quick temporary hack to fix curcell refreshing.

	The problem was caused by change: 2015-04-13 Deprecate `intangible'
	and `point-entered' properties. The problem is that this change has
	removed the (setq ses--curcell t) setting in the ses-command-hook
	function.

	* lisp/ses.el (ses-check-curcell): replace `(eq ses--curcell t)' by just `t' as
	a condition to call function `ses-set-curcell'. Comment this as a quick
	temporary hack to make it work, as I don't know yet whether a definite
	correction would be to make the ses-set-curcell at every ses-check-curcell,
	or to revert to the previous approach, ie marking ses--curcell as out-of-date
	at every potentially cursor motion command.

2015-12-30  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Restrictive URL checking tweaks

	* lisp/net/eww.el (eww): Check whether the domain is
	restrictive instead of the string
	(http://македонија.icom.museum is restrictive even if each
	part is from a different script).

2015-12-30  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	New function `puny-highly-restrictive-domain-p'

	* lisp/net/puny.el (puny-highly-restrictive-string-p): Rename.
	(puny-highly-restrictive-domain-p): New function.

2015-12-30  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	eww build fix (require puny)

2015-12-30  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	Transform non-restrictive domains to punycode for display

	* lisp/net/eww.el (eww): Check whether the domain is Highly
	Restrictive in the Unicode IDNA sense.

2015-12-29  John Wiegley  <johnw@newartisans.com>

	Merge emacs-25 into master (using imerge)

2015-12-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Further Unicode restrictive fixups

	* lisp/net/puny.el (puny-highly-restrictive-p): Include the extra
	identifier characters from table 3.

2015-12-29  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a new function to say whether a string is restrictive

	* lisp/net/puny.el (puny-highly-restrictive-p): New function.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Mention the new puny.el library

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	IDNA-related fixes for the URL library

	* lisp/url/url-http.el (url-http-create-request): IDNA-encode
	the Host: header.

	* lisp/url/url-util.el (url-encode-url): Don't hex-encode
	domain names, but leave them as UTF-8, so that they can be
	IDNA-encoded later when contacting the host.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	IDNA-encode all domain names in `open-network-stream'

	* lisp/net/network-stream.el (open-network-stream)
	(network-stream-open-plain, network-stream-open-starttls):
	IDNA-encode all domain names, if needed.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix puny-encoding all-non-ASCII domains

	* lisp/net/puny.el (puny-encode-string): Fix the all-non-ASCII
	encoding case.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	shr link traversal fixup

	* lisp/net/shr.el (shr-next-link): Don't bug out on adjacent links.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Reconnect erc even on server errors

	* lisp/erc/erc-backend.el (erc-server-reconnect-p): Try to
	reconnect even if a server error has occurred (bug#18527).

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Fix punycode short circuit logic

	* lisp/net//puny.el (puny-encode-domain): Fix short-circuit logic.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	IDNA speed up

	* lisp/net/puny.el (puny-encode-domain): Make the common non-IDNA case faster

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Add IDNA domain encode/decode functions

	* lisp/net/puny.el (puny-decode-domain): New function.
	(puny-encode-domain): Ditto.
	(puny-decode-digit): Fix digit decoding error.

2015-12-28  Lars Ingebrigtsen  <larsi@gnus.org>

	Rename idna.el to puny.el

	* lisp/net/puny.el: Renamed from idna.el to avoid name collisions with
	the external idna.el library.

2015-12-27  Katsumi Yamaoka  <yamaoka@jpl.org>

	lisp/gnus/mml-sec.el (mml-secure-bcc-is-safe): Keep old Emacsen compatibility

	* lisp/gnus/mml-sec.el (mml-secure-bcc-is-safe):
	Don't use split-string with 4th arg for old Emacsen compatibility.

2015-12-27  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/net/idna.el (idna-decode-string-internal): Implement
	decoding.

2015-12-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Further IDNA tweaks

	(idna-encode-string): Make idna-encode-string safe for
	non-ASCII use.

2015-12-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Clean up the code slightly

2015-12-27  Lars Ingebrigtsen  <larsi@gnus.org>

	Added basic idna encoding support

	* lisp/net/idna.el: New file.

2015-12-27  Vivek Dasmohapatra  <vivek@etla.org>

	Disconnection fixes for erc

	* lisp/erc/erc-backend.el (erc-server-reconnect-p): Don't
	reconnect if the user has disconnected explicitly (bug#4589).

2015-12-27  Thomas Riccardi  <riccardi.thomas@gmail.com>  (tiny change)

	Further erc asynch fixes

	* lisp/erc/erc-backend.el (erc-process-sentinel-2): Make
	erc-server-connect to return even if the connection is not
	ready.  Then erc-open and erc-server-reconnect do the
	same. (bug#5650).

2015-12-27  Vivek Dasmohapatra  <vivek@etla.org>

	Make erc connect asynchronously

	* lisp/erc/erc-backend.el (erc-server-reconnect): Use it to
	reconnect asynchronously.

	* lisp/erc/erc-backend.el (erc-open-network-stream): New function (bug#5650).

2015-12-27  David Edmondson  <dme@dme.org>

	Proxy error in erc with multiple clients

	* lisp/erc/erc.el (erc-channel-receive-names): Fix errors
	generated when multiple IRC clients talk to a single IRC proxy
	(bug#19034).

2015-12-27  Jens Lechtenboerger  <jens.lechtenboerger@fsfe.org>

	Fix mml-sec build warnings

	* lisp/gnus/mml-sec.el: Fix warnings by adding autoloads
	(bug#18718).

2015-12-27  Lars Ingebrigtsen  <larsi@gnus.org>

	(eww-setup-buffer): Restore left-to-right defaults

	* eww.el (eww-setup-buffer): Restore left-to-right defaults.

2015-12-27  Lars Ingebrigtsen  <larsi@gnus.org>

	* lisp/gnus/mml-sec.el (mml-secure-bcc-is-safe): Fix typo in last check-in.

2015-12-27  Jens Lechtenboerger  <jens.lechtenboerger@fsfe.org>

	Identify unsafe combinations of Bcc and encryption

	* lisp/gnus/gnus-util.el (gnus-subsetp): New function
	* lisp/gnus/mml-sec.el (mml-secure-safe-bcc-list): New variable
	* lisp/gnus/mml-sec.el (mml-secure-bcc-is-safe): New function

2015-12-26  Lars Ingebrigtsen  <larsi@gnus.org>

	* shr.el (shr-descend): Allow using lambdas in external functions.

2015-12-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* admin/gitmerge.el: Tweaks that seemed necessary

	* admin/gitmerge.el (gitmerge-skip-regexp): Remove "sync".
	(gitmerge-maybe-resume): Provide explicit empty commit message.

2015-12-25  Łukasz Stelmach  <stlman@poczta.fm>  (tiny change)

	Use a different port for TLS erc

	* lisp/erc/erc.el (erc-default-port-tls): New variable
	(bug#19497).
	* lisp/erc/erc.el (erc-tls): Use it.

2015-12-25  Alain Schneble  <a.s@realize.ch>

	Make relative URL parsing and resolution consistent with RFC 3986 (bug#22044)

	* test/lisp/url/url-parse-tests.el: Add tests covering url-generic-parse-url.
	* test/lisp/url/url-expand-tests.el: Add tests covering url-expand-file-name.
	* lisp/url/url-parse.el (url-generic-parse-url): Keep empty fragment
	information in URL-struct.
	* lisp/url/url-parse.el (url-path-and-query): Do not artificially turn empty
	path and query into nil path and query, respectively.
	* lisp/url/url-expand.el (url-expander-remove-relative-links): Do not turn
	empty path into an absolute ("/") path.
	* lisp/url/url-expand.el (url-expand-file-name): Properly resolve
	fragment-only URIs. Do not just return them unchanged.
	* lisp/url/url-expand.el (url-default-expander): An empty path in the relative
	reference URI should not drop the last segment.

2015-12-25  Alain Schneble  <a.s@realize.ch>

	Make relative URL parsing and resolution consistent with RFC 3986 (bug#22044)

	* test/lisp/url/url-parse-tests.el: Add tests covering url-generic-parse-url.
	* test/lisp/url/url-expand-tests.el: Add tests covering url-expand-file-name.
	* lisp/url/url-parse.el (url-generic-parse-url): Keep empty fragment
	information in URL-struct.
	* lisp/url/url-parse.el (url-path-and-query): Do not artificially turn empty
	path and query into nil path and query, respectively.
	* lisp/url/url-expand.el (url-expander-remove-relative-links): Do not turn
	empty path into an absolute ("/") path.
	* lisp/url/url-expand.el (url-expand-file-name): Properly resolve
	fragment-only URIs. Do not just return them unchanged.
	* lisp/url/url-expand.el (url-default-expander): An empty path in the relative
	reference URI should not drop the last segment.

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Let url use default file modes when copying files

	* lisp/url/url-handlers.el (url-copy-file): Use default file
	modes when copying files (bug#11400).

2015-12-25  Devon Sean McCullough  <Emacs-Hacker2012@jovi.net>

	Doc fix for url-http

	* lisp/url/url-http.el (url-http): Document better return values
	  (bug#13187) (tiny change)

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	* eww.el (eww-display-html): Support <button> tags (bug#20485).

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Made ffap-url-p a defun instead of a defsubst

	* lisp/ffap.el (ffap-url-p): Change from defsusbt to defun,
	since there doesn't seem to be much of a reason for it to be a
	defsubst (bug#18203).

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Add a command to view files in the browser to dired

	* lisp/dired.el (dired-mode-map): Add the `W' command
	(bug#18810).

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow http://user:pass@foo/ URLs again

	* lisp/url/url-auth.el (url-basic-auth): Allow explicit
	user/passwords in URLs (bug#19046).

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	* eww.el (eww-mode-map): Fix command name of eww-toggle-colors.

2015-12-25  Samer Masterson  <samer@samertm.com>

	Autoload url-insert-buffer-contents

	* lisp/url/url-handlers.el: Add autoload cookie so that
	`package-list-packages' doesn't bug out (bug#21927) (tiny change)

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow toggling colors in eww

	* doc/misc/eww.texi (Basics): Mention "C".

	* lisp/net/eww.el (eww-toggle-colors): New command and keystroke.

	* lisp/net/shr.el (shr-use-colors): New variable.
	(shr-colorize-region): Use it.

2015-12-25  Lars Ingebrigtsen  <larsi@gnus.org>

	Follow meta refresh tags in eww

	* eww.el (eww-tag-meta): Follow meta refresh tags (bug#22234).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	More eww file name coding fixes

	* eww.el (eww-decode-url-file-name): Use the base coding
	system to check for encodability.

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Always save eww history

	* eww.el (eww-setup-buffer): Always save history, even when
	called from outside the eww buffer (bug#19638).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Default web pages to right-to-left

	* eww.el (eww-mode): Most web pages are left-to-right, so make
	that the default (bug#19801).

	* shr.el (shr-tag-html): Respect "dir" attributes
	(left-to-right, right-to-left).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Make toggling checkboxes work again

	* eww.el (eww-update-field): Make toggling checkboxes work
	again (bug#21881).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Don't store cookies with empty names

	* lisp/url/url-cookie.el (url-cookie-store): Refuse to store
	cookies with empty names (bug#21936).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Stop rendering HTML before specdlr exhaustion

	Fixes: 22117

	* shr.el (shr-descend): Stop rendering before we run out of
	specpdl room (bug#22117).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Use cl-reduce, not reduce.

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow several <tbody> tags in shr

	* shr.el (shr-table-body): New function to find the real body
	of a table.
	(shr-tag-table): Use it to render several <tbody> tags in a
	table (bug#22170).

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Make prettier unique file names in eww

	(eww-make-unique-file-name): Make unique file names by making
	files like foo(2).jpg instead of foo(1)(2).jpg.

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Decode hex-encoded URLs before using them as file names

	* eww.el (eww-decode-url-file-name): New function.
	(eww-download-callback): Use it to decode file names before
	saving them.

2015-12-24  Ashish SHUKLA  <ashish.is@lostca.se>

	Add FreeBSD cert bundle

	* doc/misc/emacs-gnutls.texi (Help For Users): Document
	FreeBSD bundle.

	* lisp/net/gnutls.el (gnutls-trustfiles): Add FreeBSD cert bundle.

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Allow overriding shr functions from eww

	* eww.el (eww-display-html): Allow overriding elements in
	`shr-external-rendering-functions'.

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	Ignore invalid SVG images

	* shr.el (shr-tag-svg): Ignore SVG images that have no width
	or height, because these can't be displayed by ImageMagick,
	anyway.

2015-12-24  Lars Ingebrigtsen  <larsi@gnus.org>

	shr table rendering fix

	* shr.el (shr-tag-table): Allow rendering body-less tables
	that have headers.

2015-12-22  Sam Steingold  <sds@gnu.org>

	clipboard should still work even if interprogram-* is disabled

	(clipboard-yank): When `interprogram-cut-function' is nil,
	bind it to `gui-selection-value' - the default value.
	(clipboard-kill-region, clipboard-kill-ring-save): When
	`interprogram-paste-function' is nil, bind it to `gui-select-text' -
	the default value.

2015-12-18  Phillip Lord  <phillip.lord@russet.org.uk>

	Fix bootstrap issue with dired-loaddefs

	* lisp/dired.el: Autoloads for secondary files loaded optionally.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	dired generate autoloads to non-versioned file.

	* lisp/dired.el: Remove autoloads.
	* lisp/Makefile.in: Add dired to autogenel.
	* lisp/dired-aux.el, lisp/dired-x.el: Update file local.
	* test/lisp/dired-tests.el: Add new test.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	eieio generate autoloads to non-versioned file.

	* lisp/Makefile.in: eieio-loaddefs add to autogenel.
	* lisp/emacs-lisp/eieio.el, lisp/emacs-lisp/eieio-core.el:
	  Remove autoloads.
	* lisp/emacs-lisp/eieio-compat.el, lisp/emacs-lisp/eieio-custom.el,
	  lisp/emacs-lisp/eieio-opt.el: Update file local.
	* test/lisp/emacs-lisp/eieio-tests/eieio-tests.el: New test.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	htmlfontify generate autoload to non-versioned file.

	* lisp/Makefile.in: Add htmlfontity-loaddefs to autogenel.
	* lisp/hfy-cmap.el: Update file local.
	* lisp/htmlfontify.el: Remove autoloads, add require.
	* test/lisp/htmlfontify-tests.el: Test autoload functionality.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	ibuffer generate autoloads to non-versioned file.

	* lisp/Makefile.in: Add ibuffer-loaddefs to autogenel.
	* lisp/ibuf-ext.el: Update file local.
	* lisp/ibuffer.el: Remove autoloads and add a require.
	* test/lisp/ibuffer-tests.el: Test that autoload is working.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	rmail generate autoloads to non-versioned file.

	* lisp/Makefile.in: Add rmail-loaddefs.el to autogenel.
	* lisp/mail/rmail.el: Remove autoloads, add require.
	* lisp/mail/rmailedit.el, lisp/mail/rmailkwd.el:
	* lisp/mail/rmailmm.el, lisp/mail/rmailmsc.el:
	* lisp/mail/rmailsort.el, lisp/mail/rmailsum.el:
	* lisp/mail/undigest.el: Update file-local.
	* test/lisp/mail/rmail-tests.el:

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	Add autoload-force target.

	* lisp/Makefile.in (autoload-force): New target.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	ps-print generate autoloads to non versioned file.

	* lisp/Makefile.in: Add ps-print-loaddefs.el to autogen list.
	* lisp/ps-print.el: Remove autoloads.
	* lisp/ps-mule.el: Update file-local.
	* test/lisp/ps-print-tests.el: Test autoload functionality.

2015-12-17  Phillip Lord  <phillip.lord@russet.org.uk>

	reftex generate autoloads to non versioned file.

	* lisp/Makefile.in: Add reftex-loaddefs to autogen files
	* lisp/textmodes/reftex.el: Remove autoloads.
	* lisp/textmodes/reftex-auc.el, lisp/textmodes/reftex-cite.el:
	* lisp/textmodes/reftex-dcr.el, lisp/textmodes/reftex-global.el:
	* lisp/textmodes/reftex-index.el, lisp/textmodes/reftex-parse.el:
	* lisp/textmodes/reftex-ref.el, lisp/textmodes/reftex-sel.el:
	* lisp/textmodes/reftex-toc.el: Update autoload file-local.
	* test/lisp/textmodes/reftex-tests.el: Add test of an autoloaded
	  function.

2015-12-07  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/calculator.el (calculator-define-key): Undo last change

	Make map argument mandatory instead (bug#22106).
	(calculator-add-operators): Pass the argument that's not optional any more.

2015-12-03  Glenn Morris  <rgm@gnu.org>

	* Makefile.in: Avoid duplication.

	(have-tests): New rule.
	(check, check-maybe): Use it.

2015-12-02  Phillip Lord  <phillip.lord@russet.org.uk>

	make check unconditional, check-maybe top-level.

	 * Makefile.in: Add check-maybe target.
	 * test/Makefile.in: Restore unconditional behavior to make check.

2015-12-01  Phillip Lord  <phillip.lord@russet.org.uk>

	Tests now support out-of-source-build.

	 * tests/Makefile.in,test/make-test-deps.emacs-lisp: Remove assumptions
	   about current working directory.

2015-12-01  Artur Malabarba  <bruce.connor.am@gmail.com>

	* lisp/emacs-lisp/let-alist.el: Now an Elpa :core package

2015-11-30  Phillip Lord  <phillip.lord@russet.org.uk>

	Improve documentation and clean up.

	 * test/Makefile.in: Improve documentation, use EMACS variable
	   correctly, and clean up makefile rules.

2015-11-30  Phillip Lord  <phillip.lord@russet.org.uk>

	Update file headers for name change.

	 * (test/src/decompress-tests.el, test/src/alloc-tests.el): Update headers.

2015-11-30  Phillip Lord  <phillip.lord@russet.org.uk>

	Test files renamed to new scheme.

	 * (finalizer-tests.el): Now renamed alloc-tests.el
	 * (zlib-tests.el): Now renamed decompress-tests.el.

2015-11-30  Phillip Lord  <phillip.lord@russet.org.uk>

	Tests now depend on source files

	 * test/Makefile.in: Include dependences from tests to source files.
	 * test/make-test-deps.emacs-lisp: New file
	 * .gitignore: Ignore generated make include file

2015-11-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/which-func.el: Improve disabling the mode

	Use lexical-binding.
	(which-func-modes, which-func-non-auto-modes, which-func-maxout)
	(which-func, which-func-format): Remove redundant :group arg.
	(which-func-try-to-enable): New function.
	(which-func-ff-hook, which-function-mode): Use it.
	(mode-line-misc-info): Add ourselves here instead of in bindings.el.
	* lisp/bindings.el (mode-line-misc-info): Remove which-func-mode entry.

2015-11-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/calculator.el (calculator-define-key): Silence warning

	...about unknown calculator-mode-map.

2015-11-29  Eli Barzilay  <eli@barzilay.org>

	* lisp/calculator.el: more improvements and bugfixes.

	- Mark `calculator-paste-decimals' as obsolete.  (It wasn't having an
	  effect anyway.)

	- Simplify `calculator-number-to-string' by throwing most of the work
	  onto `number-to-string', leaving just some tweaks for decimal inputs.
	  This leads to some minor changes, for example, pasting "1x1" in hex
	  mode would warn that "x" is ignored and result in "11" (and it wasn't
	  done in decimal mode), whereas now it just ignores everything from the
	  "x" and on and result in a "1" just like in decimal input mode.  Also,
	  overflows are left for `number-to-string' to deal with.

	- `calculator-paste' is very simple as a result.

	- Extend the simplified `calculator-paste': with a prefix argument it
	  pastes a string as if the characters were entered.  This can be used
	  to reduce expressions, but note that it's a simple literal operation,
	  so precedence can be messed, a number can be paster while entering a
	  number, spaces and newlines matter, etc.

	- Fix a minor bug where "e+" in hex mode wouldn't use "+" as an
	  operator.

	- Fix a bug in `calculator-put-value': avoid grouping in the display
	  that is used to construct `calculator-curnum'.  This would trigger
	  when pasting or getting a value from a register in some radix mode
	  with a large enough value.  Another fix: make the output radix equal
	  the input one, otherwise numbers could be converted twice.

2015-11-29  Eli Barzilay  <eli@barzilay.org>

	* lisp/calculator.el: Re-do key bindings.

	Use a helper function that arranges a parent keymap that binds alternate
	case keys so if some letter key is unbound and it's un/shifted version
	is, it will get used.  This makes the global-map trickery unnecessary.

	Also switch to passing strings that name keys through `kbd'.

2015-11-29  Eli Barzilay  <eli@barzilay.org>

	* lisp/calculator.el: improve radix modes

	Fix prompt for some input radix with decimal output (eg, "BD" instead of
	the incorrect "B="); also, some minor docstring tweaks for these.

2015-11-29  Eli Barzilay  <eli@barzilay.org>

	* lisp/calculator.el: better reading of register names

	Use `register-read-with-preview' with a dynamically bound
	`register-alist' and a proper preview function to read register names.

2015-11-29  Eli Barzilay  <eli@barzilay.org>

	* lisp/calculator.el: General improvements

	Use things like `when', `unless', and `push'.

	Improve `calculator-last-input' so it doesn't barf when hitting `F1' in
	non-electric mode.

2015-11-28  Michael Albinus  <michael.albinus@gmx.de>

	Fix a problem with gfilenotify in filenotify-tests.el

	* test/lisp/filenotify-tests.el
	(file-notify--test-expected-events): Remove.
	(file-notify--test-cleanup): Do not set that variable.
	(file-notify--test-with-events): EVENTS can also be a list of lists.
	(file-notify-test02-events, file-notify-test04-file-validity):
	Adapt expected result.

2015-11-28  Eli Zaretskii  <eliz@gnu.org>

	* .gitignore: Adjust to changes in 'test' directory structure.

2015-11-28  Eli Zaretskii  <eliz@gnu.org>

	Fix test/manual/etags/Makefile

	* test/manual/etags/Makefile (ETAGS_PROG, CTAGS_PROG): Adjust to
	changes in 'test' directory structure.

2015-11-27  Phillip Lord  <phillip.lord@russet.org.uk>

	Exclude resource dirs from search for tests.

	* test/Makefile.in: Test file locations are now found with find
	  rather than using finds native functions.

2015-11-27  Phillip Lord  <phillip.lord@russet.org.uk>

	Add test targets without directory names.

	 * (test/Makefile.in): Extend test_template to add two targets for each
	   file.

2015-11-27  Artur Malabarba  <bruce.connor.am@gmail.com>

	* lisp/emacs-lisp/package.el: Require url-handlers

2015-11-27  Phillip Lord  <phillip.lord@russet.org.uk>

	Move elisp-mode-tests to new function names.

	 * test/lisp/progmodes/elisp-mode-tests.el (find-defsdefun-c-defvar-c,
	 find-defs-defun-el-defvar-c): Call `elisp--xref-find-definitions'.

2015-11-27  Juanma Barranquero  <lekktu@gmail.com>

	* lisp/emacs-lisp/package.el: Declare `url-insert-buffer-contents'

2015-11-26  Phillip Lord  <phillip.lord@russet.org.uk>

	Merge branch 'feature/standard-test-location'

2015-11-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/emacs-lisp/eieio.el: Add some default implementations

	(standard-class): Mark it obsolete.
	(slot-missing): Give it a default implementation.
	(destructor): Simplify and mark it obsolete.
	(object-print): Give it a default implementation.
	(eieio-change-class): Rename from change-class.
	(change-class): Redefine as obsolete alias.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Mention kqueue in NEWS

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Merge from scratch/kqueue

	bec57a4 Some final fixes in file notification before merging with master
	0247489 Rework file notifications, kqueue has problems with directory monitors
	5154781 Continie with pending events
	6b490c0 Improve loops in file-notify-test06-many-events
	c8e266f Handle more complex rename operation in kqueue
	5044bdf New test with a larger number of events.
	65ba5a9 Further fixes for kqueue.
	13f3508 Code cleanup of kqueue.c
	99aa855 Doc changes for kqueue
	8deebe1 Finish implementation in kqueue.c
	90d6c69 * lisp/filenotify.el (file-notify-add-watch): Fix thinko.
	e95b309 More work on kqueue
	41d9bd0 Implement directory events
	c571fc1 Build fixes for kqueue support.
	e0a68f2 Continue kqueue implementation
	7543d1c Work on kqueue
	e3354e2 Add kqueue support
	c6457ce Minor fix to comment indentation and typo in last commit
	b92307f linum-mode plays more nicely with other margin-setting extensions
	58e6235 * lisp/image-mode.el: Support encrypted file
	9375652 * lisp/progmodes/verilog-mode.el (verilog-save-buffer-state): Add backquote
	47f83b6 ; ChangeLog.2 fixes
	7cc233e * lisp/emacs-lisp/package.el: Fix a decoding issue
	5f9153f * lisp/emacs-lisp/package.el: Refactor -with-work-buffer-async
	353f5e7 * lisp/progmodes/verilog-mode.el: Use with-silent-modifications
	70f1fda ; Auto-commit of ChangeLog files.
	ae0653b * CONTRIBUTE: Remove information about feature freeze.
	9459456 Merge branch 'release-process-lowercase'
	9a4aa0f Document the release process
	f8cc14b * admin/release-process: Rename from admin/FOR-RELEASE.
	dcd5877 gitmerge: Fix git log command
	2ac79ae gitmerge: Try to detect cherry-picks
	5f7a2a9 Increment Emacs version on master branch
	ed2e7e2 Mention CONTRIBUTE in README
	9e00a02 Update verilog-mode.el to 2015-11-09-b121d60-vpo.
	138ad3d ; Fix warnings
	7126e9a ; Update xref-etags-mode for the latest change
	246d660 Use generic dispatch for xref backends
	31f6e93 Support rectangular regions for more commands
	f103a27 Handle multiple matches on the same line; add highlighting
	fe973fc Replace xref-match-bounds with xref-match-length
	92a5010 Merge from gnulib
	04ac097 Spruce up ftfont.c memory allocation
	4c4b520 Port recent XCB changes to 64-bit ‘long int’
	4f0ce9c * src/undo.c (run_undoable_change): Now static.
	695a6f9 Remove support for ':timeout' from w32 tray notifications
	a731c2f * test/automated/simple-test.el: Add test for bug#20698 (bug#21885)
	2b4c0c0 * lisp/progmodes/elisp-mode.el: Declare function `project-roots'
	66b9f7b * src/undo.c: Small fixes for previous change
	2fac30e Add a few more variables to redisplay--variables
	04f69f1 * lisp/loadup.el: Enlarge the size of the hash table to 80000.
	e221d32 Fix point positioning after transposing with negative arg
	35f5afb Fix last change in shr.el
	508e77b Fix last change
	d60ed3f Another fix for MinGW64 and Cygwin builds due to notifications
	805a39b Remove intern calls and XXX comments from Fx_export_frames
	9463abf shr: don't invoke unbound function (Bug#21895)
	6e5186e * test/automated/keymaps-test.el: Fix test to make it repeatable
	0c92826 * test/automated/cl-lib-tests.el (cl-lib-struct-constructors): Small fix
	39dbd1c : Tests for undo-auto functionality.
	20aa42e ; Merge branch 'fix/no-undo-boundary-on-secondary-buffer-change'
	44dfa86 The heuristic that Emacs uses to add an `undo-boundary' has been reworked, as it interacts poorly with functions on `post-command-hook' or `after-change-functions'.
	d2f73db Bind [?\S-\ ] to previous line command in Dired-like modes.
	c1bc6e5 Fix the MinGW64 and Cygwin-w32 builds
	1e363a8 Enable sorting of JSON object keys when encoding
	9dd7da9 * test/automated/keymap-tests.el: New test file
	aa17de9 Speed up x_real_pos_and_offsets using XCB
	a838c83 Enable use of XCB for checking window manager state
	c7f2b6a Detect XCB and save a connection handle
	e1c27db Reduce some data dependencies between X calls
	25e32bd Use color cache for creating bitmap
	851be0f Add "^" to the interactive specs of `dired-next/previous-line'
	055ca3a Sync with soap-client repository, version 3.0.2
	e0f64e7 CC Mode: Respect users' settings of open-paren-in-column-0-is-defun-start.
	952395d * lisp/obarray.el: Fix shadowed variables
	436d330 Avoid error in submitting a form with EWW
	e887f6e ; * doc/lispref/os.texi: Fix indentation of sample code.
	51d840a Rename seq-p and map-p to seqp and mapp
	23036ba Rename obarray-p to obarrayp
	20aea42 Rename obarray-foreach to obarray-map
	a3b2101 New file with obarray functions.
	9d43941 Implement tray notifications for MS-Windows

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Some final fixes in file notification before merging with master

	* lisp/filenotify.el (file-notify--rm-descriptor): Remove WHAT arg.
	(file-notify-callback): Improve check for `stopped' event.  Call
	`file-notify-rm-watch' rather than `file-notify--rm-descriptor'.
	(file-notify-add-watch): In case FILE is not a directory, call the
	file monitor for the kqueue backend.  Otherwise, call the
	directory monitor for the upper directory.

	* src/inotify.c (inotifyevent_to_event): Extract file name from
	watch_object if the event doesn't provide it.
	(Finotify_add_watch): Add file name to watch_object.

	* test/automated/file-notify-tests.el (file-notify--test-timeout):
	Use different timeouts for different libraries.
	(file-notify--test-with-events): Suppress lock files.  Flush
	outstanding events before running the body.
	(file-notify-test02-events, file-notify-test04-file-validity): Do
	not skip cygwin tests.  Add additional test for file creation.
	Adapt expected result for different backends.
	(file-notify-test03-autorevert): Some of the tests don't work for
	w32notify.
	(file-notify-test06-many-events): Rename into both directions.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Rework file notifications, kqueue has problems with directory monitors

	* lisp/filenotify.el (file-notify-add-watch): Call the native
	add-watch function on the file, not on the dir.

	* src/kqueue.c (kqueue_compare_dir_list): Make also bookkeeping
	about already deleted entries.

	* test/automated/auto-revert-tests.el
	(auto-revert-test01-auto-revert-several-files): Do not call "cp -f"
	since this deletes the target file first.

	* test/automated/file-notify-tests.el (file-notify--test-event-test):
	Make stronger checks.
	(file-notify-test01-add-watch, file-notify-test02-events)
	(file-notify-test04-file-validity, file-notify-test05-dir-validity):
	Rewrite in order to call file monitors but directory monitors.
	(file-notify-test06-many-events): Ler rename work in both directions.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Continie with pending events

	* src/kqueue.c (pending_events): Remove global variable.
	(kqueue_compare_dir_list): Create `write' event for not used
	pending events.
	(globals_of_kqueue): Remove initialization of pending_events.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Improve loops in file-notify-test06-many-events

	* test/automated/file-notify-tests.el (file-notify-test06-many-events):
	Use `read-event' pauses for the `write-file' loops; otherwise
	events are lost in inotify and gfilenotify cases.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Handle more complex rename operation in kqueue

	* src/kqueue.c (pending_events): New variable.
	(kqueue_compare_dir_list): Handle more complex rename operation.
	(globals_of_kqueue): Initialize pending_events.

	* test/automated/file-notify-tests.el (file-notify-test06-many-events):
	Adapt expected events in the `rename-file' case.
	(file-notify-test06-many-events-remote): Declare.

2015-11-25  Wolfgang Jenkner  <wjenkner@inode.at>

	New test with a larger number of events.

	* test/automated/file-notify-tests.el (file-notify--test-with-events):
	Make timeout heuristically depend on the number of events.

	(file-notify-test06-many-events): Use it for new test.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Further fixes for kqueue.

	* lisp/filenotify.el (file-notify-callback): Raise also event if
	directory name matches.
	(file-notify-add-watch): Add `create' to the flags for `kqueue'.

	* src/kqueue.c (kqueue_generate_event): Use watch_object as
	argument instead of ident.  Remove callback argument.  Adapt
	callees.  Check actions whether they are monitored flags.

	* test/automated/file-notify-tests.el (file-notify--test-library):
	New defun.
	(file-notify-test00-availability, file-notify-test02-events)
	(file-notify-test04-file-validity)
	(file-notify-test05-dir-validity): Use it.
	(file-notify-test02-events, file-notify-test04-file-validity): Add
	`read-event' calls between different file actions, in order to
	give the backends a chance to rais an event.  Needed especially
	for kqueue.  In case of deleting a directory, there are two
	`deleted' events.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Code cleanup of kqueue.c

	* src/kqueue.c (kqueue_directory_listing): Skip "." and "..".
	(kqueue_compare_dir_list): Do not loop when calling
	directory_files_internal.  Remove checks for "." and "..", this is
	done in kqueue_directory_listing now.
	(Fkqueue_add_watch): Check for proper emacs_open flags.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Doc changes for kqueue

	* doc/lispref/os.texi (File Notifications): Add kqueue as backend.
	Fix some glitches in the example.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Finish implementation in kqueue.c

	* src/kqueue.c (kqueue_directory_listing, kqueue_callback):
	Simplify access to list.
	(kqueue_compare_dir_list): Simplify access to list.  Raise
	`delete' event if directory does not exist any longer.  Otherwise,
	wait until directory contents has changed.  Fix error in check.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/filenotify.el (file-notify-add-watch): Fix thinko.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	More work on kqueue

	* lisp/filenotify.el (file-notify-callback): Handle also the
	`rename' event from kqueue.
	(file-notify-add-watch): Do not register an entry twice.

	* src/kqueue.c (kqueue_directory_listing): New function.
	(kqueue_generate_event): New argument FILE1.  Adapt callees.
	(kqueue_compare_dir_list): Rewrite in order to make it more robust.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Implement directory events

	* lisp/filenotify.el (file-notify-handle-event)
	(file-notify-callback): Remove traces.

	* src/kqueue.c: Include <sys/time.h>.
	(kqueue_generate_event, kqueue_compare_dir_list): New functions.
	(kqueue_callback): Use them.  Call kevent() with a zero timeout.
	(Fkqueue_add_watch): Adapt docstring.  Support directory events.
	Compute initial directory listing.  Close file descriptor in case
	of errors.
	(syms_of_kqueue): Declare Qcreate.

2015-11-25  Wolfgang Jenkner  <wjenkner@inode.at>

	Build fixes for kqueue support.

	* src/kqueue.c (Fkqueue_add_watch): O_BINARY is not a POSIX open(3)
	flag.

	* configure.ac (HAVE_KQUEUE): There is no pkg-config module for native
	kqueue on *BSD.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Continue kqueue implementation

	* lisp/filenotify.el (file-notify-handle-event)
	(file-notify-callback): Enable trace messages.

	* src/kqueue.c: Include also <sys/types.h>.
	(kqueue_callback): Remove watch in case of NOTE_DELETE or NOTE_RENAME.
	(Fkqueue_rm_watch, Fkqueue_valid_p): New functions.
	(syms_of_kqueue): Add them.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Work on kqueue

	* lisp/filenotify.el (file-notify--library)
	(file-notify-descriptors, file-notify-callback)
	(file-notify-add-watch, file-notify-rm-watch)
	(file-notify-valid-p): Add kqueue support.

	* src/keyboard.c (make_lispy_event): Check also for HAVE_KQUEUE.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Add kqueue support

	* configure.ac (--with-file-notification): Add kqueue.
	(top): Remove special test for "${HAVE_NS}" and
	${with_file_notification}, this is handled inside gfilenotify
	tests.  Add kqueue tests.  Use NOTIFY_CFLAGS and NOTIFY_LIBS
	instead of library specific variables.

	* src/Makefile.in: Use NOTIFY_CFLAGS and NOTIFY_LIBS.

	* src/emacs.c (main): Call globals_of_kqueue and syms_of_kqueue.

	* src/kqueue.c: New file.

	* src/lisp.h: Declare extern globals_of_kqueue and syms_of_kqueue.

2015-11-25  Michael Albinus  <michael.albinus@gmx.de>

	Some final fixes in file notification before merging with master

	* lisp/filenotify.el (file-notify--rm-descriptor): Remove WHAT arg.
	(file-notify-callback): Improve check for `stopped' event.  Call
	`file-notify-rm-watch' rather than `file-notify--rm-descriptor'.
	(file-notify-add-watch): In case FILE is not a directory, call the
	file monitor for the kqueue backend.  Otherwise, call the
	directory monitor for the upper directory.

	* src/inotify.c (inotifyevent_to_event): Extract file name from
	watch_object if the event doesn't provide it.
	(Finotify_add_watch): Add file name to watch_object.

	* test/automated/file-notify-tests.el (file-notify--test-timeout):
	Use different timeouts for different libraries.
	(file-notify--test-with-events): Suppress lock files.  Flush
	outstanding events before running the body.
	(file-notify-test02-events, file-notify-test04-file-validity): Do
	not skip cygwin tests.  Add additional test for file creation.
	Adapt expected result for different backends.
	(file-notify-test03-autorevert): Some of the tests don't work for
	w32notify.
	(file-notify-test06-many-events): Rename into both directions.

2015-11-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Update elisp-mode-tests for changed file location.

	 * test/lisp/progmodes/elisp-mode-tests.el:

2015-11-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Exclude manual tests from Makefile

	 * test/Makefile.in:

2015-11-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Move package test files to new directory.

	 * test/lisp/emacs-lisp/package-tests.el: Update resoruce file location.
	 * test/data/package: Moved to test/lisp/emacs-lisp/package-resources

2015-11-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Restore delete Makefiles and fix .gitignore.

	 * .gitignore: Update Makefiles to changed locations
	 * test/lisp/progmodes/flymake-resources/Makefile,
	   test/manual/etags/Makefile,
	   test/manual/etags/make-src/Makefile,
	   test/manual/indent/Makefile: Restored and moved to new location.

2015-11-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Test infrastructure: updates after directory move

	 * (test/Makefile.in): Support directories several levels deep.
	 * (test/data/flymake): Rename to test/lisp/progmodes/flymake-resources.
	 * (test/lisp/progmodes/flymake-tests.el): Support renamed resource directory.

2015-11-24  Phillip Lord  <phillip.lord@russet.org.uk>

	Rename all test files to reflect source layout.

	* CONTRIBUTE, Makefile.in, configure.ac: Update to reflect
	test directory moves.
	* test/file-organisation.org: New file.
	* test/automated/Makefile.in:
	* test/automated/data/decompress/foo.gz:
	* test/automated/data/epg/pubkey.asc:
	* test/automated/data/epg/seckey.asc:
	* test/automated/data/files-bug18141.el.gz:
	* test/automated/data/flymake/test.c:
	* test/automated/data/flymake/test.pl:
	* test/automated/data/package/archive-contents:
	* test/automated/data/package/key.pub:
	* test/automated/data/package/key.sec:
	* test/automated/data/package/multi-file-0.2.3.tar:
	* test/automated/data/package/multi-file-readme.txt:
	* test/automated/data/package/newer-versions/archive-contents:
	* test/automated/data/package/newer-versions/new-pkg-1.0.el:
	* test/automated/data/package/newer-versions/simple-single-1.4.el:
	* test/automated/data/package/package-test-server.py:
	* test/automated/data/package/signed/archive-contents:
	* test/automated/data/package/signed/archive-contents.sig:
	* test/automated/data/package/signed/signed-bad-1.0.el:
	* test/automated/data/package/signed/signed-bad-1.0.el.sig:
	* test/automated/data/package/signed/signed-good-1.0.el:
	* test/automated/data/package/signed/signed-good-1.0.el.sig:
	* test/automated/data/package/simple-depend-1.0.el:
	* test/automated/data/package/simple-single-1.3.el:
	* test/automated/data/package/simple-single-readme.txt:
	* test/automated/data/package/simple-two-depend-1.1.el:
	* test/automated/abbrev-tests.el:
	* test/automated/auto-revert-tests.el:
	* test/automated/calc-tests.el:
	* test/automated/icalendar-tests.el:
	* test/automated/character-fold-tests.el:
	* test/automated/comint-testsuite.el:
	* test/automated/descr-text-test.el:
	* test/automated/electric-tests.el:
	* test/automated/cl-generic-tests.el:
	* test/automated/cl-lib-tests.el:
	* test/automated/eieio-test-methodinvoke.el:
	* test/automated/eieio-test-persist.el:
	* test/automated/eieio-tests.el:
	* test/automated/ert-tests.el:
	* test/automated/ert-x-tests.el:
	* test/automated/generator-tests.el:
	* test/automated/let-alist.el:
	* test/automated/map-tests.el:
	* test/automated/advice-tests.el:
	* test/automated/package-test.el:
	* test/automated/pcase-tests.el:
	* test/automated/regexp-tests.el:
	* test/automated/seq-tests.el:
	* test/automated/subr-x-tests.el:
	* test/automated/tabulated-list-test.el:
	* test/automated/thunk-tests.el:
	* test/automated/timer-tests.el:
	* test/automated/epg-tests.el:
	* test/automated/eshell.el:
	* test/automated/faces-tests.el:
	* test/automated/file-notify-tests.el:
	* test/automated/auth-source-tests.el:
	* test/automated/gnus-tests.el:
	* test/automated/message-mode-tests.el:
	* test/automated/help-fns.el:
	* test/automated/imenu-test.el:
	* test/automated/info-xref.el:
	* test/automated/mule-util.el:
	* test/automated/isearch-tests.el:
	* test/automated/json-tests.el:
	* test/automated/bytecomp-tests.el:
	* test/automated/coding-tests.el:
	* test/automated/core-elisp-tests.el:
	* test/automated/decoder-tests.el:
	* test/automated/files.el:
	* test/automated/font-parse-tests.el:
	* test/automated/lexbind-tests.el:
	* test/automated/occur-tests.el:
	* test/automated/process-tests.el:
	* test/automated/syntax-tests.el:
	* test/automated/textprop-tests.el:
	* test/automated/undo-tests.el:
	* test/automated/man-tests.el:
	* test/automated/completion-tests.el:
	* test/automated/dbus-tests.el:
	* test/automated/newsticker-tests.el:
	* test/automated/sasl-scram-rfc-tests.el:
	* test/automated/tramp-tests.el:
	* test/automated/obarray-tests.el:
	* test/automated/compile-tests.el:
	* test/automated/elisp-mode-tests.el:
	* test/automated/f90.el:
	* test/automated/flymake-tests.el:
	* test/automated/python-tests.el:
	* test/automated/ruby-mode-tests.el:
	* test/automated/subword-tests.el:
	* test/automated/replace-tests.el:
	* test/automated/simple-test.el:
	* test/automated/sort-tests.el:
	* test/automated/subr-tests.el:
	* test/automated/reftex-tests.el:
	* test/automated/sgml-mode-tests.el:
	* test/automated/tildify-tests.el:
	* test/automated/thingatpt.el:
	* test/automated/url-future-tests.el:
	* test/automated/url-util-tests.el:
	* test/automated/add-log-tests.el:
	* test/automated/vc-bzr.el:
	* test/automated/vc-tests.el:
	* test/automated/xml-parse-tests.el:
	* test/BidiCharacterTest.txt:
	* test/biditest.el:
	* test/cedet/cedet-utests.el:
	* test/cedet/ede-tests.el:
	* test/cedet/semantic-ia-utest.el:
	* test/cedet/semantic-tests.el:
	* test/cedet/semantic-utest-c.el:
	* test/cedet/semantic-utest.el:
	* test/cedet/srecode-tests.el:
	* test/cedet/tests/test.c:
	* test/cedet/tests/test.el:
	* test/cedet/tests/test.make:
	* test/cedet/tests/testdoublens.cpp:
	* test/cedet/tests/testdoublens.hpp:
	* test/cedet/tests/testfriends.cpp:
	* test/cedet/tests/testjavacomp.java:
	* test/cedet/tests/testnsp.cpp:
	* test/cedet/tests/testpolymorph.cpp:
	* test/cedet/tests/testspp.c:
	* test/cedet/tests/testsppcomplete.c:
	* test/cedet/tests/testsppreplace.c:
	* test/cedet/tests/testsppreplaced.c:
	* test/cedet/tests/testsubclass.cpp:
	* test/cedet/tests/testsubclass.hh:
	* test/cedet/tests/testtypedefs.cpp:
	* test/cedet/tests/testvarnames.c:
	* test/etags/CTAGS.good:
	* test/etags/ETAGS.good_1:
	* test/etags/ETAGS.good_2:
	* test/etags/ETAGS.good_3:
	* test/etags/ETAGS.good_4:
	* test/etags/ETAGS.good_5:
	* test/etags/ETAGS.good_6:
	* test/etags/a-src/empty.zz:
	* test/etags/a-src/empty.zz.gz:
	* test/etags/ada-src/2ataspri.adb:
	* test/etags/ada-src/2ataspri.ads:
	* test/etags/ada-src/etags-test-for.ada:
	* test/etags/ada-src/waroquiers.ada:
	* test/etags/c-src/a/b/b.c:
	* test/etags/c-src/abbrev.c:
	* test/etags/c-src/c.c:
	* test/etags/c-src/dostorture.c:
	* test/etags/c-src/emacs/src/gmalloc.c:
	* test/etags/c-src/emacs/src/keyboard.c:
	* test/etags/c-src/emacs/src/lisp.h:
	* test/etags/c-src/emacs/src/regex.h:
	* test/etags/c-src/etags.c:
	* test/etags/c-src/exit.c:
	* test/etags/c-src/exit.strange_suffix:
	* test/etags/c-src/fail.c:
	* test/etags/c-src/getopt.h:
	* test/etags/c-src/h.h:
	* test/etags/c-src/machsyscalls.c:
	* test/etags/c-src/machsyscalls.h:
	* test/etags/c-src/sysdep.h:
	* test/etags/c-src/tab.c:
	* test/etags/c-src/torture.c:
	* test/etags/cp-src/MDiagArray2.h:
	* test/etags/cp-src/Range.h:
	* test/etags/cp-src/burton.cpp:
	* test/etags/cp-src/c.C:
	* test/etags/cp-src/clheir.cpp.gz:
	* test/etags/cp-src/clheir.hpp:
	* test/etags/cp-src/conway.cpp:
	* test/etags/cp-src/conway.hpp:
	* test/etags/cp-src/fail.C:
	* test/etags/cp-src/functions.cpp:
	* test/etags/cp-src/screen.cpp:
	* test/etags/cp-src/screen.hpp:
	* test/etags/cp-src/x.cc:
	* test/etags/el-src/TAGTEST.EL:
	* test/etags/el-src/emacs/lisp/progmodes/etags.el:
	* test/etags/erl-src/gs_dialog.erl:
	* test/etags/f-src/entry.for:
	* test/etags/f-src/entry.strange.gz:
	* test/etags/f-src/entry.strange_suffix:
	* test/etags/forth-src/test-forth.fth:
	* test/etags/html-src/algrthms.html:
	* test/etags/html-src/index.shtml:
	* test/etags/html-src/software.html:
	* test/etags/html-src/softwarelibero.html:
	* test/etags/lua-src/allegro.lua:
	* test/etags/objc-src/PackInsp.h:
	* test/etags/objc-src/PackInsp.m:
	* test/etags/objc-src/Subprocess.h:
	* test/etags/objc-src/Subprocess.m:
	* test/etags/objcpp-src/SimpleCalc.H:
	* test/etags/objcpp-src/SimpleCalc.M:
	* test/etags/pas-src/common.pas:
	* test/etags/perl-src/htlmify-cystic:
	* test/etags/perl-src/kai-test.pl:
	* test/etags/perl-src/yagrip.pl:
	* test/etags/php-src/lce_functions.php:
	* test/etags/php-src/ptest.php:
	* test/etags/php-src/sendmail.php:
	* test/etags/prol-src/natded.prolog:
	* test/etags/prol-src/ordsets.prolog:
	* test/etags/ps-src/rfc1245.ps:
	* test/etags/pyt-src/server.py:
	* test/etags/tex-src/gzip.texi:
	* test/etags/tex-src/nonewline.tex:
	* test/etags/tex-src/testenv.tex:
	* test/etags/tex-src/texinfo.tex:
	* test/etags/y-src/atest.y:
	* test/etags/y-src/cccp.c:
	* test/etags/y-src/cccp.y:
	* test/etags/y-src/parse.c:
	* test/etags/y-src/parse.y:
	* test/indent/css-mode.css:
	* test/indent/js-indent-init-dynamic.js:
	* test/indent/js-indent-init-t.js:
	* test/indent/js-jsx.js:
	* test/indent/js.js:
	* test/indent/latex-mode.tex:
	* test/indent/modula2.mod:
	* test/indent/nxml.xml:
	* test/indent/octave.m:
	* test/indent/pascal.pas:
	* test/indent/perl.perl:
	* test/indent/prolog.prolog:
	* test/indent/ps-mode.ps:
	* test/indent/ruby.rb:
	* test/indent/scheme.scm:
	* test/indent/scss-mode.scss:
	* test/indent/sgml-mode-attribute.html:
	* test/indent/shell.rc:
	* test/indent/shell.sh:
	* test/redisplay-testsuite.el:
	* test/rmailmm.el:
	* test/automated/buffer-tests.el:
	* test/automated/cmds-tests.el:
	* test/automated/data-tests.el:
	* test/automated/finalizer-tests.el:
	* test/automated/fns-tests.el:
	* test/automated/inotify-test.el:
	* test/automated/keymap-tests.el:
	* test/automated/print-tests.el:
	* test/automated/libxml-tests.el:
	* test/automated/zlib-tests.el: Files Moved.

2015-11-21  Wilson Snyder  <wsnyder@wsnyder.org>

	verilog-mode.el: Commentary and fix pre-Emacs 21 behavior.

	* lisp/progmodes/verilog-mode.el
	(verilog-save-font-no-change-functions): Commentary and fix
	pre-Emacs 21 behavior.

2015-11-20  Michael Albinus  <michael.albinus@gmx.de>

	Rework file notifications, kqueue has problems with directory monitors

	* lisp/filenotify.el (file-notify-add-watch): Call the native
	add-watch function on the file, not on the dir.

	* src/kqueue.c (kqueue_compare_dir_list): Make also bookkeeping
	about already deleted entries.

	* test/automated/auto-revert-tests.el
	(auto-revert-test01-auto-revert-several-files): Do not call "cp -f"
	since this deletes the target file first.

	* test/automated/file-notify-tests.el (file-notify--test-event-test):
	Make stronger checks.
	(file-notify-test01-add-watch, file-notify-test02-events)
	(file-notify-test04-file-validity, file-notify-test05-dir-validity):
	Rewrite in order to call file monitors but directory monitors.
	(file-notify-test06-many-events): Ler rename work in both directions.

2015-11-19  Przemysław Wojnowski  <esperanto@cumego.com>

	Use obarray functions from obarray.

	* lisp/abbrev.el (copy-abbrev-table, abbrev-table-p, make-abbrev-table,
	  abbrev-table-get, abbrev-table-put, abbrev-table-empty-p,
	  clear-abbrev-table, define-abbrev, abbrev--symbol, abbrev-table-menu):
	  delegate to obarray.el functions.
	* lisp/loadup.el: load obarray before abbrev
	* test/automated/abbrev-tests.el: new tests

2015-11-19  Michael Albinus  <michael.albinus@gmx.de>

	Continie with pending events

	* src/kqueue.c (pending_events): Remove global variable.
	(kqueue_compare_dir_list): Create `write' event for not used
	pending events.
	(globals_of_kqueue): Remove initialization of pending_events.

2015-11-19  Michael Albinus  <michael.albinus@gmx.de>

	Improve loops in file-notify-test06-many-events

	* test/automated/file-notify-tests.el (file-notify-test06-many-events):
	Use `read-event' pauses for the `write-file' loops; otherwise
	events are lost in inotify and gfilenotify cases.

2015-11-19  Michael Albinus  <michael.albinus@gmx.de>

	Handle more complex rename operation in kqueue

	* src/kqueue.c (pending_events): New variable.
	(kqueue_compare_dir_list): Handle more complex rename operation.
	(globals_of_kqueue): Initialize pending_events.

	* test/automated/file-notify-tests.el (file-notify-test06-many-events):
	Adapt expected events in the `rename-file' case.
	(file-notify-test06-many-events-remote): Declare.

2015-11-18  Christian Schwarzgruber  <c.schwarzgruber.cs@gmail.com>  (tiny change)

	epa.el: Add option to replace original text

	* lisp/epa.el (epa-replace-original-text): New user option.
	(Bug#21947)

2015-11-18  Mark Oteiza  <mvoteiza@udel.edu>

	Add interactive seek command.

	* lisp/mpc.el (mpc-cmd-seekcur): New function.
	(mpc-seek-current): New command.
	(mpc-mode-menu): Add entry for mpc-seek-current
	(mpc-mode-map): Bind mpc-seek-current to "g"

2015-11-18  Mark Oteiza  <mvoteiza@udel.edu>

	Fix issue where a new tempfile was created every refresh

	* lisp/mpc.el (mpc-format): Leave dir as relative path

2015-11-18  Wolfgang Jenkner  <wjenkner@inode.at>

	New test with a larger number of events.

	* test/automated/file-notify-tests.el (file-notify--test-with-events):
	Make timeout heuristically depend on the number of events.

	(file-notify-test06-many-events): Use it for new test.

2015-11-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/cc-defs.el: Use with-silent-modifications

	(c-save-buffer-state): Use with-silent-modifications when available.
	(c--macroexpand-all): Check macroexpand-all directly rather than
	c--mapcan-status.

2015-11-18  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/loadup.el: Set max-lisp-eval-depth here

	* lisp/Makefile.in (BIG_STACK_DEPTH, BIG_STACK_OPTS): Remove.
	(BYTE_COMPILE_FLAGS): Adjust accordingly.

2015-11-18  Michael Albinus  <michael.albinus@gmx.de>

	Further fixes for kqueue.

	* lisp/filenotify.el (file-notify-callback): Raise also event if
	directory name matches.
	(file-notify-add-watch): Add `create' to the flags for `kqueue'.

	* src/kqueue.c (kqueue_generate_event): Use watch_object as
	argument instead of ident.  Remove callback argument.  Adapt
	callees.  Check actions whether they are monitored flags.

	* test/automated/file-notify-tests.el (file-notify--test-library):
	New defun.
	(file-notify-test00-availability, file-notify-test02-events)
	(file-notify-test04-file-validity)
	(file-notify-test05-dir-validity): Use it.
	(file-notify-test02-events, file-notify-test04-file-validity): Add
	`read-event' calls between different file actions, in order to
	give the backends a chance to rais an event.  Needed especially
	for kqueue.  In case of deleting a directory, there are two
	`deleted' events.

2015-11-17  João Távora  <joaotavora@gmail.com>

	Minor fix to comment indentation and typo in last commit

	* lisp/linum.el (linum-update-window): Fix comment indentation and
	a typo.

2015-11-17  João Távora  <joaotavora@gmail.com>

	linum-mode plays more nicely with other margin-setting extensions

	linum.el will only modify the left margin if it needs to, and will
	only reset the it back to 0 if it guesses that no-one has touched that
	margin in the meantime.

	As such, this is a more of a workaround than an actual fix, but fixes
	the problems described in bug#20674 regarding the interaction with
	modes such as darkroom-mode and olivetti-mode.

	A similar fix was commited to nlinum.el in ELPA.git's
	e7f5f549fbfb740b911fb7f33b42381ecece56d8

	* lisp/linum.el (linum-delete-overlays): Restore margins more
	criteriously.
	(linum-update-window): Set margins more criteriously.

2015-11-17  Michael Albinus  <michael.albinus@gmx.de>

	Code cleanup of kqueue.c

	* src/kqueue.c (kqueue_directory_listing): Skip "." and "..".
	(kqueue_compare_dir_list): Do not loop when calling
	directory_files_internal.  Remove checks for "." and "..", this is
	done in kqueue_directory_listing now.
	(Fkqueue_add_watch): Check for proper emacs_open flags.

2015-11-16  Daiki Ueno  <ueno@gnu.org>

	* lisp/image-mode.el: Support encrypted file

	(image-toggle-display-image): Read content from the buffer instead
	of the file, if the buffer holds a decrypted data.  (Bug#21870)

2015-11-16  Michael Albinus  <michael.albinus@gmx.de>

	Doc changes for kqueue

	* doc/lispref/os.texi (File Notifications): Add kqueue as backend.
	Fix some glitches in the example.

2015-11-16  Michael Albinus  <michael.albinus@gmx.de>

	Finish implementation in kqueue.c

	* src/kqueue.c (kqueue_directory_listing, kqueue_callback):
	Simplify access to list.
	(kqueue_compare_dir_list): Simplify access to list.  Raise
	`delete' event if directory does not exist any longer.  Otherwise,
	wait until directory contents has changed.  Fix error in check.

2015-11-15  Michael Albinus  <michael.albinus@gmx.de>

	* lisp/filenotify.el (file-notify-add-watch): Fix thinko.

2015-11-15  Juanma Barranquero  <lekktu@gmail.com>

	* lisp/progmodes/verilog-mode.el (verilog-save-buffer-state): Add backquote

2015-11-15  Artur Malabarba  <bruce.connor.am@gmail.com>

	* lisp/emacs-lisp/package.el: Fix a decoding issue

	(package--with-response-buffer): Use `url-insert-buffer-contents'.
	The previous code had some issues with decoding. Refactoring that
	function allows us to use the decoding from url-handlers while still
	treating both sync and async requests the same.

	* lisp/url/url-handlers.el (url-insert-file-contents): Move some code to
	`url-insert-buffer-contents'.
	(url-insert-buffer-contents): New function

2015-11-15  Artur Malabarba  <bruce.connor.am@gmail.com>

	* lisp/emacs-lisp/package.el: Refactor -with-work-buffer-async

	(package--with-work-buffer-async): Reimplement as
	`package--with-response-buffer'.
	(package--with-work-buffer): Mark obsolete.
	(package--with-response-buffer): New macro. This is a more self
	contained and less contrived version of
	`package--with-work-buffer-async'.  It uses keyword arguments,
	doesn't have async on the name, doesn't fallback on
	`package--with-work-buffer', and has _much_ simpler error
	handling.

	(package--check-signature, package--download-one-archive)
	(package-install-from-archive, describe-package-1): Use it.

	(package--download-and-read-archives): Let
	`package--download-one-archive' take care of calling
	`package--update-downloads-in-progress'.

2015-11-15  Stefan Monnier  <monnier@iro.umontreal.ca>

	* lisp/progmodes/verilog-mode.el: Use with-silent-modifications

	(verilog-save-buffer-state): Use with-silent-modifications when available.
	(verilog-save-font-no-change-functions): Don't bind
	before/after-change-functions if it's not needed.

2015-11-15  Michael Albinus  <michael.albinus@gmx.de>

	More work on kqueue

	* lisp/filenotify.el (file-notify-callback): Handle also the
	`rename' event from kqueue.
	(file-notify-add-watch): Do not register an entry twice.

	* src/kqueue.c (kqueue_directory_listing): New function.
	(kqueue_generate_event): New argument FILE1.  Adapt callees.
	(kqueue_compare_dir_list): Rewrite in order to make it more robust.

2015-11-14  Xue Fuqiao  <xfq.free@gmail.com>

	* CONTRIBUTE: Remove information about feature freeze.

	Merge branch 'release-process-lowercase'

2015-11-14  Xue Fuqiao  <xfq.free@gmail.com>

	Document the release process

	* admin/notes/versioning: Add information about RC releases.
	* admin/release-process: Document the release process.
	* admin/authors.el (authors-ignored-files):
	* admin/README: Change FOR-RELEASE to release-process.
	* CONTRIBUTE:
	* admin/notes/bugtracker: Don't mention FOR-RELEASE.

2015-11-14  Xue Fuqiao  <xfq.free@gmail.com>

	* admin/release-process: Rename from admin/FOR-RELEASE.

2015-11-14  David Engster  <deng@randomsample.de>

	gitmerge: Fix git log command

	* admin/gitmerge.el (gitmerge-missing): Use '--left-only' since we
	only want commits from the branch that is to be merged.
	(gitmerge-setup-log-buffer): Use the same symmetric range as in
	`gitmerge-missing'.

2015-11-14  David Engster  <deng@randomsample.de>

	gitmerge: Try to detect cherry-picks

	* admin/gitmerge.el (gitmerge-default-branch): Change to
	origin/emacs-25.
	(gitmerge-missing): Use symmetric difference ('...') between
	branch and master so that cherry-picks can be detected.

2015-11-14  Michael Albinus  <michael.albinus@gmx.de>

	Implement directory events

	* lisp/filenotify.el (file-notify-handle-event)
	(file-notify-callback): Remove traces.

	* src/kqueue.c: Include <sys/time.h>.
	(kqueue_generate_event, kqueue_compare_dir_list): New functions.
	(kqueue_callback): Use them.  Call kevent() with a zero timeout.
	(Fkqueue_add_watch): Adapt docstring.  Support directory events.
	Compute initial directory listing.  Close file descriptor in case
	of errors.
	(syms_of_kqueue): Declare Qcreate.

2015-11-14  Eli Zaretskii  <eliz@gnu.org>

	Increment Emacs version on master branch

	* lisp/cus-edit.el (customize-changed-options-previous-release):
	Increase previous version to 24.5.

	* configure.ac:
	* msdos/sed2v2.inp: Bump version to 25.1.50.

2015-11-13  Xue Fuqiao  <xfq.free@gmail.com>

	Mention CONTRIBUTE in README

	Mention CONTRIBUTE in README, since it was moved from etc/ to root.
	* etc/TODO: Remove the reference to `etc/CONTRIBUTE'.
	* README: Mention CONTRIBUTE.

2015-11-13  Wilson Snyder  <wsnyder@wsnyder.org>

	Update verilog-mode.el to 2015-11-09-b121d60-vpo.

	* lisp/progmodes/verilog-mode.el (verilog-auto, verilog-delete-auto)
	(verilog-modi-cache-results, verilog-save-buffer-state)
	(verilog-save-font-no-change-functions): When internally suppressing change
	functions, use `inhibit-modification-hooks' and call
	`after-change-funtions' to more nicely work with user hooks.  Reported by
	Stefan Monnier.

	(verilog-auto, verilog-delete-auto, verilog-delete-auto-buffer):
	Create `verilog-delete-auto-buffer' to avoid double-calling
	fontification hooks.

	(verilog-restore-buffer-modified-p, verilog-auto)
	(verilog-save-buffer-state): Prefer restore-buffer-modified-p over
	set-buffer-modified-p. Reported by Stefan Monnier.

	(verilog-diff-auto, verilog-diff-buffers-p)
	(verilog-diff-ignore-regexp): Add `verilog-diff-ignore-regexp'.

	(verilog-auto-inst-port, verilog-read-sub-decls-expr): Fix
	AUTOINST with unpacked dimensional parameters, bug981. Reported by
	by Amol Nagapurkar.

	(verilog-read-decls, verilog-read-sub-decls-line): Avoid unneeded
	properties inside internal structures. No functional change
	intended.

2015-11-11  Wolfgang Jenkner  <wjenkner@inode.at>

	Build fixes for kqueue support.

	* src/kqueue.c (Fkqueue_add_watch): O_BINARY is not a POSIX open(3)
	flag.

	* configure.ac (HAVE_KQUEUE): There is no pkg-config module for native
	kqueue on *BSD.

2015-11-11  Michael Albinus  <michael.albinus@gmx.de>

	Continue kqueue implementation

	* lisp/filenotify.el (file-notify-handle-event)
	(file-notify-callback): Enable trace messages.

	* src/kqueue.c: Include also <sys/types.h>.
	(kqueue_callback): Remove watch in case of NOTE_DELETE or NOTE_RENAME.
	(Fkqueue_rm_watch, Fkqueue_valid_p): New functions.
	(syms_of_kqueue): Add them.

2015-11-11  Michael Albinus  <michael.albinus@gmx.de>

	Work on kqueue

	* lisp/filenotify.el (file-notify--library)
	(file-notify-descriptors, file-notify-callback)
	(file-notify-add-watch, file-notify-rm-watch)
	(file-notify-valid-p): Add kqueue support.

	* src/keyboard.c (make_lispy_event): Check also for HAVE_KQUEUE.

2015-11-11  Michael Albinus  <michael.albinus@gmx.de>

	Add kqueue support

	* configure.ac (--with-file-notification): Add kqueue.
	(top): Remove special test for "${HAVE_NS}" and
	${with_file_notification}, this is handled inside gfilenotify
	tests.  Add kqueue tests.  Use NOTIFY_CFLAGS and NOTIFY_LIBS
	instead of library specific variables.

	* src/Makefile.in: Use NOTIFY_CFLAGS and NOTIFY_LIBS.

	* src/emacs.c (main): Call globals_of_kqueue and syms_of_kqueue.

	* src/kqueue.c: New file.

	* src/lisp.h: Declare extern globals_of_kqueue and syms_of_kqueue.

This file records repository revisions from
commit 9d56a21e6a696ad19ac65c4b405aeca44785884a (exclusive) to
commit c8ffca525c60e4a17d9687d92e3304bb27a8d446 (inclusive).
See ChangeLog.1 for earlier changes.

;; Local Variables:
;; coding: utf-8
;; End:

  Copyright (C) 2015-2018 Free Software Foundation, Inc.

  This file is part of GNU Emacs.

  GNU Emacs is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  GNU Emacs is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.
