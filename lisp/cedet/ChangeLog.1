2015-02-22  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes
	* semantic/doc.el (semantic-documentation-comment-preceding-tag):
	Rename from semantic-documentation-comment-preceeding-tag.  All
	uses changed.  Leave an obsolete alias behind.

2015-02-16  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/db-el.el (semanticdb-elisp-sym->tag): Fix copy&paste error
	(semanticdb-project-database => sym).  Avoid eieio--class-public-a
	when possible.

2015-02-04  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use cl-generic instead of EIEIO's defgeneric/defmethod.
	* **/*.el: Mechanically replace all calls to defmethod/defgeneric by
	calls to cl-defmethod/cl-defgeneric.
	* srecode/table.el:
	* srecode/fields.el:
	* srecode/dictionary.el:
	* srecode/compile.el:
	* semantic/debug.el:
	* semantic/db-ref.el:
	* ede/base.el:
	* ede/auto.el:
	* ede.el: Require `cl-generic'.

2015-01-07  Stefan Monnier  <monnier@iro.umontreal.ca>

	Don't use <class> as a variable and don't assume that <class>-list-p is
	automatically defined.

	* ede/speedbar.el (ede-speedbar-compile-line)
	(ede-speedbar-get-top-project-for-line):
	* ede.el (ede-buffer-belongs-to-target-p)
	(ede-buffer-belongs-to-project-p, ede-build-forms-menu)
	(ede-add-project-to-global-list):
	* semantic/db-typecache.el (semanticdb-get-typecache):
	* semantic/db-file.el (semanticdb-load-database):
	* semantic/db-el.el (semanticdb-elisp-sym->tag):
	* semantic/db-ebrowse.el (semanticdb-ebrowse-load-helper):
	* ede/project-am.el (project-am-preferred-target-type):
	* ede/proj.el (ede-proj-load):
	* ede/custom.el (ede-customize-current-target, ede-customize-target):
	* semantic/ede-grammar.el ("semantic grammar"):
	* semantic/scope.el (semantic-scope-reset-cache)
	(semantic-calculate-scope):
	* srecode/map.el (srecode-map-update-map):
	* srecode/insert.el (srecode-insert-show-error-report)
	(srecode-insert-method, srecode-insert-include-lookup)
	(srecode-insert-method):
	* srecode/fields.el (srecode-active-template-region):
	* srecode/compile.el (srecode-flush-active-templates)
	(srecode-compile-inserter): Don't use <class> as a variable.
	Use `oref-default' for class slots.

	* semantic/grammar.el (semantic-grammar-eldoc-last-data): New var.
	(semantic-grammar-eldoc-get-macro-docstring): Use it instead of
	eldoc-last-data.
	* semantic/fw.el (semantic-exit-on-input): Use `declare'.
	(semantic-throw-on-input): Use `with-current-buffer'.
	* semantic/db.el (semanticdb-abstract-table-list): Define if not
	pre-defined.
	* semantic/db-find.el (semanticdb-find-tags-collector):
	Use save-current-buffer.
	(semanticdb-find-tags-collector): Don't use <class> as a variable.
	* semantic/complete.el (semantic-complete-active-default)
	(semantic-complete-current-matched-tag): Declare.
	(semantic-complete-inline-custom-type): Don't use <class> as a variable.
	* semantic/bovine/make.el (semantic-analyze-possible-completions):
	Use with-current-buffer.
	* semantic.el (semantic-parser-warnings): Declare.
	* ede/base.el (ede-target-list): Define if not pre-defined.
	(ede-with-projectfile): Prefer find-file-noselect over
	save-window-excursion.

2014-12-22  Stefan Monnier  <monnier@iro.umontreal.ca>

	* srecode/srt-mode.el (srecode-macro-help): Use eieio-class-children.

	* semantic/db.el (semanticdb-cache-get): Prefer eieio-object-class over
	eieio--object-class.

	* semantic/db-el.el (semanticdb-elisp-sym->tag): Prefer find-class over
	class-v.

	* ede/generic.el (ede-find-target): Prefer \` and \' to ^ and $.

2014-12-14  Dmitry Gutov  <dgutov@yandex.ru>

	* semantic.el (semantic-analyze-completion-at-point-function)
	(semantic-analyze-notc-completion-at-point-function)
	(semantic-analyze-nolongprefix-completion-at-point-function):
	Do nothing if the current buffer is not using Semantic (bug#19077).

2014-12-14  Paul Eggert  <eggert@cs.ucla.edu>

	* semantic/lex-spp.el (semantic-lex-spp-analyzer-do-replace):
	Rename from semantic-lex-spp-anlyzer-do-replace.

2014-12-08  Matt Curtis  <matt.r.curtis@gmail.com>  (tiny change)

	* pulse.el (pulse-momentary-highlight-one-line): Respect the POINT
	argument (bug#17260).

2014-11-09  Eric Ludlam  <zappo@gnu.org>

	* semantic.el (semantic-mode): Add/remove 3
	completion-at-point-functions.
	(semantic-completion-at-point-function): Remove.
	(semantic-analyze-completion-at-point-function)
	(semantic-analyze-notc-completion-at-point-function)
	(semantic-analyze-nolongprefix-completion-at-point-function):
	New completion at point functions.

	* semantic/doc.el (semantic-doc-snarf-comment-for-tag): Fix case
	when comment-end is empty string.

	* semantic/debug.el
	(semantic-debug-parser-debugger-source): New buffer local
	variable.
	(semantic-debug-interface): Add 'nil' initform to overlays.
	(semantic-debug-mode): Remove read-only tags from buffers on exit.
	(semantic-debug): Add autoload cookie.  Force the language
	specific debugger to load.

	* semantic/db.el (generic::semanticdb-full-filename): New generic
	method to allow this method to be used on buffer names via an
	associated database.

	* semantic/symref.el
	(semantic-symref-cleanup-recent-buffers-fcn): When cleaning up
	buffers, don't clean up buffers that are being used (i.e., in a
	window) when the hook fires.
	(semantic-symref-recently-opened-buffers): New tracking variable.
	(semantic-symref-cleanup-recent-buffers-fcn): New hook fcn.
	(semantic-symref-result-get-tags): Move logic into
	`semantic-symref-hit-to-tag-via-buffer', and cleanup buffers via
	the symref cleanup function in post-command-hook.
	(semantic-symref-hit-to-tag-via-buffer): Logic that used to be
	from above.
	(semantic-symref-hit-to-tag-via-db): New.

	* semantic/analyze.el:
	(semantic-analyze-find-tag-sequence-default): If first entry in
	sequence is the only one, apply tagclass filter.
	(semantic-analyze-princ-sequence): Show slot even if empty.
	(semantic-analyze-find-tag-sequence)
	(semantic-analyze-find-tag-sequence-default): Add flags argument.
	Add support for forcing the final entry of the sequence to be of
	class variable.
	(semantic-analyze-find-tag): Fix bug where input class filter was
	ignored if there was a typecache match.
	(semantic-analyze-current-context-default): For assignments, the
	assignee now must be of class variable.

	* semantic/analyze/complete.el
	(semantic-analyze-possible-completions-default):
	Add 'no-longprefix' flag.  When used, the prefix and prefixtypes are
	shortened to just the last symbol.

	* semantic/bovine/c.el (semantic-c-do-lex-if): Catch errors from
	'hideif', and push to the parser warning stack.
	(semantic-lex-cpp-define): When a comment is at the end of a
	macro, do not subtract an extra 1 from the found position.
	Fixes bug with: #define foo (a)/**/ adding an extra ')' to the stream.

	* semantic/bovine/scm.el (semantic-lex-scheme-symbol):
	Allow symbols to be one char long.

	* semantic/bovine/grammar.el
	(bovine-grammar-calculate-source-on-path): New.
	(bovine-grammar-setupcode-builder): Use it.

	* ede.el (ede/detect): New require.
	(ede-version): Bump version
	(ede-initialize-state-current-buffer): Use new
	`ede-detect-directory-for-project' to detect projects first
	instead of depending on currente dir only.
	(ede-delete-project-from-global-list): New.
	(ede-flush-deleted-projects): Use above.
	(ede-check-project-query-fcn): New variable
	(ede-check-project-directory): Use above when querying the user.
	Added to support unit testing of this security measure.
	(ede-initialize-state-current-buffer):
	Use `ede-directory-project-cons' instead of the -detect- fcn to take
	advantage of the cache.  Pass found project into
	`ede-load-project-file'.
	(ede-load-project-file): Add new input DETECTIN.
	(ede-rescan-toplevel): Get the proj root a better way.
	(ede-load-project-file): Return the loaded object.  When asking
	for existing project, ask for an exact match.
	(ede-initialize-state-current-buffer): Simplify some conditional
	logic.
	(ede-load-project-file): Simplify conditional logic.
	(ede-global-list-sanity-check): New Testing fcn.
	(ede-parent-project): Replace old code with call to faster
	`ede-find-subproject-for-directory'.
	(ede-load-project-file):
	Use `ede-directory-get-toplevel-open-project' instead of above
	deleted.  Rename "pfc" to "autoloader".
	Use `ede-directory-project-cons' to detect a project.  Delete no
	project found case where we search up the tree.

	* ede/auto.el (ede-project-autoload): Fix doc typo.
	Add `:root-only' slot.
	(ede-auto-load-project): Doc update: warn to not use.
	(ede-dir-to-projectfile): Delete.
	(ede-project-autoload-dirmatch): Add subdir-only slot.
	Make configdatastash unbound by default.
	(ede-do-dirmatch): If subdir-only is true, then don't allow exact
	matches.  Account for configdatastash as unbound.  Assume value of
	nil means no tool installed.  Make sure loaded path matches from
	beginning.  Stash the regexp, not the raw string.
	(ede-project-class-files): Note that makefile and automake are not
	root only.
	(ede-auto-detect-in-dir): New (for use with `ede/detect.el').
	(ede-project-dirmatch-p): Delete.
	(ede-project-root-directory): Remove body, return nil.
	(ede-project-autoload): :proj-root-dirmatch can be null & doc fix.
	(ede-auto-detect-in-dir): If there is no :proj-file, check for a
	dirmatch.

	* ede/generic.el (ede/config): Replace require of ede.
	(ede-generic-new-autoloader): Generic projects are now safe by
	default.  Note this is NOT a root only project.
	(project-rescan, ede-project-root, ede-generic-target-java)
	(ede-java-classpath, ede-find-subproject-for-directory): New.
	(ede-enable-generic-projects): Add new autoloaders for git, bzr,
	hg, sv, CVS.
	(ede-generic-vc-project)
	(ede-generic-vc-project::ede-generic-setup-configuration): New.
	(ede-generic-config): Remove slots: c-include-path,
	c-preprocessor-table, c-preprocessor-files, classpath,
	build-command, debug-command, run command.  Inherit from
	ede-extra-config-build, ede-extra-config-program.
	Make run-command :value match :custom so only strings are accepted.
	Add some more :group slot specifiers.
	(ede-generic-project): Add mixins `ede-project-with-config-c' and
	`ede-project-with-config-java'. Inherit from
	`ede-project-with-config-build',
	`ede-project-with-config-program'.  Subclass
	`ede-project-with-config'.  Remove duplication from new baseclass.
	(ede-generic-target): Inherit from `ede-target-with-config-build',
	`ede-target-with-config-program'. Subclass `ede-target-with-config'.
	(ede-generic-target-c-cpp): Add mixin `ede-target-with-config-c'.
	(ede-generic-target-java): Add mixin `ede-target-with-config-java'.
	(ede-preprocessor-map, ede-system-include-path)
	(edejava-classpath): Delete, moved to config.el.
	(project-compile-project, project-compile-target)
	(project-debug-target, project-run-target): Delete.
	(ede-generic-get-configuration, ede-generic-setup-configuration)
	(ede-commit-project, project-rescan)
	(ede-generic-project::ede-customize)
	(ede-generic-target::ede-customize)
	(ede-generic-config::eieio-done-customizing)
	(ede-generic-config::ede-commit): Delete.  Subsumed by new
	baseclass.
	(ede-preprocessor-map, ede-system-include-path)
	(project-debug-target, project-run-target): Call new
	`ede-config-get-configuration' instead of old version.
	(ede-generic-load): Do not add to global list here.

	* ede/files.el (ede-find-project-root)
	(ede-files-find-existing)
	(ede-directory-get-toplevel-open-project-new): Delete.
	(ede-project-root-directory): Use `ede-project-root' first.
	(ede-project-directory-remove-hash)
	(ede--directory-project-from-hash)
	(ede--directory-project-add-description-to-hash): Rename to make
	internal symbols (via --).  Expand input dir first.
	(ede-directory-project-p): Doc fix (note obsoleted.)
	(ede-toplevel-project-or-nil): Alias to `ede-toplevel-project'.
	(ede-toplevel-project): Doc Fix.  Delete commented out old code.
	Simplify returning result from ede-detect-directory-for-project.
	(ede-directory-get-open-project): Support when
	inodes are disabled.  If disabled to str compare on root project.
	(ede-directory-get-toplevel-open-project): Enabled nested
	projects.  When doing directory name matching, save the 'short'
	version of an answer (non-exact match) and eventually select the
	shortest answer at the end.  Expand the filename of tested
	projects.  Better support for when inodes are disabled.
	Add 'exact' option so that it will return a project that is an exact
	match.
	(ede-find-subproject-for-directory): Small optimization to run
	`file-truename' less often.
	(ede-directory-project-p): Move content, then use
	`ede-directory-project-cons'.
	Use `ede-detect-directory-for-project', replacing old detection loop.
	(ede-directory-project-cons): New, from above.
	(ede-toplevel-project): Toss old scanning code.
	Use `ede-detect-directory-for-project' instead.
	(ede-directory-get-toplevel-open-project-new): New.

	* ede/linux.el (ede-linux-project-root): Delete.
	(ede-project-autoload): Remove dirmatch entry - it is no longer
	needed.

	* ede/proj.el (project-rescan): Replace direct
	manipulation of `ede-projects' with equivalent and better
	functions.
	(ede-proj-load): Replace call to test if dir has project to
	explicity ask filesystem if Project.ede is there.

	* ede/config.el:
	* ede/detect.el: New files.

	* ede/project-am.el (project-run-target): Add "./" to program to
	run for systems where '.' isn't in PATH.
	(project-am-load): Remove old code regarding `ede-constructing'.
	Just read in the makefiles.

	* ede/linux.el (ede-linux-load): Do not add to global list here.
	Don't check for existing anymore.
	(project-rescan): New.
	(ede-linux-project-list, ede-linux-file-existing): Delete.
	(ede-linux-project-root): Delete body.  Need symbol for autoloads
	for now.
	(ede-linux-project): No longer instance tracker.
	(ede-project-autoload): Don't provide :proj-root

	* ede/emacs.el (ede-emacs-load): Do not add project to global list
	here.  Don't look for existing first.
	(ede-project-autoload): Remove dirmatch entry - it is no longer
	needed.  Don't provide proj-root anymore.
	(ede-emacs-project-list, ede-emacs-file-existing): Delete.
	(ede-emacs-project-root): Remove body (need symbol for loaddefs
	still).
	(ede-emacs-project): Do not instance track anymore.

	* ede/cpp-root.el (initialize-instance): Remove commented code.
	Add note about why we are adding the project to the master list.
	Make sure if we are replacing a prev version, remove from global
	list.
         (ede-cpp-root-file-existing)
	(ede-cpp-root-project-file-for-dir)
	(ede-cpp-root-count, ede-cpp-root-project-root, ede-cpp-root-load)
	(ede-project-autoload cpp-root): Delete.
	(ede-project-root-directory): Return :directory instead of
	calculating from :file.
	(project-rescan): New.

	* ede/base.el (ede-toplevel): Only use buffer cached value if
	subproj not passed in.

	* srecode/java.el (srecode-semantic-handle-:java): Fix case when
	an EDE project didn't support java paths.

2014-11-09  David Engster  <dengste@eml.cc>

	* ede/proj-elisp.el (ede-proj-target-elisp::ede-proj-tweak-autoconf):
	Kill buffer after saving modified elisp-comp script, so as to avoid
	"file has changed on disk; really edit the buffer" questions when
	script gets rewritten.

2014-10-29  Paul Eggert  <eggert@cs.ucla.edu>

	Simplify use of current-time and friends.
	* srecode/args.el (srecode-semantic-handle-:time):
	Don't call current-time twice to get the current time stamp,
	as this can lead to inconsistent results.

2014-10-24  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/complete.el: Require semantic/db-find.

2014-10-20  Glenn Morris  <rgm@gnu.org>

	* Merge in all changes up to 24.4 release.

2014-10-15  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/wisent/comp.el (wisent-defcontext): Move declarations
	outside of eval-when-compile.  Use `declare'.
	(wisent-with-context): Add `defvar' declarations in case this macro is
	used in a file compiled with lexical-binding.
	(wisent-semantic-action-expand-body): Avoid add-to-list on local var.

2014-09-22  David Engster  <deng@randomsample.de>

	* ede/emacs.el (ede-emacs-version): Do not call 'egrep' to
	determine Emacs version (it was dead code anyway).  Make sure that
	configure.ac or configure.in exist.  (Bug#18476)

2014-06-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/ia.el (semantic-ia-complete-symbol-menu): Use posn-at-point
	instead of senator-completion-menu-point-as-event; un-comment, tho keep
	the "no smart completion" fallback commented since it still doesn't
	work.

2014-05-01  Glenn Morris  <rgm@gnu.org>

	* ede.el (ede-project-directories, ede-check-project-directory):
	* semantic/ia-sb.el (semantic-ia-sb-show-doc):
	* semantic/tag.el (semantic-tag-in-buffer-p):
	* semantic/bovine/c.el (semantic-tag-abstract-p):
	Doc fixes (replace `iff').

2014-04-01  Glenn Morris  <rgm@gnu.org>

	* ede/emacs.el (ede-emacs-version): Update AC_INIT regexp.  (Bug#17160)

2014-03-29  Glenn Morris  <rgm@gnu.org>

	* ede/dired.el (ede-dired-minor-mode): Add autoload cookie.
	(generated-autoload-file, generated-autoload-load-name):
	Set file-local values.
	* ede.el: Load ede/loaddefs at compile time too.
	(ede-dired-minor-mode): Remove hand-written autoload.

2014-03-04  Glenn Morris  <rgm@gnu.org>

	* semantic/util.el (semantic-complete-symbol):
	Replace use of obsolete argument of display-completion-list.

2014-02-03  Glenn Morris  <rgm@gnu.org>

	* semantic/senator.el (senator-copy-tag-to-register):
	Use register-read-with-preview, if available.

2014-01-13  Eric Ludlam  <zappo@gnu.org>

	* semantic/analyze/refs.el (semantic-analyze-refs-impl): Fix typo
	in a doc string.

	* semantic/ia.el (semantic-ia-complete-symbol): Ignore case if
	prefix is all lower case.
	(semantic-ia-fast-jump): Push mark before jumping to an include file.

	* semantic/complete.el (semantic-displayor-point-position):
	Calculate if the toolbar is on the left when calculating point
	position.

2014-01-08  Paul Eggert  <eggert@cs.ucla.edu>

	Spelling fixes.
	* semantic/decorate/include.el (semantic-decoration-mouse-3):
	Rename from semantic-decoratiton-mouse-3.  All uses changed.

2013-12-28  Glenn Morris  <rgm@gnu.org>

	* ede/linux.el (project-linux-build-directory-default)
	(project-linux-architecture-default): Fix custom types.  Add version.

2013-12-12  David Engster  <deng@randomsample.de>

	* semantic/analyze.el (semantic-analyze-find-tag-sequence-default):
	Always add scope to the local miniscope for each type.  Otherwise,
	structure tags are not analyzed correctly.  Also, always search
	the extended miniscope even when not dealing with types.

	* semantic/ctxt.el (semantic-get-local-variables-default):
	Also try to parse local variables for buffers which are currently
	marked as unparseable.  Otherwise, it is often impossible to
	complete local variables.

	* semantic/scope.el (semantic-analyze-scoped-types-default): If we
	cannot find a type in the typecache, also look into the types
	we already found.  This is necessary since in C++, a 'using
	namespace' can be dependend on a previous one.
	(semantic-completable-tags-from-type): When creating the list of
	completable types, pull in types which are referenced through
	'using' statements, and also preserve their filenames.

	* semantic/bovine/c.el (semantic/analyze/refs): Require.
	(semantic-analyze-tag-references): New override.  Mainly copied
	from the default implementation, but if nothing could be found (or
	just the tag itself), drop all namespaces from the scope and
	search again.  This is necessary for implementations which are
	defined outside of the namespace and only pull those in through
	'using' statements.
	(semantic-ctxt-scoped-types): Go through all tags around point and
	search them for using statements.  In the case for using
	statements outside of function scope, append them in the correct
	order instead of using 'cons'.  This is important since using
	statements may depend on previous ones.
	(semantic-expand-c-tag-namelist): Do not try to parse struct
	definitions as default values.  The grammar parser seems to return
	the point positions slightly differently (as a cons instead of a
	list).  Also, set parent for typedefs to 'nil'.  It does not
	really make sense to set a parent class for typedefs, and it can
	also lead to endless loops when calculating scope.
	(semantic-c-reconstitute-token): Change handling of function
	pointers; instead of seeing them as variables, handle them as
	functions with a 'function-pointer' attribute.  Also, correctly
	deal with function pointers as function arguments.
	(semantic-c-reconstitute-function-arglist): New function to parse
	function pointers inside an argument list.
	(semantic-format-tag-name): Use 'function-pointer' attribute
	instead of the old 'functionpointer-flag'.
	(semantic-cpp-lexer): Use new `semantic-lex-spp-paren-or-list'.

	* semantic/bovine/gcc.el (semantic-gcc-setup): Add 'features.h' to
	the list of files whose preprocessor symbols are included.
	This pulls in things like __USE_POSIX and similar.

	* semantic/format.el (semantic-format-tag-prototype-default):
	Display default values if available.

	* semantic/analyze/refs.el (semantic-analyze-refs-impl)
	(semantic-analyze-refs-proto): Add 'default-value' as ignorable in
	call to `semantic-tag-similar-p'.

	* semantic/db-mode.el (semanticdb-semantic-init-hook-fcn):
	Always set buffer for `semanticdb-current-table'.

	* semantic/db.el (semanticdb-table::semanticdb-refresh-table):
	The previous change turned up a bug in this method.  Since the current
	table now correctly has a buffer set, the first clause in the
	`cond' would be taken, but there was a `save-excursion' missing.

	* semantic/lex-spp.el (semantic-c-end-of-macro): Declare.
	(semantic-lex-spp-token-macro-to-macro-stream): Deal with macros
	which open/close a scope.  For this, leave an overlay if we
	encounter a single open paren and return a semantic-list in the
	lexer.  When this list gets expanded, retrieve the old position
	from the overlay.  See the comments in the function for further
	details.
	(semantic-lex-spp-find-closing-macro): New function to find the
	next macro which closes scope (i.e., has a closing paren).
	(semantic-lex-spp-replace-or-symbol-or-keyword): Go to end of
	closing macro if necessary.
	(semantic-lex-spp-paren-or-list): New lexer to specially deal with
	parens in macro definitions.

	* semantic/decorate/mode.el (semantic-decoration-mode): Do not
	decorate available tags immediately but in an idle timer, since
	EDE will usually not be activated yet, which will make it
	impossible to find project includes.

	* semantic/decorate/include.el
	(semantic-decoration-on-includes-highlight-default):
	Remove 'unloaded' from throttle when decorating includes, otherwise all
	would be loaded.  Rename 'table' to 'currenttable' to make things
	clearer.

	* ede/linux.el (cl): Require during compile.

2013-12-12  Lluís Vilanova  <xscript@gmx.net>

	* ede/linux.el (project-linux-build-directory-default)
	(project-linux-architecture-default): Add customizable variables.
	(ede-linux-project): Add additional slots to track Linux-specific
	information (out-of-tree build directory and selected
	architecture).
	(ede-linux--get-build-directory, ede-linux--get-archs)
	(ede-linux--detect-architecture, ede-linux--get-architecture)
	(ede-linux--include-path): Add function to detect Linux-specific
	information.
	(ede-linux-load): Set new Linux-specific information when creating
	a project.
	(ede-expand-filename-impl): Use new and more accurate include
	information.

2013-12-12  Eric Ludlam  <zappo@gnu.org>

	* semantic/scope.el (semantic-calculate-scope): Return a clone of
	the scopecache, so that everyone is working with its own (shallow)
	copy.  Otherwise, if one caller is resetting the scope, it would
	be reset for all others working with the scope cache as well.

2013-12-12  Alex Ott  <alexott@gmail.com>

	* ede/generic.el (project-run-target): Remove incorrect require.

	* semantic/format.el (semantic-format-tag-prototype-default):
	Use concat only for strings.

2013-11-30  Glenn Morris  <rgm@gnu.org>

	Stop keeping (most) generated cedet grammar files in the repository.
	* semantic/bovine/grammar.el (bovine--make-parser-1):
	New function, split from bovine-make-parsers.
	(bovine-make-parsers): Use bovine--make-parser-1.
	(bovine-batch-make-parser): New function.
	* semantic/wisent/grammar.el (wisent--make-parser-1):
	New function, split from wisent-make-parsers.
	(wisent-make-parsers): Use wisent--make-parser-1.
	(wisent-batch-make-parser): New function.
	* semantic/db.el (semanticdb-save-all-db):
	Avoid prompting in batch mode.
	* semantic/grammar.el (semantic-grammar-footer-template):
	Disable version-control and autoloads in the output.
	(semantic-grammar-create-package):
	Add option to return nil if output is up-to-date.
	* semantic/bovine/c-by.el, semantic/bovine/make-by.el:
	* semantic/bovine/scm-by.el, semantic/wisent/javat-wy.el:
	* semantic/wisent/js-wy.el, semantic/wisent/python-wy.el:
	* srecode/srt-wy.el: Remove generated files from repository.

2013-11-16  Barry O'Reilly  <gundaetiapo@gmail.com>

	* semantic/fw.el (semantic-exit-on-input)
	(semantic-throw-on-input): Restore point before
	accept-process-output because timers which redisplay can run.
	(Bug#15045)

2013-11-03  Johan Bockgård  <bojohan@gnu.org>

	* semantic/lex.el (semantic-lex-start-block)
	(semantic-lex-end-block): Move after definition of
	semantic-lex-token macro.

2013-10-28  Barry O'Reilly  <gundaetiapo@gmail.com>

	* semantic/idle.el (semantic-idle-symbol-highlight)
	(semantic-idle-symbol-highlight-face): Define face with defface
	and obsolete the replaced one defined with defvar.  (Bug#15745)
	* pulse.el (pulse-momentary-highlight-overlay)
	(pulse-momentary-highlight-region): Fix typo in doc

2013-10-30  Glenn Morris  <rgm@gnu.org>

	* semantic/grammar.el (semantic-grammar-mode-keywords-2)
	(semantic-grammar-mode-keywords-3): Handle renamed font-lock vars.

2013-10-20  Johan Bockgård  <bojohan@gnu.org>

	* semantic/db-mode.el (global-semanticdb-minor-mode):
	Remove hooks correctly.
	(semanticdb-toggle-global-mode): Pass `toggle' to minor mode function.

2013-09-28  Leo Liu  <sdl.web@gmail.com>

	* semantic/texi.el (semantic-analyze-possible-completions):
	Use ispell-lookup-words instead.  (Bug#15460)

2013-09-20  Glenn Morris  <rgm@gnu.org>

	* semantic.el (semantic-new-buffer-fcn-was-run, semantic-active-p):
	Move from here...
	* semantic/fw.el: ...to here.

2013-09-18  Glenn Morris  <rgm@gnu.org>

	* semantic/find.el (semantic-brute-find-first-tag-by-name):
	Replace obsolete function assoc-ignore-case with assoc-string.

	* semantic/complete.el (tooltip-mode, tooltip-frame-parameters)
	(tooltip-show): Declare.

2013-09-17  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/symref/list.el (semantic-symref-results-mode):
	Use define-derived-mode.
	(semantic-symref-produce-list-on-results): Set up the results here
	instead of in semantic-symref-results-mode.  Move after
	semantic-symref-current-results's defvar now that it refers to that var.
	(semantic-symref-auto-expand-results)
	(semantic-symref-results-summary-function)
	(semantic-symref-results-mode-hook): Remove redundant :group arg.
	(semantic-symref, semantic-symref-symbol, semantic-symref-regexp):
	Initialize directly in the let.

2013-09-13  Glenn Morris  <rgm@gnu.org>

	* semantic/ia.el (semantic-ia-complete-symbol-menu):
	Comment it out, since it cannot work.  (Bug#14522)

2013-09-12  Glenn Morris  <rgm@gnu.org>

	* semantic/find.el (semantic-find-first-tag-by-name):
	Replace obsolete function assoc-ignore-case with assoc-string.

2013-09-11  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/grammar.el (semantic-grammar-mode): Use define-derived-mode.
	(semantic-grammar-mode-syntax-table): Rename from
	semantic-grammar-syntax-table.
	(semantic-grammar-mode-map): Rename from semantic-grammar-map.
	* data-debug.el (data-debug-mode-map): Rename from data-debug-map.
	(data-debug-mode): Use define-derived-mode.

2013-09-05  Glenn Morris  <rgm@gnu.org>

	* semantic/fw.el (semantic-make-local-hook):
	Simplify by dropping Emacs <= 20.

2013-07-29  David Engster  <deng@randomsample.de>

	* cedet.el (cedet-packages): Remove speedbar since its
	development does no longer happens in CEDET upstream but in Emacs
	proper.  Also remove cedet-contrib and cogre since those are only
	in upstream.

	* semantic/analyze/fcn.el (semantic-analyze-type-to-name): If TYPE
	has a parent, return a fully qualified name.

	* semantic/decorate/mode.el
	(semantic-decoration-on-includes-p-default)
	(semantic-decoration-on-includes-highlight-default): Declare for
	byte compiler.

	* semantic/wisent/python.el (semantic/format): New require.

2013-07-27  Eric Ludlam  <zappo@gnu.org>

	* semantic/edit.el (semantic-edits-splice-remove):
	Wrap debug message removing middle tag in semantic-edits-verbose-flag
	check.

2013-07-27  David Engster  <deng@randomsample.de>

	* semantic/bovine/el.el (semantic/db-el): New require.

	* semantic/db-el.el (semanticdb-normalize-one-tag): It might be
	that a symbol comes from a file but cannot be found in its table.
	This happens for instance when a symbol was dynamically created
	through a macro like `defstruct'.  In this case, return the
	original tag.
	(semanticdb-elisp-sym->tag): Deal with autoloaded functions, where
	the argument list is not available until the file is loaded.

2013-06-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* data-debug.el, cedet-idutils.el: Neuter the "Version:" header.

2013-06-19  Glenn Morris  <rgm@gnu.org>

	* semantic/idle.el (define-semantic-idle-service):
	No need to use eval-and-compile, progn will do.

	* semantic/decorate/mode.el (define-semantic-decoration-style):
	Doc fix.
	(define-semantic-decoration-style): 'function is not an accepted
	value for autoload's "type" argument.  Might as well use the default.

2013-06-18  Glenn Morris  <rgm@gnu.org>

	* semantic/ctxt.el (semantic-ctxt-end-of-symbol-default):
	Remove unused free variable `symlist'.

2013-06-02  Eric Ludlam  <zappo@gnu.org>

	* semantic/edit.el (semantic-change-function):
	Use `save-match-data' around running hooks.

	* semantic/decorate/mode.el
	(semantic-decorate-style-predicate-default)
	(semantic-decorate-style-highlighter-default): New.
	(semantic-decoration-mode): Do not require
	`semantic/decorate/include' anymore.
	(semantic-toggle-decoration-style): Error if an unknown decoration
	style is toggled.
	(define-semantic-decoration-style): Add new :load option.
	When :load is specified, add autoload tokens for the definition
	functions so that code is loaded when the mode is used.
	(semantic-decoration-on-includes): New autoload definition for
	highlighting includes.

	* semantic/bovine/c.el (semantic-lex-c-ifdef): Allow some misc
	characters to appear after the tested variable.

	* semantic/ede-grammar.el (project-compile-target): Calculate full
	src name via ede-expand-filename instead of the crutch of the
	current buffer.  Enables this target to compile in batch mode.

	* semantic/idle.el
	(semantic-idle-symbol-maybe-highlight): Wrap highlighting of
	remote symbol with `save-excursion'.
	(semantic-idle-scheduler-work-parse-neighboring-files): Instead of
	using directory-files on each found mode pattern, collect all the
	patterns for the current mode, and then for each file, see if it
	matches any of them.  If it does, parse the file.  (Patch
	inspiration from Tomasz Gajewski.)

	* semantic/ctxt.el (semantic-ctxt-end-of-symbol): New.
	(semantic-ctxt-current-symbol-default): New.

	* semantic/bovine/el.el (semantic-default-elisp-setup):
	Add autoload cookie.  Explain existence.
	(footer): Add local variable for loaddefs.

	* semantic/db.el (semanticdb-file-table-object): Add new filter,
	only checking for regular files too.

	* semantic/wisent/python.el
	(semantic-format-tag-abbreviate): New override.  Cuts back on size
	of code tags.

	* srecode/compile.el (srecode-compile-templates): Fix warning
	punctuation.  Remove status messages to clean up testing output.

	* ede/base.el (ede-project-placeholder-cache-file): Update doc to
	mention 'nil' value.
	(ede-save-cache): Disable cache save if file is nil.

	* ede.el (ede-initialize-state-current-buffer): Flush deleted
	projects.
	(global-ede-mode): Always append our find-file-hook to the end.
	(ede-flush-deleted-projects): New command.

	* ede/cpp-root.el (ede-preprocessor-map): Protect against init
	problems.

	* ede/proj.el (ede-proj-target): Add a new "custom" option for
	custom symbols representing a compiler or linker instead of
	restricting things to only the predefined compilers and linkers.

2013-06-02  David Engster  <dengste@eml.cc>

	* semantic.el (semantic-mode-map): To avoid showing showing
	Development menu twice, only disable menu item if menu-bar is
	actually enabled, otherwise the popup 'global menu' might display
	a disabled Development menu.

	* srecode/srt-wy.el: Regenerate.

2013-06-02  Pete Beardmore  <elbeardmorez@msn.com>

	* semantic/complete.el
	(semantic-displayor-show-request): Fix which slot in obj is set to
	the max tags.

2013-06-01  Glenn Morris  <rgm@gnu.org>

	* semantic/grammar.el (semantic-grammar-complete):
	Replace the obsolete function lisp-complete-symbol.

	* semantic/analyze/fcn.el (semantic-tag-similar-p): Autoload.

	* srecode/args.el, srecode/java.el: Require ede.

	* semantic/lex.el (semantic-lex-make-type-table): Fix transposed args.

2013-05-24  Glenn Morris  <rgm@gnu.org>

	* semantic/bovine/grammar.el (bovine-make-parsers):
	Avoid free variable `copyright-end'.

	* semantic/bovine/c-by.el (semantic-parse-region):
	* semantic/wisent/javat-wy.el (semantic-parse-region):
	* semantic/wisent/js-wy.el (semantic-parse-region):
	* semantic/wisent/python-wy.el (semantic-parse-region): Declare.

2013-05-22  Glenn Morris  <rgm@gnu.org>

	* ede/speedbar.el (ede-file-find, ede-tag-find):
	* semantic/sb.el (semantic-sb-token-jump):
	Use dframe-maybee-jump-to-attached-frame rather than speedbar- alias.

2013-05-15  Glenn Morris  <rgm@gnu.org>

	* semantic/symref/list.el (semantic-symref-auto-expand-results)
	(semantic-symref-results-mode-hook)
	(semantic-symref-results-summary-function): Fix :group.

2013-05-14  Glenn Morris  <rgm@gnu.org>

	* ede/simple.el, semantic/java.el: Set generated-autoload-load-name.

2013-05-11  Glenn Morris  <rgm@gnu.org>

	* ede/project-am.el, semantic/db-ebrowse.el, semantic/grammar.el:
	* semantic/sb.el, semantic/bovine/grammar.el, semantic/wisent/comp.el:
	* semantic/wisent/grammar.el, semantic/wisent/wisent.el:
	* srecode/fields.el: Set generated-autoload-load-name (for cus-load).

	* ede/locate.el (cedet-cscope-version-check)
	(cedet-cscope-support-for-directory):
	* semantic/grammar.el (semantic-grammar-wy--install-parser):
	Fix declarations.

	* ede/project-am.el (project-am-compile-project-command): Fix :type.

2013-05-09  Glenn Morris  <rgm@gnu.org>

	* semantic/db-find.el (semanticdb-find-throttle-custom-list):
	Fix value.

2013-04-27  David Engster  <deng@randomsample.de>

	* semantic/complete.el
	(semantic-collector-calculate-completions-raw):
	If `completionslist' is not set, refresh the cache if necessary and
	use it for completions.  This fixes the
	`semantic-collector-buffer-deep' collector (bug#14265).

2013-03-26  Leo Liu  <sdl.web@gmail.com>

	* semantic/senator.el (senator-copy-tag-to-register):
	Move register handling logic from register.el.  (Bug#14052)

2013-03-21  Eric Ludlam  <zappo@gnu.org>

	* semantic.el (navigate-menu): Yank Tag :enable.  Make sure
	`senator-tag-ring' is bound.
	(semantic-parse-region-default): Stop reversing the output of
	parse-whole-stream.
	(semantic-repeat-parse-whole-stream): Append returned tags
	differently, so they come out in the right order.

	* semantic/sb.el (semantic-sb-filter-tags-of-class): New option.
	(semantic-sb-fetch-tag-table): Filter tags being bucketed to
	exclude tags belonging to above filtered classes.

	* semantic/find.el (semantic-filter-tags-by-class): New function.

	* semantic/tag-ls.el (semantic-tag-similar-p-default):
	Add short-circuit in case tag1 and 2 are identical.

	* semantic/analyze/fcn.el
	(semantic-analyze-dereference-metatype-stack):
	Use `semantic-tag-similar-p' instead of 'eq' when comparing two tags
	during metatype evaluation in case they are the same, but not the
	same node.  (Tweaked patch from Tomasz Gajewski) (Tiny change)

	* semantic/db-find.el (semanticdb-partial-synchronize):
	Fix require to semantic/db-typecache to be correct.
	(semanticdb-find-tags-external-children-of-type): Make this a
	brutish search by default.

	* semantic/sort.el
	(semantic-tag-external-member-children-default): When calling
	`semanticdb-find-tags-external-children-of-type', pass in the
	input tag as the place to start searching for externally defined
	methods.

	* semantic/db-file.el (semanticdb-default-save-directory):
	Doc fix: Add ref to default value.

	* semantic/complete.el (semantic-complete-post-command-hook):
	When detecting if cursor is outside completion area, do so if cursor
	moves before start of overlay, or the original starting location
	of the overlay (i.e., if user deletes past beginning of the
	overlay region).
	(semantic-complete-inline-tag-engine): Initialize original start
	of `semantic-complete-inline-overlay'.

	* semantic/bovine/c.el (semantic-c-describe-environment):
	Update some section titles.  Test semanticdb table before printing it.
	(semantic-c-reset-preprocessor-symbol-map): Update
	`semantic-lex-spp-macro-symbol-obarray' outside the loop over all
	the files contributing to its value.
	(semantic-c-describe-environment): If there is an EDE project but
	no spp symbols from it, say so.

	* srecode/args.el (srecode-semantic-handle-:project): New argument
	handler.  Provide variable values if not in an EDE project.

	* srecode/srt-mode.el (srecode-template-mode): Fix typo on srecode
	name.

	* srecode/cpp.el (srecode-semantic-handle-:c): Replace all
	characters in FILENAME_SYMBOL that aren't valid CPP symbol chars.

	* srecode/map.el (srecode-map-validate-file-for-mode):
	Force semantic to load if it is not active in the template being added
	to the map.

	* srecode/srt.el: Add local variables for setting the autoload
	file name.
	(srecode-semantic-handle-:srt): New autoload cookie.

	* ede.el (ede-apply-preprocessor-map): Apply map to
	`semantic-lex-spp-project-macro-symbol-obarray' instead of the
	system one.  Add require for semantic.

	* ede/proj-elisp.el (ede-update-version-in-source): In case a file
	has both a version variable and a Version: comment, always use
	`call-next-method'.

	* ede/cpp-root.el (ede-set-project-variables): Delete.
	`ede-preprocessor-map' does the job this function was attempting
	to do with :spp-table.
	(ede-preprocessor-map): Update file tests to provide better
	messages.  Do not try to get symbols from a file that is the file
	in the current buffer.

	* ede/base.el (ede-project-placeholder): Add more documentation to
	:file slot.
	(ede-load-cache): Use `insert-file-contents' instead of
	`find-file-noselect' in order to avoid activating other tools.

2013-03-21  David Engster  <deng@randomsample.de>

	* semantic/bovine/c.el (semantic-get-local-variables): Also add a
	new variable 'this' if we are in an inline member function.
	For detecting this, we check overlays at point if there is a class
	spanning the current function.  Also, the variable 'this' has to
	be a pointer.

	* semantic/bovine/gcc.el (semantic-gcc-setup): Fail gracefully
	when querying g++ for defines returns an error.

	* srecode/srt-mode.el:
	* srecode/compile.el:
	* semantic/db-el.el:
	* semantic/complete.el:
	* ede.el:
	* srecode/table.el:
	* srecode/mode.el:
	* srecode/insert.el:
	* srecode/compile.el:
	* semantic/decorate/include.el:
	* semantic/db.el:
	* ede/auto.el:
	* srecode/dictionary.el:
	* semantic/ede-grammar.el:
	* semantic/db.el:
	* semantic/db-find.el:
	* semantic/db-file.el:
	* semantic/complete.el:
	* semantic/bovine/c.el:
	* semantic/analyze.el:
	* ede/util.el:
	* ede/proj.el:
	* ede/proj-elisp.el:
	* ede/pconf.el:
	* ede/locate.el:
	* ede.el: Adapt to EIEIO namespace cleanup: Rename `object-name'
	to `eieio-object-name', `object-set-name-string' to
	`eieio-object-set-name-string', `object-class' to
	`eieio-object-class', `class-parent' to `eieio-class-parent',
	`class-parents' to `eieio-class-parents', `class-children' to
	`eieio-class-children', `object-name-string' to
	`eieio-object-name-string', `object-class-fast' to
	`eieio--object-class'.  Also replace direct access with new
	accessor functions.

2013-03-21  Tomasz Gajewski  <tomga@wp.pl>  (tiny change)

	* ede/cpp-root.el (ede-project-autoload, initialize-instance):
	Fix EDE file symbol to match rename.  Fix ede-cpp-root symbol to
	include -project in name.

2013-03-21  Alex Ott  <alexott@gmail.com>

	* cedet-files.el (cedet-files-list-recursively): New.
	Recursively find files whose names are matching to given regex.

	* ede.el (ede-current-project): Rewrite to avoid imperative style.

	* ede/files.el (ede-find-file): Simplify code.

	* ede/base.el (ede-normalize-file/directory): Add function to
	normalize :file or :directory slots if they are missing.

	* ede/cpp-root.el (ede-cpp-root-project): Add compile-command
	slot.
	(project-compile-project): Compiles project using value specified
	in :compule-command slot or in compile-command local variable.
	Value of slot or local variable could be string or function that
	receives project and should return string that will be invoked as
	command.
	(project-compile-target): Invokes compilation of whole project.

	* ede/files.el (ede-find-project-root): New function to
	find root of project that contains specific file.
	(ede-files-find-existing): New function which checks presence of
	given directory in the list of registered projects.

2013-03-04  Paul Eggert  <eggert@cs.ucla.edu>

	* semantic/wisent/wisent.el (wisent): Stick to ASCII in the ASCII art.

	* semantic/wisent/javat-wy.el: Regenerate.

2012-11-19  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/fw.el (semantic-make-local-hook, semantic-mode-line-update):
	Simplify via CSE.

2012-11-16  David Engster  <deng@randomsample.de>

	* semantic/symref/list.el (semantic-symref-symbol):
	Use `semantic-complete-read-tag-project' instead of
	`semantic-complete-read-tag-buffer-deep', since the latter is not
	working correctly.

	* semantic/symref.el (semantic-symref-result-get-tags):
	Use `find-buffer-visiting' to follow symbolic links.

	* semantic/fw.el (semantic-find-file-noselect): Always set
	`enable-local-variables' to `:safe' when loading files.

2012-11-16  Glenn Morris  <rgm@gnu.org>

	* semantic/lex-spp.el (semantic-lex-spp-lex-text-string):
	* semantic/util.el (semantic-describe-buffer):
	* semantic/bovine/c.el (semantic-c-parse-lexical-token)
	(semantic-default-c-setup):
	Use new names for hooks rather than obsolete aliases.

2012-11-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/mru-bookmark.el (semantic-mru-bookmark-mode):
	* semantic/grammar.el (semantic-grammar-mode):
	* semantic/util-modes.el (semantic-highlight-edits-mode)
	(semantic-show-parser-state-mode): Avoid obsolete name
	semantic-edits-new-change-hooks (bug#12869).

2012-11-13  Glenn Morris  <rgm@gnu.org>

	* srecode/srt-mode.el (srecode-template-mode):
	Don't change global values of comment-start, comment-end.  (Bug#12781)

2012-10-25  David Engster  <deng@randomsample.de>

	* semantic/analyze.el (semantic-analyze-dereference-alias):
	New function to dereference aliases.
	(semantic-analyze-current-context-default): Use it.

	* semantic/grammar.el (semantic-grammar-create-package):
	* srecode/compile.el (srecode-compile-templates): Throw a proper
	error if semantic-mode is not enabled (bug#9968).

	Compiler warning fixes:

	* semantic.el (semantic-elapsed-time): Make it a defsubst.

	* srecode/dictionary.el (srecode-adebug-dictionary):
	Remove require for `semantic'.

	* srecode/map.el:
	* srecode/insert.el: Declare functions from `data-debug'.

	* semantic/grammar.el: Require `help-fns'.  Declare functions from
	`eldoc', which is required in function body.

	* srecode/java.el:
	* semantic/texi.el:
	* semantic/grammar-wy.el:
	* semantic/db-file.el:
	* semantic/db-el.el:
	* semantic/chart.el: Fix requires.

	* ede/locate.el: Remove useless requires.  Declare functions
	instead and require in functions when needed.

2012-10-23  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/db-file.el (semanticdb-save-database-functions):
	* semantic/lex.el (semantic-lex-reset-functions):
	* semantic/edit.el (semantic-change-functions)
	(semantic-edits-new-change-functions)
	(semantic-edits-delete-change-functions)
	(semantic-edits-reparse-change-functions): Don't use "-hooks" suffix.

2012-10-14  David Engster  <deng@randomsample.de>

	* semantic.el (semantic-error-if-unparsed): New function.
	Raise error if buffer was not parsed by Semantic (bug #12045).
	(navigate-menu, edit-menu, cedet-menu-map): Enable Semantic items
	only if buffer was parsed.  Also, replace ':active' with ':enable'
	where necessary.

	* semantic/wisent/python.el
	(semantic-python-get-system-include-path):
	Use `python-shell-internal-send-string' if available to query Python
	for system paths.

	* semantic/senator.el (senator-next-tag, senator-previous-tag)
	(senator-go-to-up-reference): Use `semantic-error-if-unparsed'.

	* semantic/complete.el (semantic-complete-jump-local)
	(semantic-complete-jump, semantic-complete-jump-local-members)
	(semantic-complete-self-insert): Use `semantic-error-if-unparsed'.
	(semantic-complete-inline-project): Fix autoload cookie.

	* semantic/analyze/complete.el
	(semantic-analyze-possible-completions): Check if buffer was
	parsed.  Only raise an error if function was called interactively,
	otherwise silently return nil.

	* cedet.el (cedet-menu-map): Fix copy&paste typo in menu creation.

2012-10-08  David Engster  <deng@randomsample.de>

	* semantic/bovine/el.el: Add `semantic-default-elisp-setup' to
	`emacs-lisp-mode-hook'.  This was accidentally removed during the
	CEDET update (2012-10-01T18:10:29Z!cyd@gnu.org).

2012-10-07  David Engster  <deng@randomsample.de>

	* semantic/wisent/python.el (semantic-ctxt-current-function)
	(semantic-ctxt-current-assignment): New overrides, simply
	returning nil.  The defaults do not work correctly and can send
	the parser in an infinite loop (bug#12458).

	* semantic/ede-grammar.el (project-compile-target): Fix grammar
	compilation after introduction of %provide statement.

	* semantic.el (semantic-new-buffer-setup-functions): Remove setup
	function for `f90-mode', since the parser only exists upstream.

2012-10-06  Glenn Morris  <rgm@gnu.org>

	* semantic/complete.el (semantic-displayor-tooltip-max-tags): Doc fix.

	* semantic/complete.el (semantic-displayor-tooltip-mode)
	(semantic-displayor-tooltip-initial-max-tags)
	(semantic-displayor-tooltip-max-tags): Add missing custom :version tags.
	* ede/linux.el (project-linux): Add missing group :version tag.

2012-10-06  Chong Yidong  <cyd@gnu.org>

	* semantic/bovine/grammar.el:
	* semantic/wisent/grammar.el: Move from admin/grammars.
	Add autoloads for bovine-grammar-mode and wisent-grammar-mode.

2012-10-02  Chong Yidong  <cyd@gnu.org>

	* srecode.el, ede.el: Restore Version header.

2012-10-01  Chong Yidong  <cyd@gnu.org>

	* semantic/bovine/c-by.el: Regenerate.
	* semantic/bovine/make-by.el:
	* semantic/bovine/scm-by.el:
	* semantic/grammar-wy.el:
	* semantic/wisent/javat-wy.el:
	* semantic/wisent/js-wy.el:
	* srecode/srt-wy.el:

2012-10-01  Eric Ludlam  <zappo@gnu.org>

	* cedet.el (cedet-version, cedet-packages): Update.

	* cedet-global.el (cedet-gnu-global-version-check): Support newer
	versions that have extra (parens) in the version string.

	* cedet-idutils.el (cedet-idutils-version-check): Make sure a
	version number was found before calling inversion-check-version.

	* data-debug.el (data-debug-insert-thing): Bind inhibit-read-only
	while inserting the thing, then clear modified bit.
	(data-debug-map): Suppress the keymap.
	(data-debug-mode, data-debug-new-buffer): Make buffer read-only.
	(data-debug-contract-current-line): Inhibit read-only, then clear
	modified bit.

	* ede.el (ede-buffer-belongs-to-project-p): Use ede-object-project
	to allow use in more kinds of buffers.
	(ede-project-forms-menu): Add `Default configuration' menu item.
	(ede-configuration-forms-menu): New, for use in above.
	(ede-project-configurations-set): New command used from menu.
	(ede-java-classpath): New conveninece for Java support.
	(ede-apply-object-keymap): Combine keybindings from the project
	and the target, not just whatever is local to the buffer.
	(ede-apply-target-options): Call fcn to apply project local
	variables.
	(ede-reset-all-buffers): Remove arg.
	(ede, ede-rescan-toplevel): Callers changed.
	(ede-new-target): Fix bug where you couldn't call this from Dired.
	(ede-add-file): Replace assignment of ede-object with generic call
	to re-init the buffer.
	(ede-find-target): If ede-object is set, run short-cut code
	instead of `or' shortcut.
	(ede-project-buffers): Return buffers belonging to input project,
	not any buffer belonging to any project.
	(ede-system-include-path, ede-apply-project-local-variables)
	(ede-set-project-local-variable): New functions.
	(ede-make-project-local-variable): Apply to toplevel if none
	specified.
	(ede-set): Make it interactive.

	* ede/auto.el (ede-project-autoload): New class.
	(ede-do-dirmatch): New method.
	(ede-project-dirmatch-p): New function.
	(ede-project-root-directory): Call it.
	(ede-dir-to-projectfile): Don't call project file function if we
	didn't match the root.
	(ede-project-root-directory): Don't call a project's root function
	if the tool in question isn't installed.
	(ede-dir-to-projectfile): Don't call project file function if we
	didn't match the root.

	* ede/autoconf-edit.el (autoconf-parameter-strip): Remove any
	trailing `\' mid string, and replace with a space.
	(autoconf-parameter-count): New function.
	(autoconf-set-version): Use it.

	* ede/base.el (ede-project): The :type of targets is now a list of
	target base classes.

	* ede/emacs.el (ede-emacs-load): Fix typo.

	* ede/files.el (ede-flush-project-hash, ede-flush-directory-hash):
	Protect against missing locator object.
	(ede-get-locator-object): Protect against missing project.
	(ede-flush-directory-hash): New command.
	(ede-get-locator-object): Protect against missing project.

	* ede/generic.el (ede-generic-config): Add configurable
	`run-command' slot.
	(project-compile-project, project-compile-target)
	(project-debug-target, project-run-target): New methods.
	(ede-generic-get-configuration): Specify the class to load.
	(ede-generic-new-autoloader): Use ede-add-project-autoload.
	(ede-enable-generic-projects): Rename projects so as to never
	match the edeproject-* projects.

	* ede/makefile-edit.el (makefile-macro-file-list): Case sensitive
	searches.  Protect against "SUBDIRS=$(subdirs)" infloop.

	* ede/proj-elisp.el (ede-proj-tweak-autoconf)
	(ede-proj-flush-autoconf): Disable local variables when loading
	the autoconf lisp compile script.

	* ede/proj.el (ede-proj-target-aux, -elisp, -elisp-autoloads)
	(-scheme, -makefile-misc, ede-proj-target-makefile-program)
	(-makefile-archive, -makefile-shared-object)
	(ede-proj-target-makefile-info, -grammar): New autoloads.
	(ede-proj-project): Inherit from eieio-persistent-read.
	Specify extension and header line.
	(ede-proj-load, ede-proj-save): Replace with impl using
	eieio-persistent-read.

	* ede/project-am.el (project-add-file): Use ede-target-parent
	instead of loading the project file.

	* semantic.el (semantic-version): Update.
	(semantic-new-buffer-setup-functions): Add f90-mode, texinfo-mode.
	(navigate-menu): Add menu item for Stickyfunc mode.

	* semantic/analyze/debug.el
	(semantic-analyzer-debug-insert-include-summary):
	Before dereferencing tableinner, make sure it has a value.

	* semantic/analyze/refs.el
	(semantic-analyze-tag-references-default): When doing a lookup,
	specify noerror.
	(semantic--analyze-refs-full-lookup): Add optional noerror input
	argument.  Pass to to full-lookup-simple.
	(semantic-analyze-refs-impl, semantic-analyze-refs-proto):
	Ignore :typemodifiers during compare.

	* semantic/bovine/c.el (semantic-lex-cpp-define): Specify limits
	to looking back for comment chars.
	(semantic--tag-similar-names-p, semantic--tag-similar-names-p-default)
	(semantic--tag-attribute-similar-p): New.
	(semantic-c-describe-environment): Handle list value of ede-object.
	(semantic-lex-c-preprocessor-symbol-map-builtin):
	Add __attribute_pure__.

	* semantic/bovine/scm.el (semantic-format-tag-prototype):
	Add parent and color argument.  Pass them through.

	* semantic/complete.el (semantic-collector-calculate-completions):
	Search for more matches if new prefix is a substring of old one.
	(semantic-complete-inline-project): New function.

	* semantic/db-el.el (object-print): New method.

	* semantic/db-file.el (semanticdb-load-database): Specify class.

	* semantic/db-typecache.el
	(semanticdb-abstract-table::semanticdb-typecache-find-method):
	Allow proxied tags to be resolved during the search.
	(semanticdb-typecache-complete-flush): Support missing or empty
	pointmax slot, to allow for more database types.

	* semantic/db.el (semanticdb-abstract-table): Add db-refs slot.
	(object-print): Allow child classes to overwrite the display of
	the (%d tags) extra string.
	(semanticdb-project-database): Specify :type for table.
	(semanticdb-create-table-for-file): Specify file-truename.
	(semanticdb-synchronize, semanticdb-partial-synchronize):
	Restore code that refreshes references to include files.

	* semantic/decorate/include.el
	(semantic-decoration-on-fileless-includes): New face.
	(semantic-decoration-on-fileless-include-map)
	(semantic-decoration-on-fileless-include-menu): New variables.
	(semantic-decoration-on-includes-highlight-default):
	Support includes that have a table, but are not associated with a file.
	(semantic-decoration-fileless-include-describe)
	(semantic-decoration-fileless-include-menu): New functions.
	(semantic-decoration-all-include-summary): Add arrows to indicate
	the file associated with an include name.

	* semantic/find.el
	(semantic-find-tags-by-scope-protection-default): Also filter on
	package protection of the slot.

	* semantic/java.el (semantic-java-expand-tag): If some type has a
	fully qualified name, bust it up into one package and the type
	with a short name.

	* semantic/lex.el (define-lex-block-analyzer): Protect against
	random extra close parenthesis.

	* semantic/symref.el (semantic-symref-result-get-tags): Make sure
	the cursor is on the matched name.

	* semantic/symref/list.el (semantic-symref-results-mode-map):
	Suppress keymap.

	* semantic/tag-ls.el (semantic--tag-similar-names-p)
	(semantic--tag-attribute-similar-p)
	(semantic--tag-similar-types-p): New functions.
	(semantic-tag-similar-ignorable-attributes): New variable.
	(semantic-tag-protection-default): Add package concept to return
	value.
	(semantic-tag-package-protected-p): New function.
	(semantic-tag-full-package): New overload method.
	(semantic-tag-full-package-default): New default for above.
	(semantic-tag-full-name-default): Look for the full package name.

	* semantic/tag.el (semantic-create-tag-proxy)
	(semantic-tag-set-proxy, semantic-tag-resolve-proxy): New.

	* semantic/util.el (semantic-describe-buffer):
	Add semantic-new-buffer-fcn-was-run.

	* semantic/wisent/java-tags.el (semantic-get-local-variables):
	Add `this' to the local variable context.
	(semantic-analyze-split-name, semantic-analyze-unsplit-name): New.

	* semantic/wisent/python.el (semantic-python-expand-tag):
	New function.

	* srecode/compile.el (srecode-compile-templates): Add "framework"
	special variable support.
	(srecode-compile-template-table): Support framework specifier.

	* srecode/cpp.el (srecode-semantic-handle-:c)
	(srecode-semantic-handle-:cpp): New functions.
	(srecode-semantic-apply-tag-to-dict): Move from cpp-mode function
	to c-mode function.
	(srecode-c-apply-templates): Rename from srecode-cpp-apply-templates.

	* srecode/dictionary.el (initialize-instance): Remove bogus error
	condition.
	(srecode-create-section-dictionary): Remove unused function.

	* srecode/java.el (srecode-semantic-handle-:java): Fix filename as
	package variable.  Add current_package variable.

	* srecode/map.el (srecode-map-update-map): Specify the class.

	* srecode/mode.el (srecode-minor-mode): Support the m3 menu.

	* srecode/semantic.el (srecode-semantic-insert-tag):
	Support system includes.

	* srecode/srt-mode.el (srecode-font-lock-keywords): Update.

	* srecode/table.el (srecode-template-table): Add :framework slot.
	(srecode-dump): Dump it.
	(srecode-mode-table): Add new modetables slot.
	(srecode-get-mode-table): Find the mode, but also find all parent
	modes, and merge the tables together in :tables from :modetables.
	(srecode-make-mode-table): Init :modetables.
	(srecode-mode-table-find): Search in modetables.
	(srecode-mode-table-new): Merge the differet files into the
	modetables slot.

2012-10-01  David Engster  <deng@randomsample.de>

	* ede.el (ede-apply-preprocessor-map): Check that
	`semantic-lex-spp-macro-symbol-obarray' is non-nil.
	(global-ede-mode): Fix call to `ede-reset-all-buffers'.

	* ede/cpp-root.el (ede-preprocessor-map): Make sure we add the
	lexical-table even when the table doesn't need to be refreshed.

	* ede/dired.el (ede-dired-minor-mode): Use called-interactively-p.

	* ede/pmake.el (ede-pmake-insert-variable-once): Wrap in
	save-excursion.

	* ede/proj-comp.el (ede-proj-makefile-insert-rules): Fix insertion
	of phony rule.

	* ede/proj-elisp.el (ede-proj-target-elisp):
	Remove ede-emacs-preload-compiler.
	(ede-proj-makefile-insert-rules, ede-proj-makefile-dependencies):
	New methods.
	(ede-emacs-compiler): Add 'require' macro to variables and pattern
	rule.  Add .elc object extension.
	(ede-proj-elisp-packages-to-loadpath): Allow longer relative names.
	(ede-proj-makefile-insert-variables): Do not insert preload items.
	(ede-proj-target-elisp-autoloads): Don't depend on cedet-autogen.

	* ede/util.el (ede-make-buffer-writable):
	* semantic/debug.el (semantic-debug-mode): Set buffer-read-only
	instead of calling toggle-read-only.

	* semantic.el (semantic-fetch-tags): Use progress reporter only
	when called interactively.
	(semantic-submode-list): Add debugging modes.
	(semantic-mode): Remove Semantic from after-change-functions.
	Delete the cache, call semantic--tag-unlink-cache-from-buffer, and
	set semantic-new-buffer-fcn-was-run to nil.

	* semantic/analyze/fcn.el (semantic-analyze-tag-prototype-p)
	(semantic-analyze-tag-prototype-p-default): Remove.
	(semantic-analyze-type, semantic-analyze-dereference-metatype-1):
	Use semantic-tag-prototype-p.

	* semantic/bovine/c.el (semantic-c-reset-preprocessor-symbol-map):
	Ensure semantic-mode is on before getting preprocessor symbols.
	(semantic-c-skip-conditional-section): Use c-scan-conditionals.
	(semantic-c-convert-spp-value-to-hideif-value)
	(semantic-c-evaluate-symbol-for-hideif, semantic-c-hideif-lookup)
	(semantic-c-hideif-defined): Revive hideif code from CEDET trunk.
	(semantic-lex-c-if, semantic-c-do-lex-ifdef): Revert changes for
	regular expression parsing.
	(semantic-cpp-lexer): Add semantic-lex-c-ifdef.
	(semantic-expand-c-tag): Check if tag is non-nil before adding it
	to return list.
	(semantic-expand-c-extern-C, semantic-expand-c-complex-type):
	New functions, copied from semantic-expand-c-tag.
	(semantic-find-tags-included): New override which also searches
	for include tags inside of namespaces.
	(semantic-c-dereference-typedef): Use semantic-tag-prototype-p.
	(semanticdb-find-table-for-include): New override.

	* semantic/bovine/el.el: Remove emacs-lisp-mode-hook.

	* semantic/complete.el (semantic-complete-post-command-hook):
	Exit completion when user has deleted all characters from the prefix.
	(semantic-displayor-focus-request): Return to previous window when
	focussing tags.

	* semantic/db-el.el (semanticdb-normalize-one-tag): Make obsolete.
	(semanticdb-elisp-sym->tag): Use help-function-arglist instead.

	* semantic/db-file.el (semanticdb-create-database):
	Use semantic-tag-version instead of just semantic-version as the
	initializer for the :semantic-tag-version slot.

	* semantic/db-find.el (semanticdb-find-tags-by-class-method):
	Delegate `include' to semantic-find-tags-included, which by
	default will just call semantic-find-tags-by-class.

	* semantic/db.el (semanticdb-refresh-table): Do not print warnings
	when calling semantic-find-file-noselect.  This avoids the "file
	is write protected" messages when parsing system header files,
	which might easily be mistaken to mean the currently loaded file.
	(semanticdb-save-current-db, semanticdb-save-all-db): Only emit
	message when running interactively.

	* semantic/decorate/mode.el (semantic-decoration-mode):
	Activate decoration of includes by default.

	* semantic/doc.el (semantic-doc-snarf-comment-for-tag):
	Remove comment delimiter at the end of the text.

	* semantic/ede-grammar.el (semantic-ede-proj-target-grammar):
	Change aux- and pre-load-packages.
	(ede-proj-makefile-dependencies): Update pattern rule so that
	resulting parsers are also byte-compiled.
	(semantic-ede-grammar-compiler-bovine)
	(semantic-ede-source-grammar-wisent): Remove .elc from gargage
	pattern, since this is already covered by the elisp compiler.
	(project-compile-target): Add compatibility code for Emacs 23,
	which does not have `byte-recompile-file'.
	(ede-proj-makefile-insert-rules): Add target specific EMACSFLAGS
	to raise max-specpdl-size and max-lisp-eval-depth.

	* semantic/find.el (semantic-find-tags-included):
	Make overridable.

	* semantic/fw.el (semantic-alias-obsolete)
	(semantic-varalias-obsolete): Use byte-compile-warn.
	(semantic-find-file-noselect): Disable font lock by calling
	global-font-lock-mode.

	* semantic/grammar.el (semantic-grammar-create-package):
	Fix message.
	(semantic-grammar-batch-build-one-package): When generating
	parsers in batch-mode, ignore version control and make sure we do
	not use cached versions.

	* semantic/ia.el (semantic-ia-complete-symbol-menu): Bring back.

	* semantic/lex-spp.el (semantic-lex-spp-symbol-merge): New fun.
	(semantic-lex-spp-token-macro-to-macro-stream): Use it.
	(semantic-lex-spp-lex-text-string): Instead of only setting the
	lexer, call the major mode's setup function.

	* semantic/scope.el (semantic-analyze-scoped-types-default):
	Use semantic-tag-prototype-p.
	(semantic-analyze-scope-nested-tags-default): Make sure we don't
	return tags we already have in scopetypes.

	* semantic/symref/filter.el
	(semantic-symref-test-count-hits-in-tag): Restore.

	* semantic/wisent/comp.el (wisent-BITS-PER-WORD):
	Use most-positive-fixnum if available.

	* semantic/wisent/javascript.el (semantic-tag-protection)
	(semantic-analyze-scope-calculate-access)
	(semantic-ctxt-current-symbol): New overrides.

	* semantic/wisent/python.el (wisent-python-lex-beginning-of-line):
	Rewrite to fix byte-compiler warning.

2012-10-01  Robert Jarzmik  <robert.jarzmik@free.fr>

	* ede/linux.el (project-linux): New group.
	(project-linux-compile-target-command)
	(project-linux-compile-project-command): New options.
	(project-compile-project, project-compiler-target): New methods.

	* inversion.el (inversion-decoders): New regexps for SXEmacs.
	(inversion-package-version): More verbose error message.
	(inversion-<): Deal with new special cases.
	(inversion-require-emacs): New argument sxemacs-ver; use it.

2012-10-01  Nelson Ferreira  <nelson.ferreira@ieee.org>

	* ede/emacs.el (ede-emacs-version): Detect SXEmacs.

2012-10-01  William Xu  <william.xwl@gmail.com>

	* semantic/bovine/gcc.el (semantic-gcc-query): Returns status when
	there is an error.
	(semantic-gcc-setup): If the first attempt at calling cpp fails,
	try straight GCC.

2012-10-01  Jan Moringen  <jan.moringen@uni-bielefeld.de>

	* semantic/idle.el
	(semantic-idle-breadcrumbs--display-in-header-line):
	Escape %-characters to avoid erroneous expansion in header line.
	(semantic-idle-breadcrumbs--display-in-mode-line): Likewise.

	* semantic/wisent/python.el (wisent-python-reconstitute-function-tag)
	(wisent-python-reconstitute-class-tag, semantic-python-special-p)
	(semantic-python-private-p, semantic-python-instance-variable-p)
	(semantic-python-docstring-p): New functions.

	* srecode/find.el (srecode-user-template-p): New function.
	(srecode-all-template-hash): Accept new optional argument
	predicate; return only templates matching the predicate.
	(srecode-read-template-name): Only retrieve templates matching
	srecode-user-template-p.

	* srecode/insert.el (srecode-insert-show-error-report)
	(srecode-insert-report-error): New functions.
	(srecode-insert-variable-secondname-handler)
	(srecode-insert-method, srecode-insert-ask-default)
	(srecode-insert-variable-secondname-handler)
	(srecode-insert-subtemplate, srecode-insert-method-helper)
	(srecode-insert-include-lookup): Use them.

2012-10-01  Thomas Bach  <thbach@students.uni-mainz.de>

	* semantic/wisent/python.el
	(semantic-python-get-system-include-path): Add Python3k support.

2012-10-01  Alexander Haeckel  <_@_>  (tiny change)

	* srecode/getset.el (srecode-query-for-field): Return the first
	tag found by name from all children tags.

2012-10-01  Dale Sedivec  <dale@codefu.org>

	* semantic/wisent/python.el (wisent-python-string-start-re)
	(wisent-python-string-re, wisent-python-forward-string)
	(wisent-python-forward-line, wisent-python-lex-string):
	New variables.
	(wisent-python-forward-balanced-expression): New function.

2012-10-01  Pete Beardmore  <elbeardmorez@msn.com>

	* semantic/complete.el (semantic-collector-calculate-completions):
	Search for additional matches if new prefix is a substring of the
	old prefix.
	(semantic-displayor-next-action): Immediately show more
	completions after user presses TAB the first time.
	(semantic-displayor-tooltip-mode)
	(semantic-displayor-tooltip-initial-max-tags)
	(semantic-displayor-tooltip-max-tags): New defcustoms.
	(semantic-displayor-tooltip): Use new variables as initforms.
	Use new slot `mode' instead of `force-show'.  Rename `max-tags' to
	`max-tags-initial'.
	(semantic-displayor-show-request): Display completions according
	to new modes, and make variable names clearer.
	(semantic-displayor-tooltip::semantic-displayor-scroll-request):
	Use new max-tags-initial slot.

	* semantic/idle.el (semantic-idle-local-symbol-highlight):
	Make sure there actually is a tag at point.
	(semantic-idle-completion-list-default): Report errors as messages
	if semantic-idle-scheduler-verbose-flag is non-nil.

2012-10-01  Richard Kim  <emacs18@gmail.com>

	* semantic/db-global.el (semanticdb-enable-gnu-global-databases):
	Add optional NOERROR argument.

2012-10-01  Alex Ott  <alexott@gmail.com>

	* semantic/idle.el (semantic-idle-scheduler-enabled-p):
	Fix file-checking.

2012-10-01  Darren Hoo  <darren.hoo@gmail.com>  (tiny change)

	* semantic/db-find.el (semanticdb-find-default-throttle):
	Make buffer-local.
	(semanticdb-strip-find-results): Check for existing :filename
	attribute, so that file information from GNU Global is not lost.

2012-08-07  Andreas Schwab  <schwab@linux-m68k.org>

	* ede/base.el (ede-with-projectfile): Use backquote forms.

2012-07-29  Paul Eggert  <eggert@cs.ucla.edu>

	inaccessable -> inaccessible spelling fix (Bug#10052)
	* semantic/wisent/comp.el (wisent-inaccessible-symbols):
	Rename from wisent-inaccessable-symbols, fixing a misspelling.
	Caller changed.

2012-07-09  Andreas Schwab  <schwab@linux-m68k.org>

	* ede/project-am.el: Fix typo.

2012-07-09  Paul Eggert  <eggert@cs.ucla.edu>

	Rename configure.in to configure.ac (Bug#11603).
	* ede/autoconf-edit.el (autoconf-find-query-for-program)
	(autoconf-new-program):
	* ede/emacs.el (ede-emacs-version):
	* ede/proj.el (ede-proj-setup-buildenvironment):
	* ede/project-am.el (project-am-autoconf-file-options):
	Prefer configure.ac to configure.in.

2012-03-12  David Engster  <deng@randomsample.de>

	* semantic/db-find.el
	(semanticdb-find-translate-path-brutish-default): If we don't yet
	have a proper table for PATH, use `semanticdb-current-database'
	instead (bug #10343).

2012-03-11  David Engster  <deng@randomsample.de>

	* semantic/wisent/javascript.el (js-mode): Define `js-mode' as
	child-mode of `javascript-mode' (bug #8445).

2012-02-28  Glenn Morris  <rgm@gnu.org>

	* semantic/db.el (semanticdb-search-results-table):
	Doc fix (standardize possessive apostrophe usage).

2012-02-09  Juanma Barranquero  <lekktu@gmail.com>

	* ede/auto.el (ede-directory-safe-p, ede-add-project-to-global-list):
	Add declarations.

2012-01-29  David Engster  <deng@randomsample.de>

	Fix require error when using srecode-insert (Bug#9967).
	* srecode/insert.el: Require srecode/filters.
	* srecode/filters.el: Drop two requires.

2012-01-09  Eric Ludlam  <zappo@gnu.org>

	* ede.el (ede-project-directories): New option.
	(ede-directory-safe-p): Check it.
	(ede-initialize-state-current-buffer, ede, ede-new)
	(ede-check-project-directory, ede-rescan-toplevel)
	(ede-load-project-file, ede-parent-project, ede-current-project)
	(ede-target-parent): Avoid loading in a project unless it is safe,
	since it may involve malicious code.  This security flaw was
	pointed out by Hiroshi Oota.

	* ede/auto.el (ede-project-autoload): Add safe-p slot.
	(ede-project-class-files): Projects using Project.ede are unsafe.
	(ede-auto-load-project): New method.

	* ede/simple.el (ede-project-class-files): Mark as unsafe.

2011-12-19  Sam Steingold  <sds@gnu.org>

	* semantic/edit.el (semantic-edits-incremental-parser): Add the
	autoload cookie, necessary for JDEE.

2011-12-06  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/bovine/c.el (semantic-tag-abstract-p): Fix typo.

2011-11-26  Chong Yidong  <cyd@gnu.org>

	* semantic/wisent/python-wy.el:
	* semantic/wisent/js-wy.el:
	* semantic/wisent/javat-wy.el:
	* semantic/bovine/c-by.el:
	* semantic/grammar-wy.el: Regenerate.

2011-11-24  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/lex-spp.el (semantic-lex-spp-first-token-arg-list): Fix typo.

2011-11-20  Juanma Barranquero  <lekktu@gmail.com>

	* cedet-cscope.el (cedet-cscope-version-check):
	* cedet-global.el (cedet-global-min-version)
	(cedet-gnu-global-version-check):
	* cedet.el (cedet-version):
	* data-debug.el (data-debug-prev, data-debug-contract-current-line):
	* ede.el (ede-buffer-belongs-to-project-p, ede-auto-add-to-target)
	(ede-new, ede-invoke-method, project-edit-file-target, project-rescan)
	(ede-add-project-to-global-list, ede-map-all-subprojects):
	* inversion.el (inversion-check-version):
	* mode-local.el (mode-local-map-file-buffers, define-child-mode)
	(define-overloadable-function):
	* pulse.el (pulse-flag, pulse):
	* semantic.el (semantic-elapsed-time, semantic-parse-region)
	(navigate-menu):
	* ede/proj-comp.el (ede-compilation-program):
	* semantic/debug.el (semantic-debug-parser-go)
	(semantic-debug-parser-fail, semantic-debug-parser-quit)
	(semantic-debug-parser-abort):
	* semantic/idle.el (semantic-idle-core-handler):
	* semantic/bovine/debug.el (semantic-bovine-debug-error-frame):
	Fix typos.

2011-11-16  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/lex.el (semantic-lex-tokens):
	* semantic/tag-ls.el (semantic-tag-protected-p):
	* srecode/mode.el (srecode-prefix-map): Fix typos.

2011-11-15  Juanma Barranquero  <lekktu@gmail.com>

	* ede/project-am.el (project-compile-target-command): Fix typo.

2011-11-14  Juanma Barranquero  <lekktu@gmail.com>

	* ede/auto.el (ede-project-autoload):
	* ede/proj-comp.el (ede-makefile-rule):
	* semantic/analyze.el (semantic-analyze-current-context):
	* semantic/ctxt.el (semantic-get-local-variables):
	* semantic/tag-ls.el (semantic-tag-calculate-parent): Fix typos.

2011-11-03  David Engster  <dengste@eml.cc>

	* srecode.el:
	* srecode/texi.el:
	* srecode/template.el:
	* srecode/java.el:
	* srecode/insert.el:
	* srecode/document.el:
	* srecode/dictionary.el:
	* srecode/compile.el:
	* semantic/wisent/java-tags.el:
	* semantic/texi.el:
	* semantic/sort.el:
	* semantic/lex-spp.el:
	* semantic/idle.el:
	* semantic/html.el:
	* semantic/db-typecache.el:
	* semantic/analyze/complete.el:
	* ede/generic.el:
	* ede/custom.el:
	* ede/cpp-root.el:
	* ede/base.el: Fix filenames in comments and headers.

	* semantic/db-find.el:
	* srecode/insert.el (srecode-insert-include-lookup):
	* ede/proj-comp.el (ede-compilation-program): Fix it's -> its in
	comments and docstrings.

	* semantic/ctxt.el (semantic-end-of-context-default):
	* semantic/find.el (semantic-find-tags-by-scope-protection):
	* semantic/java.el (semantic-documentation-for-tag): Fix typos in
	docstrings.

	* semantic/db.el (semanticdb-table, semanticdb-abstract-cache)
	(semanticdb-abstract-db-cache):
	* semantic/decorate/include.el
	(semantic-decoration-unknown-include-describe): Fix filenames in
	docstring.

	* semantic/ede-grammar.el (semantic-ede-grammar-compiler-wisent)
	(semantic-ede-grammar-compiler-bovine): Fix requires that are
	added to the grammar-make-script.

2011-10-23  Chong Yidong  <cyd@gnu.org>

	* ede.el (ede-maybe-checkout): Function deleted;
	vc-toggle-read-only does not do version control now.

	* ede/util.el (ede-make-buffer-writable): Don't use
	vc-toggle-read-only.

	* ede/project-am.el (project-remove-file, project-add-file)
	(project-new-target): Don't call ede-maybe-checkout.

2011-10-19  Chong Yidong  <cyd@gnu.org>

	* ede.el (ede-minor-mode, global-ede-mode):
	* semantic.el (semantic-mode): Doc fix to reflect new
	define-minor-mode calling behavior.

2011-07-30  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/grammar.el (semantic-grammar-insert-defanalyzers):
	Fix require.

2011-07-04  Darren Hoo  <darren.hoo@gmail.com>  (tiny change)

	* semantic/db.el (semanticdb-file-table-object): Don't bug out on
	unconfigured projects if `global-ede-mode' is on (bug#8092).

2011-07-01  Paul Eggert  <eggert@cs.ucla.edu>

	* semantic.el (semantic-elapsed-time): Rewrite using
	time-subtract and float-time.

2011-05-11  Glenn Morris  <rgm@gnu.org>

	* semantic/wisent/javascript.el (semantic-get-local-variables):
	Use define-mode-local-override rather than its obsolete alias.

2011-05-10  Jim Meyering  <meyering@redhat.com>

	Fix doubled-word typos.
	* ede/pmake.el (ede-proj-makefile-garbage-patterns): the the -> the
	* semantic/complete.el (semantic-complete-read-tag-local-members):
	Likewise.
	* ede.el (ede-auto-add-method): then then -> then

2011-04-23  Juanma Barranquero  <lekktu@gmail.com>

	* ede/pconf.el (ede-proj-tweak-autoconf, ede-proj-flush-autoconf):
	* ede/proj-comp.el (ede-proj-tweak-autoconf, ede-proj-flush-autoconf):
	* ede/proj-elisp.el (ede-proj-tweak-autoconf, ede-proj-flush-autoconf)
	(ede-proj-tweak-autoconf, ede-proj-flush-autoconf):
	* ede/proj-scheme.el (ede-proj-tweak-autoconf): Fix typos in docstrings.

2011-03-07  Chong Yidong  <cyd@stupidchicken.com>

	* Version 23.3 released.

2011-02-21  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/wisent/comp.el (wisent-byte-compile-grammar):
	Macroexpand before passing to byte-compile-form.

2011-01-13  Stefan Monnier  <monnier@iro.umontreal.ca>

	* srecode/srt-mode.el (srecode-template-mode): Use define-derived-mode.
	* semantic/symref/list.el (semantic-symref-results-mode):
	Use run-mode-hooks.

2010-11-12  Glenn Morris  <rgm@gnu.org>

	* semantic/wisent/comp.el: Remove unnecessary eval-when-compiles.

2010-11-10  Glenn Morris  <rgm@gnu.org>

	* semantic/bovine/c.el: Test system-type with memq.

2010-11-09  Glenn Morris  <rgm@gnu.org>

	* semantic/lex.el (semantic-lex-ignore-comments, semantic-flex):
	* semantic/grammar.el (semantic-grammar-epilogue):
	* ede/speedbar.el (ede-find-nearest-file-line):
	* ede/pmake.el (ede-proj-makefile-insert-dist-rules):
	* ede/autoconf-edit.el (autoconf-delete-parameter):
	Use point-at-bol and point-at-eol.

2010-11-07  Glenn Morris  <rgm@gnu.org>

	* ede/proj-elisp.el (ede-proj-flush-autoconf): Use point-at-bol.

2010-11-01  Glenn Morris  <rgm@gnu.org>

	* semantic/bovine/c.el (semantic-analyze-split-name): Move before use.

	* semantic/symref/cscope.el (ede-toplevel):
	* semantic/symref.el (ede-toplevel):
	* semantic/tag-file.el (ede-toplevel):
	* ede.el (ede-toplevel): Fix declarations.

2010-10-31  Glenn Morris  <rgm@gnu.org>

	* ede/proj-elisp.el (project-compile-target): Fix previous change.
	* semantic/ede-grammar.el (project-compile-target): Fix previous change.

2010-10-31  Julien Danjou  <julien@danjou.info>

	* ede/proj-elisp.el (project-compile-target):
	* semantic/ede-grammar.el (project-compile-target):
	Use `byte-recompile-file'.

2010-10-31  Glenn Morris  <rgm@gnu.org>

	* mode-local.el (mode-local-augment-function-help):
	* semantic/analyze/debug.el (semantic-analyzer-debug-add-buttons):
	* semantic/symref/list.el (semantic-symref-results-dump)
	(semantic-symref-rb-toggle-expand-tag): Replace inappropriate uses
	of toggle-read-only.

2010-09-30  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/bovine/el.el:
	* semantic/mru-bookmark.el (global-semantic-mru-bookmark-mode):
	Fix require statements.

2010-09-29  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/tag.el (semantic-tag-version): Bump to 2.0.

	* semantic/db-typecache.el (semanticdb-typecache-find-default):
	* semantic/imenu.el (semantic-create-imenu-index):
	* semantic/grammar.el (semantic--grammar-macro-function-tag):
	* semantic/fw.el (semanticdb-without-unloaded-file-searches):
	Fix require.  Suggested by David Engster.

	* semantic/bovine/c-by.el: Regenerate.

2010-09-29  Eric Ludlam  <zappo@gnu.org>

	* semantic/lex-spp.el (semantic-lex-spp-debug-symbol): New var.
	(semantic-lex-spp-enable-debug-symbol): New command.
	(semantic-lex-spp-value-valid-p)
	(semantic-lex-spp-validate-value): New functions.
	(semantic-lex-spp-symbol-set)
	(semantic-lex-spp-symbol-push): Add call to validate value.
	(semantic-lex-spp-table-write-slot-value): Instead of erroring on
	invalid values during save, just save a nil.

2010-09-25  Chong Yidong  <cyd@stupidchicken.com>

	* ede/linux.el (ede-project-class-files):
	* ede/generic.el (ede-generic-new-autoloader):
	* ede/emacs.el (ede-project-class-files):
	* ede/simple.el (ede-project-class-files):
	* ede/cpp-root.el (ede-project-class-files): Fix require name.

2010-09-25  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/lex.el (semantic-ignore-comments): Doc fix.

	* semantic/symref/list.el (semantic-symref-list-rename-open-hits):
	Fix typo in error message.
	(semantic-symref-list-map-open-hits): Fix typo in docstring.

2010-09-21  Eric Ludlam  <zappo@gnu.org>

	Synch SRecode to CEDET 1.0.

	* pulse.el (pulse-momentary-highlight-overlay): If pulse-flag is
	'never, disable all pulsing.

	* cedet.el (cedet-version):
	* srecode.el (srecode-version): Bump version to 1.0.

	* srecode/texi.el (srecode-texi-insert-tag-as-doc): New function.
	(semantic-insert-foreign-tag): Use it.

	* srecode/mode.el (srecode-bind-insert):
	Call srecode-load-tables-for-mode.
	(srecode-minor-mode-templates-menu): Do not list templates that
	are not in the current project.
	(srecode-menu-bar): Add binding for srecode-macro-help.

	* srecode/table.el (srecode-template-table): Add :project slot.
	(srecode-dump): Dump it.

	* srecode/map.el (srecode-map-update-map): Make map loading more
	robust.

	* srecode/insert.el (srecode-insert-fcn): Merge template
	dictionary before resolving arguments.
	(srecode-insert-method-helper): Add error checking to make sure
	that we only have dictionaries.
	(srecode-insert-method): Check template nesting depth when using
	point inserter override.
	(srecode-insert-method): Install override with depth limit.

	* srecode/getset.el (srecode-insert-getset): Force tag table
	update.  Don't query the class if it is empty.

	* srecode/find.el (srecode-template-get-table)
	(srecode-template-get-table-for-binding)
	(srecode-all-template-hash): Skip if not in current project.
	(srecode-template-table-in-project-p): New method.

	* srecode/fields.el (srecode-fields-exit-confirmation): New option.
	(srecode-field-exit-ask): Use it.

	* srecode/dictionary.el (srecode-dictionary-add-template-table):
	Do not add variables in tables not for the current project.
	(srecode-compound-toString): Handle cases where the default value
	is another compound value.
	(srecode-dictionary-lookup-name): New optional argument
	NON-RECURSIVE, which inhibits visiting dictionary parents.
	(srecode-dictionary-add-section-dictionary)
	(srecode-dictionary-merge): New optional argument FORCE adds
	values even if an identically named entry exists.
	(srecode-dictionary-add-entries): New method.
	(srecode-create-dictionaries-from-tags): New function.

	* srecode/cpp.el (srecode-cpp): New defgroup.
	(srecode-cpp-namespaces): New option.
	(srecode-semantic-handle-:using-namespaces)
	(srecode-cpp-apply-templates): New functions.
	(srecode-semantic-apply-tag-to-dict): Handle template parameters
	by calling `srecode-cpp-apply-templates'.

	* srecode/compile.el (srecode-compile-templates): Fix directory
	compare of built-in templates.  Give built-ins lower piority.
	Support special variable "project".
	(srecode-compile-template-table): Set :project slot of new tables.
	(srecode-compile-one-template-tag):
	Use srecode-create-dictionaries-from-tags.

2010-09-21  Eric Ludlam  <zappo@gnu.org>

	Synch EDE to CEDET 1.0.

	* cedet-idutils.el (cedet-idutils-make-command): New option.
	(cedet-idutils-mkid-call)
	(cedet-idutils-create/update-database): New functions.

	* cedet-cscope.el (cedet-cscope-create)
	(cedet-cscope-create/update-database): New functions.
	(cedet-cscope-support-for-directory): Make interactive.

	* cedet-global.el (cedet-global-gtags-command): New option.
	(cedet-gnu-global-gtags-call)
	(cedet-gnu-global-create/update-database): New functions.

	* ede.el (ede-save-cache): Fix recentf-exclude expression.
	(ede-make-dist): Always use toplevel project.
	(ede-buffer-object): If we fail to find an object in the current
	project, loop upward looking for a match.  If no target is found,
	use most local project.
	(ede-buffer-belongs-to-target-p)
	(ede-buffer-belongs-to-project-p): New functions.
	(ede-initialize-state-current-buffer): New function.
	(ede-target-forms-menu, ede-project-buffers): Use them.
	(ede-minor-mode, ede-reset-all-buffers): Use it.
	(project-interactive-select-target, project-add-file): Don't use
	ede-project-force-load.
	(ede-buffer-object): New arg PROJSYM.
	(ede-minor-mode): Remove ede-directory-project-p test.
	(ede-initialize-state-current-buffer): Don't test for
	ede-directory-project-p if there is a matching open project.
	(ede-customize-forms-menu): Prevent error if there is no project.
	(ede-load-project-file): Set ede-constructing to the thing being
	constructed, instead of t.
	(ede-project-force-load): Delete.

	* ede/base.el:
	* ede/auto.el:
	* ede/custom.el: New files.

	* ede/autoconf-edit.el (autoconf-find-last-macro)
	(autoconf-parameters-for-macro): Parse multiline parameters of
	macros.  Optionally ignore case and at bol for macro.
	(autoconf-parameter-strip): Use greedy match for newlines.
	(autoconf-new-automake-string): Delete.
	(autoconf-new-program): Use SRecode to fill an empty file.

	* ede/cpp-root.el (ede-create-lots-of-projects-under-dir):
	New function.

	* ede/files.el (ede-flush-project-hash): New command.
	(ede-convert-path): Add optional PROJECT arg.
	(ede-directory-project-p): Obey ".ede-ignore".
	(ede-expand-filename-local)
	(ede-expand-filename-impl-via-subproj): New methods.
	(ede-expand-filename-impl): Use them.
	(ede-project-root, ede-project-root-directory): Move to
	ede/auto.el.

	* ede/locate.el (ede-locate-flush-hash)
	(ede-locate-create/update-root-database): New methods.
	(initialize-instance): Use ede-locate-flush-hash.

	* ede/pmake.el (ede-proj-makefile-insert-variables): If this is
	the top project and not a metasubproject, set TOP to CURDIR.
	(ede-proj-makefile-insert-variables): Output a target's object
	list whether or not the vars are already in the Makefile.
	(ede-pmake-insert-variable-once): New macro.

	* ede/project-am.el (project-am-with-makefile-current):
	Add recentf-exclude.
	(project-am-load-makefile): Obey an optional suggested name.
	(project-am-expand-subdirlist): New function.
	(project-am-makefile::project-rescan): Use it.  Combine SUBDIRS
	and DIST_SUBDIRS.
	(project-am-meta-type-alist): A list to scan better Makefile.am.
	(project-am-scan-for-targets): Scan also over
	project-am-meta-type-alist.
	(ede-system-include-path): Simple implementation.
	(ede-find-target): Delete.  EDE core takes care of this.
	(ede-buffer-mine): Create the searched filename as relative.
	(project-am-load): Simplify, using autoconf-edit.
	(project-am-extract-package-info): Fix separators.

	* ede/proj.el (project-run-target): New method.
	(project-make-dist, project-compile-project):
	Use ede-proj-automake-p to determine which kind of compile to use.
	(project-rescan): Call ede-load-project-file.
	(ede-buffer-mine): Add more file names that belong to the project.
	(ede-proj-compilers): Improve error message.

	* ede/proj-obj.el (ede-ld-linker): Use the LDDEPS variable.
	(ede-source-c++): Add more C++ extensions.
	(ede-proj-target-makefile-objectcode): Quote initforms.
	Support lex and yacc.

	* ede/proj-prog.el (ede-proj-makefile-insert-rules): Remove.
	(ede-proj-makefile-insert-variables): New, add LDDEPS.
	(ede-proj-makefile-insert-automake-post-variables): Add LDADD
	variable.  Use ldlibs-local slot.  Add a -l to ldlibs strings.
	(ede-proj-target-makefile-program): Swap order of two slots so
	they show up in the same order as in the command line.
	(ede-proj-target-makefile-program): Add ldlibs-local slot.

	* ede/proj-shared.el (ede-g++-libtool-shared-compiler):
	Fix inference rule to use cpp files.
	(ede-proj-target-makefile-shared-object): Quote initforms.

	* ede/proj-misc.el (ede-proj-target-makefile-miscelaneous):
	* ede/proj-info.el (ede-proj-target-makefile-info):
	* ede/proj-aux.el (ede-proj-target-aux):
	* ede/proj-archive.el (ede-proj-target-makefile-archive):
	* ede/proj-elisp.el (ede-proj-target-elisp)
	(ede-proj-target-elisp-autoloads): Quote initforms.

	* ede/srecode.el (ede-srecode-setup): Load autoconf templates.

	* ede/shell.el (ede-shell-buffer): Fix buffer name.

	* ede/pconf.el (ede-proj-configure-synchronize): If user events
	occur while waiting for the compile process to finish, pull them
	in and discard those events.

2010-09-19  Eric Ludlam  <zappo@gnu.org>

	Synch Semantic to CEDET 1.0.

	* semantic.el (semantic-version): Update to 2.0.
	(semantic-mode-map): Add "," and "m" bindings.
	(navigate-menu): Update.

	* semantic/symref.el (semantic-symref-calculate-rootdir):
	New function.
	(semantic-symref-detect-symref-tool): Use it.

	* semantic/symref/grep.el (semantic-symref-grep-shell): New var.
	(semantic-symref-perform-search): Use it.  Calculate root dir with
	semantic-symref-calculate-rootdir.
	(semantic-symref-derive-find-filepatterns): Improve error message.

	* semantic/symref/list.el
	(semantic-symref-results-mode-map): New bindings.
	(semantic-symref-auto-expand-results): New option.
	(semantic-symref-results-dump): Obey auto-expand.
	(semantic-symref-list-expand-all, semantic-symref-regexp)
	(semantic-symref-list-contract-all)
	(semantic-symref-list-map-open-hits)
	(semantic-symref-list-update-open-hits)
	(semantic-symref-list-create-macro-on-open-hit)
	(semantic-symref-list-call-macro-on-open-hits): New functions.
	(semantic-symref-list-menu-entries)
	(semantic-symref-list-menu): New vars.
	(semantic-symref-list-map-open-hits): Move cursor to beginning of
	match before calling the mapped function.

	* semantic/doc.el
	(semantic-documentation-comment-preceeding-tag): Do nothing if the
	mode doesn't provide comment-start-skip.

	* semantic/scope.el
	(semantic-analyze-scope-nested-tags-default): Strip duplicates.
	(semantic-analyze-scoped-inherited-tag-map): Take the tag we are
	looking for as part of the scoped tags list.

	* semantic/html.el (semantic-default-html-setup):
	Add senator-step-at-tag-classes.

	* semantic/decorate/include.el
	(semantic-decoration-on-unknown-includes): Change light bgcolor.
	(semantic-decoration-on-includes-highlight-default): Check that
	the include tag has a position.

	* semantic/complete.el (semantic-collector-local-members)
	(semantic-complete-read-tag-local-members)
	(semantic-complete-jump-local-members): New class and functions.
	(semantic-complete-self-insert): Save excursion before completing.

	* semantic/analyze/complete.el
	(semantic-analyze-possible-completions-default): If no completions
	are found, return the raw by-name-only completion list.  Add FLAGS
	arguments.  Add support for 'no-tc (type constraint) and
	'no-unique, or no stripping duplicates.
	(semantic-analyze-possible-completions-default): Add FLAGS arg.

	* semantic/util-modes.el
	(semantic-stickyfunc-show-only-functions-p): New option.
	(semantic-stickyfunc-fetch-stickyline): Don't show stickytext for
	the very first line in a buffer.

	* semantic/util.el (semantic-hack-search)
	(semantic-recursive-find-nonterminal-by-name)
	(semantic-current-tag-interactive): Delete.
	(semantic-describe-buffer): Fix expand-nonterminal.
	Add lex-syntax-mods, type relation separator char, and command
	separation char.
	(semantic-sanity-check): Only message if called interactively.

	* semantic/tag.el (semantic-tag-deep-copy-one-tag): Copy the
	:filename property and the tag position.

	* semantic/lex-spp.el (semantic-lex-spp-lex-text-string):
	Add recursion limit.

	* semantic/imenu.el (semantic-imenu-bucketize-type-members):
	Make this buffer local, not the obsoleted variable.

	* semantic/idle.el: Add breadcrumbs support.
	(semantic-idle-summary-current-symbol-info-default)
	(semantic-idle-tag-highlight)
	(semantic-idle-completion-list-default):
	Use semanticdb-without-unloaded-file-searches for speed, and to
	conform to the controls that specify if the idle timer is supposed
	to be parsing unparsed includes.
	(semantic-idle-symbol-highlight-face)
	(semantic-idle-symbol-maybe-highlight): Rename from *-summary-*.
	Callers changed.
	(semantic-idle-work-parse-neighboring-files-flag): Default to nil.
	(semantic-idle-work-update-headers-flag): New var.
	(semantic-idle-work-for-one-buffer): Use it.
	(semantic-idle-local-symbol-highlight): Rename from
	semantic-idle-tag-highlight.
	(semantic-idle-truncate-long-summaries): New option.

	* semantic/ia.el (semantic-ia-cache)
	(semantic-ia-get-completions): Delete.  Callers changed.
	(semantic-ia-show-variants): New command.
	(semantic-ia-show-doc): If doc is empty, don't make a temp buffer.
	(semantic-ia-show-summary): If there isn't anything to show, say so.

	* semantic/grammar.el (semantic-grammar-create-package):
	Save the buffer even in batch mode.

	* semantic/fw.el
	(semanticdb-without-unloaded-file-searches): New macro.

	* semantic/dep.el (semantic-dependency-find-file-on-path):
	Fix case dereferencing ede-object when it is a list.

	* semantic/db-typecache.el (semanticdb-expand-nested-tag)
	(semanticdb-typecache-faux-namespace): New functions.
	(semanticdb-typecache-file-tags)
	(semanticdb-typecache-merge-streams): Use them.
	(semanticdb-typecache-file-tags): When deriving tags from a file,
	give the mode a chance to monkey with the tag copy.
	(semanticdb-typecache-find-default): Wrap find in save-excursion.
	(semanticdb-typecache-find-by-name-helper): Merge found names down.

	* semantic/db-global.el
	(semanticdb-enable-gnu-global-in-buffer): Don't show messages if
	GNU Global is not available and we don't want to throw an error.

	* semantic/db-find.el (semanticdb-find-result-nth-in-buffer):
	When trying to normalize the tag to a buffer, don't error if
	set-buffer method doesn't exist.

	* semantic/db-file.el (semanticdb-save-db): Simplify msg.

	* semantic/db.el (semanticdb-refresh-table): If forcing a
	refresh on a file not in a buffer, use semantic-find-file-noselect
	and delete the buffer after use.
	(semanticdb-current-database-list): When calculating root via
	hooks, force it through true-filename and skip the list of
	possible roots.

	* semantic/ctxt.el (semantic-ctxt-imported-packages): New.

	* semantic/analyze/debug.el
	(semantic-analyzer-debug-insert-tag): Reset standard output to
	current buffer.
	(semantic-analyzer-debug-global-symbol)
	(semantic-analyzer-debug-missing-innertype): Change "prefix" to
	"symbol" in messages.

	* semantic/analyze/refs.el (semantic-analyze-refs-impl)
	(semantic-analyze-refs-proto): When calculating value, make sure
	the found tag is 'similar' to the originating tag.
	(semantic--analyze-refs-find-tags-with-parent): Attempt to
	identify matches via imported symbols of parents.
	(semantic--analyze-refs-full-lookup-with-parents): Do a deep
	search during the brute search.

	* semantic/analyze.el
	(semantic-analyze-find-tag-sequence-default): Be robust to
	calculated scopes being nil.

	* semantic/bovine/c.el (semantic-c-describe-environment):
	Add project macro symbol array.
	(semantic-c-parse-lexical-token): Add recursion limit.
	(semantic-ctxt-imported-packages, semanticdb-expand-nested-tag):
	New overrides.
	(semantic-expand-c-tag-namelist): Split a full type from a typedef
	out to its own tag.
	(semantic-expand-c-tag-namelist): Do not split out a typedef'd
	inline type if it is an anonymous type.
	(semantic-c-reconstitute-token): Use the optional initializers as
	a clue that some function is probably a constructor.
	When defining the type of these constructors, split the parent name,
	and use only the class part, if applicable.

	* semantic/bovine/c-by.el:
	* semantic/wisent/python-wy.el: Regenerate.

2010-07-20  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/db-file.el (object-write): Fix typo in docstring.

2010-06-03  Eric Ludlam  <zappo@gnu.org>

	* semantic/lex-spp.el
	(semantic-lex-spp-table-write-slot-value): Instead of erroring on
	invalid values during save, just save a nil (Bug#6324).

2010-05-31  Jonathan Marchand  <jonathlela@gmail.com>  (tiny change)

	* ede/cpp-root.el (ede-set-project-variables): Fix feature name
	(bug#6231).

2010-05-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use a mode-line spec rather than a static string in Semantic.
	* semantic/util-modes.el:
	(semantic-minor-modes-format): New var to replace...
	(semantic-minor-modes-status): Remove.
	(semantic-mode-line-update): Construct a mode-line spec rather than
	a static string so that mouse buttons can be used on individual minor
	modes and so that semantic-mode-line-update only needs to be called
	when global settings are changed.
	(semantic-add-minor-mode, semantic-toggle-minor-mode-globally):
	Call semantic-mode-line-update.
	(semantic-toggle-minor-mode-globally): Don't assume mode is on
	minor-mode-alist, check semantic-minor-mode-alist as well.
	(semantic-stickyfunc-mode, semantic-show-parser-state-auto-marker)
	(semantic-show-parser-state-marker, semantic-show-parser-state-mode)
	(semantic-show-unmatched-syntax-mode, semantic-highlight-edits-mode):
	* semantic/mru-bookmark.el (semantic-mru-bookmark-mode):
	* semantic/idle.el (semantic-idle-scheduler-mode)
	(define-semantic-idle-service, semantic-idle-summary-mode):
	* semantic/decorate/mode.el (semantic-decoration-mode):
	Don't call semantic-mode-line-update any more.

2010-05-02  Stefan Monnier  <monnier@iro.umontreal.ca>

	Use define-minor-mode in CEDET where applicable.

	* srecode/mode.el (srecode-minor-mode, global-srecode-minor-mode):
	Use define-minor-mode.

	* semantic/util-modes.el (semantic-add-minor-mode):
	Remove unused arg `keymap' and code redundant with define-minor-mode.
	(semantic-toggle-minor-mode-globally): Only handle arg -1 and 1.
	(semantic-stickyfunc-mode, global-semantic-show-unmatched-syntax-mode)
	(semantic-highlight-func-mode, global-semantic-show-parser-state-mode)
	(global-semantic-highlight-edits-mode, semantic-highlight-edits-mode)
	(semantic-show-unmatched-syntax-mode, semantic-show-parser-state-mode)
	(global-semantic-stickyfunc-mode, global-semantic-highlight-func-mode):
	Use define-minor-mode.
	(semantic-stickyfunc-mode-setup, semantic-highlight-edits-mode-setup)
	(semantic-show-unmatched-syntax-mode-setup)
	(semantic-show-parser-state-mode-setup)
	(semantic-highlight-func-mode-setup): Inline into sole caller.

	* semantic/mru-bookmark.el (global-semantic-mru-bookmark-mode)
	(semantic-mru-bookmark-mode): Use define-minor-mode.
	(semantic-mru-bookmark-mode-setup): Inline into sole caller.

	* semantic/idle.el (define-semantic-idle-service):
	Use define-minor-mode and inline setup function into its sole caller.
	(semantic-idle-scheduler-mode-setup)
	(semantic-idle-summary-mode-setup): Inline into sole caller.
	(global-semantic-idle-scheduler-mode, semantic-idle-scheduler-mode):
	Use define-minor-mode.

	* semantic/decorate/mode.el (global-semantic-decoration-mode)
	(semantic-decoration-mode): Use define-minor-mode.
	(semantic-decoration-mode-setup): Inline into sole caller.

	* ede/dired.el (ede-dired-minor-mode): Initialize in declaration.
	(ede-dired-minor-mode): Use define-minor-mode and derived-mode-p.
	(ede-dired-add-to-target): Use dolist.

2010-04-29  Chong Yidong  <cyd@stupidchicken.com>

	* semantic.el (semantic-completion-at-point-function):
	New function.
	(semantic-mode): Use semantic-completion-at-point-function for
	completion-at-point-functions instead.

2010-04-28  Chong Yidong  <cyd@stupidchicken.com>

	* semantic.el (semantic-mode): When enabled, add
	semantic-ia-complete-symbol to completion-at-point-functions.

	* semantic/ia.el (semantic-ia-complete-symbol): Return nil
	if Semantic is not active.

2010-04-19  Chong Yidong  <cyd@stupidchicken.com>

	* ede/pmake.el (ede-proj-makefile-insert-variables):
	Don't destroy list before using it.

2010-04-02  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/imenu.el (semantic-imenu-bucketize-type-members)
	(semantic-create-imenu-directory-index): Fix typos in docstrings.
	(semantic-imenu-goto-function): Reflow docstring.

2010-03-24  Juanma Barranquero  <lekktu@gmail.com>

	* srecode/table.el (srecode-template-table): Fix docstring typo.

2010-03-24  Glenn Morris  <rgm@gnu.org>

	* semantic/bovine/c.el (semantic-c-describe-environment):
	Consistently check ede-object is bound throughout.

	* ede/project-am.el (ede-shell-run-something): Declare.

2010-03-13  Eric M. Ludlam  <zappo@gnu.org>

	* semantic/imenu.el: New file, from the CEDET repository
	(Bug#5412).

2010-03-06  Glenn Morris  <rgm@gnu.org>

	* semantic/grammar.el (semantic-grammar-header-template):
	Update template copyright to GPLv3+.

2010-02-28  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/db-find.el
	(semanticdb-find-translate-path-brutish-default):
	* ede/make.el (ede-make-check-version):
	Use with-current-buffer instead of save-excursion.

2010-02-24  Eduard Wiebe  <usenet@pusto.de>

	* semantic/wisent/javascript.el (wisent-javascript-jv-expand-tag):
	Avoid c(ad)ddr and use c(ad)r of cddr (Bug#5640).

2010-02-16  Chong Yidong  <cyd@stupidchicken.com>

	* data-debug.el (data-debug): Move to extensions group.

	* ede.el (ede):
	* srecode.el (srecode):
	* semantic.el (semantic): Put in tools and extensions group.

2010-02-14  Juanma Barranquero  <lekktu@gmail.com>

	* ede.el (ede-run-target, project-delete-target)
	(project-dist-files, ede-name, ede-documentation, ede-parent-project)
	(ede-adebug-project, ede-adebug-project-parent)
	(ede-adebug-project-root): Fix typos in docstrings.

2010-01-18  Juanma Barranquero  <lekktu@gmail.com>

	* ede/locate.el (ede-locate-file-in-project)
	(ede-locate-file-in-project-impl): Fix typos in docstrings.
	(ede-enable-locate-on-project): Fix typos in error messages.

	* semantic/util-modes.el (semantic-unmatched-syntax-face)
	(semantic-stickyfunc-old-hlf, semantic-stickyfunc-header-line-format)
	(semantic-stickyfunc-sticky-classes, semantic-highlight-func-mode-setup)
	(semantic-stickyfunc-fetch-stickyline): Fix typos in docstrings.
	(semantic-stickyfunc-popup-menu, semantic-highlight-func-popup-menu):
	Fix typos in menu help.

	* semantic.el (semantic-require-version, semantic--buffer-cache)
	(semantic-unmatched-syntax-cache-check, semantic-unmatched-syntax-hook)
	(semantic--before-fetch-tags-hook, semantic-new-buffer-fcn-was-run)
	(semantic--umatched-syntax-needs-refresh-p, semantic-elapsed-time)
	(semantic-parse-stream, semantic-parse-region)
	(semantic-parse-region-default, semantic--set-buffer-cache)
	(semantic-minimum-working-buffer-size, semantic-refresh-tags-safe)
	(semantic-bovinate-toplevel, semantic-load-system-cache-loaded)
	(semantic-default-submodes):
	* semantic/db-ebrowse.el (semanticdb-table-ebrowse)
	(semanticdb-create-ebrowse-database)
	(semanticdb-find-tags-for-completion-method)
	(semanticdb-find-tags-by-class-method)
	(semanticdb-deep-find-tags-by-name-method)
	(semanticdb-deep-find-tags-for-completion-method):
	* semantic/db-el.el (semanticdb-elisp-mapatom-collector)
	(semanticdb-find-tags-by-name-method, emacs-lisp-mode)
	(semanticdb-find-tags-for-completion-method)
	(semanticdb-find-tags-by-class-method)
	(semanticdb-deep-find-tags-for-completion-method):
	* semantic/db-find.el (semanticdb-find-translate-path)
	(semanticdb-find-need-cache-update-p, semanticdb-find-result-with-nil-p)
	(semanticdb-find-scanned-include-tags, semanticdb-find-tags-collector)
	(semanticdb-find-tags-by-name-method)
	(semanticdb-find-tags-by-name-regexp-method)
	(semanticdb-find-tags-for-completion-method)
	(semanticdb-find-tags-by-class-method)
	(semanticdb-find-tags-external-children-of-type-method)
	(semanticdb-find-tags-subclasses-of-type-method)
	(semanticdb-deep-find-tags-by-name-method)
	(semanticdb-deep-find-tags-by-name-regexp-method)
	(semanticdb-deep-find-tags-for-completion-method):
	* semantic/db-global.el (semanticdb-enable-gnu-global-hook)
	(semanticdb-enable-gnu-global-in-buffer)
	(semanticdb-find-tags-for-completion-method)
	(semanticdb-deep-find-tags-by-name-method)
	(semanticdb-deep-find-tags-for-completion-method):
	* semantic/db-javascript.el (semanticdb-javascript-tags)
	(javascript-mode, semanticdb-find-translate-path)
	(semanticdb-find-tags-for-completion-method)
	(semanticdb-find-tags-by-class-method)
	(semanticdb-deep-find-tags-by-name-method)
	(semanticdb-deep-find-tags-for-completion-method)
	(semanticdb-find-tags-external-children-of-type-method):
	* semantic/idle.el (semantic-idle-work-core-handler)
	(define-semantic-idle-service, semantic-idle-summary-useful-context-p)
	(global-semantic-idle-scheduler-mode):
	* srecode/dictionary.el (srecode-field-value)
	(srecode-dictionary-add-section-dictionary):
	Fix typos in docstrings.

2010-01-17  Glenn Morris  <rgm@gnu.org>

	* semantic/idle.el (semantic-idle-work-for-one-buffer): Doc fix.

2010-01-17  Juanma Barranquero  <lekktu@gmail.com>

	* semantic.el (semantic-mode): Fix typos in docstrings.

2010-01-16  Mario Lang  <mlang@delysid.org>

	* ede/cpp-root.el (ede-cpp-root-project):
	* ede/files.el (ede-expand-filename):
	* ede/simple.el (ede-simple-project):
	* semantic/complete.el (semantic-complete-read-tag-engine)
	(semantic-complete-inline-tag-engine):
	* semantic/db-el.el (semanticdb-equivalent-mode):
	* semantic/db-global.el (semanticdb-equivalent-mode):
	* semantic/db-javascript.el (semanticdb-equivalent-mode):
	* semantic/db.el (semanticdb-equivalent-mode):
	* semantic/decorate/include.el (semantic-decoration-unknown-include-describe):
	* semantic/idle.el (semantic-idle-work-for-one-buffer):
	Remove duplicated words in doc-strings.

2010-01-14  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/edit.el (semantic-reparse-needed-change-hook)
	(semantic-no-reparse-needed-change-hook):
	* srecode/insert.el (srecode-resolve-argument-list)
	(srecode-template-inserter-blank, srecode-template-inserter-variable)
	(srecode-template-inserter-ask, srecode-template-inserter-width)
	(srecode-template-inserter-section-start)
	(srecode-template-inserter-section-end, srecode-insert-method):
	Fix typos in docstrings.

2010-01-12  Juanma Barranquero  <lekktu@gmail.com>

	* data-debug.el (data-debug): Fix customization group reference.

2010-01-12  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/analyze.el (semantic-analyze-push-error)
	(semantic-analyze-context, semantic-analyze-context-assignment)
	(semantic-analyze-find-tag-sequence, semantic-analyze-find-tag):
	* semantic/java.el (java-mode, semantic-tag-include-filename)
	(semantic-java-doc-keywords-map):
	* semantic/bovine/c.el (c-mode, semantic-c-member-of-autocast)
	(semantic-lex-c-nested-namespace-ignore-second, semantic-parse-region)
	(semantic-c-parse-lexical-token, semantic-c-debug-mode-init-pch)
	(semantic-c-classname, semantic-format-tag-uml-prototype)
	(semantic-c-dereference-namespace, semantic-analyze-type-constants):
	* semantic/bovine/el.el (semantic-elisp-form-to-doc-string)
	(semantic-emacs-lisp-obsoleted-doc, semantic-up-context)
	(semantic-get-local-variables, semantic-end-of-command)
	(semantic-beginning-of-command, semantic-ctxt-current-class-list)
	(lisp-mode):
	* semantic/bovine/make.el (makefile-mode):
	* semantic/wisent/python.el (wisent-python-string-re)
	(wisent-python-implicit-line-joining-p, wisent-python-forward-string)
	(wisent-python-lex-beginning-of-line, wisent-python-lex-end-of-line)
	(semantic-lex, semantic-get-local-variables, python-mode):
	* semantic/wisent/python-wy.el (wisent-python-wy--keyword-table):
	* srecode/extract.el (srecode-extract-state-set)
	(srecode-extract-method): Fix typos in docstrings.

2010-01-10  Chong Yidong  <cyd@stupidchicken.com>

	* semantic.el (semantic-new-buffer-setup-functions):
	Add python parser.

2010-01-10  Richard Kim  <emacs18@gmail.com>

	* semantic/wisent/python-wy.el:
	* semantic/wisent/python.el: New files.

2010-01-02  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/db-typecache.el (semanticdb-typecache-find-default):
	Fix typo in docstring.

2009-12-14  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/mru-bookmark.el (global-semantic-mru-bookmark-mode)
	(semantic-mru-bookmark-mode): Doc fixes.

	* semantic/db.el (semanticdb-cache-get): Use error instead
	of assert.

2009-12-05  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/ia.el (semantic-ia-complete-symbol):
	Make argument optional.

2009-12-05  Eric Ludlam  <zappo@gnu.org>

	* semantic/bovine/c.el (semantic-c-describe-environment):
	Describe project macro symbols.

	* semantic/complete.el (semantic-complete-do-completion):
	Don't call semantic-collector-current-exact-match.

	* ede.el (ede-apply-preprocessor-map): Accept lists of
	ede-objects as targets.

	* ede/pmake.el (ede-proj-makefile-insert-variables):
	Output a target's object list even if compiler vars are already in the
	Makefile.

	* ede/emacs.el (ede-preprocessor-map): Add config.h to the
	list of headers producing necessary macros.

2009-11-24  Glenn Morris  <rgm@gnu.org>

	* semantic/idle.el (global-semantic-idle-scheduler-mode):
	Move after definition of global-semantic-idle-tag-highlight-mode.

2009-11-22  Chong Yidong  <cyd@stupidchicken.com>

	* srecode/map.el (srecode-get-maps):
	* semantic/wisent/wisent.el (wisent-parse-toggle-verbose-flag):
	* semantic/wisent/comp.el (wisent-toggle-verbose-flag):
	* semantic/decorate/mode.el (semantic-decoration-mode)
	(semantic-toggle-decoration-style):
	* semantic/decorate/include.el
	(semantic-decoration-include-describe)
	(semantic-decoration-unknown-include-describe)
	(semantic-decoration-unparsed-include-describe)
	(semantic-decoration-all-include-summary):
	* semantic/bovine/c.el (semantic-c-debug-mode-init):
	* semantic/analyze/complete.el
	(semantic-analyze-possible-completions):
	* semantic/util-modes.el (semantic-highlight-edits-mode)
	(semantic-show-unmatched-syntax-mode)
	(semantic-show-parser-state-mode, semantic-stickyfunc-mode)
	(semantic-highlight-func-mode):
	* semantic/util.el (semantic-describe-buffer):
	* semantic/symref.el (semantic-symref-find-references-by-name)
	(semantic-symref-find-tags-by-name)
	(semantic-symref-find-tags-by-regexp)
	(semantic-symref-find-tags-by-completion)
	(semantic-symref-find-file-references-by-name)
	(semantic-symref-find-text):
	* semantic/senator.el (senator-copy-tag, senator-kill-tag)
	(senator-yank-tag):
	* semantic/scope.el (semantic-calculate-scope):
	* semantic/mru-bookmark.el (semantic-mru-bookmark-mode):
	* semantic/idle.el (semantic-idle-scheduler-mode)
	(define-semantic-idle-service):
	* semantic/complete.el (semantic-complete-analyze-inline)
	(semantic-complete-analyze-inline-idle):
	* semantic/analyze.el (semantic-analyze-current-context):
	* mode-local.el (describe-mode-local-bindings)
	(describe-mode-local-bindings-in-mode):
	* ede/make.el (ede-make-check-version):
	* ede/locate.el (ede-enable-locate-on-project):
	* cedet-idutils.el (cedet-idutils-expand-filename)
	(cedet-idutils-version-check):
	* cedet-global.el (cedet-gnu-global-expand-filename)
	(cedet-gnu-global-version-check):
	* cedet-cscope.el (cedet-cscope-expand-filename)
	(cedet-cscope-version-check): Use called-interactively-p instead
	of interactive-p.

	* semantic/ia.el (semantic-ia-completion-format-tag-function):
	Use semantic-format-tag-prototype.

2009-11-21  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/complete.el (semantic-complete-read-tag-engine)
	(semantic-complete-jump-local, semantic-complete-jump):
	Improve prompt string.

2009-11-20  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/complete.el (semantic-complete-inline-map): Doc fix.

	* semantic/idle.el (define-semantic-idle-service)
	(semantic-idle-summary-mode, semantic-idle-completions): Doc fix.

2009-11-20  Chong Yidong  <cyd@stupidchicken.com>

	* cedet.el (cedet-menu-map): Re-order menu items.

	* semantic.el: Enable idle-mode menu items only if
	global-semantic-idle-scheduler-mode is enabled.
	(semantic-default-submodes): Doc fix.

	* semantic/idle.el (global-semantic-idle-scheduler-mode):
	When turning off, disable other idle modes.

2009-11-15  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/idle.el (semantic-idle-summary-mode)
	(semantic-idle-summary-mode): Define using define-minor-mode
	instead of define-semantic-idle-service.
	(semantic-idle-summary-mode): New function.
	(semantic-idle-summary-mode-setup): Use pre-command-hook to ensure
	that mouse motion does not reset the echo area.

2009-11-08  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/ctxt.el (semantic-get-local-variables):
	Disable the progress reporter entirely.

2009-11-03  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/fw.el (semantic/loaddefs):
	* srecode.el (srecode/loaddefs):
	* ede.el (ede/loaddefs): Load rather than require.
	* ede/cpp-root.el:
	* ede/emacs.el:
	* ede/files.el:
	* ede/linux.el:
	* ede/locate.el:
	* ede/make.el:
	* ede/shell.el:
	* ede/speedbar.el:
	* ede/system.el:
	* ede/util.el:
	* semantic/analyze.el:
	* semantic/bovine.el:
	* semantic/complete.el:
	* semantic/ctxt.el:
	* semantic/db-file.el:
	* semantic/db-find.el:
	* semantic/db-global.el:
	* semantic/db-mode.el:
	* semantic/db-typecache.el:
	* semantic/db.el:
	* semantic/debug.el:
	* semantic/dep.el:
	* semantic/doc.el:
	* semantic/edit.el:
	* semantic/find.el:
	* semantic/format.el:
	* semantic/html.el:
	* semantic/ia-sb.el:
	* semantic/ia.el:
	* semantic/idle.el:
	* semantic/lex-spp.el:
	* semantic/lex.el:
	* semantic/mru-bookmark.el:
	* semantic/scope.el:
	* semantic/senator.el:
	* semantic/sort.el:
	* semantic/symref.el:
	* semantic/tag-file.el:
	* semantic/tag-ls.el:
	* semantic/tag-write.el:
	* semantic/tag.el:
	* semantic/util-modes.el:
	* semantic/analyze/complete.el:
	* semantic/analyze/refs.el:
	* semantic/bovine/c.el:
	* semantic/bovine/gcc.el:
	* semantic/bovine/make.el:
	* semantic/bovine/scm.el:
	* semantic/decorate/include.el:
	* semantic/decorate/mode.el:
	* semantic/symref/cscope.el:
	* semantic/symref/global.el:
	* semantic/symref/grep.el:
	* semantic/symref/idutils.el:
	* semantic/symref/list.el:
	* semantic/wisent/java-tags.el:
	* semantic/wisent/javascript.el:
	* srecode/compile.el:
	* srecode/cpp.el:
	* srecode/document.el:
	* srecode/el.el:
	* srecode/expandproto.el:
	* srecode/getset.el:
	* srecode/insert.el:
	* srecode/java.el:
	* srecode/map.el:
	* srecode/mode.el:
	* srecode/template.el:
	* srecode/texi.el: Remove the file-local setting of
	generated-autoload-feature.

2009-11-03  Glenn Morris  <rgm@gnu.org>

	* mode-local.el (with-mode-local): Doc fix.

2009-10-31  Chong Yidong  <cyd@stupidchicken.com>

	* cedet.el (cedet-menu-map): Remove Semantic and EDE menu
	items.

	* ede.el (ede-minor-mode):
	* semantic.el (semantic-mode): Toggle menu separators.

2009-10-31  Glenn Morris  <rgm@gnu.org>

	* semantic/tag.el (semantic--tag-link-list-to-buffer):
	Use mapc rather than mapcar because the return value is never used.

	* srecode/template.el, semantic/wisent/javascript.el:
	* semantic/wisent/java-tags.el, semantic/texi.el:
	* semantic/html.el:
	Suppress harmless warnings about setting up semantic-imenu (not
	part of Emacs) variables.

2009-10-30  Stefan Monnier  <monnier@iro.umontreal.ca>

	* srecode/srt-mode.el (semantic-analyze-possible-completions):
	* semantic/symref/list.el (semantic-symref-rb-toggle-expand-tag):
	* semantic/symref/grep.el (semantic-symref-perform-search):
	* semantic/bovine/gcc.el (semantic-gcc-query):
	* semantic/bovine/c.el (semantic-c-parse-lexical-token):
	* semantic/analyze/debug.el (semantic-analyzer-debug-add-buttons)
	(semantic-analyzer-debug-global-symbol)
	(semantic-analyzer-debug-missing-innertype)
	(semantic-analyzer-debug-insert-include-summary):
	* semantic/util.el (semantic-file-tag-table)
	(semantic-describe-buffer-var-helper, semantic-something-to-tag-table)
	(semantic-recursive-find-nonterminal-by-name):
	* semantic/tag-ls.el (semantic-tag-calculate-parent-default):
	* semantic/tag-file.el (semantic-prototype-file):
	* semantic/symref.el (semantic-symref-parse-tool-output):
	* semantic/sb.el (semantic-sb-fetch-tag-table):
	* semantic/lex-spp.el (semantic-lex-spp-lex-text-string):
	* semantic/idle.el (semantic-idle-work-for-one-buffer)
	(semantic-idle-summary-maybe-highlight):
	* semantic/ia-sb.el (semantic-ia-speedbar)
	(semantic-ia-sb-tag-info):
	* semantic/grammar.el (semantic-analyze-possible-completions):
	* semantic/find.el (semantic-brute-find-tag-by-position):
	* semantic/ede-grammar.el (project-compile-target)
	(ede-proj-makefile-insert-variables):
	* semantic/debug.el (semantic-debug-set-parser-location)
	(semantic-debug-set-source-location, semantic-debug-interface-layout)
	(semantic-debug-mode, semantic-debug):
	* semantic/db.el (semanticdb-needs-refresh-p):
	* semantic/db-typecache.el (semanticdb-typecache-refresh-for-buffer):
	* semantic/db-javascript.el (semanticdb-equivalent-mode):
	* semantic/db-find.el (semanticdb-find-log-new-search)
	(semanticdb-find-translate-path-includes--internal)
	(semanticdb-reset-log, semanticdb-find-log-activity):
	* semantic/db-file.el (object-write):
	* semantic/db-el.el (semanticdb-equivalent-mode):
	* semantic/db-ebrowse.el (semanticdb-ebrowse-C-file-p)
	(semanticdb-create-ebrowse-database):
	* semantic/db-debug.el (semanticdb-table-sanity-check):
	* semantic/complete.el (semantic-displayor-focus-request)
	(semantic-collector-calculate-completions-raw)
	(semantic-complete-read-tag-analyzer):
	* semantic/analyze.el (semantic-analyze-pulse):
	* ede/util.el (ede-update-version-in-source):
	* ede/proj.el (project-delete-target):
	* ede/proj-elisp.el (ede-update-version-in-source)
	(ede-proj-flush-autoconf):
	* ede/pconf.el (ede-proj-configure-synchronize)
	(ede-proj-configure-synchronize):
	* ede/locate.el (ede-locate-file-in-project-impl):
	* ede/linux.el (ede-linux-version):
	* ede/emacs.el (ede-emacs-version):
	* ede/dired.el (ede-dired-add-to-target):
	* ede.el (ede-buffer-header-file, ede-find-target)
	(ede-buffer-documentation-files, ede-project-buffers, ede-set)
	(ede-target-buffers, ede-buffers, ede-make-project-local-variable):
	* cedet-idutils.el (cedet-idutils-fnid-call)
	(cedet-idutils-lid-call, cedet-idutils-expand-filename)
	(cedet-idutils-version-check):
	* cedet-global.el (cedet-gnu-global-call)
	(cedet-gnu-global-expand-filename, cedet-gnu-global-root)
	(cedet-gnu-global-version-check, cedet-gnu-global-scan-hits):
	* cedet-cscope.el (cedet-cscope-call)
	(cedet-cscope-expand-filename, cedet-cscope-version-check):
	Use with-current-buffer.
	* ede.el (ede-make-project-local-variable)
	(ede-set-project-variables, ede-set): Use dolist.

2009-10-28  Stefan Monnier  <monnier@iro.umontreal.ca>

	* mode-local.el (make-obsolete-overload): Add `when' argument.
	(overload-docstring-extension): Use that info.
	* semantic/fw.el (semantic-alias-obsolete): Pass the `when' info.
	* semantic/idle.el (semantic-eldoc-current-symbol-info):
	* semantic/tag-ls.el (semantic-nonterminal-protection)
	(semantic-nonterminal-abstract, semantic-nonterminal-leaf)
	(semantic-nonterminal-full-name): Add the new `when' info.
	* semantic/decorate/mode.el (semantic/decorate): Require CL for
	`assert'.

2009-10-25  Stefan Monnier  <monnier@iro.umontreal.ca>

	* semantic/fw.el (semantic-alias-obsolete)
	(semantic-varalias-obsolete): Make the `when' arg mandatory.
	(define-mode-overload-implementation):
	* semantic/decorate/mode.el (semantic-decorate-pending-decoration-hooks):
	* semantic/wisent.el (wisent-lex-make-token-table):
	* semantic/util.el (semantic-file-token-stream)
	(semantic-something-to-stream):
	* semantic/tag.el (semantic-tag-make-assoc-list)
	(semantic-expand-nonterminal):
	* semantic/tag-file.el (semantic-find-nonterminal)
	(semantic-find-dependency, semantic-find-nonterminal)
	(semantic-find-dependency):
	* semantic/lex.el (semantic-flex-start, semantic-flex-end)
	(semantic-flex-text, semantic-flex-make-keyword-table)
	(semantic-flex-keyword-p, semantic-flex-keyword-put)
	(semantic-flex-keyword-get, semantic-flex-map-keywords)
	(semantic-flex-keywords, semantic-flex-buffer, semantic-flex-list):
	* semantic/java.el (semantic-java-prototype-nonterminal):
	* semantic/idle.el (semantic-before-idle-scheduler-reparse-hooks)
	(semantic-after-idle-scheduler-reparse-hooks):
	* semantic/edit.el (semantic-edits-incremental-reparse-failed-hooks):
	* semantic/db-mode.el (semanticdb-mode-hooks):
	* semantic.el (semantic-toplevel-bovine-table)
	(semantic-toplevel-bovine-cache)
	(semantic-before-toplevel-bovination-hook, semantic-init-hooks)
	(semantic-init-mode-hooks, semantic-init-db-hooks)
	(semantic-bovination-working-type): Provide the `when' arg.

2009-10-24  Chong Yidong  <cyd@stupidchicken.com>

	* semantic/util.el (semantic-recursive-find-nonterminal-by-name):
	* semantic/tag.el (semantic-token-type-parent): Add WHEN
	argument to make-obsolete.

	* semantic/fw.el (semantic-alias-obsolete)
	(semantic-varalias-obsolete): Add optional WHEN argument.

2009-10-21  Eric Ludlam  <zappo@gnu.org>

	* semantic/bovine/c.el (semantic-c-debug-mode-init)
	(semantic-c-debug-mode-init-pch): New functions.
	(semantic-c-debug-mode-init-last-mode): New var.
	(semantic-c-parse-lexical-token): Use them.

	* semantic/lex-spp.el (semantic-lex-spp-anlyzer-do-replace):
	When extracting the argument list, limit only by point-max.

2009-10-17  Chong Yidong  <cyd@stupidchicken.com>

	* srecode/srt.el:
	* srecode/compile.el:
	* semantic/mru-bookmark.el:
	* semantic/debug.el:
	* semantic/complete.el:
	* semantic/analyze.el: Require CL when compiling.

2009-10-17  Eric Ludlam  <zappo@gnu.org>

	* semantic/scope.el
	(semantic-analyze-scoped-inherited-tag-map): Wrap calculation of
	tmpscope so that the regular scope will continue to work.

	* semantic/idle.el (semantic-idle-tag-highlight):
	Use semantic-idle-summary-highlight-face as the highlighting.

	* ede/project-am.el (project-run-target): New method.
	(project-run-target): New method.

	* ede.el (ede-target): Add run target menu item.
	(ede-project, ede-minor-keymap): Add ede-run-target binding.
	(ede-run-target): New function.
	(ede-target::project-run-target): New method.

	* ede/proj.el (project-run-target): New method.

	* ede/proj-shared.el (ede-gcc-libtool-shared-compiler)
	(ede-g++-libtool-shared-compiler): Remove SHELL.  Remove COMMANDS.
	Add :rules.
	(ede-proj-target-makefile-shared-object): Only libtool compilers
	now available.  Add linkers for libtool.
	(ede-cc-linker-libtool, ede-g++-linker-libtool): New.
	(ede-proj-makefile-target-name): Always use .la extension.

	* ede/proj-prog.el (project-run-target): New method.

	* ede/proj-obj.el (ede-cc-linker): Rename from ede-gcc-linker.
	(ede-g++-linker): Change Change link lines.

	* ede/pmake.el (ede-pmake-insert-variable-shared):
	When searching for old variables, go to the end of the buffer and
	search backward from there.
	(ede-proj-makefile-automake-insert-subdirs)
	(ede-proj-makefile-automake-insert-extradist): New methods.
	(ede-proj-makefile-create): Use them.

	* ede/pconf.el (ede-proj-configure-test-required-file):
	Force FILE to expand to the current target.  Use file-exists-p to
	check that it exists.

	* ede/linux.el (ede-linux-version): Don't call "head".
	(ede-linux-load): Wrap dir in file-name-as-directory.
	Set :version slot.

	* ede/files.el (ede-get-locator-object): When enabling
	locate, do so on "top".

	* ede/emacs.el (ede-emacs-file-existing): Wrap "dir" in
	file-name-as-directory during compare.
	(ede-emacs-version): Return Emacs/XEmacs differentiator.
	Get version number from different places.  Don't call egrep.
	(ede-emacs-load): Set :version slot.  Call file-name-as-directory
	to set the directory.

	* ede/shell.el: New file.

	* inversion.el (inversion-decoders): Allow for stray . in
	alpha/beta variants.

2009-10-17  Glenn Morris  <rgm@gnu.org>

	* semantic/grammar.el (semantic-grammar--lex-delim-spec):
	All errors should have messages.

2009-10-10  Sascha Wilde  <wilde@sha-bang.de>

	* ede/proj-shared.el (ede-proj-makefile-target-name):
	Use .la for Automake.

2009-10-09  Chong Yidong  <cyd@stupidchicken.com>

	* ede/pconf.el (ede-proj-configure-synchronize):
	Use "autoreconf -i".  Suggested by Andreas Schwab.

2009-10-08  Chong Yidong  <cyd@stupidchicken.com>

	* ede/proj.el (project-make-dist, project-compile-project):
	Fix filename test.
	(ede-proj-dist-makefile): Use expand-file-name instead of concat
	to expand file names.

2009-10-08  Chong Yidong  <cyd@stupidchicken.com>

	* ede/proj-obj.el (ede-gcc-linker): New var.
	(ede-proj-target-makefile-objectcode): Use it.

	* ede/source.el (ede-want-any-source-files-p)
	(ede-want-any-auxiliary-files-p, ede-want-any-files-p):
	Return search result.  This error was introduced while merging.

2009-10-04  Chong Yidong  <cyd@stupidchicken.com>

	* semantic.el (semantic-new-buffer-setup-functions): New option.
	(semantic-new-buffer-fcn): Call parser setup functions here.
	(semantic-mode): Don't call parser setup functions here, it's done
	in semantic-new-buffer-fcn now.
	(semantic-mode): Parse all existing buffers when enabled.

	* srecode/compile.el (srecode-compile-file):
	Call semantic-new-buffer-fcn if the buffer has not been parsed.

2009-10-04  Chong Yidong  <cyd@stupidchicken.com>

	* ede/pmake.el (ede-pmake-insert-variable-once): Delete.

	* ede/proj-comp.el: Don't require ede/pmake at toplevel.
	(proj-comp-insert-variable-once): New macro, renamed from
	ede-pmake-insert-variable-once in ede/pmake.edl.
	(ede-proj-makefile-insert-variables): Use it.

2009-10-04  Juanma Barranquero  <lekktu@gmail.com>

	* ede/makefile-edit.el (makefile-beginning-of-command)
	(makefile-end-of-command):
	* srecode/srt-mode.el (semantic-beginning-of-context)
	(semantic-end-of-context): Fix previous change.  Doc fixes.

2009-10-04  Juanma Barranquero  <lekktu@gmail.com>

	* ede/makefile-edit.el (makefile-beginning-of-command)
	(makefile-end-of-command):
	* semantic/lex.el (semantic-lex-token):
	* semantic/analyze/fcn.el
	(semantic-analyze-dereference-metatype-1):
	* semantic/bovine/c.el (semantic-lex-cpp-define)
	(semantic-lex-cpp-undef):
	* semantic/wisent/wisent.el (wisent-skip-block):
	* srecode/srt-mode.el (semantic-beginning-of-context)
	(semantic-end-of-context): Fix typos in docstrings.

2009-10-04  Chong Yidong  <cyd@stupidchicken.com>

	* ede.el (ede-project-placeholder-cache-file):
	* semantic/db-file.el (semanticdb-default-save-directory):
	* srecode/map.el (srecode-map-save-file):
	Use locate-user-emacs-file.  Suggested by Juanma Barranquero.

2009-10-03  Chong Yidong  <cyd@stupidchicken.com>

	* srecode/insert.el: Require srecode/args.

	* srecode/args.el: Require srecode/dictionary instead of
	srecode/insert.

	* srecode/srt-mode.el (srecode-template-mode): Doc fix.

	* semantic.el (semantic-mode):
	Handle srecode-template-mode-hook as well.
	(semantic-mode): Use js-mode-hook for Javascript hook.

	* srecode/template.el: Remove hook variable.

	* ede/proj-comp.el: Require ede/pmake when compiling.

	* ede.el (ede-target-forms-menu): Don't enable if no
	projects exist.
	(ede-project-placeholder-cache-file): Default to a file in
	user-emacs-directory.

	* srecode/map.el (srecode-map-base-template-dir): Look for
	templates in data-directory.
	(srecode-map-save-file): Default to a file in user-emacs-directory.

	* ede/srecode.el (ede-srecode-setup): Use default templates
	directory.

2009-09-30  Eric Ludlam  <zappo@gnu.org>

	* semantic/util-modes.el (semantic-highlight-func-mode):
	Doc fix.

	* ede/proj-comp.el (ede-proj-makefile-insert-variables):
	Only insert each variable once.

	* ede/pmake.el (ede-pmake-insert-variable-once): New macro.
	(ede-pmake-insert-variable-shared): Use it.

	* ede/cpp-root.el (ede-preprocessor-map): Do not deref table
	for lexical table iff table is nil.

2009-10-01  Glenn Morris  <rgm@gnu.org>

	* semantic/bovine/gcc.el
	(semantic-c-reset-preprocessor-symbol-map): Fix declaration.
	(semantic-gcc-get-include-paths, semantic-gcc-setup-data): Doc fixes.

2009-10-03  Glenn Morris  <rgm@gnu.org>

	* semantic/db-find.el (data-debug-insert-tag-list): Comment out
	declaration, currently false.

2009-10-01  Glenn Morris  <rgm@gnu.org>

	* cedet-files.el (cedet-directory-name-to-file-name):
	* cedet-idutils.el (cedet-idutils-search)
	(cedet-idutils-expand-filename, cedet-idutils-support-for-directory)
	(cedet-idutils-version-check):
	* cedet.el (cedet-version):
	* data-debug.el (data-debug-insert-overlay-button)
	(data-debug-insert-overlay-list-button)
	(data-debug-insert-buffer-button)
	(data-debug-insert-buffer-list-button)
	(data-debug-insert-process-button, data-debug-insert-ring-button)
	(data-debug-insert-widget, data-debug-insert-stuff-list-button)
	(data-debug-insert-stuff-vector-button)
	(data-debug-insert-symbol-button, data-debug-insert-string)
	(data-debug-insert-number, data-debug-insert-lambda-expression)
	(data-debug-insert-nil, data-debug-insert-simple-thing)
	(data-debug-insert-custom, data-debug-edebug-expr):
	* ede.el (ede-auto-add-method, ede-project-class-files)
	(global-ede-mode-map, ede-new, ede-debug-target)
	(ede-customize-current-target, ede-buffers, ede-map-buffers, ede-set):
	* semantic.el (semantic-minimum-working-buffer-size)
	(semantic-fetch-tags, semantic-submode-list)
	(semantic-default-submodes):
	* ede/source.el (ede-source-match):
	* ede/project-am.el (project-am-type-alist, project-add-file)
	(project-am-package-info):
	* ede/proj.el (ede-proj-target, project-new-target):
	* ede/proj-elisp.el (ede-proj-tweak-autoconf):
	* ede/proj-comp.el (ede-current-build-list):
	* ede/makefile-edit.el (makefile-move-to-macro):
	* ede/files.el (ede-toplevel-project-or-nil):
	* ede/cpp-root.el (initialize-instance):
	* ede/autoconf-edit.el (autoconf-find-last-macro)
	(autoconf-parameter-strip, autoconf-insert-new-macro):
	* semantic/wisent.el (wisent-lex-eoi):
	* semantic/util-modes.el (global-semantic-show-parser-state-mode)
	(semantic-show-parser-state-mode):
	* semantic/texi.el (semantic-texi-environment-regexp):
	* semantic/tag.el (semantic-tag-new-variable)
	(semantic-tag-class, semantic-tag-new-variable, semantic-tag-copy)
	(semantic--tag-deep-copy-attributes, semantic--tag-deep-copy-value)
	(semantic--tag-deep-copy-tag-list)
	(semantic-tag-components-with-overlays-default):
	* semantic/symref.el (semantic-symref-find-text):
	* semantic/senator.el (senator-yank-tag)
	(senator-transpose-tags-up):
	* semantic/scope.el (semantic-analyze-scoped-tags-default)
	(semantic-analyze-scoped-inherited-tags, semantic-scope-find):
	* semantic/sb.el (semantic-sb-autoexpand-length):
	* semantic/lex.el (semantic-lex-comment-regex)
	(semantic-lex-maximum-depth, define-lex, semantic-lex-token)
	(semantic-lex-unterminated-syntax-protection, define-lex-analyzer):
	* semantic/lex-spp.el
	(semantic-lex-spp-dynamic-macro-symbol-obarray-stack)
	(semantic-lex-spp-symbol, semantic-lex-spp-one-token-to-txt):
	* semantic/idle.el
	(semantic-idle-summary-current-symbol-info-brutish)
	(semantic-idle-summary-current-symbol-info-default):
	* semantic/grammar.el (semantic-grammar-recreate-package)
	(semantic--grammar-macro-compl-dict):
	* semantic/grammar-wy.el (semantic-grammar-wy--parse-table):
	* semantic/format.el (semantic-format-tag-custom-list)
	(semantic-format-tag-canonical-name-default):
	* semantic/find.el (semantic-find-tag-by-overlay-in-region)
	(semantic-find-tags-for-completion)
	(semantic-find-tags-by-scope-protection-default)
	(semantic-deep-find-tags-for-completion):
	* semantic/edit.el
	(semantic-edits-incremental-reparse-failed-hook)
	(semantic-edits-verbose-flag, semantic-edits-assert-valid-region)
	(semantic-edits-splice-remove, semantic-edits-splice-replace):
	* semantic/doc.el (semantic-documentation-comment-preceeding-tag):
	* semantic/dep.el (semantic-dependency-include-path):
	* semantic/db.el (semanticdb-default-find-index-class)
	(semanticdb-match-any-mode, semanticdb-with-match-any-mode)
	(semanticdb-project-roots):
	* semantic/db-find.el (semanticdb-implied-include-tags)
	(semanticdb-find-adebug-insert-scanned-tag-cons)
	(semanticdb-find-log-buffer-name, semanticdb-find-result-mapc)
	(semanticdb-brute-deep-find-tags-for-completion):
	* semantic/db-ebrowse.el (semanticdb-ebrowse-add-tree-to-table):
	* semantic/ctxt.el (semantic-beginning-of-context-default)
	(semantic-end-of-context-default)
	(semantic-ctxt-current-function-default)
	(semantic-ctxt-scoped-types-default):
	* semantic/complete.el (semantic-complete-read-tag-engine)
	(semantic-complete-inline-tag-engine)
	(semantic-complete-inline-custom-type)
	(semantic-complete-read-tag-analyzer):
	* semantic/chart.el (semantic-chart-tags-by-class)
	(semantic-chart-database-size):
	* semantic/analyze.el (semantic-analyze-current-symbol)
	(semantic-analyze-current-context):
	* semantic/symref/list.el (semantic-symref)
	(semantic-symref-hide-buffer, semantic-symref-symbol):
	* semantic/symref/grep.el (semantic-symref-grep-use-template):
	* semantic/symref/filter.el (semantic-symref-hits-in-region):
	* semantic/bovine/el.el (semantic-elisp-form-to-doc-string):
	* semantic/bovine/c.el (semantic-lex-c-preprocessor-symbol-map)
	(semantic-c-parse-token-hack-depth, semantic-c--template-name-1)
	(semantic-c-dereference-template):
	* semantic/analyze/refs.el (semantic--analyze-refs-full-lookup)
	(semantic--analyze-refs-full-lookup-with-parents)
	(semantic--analyze-refs-full-lookup-simple):
	* semantic/analyze/complete.el
	(semantic-analyze-possible-completions):
	* srecode/table.el (srecode-mode-table-new):
	* srecode/srt.el (srecode-read-variable-name):
	* srecode/srt-mode.el (srecode-macro-help, srecode-in-macro-p):
	* srecode/semantic.el (srecode-semantic-handle-:tag)
	(srecode-semantic-handle-:tagtype, srecode-semantic-insert-tag):
	* srecode/map.el (srecode-current-map):
	* srecode/insert.el (srecode-insert)
	(srecode-insert-variable-secondname-handler, srecode-insert-method)
	(srecode-template-inserter-point-override)
	(srecode-insert-include-lookup):
	* srecode/getset.el (srecode-auto-choose-class):
	* srecode/extract.el (srecode-inserter-extract):
	* srecode/document.el
	(srecode-document-autocomment-return-last-alist)
	(srecode-document-autocomment-param-type-alist)
	(srecode-document-insert-function-comment)
	(srecode-document-insert-variable-one-line-comment)
	(srecode-document-function-name-comment):
	* srecode/dictionary.el (srecode-create-dictionary)
	(srecode-compound-toString):
	* srecode/compile.el (srecode-flush-active-templates):
	* srecode/args.el (srecode-semantic-handle-:blank):
	Doc/message fixes.

2009-10-01  Juanma Barranquero  <lekktu@gmail.com>

	* semantic/wisent/javat-wy.el
	(wisent-java-tags-wy--keyword-table): Use \000 instead of literal ^@.

2009-09-30  Juanma Barranquero  <lekktu@gmail.com>

	* srecode/expandproto.el: Fix provide statement.

2009-09-30  Sascha Wilde  <wilde@sha-bang.de>

	* ede/srecode.el: Fix provide statement.

2009-09-30  Glenn Morris  <rgm@gnu.org>

	* ede/proj.el (ede-proj-target-makefile-miscelaneous):
	* ede/proj-aux.el (ede-aux-source):
	* ede/proj-misc.el (ede-proj-target-makefile-miscelaneous)
	(ede-misc-source):
	* semantic/mru-bookmark.el (semantic-mrub-completing-read)
	(semantic-mrub-switch-tags): Fix doc typos.

	* semantic/db-global.el (data-debug-new-buffer)
	(data-debug-insert-thing): Remove unneeded declarations (one broken).
	(semanticdb-enable-gnu-global-databases): Fix prompt typo.

	* semantic/analyze/fcn.el (semantic-scope-find): Fix declaration.

	* semantic/bovine/gcc.el (semantic-gcc-setup): Replace runtime
	use of CL function `remove-if-not'.

2009-09-29  Glenn Morris  <rgm@gnu.org>

	* semantic/symref/idutils.el:
	* semantic/symref/list.el: Relicense under GPLv3+.

	* ede/srecode.el (srecode-resolve-arguments): Fix declaration.

	* semantic/complete.el (semantic-displayor-focus-abstract-child-p):
	* semantic/tag-file.el (semanticdb-table-child-p):
	* srecode/compile.el (srecode-template-inserter-newline-child-p):
	Mark declarations not understood by check-declare.

2009-09-28  Eric Ludlam  <zappo@gnu.org>

	CEDET (development tools) package merged.

	* *.el:
	* ede/*.el:
	* semantic/*.el:
	* srecode/*.el: New files.

2009-09-28  Eric Ludlam  <zappo@gnu.org>

	* cedet-cscope.el:
	* cedet-files.el:
	* cedet-global.el:
	* cedet-idutils.el:
	* data-debug.el:
	* inversion.el:
	* mode-local.el:
	* pulse.el: New files.

;; Local Variables:
;; coding: utf-8
;; End:

	Copyright (C) 2009-2018 Free Software Foundation, Inc.

  This file is part of GNU Emacs.

  GNU Emacs is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  GNU Emacs is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.
