                             RCLE COLLECTOR
                               rival.rcle
                               draft doc
                           richard 1995-08-02

Notes from RCLE Meeting

LISP GC with guaranteed real-time and response time.  Never more than 10ms in 
GC.  Initially, 1 to 10ms.  99.9% must be less 10ms.  All less than 50ms.  
Throughput on whole system.  Not more than 30% slower than ordinary LISP 
overall.
App: Telephone or comms switch with lots of network communications.  Switch 
hardware with messages to switch processor.  Time-outs cause "traffic jam" and 
the whole thing falls apart under load.
Machine has no VM, with 50Mb of real memory available.
Apps in CLOS with a fair bit of allocation (mostly non-CLOS) with 4ish stacks 
active and 9 total.  20Mb image.  Collecting atomically takes a few seconds -- 
about 1000 times too long.  Incremental collection is required, because even 
generational collection doesn't guarantee.
Main problems: incrementality, promotion (with fixup), generational, context 
switching time (dynamic binding), time spent in run-time system.
Copying difficult because of hashing on address values -- slow/unpredictable.  
Easy to get incrementality right, though.
Object table bounds motion of objects.

