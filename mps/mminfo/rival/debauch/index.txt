                       DEBAUCH BY JON CHRISTOPHER
                             rival.debauch
                             incomplete doc
                            pekka 1999-04-13

[...] my "new" memory leak detector, debauch (cf. "purify").  This is based on 
code from XFree86's memleak (rival.memleak) library, but cleaned up and turned 
into a stand-alone leak and memory allocation error detector.  The best thing 
about debauch is that it doesn't require recompilation or relinking of existing 
applications, and will therefore find leaks even in shared libraries which you 
may not want to (or be able to) recompile.  It accomplishes this via telling 
the run-time linker to override the standard memory allocation routines with 
those from debauch.

Debauch will keep track of several types of memory errors while the program is 
running, including memory leaks, corrupted memory, stores to freed memory and 
more.  After the program exits, debauch analyzes the errors and (with some help 
from gdb), prints a stack trace for each error.

The current version has been verified to work under linux, and should work on 
BSD.  There is stub code for MIPS and Sun architectures, and porting hints on 
other platforms.  Ports for other platforms are actively solicited.  The ports 
are hardware-dependent, because debauch needs to know how to unwind the stack 
when it reports errors.

Source is available at http://quorum.tamu.edu/jon/gnu/.

