                                MEMDEBUG
                             rival.memdebug
                               draft doc
                           richard 1995-08-02

I just saw this memory-problem dedicated newsgroup, and thought is would
be a good idea to tell you that you may FTP for FREE my MEMDEBUG package.
It is a portable ANSI-C library that, among others, detects memory
management errors and profiles your memory usage

Here is the README file

rEnE

-----------------------------------------------------------------------
----

MEMDEBUG version 1.5

Author: Rene Schmit
Email : rene.schmit@crpht.lu

************************************************************************

Copyright (C) 1992-1994
Centre de Recherche Public Henri Tudor
6, rue Coudenhove-Kalergi
L1359 Luxembourg-Kirchberg

This software may be copied, distributed, ported and modified in source or
object format as long as :

1) No distribution for commercial purposes is made.
2) No third-party copyrights (such as runtime licenses) are involved
3) This copyright notice is not removed or changed.

No responsibility is assumed for any damages that may result
from any defect in this software.

*************************************************************************


                         Package Description:


FEATURES:
---------
  MEMDEBUG is a free utility for C programmers that provides,
among others, the following features:

* Memory management error detection:
        Memory leaks
        free()'s of unallocated memory blocks
        ...
        
* Memory usage error detection
        Accesses to previously free()'ed memory
        Off-by-one errors in memory blocks
        ...

* Memory usage profiling
        All kind of memory usage statistics
        Trace of memory function calls
        ...

* Error simulation
        Low memory simulation
        ...


USAGE:
------
Using MEMDEBUG is very simple:

Compile the package once.

Add the following line to each of your sources:
#include "memdebug.h"

Recompile and link your program.

MEMDEBUG is activated by defining the MEMDEBUG
pre-processor symbol at compilation time


PLATFORMS:
----------
MEMDEBUG is written in ANSI C and should be completely portable.
It has been tested on the following platforms: ((?) == as far as I know)

MACINTOSH       MPW C
                GNU C
                Think/Symantec C

PC              Borland C
                                Microsoft C 7

HP Workstations (both 680x0 and RISC stations)
                HP C
                GNU C

DEC                     VAXC (feature subset, as VAXC not an ANSI
compiler)
                GNU C (?)
                                
SUN Sparc               GNU C

Indigo                  GNU C

Atari TT                GNU C

DISTRIBUTION:
-------------
The distribution kit contains all necessary sources and 
documentation (PostScript file). NO object files are provided.

There is a simple test program. BEWARE: this program might crash
on your machine, as it does some really nasty stuff. Use it primarily
to check which features are supported on your machine! (comment out
source until it doesn't crash any longer).

A sample makefile for UNIX users is included (provided by 
Wilfred Mollenvanger and John Borst)

memalpha.c
memalpha.h
memdebug.c
memdebug.h
memfree.c
memfree.h
memtypes.i
test.c
README
Quickstarter_Guide.txt
Memdebug.ps
makefile

MEMDEBUG is free! It is available by ftp on the following server:

+-------------------------------------------------+
| ftp.crpht.lu in directory /pub/sources/memdebug |
+-------------------------------------------------+

This server is brand new, so there might still be some
problems, and the directory structure might change in the near
future.

People in the US might also try:

ftp.netcom.com in directory /pub/gurgle/memdebug

Feel free to make MEMDEBUG available on other ftp sites!

Support:
--------

There exist two mailing lists related to MEMDEBUG. For more
information, send an email to

majordomo@dorado.crpht.lu

with the following body

help
info memdebug
info memdebug-announce
end


You may also contact me by email if you
    * have any problems
    * detect any bugs
    * have suggestions for improvements
        * ported MEMDEBUG to a platform or compiler not mentionned above
        
And above all, email me if you

        * like :-) (or dislike :-( ) MEMDEBUG

