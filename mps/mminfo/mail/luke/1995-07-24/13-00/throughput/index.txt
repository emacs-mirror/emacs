                     MM/EP REQUIREMENTS: THROUGHPUT
                 mail.luke.1995-07-24.13-00.throughput
                            temporary quote
                            luke 1995-07-24

From: Luke Tunmer <luke>
Date: Mon, 24 Jul 1995 13:00:53 +0100
To: richard (Richard Brooksby)
Subject: MM/EP requirements: Throughput

Richard Brooksby writes:
 > Tucker asks:
 > 
 > > I don't know whether this is QUAL or FUN, but their throughput constraint
 > > seems to imply GC must minimize overhead, essentially that it is
 > > anti-incremental.  It waits until the last possible moment to collect
 > > (hopefully avoiding collection altogether) and when it does collect, it
 > > should utilize all the CPU cycles it can to get the job done quickly.  A
 > > question I have is if there is a problem when driving an actual output
 > > device where your throughput is dependent not just how many jobs you can
 > > RIP but also on keeping the device busy?  I assume that the output device
 > > may have some limiting bandwidth?  Or is it always the case that the RIP is
 > > the limit?
 > 
 > 

A GC is so rare in the postscript world that we don't want the incremental
overhead. I'm assuming that tickles will still be called from the GC, to keep
the UI going and to service the throughput controller which is driving the
output recorder from pre-ripped jobs. The RIP can also be put in a mode where
the recorder is driven directly from the RIP without going to disk. However, no
postscript is being interpreted at this stage, so a GC wont happen then. We do
have a parallel version of the RIP that allows interpretion and rendering to
happen at the same time, but, once again, the interpreter thread stopping for a
while to do a complete GC at this time is not a problem.

Luke

