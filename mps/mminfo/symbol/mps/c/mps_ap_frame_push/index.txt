              MPS C INTERFACE: FUNCTION MPS_AP_FRAME_PUSH
                     symbol.mps.c.mps_ap_frame_push
                           incomplete symbol
                             drj 1998-10-16

NAME

mps_ap_frame_push


SUMMARY

Declares a new frame as part of the AP stack protocol.


ASSOCIATED PROTOCOLS

AP Stack Protocol


TYPE

mps_res_t (mps_ap_frame_push)(mps_frame_t * /* frameReturn */, mps_ap_t /* ap  
*/);


ARGUMENTS

mps_frame_t *frameReturn
  The frame return parameter.  A new frame (declared by this function) is 
stored in this location if this function is successful.
mps_ap_t ap
  The allocation point in which the new frame is declared.


RETURNED VALUES

A result code in the usual way.  The creation of new frame objects (which is 
implicit in the action of this function) can consume resources, so this 
function can fail because there are insufficient resources.  This function may 
fail if the correct protocol is not followed by the client.


DESCRIPTION

This function declares a new frame in the specified allocation point, makes 
that new frame a child of the current frame, changes the current frame to be 
the newly created frame, and returns a handle to the frame.  Frames have two 
important features: A single frame identifies a set of objects (those objects 
that are "allocated in the frame") which can be destroyed (or declared dead) in 
a pop operation (see mps_ap_frame_pop); They are arranged in a partially 
ordered sequence (this is important when the pop operation is used).  A fuller 
and more useful description is found in the AP stack protocol document 
(protocol.mps.alloc-point.stack).


EXAMPLE

[missing]


ERROR HANDLING

Errors can either be because the client hasn't followed the correct protocol in 
which case there isn't much that we can recommend or else because some needed 
resource isn't available.  The usual course of actions when short of resources 
is recommended.


SEE ALSO

symbol.mps.c.mps_ap_frame_pop, protocol.mps.alloc-point.stack


NOTES




INTERNAL NOTES:

Error handling is a bit weak.

