              MPS C INTERFACE: MPS_AP_ALLOC_PATTERN_BEGIN
                symbol.mps.c.mps_ap_alloc_pattern_begin
                           incomplete symbol
                           gavinm 1998-10-21

NAME

mps_ap_alloc_pattern_begin


SUMMARY

Indicates the start of allocation following a particular pattern.


ASSOCIATED PROTOCOLS

AP, allocation, ramps, GC


SYNTAX

mps_res_t mps_ap_alloc_pattern_begin(mps_ap_t ap, mps_alloc_pattern_t 
alloc_pattern)


ARGUMENTS

ap                     The allocation point in which the patterned allocation 
will occur
alloc_pattern          The pattern of the allocation


RETURNED VALUES

Result code indicating whether start of the allocation pattern was successfully 
registered.


DESCRIPTION

This function is used, together with mps_ap_alloc_pattern_end, to indicate 
periods of allocation in an allocation point that follow some pattern of 
lifetime.

The nesting/overlapping restrictions on allocation patterns may vary depending 
on the particular allocation pattern type, but in general, if 
mps_ap_alloc_pattern_begin is used multiple times on the same allocation point 
without intervening calls to mps_ap_alloc_pattern_end, the calls match in a 
stack-like way, outermost and innermost; that is, allocation patterns may nest, 
but not otherwise overlap.


EXAMPLE

{
  res = mps_ap_alloc_pattern_begin(ap, mps_alloc_pattern_ramp());
  assert(res == mps_res_ok);

  do_some_work(); /* Leaves stuff lying around */

  res = mps_ap_alloc_pattern_begin(ap, mps_alloc_pattern_ramp());
  assert(res == mps_res_ok);

  do_some_more_work(); /* Tidies up after itself */

  res = mps_ap_alloc_pattern_end(ap, mps_alloc_pattern_ramp());
  assert(res == mps_res_ok);

  tidy_up_first_work();

  res = mps_ap_alloc_pattern_end(ap, mps_alloc_pattern_ramp());
  assert(res == mps_res_ok);
}


ERROR HANDLING

Currently doesn't fail, but may in future if certain allocation patterns are 
inappropriate for that allocation point at that point in time.


SEE ALSO

symbol.mps.c.mps_alloc_pattern_ramp(0)
symbol.mps.c.mps_alloc_pattern_ramp_collect_all(0)
symbol.mps.c.mps_ap_alloc_pattern_end
symbol.mps.c.mps_ap_alloc_pattern_reset
protocol.mps.alloc-pattern-ramp(0)


NOTES


INTERNAL NOTES



