     DESCRIPTION OF THE MPS C INTERFACE SYMBOL "MPS_ARENA_CLASS_CL"
                    symbol.mps.c.mps_arena_class_cl
                              draft symbol
                            pekka 1997-09-26

NAME

mps_arena_class_cl


SUMMARY

"mps_arena_class_cl" returns the client arena class.


ASSOCIATED PROTOCOLS

Arena.


TYPE

mps_arena_class_t mps_arena_class_cl(void);


ARGUMENTS

None.


RETURNED VALUES

Returns the client arena class.


RESOURCES

mpsacl.h


DESCRIPTION

This function is used to get hold of [determine?] the client arena class, for 
the purpose of passing it to "mps_arena_create".


EXAMPLE

mps_arena_t arena;

int main(void)
{
  void *block;

  block = malloc(ARENA_SIZE);
  if(block == NULL) {
    printf("Not enough memory!"); exit(1);
  }
  if(mps_arena_create(&arena, mps_arena_class_cl(), ARENA_SIZE, block)
     != MPS_RES_OK) {
    printf("ARENA_SIZE too small"); exit(2);
  }
  /* rest of program */
}


ERROR HANDLING

None.


SEE ALSO

mps_arena_create, mps_arena_extend, mps_arena_retract

"Arena Protocol"


NOTES

A client arena gets its managed memory from the client.  An initial block is 
passed when the arena is created, and more can be added later using 
"mps_arena_extend".  When creating a client arena, "mps_arena_create" takes two 
extra arguments:

mps_res_t mps_arena_create(mps_arena_t *mps_arena_o, mps_arena_class_t 
mps_arena_class_cl, size_t size, void *block)

"block" is the address of the initial arena block, and "size" is its size in 
bytes.  If "mps_arena_create" returns "MPS_RES_MEMORY", then the block was too 
small to hold the internal arena structures.  Allocate a (much) larger one, and 
try again.


INTERNAL NOTES


