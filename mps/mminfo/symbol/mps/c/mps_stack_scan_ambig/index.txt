    DESCRIPTION OF THE MPS C INTERFACE SYMBOL "MPS_STACK_SCAN_AMBIG"
                   symbol.mps.c.mps_stack_scan_ambig
                           incomplete symbol
                            pekka 1998-01-23

NAME

mps_stack_scan_ambig


SUMMARY

A scanning function for ambiguous scanning of thread states.


ASSOCIATED PROTOCOLS

Root.


SYNTAX

mps_res_t mps_stack_scan_ambig(mps_ss_t scan_state, mps_thr_t thread,
                               void *stack_bottom, size_t ignore)

ARGUMENTS

scan_state    a scan state
thread        the thread
stack_bottom  a pointer to the bottom of the stack
ignore        ignored


RETURNED VALUES

A result code.


RESOURCES

mps.h


DESCRIPTION

This is a root scanning function of type "mps_reg_scan_t".  It will scan all 
integer registers and everything on the stack of the thread given, and can 
therefore only be used with roots of rank "MPS_RANK_AMBIG".  It will only scan 
things at the given stack bottom pointer or higher on the stack (that is, more 
recently added).  Clients don't usually call this function, it is mainly used 
as an argument of "mps_root_create_reg".

EXAMPLE

typedef struct {
  mps_root_t mmRoot;
  mps_thr_t thread;
  ...
} ThreadLocals;

void InitThread(ThreadLocals *thr)
{
  /* This is a hack to find the bottom of the stack. */
  void *stackBottom=&stackBottom;

  mps_thread_reg(&thr->thread, arena);
  mps_root_create_reg(&thr->mmRoot, arena, MPS_RANK_AMBIG, (mps_rm_t)0,
                      thr->thread, mps_stack_scan_ambig, stackBottom, 0)
  ...
}


SEE ALSO

mps_reg_scan_t, mps_root_create_reg


NOTES

The MPS provides this function, because it's hard to write (it's OS- and 
architecture-dependent and possibly compiler-dependent).


INTERNAL NOTES




