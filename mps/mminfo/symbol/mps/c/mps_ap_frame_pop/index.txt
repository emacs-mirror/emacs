               MPS C INTERFACE: FUNCTION MPS_AP_FRAME_POP
                     symbol.mps.c.mps_ap_frame_pop
                           incomplete symbol
                             drj 1998-10-19

NAME

mps_ap_frame_pop


SUMMARY

Declares that a set of objects in a particular frame are dead or likely to be 
dead.


ASSOCIATED PROTOCOLS

AP Stack Protocol


TYPE

mps_res_t (mps_ap_frame_pop)(mps_ap_t /* ap */, mps_frame_t /* frame */)


ARGUMENTS

mps_ap_t ap
  The allocation point in which the frame was pushed.
frame
  The frame.


RETURNED VALUES

A result code in the usual way.


DESCRIPTION

This function pops the specified frame making its parent the current frame 
(frames are implicitly created using the push operation, see 
symbol.mps.c.mps_ap_frame_push).  Popping invalidates the specified frame and 
all frames pushed since the specified frame.  Popping the frame makes a 
declaration about the set of objects which were allocated in the specified 
frame and also all frames which were pushed since the specified frame.  It can 
be used to declare a set of objects dead or likely to be mostly dead; the exact 
interpretation of the declaration depends on pool class that the allocation 
point is in (the same pool class that that objects are in).  Typically pool 
classes which are mostly manually managed will use this declaration to mean 
that the objects are dead and their space can be reclaimed immediately, whereas 
pool classes which are mostly automatically managed will use this declaration 
to mean that the objects are likely to be mostly dead (the pool class may use 
this declaration to alter its collection decisions).  Consult the pool class 
documentation for details.

In general a frame other than the current frame can be popped (all frames 
pushed more recently will be invalidated as well, as described above), but a 
particular pool class may impose the restriction that only the current frame 
may be popped.  This restriction means that every push must have a 
corresponding pop.  Consult the pool class documentation for details.

It is illegal to pass invalid frames to any MPS function.  In particular it is 
not possible to pop frames out of order (so the sequence "A = push, B = push, 
pop A, pop B" is illegal) or to pop to the same frame twice (so the sequence "A 
= push, pop A, pop A" is illegal).

More comprehensive documentation is available in the protocol document (AP 
Stack Protocol).


EXAMPLE

<example of how to use the symbol>


ERROR HANDLING

<how the client program should handle errors that the symbol returns, if 
applicable>


SEE ALSO

mps.protocol.alloc-point.stack, symbol.mps.c.mps_ap_frame_push


NOTES

None.


INTERNAL NOTES:

Gleaned from design.mps.alloc-frame.operation.pop

