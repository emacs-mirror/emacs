             MPS C INTERFACE: CONSTANT MPS_SAC_CLASS_LIMIT
                    symbol.mps.c.MPS_SAC_CLASS_LIMIT
                              draft symbol
                            pekka 1999-03-23

NAME

MPS_SAC_CLASS_LIMIT


SUMMARY

MPS_SAC_CLASS_LIMIT specifies how many classes mps_sac_create is guaranteed to 
accept.


TYPE

size_t


ASSOCIATED PROTOCOLS

Allocation cache


RESOURCES

mps.h


DESCRIPTION

MPS_SAC_CLASS_LIMIT specifies a lower limit on the maximum number of classes 
that can be described in a call to mps_sac_create, i.e., the MPS guarantees to 
accept at least this many classes.  More might be accepted -- in fact, there 
might not be any limit in the implementation on the maximum number of classes, 
but if you specify more than this, you should be prepared to handle the error.

MPS_SAC_CLASS_LIMIT is a macro suitable for use in a constant expression, both 
in a #if directive and wherever else constant expressions may be used.


EXAMPLE

  mps_sac_t sac;
  mps_sac_classes_s classes[3] = { {8, 38, 1}, {136, 19, 3}, {512, 4, 1} };
#if (MPS_SAC_CLASS_LIMIT < 3)
#  error "Too many classes!"
#endif

  res = mps_sac_create(&sac, pool, 3, classes);
  if (res != MPS_RES_OK) {
    printf("Failed to create the allocation cache!"); exit(1);
  }


SEE ALSO

symbol.mps.c.mps_sac_create


NOTES

If you ask for too many size classes, mps_sac_create returns MPS_RES_LIMIT; you 
can recover by combining some small adjacent classes.


INTERNAL NOTES:

Perhaps we ought to guarantee some minimum value for this, but not before we've 
had more experience.  pekka 1999-03-25

