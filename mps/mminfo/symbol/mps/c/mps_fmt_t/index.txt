         DESCRIPTION OF THE MPS C INTERFACE SYMBOL "MPS_FMT_T"
                         symbol.mps.c.mps_fmt_t
                              draft symbol
                             drj 1997-05-12

NAME

mps_fmt_t


SUMMARY

"mps_fmt_t" is the type of object formats.  It is opaque and is declared in 
"mps.h".


ASSOCIATED PROTOCOLS

Format, tracing, pool creation, allocation.


SYNTAX

Not applicable.


STRUCTURE

Not applicable.


TYPE

typedef struct mps_fmt_s *mps_fmt_t;

"struct mps_fmt_s" is an incomplete structure type used only to declare the 
opaque type "mps_fmt_t".


ARGUMENTS

Not applicable.


INITIAL/DEFAULT VALUES

Not applicable. [??]


RETURNED VALUES

Not applicable.


EXCEPTIONS

Not applicable.


RESOURCES

Not applicable. [?]


DESCRIPTION

"mps_fmt_t" is the opaque type of object formats.  An object format is a way 
for the MPS and client programs to communicate regarding the layout of client 
objects.  For more information, see protocol.mps.format.


EXAMPLE

[taken from impl.c.qs, more or less]
[and sometimes not very good style]

#include "mps.h"
#include "mpscamc.h"

#include <stdlib.h>

struct mps_fmt_A_s fmt_A_s =
  {
    (mps_align_t)4,
    scan, skip, copy,
    move, isMoved,
    pad
  };

void go(mps_space_t space)
{
  mps_fmt_t format;
  mps_res_t res;
  mps_pool_t pool;

  res = mps_fmt_create_A(&format, space, &mps_fmt_A_s);
  if(res != MPS_RES_OK) {
    abort();
  }
  res = mps_pool_create(&pool, space, mps_class_amc(), format);
  if(res != MPS_RES_OK) {
    /* [should really destroy format before aborting] */
    abort();
  }
  /* do some stuff here */
  mps_pool_destroy(pool);
  mps_format_create(format);
}


ERROR HANDLING

[Er, not sure what's supposed to go here.
The creation methods can fail is that what is wanted? -- drj]


SEE ALSO

mps_fmt_create_A, mps_fmt_destroy, mps_fmt_A_t, tracing

"Defining an Object Format", "Pool Options"


NOTES



INTERNAL NOTES


