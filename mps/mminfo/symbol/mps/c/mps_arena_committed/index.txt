            MPS C INTERFACE: FUNCTION "MPS_ARENA_COMMITTED"
                    symbol.mps.c.mps_arena_committed
                           incomplete symbol
                             lmb 1997-10-13

NAME

mps_arena_committed


SUMMARY

"mps_arena_committed" returns the amount of memory (backing store) in use by 
the arena, both for storing client objects and for its own data structures.


ASSOCIATED PROTOCOLS

Arena.


SYNTAX

extern size_t mps_arena_committed(mps_arena_t arena)


ARGUMENTS

arena -- the arena


RETURNED VALUES

Returns a number of bytes (the amount of committed memory) as a size_t.


RESOURCES

mps.h


DESCRIPTION

"mps_arena_committed" returns the amount of memory (backing store) in use by 
the arena (also known as "committed memory").  The value returned is a number 
of bytes.

Committed memory may be used both for storing client objects and for storing 
MPS data structures.  In addition the MPS maintains committed memory which is 
not being used (for either of the above purposes).  This memory is known as 
"spare committed" memory (see symbol.mps.c.mps_arena_spare_committed(0)).  The 
amount of "spare committed" memory can change at any time, in particular in 
will be reduced as appropriate in order meet client requests.

The reasons that the committed memory (as return by this function) might be 
large than the sum of the sizes of client allocated objects are:

- some memory is used internally by the MPS to manage its own data structures 
and to record information about client objects (such as free lists, page 
tables, colour tables, statistics, etc).

- operating systems (and hardware) typically restrict programs to requesting 
and releasing memory with a certain granularity (for example, pages), so extra 
memory is committed when this rounding is necessary.

- there might be "spare committed" memory.

The amount of committed memory is a good measure of how much virtual memory 
resource ("swap space") the MPS is using from the OS.

This function may be called whether the arena is unclamped, clamped or parked, 
if called when the arena in unclamped then the value may change after this 
function returns.  A possible use might be to call it just after 
"mps_arena_collect" to (over-)estimate the size of the heap.

If you want to know how much memory the MPS is using then you're probably 
interested in the value mps_arena_committed() - mps_arena_spare_committed().

The amount of committed memory can be limited with the function 
mps_arena_commit_limit symbol.mps.c.mps_arena_commit_limit(0)


EXAMPLE


ERROR HANDLING


SEE ALSO

mps_arena_collect, mps_arena_clamp, mps_arena_park, mps_arena_release


NOTES

-


INTERNAL NOTES:

mail.drj.1998-06-08.11-10(0) also has a description of mps_arena_committed, 
some of which I have incorporated here.  drj 1998-06-09

Note that this function under-estimates by one page per chunk because it fails 
to account for the VM descriptors.  Of course, the OS also commits memory on 
our behalf that it doesn't tell us about, so we can never be entirely 
accurate.  gavinm 1998-09-03

