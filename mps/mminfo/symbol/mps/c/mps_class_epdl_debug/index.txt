                 MPS C INTERFACE: MPS_CLASS_EPDL_DEBUG
                   symbol.mps.c.mps_class_epdl_debug
                              draft symbol
                            pekka 1998-09-11

NAME

mps_class_epdl_debug


SUMMARY

Returns the EPDLDebug pool class.


ASSOCIATED PROTOCOLS

Debug.


SYNTAX

mps_class_t mps_class_epdl_debug(void)


RETURNED VALUES

Returns the EPDLDebug pool class.


RESOURCES

mpscepdl.h


DESCRIPTION

This function is used to get hold of the EPDLDebug pool class, for the purpose 
of passing it to "mps_pool_create".

The EPDLDebug pool class is just like an EPDL pool class, except with debug 
features enabled.


EXAMPLE

static mps_pool_debug_option_s debugOptions = { (void *)"postpost", 8 };

if(mps_pool_create(&pool, arena, mps_class_epdl_debug(),
                   &debugOptions, 8192, 135, 8)
   != MPS_RES_OK) {
  printf("Error creating pool!"); exit(2);
}


ERROR HANDLING

Never fails.


SEE ALSO

symbol.mps.c.mps_class_epdl, symbol.mps.c.mps_pool_debug_option_s


NOTES

This pool class has four extra parameters to "mps_pool_create": the first one 
is an "mps_pool_debug_option_s" structure (q.v.) for the debug options, and the 
rest are as for EPDL, see symbol.mps.c.mps_class_epdl for a description of 
those.

Apart from the debug features, the behaviour of this pool class is like EPDL.  
Using fenceposts will, naturally, increase the size of objects, which might 
have an effect on their placement.


INTERNAL NOTES:

I know there's no Debug protocol, but there should be.  See internal notes for 
symbol.mps.c.mps_pool_check_fenceposts(0).  And shouldn't we have some protocol 
or other high-level doc for creating pools?  pekka 1998-09-11

There's no symbol.mps.c.mps_class_epdl.  pekka 1998-09-11

