      DESCRIPTION OF THE MPS C INTERFACE SYMBOL "MPS_EPVM_RESTORE"
                     symbol.mps.c.mps_epvm_restore
                              draft symbol
                            pekka 1998-01-23

NAME

mps_epvm_restore


SUMMARY

Sets the current save level to a specified lower save level and frees all the 
objects allocated above it.


ASSOCIATED PROTOCOLS

Allocation point.


SYNTAX

void mps_epvm_restore(mps_pool_t pool, mps_epvm_save_level_t save_level);


ARGUMENTS

pool        the pool whose save level will be changed, must be an EPVM pool
save_level  the new save level


RETURNED VALUES

None.


RESOURCES

mpscepvm.h


DESCRIPTION

mps_epvm_restore changes the save level of the pool given to a smaller level.   
The new save level must be larger than or equal to zero, but can be smaller 
than the initial level specified on pool creation.  All objects at higher save 
levels are freed.


EXAMPLE

mps_epvm_save_level_t currentSaveLevel;

void doTempJob(Result *res)
{
  mps_epvm_save(pool); ++currentSaveLevel;
  /* calculate result, allocating stuff */
  mps_epvm_restore(pool, --currentSaveLevel);
}


SEE ALSO

mps_epvm_save, mps_class_epvm, mps_pool_create, mps_epvm_save_level_t, 
mps_epvm_check


NOTES

The client must, of course, make sure that there aren't any pointers from 
scannable objects or roots to the objects being freed.  mps_epvm_check can help 
to implement that restriction.


INTERNAL NOTES

It's not yet clear how this interacts with finalization.


