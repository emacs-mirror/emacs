%!PS-Adobe- PostScript translation of Interpress master
%%DocumentFonts: unknown
%%Creator: boehm
%%Pages: 9
%%EndComments
% Simple procedures (others defined as needed)
/width {stringwidth pop} bind def                   % stack: text
/vec {moveto lineto stroke} bind def                % stack: x y
/nsp {0 exch {32 eq {1 add} if} forall} bind def    % stack: text
/try {dup where {exch get} {pop 0} ifelse} bind def % stack: value                         
%%EndProlog

%%page 1
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 730.9361 moveto
      76.70807 673.8122 moveto
      /Times-Bold findfont 15.05625 scalefont
      /font0 exch def
      font0 setfont
      (The Portable Common Runtime) show
      88.01408 650.7258 moveto
      font0 setfont
      (Approach to Interoperability) show
      179.0737 627.6397 moveto
      93.34156 589.3847 moveto
      /Times-Roman findfont 9.03375 scalefont
      /font1 exch def
      font1 setfont
      (Mark Weiser, Alan Demers and Carl Hauser) show
      179.0737 578.3432 moveto
      153.3788 567.3019 moveto
      font1 setfont
      (Xerox PARC) show
      134.8719 556.2609 moveto
      font1 setfont
      (3333 Coyote Hill Road) show
      123.4635 545.2195 moveto
      font1 setfont
      (Palo Alto, California  94304*) show
      63.75 493.9702 moveto
      /colwidth 230.6475 def
      gsave
         /Times-Bold findfont 9.03375 scalefont
         /font2 exch def
         
/execget {arindex get dup null eq {pop} {exec} ifelse} bind def
/mixedjustify {
    /excess colwidth totwidth sub def
    0 1 npiece {
        /arindex exch def
        opsbef execget                   % exec any accumu before ops
        nspaces arindex get              % stack: nspaces
        dup 0 eq {                       % stack: nspaces
            pop texts arindex get        % stack: text
            show                         % stack: NULL
            }{ 
            weights arindex get          % stack: nspaces weight
            totwt div excess mul         % stack: nspaces share-excess
            exch div 0 8#040             % stack: spaceadd 0 8#040
            texts arindex get            % stack: spaceadd 0 8#040 text
            widthshow                    % stack: NULL
            } ifelse
        opsaft execget                   % exec any accumulated after ops
        } for
    /totwidth 0 def /totwt 0.0 def
    } bind def
/buf {                                   % stack: text npiece
    /npiece exch def                     % stack: text
    dup nsp /ns exch def                 % stack: text
    dup texts npiece 3 -1 roll put       % stack: text
    nspaces npiece ns put width          % stack: width
    totwidth add /totwidth exch def      % stack: NULL
    ns 0 ne {
       ( ) width ns mul                  % stack: weight
       dup totwt add /totwt exch def     % stack: weight
       weights npiece 3 -1 roll put      % stack: NULL
       } if
    } bind def
/texts 250 array def
/nspaces 250 array def
/weights 250 array def
/opsbef 250 array def
/opsaft 250 array def
/totwidth 0 def
/totwt 0.0 def

font2 setfont
         opsbef 0 {font2 setfont} put
         (Abstract:) 0 buf
         opsaft 0 null put
         font1 setfont
         opsbef 1 {font1 setfont} put
         (  Operating system abstractions do not always) 1 buf
         opsaft 1 null put
         mixedjustify
         grestore
      63.75 482.9289 moveto
      /colwidth 230.6475 def
      gsave
         
/justify {                               % stack: text
    dup nsp /ns exch def                 % stack: text
    ns 0 eq {show} {                     % stack: text
        dup width /totwidth try add      % stack: text width
        colwidth exch sub                % stack: text excess
        ns div                           % stack: text spaceadd
        0 8#040 4 -1 roll                % stack: spaceadd 0 8#040 text
        widthshow /totwidth 0 def        % stack: NULL
        } ifelse
    } bind def

font1 setfont
         (reach high enough for direct use by a language or) justify
         grestore
      63.75 471.8877 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (applications designer.  The gap is filled by language-specific) justify
         grestore
      63.75 460.8464 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (runtime environments, which become more complex for) justify
         grestore
      63.75 449.8052 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (richer languages \050CommonLisp needs more than C++,) justify
         grestore
      63.75 438.7639 moveto
      gsave
         font1 setfont
         (which needs more than C\051.  But language-specific) justify
         grestore
      63.75 427.7226 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (environments inhibit integrated multi-lingual) justify
         grestore
      63.75 416.6813 moveto
      gsave
         font1 setfont
         (programming, and also make porting hard \050for instance,) justify
         grestore
      63.75 405.64 moveto
      gsave
         font1 setfont
         (because of operating system dependencies\051.  To help solve) justify
         grestore
      63.75 394.5989 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (these problems, we have built the Portable Common) justify
         grestore
      63.75 383.5576 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Runtime \050PCR\051, a language-independent and operating-) justify
         grestore
      63.75 372.5163 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (system-independent base for modern languages.  PCR) justify
         grestore
      63.75 361.475 moveto
      gsave
         font1 setfont
         (offers four interrelated facilities: storage management) justify
         grestore
      63.75 350.434 moveto
      gsave
         font1 setfont
         (\050including universal garbage collection\051, symbol binding) justify
         grestore
      63.75 339.3925 moveto
      gsave
         font1 setfont
         (\050including static and dynamic linking and loading\051, threads) justify
         grestore
      63.75 328.3513 moveto
      gsave
         font1 setfont
         (\050lightweight processes\051, and low-level I/O \050including) justify
         grestore
      63.75 317.31 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (network sockets\051.  PCR is \042common\042 because these) justify
         grestore
      63.75 306.2686 moveto
      gsave
         font1 setfont
         (facilities simultaneously support programs in several) justify
         grestore
      63.75 295.2275 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (languages.  PCR supports C, Cedar, Scheme, and) justify
         grestore
      63.75 284.1863 moveto
      gsave
         font1 setfont
         (CommonLisp intercalling and runs pre-existing C and) justify
         grestore
      63.75 273.145 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (CommonLisp \050Kyoto\051 binaries.  PCR is \042portable\042 because) justify
         grestore
      63.75 262.1038 moveto
      gsave
         font1 setfont
         (it uses only a small set of operating system features.  The) justify
         grestore
      63.75 251.0625 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (PCR source code is available for use by other researchers) justify
         grestore
      63.75 240.0213 moveto
      font1 setfont
      (and developers.) show
      63.75 226.4808 moveto
      gsave
         0.0 setgray
         currentpoint translate
         0.0 0.0 moveto
         231.0 0.0 lineto
         231.0 1.0 lineto
         0.0 1.0 lineto
         fill
         grestore
      63.75 204.9102 moveto
      /Times-Italic findfont 9.03375 scalefont
      /font3 exch def
      font3 setfont
      (*email: weiser.pa@Xerox.com) show
      63.75 191.3698 moveto
      63.75 180.3286 moveto
      /colwidth 230.6475 def
      gsave
         /Times-Roman findfont 7.02625 scalefont
         /font4 exch def
         font4 setfont
         (This appeared in the Conference Record of the 13th Annual ACM) justify
         grestore
      63.75 169.2874 moveto
      font4 setfont
      (Symposium on Operating Systems Principles, December 1989.) show
      63.75 155.7468 moveto
      /colwidth 230.6475 def
      gsave
         font4 setfont
         (Permission to copy without fee all or part of this material is granted provided) justify
         grestore
      63.75 144.7056 moveto
      /colwidth 230.6475 def
      gsave
         font4 setfont
         (that the copies are not made or distributed for direct commercial advantage,) justify
         grestore
      63.75 133.6644 moveto
      /colwidth 230.6475 def
      gsave
         font4 setfont
         (the ACM copyright notice and the title of the publication and its date) justify
         grestore
      63.75 122.6231 moveto
      /colwidth 230.6476 def
      gsave
         font4 setfont
         (appear, and notice is given that copying is by permission of the Association) justify
         grestore
      63.75 111.5818 moveto
      /colwidth 230.6475 def
      gsave
         font4 setfont
         (for Computing Machinery.  To copy otherwise, or to republish, requires a) justify
         grestore
      63.75 100.5406 moveto
      font4 setfont
      (fee and/or specific permission.) show
      63.75 87.0001 moveto
      font1 setfont
      (Copyright 1989 ACM. ) show
      319.8974 725.9137 moveto
      319.8974 693.6978 moveto
      /Times-Bold findfont 11.04125 scalefont
      /font5 exch def
      font5 setfont
      (1. Introduction) show
      319.8974 670.898 moveto
      font2 setfont
      (1.1 The Problem - interlanguage interoperability) show
      319.8974 648.7193 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Although there are many facets to interoperability, one) justify
         grestore
      319.8974 637.6782 moveto
      gsave
         font1 setfont
         (remains largely unassailed: closely coupled interoperation) justify
         grestore
      319.8974 626.637 moveto
      gsave
         font1 setfont
         (between programs written in different languages.  By) justify
         grestore
      319.8974 615.5958 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (closely coupled we mean that an application as real-time or) justify
         grestore
      319.8974 604.5543 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (sophisticated as a device driver or a database management) justify
         grestore
      319.8974 593.5132 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (system might have different parts written in different) justify
         grestore
      319.8974 582.472 moveto
      gsave
         font1 setfont
         (languages.  The parts could share data structures, memory,) justify
         grestore
      319.8974 571.4308 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and threads of control.  Interoperation without giving one) justify
         grestore
      319.8974 560.3894 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (language a primary role is to be preferred:  the choice of a) justify
         grestore
      319.8974 549.3481 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (language should be determined by the semantic model) justify
         grestore
      319.8974 538.3068 moveto
      gsave
         font1 setfont
         (needed, not by the degree of support from the operating) justify
         grestore
      319.8974 527.2656 moveto
      font1 setfont
      (environment.) show
      319.8974 505.7086 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The principal prerequisites to closely coupled) justify
         grestore
      319.8974 494.6674 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interoperation are the ability to share an address space, the) justify
         grestore
      319.8974 483.6262 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (ability to bind symbolic names between programs written in) justify
         grestore
      319.8974 472.585 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (different languages, the ability to share I/O, and the ability) justify
         grestore
      319.8974 461.5435 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (to share data representations between programs written in) justify
         grestore
      319.8974 450.5023 moveto
      gsave
         font1 setfont
         (different languages.  In addition to these problems of) justify
         grestore
      319.8974 439.461 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interlanguage interoperation, intralanguage interoperation) justify
         grestore
      319.8974 428.4197 moveto
      gsave
         font1 setfont
         (in the form of lightweight concurrent threads is an) justify
         grestore
      319.8974 417.3786 moveto
      gsave
         font1 setfont
         (important concept of modern programming languages and) justify
         grestore
      319.8974 406.3373 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (this feature must be made interoperable as well, so that all) justify
         grestore
      319.8974 395.296 moveto
      font1 setfont
      (programs can properly respect each others' critical sections. ) show
      319.8974 373.1176 moveto
      font2 setfont
      (1.2 The Portable Common Runtime solution) show
      319.8974 350.939 moveto
      gsave
         font1 setfont
         (The Portable Common Runtime addresses the shared) justify
         grestore
      319.8974 339.898 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (address space, symbol binding, and lightweight threads) justify
         grestore
      319.8974 328.8566 moveto
      gsave
         font1 setfont
         (requirements for interoperability.  The problem of shared) justify
         grestore
      319.8974 317.8154 moveto
      gsave
         font1 setfont
         (data representations is beyond the scope of PCR, although) justify
         grestore
      319.8974 306.774 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (certainly important for achieving much of the benefit of) justify
         grestore
      319.8974 295.7328 moveto
      font1 setfont
      (interlanguage interoperability.) show
      319.8974 274.1757 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Ordinarily, the language implementor produces a language-) justify
         grestore
      319.8974 263.1345 moveto
      gsave
         font1 setfont
         (specific runtime layer directly on top of the operating) justify
         grestore
      319.8974 252.0934 moveto
      gsave
         font1 setfont
         (system.  In this scenario, features such as garbage collection) justify
         grestore
      319.8974 241.052 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (must either be added at the operating system level or the) justify
         grestore
      319.8974 230.0108 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (language-specific runtime level.  If the latter approach is) justify
         grestore
      319.8974 218.9695 moveto
      gsave
         font1 setfont
         (chosen the feature becomes very difficult or impossible to) justify
         grestore
      319.8974 207.9283 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (use interoperably.  However, an approach relying on a new) justify
         grestore
      319.8974 196.8871 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (operating system is a barrier to interoperability with) justify
         grestore
      319.8974 185.8458 moveto
      gsave
         font1 setfont
         (existing applications and the existing operating systems) justify
         grestore
      319.8974 174.8046 moveto
      font1 setfont
      (they rely upon.) show
      319.8974 153.2475 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The PCR approach is to produce a common runtime layer) justify
         grestore
      319.8974 142.2064 moveto
      gsave
         font1 setfont
         (between the operating system and the language runtimes.) justify
         grestore
      319.8974 131.165 moveto
      gsave
         font1 setfont
         (The PCR abstractions complement typical operating system) justify
         grestore
      319.8974 120.1238 moveto
      gsave
         font1 setfont
         (abstractions such as virtual memory, communications, and) justify
         grestore
      319.8974 109.0826 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (file system.  PCR allows exploration of the kind of features) justify
         grestore
      319.8974 98.04132 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (future generations of operating systems will have in their) justify
         grestore
      319.8974 87.00006 moveto
      font1 setfont
      (kernels to support interoperability.  ) show
      grestore
   grestore
% end page 1
showpage
%%page 2
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      62.82374 501.0058 moveto
      gsave
         currentpoint translate
         2834.645 dup matrix scale concat
         gsave
            3.527776e-4 dup matrix scale concat
            gsave
               -60.5 -409.5 matrix translate concat
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  132.5 557.0 moveto
                  154.333 562.606 174.1638 561.5302 196.5 556.5 curveto
                  221.6173 550.8432 249.9032 540.1855 254.5 528.0 curveto
                  261.4507 509.574 214.2371 487.6548 166.5 485.5 curveto
                  119.1998 483.3648 71.38576 500.6338 76.0 521.0 curveto
                  79.17563 535.0164 107.1839 550.5 132.5 557.0 curveto
                  closepath stroke
                  grestore
               gsave
                  /Helvetica-Bold findfont 1.0 scalefont
                  /font6 exch def
                  font6 setfont
                  0.0 setgray
                  22.0 dup matrix scale 132.6734 513.2576 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (P C R) show
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  291.0 629.0 moveto
                  291.0 629.0 291.0 629.0 291.0 629.0 curveto
                  283.9487 605.9272 242.0513 605.0728 235.0 582.0 curveto
                  236.6909 570.4355 218.52 561.3834 220.211 549.819 curveto
                  stroke
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  67.0 630.5 moveto
                  85.7989 625.7885 88.20111 592.2115 107.0 587.5 curveto
                  117.437 581.1814 112.6596 560.535 123.0966 554.2162 curveto
                  stroke
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  12.0 dup matrix scale 102.1676 625.247 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (Lisp) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  12.0 dup matrix scale 157.2353 624.747 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (Cedar) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  12.0 dup matrix scale 220.8396 626.247 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (C) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  12.0 dup matrix scale 264.0 626.0 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (...) show
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  101.4732 494.9302 62.5 420.0 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  121.7255 489.0724 91.5 415.5 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  149.551 485.541 131.0 415.0 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  166.5 485.5 157.0 411.5 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  192.3981 488.5396 191.5 415.5 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  212.668 493.565 221.5 416.5 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  231.35 500.812 242.5 419.0 vec
                  grestore
               0.5 setgray
               eofill
               gsave
                  2.0 setlinewidth
                  1 setlinecap
                  1 setlinejoin
                  0.0 setgray
                  245.8118 509.6111 268.0 425.0 vec
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  10.0 dup matrix scale 60.25266 matrix rotate 82.00953 423.4973 matrix translate matrix concatmatrix matrix concatmatrix concat
                  0.0 0.0 moveto
                  (Unix) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  10.0 dup matrix scale 71.00685 matrix rotate 146.8769 423.6747 matrix translate matrix concatmatrix matrix concatmatrix concat
                  0.0 0.0 moveto
                  (Mach) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  10.0 dup matrix scale -79.92716 matrix rotate 204.4486 463.7728 matrix translate matrix concatmatrix matrix concatmatrix concat
                  0.0 0.0 moveto
                  (bare) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  10.0 dup matrix scale -81.31126 matrix rotate 195.5747 467.9138 matrix translate matrix concatmatrix matrix concatmatrix concat
                  0.0 0.0 moveto
                  (machine) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  10.0 dup matrix scale -78.33078 matrix rotate 238.5942 473.2604 matrix translate matrix concatmatrix matrix concatmatrix concat
                  0.0 0.0 moveto
                  (other...) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  9.0 dup matrix scale 114.2596 535.2596 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (GC) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  9.0 dup matrix scale 183.8525 537.1852 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (Threads) show
                  grestore
               gsave
                  font6 setfont
                  0.0 setgray
                  9.0 dup matrix scale 142.5 500.0 matrix translate matrix concatmatrix concat
                  0.0 0.0 moveto
                  (Symbols) show
                  grestore
               2.0 setlinewidth
               0.0 setgray
               gsave
                  1.0 setlinewidth
                  2 setlinecap
                  1 setlinejoin
                  60.5 409.5 moveto
                  60.5 640.5676 lineto
                  293.0 640.5676 lineto
                  293.0 409.5 lineto
                  60.5 409.5 lineto
                  closepath stroke
                  grestore
               grestore
            grestore
         grestore
      63.75 481.8642 moveto
      gsave
         font1 setfont
         (PCR differs from language-specific runtimes both in the) justify
         grestore
      63.75 470.8228 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (sophistication of some of its features, and the paucity of) justify
         grestore
      63.75 459.7816 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (others.  Compared with the C standard library, for instance,) justify
         grestore
      63.75 448.7403 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (it offers the new features of threads, garbage collection and) justify
         grestore
      63.75 437.699 moveto
      gsave
         font1 setfont
         (dynamic loading, but does not offer string functions or) justify
         grestore
      63.75 426.6579 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (sophisticated printing or input scanning.  Our choice is to) justify
         grestore
      63.75 415.6166 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (focus deliberately on those features that language) justify
         grestore
      63.75 404.5754 moveto
      gsave
         font1 setfont
         (implementations must share for closely coupled) justify
         grestore
      63.75 393.534 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interoperability, while avoiding other features in a runtime) justify
         grestore
      63.75 382.4928 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (library that are not so important to interoperation.  We) justify
         grestore
      63.75 371.4516 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (assume that features we do not implement can continue to) justify
         grestore
      63.75 360.4102 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (be done on a language-dependent basis without seriously) justify
         grestore
      63.75 349.369 moveto
      gsave
         font1 setfont
         (reducing interoperation.  For example, the string functions) justify
         grestore
      63.75 338.3276 moveto
      gsave
         font1 setfont
         (of the C library are adequate for manipulating C strings in) justify
         grestore
      63.75 327.2865 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (PCR, while another library could be used for another) justify
         grestore
      63.75 316.2453 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (language's character strings.  This is not true for garbage) justify
         grestore
      63.75 305.204 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (collection, say, or the process model for which sharing data) justify
         grestore
      63.75 294.1628 moveto
      font1 setfont
      (or critical sections requires a common abstraction.) show
      63.75 275.021 moveto
      gsave
         font1 setfont
         (PCR fails to solve the whole problem of language and) justify
         grestore
      63.75 263.9798 moveto
      gsave
         font1 setfont
         (application interoperation in at least two ways.  As) justify
         grestore
      63.75 252.9384 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (mentioned above, PCR does not solve the interlanguage) justify
         grestore
      63.75 241.8972 moveto
      gsave
         font1 setfont
         (data representation problem.  Other attacks on) justify
         grestore
      63.75 230.856 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interoperation, such as remote procedure call and) justify
         grestore
      63.75 219.8148 moveto
      gsave
         /Times-Roman findfont 5.01875 scalefont
         /font7 exch def
         font1 setfont
         opsbef 0 {font1 setfont} put
         (Presentation Manager) 0 buf
         opsaft 0 null put
         font7 setfont
         opsbef 1 {font7 setfont 0.0 2.8105 rmoveto} put
         (  ) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {0.0 -2.8105 rmoveto font1 setfont} put
         ([Apik and Diehl 1988], do impose a) 2 buf
         opsaft 2 null put
         mixedjustify
         grestore
      63.75 208.7736 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (standard method of data exchange.   Second, PCR says) justify
         grestore
      63.75 197.7323 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (nothing about a user interface.  Again, other approaches,) justify
         grestore
      63.75 186.6911 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (like ) 0 buf
         opsaft 0 null put
         font3 setfont
         opsbef 1 {font3 setfont} put
         (Open Look) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {font1 setfont} put
         ( and ) 2 buf
         opsaft 2 null put
         font3 setfont
         opsbef 3 {font3 setfont} put
         (Motif) 3 buf
         opsaft 3 null put
         font1 setfont
         opsbef 4 {font1 setfont} put
         (, address this [Hayes and Baran) 4 buf
         opsaft 4 null put
         mixedjustify
         grestore
      63.75 175.6498 moveto
      font1 setfont
      (1989].) show
      63.75 156.5081 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (For additional alternatives to our approach, see section 5 of) justify
         grestore
      63.75 145.4669 moveto
      font1 setfont
      (this paper on ) show
      font3 setfont
      (Related Work.) show
      319.8974 725.9137 moveto
      font5 setfont
      (2. PCR Design Principles) show
      319.8974 704.2232 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The PCR design was constrained by the following) justify
         grestore
      319.8974 693.1820 moveto
      font1 setfont
      (principles:) show
      346.9988 678.7363 moveto
      font1 setfont
      (1. implement above existing operating systems.) show
      346.9988 664.2903 moveto
      font1 setfont
      (2. support existing simple applications.) show
      346.9988 649.8449 moveto
      /colwidth 203.5462 def
      gsave
         font1 setfont
         (3. permit the use of existing compilers, libraries, and) justify
         grestore
      374.1 638.8036 moveto
      font1 setfont
      (binaries.) show
      346.9988 624.358 moveto
      font1 setfont
      (4. let sophisticated applications be written.) show
      319.8974 603.1914 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Implementing above the operating system means, in the) justify
         grestore
      319.8974 592.15 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (first place, avoiding changes to operating system kernels,) justify
         grestore
      319.8974 581.1087 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and the second place, not duplicating operating system) justify
         grestore
      319.8974 570.0676 moveto
      gsave
         font1 setfont
         (functions.  Therefore, for instance, a PCR implementation) justify
         grestore
      319.8974 559.0263 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (on Mach [Accetta et al. 1986] maps PCR threads into Mach) justify
         grestore
      319.8974 547.9849 moveto
      gsave
         font1 setfont
         (threads.  However, implementing PCR well requires from) justify
         grestore
      319.8974 536.9437 moveto
      gsave
         font1 setfont
         (its base operating system certain functions not available) justify
         grestore
      319.8974 525.9024 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (from every operating system:  it requires the ability to share) justify
         grestore
      319.8974 514.8611 moveto
      gsave
         font1 setfont
         (memory and open files between operating system) justify
         grestore
      319.8974 503.82 moveto
      gsave
         font1 setfont
         (processes;  it requires the ability to protect pages of) justify
         grestore
      319.8974 492.7788 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (memory, and to catch and restart from protection failures;) justify
         grestore
      319.8974 481.7375 moveto
      gsave
         font1 setfont
         (it requires a file system.  These features are available more) justify
         grestore
      319.8974 470.6962 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and more, and so we traded off loss of portability to older) justify
         grestore
      319.8974 459.655 moveto
      font1 setfont
      (operating systems for much greater functionality.) show
      319.8974 438.4884 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Supporting existing simple applications means that, as we) justify
         grestore
      319.8974 427.447 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (add potentially interfering new features, older) justify
         grestore
      319.8974 416.4058 moveto
      gsave
         font1 setfont
         (programming styles can mostly remain intact.  For instance,) justify
         grestore
      319.8974 405.3646 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (although we garbage collect storage allocated by C code, we) justify
         grestore
      319.8974 394.3232 moveto
      gsave
         font1 setfont
         (do not require that C programmers replace their `malloc') justify
         grestore
      319.8974 383.282 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and 'free' calls.  PCR simply ignores the `free's, and) justify
         grestore
      319.8974 372.2408 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (invisibly collects `malloc'ed space.  Binary files that can be) justify
         grestore
      319.8974 361.1995 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (dynamically loaded in PCR can also be statically linked) justify
         grestore
      319.8974 350.1582 moveto
      gsave
         font1 setfont
         (using the vanilla Unix `ld' command.  PCR is not perfect in) justify
         grestore
      319.8974 339.1169 moveto
      gsave
         font1 setfont
         (this respect, as the details in following sections make clear,) justify
         grestore
      319.8974 328.0758 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (but it achieves a useful compromise between backward) justify
         grestore
      319.8974 317.0345 moveto
      font1 setfont
      (compatibility and new functionality.) show
      319.8974 295.8678 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (By permitting the use of existing compilers, libraries, and) justify
         grestore
      319.8974 284.8265 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (binaries, we help to enforce on ourselves our rule of) justify
         grestore
      319.8974 273.7853 moveto
      gsave
         font1 setfont
         (supporting existing simple applications.  We co-exist with a) justify
         grestore
      319.8974 262.744 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (machine's native stack and calling conventions, so compiler) justify
         grestore
      319.8974 251.7027 moveto
      gsave
         font1 setfont
         (back-ends do not have to change, and we accept standard) justify
         grestore
      319.8974 240.6616 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (relocatable object file format, so precompiled code) justify
         grestore
      319.8974 229.6203 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (continues to work.  For example, the complete SunView) justify
         grestore
      319.8974 218.579 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (window system library operates unrecompiled, dynamically) justify
         grestore
      319.8974 207.5377 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (loaded and garbage collected in PCR.  One thing that does) justify
         grestore
      319.8974 196.4965 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (not work is dynamically loading binaries from which) justify
         grestore
      319.8974 185.4554 moveto
      font1 setfont
      (relocation information has been removed.) show
      319.8974 164.2887 moveto
      gsave
         font1 setfont
         (By saying we want to permit sophisticated applications, we) justify
         grestore
      319.8974 153.2474 moveto
      gsave
         font1 setfont
         (mean applications most naturally expressed using PCR-) justify
         grestore
      319.8974 142.2062 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (specific features.  For instance, an application managing) justify
         grestore
      319.8974 131.1649 moveto
      gsave
         font1 setfont
         (many concurrent activities will use the threads facilities.) justify
         grestore
      319.8974 120.1237 moveto
      gsave
         font1 setfont
         (The language that has stretched our interfaces farthest has) justify
         grestore
      319.8974 109.0825 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (been CommonLisp, because it already has notions of) justify
         grestore
      319.8974 98.04118 moveto
      gsave
         font1 setfont
         (dynamic loading and of garbage collection.  We had to) justify
         grestore
      319.8974 86.99994 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (make sure we offered facilities on top of which) justify
         grestore
      grestore
   grestore
% end page 2
showpage
%%page 3
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 725.9137 moveto
      gsave
         font1 setfont
         (CommonLisp language implementors could work.  For) justify
         grestore
      63.75 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (example, an implementation using tagged pointers must be) justify
         grestore
      63.75 703.8312 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (able to co-exist with our collector.  In general, our solutions) justify
         grestore
      63.75 692.79 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (were of two types: make the interfaces more general, and) justify
         grestore
      63.75 681.7486 moveto
      gsave
         font1 setfont
         (provide for upcalls [Clark 1985] when there was no other) justify
         grestore
      63.75 670.7074 moveto
      font1 setfont
      (way.) show
      63.75 638.7368 moveto
      font5 setfont
      (3. Design and Implementation of PCR) show
      63.75 616.2319 moveto
      font2 setfont
      (3.1 Threads) show
      63.75 593.7266 moveto
      font3 setfont
      (3.1.1 Background) show
      63.75 571.7938 moveto
      gsave
         font1 setfont
         (The PCR threads interface offers the usual semantics of) justify
         grestore
      63.75 560.7526 moveto
      gsave
         font1 setfont
         (monitors, monitor locks, condition variables, fork/join,) justify
         grestore
      63.75 549.7111 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (aborting, etc. [Hoare 1974, Brinch-Hansen 1975].  As) justify
         grestore
      63.75 538.6701 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (indicated above, we have worked to make the interface) justify
         grestore
      63.75 527.6286 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (general enough to be used cooperatively by many different) justify
         grestore
      63.75 516.5875 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (languages.  PCR threads meet the runtime requirements of) justify
         grestore
      63.75 505.5463 moveto
      gsave
         font1 setfont
         (languages such as Cedar/Mesa [Swinehart et al. 1986],) justify
         grestore
      63.75 494.505 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Modula-3 [Cardelli et al. 1988], CommonLisp [Steele 1984],) justify
         grestore
      63.75 483.4637 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (and ARGUS [Liskov et al. 1987]; and can easily simulate) justify
         grestore
      63.75 472.4226 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (other threads packages such as Cooper's C-Threads for) justify
         grestore
      63.75 461.3812 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Mach, Sun's lwp [Sun 1988a], Bershad's [Bershad et al.) justify
         grestore
      63.75 450.34 moveto
      gsave
         font1 setfont
         (1988], etc.  The following overview highlights noteworthy) justify
         grestore
      63.75 439.2988 moveto
      font1 setfont
      (features of our implementation.) show
      63.75 417.9383 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Threads implementations fall into two categories: inside or) justify
         grestore
      63.75 406.8969 moveto
      gsave
         font1 setfont
         (outside the OS kernel.  Implementations inside the kernel,) justify
         grestore
      63.75 395.8556 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (such as Mach [Accetta et al. 1986] or V [Cheriton and) justify
         grestore
      63.75 384.8143 moveto
      gsave
         font1 setfont
         (Zwaenepoel 1983], have explicit knowledge of multiple) justify
         grestore
      63.75 373.7732 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (threads per address space, and the OS scheduler treats such) justify
         grestore
      63.75 362.7319 moveto
      gsave
         font1 setfont
         (threads separately.  Implementations outside the kernel) justify
         grestore
      63.75 351.6906 moveto
      gsave
         font1 setfont
         (generally use coroutines in a single heavyweight process.) justify
         grestore
      63.75 340.6493 moveto
      gsave
         font1 setfont
         (Coroutine implementations can be faster at thread) justify
         grestore
      63.75 329.6081 moveto
      gsave
         font1 setfont
         (switching, because they avoid any overhead associated with) justify
         grestore
      63.75 318.5668 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (entering and leaving the kernel \050similar to the speedup) justify
         grestore
      63.75 307.5256 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (achieved by ) 0 buf
         opsaft 0 null put
         font3 setfont
         opsbef 1 {font3 setfont} put
         ({Synthesis}) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {font1 setfont} put
         ( [Pu et al. 1988], although via a) 2 buf
         opsaft 2 null put
         mixedjustify
         grestore
      63.75 296.4844 moveto
      gsave
         font1 setfont
         (different method\051.  However, their reliance on only one) justify
         grestore
      63.75 285.443 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (heavyweight process introduces two serious problems: first,) justify
         grestore
      63.75 274.4019 moveto
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (if that process ever blocks, ) 0 buf
         opsaft 0 null put
         font3 setfont
         opsbef 1 {font3 setfont} put
         (all) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {font1 setfont} put
         ( threads are blocked and) 2 buf
         opsaft 2 null put
         mixedjustify
         grestore
      63.75 263.3605 moveto
      gsave
         font1 setfont
         (second, there is no opportunity to use a multiprocessor to) justify
         grestore
      63.75 252.3193 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (achieve true concurrent thread execution.  Techniques for) justify
         grestore
      63.75 241.278 moveto
      gsave
         font1 setfont
         (avoiding blocking--use of the Unix non-blocking I/O) justify
         grestore
      63.75 230.2368 moveto
      gsave
         font1 setfont
         (primitives, for example--can alleviate this problem, but they) justify
         grestore
      63.75 219.1956 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (cannot entirely eliminate it, since some kinds of blocking) justify
         grestore
      63.75 208.1543 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (\050e.g. page faults\051 cannot be predicted or even detected) justify
         grestore
      63.75 197.113 moveto
      font1 setfont
      (outside the kernel.  ) show
      63.75 175.1802 moveto
      font3 setfont
      (3.1.2 Implementation) show
      63.75 153.2474 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Our approach to implementing PCR threads in an) justify
         grestore
      63.75 142.2061 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (operating system like Unix, which has no notion of a) justify
         grestore
      63.75 131.1649 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (lightweight process, is to have a small number of) justify
         grestore
      63.75 120.1236 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (heavyweight processes act as a pool of \042virtual processors\042) justify
         grestore
      63.75 109.0824 moveto
      gsave
         font1 setfont
         (\050\042VPs\042\051 to execute the many threads.  All VPs share a) justify
         grestore
      63.75 98.04113 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (common address space.  Each VP is treated by the PCR) justify
         grestore
      63.75 86.99988 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (scheduler exactly like a cpu in a shared-memory) justify
         grestore
      319.8974 725.9137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (multiprocessor system.  This implementation avoids the) justify
         grestore
      319.8974 714.8724 moveto
      gsave
         font1 setfont
         (problems of coroutine threads implementations while not) justify
         grestore
      319.8974 703.8312 moveto
      font1 setfont
      (suffering the cost of a kernel entry for every thread switch.) show
      319.8974 682.2913 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (In the normal case of a thread blocking predictably \050e.g. by) justify
         grestore
      319.8974 671.25 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (waiting on a monitor lock or condition\051 or being preempted) justify
         grestore
      319.8974 660.209 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (at a timeslice, scheduling a new thread under this scheme is) justify
         grestore
      319.8974 649.1676 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (essentially a coroutine jump within a single VP.   Non-) justify
         grestore
      319.8974 638.1265 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (blocking I/O and other techniques are used to make most) justify
         grestore
      319.8974 627.085 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (instances of thread blocking predictable, and thus avoid) justify
         grestore
      319.8974 616.0439 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (most instances of VP blocking.  Occasionally, however, a) justify
         grestore
      319.8974 605.0026 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (thread blocks unpredictably, say for a page fault or file) justify
         grestore
      319.8974 593.9613 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (system I/O.  In that case the VP running the thread blocks;) justify
         grestore
      319.8974 582.92 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (but the remaining VPs are still available for heavyweight) justify
         grestore
      319.8974 571.8788 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (process scheduling by the OS, and continue to run other) justify
         grestore
      319.8974 560.8375 moveto
      gsave
         font1 setfont
         (threads.  On a uniprocessor, assuming the number of) justify
         grestore
      319.8974 549.7964 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (available VPs exceeds the number of unpredictably blocked) justify
         grestore
      319.8974 538.7551 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (threads, the net effect is just to trade a heavyweight process) justify
         grestore
      319.8974 527.7137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (switch \050between VPs\051 for a lightweight switch \050between) justify
         grestore
      319.8974 516.6724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (threads in a single VP\051; some threads continue to make) justify
         grestore
      319.8974 505.6312 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (progress at all times.  On a  multiprocessor, ready threads) justify
         grestore
      319.8974 494.5898 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (execute concurrently \050depending only on a reasonable base) justify
         grestore
      319.8974 483.5488 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (kernel implementation\051 with no change to the PCR) justify
         grestore
      319.8974 472.5075 moveto
      font1 setfont
      (implementation.) show
      319.8974 450.9676 moveto
      gsave
         font1 setfont
         (The PCR implementation relies on a relatively small) justify
         grestore
      319.8974 439.9263 moveto
      gsave
         font1 setfont
         (number of underlying kernel features, chief of which is the) justify
         grestore
      319.8974 428.885 moveto
      gsave
         font1 setfont
         (ability to share memory among heavyweight processes.) justify
         grestore
      319.8974 417.8438 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (Since this feature exists in OS/2, the Unix SVID, Mach,) justify
         grestore
      319.8974 406.8026 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (SunOS, and many other modern operating systems, we) justify
         grestore
      319.8974 395.7612 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (anticipate no serious portability problem.  Other OS) justify
         grestore
      319.8974 384.72 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (features required by PCR are the ability for heavyweight) justify
         grestore
      319.8974 373.6788 moveto
      gsave
         font1 setfont
         (processes to interrupt one another and to catch interrupts,) justify
         grestore
      319.8974 362.6375 moveto
      gsave
         font1 setfont
         (and the ability to define a medium-grained interval timer) justify
         grestore
      319.8974 351.5962 moveto
      gsave
         font1 setfont
         (\050our scheduler wakes up ten times a second for time-) justify
         grestore
      319.8974 340.555 moveto
      gsave
         font1 setfont
         (slicing\051.  Our implementation runs better if it can also) justify
         grestore
      319.8974 329.5138 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (write-protect pages \050used for stack red-zoning and parallel) justify
         grestore
      319.8974 318.4725 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (garbage collection\051, catch and restart from protection) justify
         grestore
      319.8974 307.4312 moveto
      font1 setfont
      (violations, and remap pages to different addresses.  ) show
      319.8974 285.2742 moveto
      font3 setfont
      (3.1.3 Debugging ) show
      319.8974 263.1172 moveto
      gsave
         font1 setfont
         (Debugging of threads is currently a bit difficult, and we are) justify
         grestore
      319.8974 252.076 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (working to improve it.  At present, there are a few) justify
         grestore
      319.8974 241.0347 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interactive commands by which one can stop all VPs, run) justify
         grestore
      319.8974 229.9934 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (on a single VP, freeze or thaw individual threads, or) justify
         grestore
      319.8974 218.9522 moveto
      gsave
         font3 setfont
         opsbef 0 {font3 setfont} put
         (examine) 0 buf
         opsaft 0 null put
         font1 setfont
         opsbef 1 {font1 setfont} put
         ( an individual thread.  Examining works like this:) 1 buf
         opsaft 1 null put
         mixedjustify
         grestore
      319.8974 207.911 moveto
      gsave
         font1 setfont
         (before examining, a single-process debugger \050say Unix dbx\051) justify
         grestore
      319.8974 196.8698 moveto
      gsave
         font1 setfont
         (is pointed at a distinguished VP, and a breakpoint is set at a) justify
         grestore
      319.8974 185.8285 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (well-known location.  When the examine command is given) justify
         grestore
      319.8974 174.7872 moveto
      gsave
         font1 setfont
         (for a thread, the thread is scheduled on that VP, and forced) justify
         grestore
      319.8974 163.746 moveto
      gsave
         font1 setfont
         (to execute through the breakpoint location.  The specified) justify
         grestore
      319.8974 152.7048 moveto
      gsave
         font1 setfont
         (VP hits the breakpoint with the desired thread's stack) justify
         grestore
      319.8974 141.6635 moveto
      font1 setfont
      (appearing as the VP process stack.) show
      319.8974 120.1236 moveto
      gsave
         font1 setfont
         (Independently, we are developing an extensible, multi-) justify
         grestore
      319.8974 109.0824 moveto
      gsave
         font1 setfont
         (language debugger for PCR [Sturgis 1989].  This debugger,) justify
         grestore
      319.8974 98.04116 moveto
      gsave
         font1 setfont
         (called Cirio, handles operations such as starting and) justify
         grestore
      319.8974 86.9999 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (stopping threads and setting breakpoints in a uniform,) justify
         grestore
      grestore
   grestore
% end page 3
showpage
%%page 4
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 725.9137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (language-independent way.  Each supported language) justify
         grestore
      63.75 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (registers with Cirio a collection of objects that embody) justify
         grestore
      63.75 703.8312 moveto
      gsave
         font1 setfont
         (language-specific features such as symbol table) justify
         grestore
      63.75 692.79 moveto
      gsave
         font1 setfont
         (interpretation, data type representation and stack frame) justify
         grestore
      63.75 681.7486 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (layout.  A preliminary, cross-machine version of Cirio is) justify
         grestore
      63.75 670.7074 moveto
      font1 setfont
      (working for Cedar and C programs.) show
      63.75 648.5505 moveto
      font2 setfont
      (3.2 I/O) show
      63.75 626.3935 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The I/O interface currently provided by PCR is a nearly-) justify
         grestore
      63.75 615.3521 moveto
      gsave
         font1 setfont
         (exact emulation of the Unix I/O system calls.  This is) justify
         grestore
      63.75 604.3108 moveto
      gsave
         font1 setfont
         (certainly the least portable aspect of the PCR design, and) justify
         grestore
      63.75 593.2696 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (we plan eventually to replace it.  However, developing the) justify
         grestore
      63.75 582.2285 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (ultimate general-purpose, powerful and fully portable I/O) justify
         grestore
      63.75 571.187 moveto
      gsave
         font1 setfont
         (interface will involve substantial research and effort; the) justify
         grestore
      63.75 560.1458 moveto
      gsave
         font1 setfont
         (current design was simple to produce \050we copied it\051 and has) justify
         grestore
      63.75 549.1045 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (enabled us to write PCR-based applications and validate) justify
         grestore
      63.75 538.0635 moveto
      font1 setfont
      (some implementation techniques.) show
      63.75 516.5235 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (One limitation of Unix \050and some other systems as well\051 is) justify
         grestore
      63.75 505.4821 moveto
      gsave
         font1 setfont
         (particularly troublesome when combined with the) justify
         grestore
      63.75 494.4412 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (implementation of threads described above: the maximum) justify
         grestore
      63.75 483.4 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (number of open files that a single heavyweight process can) justify
         grestore
      63.75 472.3585 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (hold is much less than the total number of open files) justify
         grestore
      63.75 461.3171 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (supported by the system.  In \042normal\042 use of Unix, with) justify
         grestore
      63.75 450.2758 moveto
      gsave
         font1 setfont
         (each heavyweight process running a single application, the) justify
         grestore
      63.75 439.2347 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (open file limit is large enough to be uninteresting.  But we) justify
         grestore
      63.75 428.1936 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (want to implement network servers and other large systems) justify
         grestore
      63.75 417.1522 moveto
      gsave
         font1 setfont
         (using PCR; it is important that the per-heavyweight-process) justify
         grestore
      63.75 406.111 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (resource limitations of Unix not translate into system-wide) justify
         grestore
      63.75 395.0698 moveto
      font1 setfont
      (resource limitations for PCR.) show
      63.75 373.5299 moveto
      gsave
         font1 setfont
         (To deal with this problem, our implementation on top of) justify
         grestore
      63.75 362.4886 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Unix uses additional heavyweight processes as \042I/O) justify
         grestore
      63.75 351.4474 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (processors\042\050\042IOPs\042\051, essentially to serve as caretakers for) justify
         grestore
      63.75 340.406 moveto
      font1 setfont
      (file descriptors.  It works as follows:  ) show
      63.75 318.8662 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (A file is opened by allocating a file descriptor slot in one of) justify
         grestore
      63.75 307.825 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the IOPs and sending a message to that IOP asking it to) justify
         grestore
      63.75 296.7838 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (open the file.  While the file remains open, its descriptor) justify
         grestore
      63.75 285.7424 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (remains in the IOP; the descriptor slots of the VPs are) justify
         grestore
      63.75 274.7012 moveto
      gsave
         font1 setfont
         (treated as an LRU cache of copied descriptors.  To perform) justify
         grestore
      63.75 263.66 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (I/O on a descriptor, a thread first ensures that a copy of) justify
         grestore
      63.75 252.6186 moveto
      gsave
         font1 setfont
         (that descriptor exists in the VP's descriptor cache.  If) justify
         grestore
      63.75 241.5775 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (necessary, the least recently used descriptor in the cache is) justify
         grestore
      63.75 230.5362 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (replaced by a copy of the desired descriptor, which is) justify
         grestore
      63.75 219.4949 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (transferred from the corresponding IOP using Unix-) justify
         grestore
      63.75 208.4536 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (domain IPC or using stream operations on a specially) justify
         grestore
      63.75 197.4125 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (written pseudo-device driver.  Currently, all VPs maintain) justify
         grestore
      63.75 186.3711 moveto
      gsave
         font1 setfont
         (identical file descriptor caches, though this constraint could) justify
         grestore
      63.75 175.3299 moveto
      gsave
         font1 setfont
         (be relaxed at the cost of some complexity in the) justify
         grestore
      63.75 164.2887 moveto
      gsave
         font1 setfont
         (implementation.  The thread then attempts a non-blocking) justify
         grestore
      63.75 153.2474 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (I/O operation on the descriptor.  If the operation fails) justify
         grestore
      63.75 142.2062 moveto
      gsave
         font1 setfont
         (because it would block, the thread sends a message to the) justify
         grestore
      63.75 131.1649 moveto
      gsave
         font1 setfont
         (IOP requesting notification when the descriptor becomes) justify
         grestore
      63.75 120.1237 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (ready.  It then waits on a condition variable, allowing the) justify
         grestore
      63.75 109.0825 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (VP to schedule a different thread without blocking.) justify
         grestore
      63.75 98.04124 moveto
      gsave
         font1 setfont
         (Eventually the descriptor becomes ready and the IOP) justify
         grestore
      63.75 87.0 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (notifies the waiting thread, which wakes up and retries the) justify
         grestore
      319.8974 725.9137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (I/O operation.  This scheme works well under the obvious) justify
         grestore
      319.8974 714.8724 moveto
      gsave
         font1 setfont
         (condition that the working set of descriptors fits in the VP's) justify
         grestore
      319.8974 703.8312 moveto
      font1 setfont
      (descriptor cache.) show
      319.8974 683.4745 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (User code sees none of this, of course.  PCR imposes a layer) justify
         grestore
      319.8974 672.4334 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (of indirection in the file descriptors, and mimics all the) justify
         grestore
      319.8974 661.3921 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Unix I/O system call layer \050read, write, open, ...\051.  It does) justify
         grestore
      319.8974 650.3506 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the same for the SunOS socket-oriented calls and the) justify
         grestore
      319.8974 639.3095 moveto
      font1 setfont
      (System V stream-oriented calls.) show
      319.8974 618.9526 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (This I/O design enables us to support applications) justify
         grestore
      319.8974 607.9114 moveto
      gsave
         font1 setfont
         (requiring more open files than allowed in a single Unix) justify
         grestore
      319.8974 596.8701 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (heavyweight process, at the cost of occasionally having to) justify
         grestore
      319.8974 585.8289 moveto
      font1 setfont
      (fault copies of descriptors into the VP descriptor caches.   ) show
      319.8974 565.1507 moveto
      font2 setfont
      (3.3 Storage Management) show
      319.8974 544.1512 moveto
      font3 setfont
      (3.3.1 Background ) show
      319.8974 523.473 moveto
      gsave
         font1 setfont
         (Storage management for many modern languages requires) justify
         grestore
      319.8974 512.4318 moveto
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (garbage collection.  If programs are to ) 0 buf
         opsaft 0 null put
         opsbef 1 {font1 setfont} put
         (make the most of a) 1 buf
         opsaft 1 null put
         mixedjustify
         grestore
      319.8974 501.3906 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (shared address space, it must be possible for them to share) justify
         grestore
      319.8974 490.3492 moveto
      gsave
         font1 setfont
         (allocated data structures.  This implies that storage) justify
         grestore
      319.8974 479.308 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (allocation and garbage collection must be part of the) justify
         grestore
      319.8974 468.2666 moveto
      gsave
         font1 setfont
         (common runtime rather than the individual language) justify
         grestore
      319.8974 457.2253 moveto
      gsave
         font1 setfont
         (runtimes.  An additional benefit of including storage) justify
         grestore
      319.8974 446.1842 moveto
      gsave
         font1 setfont
         (management with garbage collection in the common) justify
         grestore
      319.8974 435.1428 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (runtime is that programmers in languages like C, which do) justify
         grestore
      319.8974 424.1016 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (not require garbage collection in their runtime, benefit) justify
         grestore
      319.8974 413.0604 moveto
      font1 setfont
      (from its inclusion.   ) show
      319.8974 392.7037 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (In order to work for languages that cannot guarantee) justify
         grestore
      319.8974 381.6624 moveto
      gsave
         font1 setfont
         (pointer locations, the Portable Common Runtime uses a) justify
         grestore
      319.8974 370.6212 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (conservative collection scheme as implemented by Boehm) justify
         grestore
      319.8974 359.58 moveto
      gsave
         font1 setfont
         ([Boehm and Weiser 1988].  Two different storage allocation) justify
         grestore
      319.8974 348.5384 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (systems have been implemented for PCR.  The first is a) justify
         grestore
      319.8974 337.4973 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (direct adaptation of Boehm's Russell collector, with) justify
         grestore
      319.8974 326.4562 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (additions for typed objects and finalization.  The second is a) justify
         grestore
      319.8974 315.4149 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (new implementation that is real-time, parallel, generational) justify
         grestore
      319.8974 304.3735 moveto
      gsave
         font1 setfont
         (but noncopying, and handles pointers to the interior of) justify
         grestore
      319.8974 293.3323 moveto
      gsave
         font1 setfont
         (objects.  Because of its unique features, this second) justify
         grestore
      319.8974 282.2911 moveto
      gsave
         font1 setfont
         (implementation is described in more detail in a separate) justify
         grestore
      319.8974 271.2498 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (paper [Demers et al. 1989].  Here we focus on the highlights) justify
         grestore
      319.8974 260.2085 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (common to both collectors, and in particular on the) justify
         grestore
      319.8974 249.1673 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (mechanisms common to both for finalizing objects in a) justify
         grestore
      319.8974 238.126 moveto
      font1 setfont
      (conservative world, and for pointer-finding upcalls.) show
      319.8974 217.7692 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Garbage collectors can be either reference counting or) justify
         grestore
      319.8974 206.7281 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (mark-and-sweep.  Reference counting collectors impose) justify
         grestore
      319.8974 195.6868 moveto
      gsave
         font1 setfont
         (overhead on each pointer manipulation; mark-and-sweep) justify
         grestore
      319.8974 184.6456 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (collectors defer the overhead to garbage collection time.) justify
         grestore
      319.8974 173.6043 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Conservative collectors [Bartlett 1988] are a new type of) justify
         grestore
      319.8974 162.5631 moveto
      gsave
         font1 setfont
         (mark-and-sweep collector.  The advantage of conservative) justify
         grestore
      319.8974 151.5218 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (collectors is that they require no support from language) justify
         grestore
      319.8974 140.4805 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (implementations.  Even without exact knowledge of which) justify
         grestore
      319.8974 129.4393 moveto
      gsave
         font1 setfont
         (words in memory are pointers a conservative collector will) justify
         grestore
      319.8974 118.398 moveto
      gsave
         font1 setfont
         (never identify a reachable object as garbage; however, it) justify
         grestore
      319.8974 107.3568 moveto
      font1 setfont
      (may err in the other direction.      ) show
      319.8974 87.0 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (As Bartlett and Boehm have shown, conservative or) justify
         grestore
      grestore
   grestore
% end page 4
showpage
%%page 5
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 725.9137 moveto
      gsave
         font1 setfont
         (partially conservative collectors work for many languages.) justify
         grestore
      63.75 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (For PCR they have been extended in two ways: finalization) justify
         grestore
      63.75 703.8312 moveto
      font1 setfont
      (and pointer finding upcalls.) show
      63.75 682.6862 moveto
      font3 setfont
      (3.3.2 Finalization ) show
      63.75 661.5418 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Finalization is the method by which an application can) justify
         grestore
      63.75 650.5004 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (request that it get a chance to look at an object just before it) justify
         grestore
      63.75 639.459 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (is freed.  The application can abort the free at that point, or) justify
         grestore
      63.75 628.418 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (let it continue.  In PCR, finalization works as follows:) justify
         grestore
      63.75 617.3766 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (finalization may be requested for any object by passing it to) justify
         grestore
      63.75 606.3354 moveto
      /colwidth 230.6475 def
      gsave
         /Helvetica findfont 9.03375 scalefont
         /font8 exch def
         font1 setfont
         opsbef 0 {font1 setfont} put
         (the PCR routine ) 0 buf
         opsaft 0 null put
         font8 setfont
         opsbef 1 {font8 setfont} put
         (XR) 1 buf
         opsaft 1 null put
         opsbef 2 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 2 buf
         opsaft 2 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 3 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (RegisterForFinalization) 3 buf
         opsaft 3 null put
         font1 setfont
         opsbef 4 {font1 setfont} put
         (.) 4 buf
         opsaft 4 null put
         mixedjustify
         grestore
      63.75 595.2941 moveto
      /colwidth 230.6475 def
      gsave
         font8 setfont
         opsbef 0 {font8 setfont} put
         (XR) 0 buf
         opsaft 0 null put
         opsbef 1 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 1 buf
         opsaft 1 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 2 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (RegisterForFinalization) 2 buf
         opsaft 2 null put
         font1 setfont
         opsbef 3 {font1 setfont} put
         ( returns a ) 3 buf
         opsaft 3 null put
         font3 setfont
         opsbef 4 {font3 setfont} put
         (handle) 4 buf
         opsaft 4 null put
         font1 setfont
         opsbef 5 {font1 setfont} put
         ( to) 5 buf
         opsaft 5 null put
         mixedjustify
         grestore
      63.75 584.2529 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (the object.  The handle may be turned into a true pointer to) justify
         grestore
      63.75 573.2115 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the object at any time, but is not a pointer for purposes of) justify
         grestore
      63.75 562.1702 moveto
      gsave
         font1 setfont
         (collection \050i.e. an object can be finalized while handles for it) justify
         grestore
      63.75 551.129 moveto
      font1 setfont
      (still exist\051.  ) show
      63.75 530.3989 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (During each collection, after the mark phase but before) justify
         grestore
      63.75 519.3578 moveto
      font1 setfont
      (sweeping, the PCR collector executes the algorithm below: ) show
      81.81751 500.6352 moveto
      font1 setfont
      (for each unmarked finalizable object o ) show
      81.81751 489.5938 moveto
      font1 setfont
      (      for each pointer p in o) show
      81.81751 478.5526 moveto
      font1 setfont
      (            mark p^, and mark all p^'s descendants) show
      81.81751 467.5111 moveto
      font1 setfont
      (for each finalizable object, o, still unmarked) show
      81.81751 456.47 moveto
      font1 setfont
      (      queue o for finalization by its owning application) show
      63.75 435.74 moveto
      gsave
         font1 setfont
         (This algorithm has the difficulty of never finalizing circular) justify
         grestore
      63.75 424.6986 moveto
      gsave
         font1 setfont
         (lists.  The circularity of such lists must be broken by using a) justify
         grestore
      63.75 413.6574 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (handle produced by ) 0 buf
         opsaft 0 null put
         font8 setfont
         opsbef 1 {font8 setfont} put
         (XR) 1 buf
         opsaft 1 null put
         opsbef 2 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 2 buf
         opsaft 2 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 3 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (RegisterForFinalization) 3 buf
         opsaft 3 null put
         mixedjustify
         grestore
      63.75 402.6162 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (for one of the links, rather than an actual pointer.  The) justify
         grestore
      63.75 391.575 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (handle isn't treated as a pointer by the collector, so) justify
         grestore
      63.75 380.5336 moveto
      font1 setfont
      (finalization still occurs.) show
      63.75 359.8036 moveto
      gsave
         font1 setfont
         (An alternative implementation of finalization, used in the) justify
         grestore
      63.75 348.7623 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Cedar reference counted storage system[Rovner 1985], is a) justify
         grestore
      63.75 337.721 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (dangerous technique called ) 0 buf
         opsaft 0 null put
         font3 setfont
         opsbef 1 {font3 setfont} put
         (package ref counts) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {font1 setfont} put
         (.  It involves) 2 buf
         opsaft 2 null put
         mixedjustify
         grestore
      63.75 326.6797 moveto
      gsave
         font1 setfont
         (artificially lowering the reference count stored in each) justify
         grestore
      63.75 315.6386 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (finalizable object. and having no way to tell a known from) justify
         grestore
      63.75 304.5972 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (an unknown reference.  We believe that our method, using) justify
         grestore
      63.75 293.556 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (explicit handles that can be turned into pointers, is safer) justify
         grestore
      63.75 282.5147 moveto
      font1 setfont
      (and less error prone.) show
      63.75 261.7846 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Finalization is tricky, however it is done, but it is not) justify
         grestore
      63.75 250.7433 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (frequently programmed directly.   For instance, in the two) justify
         grestore
      63.75 239.7021 moveto
      gsave
         font1 setfont
         (million lines of Cedar code in use at PARC, only twelve) justify
         grestore
      63.75 228.6608 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (calls register objects for finalization.  Requiring careful) justify
         grestore
      63.75 217.6196 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (programming in the use of this feature is therefore) justify
         grestore
      63.75 206.5783 moveto
      gsave
         font1 setfont
         (reasonable.  However, doing without finalization is not) justify
         grestore
      63.75 195.5371 moveto
      gsave
         font1 setfont
         (possible: the twelve kinds of finalizable objects in Cedar) justify
         grestore
      63.75 184.4959 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (include stream and network I/O objects, so nearly all) justify
         grestore
      63.75 173.4546 moveto
      font1 setfont
      (applications indirectly use finalization. ) show
      63.75 152.3099 moveto
      font3 setfont
      (3.3.3 Improving performance of the conservative collector ) show
      63.75 131.165 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The PCR collector is conservative and so works even for) justify
         grestore
      63.75 120.1238 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (languages that permit any word in memory to contain a) justify
         grestore
      63.75 109.0826 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (pointer \050such as C\051.  However, for some languages \050such as) justify
         grestore
      63.75 98.0413 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Cedar and Lisp\051 it is possible to tell exactly which bit) justify
         grestore
      63.75 87.0 moveto
      gsave
         font1 setfont
         (patterns in memory are pointers.  For these languages,) justify
         grestore
      319.8974 725.9137 moveto
      gsave
         font1 setfont
         (collector speed can be improved because only words) justify
         grestore
      319.8974 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (containing pointers need to be examined.  Collection) justify
         grestore
      319.8974 703.8312 moveto
      gsave
         font1 setfont
         (precision may also be improved because false pointers will) justify
         grestore
      319.8974 692.79 moveto
      gsave
         font1 setfont
         (not unnecessarily hold storage under the conservative) justify
         grestore
      319.8974 681.7486 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (assumption, although for at least one test this effect was) justify
         grestore
      319.8974 670.7074 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (small [Boehm and Weiser 1988].  Another reason for non-) justify
         grestore
      319.8974 659.6660 moveto
      gsave
         font1 setfont
         (conservative pointer-finding is that some language) justify
         grestore
      319.8974 648.625 moveto
      gsave
         font1 setfont
         (implmentations use non-standard pointer representations to) justify
         grestore
      319.8974 637.5836 moveto
      gsave
         font1 setfont
         (improve non-pointer performance \050e.g. tagged pointers in) justify
         grestore
      319.8974 626.5424 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (some Lisp implementations\051.  For all these reasons, the) justify
         grestore
      319.8974 615.5011 moveto
      gsave
         font1 setfont
         (PCR design incorporates the notion of a pointer-finding) justify
         grestore
      319.8974 604.46 moveto
      font1 setfont
      (upcall.  The pointer-finding upcall works as follows:) show
      319.8974 580.587 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Each object is typed by the kind of pointer-finding upcall) justify
         grestore
      319.8974 569.5457 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (needed to deduce its pointers.  There can be as many) justify
         grestore
      319.8974 558.5044 moveto
      gsave
         font1 setfont
         (different upcalls as needed to find pointers in objects: one) justify
         grestore
      319.8974 547.4631 moveto
      gsave
         font1 setfont
         (for tagged pointers, one finding pointers according to) justify
         grestore
      319.8974 536.4220 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (datatype-dependent pointer maps, another for entirely) justify
         grestore
      319.8974 525.3806 moveto
      gsave
         font1 setfont
         (conservative pointer-finding, etc.  New upcalls are) justify
         grestore
      319.8974 514.3393 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (introduced by registering them with the collector and) justify
         grestore
      319.8974 503.2982 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (receiving in return an upcall type code.  The upcall type) justify
         grestore
      319.8974 492.2571 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (code is an optional additional parameter to object creation) justify
         grestore
      319.8974 481.2157 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and is permanently associated with the created object.) justify
         grestore
      319.8974 470.1744 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (During the mark phase of collection, the collector uses the) justify
         grestore
      319.8974 459.1331 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (upcall associated with each object to find the pointers it) justify
         grestore
      319.8974 448.092 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (contains.  In the absence of an upcall, fully conservative) justify
         grestore
      319.8974 437.0506 moveto
      font1 setfont
      (pointer-finding is used.) show
      319.8974 413.1778 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Our largest PCR applications do not use the upcall at) justify
         grestore
      319.8974 402.1364 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (all--they run completely conservative, even though in the) justify
         grestore
      319.8974 391.0952 moveto
      gsave
         font1 setfont
         (case of Cedar we theoretically have enough type) justify
         grestore
      319.8974 380.054 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (information to be more precise.  Our experience with the) justify
         grestore
      319.8974 369.0126 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (upcall is in a special version of PCR that uses the upcall for) justify
         grestore
      319.8974 357.9715 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (compatibility with a CommonLisp implementation that) justify
         grestore
      319.8974 346.9302 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (uses tagged pointers.  The cost of the upcall is about a) justify
         grestore
      319.8974 335.8889 moveto
      gsave
         font1 setfont
         (microsecond per object on a 16 Mhz SPARC \050sun-4/260\051.) justify
         grestore
      319.8974 324.8476 moveto
      gsave
         font1 setfont
         (This is roughly twice the cost of conservatively examining a) justify
         grestore
      319.8974 313.8064 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (word in the object to see if it is a pointer \050which requires at) justify
         grestore
      319.8974 302.7651 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (least a range check to see if it could be a value in the heap\051.) justify
         grestore
      319.8974 291.7238 moveto
      gsave
         font1 setfont
         (Thus the upcall performance is better than the conservative) justify
         grestore
      319.8974 280.6825 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (performance if it can reject non-pointers twice as fast as the) justify
         grestore
      319.8974 269.6413 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (conservative check, with at least a constant improvement of) justify
         grestore
      319.8974 258.6 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (two pointer checks.  For instance, suppose a rate of pointers) justify
         grestore
      319.8974 247.5588 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (in objects of 25%.  Then an upcall that positively identified) justify
         grestore
      319.8974 236.5176 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (pointers in objects, and spent an average of three) justify
         grestore
      319.8974 225.4764 moveto
      gsave
         font1 setfont
         (conservative checktimes per pointer per object doing so,) justify
         grestore
      319.8974 214.4351 moveto
      gsave
         font1 setfont
         (would on average have better performance for all objects of) justify
         grestore
      319.8974 203.3938 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (size greater than 5 words \050cost of 2 word-times overhead for) justify
         grestore
      319.8974 192.3526 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the upcall, and cost of 3.75 word-times for the 1.25 expected) justify
         grestore
      319.8974 181.3113 moveto
      font1 setfont
      (pointers per 5 word-object\051.) show
      319.8974 156.2381 moveto
      font2 setfont
      (3.4 Symbol Binding and Incremental Loading) show
      319.8974 131.1648 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Finally, we come to the part of the PCR that does) justify
         grestore
      319.8974 120.1236 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (incremental linking and loading, maintaining the symbol) justify
         grestore
      319.8974 109.0824 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (tables used for this purpose and for debugging.  This part of) justify
         grestore
      319.8974 98.04105 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the PCR consists of two components.  The first internalizes) justify
         grestore
      319.8974 86.99981 moveto
      gsave
         font1 setfont
         (object code from external files and the second does) justify
         grestore
      grestore
   grestore
% end page 5
showpage
%%page 6
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 725.9137 moveto
      font1 setfont
      (symbolic name binding on the internalized code.  ) show
      63.75 705.2839 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Internalizing object code is, of course, dependent on the) justify
         grestore
      63.75 694.2429 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (particular file formats used for object code.  The) justify
         grestore
      63.75 683.2015 moveto
      gsave
         font1 setfont
         (incremental loader reads the code and data portions of the) justify
         grestore
      63.75 672.16 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (object file into dynamically allocated storage.  It creates an) justify
         grestore
      63.75 661.119 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (internal symbol table corresponding to the symbol table in) justify
         grestore
      63.75 650.0778 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the file.  It also relocates the loaded code and data and) justify
         grestore
      63.75 639.0364 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (records the location of the code and data in a file for later) justify
         grestore
      63.75 627.9951 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (use by the debugger.  This file is used to generate a) justify
         grestore
      63.75 616.9539 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (synthetic a.out file containing symbols for all the statically) justify
         grestore
      63.75 605.9126 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and dynamically loaded code.  Debuggers such as dbx and) justify
         grestore
      63.75 594.8714 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (gdb can then be used on dynamically loaded code by using) justify
         grestore
      63.75 583.8301 moveto
      font1 setfont
      (the a.out file as their symbol source.) show
      63.75 563.2004 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The second component manages the internalized symbol) justify
         grestore
      63.75 552.1591 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (tables.  It is responsible for attempting to resolve undefined) justify
         grestore
      63.75 541.118 moveto
      gsave
         font1 setfont
         (symbols in each incrementally loaded file against defining) justify
         grestore
      63.75 530.0766 moveto
      gsave
         font1 setfont
         (occurrences in previously loaded files and in libraries.  Of) justify
         grestore
      63.75 519.0354 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (course, finding a defining occurrence in a library causes the) justify
         grestore
      63.75 507.9940 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (appropriate library component to itself be incrementally) justify
         grestore
      63.75 496.953 moveto
      font1 setfont
      (loaded.) show
      63.75 476.3231 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Each incrementally loaded module is checked for two) justify
         grestore
      63.75 465.282 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (special names:  ) 0 buf
         opsaft 0 null put
         font8 setfont
         opsbef 1 {font8 setfont} put
         (XR) 1 buf
         opsaft 1 null put
         opsbef 2 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 2 buf
         opsaft 2 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 3 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (install) 3 buf
         opsaft 3 null put
         font1 setfont
         opsbef 4 {font1 setfont} put
         ( and ) 4 buf
         opsaft 4 null put
         font8 setfont
         opsbef 5 {font8 setfont} put
         (XR) 5 buf
         opsaft 5 null put
         opsbef 6 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 6 buf
         opsaft 6 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 7 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (run) 7 buf
         opsaft 7 null put
         font1 setfont
         opsbef 8 {font1 setfont} put
         (.  If present,) 8 buf
         opsaft 8 null put
         mixedjustify
         grestore
      63.75 454.2408 moveto
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (these are called in that order.  ) 0 buf
         opsaft 0 null put
         font8 setfont
         opsbef 1 {font8 setfont} put
         (XR) 1 buf
         opsaft 1 null put
         opsbef 2 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 2 buf
         opsaft 2 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 3 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (install) 3 buf
         opsaft 3 null put
         font1 setfont
         opsbef 4 {font1 setfont} put
         ( performs any) 4 buf
         opsaft 4 null put
         mixedjustify
         grestore
      63.75 443.1993 moveto
      gsave
         font1 setfont
         (language-dependent symbol binding \050Cedar and Lisp use it,) justify
         grestore
      63.75 432.1579 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (for instance\051.  ) 0 buf
         opsaft 0 null put
         font8 setfont
         opsbef 1 {font8 setfont} put
         (XR) 1 buf
         opsaft 1 null put
         opsbef 2 {
             1.0 setgray
             currentpoint /undery exch def /underx exch def
             font8 setfont} put
         (_) 2 buf
         opsaft 2 {
             1.00375 setlinewidth
             currentpoint currentpoint pop
             undery 0.5 sub dup underx exch
             vec moveto} put
         opsbef 3 {
             0.0 setgray
             1.0 setgray
             0.0 setgray
             font8 setfont} put
         (run) 3 buf
         opsaft 3 null put
         font1 setfont
         opsbef 4 {font1 setfont} put
         ( is the entry point to actually start) 4 buf
         opsaft 4 null put
         mixedjustify
         grestore
      63.75 421.1169 moveto
      font1 setfont
      (executing the loaded code. ) show
      63.75 400.487 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The incremental loading code is fully compatible with) justify
         grestore
      63.75 389.4458 moveto
      gsave
         font1 setfont
         (existing Unix programs and libraries.  Anything that can be) justify
         grestore
      63.75 378.4045 moveto
      gsave
         font1 setfont
         (dynamically loaded can also be statically bound into an) justify
         grestore
      63.75 367.3633 moveto
      gsave
         font1 setfont
         (instance of PCR.  This enables us to debug PCR-based) justify
         grestore
      63.75 356.322 moveto
      gsave
         font1 setfont
         (applications using dynamic loading, and then, using those) justify
         grestore
      63.75 345.2807 moveto
      gsave
         font1 setfont
         (same modules, easily construct a single executable program) justify
         grestore
      63.75 334.2394 moveto
      gsave
         font1 setfont
         (indistinguishable from any other executable binary on the) justify
         grestore
      63.75 323.1982 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (machine.  We use this, for instance, to make some of our) justify
         grestore
      63.75 312.157 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (common tools, like the Cedar compiler and Postscript and) justify
         grestore
      63.75 301.1158 moveto
      font1 setfont
      (Interpress decomposers, look like ordinary Unix programs.) show
      63.75 270.0588 moveto
      font5 setfont
      (4. Performance) show
      63.75 249.0395 moveto
      gsave
         font1 setfont
         (Our early experience with PCR as the foundation of our) justify
         grestore
      63.75 237.9982 moveto
      gsave
         font1 setfont
         (Cedar programming environment suggested that its) justify
         grestore
      63.75 226.957 moveto
      gsave
         font1 setfont
         (performance was not an issue for that use.  To quantify this) justify
         grestore
      63.75 215.9156 moveto
      gsave
         font1 setfont
         (feeling we undertook some measurements of PCR) justify
         grestore
      63.75 204.8745 moveto
      font1 setfont
      (performance. ) show
      63.75 184.2448 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (This section is broken into 4 parts corresponding to overall) justify
         grestore
      63.75 173.2035 moveto
      gsave
         font1 setfont
         (performance as a user at the keyboard might see it,) justify
         grestore
      63.75 162.1623 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (followed by sections detailing the performance of the PCR) justify
         grestore
      63.75 151.121 moveto
      gsave
         font1 setfont
         (components.   Times were measured on a Sun-4/260) justify
         grestore
      63.75 140.0798 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (running SunOS 4.0.1 with the SunView window system up) justify
         grestore
      63.75 129.0386 moveto
      font1 setfont
      (but idle, and no other activity besides the benchmark.) show
      63.75 108.0192 moveto
      font2 setfont
      (4.1 Overall System Performance) show
      63.75 86.99982 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (In this section, all times are averages over several runs of) justify
         grestore
      319.8974 725.9137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (combined system and user time as measured by the SunOS) justify
         grestore
      319.8974 714.8724 moveto
      gsave
         font1 setfont
         (getrusage call, reported either directly \050for PCR\051, or from) justify
         grestore
      319.8974 703.8312 moveto
      font1 setfont
      (the the cshell 'time' command.  ) show
      319.8974 684.76 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Running a tight loop counting to 30 million takes 31.3) justify
         grestore
      319.8974 673.7187 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (seconds in raw Unix, 31.7 seconds in PCR.  This 1%) justify
         grestore
      319.8974 662.6774 moveto
      gsave
         font1 setfont
         (overhead is accounted for by PCR's internal 20-times-per-) justify
         grestore
      319.8974 651.6364 moveto
      gsave
         font1 setfont
         (second clock interrupts, and its 10-times-per-second) justify
         grestore
      319.8974 640.595 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (preemptive rescheduler.   This measurement shows the) justify
         grestore
      319.8974 629.5536 moveto
      font1 setfont
      (penalty due to PCR for compute-bound jobs.) show
      319.8974 610.4824 moveto
      gsave
         font1 setfont
         (As another measurement of PCR overhead, we ran the) justify
         grestore
      319.8974 599.4412 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (same tight counting loop many times at once, comparing) justify
         grestore
      319.8974 588.4 moveto
      gsave
         font1 setfont
         (multiprogramming using Unix processes with using PCR) justify
         grestore
      319.8974 577.3585 moveto
      gsave
         font1 setfont
         (threads.  For this measurement the number of times) justify
         grestore
      319.8974 566.3174 moveto
      gsave
         font1 setfont
         (through the loop was in each case divided by the number of) justify
         grestore
      319.8974 555.2762 moveto
      gsave
         font1 setfont
         (simultaneous executions, so an ideal completion time would) justify
         grestore
      319.8974 544.2349 moveto
      gsave
         font1 setfont
         (have been the same as for the single tight counting loop,) justify
         grestore
      319.8974 533.1936 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (above.  The details are in Table 1.  This implementation of) justify
         grestore
      319.8974 522.1521 moveto
      gsave
         font1 setfont
         (Unix seems to have a process switch overhead that goes up) justify
         grestore
      319.8974 511.1111 moveto
      gsave
         font1 setfont
         (by 3% from 16 to 32 processes, and again from 32 to 64) justify
         grestore
      319.8974 500.0698 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (processes.  These measurements show the benefit of) justify
         grestore
      319.8974 489.0285 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (lightweight threads over Unix processes for supporting) justify
         grestore
      319.8974 477.9872 moveto
      font1 setfont
      (many compute bound activities simultaneously.) show
      346.9988 464.9384 moveto
      font2 setfont
      27.10126 0.0 rmoveto
      27.10126 0.0 rmoveto
      27.10126 0.0 rmoveto
      (number of  processes) show
      346.9988 451.89 moveto
      font1 setfont
      27.10126 0.0 rmoveto
      27.10126 0.0 rmoveto
      font2 setfont
      ( 1) show
      20.32595 0.0 rmoveto
      ( 2) show
      20.32595 0.0 rmoveto
      ( 16) show
      15.80906 0.0 rmoveto
      ( 32) show
      15.80906 0.0 rmoveto
      ( 64) show
      346.9988 438.841 moveto
      font2 setfont
      (UNIX, secs) show
      font1 setfont
      9.880980 0.0 rmoveto
      (31.3) show
      11.31328 0.0 rmoveto
      (32.8) show
      11.31328 0.0 rmoveto
      (34.7) show
      11.31328 0.0 rmoveto
      (35.5) show
      11.31328 0.0 rmoveto
      (36.8) show
      346.9988 425.7924 moveto
      font2 setfont
      (PCR, secs) show
      font1 setfont
      15.23195 0.0 rmoveto
      (31.7) show
      11.31328 0.0 rmoveto
      (33.2) show
      11.31328 0.0 rmoveto
      (33.9) show
      11.31328 0.0 rmoveto
      (34.0) show
      11.31328 0.0 rmoveto
      (34.0) show
      346.9988 412.7436 moveto
      346.9988 399.695 moveto
      font2 setfont
      (Table 1.  Cpu-bound multiprocess times.) show
      319.8974 380.6235 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Finally, as a realistic example, native unix troff takes 27.7) justify
         grestore
      319.8974 369.5822 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (seconds to process the Unix C-shell \050CSH.1\051 manual entry.) justify
         grestore
      319.8974 358.541 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (With troff dynamically loaded and linked into PCR, the) justify
         grestore
      319.8974 347.4998 moveto
      gsave
         font1 setfont
         (same computation takes 28.0 seconds, exclusive of link and) justify
         grestore
      319.8974 336.4586 moveto
      font1 setfont
      (load time.   This is the minimum overhead of about 1%.) show
      319.8974 86.99978 moveto
      grestore
   grestore
% end page 6
showpage
%%page 7
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 725.9137 moveto
      font2 setfont
      (4.2 Threads) show
      63.75 704.8984 moveto
      font3 setfont
      (4.2.1 Thread Switch Time) show
      63.75 684.207 moveto
      gsave
         font1 setfont
         (Currently, the cost of a thread switch is about 77 usec) justify
         grestore
      63.75 673.1657 moveto
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (\050measured by ) 0 buf
         opsaft 0 null put
         font3 setfont
         opsbef 1 {font3 setfont} put
         (ITIMER) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {font1 setfont} put
         (\030) 2 buf
         opsaft 2 null put
         font3 setfont
         opsbef 3 {font3 setfont} put
         (PROF) 3 buf
         opsaft 3 null put
         font1 setfont
         opsbef 4 {font1 setfont} put
         ( option of the ) 4 buf
         opsaft 4 null put
         font3 setfont
         opsbef 5 {font3 setfont} put
         (getitimer) 5 buf
         opsaft 5 null put
         mixedjustify
         grestore
      63.75 662.1244 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (call\051.  This includes a 35 usec overhead of a trap to the) justify
         grestore
      63.75 651.0833 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (SunOS kernel to save the register-window.  It also includes) justify
         grestore
      63.75 640.042 moveto
      gsave
         font1 setfont
         (overhead for the debugging features discussed in Section) justify
         grestore
      63.75 629.0007 moveto
      gsave
         font1 setfont
         (3.1.3: the ability to freeze and thaw individual threads, to) justify
         grestore
      63.75 617.9594 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (examine blocked or faulted threads, to switch dynamically) justify
         grestore
      63.75 606.918 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (between single and multiple virtual processors, etc.  Some) justify
         grestore
      63.75 595.877 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (of these features will be greatly simplified or eliminated) justify
         grestore
      63.75 584.8359 moveto
      gsave
         font1 setfont
         (when the Cirio debugger is completed, and thread switch) justify
         grestore
      63.75 573.7940 moveto
      gsave
         font1 setfont
         (times should improve as a result, but even the current value) justify
         grestore
      63.75 562.7532 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (would be acceptable.  \050There is an additional, hidden cost) justify
         grestore
      63.75 551.7119 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (to thread switching, not reflected in our measurements:) justify
         grestore
      63.75 540.6707 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (when a thread is dispatched, its register file is initially) justify
         grestore
      63.75 529.6293 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (empty, so the thread incurs the overhead of \042faulting-in\042) justify
         grestore
      63.75 518.5883 moveto
      font1 setfont
      (registers as necessary.\051) show
      63.75 497.8965 moveto
      font3 setfont
      (4.2.2 Monitor Entry and Exit Times) show
      63.75 477.2051 moveto
      gsave
         font1 setfont
         (An important performance parameter is the cost of) justify
         grestore
      63.75 466.164 moveto
      gsave
         font1 setfont
         (acquiring and releasing a monitor lock in the \050usual\051 case) justify
         grestore
      63.75 455.1228 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (that there is no contention for the lock.  In PCR the cost of) justify
         grestore
      63.75 444.0816 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (calling a null ENTRY procedure \050i.e., one that does nothing) justify
         grestore
      63.75 433.0403 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (but acquire and then release a monitor lock\051 is 4.2 usec.) justify
         grestore
      63.75 421.999 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Currently both locking and unlocking are done by) justify
         grestore
      63.75 410.9578 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (procedure call, so this cost could be improved slightly by) justify
         grestore
      63.75 399.9166 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (in-line expansion.  Additional improvement could be) justify
         grestore
      63.75 388.8752 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (achieved, at some expense in debuggability, by eliminating) justify
         grestore
      63.75 377.834 moveto
      font1 setfont
      (a field containing the identity of the thread holding a lock.) show
      63.75 357.1427 moveto
      font2 setfont
      (4.3 I/O) show
      63.75 336.4512 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (A program that opens a file, and then does 100,000) justify
         grestore
      63.75 325.4099 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (iterations of lseeking to the beginning and reading 1024) justify
         grestore
      63.75 314.3687 moveto
      gsave
         font1 setfont
         (bytes takes 23.3 seconds in raw unix, and 31.3 seconds in) justify
         grestore
      63.75 303.3276 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (PCR.  This is an overhead of about 40 usec for each of the) justify
         grestore
      63.75 292.2862 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (lseek and read calls.  Some of this time is in entering and) justify
         grestore
      63.75 281.2449 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (leaving monitors \050two per call\051, and the rest is the overhead) justify
         grestore
      63.75 270.2037 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (of checking for the special cases for such things as the read) justify
         grestore
      63.75 259.1625 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (blocking or the descriptor not being in the cache.  A better) justify
         grestore
      63.75 248.1212 moveto
      gsave
         font1 setfont
         (tuning for common cases would make a large improvement.) justify
         grestore
      63.75 237.08 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (On the other hand, 40 usecs overhead for an I/O that will) justify
         grestore
      63.75 226.0387 moveto
      font1 setfont
      (take at least a few milliseconds seems acceptable.) show
      63.75 205.6713 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (We do not yet have applications large enough to let us) justify
         grestore
      63.75 194.6301 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (make realistic measurements of the PCR file descriptor) justify
         grestore
      63.75 183.5889 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (cache hit ratio.  Using a synthetic benchmark, we have) justify
         grestore
      63.75 172.5476 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (measured the cost of a descriptor cache miss to be about 4.6) justify
         grestore
      63.75 161.5064 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (msec.  This figure includes system and user times, both on) justify
         grestore
      63.75 150.4651 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (the virtual processor on which the fault occurred and on the) justify
         grestore
      63.75 139.4239 moveto
      font1 setfont
      (I/O processor owning the desired descriptor.) show
      63.75 118.7325 moveto
      font2 setfont
      (4.4 Storage management ) show
      63.75 98.04113 moveto
      gsave
         font1 setfont
         (Our most widely used PCR implementation today \050March) justify
         grestore
      63.75 86.99988 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (1989\051 uses a collector based on Boehm's [Boehm and) justify
         grestore
      319.8974 725.9137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Weiser 1988], modified to keep a type word before the first) justify
         grestore
      319.8974 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (word of the object.  Its collection speed is about a half) justify
         grestore
      319.8974 703.8312 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (second per megabyte of active object space \050assuming no) justify
         grestore
      319.8974 692.79 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (paging\051.  Our newer collector ought to run at a similar) justify
         grestore
      319.8974 681.7486 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (speed, but on only 100kbytes at a time and touching many) justify
         grestore
      319.8974 670.7074 moveto
      font1 setfont
      (fewer pages [Demers et al 1989].) show
      319.8974 648.4169 moveto
      font2 setfont
      (4.5 Symbol binding and dynamic loading ) show
      319.8974 626.1265 moveto
      gsave
         font1 setfont
         (Dynamically loading an object file into PCR is somewhat) justify
         grestore
      319.8974 615.085 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (faster than processing the file using the Unix ld command.) justify
         grestore
      319.8974 604.0439 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (For example, the troff program discussed above is loaded) justify
         grestore
      319.8974 593.0026 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (into PCR in 1.3 seconds compared with the 1.7 seconds ld) justify
         grestore
      319.8974 581.9613 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (requires to process it.  The reason seems to be that ld has) justify
         grestore
      319.8974 570.92 moveto
      gsave
         font1 setfont
         (many general cases to handle, and must also build an) justify
         grestore
      319.8974 559.8788 moveto
      gsave
         font1 setfont
         (output file, while PCR loads and relocates in place.  Of) justify
         grestore
      319.8974 548.8375 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (course, the cost of ld'ing is amortized over all the executions) justify
         grestore
      319.8974 537.7964 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (of the resulting output file, while the cost of dynamic) justify
         grestore
      319.8974 526.7551 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (loading can only be amortized over executions taking place) justify
         grestore
      319.8974 515.7137 moveto
      font1 setfont
      (within a single instance of PCR.  ) show
      319.8974 483.3857 moveto
      font5 setfont
      (5. Related Work) show
      319.8974 461.0953 moveto
      gsave
         font1 setfont
         (Our work builds on previous research in light-weight) justify
         grestore
      319.8974 450.054 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (processes, garbage collection, library management, etc., and) justify
         grestore
      319.8974 439.0127 moveto
      gsave
         font1 setfont
         (references to these are in the main body of the text.  In this) justify
         grestore
      319.8974 427.9715 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (section we collect the discussion about alternative) justify
         grestore
      319.8974 416.9302 moveto
      font1 setfont
      (approaches to language interoperability.) show
      319.8974 395.2833 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (One current approach to language interoperability,) justify
         grestore
      319.8974 384.2421 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         opsbef 0 {font1 setfont} put
         (exemplified in Mercury) 0 buf
         opsaft 0 null put
         font5 setfont
         opsbef 1 {font5 setfont} put
         ( ) 1 buf
         opsaft 1 null put
         font1 setfont
         opsbef 2 {font1 setfont} put
         ([Liskov et al. 1988] and HRPC) 2 buf
         opsaft 2 null put
         mixedjustify
         grestore
      319.8974 373.2009 moveto
      gsave
         font1 setfont
         ([Bershad et al. 1987], uses client-server models of) justify
         grestore
      319.8974 362.1596 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interoperation where remote procedure call connects, and) justify
         grestore
      319.8974 351.1184 moveto
      gsave
         font1 setfont
         (insulates, applications in different languages.  The problem) justify
         grestore
      319.8974 340.0769 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (here is the lack of tight coupling.  Remote procedure call,) justify
         grestore
      319.8974 329.0357 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (even when local but across address spaces, is usually much) justify
         grestore
      319.8974 317.9946 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (more expensive than calls within the same address space.) justify
         grestore
      319.8974 306.9533 moveto
      gsave
         font1 setfont
         (When the language partitioning and the client/server) justify
         grestore
      319.8974 295.9121 moveto
      gsave
         font1 setfont
         (partitioning match, RPC does well.  When they do not) justify
         grestore
      319.8974 284.8708 moveto
      gsave
         font1 setfont
         (match, they force the application writer to introduce) justify
         grestore
      319.8974 273.8296 moveto
      font1 setfont
      (artificial distinctions.) show
      319.8974 252.1829 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Another approach to language interoperability uses a) justify
         grestore
      319.8974 241.1416 moveto
      gsave
         font1 setfont
         (common base language to which other languages must) justify
         grestore
      319.8974 230.1004 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (conform.   The foreign function call interfaces in Common) justify
         grestore
      319.8974 219.0591 moveto
      gsave
         font1 setfont
         (Lisp [Sun 1988b, Franz 1988], are examples of this) justify
         grestore
      319.8974 208.0178 moveto
      gsave
         font1 setfont
         (approach.  The problem here is that the privileged language) justify
         grestore
      319.8974 196.9766 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (enjoys easier debugging, better access to services, and more) justify
         grestore
      319.8974 185.9354 moveto
      gsave
         font1 setfont
         (attention from developers.  The choice of language in which) justify
         grestore
      319.8974 174.8941 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (to write an application becomes distorted by issues beyond) justify
         grestore
      319.8974 163.8529 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (appropriate language semantics, and the languages) justify
         grestore
      319.8974 152.8116 moveto
      font1 setfont
      (interoperate asymmetrically.) show
      319.8974 131.1649 moveto
      gsave
         font1 setfont
         (A third approach to language interoperability is to) justify
         grestore
      319.8974 120.1237 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (standardize on a common intermediate form.  This is a) justify
         grestore
      319.8974 109.0825 moveto
      gsave
         font1 setfont
         (variation on the privileged language approach, permitting) justify
         grestore
      319.8974 98.04124 moveto
      gsave
         font1 setfont
         (different languages to interoperate as long as they use a) justify
         grestore
      319.8974 86.99995 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (common compiler back-end.  In spite of several attempts in) justify
         grestore
      grestore
   grestore
% end page 7
showpage
%%page 8
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      63.75 725.9137 moveto
      gsave
         font1 setfont
         (this direction [e.g. Tanenbaum et al. 1983], the restrictions) justify
         grestore
      63.75 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (on language designers and implementors have proven too) justify
         grestore
      63.75 703.8312 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (severe for wide adoption.  We hope our more modest) justify
         grestore
      63.75 692.79 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (approach \050agreement on important parts of the runtime) justify
         grestore
      63.75 681.7486 moveto
      gsave
         font1 setfont
         (environment\051, by analogy with the success of common) justify
         grestore
      63.75 670.7074 moveto
      font1 setfont
      (operating systems, will prove better in practice.) show
      63.75 647.2308 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (A fourth \042approach\042 is to say that language interoperability) justify
         grestore
      63.75 636.1896 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (is bunk.  Either there is one true language, or what really) justify
         grestore
      63.75 625.1485 moveto
      gsave
         font1 setfont
         (matters is not language but environment.  Proponents of) justify
         grestore
      63.75 614.1071 moveto
      gsave
         font1 setfont
         (these views either focus efforts on inventing new languages) justify
         grestore
      63.75 603.066 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (to solve all their problems [U.S. DOD 1983] or in) justify
         grestore
      63.75 592.0247 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (developing the single language environment as in Smalltalk) justify
         grestore
      63.75 580.9834 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         ([Goldberg and Robson 1983], Interlisp [Xerox 1985], Cedar) justify
         grestore
      63.75 569.9424 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         ([Swinehart et al. 1986], or the new DARPA environments) justify
         grestore
      63.75 558.901 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (proposal [Gabriel 1989].  We think different problems are) justify
         grestore
      63.75 547.8596 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (attacked better in different languages, and that software) justify
         grestore
      63.75 536.8184 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (engineers and computer scientists  should not be restricted) justify
         grestore
      63.75 525.7771 moveto
      font1 setfont
      (to a single semantic arrow in their quivers.) show
      63.75 491.1622 moveto
      font5 setfont
      (6. Experience and Conclusions) show
      63.75 466.5843 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (The Portable Common Runtime is in daily use by about ten) justify
         grestore
      63.75 455.543 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (researchers at PARC and by scores of users elsewhere in) justify
         grestore
      63.75 444.5018 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (Xerox.  PCR is the lowest-level foundation of future work) justify
         grestore
      63.75 433.4605 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (in PARC's Computer Science and Electronic Documents) justify
         grestore
      63.75 422.4194 moveto
      gsave
         font1 setfont
         (Labs.  We are running about 500,000 lines of Cedar code on) justify
         grestore
      63.75 411.3778 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (top of PCR as of August 1989 [Atkinson et al. 1989].  PCR,) justify
         grestore
      63.75 400.3367 moveto
      gsave
         font1 setfont
         (itself, is about 20,000 lines of C, and about 200 lines of) justify
         grestore
      63.75 389.2954 moveto
      font1 setfont
      (assembler.) show
      63.75 365.819 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Several of our uses push hard on the PCR facilities.  For) justify
         grestore
      63.75 354.7778 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (instance, we have an X window client that creates several) justify
         grestore
      63.75 343.7365 moveto
      gsave
         font1 setfont
         (threads per window.  We also have an Interpress printer) justify
         grestore
      63.75 332.6953 moveto
      /colwidth 230.6476 def
      gsave
         font1 setfont
         (driver that reuses lots of free storage, and so stretches the) justify
         grestore
      63.75 321.6538 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (collection facilities.  To bring up a full Cedar world on our) justify
         grestore
      63.75 310.6128 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Sun workstations, more than 60 large modules \050totaling) justify
         grestore
      63.75 299.5715 moveto
      font1 setfont
      (over 5 megabytes\051 must be dynamically loaded.) show
      63.75 276.095 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (We routinely use PCR to intercall between C and Cedar,) justify
         grestore
      63.75 265.0537 moveto
      gsave
         font1 setfont
         (and intercalling with Kyoto Common Lisp receives a small) justify
         grestore
      63.75 254.0127 moveto
      gsave
         font1 setfont
         (amount of use.  A small part of the Kyoto runtime was) justify
         grestore
      63.75 242.9714 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (changed to use the PCR collector and dynamic loader;) justify
         grestore
      63.75 231.93 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (otherwise it is unchanged.  We have tested the dynamic) justify
         grestore
      63.75 220.8888 moveto
      gsave
         font1 setfont
         (loading and automatic garbage collection of large pre-) justify
         grestore
      63.75 209.8476 moveto
      gsave
         font1 setfont
         (existing SunView applications, merely relinked to be) justify
         grestore
      63.75 198.8063 moveto
      font1 setfont
      (relocatable instead of executable, and they run fine.) show
      63.75 175.3299 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Most of our use of PCR is under SunOS 4.0 on SPARC-) justify
         grestore
      63.75 164.2887 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (based processors.  We also have a small amount of 68020) justify
         grestore
      63.75 153.2474 moveto
      gsave
         font1 setfont
         (and Mach use.  The use that shows PCR's portability best is) justify
         grestore
      63.75 142.2062 moveto
      gsave
         font1 setfont
         (on CSL's own SPARC-based computer, which has no) justify
         grestore
      63.75 131.1649 moveto
      gsave
         font1 setfont
         (operating system at all but shares memory with another) justify
         grestore
      63.75 120.1237 moveto
      gsave
         font1 setfont
         (processor running the Cedar operating system.  This PCR) justify
         grestore
      63.75 109.0825 moveto
      gsave
         font1 setfont
         (has nothing Unix-like nearby to rely upon.  Bringing up) justify
         grestore
      63.75 98.04124 moveto
      gsave
         font1 setfont
         (this PCR from our original SunOS SPARC-based version) justify
         grestore
      63.75 86.99995 moveto
      font1 setfont
      (took less than a month.) show
      319.8974 725.9137 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (For the future, we hope to see PCR in wider use, both) justify
         grestore
      319.8974 714.8724 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (inside and outside PARC and Xerox.  The source code and) justify
         grestore
      319.8974 703.8312 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (documentation for PCR is available from the Computer) justify
         grestore
      319.8974 692.79 moveto
      gsave
         font1 setfont
         (Science Laboratory at PARC for a copying charge.  We) justify
         grestore
      319.8974 681.7486 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (hope to interest other portable language efforts, such as) justify
         grestore
      319.8974 670.7074 moveto
      gsave
         font1 setfont
         (C++, Objective C, and Modula-3, in using PCR as their) justify
         grestore
      319.8974 659.6660 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (base.  We hope to see at least the facilities offered by) justify
         grestore
      319.8974 648.625 moveto
      gsave
         font1 setfont
         (PCR\030threads, language-independent garbage collection,) justify
         grestore
      319.8974 637.5836 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (and user-controlled incremental linking and loading\030) justify
         grestore
      319.8974 626.5424 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (available in all future operating systems.  Finally, we expect) justify
         grestore
      319.8974 615.5011 moveto
      gsave
         font1 setfont
         (to continue push on the enabling technologies for language) justify
         grestore
      319.8974 604.46 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (interoperation.  Of particularly critical importance is further) justify
         grestore
      319.8974 593.4186 moveto
      font1 setfont
      (work on data representation.) show
      319.8974 562.3106 moveto
      font5 setfont
      (7. Acknowledgements) show
      319.8974 541.2403 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (We would like to acknowledge the contributions to this) justify
         grestore
      319.8974 530.199 moveto
      gsave
         font1 setfont
         (work by our PARC colleagues.  Many people in the) justify
         grestore
      319.8974 519.1579 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Computer Science and Electronic Documents Laboratories) justify
         grestore
      319.8974 508.1165 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (have done the porting of Cedar to PCR: Russ Atkinson,) justify
         grestore
      319.8974 497.0753 moveto
      gsave
         font1 setfont
         (Christian Jacobi, Bill Jackson, Michael Plass, Ken Pier, Eric) justify
         grestore
      319.8974 486.0339 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Bier, Jim Foote, Willie-Sue Orr and Eduardo Pelegri.) justify
         grestore
      319.8974 474.9927 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Christian LeCocq and Christoph Cuenod contributed the) justify
         grestore
      319.8974 463.9516 moveto
      gsave
         font1 setfont
         (Cedar support for the standalone PCR implementation.) justify
         grestore
      319.8974 452.9102 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Bryan Lyles converted Unix performance tools to work) justify
         grestore
      319.8974 441.8688 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (with PCR.  Scott Shenker, Danny Bobrow and Barry Hayes) justify
         grestore
      319.8974 430.8276 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (helped us improve our understanding of garbage collection.) justify
         grestore
      319.8974 419.7866 moveto
      /colwidth 230.6475 def
      gsave
         font1 setfont
         (Gregor Kiczales and Danny Bobrow helped with issues in) justify
         grestore
      319.8974 408.745 moveto
      font1 setfont
      (running LISP on PCR.) show
      319.8974 377.6374 moveto
      font5 setfont
      (8. References) show
      319.8974 358.5744 moveto
      font4 setfont
      ([Accetta et al. 1986]) show
      337.4632 349.5405 moveto
      font4 setfont
      (Accetta, J. J., Baron, R. V., Bolosky, W., Golub, D. B., Rashid, R. F.) show
      337.4632 340.5068 moveto
      font4 setfont
      (Tevanian, A., and Young, M. W., ``Mach: A New Kernel Foundation) show
      337.4632 331.4731 moveto
      font4 setfont
      (for UNIX Development'', ) show
      /Times-Italic findfont 7.02625 scalefont
      /font9 exch def
      font9 setfont
      (Proceedings of Summer Usenix) show
      font4 setfont
      (, July, 1986.) show
      319.8974 320.84 moveto
      font4 setfont
      ([Apik and Diehl 1988]) show
      337.4632 311.8063 moveto
      font4 setfont
      (Apik, S., and Diehl, S., \042Presentation Manager and LAN Manager\042,) show
      337.4632 302.7725 moveto
      font9 setfont
      (BYTE) show
      font4 setfont
      (, Vol. 13\05010\051, October 1988, pp. 157-159.) show
      319.8974 292.1395 moveto
      font4 setfont
      ([Atkinson et al. 1989]) show
      337.4632 283.1058 moveto
      font4 setfont
      (Atkinson, R.,  Demers, A., Hauser, C., Jacobi, C., Kessler, P. and) show
      337.4632 274.072 moveto
      font4 setfont
      (Weiser, M.,  ``Experiences Creating a Portable Cedar'', ) show
      font9 setfont
      (Proceedings of) show
      337.4632 265.0382 moveto
      font9 setfont
      (the 1989 ACM SIGPLAN Conference on Programming Language) show
      337.4632 256.0045 moveto
      font9 setfont
      (Design and Implementation) show
      font4 setfont
      (, June 1989.) show
      319.8974 245.3714 moveto
      font4 setfont
      ([Bartlett 1988]) show
      337.4632 236.3377 moveto
      font4 setfont
      (Bartlett, J. F.,  \042Compacting Garbage Collection with Ambiguous) show
      337.4632 227.3039 moveto
      font4 setfont
      (Roots\042,  DEC Western Research Lab Research Report 88/2, February) show
      337.4632 218.2702 moveto
      font4 setfont
      (1988.) show
      319.8974 207.6372 moveto
      font4 setfont
      ([Bershad et al. 1987]) show
      337.4632 198.6034 moveto
      font4 setfont
      (Bershad, B. N., Ching, D. T., Lazowska, E. D., Sanislo, J. and) show
      337.4632 189.5696 moveto
      font4 setfont
      (Schwartz, M.,  ``A Remote Procedure Call Facility for Interconnecting) show
      337.4632 180.5359 moveto
      font4 setfont
      (Heterogeneous Computer Systems'', ) show
      font9 setfont
      (IEEE Transactions on Software) show
      337.4632 171.5021 moveto
      font9 setfont
      (Engineering) show
      font4 setfont
      ( ) show
      /Times-Bold findfont 7.02625 scalefont
      /font10 exch def
      font10 setfont
      (SE-13) show
      font4 setfont
      (, ) show
      font9 setfont
      (8) show
      font4 setfont
      (, August, 1987, pp. 880-894.) show
      319.8974 160.869 moveto
      font4 setfont
      ([Bershad et al. 1988]) show
      337.4632 151.8353 moveto
      font4 setfont
      (Bershad, B. N., Lazowska, E. D., Levy, H. M., Wagner, D. B., \042An) show
      337.4632 142.8016 moveto
      font4 setfont
      (Open Environment for Building Parallel Programming Systems\042,) show
      337.4632 133.7678 moveto
      font9 setfont
      (Proceedings ACM/SIGPLAN PPEALS 1988 Parallel Programming:) show
      337.4632 124.734 moveto
      font9 setfont
      (Experience with Applications, Languages and Systems, SIGPLAN) show
      337.4632 115.7003 moveto
      font9 setfont
      (Notices, ) show
      font4 setfont
      (Vol. 23\0509\051, September 1988, pp. 1-9.) show
      319.8974 105.0672 moveto
      font4 setfont
      ([Boehm and Weiser 1988]) show
      337.4632 96.03347 moveto
      font4 setfont
      (Boehm, H-J., and Weiser, M., \042Garbage Collection in an) show
      337.4632 86.99972 moveto
      font4 setfont
      (Uncooperative Environment\042, ) show
      font9 setfont
      (Software-Practice and Experience,) show
      font4 setfont
      ( Vol.) show
      grestore
   grestore
% end page 8
showpage
%%page 9
gsave
   2834.646 2834.646 scale
   gsave
      0.0254 dup matrix scale concat
      0.013837 dup matrix scale concat
      81.31562 725.9137 moveto
      font4 setfont
      (18\0509\051, September 1988, pp. 807-820.) show
      63.75 716.0596 moveto
      font4 setfont
      ([Brinch-Hansen 1975]) show
      81.31562 707.0259 moveto
      font4 setfont
      (Brinch-Hansen, P., ``The Programming Language Concurrent Pascal'',) show
      81.31562 697.9922 moveto
      font9 setfont
      (IEEE Transactions on Software Engineering) show
      font4 setfont
      ( ) show
      font10 setfont
      (SE-1) show
      font4 setfont
      (, ) show
      font9 setfont
      (2) show
      font4 setfont
      (, June, 1975, pp.) show
      81.31562 688.9582 moveto
      font4 setfont
      (199-207.) show
      63.75 679.1045 moveto
      font4 setfont
      ([Cardelli et al. 1988]) show
      81.31562 670.0706 moveto
      font4 setfont
      (Cardelli, L., Donahue, J., Glassman, L., Jordan, M., Kalsow, B., and) show
      81.31562 661.037 moveto
      font4 setfont
      (Nelson, G., ``Modula-3 Report'', DEC Systems Research Center,) show
      81.31562 652.0032 moveto
      font4 setfont
      (August, 1988.) show
      63.75 642.1492 moveto
      font4 setfont
      ([Cheriton and Zwaenepoel 1983]) show
      81.31562 633.1153 moveto
      font4 setfont
      (Cheriton, D. and Zwaenepoel, W.  ``The Distributed V Kernel and its) show
      81.31562 624.0816 moveto
      font4 setfont
      (Performance for Diskless Workstations'', ) show
      font9 setfont
      (Proceedings of the Ninth) show
      81.31562 615.048 moveto
      font9 setfont
      (ACM Symposium on Operating Systems Principles, ) show
      font4 setfont
      (Bretton Woods,) show
      81.31562 606.0142 moveto
      font4 setfont
      (NH, October, 1983, pp. 128-140.) show
      63.75 596.16 moveto
      font4 setfont
      ([Clark 1985]) show
      81.31562 587.1265 moveto
      font4 setfont
      (Clark, D.  ``The Structuring of Systems Using Upcalls'', ) show
      font9 setfont
      (Proceedings of) show
      81.31562 578.0925 moveto
      font9 setfont
      (the Tenth ACM Symposium on Operating Systems Principles, ) show
      font4 setfont
      (Orcas) show
      81.31562 569.0588 moveto
      font4 setfont
      (Island, WA, December, 1985, pp. 171-180.) show
      63.75 559.2049 moveto
      font4 setfont
      ([Demers et al. 1989]) show
      81.31562 550.1711 moveto
      font4 setfont
      (Demers, A., Weiser, M., Hayes, B., Boehm, H., Bobrow, D., and) show
      81.31562 541.1372 moveto
      font4 setfont
      (Shenker, S. \042Combining Generational and Conservative Garbage) show
      81.31562 532.1036 moveto
      font4 setfont
      (Collection\042, submitted to the ACM Conference on Principles of) show
      81.31562 523.0698 moveto
      font4 setfont
      (Programming Languages, January 1990.  ) show
      63.75 513.2159 moveto
      font4 setfont
      ([Franz 1988]) show
      81.31562 504.1821 moveto
      font4 setfont
      (Franz Inc., \042Foreign Functions\042,) show
      font9 setfont
      ( Allegro Common Lisp User Guide,) show
      81.31562 495.1484 moveto
      font9 setfont
      (Release 2.2) show
      font4 setfont
      (, Section 10,  January 1988.) show
      63.75 485.2941 moveto
      font4 setfont
      ([Gabriel 1989]) show
      81.31562 476.2606 moveto
      font4 setfont
      (Gabriel, D., Ed.  \042Draft Report on Requirements for a Common) show
      81.31562 467.2268 moveto
      font4 setfont
      (Prototyping System\042, ) show
      font9 setfont
      (SIGPLAN Notices) show
      font4 setfont
      (, V. 24, No. 3, March 1989,) show
      81.31562 458.193 moveto
      font4 setfont
      (pp. 93-166.) show
      63.75 448.339 moveto
      font4 setfont
      ([Goldberg and Robson 1983]) show
      81.31562 439.3053 moveto
      font4 setfont
      (Goldberg, A. and Robson, D., ) show
      font9 setfont
      (Smalltalk-80: the language and its) show
      81.31562 430.2716 moveto
      font9 setfont
      (implementation) show
      font4 setfont
      (, Addison-Wesley, 1983.) show
      63.75 420.4178 moveto
      font4 setfont
      ([Hayes and Baran 1989]) show
      81.31562 411.3838 moveto
      font4 setfont
      (Hayes, F. and Baran N., ``A Guide to GUIs'', ) show
      font9 setfont
      (Byte ) show
      font10 setfont
      (14) show
      font4 setfont
      (, ) show
      font9 setfont
      ( 7, ) show
      font4 setfont
      (July, 1989,) show
      81.31562 402.35 moveto
      font4 setfont
      (pp. 250-257.) show
      font9 setfont
      ( ) show
      63.75 392.496 moveto
      font4 setfont
      ([Hoare 1974]) show
      81.31562 383.4624 moveto
      font4 setfont
      (Hoare, C. A. R., ``Monitors: An Operating System Structuring) show
      81.31562 374.4285 moveto
      font4 setfont
      (Concept'', ) show
      font9 setfont
      (CACM) show
      font4 setfont
      ( ) show
      font10 setfont
      (17) show
      font4 setfont
      (, ) show
      font9 setfont
      (10) show
      font4 setfont
      (, October, 1974, pp. 549-557.) show
      63.75 364.5744 moveto
      font4 setfont
      ([Liskov et al. 1987]) show
      81.31562 355.5408 moveto
      font4 setfont
      (Liskov, B., Curtis, D., Johnson, P. and Scheifler, R.  ``The) show
      81.31562 346.507 moveto
      font4 setfont
      (Implementation of Argus'', ) show
      font9 setfont
      (Proceedings of the Eleventh ACM) show
      81.31562 337.4733 moveto
      font9 setfont
      (Symposium on Operating Systems Principles, ) show
      font4 setfont
      (Austin, TX, November,) show
      81.31562 328.4396 moveto
      font4 setfont
      (1987, pp. 111-122.) show
      63.75 318.5856 moveto
      font4 setfont
      ([Liskov et al. 1988]) show
      81.31562 309.5517 moveto
      font4 setfont
      (Liskov, B., Bloom, T., Gifford, D., Scheifler, R., and Weihl, W.,) show
      81.31562 300.518 moveto
      font4 setfont
      (\042Communication in the Mercury System\042, ) show
      font9 setfont
      (Proc. of the 21st Annual) show
      81.31562 291.4844 moveto
      font9 setfont
      (Hawaii Intl. Conf. on System Sciences) show
      font4 setfont
      (, Kailua-Kona, HI, January 1988,) show
      81.31562 282.4506 moveto
      font4 setfont
      (pp. 178-187.) show
      63.75 272.5965 moveto
      font4 setfont
      ([Pu et al. 1988]) show
      81.31562 263.5628 moveto
      font4 setfont
      (Pu, C. and Massalin, H. and Ioannidis, J.,  \042The {Synthesis} Kernel\042,) show
      81.31562 254.529 moveto
      font4 setfont
      (Computing Systems, Vol 1\0501\051, Winter 1988, pp. 11-32.) show
      63.75 244.675 moveto
      font4 setfont
      ([Rovner 1985]) show
      81.31562 235.6413 moveto
      font4 setfont
      (Rovner, P. \042On Adding Garbage Collection and Runtime Types to a) show
      81.31562 226.6076 moveto
      font4 setfont
      (Strongly-Typed, Statically Checked, Concurrent Language\042, Xerox) show
      81.31562 217.5738 moveto
      font4 setfont
      (Palo Alto Research Center Technical Report CSL-84-7, July 1985.) show
      63.75 207.7198 moveto
      font4 setfont
      ([Steele 1984]) show
      81.31562 198.6861 moveto
      font4 setfont
      (Steele, G., ) show
      font9 setfont
      (Common LISP:  The Language) show
      font4 setfont
      (, Digital Press, 1984.) show
      63.75 188.832 moveto
      font4 setfont
      ([Sturgis 1989]) show
      81.31562 179.7982 moveto
      font4 setfont
      (Sturgis, H., ``Cirio: A Multiple Language Symbolic Debugger for the) show
      81.31562 170.7645 moveto
      font4 setfont
      (Portable Common Runtime'',  Xerox PARC, in preparation.) show
      63.75 160.9105 moveto
      font4 setfont
      ([Sun 1988a]) show
      81.31562 151.8767 moveto
      font4 setfont
      (Sun Microsystems, ``Lightweight Process Library'',  ) show
      font9 setfont
      (SunOS Reference) show
      81.31562 142.843 moveto
      font9 setfont
      (Manual, Sun Release 4.0, ) show
      font4 setfont
      (1988, section 3L.) show
      63.75 132.989 moveto
      font4 setfont
      ([Sun 1988b]) show
      81.31562 123.9552 moveto
      font4 setfont
      (Sun Microsystems, \042Working Beyond the Lisp Environment\042, ) show
      font9 setfont
      (Sun) show
      81.31562 114.9215 moveto
      font9 setfont
      (Common Lisp 3.0 Advanced User's Guide) show
      font4 setfont
      (, chapter 5, part no.) show
      81.31562 105.8878 moveto
      font4 setfont
      (800-3049-10, August 1988.) show
      63.75 96.0337 moveto
      font4 setfont
      ([Swinehart et al. 1986]) show
      81.31562 87.0 moveto
      font4 setfont
      (Swinehart, D., Zellweger, P., Beach, R., Hagmann, R., ``A Structural) show
      337.4632 725.9137 moveto
      font4 setfont
      (View of the Cedar Programming Environment'', ) show
      font9 setfont
      (TOPLAS) show
      font4 setfont
      ( ) show
      font10 setfont
      (8) show
      font4 setfont
      (, ) show
      font9 setfont
      (4) show
      font4 setfont
      (,) show
      337.4632 716.88 moveto
      font4 setfont
      (October, 1986.) show
      319.8974 707.2102 moveto
      font4 setfont
      ([Tanenbaum et al. 1983]) show
      337.4632 698.1765 moveto
      font4 setfont
      (Tanenbaum, A.S., van Staveren, H., Keizer, E. G., Stevenson, J. W.,) show
      337.4632 689.1429 moveto
      font4 setfont
      (\042A Practical Tool Kit for Making Portable Compilers\042,) show
      337.4632 680.109 moveto
      font9 setfont
      (Communications of the ACM) show
      font4 setfont
      (, Vol. 26\0509\051,  September 1983, pp.) show
      337.4632 671.0753 moveto
      font4 setfont
      (654-660.) show
      319.8974 661.4054 moveto
      font4 setfont
      ([U.S. DOD 1983]) show
      337.4632 652.3718 moveto
      font4 setfont
      (U. S. Department of Defense, ) show
      font9 setfont
      (Reference Manual for the Ada) show
      337.4632 643.3382 moveto
      font9 setfont
      (Programming Language) show
      font4 setfont
      (, ANSI/MIL-STD 1815 A, January, 1983.) show
      319.8974 633.6684 moveto
      font4 setfont
      ([Xerox 1985]) show
      337.4632 624.6348 moveto
      font4 setfont
      (Xerox Corporation, ) show
      font9 setfont
      (Interlisp-D Reference Manual) show
      font4 setfont
      (, October, 1985.) show
      319.8974 614.9649 moveto
      grestore
   grestore
% end page 9
showpage

%%Trailer
%%Pages: 9

