%!PS-Adobe-2.0
%%Title: envel.mss
%%DocumentFonts: (atend)
%%Creator: Scott McFarling,WRL,4156173313 and Scribe 7(1700)
%%CreationDate: 19 June 1993 16:07
%%Pages: (atend)
%%EndComments
% PostScript Prelude for Scribe.
/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def
/ES {SV restore showpage} bind def
/SC {setrgbcolor} bind def
/FMTX matrix def
/RDF {WFT SLT 0.0 eq 
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT neg sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont} bind def
/SLT 0.0 def
/SI { /SLT exch cvr def RDF} bind def
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF} bind def
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF} bind def
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def
/MT /moveto load def
/XM {currentpoint exch pop moveto} bind def
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore} bind def
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore} bind def
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore} bind def
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore} bind def
/BX1 {grestore} bind def
/BX2 {setlinewidth 1 setgray stroke grestore} bind def
/PB {/PV save def newpath translate
    100.0 -100.0 scale pop /showpage {} def} bind def
/PE {PV restore} bind def
/GB {/PV save def newpath translate rotate
    div dup scale 100.0 -100.0 scale /showpage {} def} bind def
/GE {PV restore} bind def
/FB {dict dup /FontMapDict exch def begin} bind def
/FM {cvn exch cvn exch def} bind def
/FE {end /original-findfont /findfont load def  /findfont
   {dup FontMapDict exch known{FontMapDict exch get} if
   original-findfont} def} bind def
/BC {gsave moveto dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath clip} bind def
/EC /grestore load def
/SH /show load def
/MX {exch show 0.0 rmoveto} bind def
/W {0 32 4 -1 roll widthshow} bind def
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def
/RC {100.0 -100.0 scale
612.0 0.0 translate
-90.0 rotate
.01 -.01 scale} bind def
/URC {100.0 -100.0 scale
90.0 rotate
-612.0 0.0 translate
.01 -.01 scale} bind def
/RCC {100.0 -100.0 scale
0.0 -792.0 translate 90.0 rotate
.01 -.01 scale} bind def
/URCC {100.0 -100.0 scale
-90.0 rotate 0.0 792.0 translate
.01 -.01 scale} bind def
%%EndProlog
%%Page: 0 1
BS
0 SI
10 /Times-Roman AF
27378 4286 MT
(J U N E  1 9 9 3)SH
40 /Times-Bold AF
14400 12400 MT
(WRL)SH
14400 16120 MT
(Technical Note TN-36)SH
/Times-Roman SF
14400 33344 MT
(Combining)SH
14400 37164 MT
(Branch Predictors)SH
18 /Times-Italic AF
14400 45138 MT
(Scott McFarling)SH
1 SS 
7 9000 72007 PB 
%%BeginDocument: //usr/local/lib/ps/wrlnpage.psh
%!                      % magic number--identifies it as a PS file
% this is the WRL Note cover blurb for WRL Notes that are formatted with a
% binding margin for doublesided printing.

50 dict begin
-18 0 translate
/verylight 0.95 def
/lightgray 0.8 def
/darkgray  0.1 def
/inch {72 mul} def
 /gstring (g) def
/logo {gsave % create a 1 unit high digital logo
  /Helvetica-Bold findfont [.6 0 0 .75 0 0] makefont setfont
   -3.425 2 div 0 translate
  /box {
    newpath
    0 0 moveto
    .425 0 lineto
    0 1 rlineto
    0 1 lineto
    closepath darkgray setgray fill
    word exch 1 getinterval
    1 setgray
    dup stringwidth pop .425 exch sub 2 div .225 moveto
    dup gstring eq {0 .05 rmoveto} if
    show
    } def
  /boxstr {gsave
    /word exch def
    0 1 word length 1 sub {box .5 0 translate} for
    grestore} def

  (digital) boxstr
  grestore} def
-72 -72 translate
gsave 95 26 translate 22 dup scale logo grestore
141 34 moveto
/Times-Bold findfont [11.2 0 0 12 0 0] makefont setfont
(Western Research Laboratory  ) show
/Times-Roman findfont [11.2 0 0 12 0 0] makefont setfont
( 250 University Avenue  ) show
( Palo Alto, California 94301 USA) show

/plock {transform 0.5 add cvi exch 0.5 add cvi exch itransform} bind def
/mt {plock moveto} bind def
/lt {plock lineto} bind def
0.25 setlinewidth
139  24 mt 558  24 lt stroke
139  50 mt 558  50 lt stroke
 31  24 mt  31 738 lt 582 738 lt 582 24 lt stroke 
139 604 mt 558 604 lt stroke
139 714 mt 558 714 lt stroke
1 setlinewidth
133 133 mt 133 488 lt stroke
% currentscreen 3 -1 roll 2 div 3 1 roll setscreen
12 setlinewidth 0.5 setgray
 55  66 moveto 558  66 lineto stroke
 55 588 moveto 558 588 lineto stroke
end 

%%EndDocument
 PE ES
%%Page: 0 2
BS
0 SI
11 /Times-Roman AF
10200 7955 MT
(The Western Research Laboratory \050WRL\051 is)
107 W( a computer systems research group that)106 W
9000 9151 MT
(was founded)
94 W( by Digital Equipment Corporation in 1982. Our focus is computer science)95 W
9000 10347 MT
(research relevant to the design and application of high performance scientific computers.)46 W
9000 11543 MT
(We test our ideas)
89 W( by designing, building, and using real systems. The systems we build)90 W
9000 12739 MT
(are research prototypes; they are not intended to become products.)SH
10200 14912 MT
(There is)
32 W( a second research laboratory located in Palo Alto, the Systems Research Cen-)31 W
9000 16108 MT
(ter \050SRC\051. Other Digital research groups are located)
125 W( in Paris \050PRL\051 and in Cambridge,)126 W
9000 17304 MT
(Massachusetts \050CRL\051.)SH
10200 19477 MT
(Our research is directed towards mainstream high-performance computer systems. Our)18 W
9000 20673 MT
(prototypes are intended to)
53 W( foreshadow the future computing environments used by many)54 W
9000 21869 MT
(Digital customers. The)
77 W( long-term goal of WRL is to aid and accelerate the development)76 W
9000 23065 MT
(of high-performance uni- and)
126 W( multi-processors. The research projects within WRL will)127 W
9000 24261 MT
(address various aspects of high-performance computing.)SH
10200 26434 MT
(We believe that significant advances in computer systems do not come from)
5 W( any single)4 W
9000 27630 MT
(technological advance. Technologies, both hardware and software,)
79 W( do not all advance at)80 W
9000 28826 MT
(the same pace. System design is the art of composing systems which use)
119 W( each level of)118 W
9000 30022 MT
(technology in an appropriate balance.)
151 W( A major advance in overall system performance)152 W
9000 31218 MT
(will require reexamination of all aspects of the system.)SH
10200 33391 MT
(We do work in the design, fabrication and packaging of)
1 W( hardware; language processing)SH
9000 34587 MT
(and scaling issues)
173 W( in system software design; and the exploration of new applications)174 W
9000 35783 MT
(areas that are opening up with the advent of higher performance systems.)
58 W( Researchers at)57 W
9000 36979 MT
(WRL cooperate closely and move freely among the various levels of system design.)
29 W( This)30 W
9000 38175 MT
(allows us to explore a wide range of tradeoffs to meet system goals.)SH
10200 40126 MT
(We publish the results of our work in a)
222 W( variety of journals, conferences, research)221 W
9000 41322 MT
(reports, and technical notes.  This document)
155 W( is a technical note. We use this form for)156 W
9000 42518 MT
(rapid distribution of)
277 W( technical material. Usually this represents research in progress.)276 W
9000 43714 MT
(Research reports are)
76 W( normally accounts of completed research and may include material)77 W
9000 44910 MT
(from earlier technical notes.)SH
10200 46861 MT
(Research reports and technical)
154 W( notes may be ordered from us.  You may mail your)153 W
9000 48057 MT
(order to:)SH
11200 49709 MT
(Technical Report Distribution)SH
11200 50905 MT
(DEC Western Research Laboratory, WRL-2)SH
11200 52101 MT
(250 University Avenue)SH
11200 53297 MT
(Palo Alto, California 94301)
SH( USA)550 W
9000 54949 MT
(Reports and notes may)
203 W( also be ordered by electronic mail. Use one of the following)204 W
9000 56145 MT
(addresses:)SH
12600 58537 MT
(Digital E-net:)SH
/Courier SF
27000 XM
(DECWRL::WRL-TECHREPORTS)SH
/Times-Roman SF
12600 60929 MT
(Internet:)SH
/Courier SF
27000 XM
(WRL-Techreports@decwrl.dec.com)SH
/Times-Roman SF
12600 63321 MT
(UUCP:)SH
/Courier SF
27000 XM
(decwrl!wrl-techreports)SH
/Times-Roman SF
9000 65073 MT
(To obtain more details)
136 W( on ordering by electronic mail, send a message to one of these)135 W
9000 66269 MT
(addresses with the word ``)101 W
/Courier SF
(help)SH
/Times-Roman SF
('' in the Subject line; you will receive detailed instruc-)101 W
9000 67465 MT
(tions.)SH
ES
%%Page: 1 3
BS
0 SI
20 /Times-Bold AF
19511 19340 MT
(Combining Branch Predictors)SH
16 SS 
26823 25388 MT
(Scott McFarling)SH
14 SS 
29386 28990 MT
(June 1993)SH
1 SS 
7 9000 72007 PB 
%%BeginDocument: //usr/local/lib/ps/wrltpage.psh
%!                      % magic number--identifies it as a PS file
50 dict begin
/verylight 0.95 def
/lightgray 0.8 def
/darkgray  0.1 def
/inch {72 mul} def
 /gstring (g) def
/logo {gsave % create a 1 unit high digital logo
  /Helvetica-Bold findfont [.6 0 0 .75 0 0] makefont setfont
   -3.425 2 div 0 translate
  /box {
    newpath
    0 0 moveto
    .425 0 lineto
    0 1 rlineto
    0 1 lineto
    closepath darkgray setgray fill
    word exch 1 getinterval
    1 setgray
    dup stringwidth pop .425 exch sub 2 div .225 moveto
    dup gstring eq {0 .05 rmoveto} if
    show
    } def

  /boxstr {gsave
    /word exch def
    0 1 word length 1 sub {box .5 0 translate} for
    grestore} def

  (digital) boxstr
  grestore} def
0.0 inch -0.33 inch translate
gsave 22 dup scale logo grestore
0.7 inch 0.1 inch moveto

/Times-Bold findfont 12 scalefont setfont
(Western Research Laboratory  ) show
/Times-Roman findfont 12 scalefont setfont
( 250 University Avenue  ) show
( Palo Alto, California 94301 USA) show
end 

%%EndDocument
 PE ES
%%Page: i 4
BS
0 SI
15 /Times-Bold AF
29608 25445 MT
(Abstract)SH
12 SS 
13800 28165 MT
(One of the key factors)
40 W( determining computer performance is the degree to)39 W
12600 29560 MT
(which the)
340 W( implementation can take advantage of instruction-level paral-)341 W
12600 30955 MT
(lelism. Perhaps)
556 W( the most critical limit)
128 W( to this parallelism is the presence of)127 W
12600 32350 MT
(conditional branches that determine which instructions need to)
114 W( be executed)115 W
12600 33745 MT
(next. To)
1114 W( increase)
407 W( parallelism, several authors have suggested ways of)406 W
12600 35140 MT
(predicting the direction of conditional branches with hardware that uses)
66 W( the)67 W
12600 36535 MT
(history of previous branches.  The different proposed predictors take)
43 W( advan-)42 W
12600 37930 MT
(tage of different observed patterns in branch behavior.)
72 W( This)
446 W( paper presents)73 W
12600 39325 MT
(a method of combining the)
73 W( advantages of these different types of predictors.)72 W
12600 40720 MT
(The new method uses a history)
77 W( mechanism to keep track of which predictor)78 W
12600 42115 MT
(is most accurate for each branch so that the)
85 W( most accurate predictor can be)84 W
12600 43510 MT
(used. In)
386 W( addition, this)
43 W( paper describes a method of increasing the usefulness)44 W
12600 44905 MT
(of branch history by hashing it together with the branch)
61 W( address.  Together,)60 W
12600 46300 MT
(these new techniques are)
25 W( shown to outperform previously known approaches)26 W
12600 47695 MT
(both in terms of)
87 W( maximum prediction accuracy and the prediction accuracy)86 W
12600 49090 MT
(for a given predictor size.  Specifically,)
156 W( prediction accuracy reaches 98.1%)157 W
12600 50485 MT
(correct versus 97.1% correct for the)
224 W( most accurate previously known ap-)223 W
12600 51880 MT
(proach. Also,)
480 W( this new approach is typically at least a factor of)
90 W( two smaller)91 W
12600 53275 MT
(than other schemes for a given prediction accuracy.  Finally, this new ap-)183 W
12600 54670 MT
(proach allows predictors with a single level of history array access to outper-)33 W
12600 56065 MT
(form schemes with multiple)
78 W( levels of history for all but the largest predictor)77 W
12600 57460 MT
(sizes.)SH
/Times-Roman SF
20190 62160 MT
(Copyright)SH
/Symbol SF
25358 XM
(\323)SH
/Times-Roman SF
26906 XM
(1993 Digital Equipment Corporation)SH
10 SS 
32261 75600 MT
(i)SH
ES
%!PS-Adobe-2.0
%%Creator: dvips, version 5.4 (C) 1986-90 Radical Eye Software
%%Title: wrlbody.dvi
%%Pages: 20 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR}B /@letter{/vsize 10 N}B /@landscape{
/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{/vsize 15.5531 N
}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{statusdict
/manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0
]N /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0
]N df-tail}B /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N
/FontBBox FBB N string /base X array /BitMaps X /BuildChar{CharBuilder}N
/Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[
}B /E{pop nn dup definefont setfont}B /ch-image{ch-data dup type /stringtype
ne{ctr get /ctr ctr 1 add N}if}B /ch-width{ch-data dup length 5 sub get}B
/ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup length 3
sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data
dup length 1 sub get}B /ctr 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff
ch-height sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height
true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{
/cc X dup type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S
ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr
ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI
save N @rigin 0 0 moveto}B /eop{clear SI restore showpage userdict /eop-hook
known{eop-hook}if}B /@start{userdict /start-hook known{start-hook}if
/VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE S 1
string dup 0 3 index put cvn put}for}B /p /show load N /RMat[1 0 0 -1 0 0]N
/BDot 8 string N /v{/ruley X /rulex X V}B /V{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}B /a{moveto}B /delta 0 N /tail{
dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /l{p
-4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t
{p 4 w}B /w{0 rmoveto}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B
/eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: heavysplot.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto 100 setlinewidth stroke
 newpath -500 500 moveto 500 -500 lineto 100 setlinewidth stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath 100 setlinewidth stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 100 setlinewidth stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath 100 setlinewidth stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath 100 setlinewidth stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc 100 setlinewidth stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto 100 setlinewidth stroke
 newpath -500 0 moveto 500 0 lineto 100 setlinewidth stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto 100 setlinewidth stroke
 newpath -500 0 moveto 500 0 lineto 100 setlinewidth stroke
 newpath -500 -500 moveto 500 500 lineto 100 setlinewidth stroke
 newpath -500 500 moveto 500 -500 lineto 100 setlinewidth stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

/SetSym { /Symbols findfont exch scalefont setfont } def

/SetTxt { findfont exch scalefont setfont } def

/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { pop pop pop } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def

/Landscape {612 0 translate 90 rotate} def

/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
/polar{qs neg exch neg atan}def 

/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

/xya{exch 2 copy cos mul 3 1 roll sin mul}def

/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div N pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}B
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{/foo X[1 0 foo 1 0 0]
TransFont}B /ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0
0]TransFont}B /TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N @MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury
currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S
lineto S lineto closepath clip newpath moveto}N /endTexFig{end psf$SavedState
restore}N /@beginspecial{SDict begin /SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults}B /@setspecial{CLIP{newpath 0 0 moveto hs 0
rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}{initclip}ifelse ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}B /@endspecial{grestore
clear SpecialSave restore end}B /@defspecial{SDict begin}B /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}B /st{stroke SaveX SaveY moveto}B /fil{fill SaveX SaveY
moveto}B /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}B end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28
26 11 11 11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9
9 19 19 19 15 31 24 22 22 24 20 18 24 24 11 13 24 20 30 24
24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17
15 17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24
17 17 15 16 7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17
11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11
11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0
0 9 0 0 9 17 24 17 0 0 0 0 ] /Times-Roman 1000 524288 rf /Fb
2 111 df<70F8F8F87005057C840E>58 D<3C07C0461860472030874038878038870038870038
0E00700E00700E00700E00701C00E01C00E01C01C01C01C13801C2380382380382380184700188
3000F018157E941D>110 D E /Fc 2 111 df<07FE03F800E001C000E0010000E0020000E00800
01C0100001C0200001C0800001C1000003830000038F00000393800003A380000781C0000701C0
000700E0000700E0000E0070000E0070000E0038000E0038001C003C00FF80FF001D177F961E>
75 D<383C0044C6004702004602008E06000C06000C06000C0C00180C00180C40181840181880
300880300F00120E7F8D15>110 D E /Fd 2 42 df<00200040008001000300060004000C000C
00180018003000300030007000600060006000E000E000E000E000E000E000E000E000E000E000
E000E000E000E0006000600060007000300030003000180018000C000C00040006000300010000
80004000200B327CA413>40 D<800040002000100018000C000400060006000300030001800180
018001C000C000C000C000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
C000C000C001C0018001800180030003000600060004000C00180010002000400080000B327DA4
13>I E /Fe 3 104 df<C0000000F00000003C0000000F00000003C0000000F00000003C000000
0F80000003E0000000780000001E0000000780000001E0000000780000001C00000078000001E0
0000078000001E00000078000003E000000F8000003C000000F0000003C000000F0000003C0000
0070000000C0000000000000000000000000000000000000000000000000000000000000000000
00007FFFFFF8FFFFFFFC1E277C9F27>21 D<000F0038007000E001C001C001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C0038007001E00F0001E000700038001C001C0
01C001C001C001C001C001C001C001C001C001C001C001C001C001C001C000E000700038000F10
317CA419>102 D<F0001E000700038001C001C001C001C001C001C001C001C001C001C001C001
C001C001C001C001C001C000E000700038000F0038007000E001C001C001C001C001C001C001C0
01C001C001C001C001C001C001C001C001C001C0038007001E00F00010317CA419>I
E /Ff [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 12 17 21 25 25 41 39 17 17 17 25 34 12 17 12 14
25 25 25 25 25 25 25 25 25 25 17 17 34 34 34 25 46 30 30 33
36 30 30 36 36 17 22 33 28 41 33 36 30 36 30 25 28 36 30 41
30 28 28 19 14 19 21 25 17 25 25 22 25 22 14 25 25 14 14 22
14 36 25 25 25 25 19 19 14 25 22 33 22 22 19 20 14 20 27 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 19 25 25 8 25 25 25 25 11 28 25 17 17 25 25 0 25 25 25
12 0 26 17 17 28 28 25 44 50 0 25 0 17 17 17 17 17 17 17 17
0 17 17 0 17 17 17 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0
14 0 0 0 0 28 36 47 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 33 25
0 0 0 0 ] /Times-Italic 1000 786432 rf /Fg [ 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 20
25 25 41 39 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25
25 25 25 14 14 28 28 28 22 46 36 33 33 36 30 28 36 36 17 19
36 30 44 36 36 28 36 33 28 30 36 36 47 36 36 30 17 14 17 23
25 17 22 25 22 25 22 17 25 25 14 14 25 14 39 25 25 25 25 17
19 14 25 25 36 25 25 22 24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25
25 25 9 22 25 17 17 28 28 0 25 25 25 12 0 23 17 17 22 22 25
50 50 0 22 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 30 36 44 15
0 0 0 0 0 33 0 0 0 14 0 0 14 25 36 25 0 0 0 0 ] /Times-Roman
1000 786432 rf /Fh [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 18 23 39 35 35 71 59 23 23 23 35
40 18 23 18 20 35 35 35 35 35 35 35 35 35 35 23 23 40 40 40
35 66 51 47 51 51 47 43 55 55 27 35 55 47 67 51 55 43 55 51
39 47 51 51 71 51 51 47 23 20 23 41 35 23 35 39 31 39 31 23
35 39 20 23 39 20 59 39 35 39 39 31 27 23 39 35 51 35 35 31
28 16 28 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 23 35 35 12 35 35 35 35 20 35 35 23 23
39 39 0 35 35 35 18 0 38 25 23 35 35 35 71 71 0 35 0 23 23
23 23 23 23 23 23 0 23 23 0 23 23 23 71 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 71 0 21 0 0 0 0 47 55 71 23 0 0 0 0 0 51 0 0 0
20 0 0 20 35 51 39 0 0 0 0 ] /Times-Bold 1000 1114112 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin @letter /letter where {pop letter} if
%%EndSetup
%%Page: 1 5
bop 94 89 a Fh(1)71 b(Intr)o(oduction)94 205 y Fg(In)11 b(the)h(search)h(for)
e(ever)h(higher)f(levels)h(of)g(performance,)f(recent)h(machine)g(designs)g
(have)g(made)g(use)94 270 y(of)j(increasing)g(degrees)g(of)g(instruction)g
(level)g(parallelism.)26 b(For)15 b(example,)h(both)f(superscalar)h(and)94
336 y(superpipelining)9 b(techniques)h(are)h(becoming)f(increasingly)f
(popular)m(.)18 b(W)n(ith)10 b(both)g(these)g(techniques,)94
401 y(branch)f(instructions)f(are)h(increasingly)g(important)f(in)h
(determining)f(overall)h(machine)g(performance.)94 466 y(This)20
b(trend)f(is)g(likely)g(to)h(continue)f(as)h(the)f(use)h(of)f(superscalar)g
(and)h(superpipelining)e(increases)94 531 y(especially)12 b(if)g(speculative)
h(execution)f(becomes)h(popular)m(.)167 596 y(Moreover)n(,)e(some)f(of)g(the)
g(compiler)g(assisted)h(techniques)g(for)e(minimizing)g(branch)h(cost)h(in)f
(early)94 661 y(RISC)k(designs)h(are)f(becoming)f(less)i(appropriate.)23
b(In)14 b(particular)n(,)g(delayed)g(branches)h(are)f(decreas-)94
727 y(ingly)9 b(ef)o(fective)g(as)h(the)g(number)f(of)g(delay)h(slots)g(to)g
(\256ll)f(increases.)18 b(Also,)11 b(multiple)e(implementations)94
792 y(of)i(an)h(architecture)e(with)i(dif)o(ferent)e(superscalar)i(or)f
(superpipelining)g(choices)h(make)f(the)h(use)g(of)f(de-)94
857 y(lay)16 b(slots)g(problematic[Sit93)n(].)28 b(T)m(ogether)n(,)17
b(these)f(trends)g(increase)g(the)g(importance)f(of)g(hardware)94
922 y(methods)d(of)g(reducing)g(branch)g(cost.)167 987 y(The)g(branch)f
(performance)f(problem)h(can)g(be)h(divided)f(into)g(two)g(subproblems.)18
b(First,)11 b(a)h(predic-)94 1053 y(tion)e(of)g(the)g(branch)g(direction)g
(is)h(needed.)18 b(Second,)11 b(for)e(taken)i(branches,)g(the)f(instructions)
h(from)e(the)94 1118 y(branch)j(tar)o(get)h(must)f(be)h(available)g(for)f
(execution)h(with)f(minimal)g(delay)m(.)19 b(One)13 b(way)g(to)g(provide)f
(the)94 1183 y(tar)o(get)i(instructions)g(quickly)h(is)g(to)f(use)h(a)g
(Branch)g(T)m(ar)o(get)f(Buf)o(fer)n(,)h(which)g(is)g(a)g(special)g
(instruction)94 1248 y(cache)i(designed)g(to)g(store)g(the)g(tar)o(get)g
(instructions.)31 b(This)18 b(paper)f(focuses)g(on)g(predicting)f(branch)94
1313 y(directions.)h(The)10 b(alternatives)g(available)f(for)g(providing)g
(tar)o(get)g(instructions)h(will)f(not)g(be)h(discussed.)94
1378 y(The)j(reader)f(is)g(referred)f(to)h(Lee)i(and)e(Smith[LS84)o(])g(for)f
(more)h(information.)167 1444 y(Hardware)k(branch)f(prediction)h(strategies)g
(have)h(been)f(studied)g(extensively)m(.)30 b(The)17 b(most)f(well)94
1509 y(known)c(technique,)g(referred)g(to)g(here)g(as)h Ff(bimodal)f(branch)h
(pr)n(ediction)p Fg(,)f(makes)h(a)g(prediction)e(based)94 1574
y(on)17 b(the)h(direction)e(the)i(branch)f(went)g(the)h(last)g(few)f(times)g
(it)h(was)g(executed.)34 b(More)17 b(recent)g(work)94 1639
y(has)k(shown)g(that)g(signi\256cantly)f(more)g(accurate)h(predictions)f(can)
h(be)g(made)g(by)f(utilizing)g(more)94 1704 y(branch)12 b(history)m(.)19
b(One)12 b(method,)h(considers)g(the)g(history)f(of)g(each)h(branch)g
(independently)f(and)g(takes)94 1770 y(advantage)17 b(of)g(repetitive)g
(patterns.)33 b(Since)18 b(the)f(histories)g(are)h(independent,)h(we)e(will)g
(refer)g(to)g(it)94 1835 y(as)j Ff(local)e(branch)i(pr)n(ediction)p
Fg(.)39 b(Another)18 b(technique)h(uses)h(the)g(combined)e(history)h(of)g
(all)g(recent)94 1900 y(branches)h(in)h(making)f(a)h(prediction.)42
b(This)21 b(technique)f(will)h(be)f(referred)g(to)g(as)h Ff(global)f
Fg(branch)94 1965 y(prediction.)27 b(Each)17 b(of)e(these)i(dif)o(ferent)d
(branch)i(prediction)e(strategies)i(have)g(distinct)g(advantages.)94
2030 y(The)j(bimodal)g(technique)f(works)h(well)g(when)g(each)g(branch)g(is)g
(strongly)g(biased)g(in)g(a)g(particular)94 2096 y(direction.)e(The)11
b(local)g(technique)f(works)h(well)f(for)g(branches)h(with)f(simple)h
(repetitive)f(patterns.)17 b(The)94 2161 y(global)10 b(technique)h(works)g
(particularly)f(well)h(when)g(the)g(direction)g(taken)g(by)g(sequentially)g
(executed)94 2226 y(branches)h(is)h(highly)f(correlated.)167
2291 y(This)j(paper)f(introduces)h(a)f(new)h(technique)f(that)h(allows)f(the)
h(distinct)f(advantages)h(of)f(dif)o(ferent)94 2356 y(branch)8
b(predictors)f(to)h(be)h(combined.)16 b(The)9 b(technique)f(uses)h(multiple)e
(branch)h(predictors)g(and)g(selects)94 2421 y(the)j(one)h(which)g(is)g
(performing)e(best)i(for)e(each)j(branch.)k(This)c(approach)e(is)h(shown)g
(to)f(provide)g(more)94 2487 y(accurate)19 b(predictions)f(than)h(any)g(one)g
(predictor)f(alone.)38 b(This)19 b(paper)g(also)g(shows)h(a)f(method)f(of)94
2552 y(increasing)12 b(the)g(utility)g(of)g(branch)g(history)g(by)g(hashing)g
(it)g(together)g(with)g(the)g(branch)g(address.)167 2617 y(The)j(or)o
(ganization)f(of)g(this)h(paper)g(is)g(as)g(follows.)25 b(First,)15
b(Section)f(2)h(discusses)h(previous)e(work)94 2682 y(in)e(branch)h
(prediction.)18 b(Later)13 b(sections)h(describe)f(in)f(detail)h(the)f
(prediction)g(methods)h(found)f(useful)981 2866 y(1)p eop
%%Page: 2 6
bop 94 83 a Fg(in)14 b(combination)f(and)h(will)g(evaluate)g(them)g
(quantitatively)f(to)h(provide)f(a)h(basis)h(for)e(evaluating)h(the)94
148 y(new)k(techniques.)36 b(Sections)18 b(3,)j(4,)f(and)e(5)g(review)g(the)g
(bimodal,)i(local,)g(and)e(global)g(predictors.)94 213 y(Section)f(6)h
(discusses)h(predictors)e(indexed)g(by)h(both)f(global)g(history)g(and)h
(branch)f(address)h(infor)o(-)94 278 y(mation.)i(Section)12
b(7)i(discusses)g(hashing)f(global)g(history)g(and)g(branch)g(address)g
(information)f(before)94 343 y(indexing)d(the)g(predictor)m(.)17
b(Section)8 b(8)i(describes)g(the)f(technique)g(for)g(combining)g(multiple)f
(predictors.)94 409 y(Section)15 b(9)h(gives)g(some)g(concluding)f(remarks.)
28 b(Section)15 b(10)h(gives)g(some)g(suggestions)g(for)f(future)94
474 y(work.)i(Finally)m(,)12 b(Appendix)f(A)h(presents)g(some)g(additional)f
(comparisons)h(to)f(variations)h(of)f(the)h(local)94 539 y(prediction)f
(method.)94 716 y Fh(2)71 b(Related)18 b(W)l(ork)94 832 y Fg(Branch)d
(performance)g(issues)i(have)e(been)h(studied)g(extensively)m(.)28
b(J.)16 b(E.)h(Smith[Smi81)n(])e(presented)94 898 y(several)g(hardware)f
(schemes)i(for)e(predicting)g(branch)h(directions)g(including)f(the)h
(bimodal)f(scheme)94 963 y(that)h(will)g(be)h(described)f(in)h(Section)f(3.)
27 b(Lee)16 b(and)g(A.)g(J.)g(Smith[LS84)o(])f(evaluated)h(several)f(branch)
94 1028 y(prediction)h(schemes.)34 b(In)17 b(addition,)h(they)f(showed)g(how)
g(branch)g(tar)o(get)g(buf)o(fers)g(can)g(be)g(used)h(to)94
1093 y(reduce)12 b(the)h(pipeline)f(delays)h(normally)f(encountered)g(when)h
(branches)g(are)f(taken.)20 b(McFarling)12 b(and)94 1158 y(Hennessy[MH86])f
(compared)f(various)h(hardware)f(and)h(software)f(approaches)h(to)g(reducing)
f(branch)94 1224 y(cost)17 b(including)f(using)h(pro\256le)g(information.)30
b(Hwu,)19 b(Conte,)f(and)f(Chang[HCC89])g(performed)f(a)94
1289 y(similar)9 b(study)g(for)g(a)h(wider)f(range)g(of)g(pipeline)g
(lengths.)18 b(Fisher)9 b(and)g(Freudenber)o(ger[FF92)n(])g(studied)94
1354 y(the)15 b(stability)g(of)g(pro\256le)f(information)g(across)i(separate)
f(runs)h(of)e(a)i(program.)26 b(Both)15 b(the)h(local)f(and)94
1419 y(global)e(branch)f(prediction)h(schemes)h(were)f(described)g(by)g(Y)-5
b(eh)13 b(and)h(Patt[YP92)n(,)g(YP93)o(].)21 b(Pan,)14 b(So,)94
1484 y(and)9 b(Rahmeh[PSR92)o(])g(described)g(how)g(both)f(global)h(history)g
(and)g(branch)g(address)g(information)f(can)94 1549 y(be)15
b(used)h(in)f(one)g(predictor)m(.)26 b(Ball)15 b(and)g(Larus[BL93])g
(describe)h(several)f(techniques)g(for)f(guessing)94 1615 y(the)i(most)h
(common)f(branches)h(directions)f(at)h(compile)g(time)f(using)h(static)g
(information.)29 b(Several)94 1680 y(studies[W)l(al91,)19 b(JW89)q(,)h(L)l
(W93])f(have)h(looked)f(at)g(the)g(implications)g(of)g(branches)h(on)f
(available)94 1745 y(instruction)10 b(level)i(parallelism.)17
b(These)c(studies)e(show)h(that)f(branch)g(prediction)g(errors)f(are)i(a)f
(critical)94 1810 y(factor)g(determining)h(the)g(amount)g(of)g(local)g
(parallelism)g(that)g(can)h(be)f(exploited.)94 1987 y Fh(3)71
b(Bimodal)17 b(Branch)i(Pr)o(ediction)94 2104 y Fg(The)f(behavior)f(of)g
(typical)g(branches)h(is)g(far)f(from)g(random.)33 b(Most)18
b(branches)g(are)g(either)f(usually)94 2169 y(taken)h(or)f(usually)h(not)g
(taken.)35 b(Bimodal)17 b(branch)h(prediction)f(takes)h(advantage)g(of)f
(this)h(bimodal)94 2234 y(distribution)11 b(of)h(branch)g(behavior)f(and)h
(attempts)h(to)f(distinguish)g(usually)g(taken)g(from)f(usually)i(not-)94
2299 y(taken)8 b(branches.)17 b(There)9 b(are)f(a)h(number)e(of)h(ways)h
(this)f(can)h(be)f(done.)17 b(Perhaps)8 b(the)h(simplest)f(approach)94
2364 y(is)i(shown)h(in)f(Figure)g(1.)18 b(The)11 b(\256gure)e(shows)i(a)g
(table)f(of)g(counters)h(indexed)f(by)g(the)h(low)f(order)f(address)94
2430 y(bits)17 b(in)g(the)h(program)e(counter)m(.)33 b(Each)18
b(counter)f(is)g(two)g(bits)h(long.)33 b(For)16 b(each)i(taken)f(branch,)i
(the)94 2495 y(appropriate)c(counter)g(is)i(incremented.)29
b(Likewise)17 b(for)e(each)h(not-taken)g(branch,)h(the)f(appropriate)94
2560 y(counter)d(is)h(decremented.)21 b(In)13 b(addition,)g(the)h(counter)f
(is)h(saturating.)21 b(In)13 b(other)g(words,)h(the)f(counter)94
2625 y(is)18 b(not)g(decremented)f(past)h(zero,)i(nor)d(is)h(it)g
(incremented)f(past)i(three.)34 b(The)19 b(most)f(signi\256cant)f(bit)94
2690 y(determines)f(the)g(prediction.)29 b(Repeatedly)16 b(taken)g(branches)g
(will)g(be)g(predicted)g(to)g(be)g(taken,)i(and)981 2866 y(2)p
eop
%%Page: 3 7
bop 427 41 a
 17892639 12695880 13748387 31706808 31641026 44402688 startTexFig
427 41 a
%%BeginDocument: bp.idraw

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.774193 0 0 0.774193 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 389.676 824.5 ] concat
[
(Taken)
] Text
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 123 ] concat
376 523 420 715 Rect
End

Begin %I Pict
[ 1 0 0 1 64.342 0 ] concat

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 113 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 250.5 666.5 ] concat
[
(PC)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84 113 ] concat
273 533
273 514
399 514
399 530
4 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 460.5 866.5 ] concat
[
(Counts)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 534.242 824.5 ] concat
[
(predictTaken)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84.25 116 ] concat
349 703 372 703 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 155.389 116 ] concat
349 703 372 703 Line
End

End %I eop

showpage


end
%%EndDocument
 427 41 a
 endTexFig
613 952 a Fg(Figure)12 b(1:)18 b(Bimodal)12 b(Predictor)f(Structure)94
1087 y(repeatedly)i(not-taken)g(branches)h(will)f(be)h(predicted)g(to)f(be)h
(not-taken.)22 b(By)14 b(using)g(a)g(2-bit)f(counter)n(,)94
1152 y(the)e(predictor)g(can)g(tolerate)g(a)h(branch)f(going)g(an)h(unusual)f
(direction)g(one)g(time)h(and)f(keep)h(predicting)94 1218 y(the)g(usual)h
(branch)f(direction.)167 1283 y(For)g(lar)o(ge)h(counter)g(tables,)g(each)h
(branch)f(will)f(map)h(to)g(a)g(unique)g(counter)m(.)20 b(For)12
b(smaller)h(tables,)94 1348 y(multiple)g(branches)i(may)f(share)g(the)h(same)
f(counter)n(,)h(resulting)f(in)g(degraded)g(prediction)g(accuracy)m(.)94
1413 y(One)g(alternate)g(implementation)f(is)i(to)f(store)g(a)g(tag)h(with)e
(each)i(counter)f(and)g(use)h(a)f(set-associative)94 1478 y(lookup)e(to)h
(match)g(counters)f(with)h(branches.)20 b(For)12 b(a)h(\256xed)g(number)f(of)
h(counters,)g(a)g(set-associative)94 1544 y(table)j(has)i(better)e
(performance.)31 b(However)n(,)18 b(once)f(the)f(size)i(of)e(tags)h(is)g
(accounted)g(for)n(,)h(a)f(simple)94 1609 y(array)d(of)g(counters)g(often)h
(has)g(better)f(performance)f(for)h(a)h(given)f(predictor)g(size.)26
b(This)15 b(would)f(not)94 1674 y(be)e(the)h(case)g(if)f(the)g(tags)h(were)f
(already)g(needed)g(to)h(support)f(a)g(branch)g(tar)o(get)g(buf)o(fer)m(.)167
1739 y(T)m(o)g(compare)f(various)g(branch)h(prediction)e(strategies,)j(we)f
(will)f(use)h(the)g(SPEC'89)f(benchmarks)94 1804 y([SPE90)o(])16
b(shown)h(in)f(Figure)g(2.)31 b(These)17 b(benchmarks)g(include)f(a)g(mix)h
(of)f(symbolic)g(and)h(numeric)94 1870 y(applications.)i(However)n(,)13
b(to)f(limit)g(simulation)g(time,)h(only)f(the)h(\256rst)f(10)h(million)f
(instructions)g(from)94 1935 y(each)18 b(benchmark)f(was)h(simulated.)35
b(Execution)18 b(traces)g(were)g(obtained)f(on)h(a)g(DECstation)g(5000)94
2000 y(using)13 b(the)g(pixie)f(tracing)g(facility[Kil86)o(,)h(Smi91)o(].)20
b(Finally)m(,)12 b(all)h(counters)g(are)g(initially)f(set)h(as)h(if)e(all)94
2065 y(previous)g(branches)g(were)g(taken.)167 2130 y(Figure)g(3)i(shows)g
(the)f(average)g(conditional)g(branch)f(prediction)h(accuracy)g(of)g(bimodal)
g(predic-)94 2195 y(tion.)k(The)9 b(number)f(plotted)h(is)g(the)g(average)f
(accuracy)h(across)h(the)f(SPEC'89)f(benchmarks)h(with)f(each)94
2261 y(benchmark)16 b(simulated)g(for)g(10)h(million)f(instructions.)31
b(The)17 b(accuracy)g(increases)h(with)e(predictor)94 2326
y(size)g(since)g(fewer)g(branches)g(share)g(counters)f(as)i(the)e(number)g
(of)h(counters)f(increases.)30 b(However)n(,)94 2391 y(prediction)11
b(accuracy)i(saturates)f(at)h(93.5\045)g(correct)f(once)g(each)h(branch)f
(maps)h(to)f(a)h(unique)f(counter)m(.)94 2456 y(A)g(set-associative)h
(predictor)e(would)h(saturate)h(at)f(the)h(same)f(accuracy)m(.)981
2866 y(3)p eop
%%Page: 4 8
bop 444 264 1100 2 v 443 325 2 61 v 469 307 a Fg(benchmark)p
714 325 V 328 w(description)p 1543 325 V 444 326 1100 2 v 443
386 2 61 v 469 368 a(doduc)p 714 386 V 149 w(Monte)12 b(Carlo)h(simulation)p
1543 386 V 443 447 V 469 429 a(eqntott)p 714 447 V 132 w(conversion)f(from)f
(equation)h(to)g(truth)g(table)p 1543 447 V 443 507 V 469 489
a(espress)p 714 507 V 128 w(minimization)f(of)h(boolean)g(functions)p
1543 507 V 443 567 V 469 549 a(fpppp)p 714 567 V 154 w(quantum)g(chemistry)g
(calculations)p 1543 567 V 443 627 V 469 609 a(gcc)p 714 627
V 202 w(GNU)g(C)h(compiler)p 1543 627 V 443 687 V 469 669 a(li)p
714 687 V 243 w(lisp)f(interpreter)p 1543 687 V 443 747 V 469
729 a(mat300)p 714 747 V 121 w(matrix)f(multiplication)p 1543
747 V 443 808 V 469 790 a(nasa7)p 714 808 V 158 w(NASA)h(Ames)h(FOR)m(TRAN)g
(Kernels)p 1543 808 V 443 868 V 469 850 a(spice)p 714 868 V
169 w(circuit)f(simulation)p 1543 868 V 443 928 V 469 910 a(tomcatv)p
714 928 V 110 w(vectorized)g(mesh)g(generation)p 1543 928 V
444 930 1100 2 v 497 1063 a(Figure)g(2:)17 b(SPEC)c(Benchmarks)f(Used)h(for)f
(Evaluation)321 2402 y @beginspecial @setspecial
%%BeginDocument: bp.psf
-36.000000 -54.000000 translate
6 SetSym
<02> 278.902 156.706 SY
72 99.2647 S9
[] 0.600000 SL
283.902 156.706 312.248 156.706 
0.003000 G9 L9 0.000000 G9
<02> 317.248 156.706 SY
10 /Helvetica SetTxt
( bimodal) 0 325.752 153.706 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72 99.2647 S9
97.8627 137.224 M9
123.725 157.608 M9
149.588 169.956 M9
175.451 179.632 M9
201.314 182.577 M9
227.176 187.043 M9
253.039 187.528 M9
278.902 187.806 M9
304.765 189.068 M9
330.627 189.114 M9
356.49 189.116 M9
0.003000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.1765 TXC
(89) 0 67 90.1765 TXR
(|) -90 72 114.353 TXC
(90) 0 67 111.353 TXR
(|) -90 72 135.529 TXC
(91) 0 67 132.529 TXR
(|) -90 72 156.706 TXC
(92) 0 67 153.706 TXR
(|) -90 72 177.882 TXC
(93) 0 67 174.882 TXR
(|) -90 72 199.059 TXC
(94) 0 67 196.059 TXR
(|) -90 72 220.235 TXC
(95) 0 67 217.235 TXR
(|) -90 72 241.412 TXC
(96) 0 67 238.412 TXR
(|) -90 72 262.588 TXC
(97) 0 67 259.588 TXR
(|) -90 72 283.765 TXC
(98) 0 67 280.765 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<02> 72 99.2647 SY
<02> 97.8627 137.224 SY
<02> 123.725 157.608 SY
<02> 149.588 169.956 SY
<02> 175.451 179.632 SY
<02> 201.314 182.577 SY
<02> 227.176 187.043 SY
<02> 253.039 187.528 SY
<02> 278.902 187.806 SY
<02> 304.765 189.068 SY
<02> 330.627 189.114 SY
<02> 356.49 189.116 SY
initclip 
%%EndDocument
 @endspecial 577 2563 a(Figure)g(3:)18 b(Bimodal)12 b(Predictor)f
(Performance)981 2866 y(4)p eop
%%Page: 5 9
bop 94 89 a Fh(4)71 b(Local)18 b(Branch)h(Pr)o(ediction)94
205 y Fg(One)f(way)g(to)f(improve)h(on)f(bimodal)h(prediction)f(is)h(to)g
(recognize)f(that)h(many)g(branches)g(execute)94 270 y(repetitive)f
(patterns.)35 b(Perhaps)17 b(the)h(most)g(common)f(example)h(of)g(this)g
(behavior)f(is)h(loop)g(control)94 336 y(branches.)g(Consider)13
b(the)f(following)f(example:)762 455 y(for)h(\(i=1;)g(i<=4;)g(i++\))g
Fe(f)g(g)167 574 y Fg(If)j(the)h(loop)f(test)h(is)g(done)g(at)f(the)h(end)g
(of)f(the)h(body)m(,)g(the)g(corresponding)f(branch)g(will)h(execute)94
639 y(the)c(pattern)h Fd(\()p Fg(1110)p Fd(\))457 621 y Fc(n)480
639 y Fg(,)g(where)f(1)h(and)g(0)g(represent)f(taken)h(and)f(not)h(taken)f
(respectively)m(,)h(and)g Fb(n)g Fg(is)g(the)94 704 y(number)i(of)h(times)g
(the)g(loop)g(is)g(executed.)30 b(Clearly)m(,)17 b(if)e(we)i(knew)f(the)g
(direction)f(this)h(branch)g(had)94 769 y(gone)g(on)g(the)h(previous)f(three)
g(executions,)i(then)f(we)f(could)g(always)h(be)g(able)f(to)h(predict)f(the)g
(next)94 835 y(branch)c(direction.)167 900 y(A)17 b(branch)f(prediction)g
(method)g(close)h(to)g(one)f(developed)h(by)g(Y)-5 b(eh)16
b(and)h(Patt[YP92)o(])f(that)h(can)94 965 y(take)g(advantage)g(of)g(this)g
(type)g(of)g(pattern)f(is)i(shown)f(in)g(Figure)f(4.)33 b(The)18
b(\256gure)e(shows)i(a)f(branch)94 1030 y(predictor)11 b(that)i(uses)g(two)g
(tables.)19 b(The)13 b(\256rst)f(table)h(records)f(the)h(history)f(of)g
(recent)g(branches.)20 b(Many)94 1095 y(dif)o(ferent)14 b(or)o(ganizations)h
(are)g(possible)h(for)f(this)g(table.)28 b(In)15 b(this)h(paper)n(,)g(we)g
(will)f(assume)h(that)f(it)h(is)94 1160 y(simply)11 b(an)h(array)e(indexed)i
(by)f(the)g(low-order)f(bits)i(of)f(the)g(branch)h(address.)18
b(Y)-5 b(eh)12 b(and)f(Patt)g(assumed)94 1226 y(a)k(set-associative)h(branch)
f(history)f(table.)27 b(As)16 b(with)f(bimodal)f(prediction,)i(a)f(simple)g
(array)g(avoids)94 1291 y(the)e(need)h(to)f(store)h(tags)g(but)f(does)h(suf)o
(fer)f(from)f(degraded)h(performance)g(when)g(multiple)g(branches)94
1356 y(map)f(to)g(the)h(same)f(table)h(entry)m(,)f(especially)g(with)g
(smaller)g(table)h(sizes.)167 1421 y(Each)d(history)f(table)h(entry)f
(records)g(the)g(direction)g(taken)g(by)h(the)f(most)h(recent)f
Fb(n)h Fg(branches)f(whose)94 1486 y(addresses)14 b(map)g(to)g(this)g(entry)m
(,)f(where)h Fb(n)g Fg(is)g(the)g(length)f(of)g(the)h(entry)f(in)h(bits.)22
b(The)15 b(second)f(table)g(is)94 1552 y(an)f(array)f(of)g(2-bit)h(counters)f
(identical)h(to)g(those)g(used)g(for)f(bimodal)g(branch)h(prediction.)19
b(However)n(,)94 1617 y(here)f(they)g(are)g(indexed)g(by)g(the)g(branch)g
(history)f(stored)h(in)g(the)h(\256rst)e(table.)36 b(In)18
b(this)g(paper)n(,)i(this)94 1682 y(approach)15 b(is)g(referred)f(to)i(as)f
Ff(local)h Fg(branch)e(prediction)h(because)h(the)f(history)g(used)h(is)f
(local)h(to)f(the)94 1747 y(current)d(branch.)19 b(In)13 b(Y)-5
b(eh)13 b(and)g(Patt')m(s)f(nomenclature)g(this)h(method)g(is)g(referred)e
(to)i(as)h(a)f Ff(per)o(-addr)n(ess)94 1812 y Fg(scheme.)167
1878 y(Consider)d(again)f(the)h(simple)g(loop)f(example)h(above.)17
b(Let')m(s)11 b(assume)f(that)g(this)g(is)g(the)g(only)f(branch)94
1943 y(in)16 b(the)g(program.)29 b(In)16 b(this)g(case,)j(there)c(will)h(be)h
(a)f(history)g(table)g(entry)g(that)g(stores)g(the)h(history)e(of)94
2008 y(this)e(branch)g(only)g(and)h(the)f(counter)g(table)g(will)g(re\257ect)
g(solely)h(the)f(behavior)g(of)g(this)g(branch.)21 b(W)n(ith)94
2073 y(3)e(bits)g(of)f(history)g(and)h(2)562 2055 y Fa(3)600
2073 y Fg(counters,)i(the)d(local)h(branch)g(predictor)e(will)i(be)g(able)g
(determine)f(the)94 2138 y(current)d(iteration)g(and)i(always)f(make)g(the)h
(correct)e(prediction)h(after)f(some)i(initial)e(settling)h(of)g(the)94
2203 y(counter)11 b(values.)18 b(If)10 b(there)h(are)h(more)e(branches)i(in)f
(the)g(program,)g(a)g(local)h(predictor)e(can)h(suf)o(fer)g(from)94
2269 y(two)j(kinds)g(of)g(contention.)24 b(First,)15 b(the)f(branch)h
(history)e(may)i(re\257ect)f(a)g(mix)g(of)g(histories)h(of)f(all)g(the)94
2334 y(branches)c(that)g(map)f(to)h(each)g(history)g(entry)m(.)17
b(Second,)10 b(since)h(there)e(is)h(only)g(one)g(counter)f(array)h(for)f(all)
94 2399 y(branches,)15 b(there)f(may)g(be)g(con\257ict)f(between)h(patterns.)
24 b(For)13 b(example,)i(if)f(there)f(is)i(another)e(branch)94
2464 y(that)c(typically)f(executes)i(the)f(pattern)g Fd(\()p
Fg(0110)p Fd(\))898 2446 y Fc(n)930 2464 y Fg(instead)g(of)g
Fd(\()p Fg(1110)p Fd(\))1269 2446 y Fc(n)1292 2464 y Fg(,)h(there)f(will)g
(be)g(contention)g(when)94 2529 y(the)i(branch)f(history)h(is)g(\(110\).)17
b(However)n(,)12 b(with)e(4)i(bits)f(of)f(history)h(and)g(2)1378
2511 y Fa(4)1408 2529 y Fg(counters,)g(this)g(contention)94
2595 y(can)i(be)h(avoided.)20 b(Note)13 b(however)n(,)h(that)f(if)g(the)g
(\256rst)g(pattern)f(is)i(executed)f(a)h(lar)o(ge)f(number)f(of)h(times)94
2660 y(followed)f(by)g(a)h(lar)o(ge)f(number)g(of)g(executions)h(of)f(the)h
(second)g(pattern,)f(then)h(only)f(3)h(bits)f(of)g(history)94
2725 y(are)g(needed)h(since)f(the)h(counters)f(dynamically)g(adjust)g(to)g
(the)h(more)e(recent)i(patterns.)981 2866 y(5)p eop
%%Page: 6 10
bop 269 41 a
 22892052 12695880 7630684 27496775 30522736 40192655 startTexFig
269 41 a
%%BeginDocument: pag.idraw

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.774193 0 0 0.774193 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -36.0001 41.0002 ] concat
376 523 420 715 Rect
End

Begin %I Pict
[ 1 0 0 1 -55.6581 -81.9998 ] concat

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 113 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 250.5 666.5 ] concat
[
(PC)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -36.0001 31.0002 ] concat
273 533
273 514
399 514
399 530
4 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 438.5 783.649 ] concat
[
(Counts)
] Text
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 61.9999 41.0002 ] concat
376 523 420 715 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 338.5 783.649 ] concat
[
(History)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.25 0 0 0.25 355.5 451 ] concat
114 537
226 537
226 375
418 375
418 441
5 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 269.676 737.5 ] concat
[
(Taken)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -35.7499 28.9999 ] concat
349 703 372 703 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 512.242 734.5 ] concat
[
(predictTaken)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 133.389 25.9999 ] concat
349 703 372 703 Line
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 128.25 492.5 ] concat
192 239
192 273
282 273
282 241
307 241
5 MLine
End

End %I eop

showpage


end
%%EndDocument
 269 41 a
 endTexFig
561 952 a Fg(Figure)12 b(4:)18 b(Local)13 b(History)e(Predictor)g(Structure)
167 1087 y(Figure)e(5)i(shows)g(the)f(performance)g(of)g(local)g(branch)g
(prediction)f(as)i(a)g(function)f(of)g(the)g(predictor)94 1152
y(size.)24 b(For)13 b(simplicity)m(,)h(we)g(assume)h(that)f(the)g(number)f
(of)g(history)h(and)g(count)g(array)f(entries)h(are)g(the)94
1218 y(same.)k(See)11 b(Appendix)f(A)h(for)f(a)h(discussion)h(of)e(some)h
(alternatives.)18 b(For)10 b(very)g(small)h(predictors,)g(the)94
1283 y(local)k(scheme)g(is)g(actually)g(worse)g(than)f(the)h(bimodal)f
(scheme.)27 b(If)14 b(there)g(is)i(excessive)f(contention)94
1348 y(for)i(history)h(entries,)j(then)d(storing)g(this)h(history)f(is)h(of)f
(no)g(value.)37 b(However)n(,)20 b(above)f(about)f(128)94 1413
y(bytes,)h(the)f(local)g(predictor)e(has)i(signi\256cantly)g(better)f
(performance.)33 b(For)17 b(lar)o(ge)g(predictors,)i(the)94
1478 y(accuracy)f(approaches)h(97.1\045)h(correct,)f(with)g(less)g(than)g
(half)f(as)h(many)f(misspredictions)h(as)g(the)94 1544 y(bimodal)11
b(scheme.)94 1721 y Fh(5)71 b(Global)17 b(Branch)i(Pr)o(ediction)94
1837 y Fg(In)11 b(the)h(local)g(branch)g(prediction)f(scheme,)i(the)f(only)f
(patterns)h(considered)g(are)g(those)g(of)g(the)g(current)94
1902 y(branch.)17 b(Another)9 b(scheme)i(proposed)f(by)g(Y)-5
b(eh)10 b(and)g(Patt[YP92)n(])g(is)g(able)h(to)f(take)g(advantage)g(of)f
(other)94 1967 y(recent)14 b(branches)g(to)g(make)h(a)f(prediction.)24
b(One)14 b(implementation)f(of)h(such)h(an)f(approach)g(is)h(shown)94
2033 y(in)g(Figure)h(6.)28 b(A)16 b(single)g(shift)g(register)f(GR,)i
(records)f(the)f(direction)h(taken)f(by)h(the)g(most)g(recent)g
Fb(n)94 2098 y Fg(conditional)g(branches.)33 b(Since)17 b(the)h(branch)f
(history)f(is)i(global)f(to)g(all)g(branches,)i(this)e(strategy)h(is)94
2163 y(called)12 b(global)g(branch)g(prediction)g(in)g(this)g(paper)m(.)167
2228 y(Global)19 b(branch)h(prediction)e(is)i(able)g(to)g(take)f(advantage)h
(of)f(two)h(types)g(of)f(patterns.)40 b(First,)94 2293 y(the)18
b(direction)f(take)h(by)g(the)g(current)f(branch)h(may)g(depend)g(strongly)f
(on)h(other)f(recent)h(branches.)94 2359 y(Consider)12 b(the)g(example)h
(below:)882 2478 y(if)f(\(x<1\))f Fb(:)d(:)g(:)882 2543 y Fg(if)k(\(x>1\))f
Fb(:)d(:)g(:)167 2662 y Fg(Using)18 b(global)f(history)g(prediction,)i(we)f
(are)f(able)h(to)g(base)g(the)g(prediction)f(for)f(the)i(second)g(if)94
2727 y(on)g(the)h(direction)e(taken)i(by)f(the)h(\256rst)f(if.)37
b(If)17 b(\(x<1\),)j(we)f(know)f(that)h(the)f(second)h(if)f(will)g(not)h(be)
981 2866 y(6)p eop
%%Page: 7 11
bop 321 1145 a @beginspecial @setspecial
%%BeginDocument: pag.psf
-36.000000 -54.000000 translate
6 SetSym
<0e> 278.902 156.706 SY
35.4036 -41.5101 S9
[] 0.600000 SL
283.902 156.706 312.248 156.706 
0.004000 G9 L9 0.000000 G9
<0e> 317.248 156.706 SY
10 /Helvetica SetTxt
( local) 0 325.752 153.706 TXL
6 SetSym
<02> 278.902 143.706 SY
72 99.2647 S9
[] 0.600000 SL
283.902 143.706 312.248 143.706 
0.003000 G9 L9 0.000000 G9
<02> 317.248 143.706 SY
10 /Helvetica SetTxt
( bimodal) 0 325.752 140.706 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
35.4036 -41.5101 S9
[] 0.600000 SL
97.8627 107.972 M9
157.914 200.672 M9
216.442 239.586 M9
273.92 254.584 M9
330.627 261.091 M9
386.748 264.388 M9
442.404 264.308 M9
0.004000 G9 D9 0.0 G9
72 99.2647 S9
[] 0.600000 SL
97.8627 137.224 M9
123.725 157.608 M9
149.588 169.956 M9
175.451 179.632 M9
201.314 182.577 M9
227.176 187.043 M9
253.039 187.528 M9
278.902 187.806 M9
304.765 189.068 M9
330.627 189.114 M9
356.49 189.116 M9
0.003000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.1765 TXC
(89) 0 67 90.1765 TXR
(|) -90 72 114.353 TXC
(90) 0 67 111.353 TXR
(|) -90 72 135.529 TXC
(91) 0 67 132.529 TXR
(|) -90 72 156.706 TXC
(92) 0 67 153.706 TXR
(|) -90 72 177.882 TXC
(93) 0 67 174.882 TXR
(|) -90 72 199.059 TXC
(94) 0 67 196.059 TXR
(|) -90 72 220.235 TXC
(95) 0 67 217.235 TXR
(|) -90 72 241.412 TXC
(96) 0 67 238.412 TXR
(|) -90 72 262.588 TXC
(97) 0 67 259.588 TXR
(|) -90 72 283.765 TXC
(98) 0 67 280.765 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<0e> 35.4036 -41.5101 SY
<0e> 97.8627 107.972 SY
<0e> 157.914 200.672 SY
<0e> 216.442 239.586 SY
<0e> 273.92 254.584 SY
<0e> 330.627 261.091 SY
<0e> 386.748 264.388 SY
<0e> 442.404 264.308 SY
<02> 72 99.2647 SY
<02> 97.8627 137.224 SY
<02> 123.725 157.608 SY
<02> 149.588 169.956 SY
<02> 175.451 179.632 SY
<02> 201.314 182.577 SY
<02> 227.176 187.043 SY
<02> 253.039 187.528 SY
<02> 278.902 187.806 SY
<02> 304.765 189.068 SY
<02> 330.627 189.114 SY
<02> 356.49 189.116 SY
initclip 
%%EndDocument
 @endspecial 525 1306 a Fg(Figure)12 b(5:)18 b(Local)13 b(History)e
(Predictor)h(Performance)313 1666 y
 21510635 12695880 10130391 31706808 31641026 44402688 startTexFig
313 1666 a
%%BeginDocument: gag.idraw

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.774193 0 0 0.774193 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 389.676 824.5 ] concat
[
(Taken)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 203.676 666.5 ] concat
[
(Taken)
] Text
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 123 ] concat
376 523 420 715 Rect
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 148.342 113 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 313.842 666.5 ] concat
[
(GR)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84 113 ] concat
273 533
273 514
399 514
399 530
4 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 460.5 866.5 ] concat
[
(Counts)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 534.242 824.5 ] concat
[
(predictTaken)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84.25 116 ] concat
349 703 372 703 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 155.389 116 ] concat
349 703 372 703 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -101.75 -42 ] concat
349 703 372 703 Line
End

End %I eop

showpage


end
%%EndDocument
 313 1666 a
 endTexFig
550 2577 a Fg(Figure)g(6:)18 b(Global)12 b(History)g(Predictor)f(Structure)
981 2866 y(7)p eop
%%Page: 8 12
bop 94 83 a Fg(taken.)33 b(If)16 b(\(x)p Fe(\025)p Fg(1\))g(then)h(we)g(don')
o(t)g(know)g(conclusively)g(which)g(way)g(this)h(branch)e(will)h(be)g(taken,)
94 148 y(but)g(the)g(probability)g(may)g(well)g(be)h(skewed)g(one)f
(direction)g(or)g(the)g(other)m(.)33 b(If)17 b(so,)j(we)d(should)h(be)94
213 y(able)c(to)g(make)h(a)f(better)g(prediction)g(than)g(if)g(we)h(had)f(no)
g(information)f(about)h(the)h(value)f(of)g(x.)25 b(Pan,)94
278 y(So,)15 b(and)g(Rahmeh[PSR92)o(])g(showed)g(several)g(examples)h(of)e
(neighboring)g(branches)h(in)g(the)g(SPEC)94 343 y(benchmarks)d(with)g
(conditions)g(that)g(are)g(correlated)g(in)g(this)h(way)m(.)167
409 y(A)21 b(second)h(way)f(that)g(global)f(branch)h(prediction)f(can)h(be)h
(ef)o(fective)e(is)i(by)f(duplicating)f(the)94 474 y(behavior)10
b(of)h(local)f(branch)h(prediction.)17 b(This)11 b(can)h(occur)e(when)h(the)g
(global)g(history)f(includes)h(all)g(the)94 539 y(local)h(history)g(needed)g
(to)h(make)f(an)g(accurate)h(prediction.)k(Consider)c(the)f(example:)769
650 y(for)g(\(i=0;)f(i<100;)h(i++\))858 710 y(for)g(\(j=0;)g(j<3;)g(j++\))167
821 y(After)18 b(the)h(initial)g(startup)f(time,)j(the)e(conditional)g
(branches)g(have)g(the)g(following)f(behavior)n(,)94 886 y(assuming)12
b(GR)h(is)g(shifted)f(to)g(the)g(left:)p 600 956 788 2 v 599
1016 2 61 v 649 998 a(test)p 766 1016 V 73 w(value)p 923 1016
V 65 w(GR)p 1073 1016 V 142 w(result)p 1387 1016 V 600 1018
788 2 v 599 1078 2 61 v 650 1060 a(j<3)p 766 1078 V 95 w(j=1)p
923 1078 V 70 w(1101)p 1073 1078 V 128 w(taken)p 1387 1078
V 599 1138 V 650 1120 a(j<3)p 766 1138 V 95 w(j=2)p 923 1138
V 70 w(1011)p 1073 1138 V 128 w(taken)p 1387 1138 V 599 1199
V 650 1181 a(j<3)p 766 1199 V 95 w(j=3)p 923 1199 V 70 w(0111)p
1073 1199 V 90 w(not)g(taken)p 1387 1199 V 599 1259 V 625 1241
a(i<100)p 766 1259 V 923 1259 V 207 w(1110)p 1073 1259 V 49
w(usually)h(taken)p 1387 1259 V 600 1260 788 2 v 167 1353 a(Here)i(the)f
(global)h(history)f(is)h(able)g(to)g(both)g(distinguish)f(which)h(of)f(the)h
(two)g(branches)g(is)g(being)94 1418 y(executed)c(and)h(what)g(the)f(current)
g(value)g(of)g(j)h(is.)18 b(Thus,)13 b(the)f(prediction)e(accuracy)i(here)f
(would)h(be)f(as)94 1483 y(good)h(as)h(that)f(of)g(local)g(prediction.)167
1548 y(Figure)17 b(7)h(compares)g(the)h(performance)e(of)g(the)h(global)g
(prediction)f(with)h(local)g(and)g(bimodal)94 1614 y(branch)10
b(prediction.)17 b(The)11 b(plot)g(shows)g(that)g(the)f(global)h(scheme)g(is)
g(signi\256cantly)f(less)i(ef)o(fective)e(than)94 1679 y(the)i(local)g
(scheme)h(for)e(a)h(\256xed)g(size)h(predictor)m(.)18 b(It)11
b(is)i(only)f(better)f(than)h(the)h(bimodal)e(scheme)i(above)94
1744 y(1KB.)167 1809 y(W)l(e)e(can)g(understand)f(this)h(behavior)f
(intuitively)f(by)i(looking)f(at)h(the)f(information)f(content)i(of)f(the)94
1874 y(counter)h(table)g(index.)18 b(For)11 b(small)h(predictors,)f(the)h
(bimodal)f(scheme)h(is)g(relatively)f(good.)18 b(Here,)12 b(the)94
1939 y(branch)i(address)h(bits)f(used)h(in)f(the)h(bimodal)e(scheme)i(ef)o
(\256ciently)f(distinguish)g(dif)o(ferent)f(branches.)94 2005
y(As)18 b(the)f(number)g(of)g(counters)g(doubles,)i(roughly)e(half)g(as)h
(many)f(branches)g(will)g(share)h(the)f(same)94 2070 y(counter)m(.)31
b(Informally)m(,)16 b(we)h(can)f(say)i(that)e(the)h(information)e(content)h
(of)g(the)h(address)g(bits)g(is)g(high.)94 2135 y(For)f(lar)o(ge)h(counter)f
(tables,)j(this)e(is)g(no)g(longer)f(true.)32 b(As)18 b(more)e(counters)h
(are)g(added,)h(eventually)94 2200 y(each)c(frequent)f(branch)g(will)h(map)f
(to)h(a)g(unique)g(counter)m(.)22 b(Thus,)15 b(the)f(information)e(content)i
(in)f(each)94 2265 y(additional)e(address)i(bit)f(declines)h(to)f(zero)g(for)
g(increasingly)g(lar)o(ge)g(counter)g(tables.)167 2331 y(The)19
b(information)d(content)j(of)f(the)g(global)g(history)g(register)f(begins)i
(relatively)f(small,)i(but)e(it)94 2396 y(continues)g(to)h(grow)f(for)g(lar)o
(ger)g(sizes.)38 b(T)m(o)19 b(understand)f(why)m(,)i(consider)f(the)g
(history)f(one)g(might)94 2461 y(expect)12 b(when)g(a)h(particular)e(branch)h
(is)h(executed.)18 b(Since)12 b(over)g(90\045)h(of)f(the)g(time)g(each)h
(branch)e(goes)94 2526 y(the)17 b(same)g(direction,)h(the)f(sequence)h(of)f
(previous)f(branches)i(and)f(the)g(directions)f(taken)h(by)g(these)94
2591 y(branches)f(will)g(tend)g(to)g(be)h(highly)f(repetitive)f(for)h(any)g
(one)g(branch,)i(but)e(perhaps)g(very)g(dif)o(ferent)94 2656
y(for)d(other)g(branches.)23 b(This)15 b(behavior)e(allows)h(a)g(global)g
(predictor)f(to)h(identify)f(dif)o(ferent)f(branches.)94 2722
y(However)f(as)g(Figure)g(7)g(suggests,)i(that)e(the)g(global)g(history)f(is)
i(less)g(ef)o(\256cient)e(at)i(this)f(than)g(the)g(branch)981
2866 y(8)p eop
%%Page: 9 13
bop 321 992 a @beginspecial @setspecial
%%BeginDocument: gag.psf
-36.000000 -54.000000 translate
6 SetSym
<0a> 278.902 156.706 SY
97.8627 89.3732 S9
[] 0.600000 SL
283.902 156.706 312.248 156.706 
0.002000 G9 L9 0.000000 G9
<0a> 317.248 156.706 SY
10 /Helvetica SetTxt
( global) 0 325.752 153.706 TXL
6 SetSym
<0e> 278.902 143.706 SY
35.4036 -41.5101 S9
[] 0.600000 SL
283.902 143.706 312.248 143.706 
0.004000 G9 L9 0.000000 G9
<0e> 317.248 143.706 SY
10 /Helvetica SetTxt
( local) 0 325.752 140.706 TXL
6 SetSym
<02> 278.902 130.706 SY
72 99.2647 S9
[] 0.600000 SL
283.902 130.706 312.248 130.706 
0.003000 G9 L9 0.000000 G9
<02> 317.248 130.706 SY
10 /Helvetica SetTxt
( bimodal) 0 325.752 127.706 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
97.8627 89.3732 S9
[] 0.600000 SL
149.588 145.239 M9
201.314 187.223 M9
253.039 215.206 M9
304.765 231.116 M9
356.49 241.236 M9
408.216 246.187 M9
0.002000 G9 D9 0.0 G9
35.4036 -41.5101 S9
[] 0.600000 SL
97.8627 107.972 M9
157.914 200.672 M9
216.442 239.586 M9
273.92 254.584 M9
330.627 261.091 M9
386.748 264.388 M9
442.404 264.308 M9
0.004000 G9 D9 0.0 G9
72 99.2647 S9
[] 0.600000 SL
97.8627 137.224 M9
123.725 157.608 M9
149.588 169.956 M9
175.451 179.632 M9
201.314 182.577 M9
227.176 187.043 M9
253.039 187.528 M9
278.902 187.806 M9
304.765 189.068 M9
330.627 189.114 M9
356.49 189.116 M9
0.003000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.1765 TXC
(89) 0 67 90.1765 TXR
(|) -90 72 114.353 TXC
(90) 0 67 111.353 TXR
(|) -90 72 135.529 TXC
(91) 0 67 132.529 TXR
(|) -90 72 156.706 TXC
(92) 0 67 153.706 TXR
(|) -90 72 177.882 TXC
(93) 0 67 174.882 TXR
(|) -90 72 199.059 TXC
(94) 0 67 196.059 TXR
(|) -90 72 220.235 TXC
(95) 0 67 217.235 TXR
(|) -90 72 241.412 TXC
(96) 0 67 238.412 TXR
(|) -90 72 262.588 TXC
(97) 0 67 259.588 TXR
(|) -90 72 283.765 TXC
(98) 0 67 280.765 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<0a> 97.8627 89.3732 SY
<0a> 149.588 145.239 SY
<0a> 201.314 187.223 SY
<0a> 253.039 215.206 SY
<0a> 304.765 231.116 SY
<0a> 356.49 241.236 SY
<0a> 408.216 246.187 SY
<0e> 35.4036 -41.5101 SY
<0e> 97.8627 107.972 SY
<0e> 157.914 200.672 SY
<0e> 216.442 239.586 SY
<0e> 273.92 254.584 SY
<0e> 330.627 261.091 SY
<0e> 386.748 264.388 SY
<0e> 442.404 264.308 SY
<02> 72 99.2647 SY
<02> 97.8627 137.224 SY
<02> 123.725 157.608 SY
<02> 149.588 169.956 SY
<02> 175.451 179.632 SY
<02> 201.314 182.577 SY
<02> 227.176 187.043 SY
<02> 253.039 187.528 SY
<02> 278.902 187.806 SY
<02> 304.765 189.068 SY
<02> 330.627 189.114 SY
<02> 356.49 189.116 SY
initclip 
%%EndDocument
 @endspecial 514 1152 a Fg(Figure)12 b(7:)18 b(Global)12 b(History)g
(Predictor)f(Performance)94 1288 y(address.)24 b(On)13 b(the)h(other)g(hand,)
h(the)f(global)f(history)h(register)f(can)h(capture)g(more)g(information)e
(than)94 1353 y(just)k(identifying)f(which)h(branch)g(is)g(current,)h(and)f
(thus)g(for)g(suf)o(\256ciently)f(lar)o(ge)h(predictors)f(it)h(does)94
1418 y(better)c(than)g(bimodal)g(prediction.)94 1595 y Fh(6)71
b(Global)17 b(Pr)o(edictor)j(with)e(Index)h(Selection)94 1712
y Fg(As)8 b(discussed)g(in)g(the)g(previous)g(section,)i(global)e(history)g
(information)g(is)g(less)g(ef)o(\256cient)g(at)g(identifying)94
1777 y(the)i(current)g(branch)g(than)h(simply)f(using)h(the)f(branch)g
(address.)19 b(This)11 b(suggests)g(that)g(a)f(more)g(ef)o(\256cient)94
1842 y(prediction)19 b(might)g(be)h(made)g(using)g(both)f(the)h(branch)f
(address)i(and)f(the)g(global)f(history)m(.)40 b(Such)94 1907
y(a)18 b(scheme)g(was)g(proposed)g(by)g(Pan,)h(So,)g(and)f(Rahmeh[PSR92)o(].)
35 b(Their)17 b(approach)h(is)g(shown)g(in)94 1972 y(Figure)f(8.)36
b(Here)18 b(the)g(counter)g(table)g(is)h(indexed)f(with)g(a)g(concatenation)g
(of)g(global)g(history)g(and)94 2038 y(branch)12 b(address)h(bits.)167
2103 y(The)j(performance)e(of)h(global)g(prediction)f(with)i(selected)f
(address)h(bits)g(\(gselect\))f(is)g(shown)h(in)94 2168 y(Figure)e(9.)26
b(W)n(ith)15 b(the)g(bit)g(selection)g(approach,)h(there)e(is)i(a)f(tradeof)o
(f)f(between)h(using)g(more)f(history)94 2233 y(bits)g(or)g(more)g(address)g
(bits.)24 b(For)14 b(a)g(predictor)f(table)i(with)f(2)1178
2215 y Fc(K)1226 2233 y Fg(counters,)h(we)f(could)g(use)h(anywhere)94
2298 y(from)d(1)g(to)h(\(K-1\))f(address)h(bits.)20 b(Rather)12
b(than)h(show)g(all)g(these)g(possibilities,)h(Figure)e(9)h(only)f(shows)94
2363 y(the)j(performance)g(of)g(the)g(predictor)g(of)g(the)g(given)g(size)i
(with)e(with)g(the)g(best)h(accuracy)g(across)g(the)94 2429
y(benchmarks)c(\(gselect-best\).)167 2494 y(As)18 b(we)f(would)g(expect,)i
(gselect-best)e(performs)g(better)f(than)h(either)g(bimodal)g(or)g(global)g
(pre-)94 2559 y(diction)d(since)h(both)g(are)g(essentially)g(degenerate)g
(cases.)27 b(For)14 b(small)h(sizes,)i(gselect-best)e(parallels)94
2624 y(the)h(performance)g(of)g(bimodal)f(prediction.)30 b(However)n(,)18
b(once)f(there)f(are)g(enough)g(address)h(bits)g(to)94 2689
y(identify)d(most)h(branches,)h(more)f(global)g(history)f(bits)i(are)f(used,)
h(resulting)f(in)g(signi\256cantly)f(better)981 2866 y(9)p
eop
%%Page: 10 14
bop 317 177 a
 21379072 13814170 10130391 30588518 31509463 44402688 startTexFig
317 177 a
%%BeginDocument: gselect.idraw

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.774193 0 0 0.774193 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 389.676 824.5 ] concat
[
(Taken)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 203.676 749.5 ] concat
[
(Taken)
] Text
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 123 ] concat
376 523 420 715 Rect
End

Begin %I Pict
[ 1 0 0 1 64.342 0 ] concat

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 113 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 250.5 666.5 ] concat
[
(PC)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84 113 ] concat
273 533
273 514
399 514
399 530
4 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 460.5 866.5 ] concat
[
(Counts)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 531.668 824.5 ] concat
[
(predictTaken)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84.25 116 ] concat
349 703 372 703 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 155.389 116 ] concat
349 703 372 703 Line
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 148.342 196 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 313.842 749.5 ] concat
[
(GR)
] Text
End

Begin %I MLine
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 105.25 355.5 ] concat
248 373
248 352
326 352
326 271
4 MLine
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 103.25 355.5 ] concat
302 358 297 346 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 103.25 274.213 ] concat
302 358 297 346 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 159.25 274.213 ] concat
302 358 297 346 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 397.25 697.501 ] concat
[
(n)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 395.75 616.5 ] concat
[
(m)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 445.25 616.5 ] concat
[
(n+m)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -101.75 41 ] concat
349 703 372 703 Line
End

End %I eop

showpage


end
%%EndDocument
 317 177 a
 endTexFig
435 1159 a Fg(Figure)12 b(8:)18 b(Global)12 b(History)g(Predictor)f(with)h
(Index)g(Selection)321 2434 y @beginspecial @setspecial
%%BeginDocument: gselect.psf
-36.000000 -54.000000 translate
6 SetSym
<08> 278.902 156.706 SY
-5.58823 -22.2459 S9
[] 0.600000 SL
283.902 156.706 312.248 156.706 
0.006000 G9 L9 0.000000 G9
<08> 317.248 156.706 SY
10 /Helvetica SetTxt
( gselect-best) 0 325.752 153.706 TXL
6 SetSym
<0a> 278.902 143.706 SY
97.8627 89.3732 S9
[] 0.600000 SL
283.902 143.706 312.248 143.706 
0.002000 G9 L9 0.000000 G9
<0a> 317.248 143.706 SY
10 /Helvetica SetTxt
( global) 0 325.752 140.706 TXL
6 SetSym
<0e> 278.902 130.706 SY
35.4036 -41.5101 S9
[] 0.600000 SL
283.902 130.706 312.248 130.706 
0.004000 G9 L9 0.000000 G9
<0e> 317.248 130.706 SY
10 /Helvetica SetTxt
( local) 0 325.752 127.706 TXL
6 SetSym
<02> 278.902 117.706 SY
72 99.2647 S9
[] 0.600000 SL
283.902 117.706 312.248 117.706 
0.003000 G9 L9 0.000000 G9
<02> 317.248 117.706 SY
10 /Helvetica SetTxt
( bimodal) 0 325.752 114.706 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
-5.58823 -22.2459 S9
[] 0.600000 SL
46.1373 76.4471 M9
97.8627 153.131 M9
149.588 204.488 M9
201.314 234.28 M9
253.039 249.541 M9
304.765 256.303 M9
356.49 259.382 M9
408.216 260.68 M9
0.006000 G9 D9 0.0 G9
97.8627 89.3732 S9
[] 0.600000 SL
149.588 145.239 M9
201.314 187.223 M9
253.039 215.206 M9
304.765 231.116 M9
356.49 241.236 M9
408.216 246.187 M9
0.002000 G9 D9 0.0 G9
35.4036 -41.5101 S9
[] 0.600000 SL
97.8627 107.972 M9
157.914 200.672 M9
216.442 239.586 M9
273.92 254.584 M9
330.627 261.091 M9
386.748 264.388 M9
442.404 264.308 M9
0.004000 G9 D9 0.0 G9
72 99.2647 S9
[] 0.600000 SL
97.8627 137.224 M9
123.725 157.608 M9
149.588 169.956 M9
175.451 179.632 M9
201.314 182.577 M9
227.176 187.043 M9
253.039 187.528 M9
278.902 187.806 M9
304.765 189.068 M9
330.627 189.114 M9
356.49 189.116 M9
0.003000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.1765 TXC
(89) 0 67 90.1765 TXR
(|) -90 72 114.353 TXC
(90) 0 67 111.353 TXR
(|) -90 72 135.529 TXC
(91) 0 67 132.529 TXR
(|) -90 72 156.706 TXC
(92) 0 67 153.706 TXR
(|) -90 72 177.882 TXC
(93) 0 67 174.882 TXR
(|) -90 72 199.059 TXC
(94) 0 67 196.059 TXR
(|) -90 72 220.235 TXC
(95) 0 67 217.235 TXR
(|) -90 72 241.412 TXC
(96) 0 67 238.412 TXR
(|) -90 72 262.588 TXC
(97) 0 67 259.588 TXR
(|) -90 72 283.765 TXC
(98) 0 67 280.765 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<08> -5.58823 -22.2459 SY
<08> 46.1373 76.4471 SY
<08> 97.8627 153.131 SY
<08> 149.588 204.488 SY
<08> 201.314 234.28 SY
<08> 253.039 249.541 SY
<08> 304.765 256.303 SY
<08> 356.49 259.382 SY
<08> 408.216 260.68 SY
<0a> 97.8627 89.3732 SY
<0a> 149.588 145.239 SY
<0a> 201.314 187.223 SY
<0a> 253.039 215.206 SY
<0a> 304.765 231.116 SY
<0a> 356.49 241.236 SY
<0a> 408.216 246.187 SY
<0e> 35.4036 -41.5101 SY
<0e> 97.8627 107.972 SY
<0e> 157.914 200.672 SY
<0e> 216.442 239.586 SY
<0e> 273.92 254.584 SY
<0e> 330.627 261.091 SY
<0e> 386.748 264.388 SY
<0e> 442.404 264.308 SY
<02> 72 99.2647 SY
<02> 97.8627 137.224 SY
<02> 123.725 157.608 SY
<02> 149.588 169.956 SY
<02> 175.451 179.632 SY
<02> 201.314 182.577 SY
<02> 227.176 187.043 SY
<02> 253.039 187.528 SY
<02> 278.902 187.806 SY
<02> 304.765 189.068 SY
<02> 330.627 189.114 SY
<02> 356.49 189.116 SY
initclip 
%%EndDocument
 @endspecial 400 2594 a(Figure)f(9:)18 b(Global)12 b(History)g(with)g(Index)g
(Selection)f(Performance)969 2866 y(10)p eop
%%Page: 11 15
bop 94 83 a Fg(prediction)18 b(results)h(than)f(the)h(bimodal)f(scheme.)38
b(The)20 b(gselect-best)f(method)f(also)h(signi\256cantly)94
148 y(outperforms)13 b(simple)i(global)f(prediction)g(for)f(most)i(predictor)
f(sizes)h(because)g(the)g(branch)f(address)94 213 y(bits)e(more)g(ef)o
(\256ciently)g(identify)f(the)h(branch.)167 278 y(For)h(predictor)g(sizes)j
(less)f(than)f(1KB,)h(gselect-best)f(also)g(outperforms)f(local)h
(prediction.)23 b(The)94 343 y(global)18 b(schemes)h(have)f(the)h(advantage)f
(that)g(the)g(storage)h(space)g(required)e(for)h(global)g(history)g(is)94
409 y(negligible.)f(Moreover)n(,)10 b(even)g(for)g(lar)o(ger)f(predictors,)i
(the)f(accuracies)g(are)g(close.)18 b(This)11 b(is)g(especially)94
474 y(interesting)d(since)h(gselect)g(requires)g(only)f(a)h(single)g(array)f
(access)j(whereas)e(local)f(prediction)g(requires)94 539 y(two)h(array)f
(accesses)k(in)d(sequence.)18 b(This)10 b(suggests)g(that)f(a)g(gselect)h
(predictor)e(should)h(have)h(less)g(delay)94 604 y(and)i(be)h(easier)f(to)g
(pipeline)g(than)h(a)f(local)g(predictor)m(.)94 781 y Fh(7)71
b(Global)17 b(History)i(with)f(Index)h(Sharing)94 898 y Fg(In)10
b(the)h(discussion)h(of)e(global)h(prediction,)g(we)g(described)g(how)g
(global)f(history)h(information)e(weakly)94 963 y(identi\256es)k(the)g
(current)f(branch.)20 b(This)14 b(suggests)g(that)f(there)g(is)g(a)g(lot)g
(of)g(redundancy)f(in)h(the)g(counter)94 1028 y(index)d(used)h(by)f(gselect.)
18 b(If)10 b(there)g(are)h(enough)f(address)h(bits)f(to)h(identify)e(the)h
(branch,)h(we)g(can)g(expect)94 1093 y(the)17 b(frequent)f(global)h(history)g
(combinations)g(to)g(be)h(rather)e(sparse.)34 b(W)l(e)18 b(can)f(take)h
(advantage)f(of)94 1158 y(this)c(ef)o(fect)g(by)g(hashing)h(the)f(branch)g
(address)h(and)f(the)g(global)g(history)g(together)m(.)21 b(In)13
b(particular)n(,)g(we)94 1224 y(can)j(expect)h(the)f(exclusive)h(OR)g(of)f
(the)g(branch)g(address)h(with)f(the)h(global)f(history)g(to)g(have)g(more)94
1289 y(information)e(than)i(either)g(component)g(alone.)30
b(Moreover)n(,)17 b(since)g(more)f(address)h(bits)f(and)g(global)94
1354 y(history)f(bits)g(are)g(in)g(use,)i(there)e(is)h(reason)g(to)f(expect)g
(better)g(predictions)g(than)g(gselect.)28 b(Consider)94 1419
y(the)12 b(following)e(simple)i(example)g(where)g(there)f(are)h(only)f(two)h
(branches)g(and)g(each)g(branch)g(has)g(only)94 1484 y(two)g(common)g(global)
g(histories:)p 496 1555 997 2 v 495 1615 2 61 v 548 1597 a(Branch)p
744 1615 V 109 w(Global)p 993 1615 V 112 w(gselect)p 1242 1615
V 115 w(gshare)p 1491 1615 V 495 1675 V 539 1657 a(Address)p
744 1675 V 92 w(History)p 993 1675 V 142 w(4/4)p 1242 1675
V 186 w(8/8)p 1491 1675 V 496 1677 997 2 v 495 1737 2 61 v
521 1719 a(00000000)p 744 1737 V 49 w(00000001)p 993 1737 V
49 w(00000001)p 1242 1737 V 49 w(00000001)p 1491 1737 V 495
1797 V 521 1779 a(00000000)p 744 1797 V 49 w(00000000)p 993
1797 V 49 w(00000000)p 1242 1797 V 49 w(00000000)p 1491 1797
V 495 1857 V 521 1839 a(11111111)p 744 1857 V 49 w(00000000)p
993 1857 V 49 w(11110000)p 1242 1857 V 49 w(11111111)p 1491
1857 V 495 1918 V 521 1899 a(11111111)p 744 1918 V 49 w(10000000)p
993 1918 V 49 w(11110000)p 1242 1918 V 49 w(01111111)p 1491
1918 V 496 1919 997 2 v 167 2012 a(Strategy)j(gselect)h(4/4)f(concatenates)h
(the)f(low)h(order)f(4)g(bits)h(of)f(both)g(the)h(branch)f(address)h(and)94
2077 y(the)d(global)f(history)m(.)20 b(W)l(e)13 b(will)g(call)g(the)g
(strategy)f(of)h(exclusive)g(ORing)g(branch)g(address)g(and)g(global)94
2142 y(history)f Ff(gshar)n(e)p Fg(.)20 b(Strategy)12 b(gshare)h(8/8)g(uses)g
(the)g(bit-wise)f(exclusive)h(OR)g(of)g(all)f(8)h(bits)g(of)f(both)h(the)94
2207 y(branch)i(address)h(and)g(the)g(global)g(history)m(.)27
b(Comparing)15 b(gshare)h(8/8)g(and)g(gselect)g(4/4)g(shows)g(that)94
2272 y(only)c(gshare)g(is)h(able)f(to)h(separate)f(all)g(four)g(cases.)19
b(The)13 b(gselect)g(predictor)e(can')o(t)h(take)h(advantage)f(of)94
2337 y(the)g(distinguishing)g(history)g(in)g(the)g(upper)g(four)g(bits.)167
2403 y(As)f(with)f(gselect,)i(we)e(can)h(choose)g(to)f(use)h(fewer)f(global)g
(history)g(bits)g(than)g(branch)g(address)h(bits.)94 2468 y(In)i(this)h
(case,)i(the)e(global)g(history)f(bits)h(are)g(exclusive)g(ORed)h(with)e(the)
h(higher)g(order)f(address)h(bits.)94 2533 y(T)m(ypically)m(,)e(the)g(higher)
g(order)f(address)i(bits)g(will)f(be)g(more)g(sparse)h(than)f(the)h(lower)e
(order)h(bits.)167 2598 y(Figure)i(10)i(shows)g(the)f(gshare)h(predictor)e
(structure.)27 b(Figure)14 b(11)h(compares)h(the)f(performance)94
2663 y(of)k(gshare)h(with)g(gselect.)42 b(Figure)19 b(11)h(only)g(shows)g
(the)g(gshare)g(predictor)f(among)h(the)g(various)94 2729 y(history)13
b(length)h(choices)g(that)g(has)h(the)f(best)g(performance)f(across)h(the)g
(benchmarks)g(\(gshare-best\).)969 2866 y(11)p eop
%%Page: 12 16
bop 427 41 a
 17892639 13814170 13748387 30588518 31641026 44402688 startTexFig
427 41 a
%%BeginDocument: gshar.idraw

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.774193 0 0 0.774193 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 123 ] concat
376 523 420 715 Rect
End

Begin %I Pict
[ 1 0 0 1 64.342 0 ] concat

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 113 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 250.5 666.5 ] concat
[
(PC)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84 113 ] concat
273 533
273 514
399 514
399 530
4 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 460.5 866.5 ] concat
[
(Counts)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 389.676 824.5 ] concat
[
(Taken)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 534.242 824.5 ] concat
[
(predictTaken)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 84.25 116 ] concat
349 703 372 703 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 155.389 116 ] concat
349 703 372 703 Line
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 148.342 196 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 313.842 749.5 ] concat
[
(GR)
] Text
End

Begin %I MLine
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 105.25 355.5 ] concat
248 373
248 352
326 352
326 272
4 MLine
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 103.25 355.5 ] concat
302 358 297 346 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 103.25 274.213 ] concat
302 358 297 346 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 159.25 274.213 ] concat
302 358 297 346 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 397.25 697.501 ] concat
[
(m)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 399.75 616.5 ] concat
[
(n)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 455.75 616.5 ] concat
[
(n)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 282 199 ] concat
136 417 162 439 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 0.754024 0 0 0.754024 418.936 631.148 ] concat
[
(XOR)
] Text
End

End %I eop

showpage


end
%%EndDocument
 427 41 a
 endTexFig
438 1023 a Fg(Figure)12 b(10:)17 b(Global)12 b(History)g(Predictor)f(with)h
(Index)g(Sharing)94 1158 y(For)g(predictor)h(sizes)h(of)f(256)h(bytes)f(and)h
(over)n(,)g(gshare-best)f(outperforms)f(gselect-best)i(by)f(a)h(small)94
1223 y(mar)o(gin.)21 b(For)13 b(smaller)g(predictors,)g(gshare)h
(underperforms)e(gselect)i(because)g(there)f(is)h(already)f(too)94
1289 y(much)k(contention)f(for)g(counters)h(between)g(dif)o(ferent)f
(branches)h(and)g(adding)g(global)g(information)94 1354 y(just)12
b(makes)h(it)f(worse.)94 1531 y Fh(8)71 b(Combining)17 b(Branch)j(Pr)o
(edictors)94 1647 y Fg(The)15 b(dif)o(ferent)e(branch)h(prediction)f(schemes)
i(we)g(have)f(presented)h(have)f(dif)o(ferent)f(advantages.)25
b(A)94 1712 y(natural)19 b(question)g(is)h(whether)f(the)g(dif)o(ferent)f
(advantages)i(can)g(be)g(combined)f(in)g(a)h(new)f(branch)94
1778 y(prediction)9 b(method)h(with)g(better)f(prediction)g(accuracy)m(.)18
b(One)10 b(such)h(method)e(is)i(shown)f(in)g(Figure)f(12.)94
1843 y(This)23 b(combined)e(predictor)g(contains)i(two)f(predictors)f(P1)h
(and)g(P2)g(that)g(could)g(be)g(one)g(of)g(the)94 1908 y(predictors)f
(discussed)i(in)f(the)g(previous)f(sections)i(or)e(indeed)h(any)g(kind)g(of)f
(branch)h(prediction)94 1973 y(method.)30 b(In)16 b(addition,)i(the)e
(combined)g(predictor)g(contains)g(an)h(additional)f(counter)g(array)g(which)
94 2038 y(serves)e(to)g(select)h(the)f(best)h(predictor)e(to)h(use.)24
b(As)14 b(before,)h(we)f(will)g(use)g(2-bit)g(up/down)f(saturating)94
2104 y(counters.)28 b(Each)16 b(counter)f(keeps)h(track)g(of)f(which)g
(predictor)g(is)h(more)f(accurate)g(for)g(the)h(branches)94
2169 y(that)i(share)g(that)g(counter)m(.)36 b(Speci\256cally)m(,)19
b(using)f(the)g(notation)g(P1c)g(and)g(P2c)g(to)g(denote)g(whether)94
2234 y(predictors)d(P1)g(and)h(P2)f(are)g(correct)g(respectively)m(,)i(the)e
(counter)g(is)h(incremented)f(or)g(decremented)94 2299 y(by)d(P1c-P2c)f(as)i
(shown)g(below:)p 535 2370 918 2 v 534 2430 2 61 v 560 2412
a(P1c)p 659 2430 V 50 w(P2c)p 783 2430 V 49 w(P1c-P2c)p 999
2430 V 1452 2430 V 535 2431 918 2 v 534 2492 2 61 v 585 2474
a(0)p 659 2492 V 99 w(0)p 783 2492 V 146 w(0)p 999 2492 V 120
w(\(no)f(change\))p 1452 2492 V 534 2552 V 585 2534 a(0)p 659
2552 V 99 w(1)p 783 2552 V 137 w(-1)p 999 2552 V 112 w(\(decrement)f
(counter\))p 1452 2552 V 534 2612 V 585 2594 a(1)p 659 2612
V 99 w(0)p 783 2612 V 146 w(1)p 999 2612 V 120 w(\(increment)g(counter\))p
1452 2612 V 534 2672 V 585 2654 a(1)p 659 2672 V 99 w(1)p 783
2672 V 146 w(0)p 999 2672 V 120 w(\(no)h(change\))p 1452 2672
V 535 2674 918 2 v 969 2866 a(12)p eop
%%Page: 13 17
bop 321 1145 a @beginspecial @setspecial
%%BeginDocument: gshare.psf
-36.000000 -54.000000 translate
6 SetSym
<01> 278.902 156.706 SY
-57.3138 -177.868 S9
[] 0.600000 SL
283.902 156.706 312.248 156.706 
0.005000 G9 L9 0.000000 G9
<01> 317.248 156.706 SY
10 /Helvetica SetTxt
( gshare-best) 0 325.752 153.706 TXL
6 SetSym
<08> 278.902 143.706 SY
-5.58823 -22.2459 S9
[] 0.600000 SL
283.902 143.706 312.248 143.706 
0.006000 G9 L9 0.000000 G9
<08> 317.248 143.706 SY
10 /Helvetica SetTxt
( gselect-best) 0 325.752 140.706 TXL
6 SetSym
<0a> 278.902 130.706 SY
97.8627 89.3732 S9
[] 0.600000 SL
283.902 130.706 312.248 130.706 
0.002000 G9 L9 0.000000 G9
<0a> 317.248 130.706 SY
10 /Helvetica SetTxt
( global) 0 325.752 127.706 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
-57.3138 -177.868 S9
[] 0.600000 SL
-5.58823 -80.8158 M9
46.1373 45.3748 M9
97.8627 142.848 M9
149.588 210.151 M9
201.314 238.132 M9
253.039 252.309 M9
304.765 258.804 M9
356.49 260.481 M9
0.005000 G9 D9 0.0 G9
-5.58823 -22.2459 S9
[] 0.600000 SL
46.1373 76.4471 M9
97.8627 153.131 M9
149.588 204.488 M9
201.314 234.28 M9
253.039 249.541 M9
304.765 256.303 M9
356.49 259.382 M9
408.216 260.68 M9
0.006000 G9 D9 0.0 G9
97.8627 89.3732 S9
[] 0.600000 SL
149.588 145.239 M9
201.314 187.223 M9
253.039 215.206 M9
304.765 231.116 M9
356.49 241.236 M9
408.216 246.187 M9
0.002000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.1765 TXC
(89) 0 67 90.1765 TXR
(|) -90 72 114.353 TXC
(90) 0 67 111.353 TXR
(|) -90 72 135.529 TXC
(91) 0 67 132.529 TXR
(|) -90 72 156.706 TXC
(92) 0 67 153.706 TXR
(|) -90 72 177.882 TXC
(93) 0 67 174.882 TXR
(|) -90 72 199.059 TXC
(94) 0 67 196.059 TXR
(|) -90 72 220.235 TXC
(95) 0 67 217.235 TXR
(|) -90 72 241.412 TXC
(96) 0 67 238.412 TXR
(|) -90 72 262.588 TXC
(97) 0 67 259.588 TXR
(|) -90 72 283.765 TXC
(98) 0 67 280.765 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<01> -57.3138 -177.868 SY
<01> -5.58823 -80.8158 SY
<01> 46.1373 45.3748 SY
<01> 97.8627 142.848 SY
<01> 149.588 210.151 SY
<01> 201.314 238.132 SY
<01> 253.039 252.309 SY
<01> 304.765 258.804 SY
<01> 356.49 260.481 SY
<08> -5.58823 -22.2459 SY
<08> 46.1373 76.4471 SY
<08> 97.8627 153.131 SY
<08> 149.588 204.488 SY
<08> 201.314 234.28 SY
<08> 253.039 249.541 SY
<08> 304.765 256.303 SY
<08> 356.49 259.382 SY
<08> 408.216 260.68 SY
<0a> 97.8627 89.3732 SY
<0a> 149.588 145.239 SY
<0a> 201.314 187.223 SY
<0a> 253.039 215.206 SY
<0a> 304.765 231.116 SY
<0a> 356.49 241.236 SY
<0a> 408.216 246.187 SY
initclip 
%%EndDocument
 @endspecial 402 1306 a Fg(Figure)12 b(11:)17 b(Global)12 b(History)g(with)g
(Index)g(Sharing)g(Performance)231 1666 y
 24076124 12695879 7564902 30917427 31641026 43613306 startTexFig
231 1666 a
%%BeginDocument: combo.idraw

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.774193 0 0 0.774193 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -37.0001 108 ] concat
376 523 420 715 Rect
End

Begin %I Pict
[ 1 0 0 1 -56.6581 -15.0001 ] concat

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 84 113 ] concat
126 533 226 563 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 250.5 666.5 ] concat
[
(PC)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -37.0001 97.9999 ] concat
273 533
273 514
399 514
399 530
4 MLine
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 339.5 851.5 ] concat
[
(Counts)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 254.235 809.5 ] concat
[
(P1c-P2c)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 413.242 809.5 ] concat
[
(useP1)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -36.7501 101 ] concat
349 703 372 703 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 34.3889 101 ] concat
349 703 372 703 Line
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 198 108 ] concat
376 523 420 715 Rect
End

Begin %I Rect
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 111 108 ] concat
376 523 420 715 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 501 732.5 ] concat
[
(P1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 588 732.5 ] concat
[
(P2)
] Text
End

End %I eop

showpage


end
%%EndDocument
 231 1666 a
 endTexFig
583 2577 a Fg(Figure)f(12:)18 b(Combined)12 b(Predictor)f(Structure)969
2866 y(13)p eop
%%Page: 14 18
bop 321 992 a @beginspecial @setspecial
%%BeginDocument: bench1kd.psf
-36.000000 -54.000000 translate
6 SetSym
279.903 240.75 S9
[] 4.800000 SL
249.8 282 278.146 282 
0.800000 G9 L9 0.000000 G9
10 /Helvetica SetTxt
( bimodal) 0 291.65 279 TXL
6 SetSym
257.044 237 S9
[] 4.800000 SL
249.8 269 278.146 269 
0.500000 G9 L9 0.000000 G9
10 /Helvetica SetTxt
( gshare) 0 291.65 266 TXL
6 SetSym
300.62 233.25 S9
[] 4.800000 SL
249.8 256 278.146 256 
0.010000 G9 L9 0.000000 G9
10 /Helvetica SetTxt
( bimodal/gshare) 0 291.65 253 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 240.75 S9
[] 4.800000 SL
279.903 240.75 M9
0.800000 G9 D9 0.0 G9
72 225.75 S9
94.9594 225.75 M9
0.800000 G9 D9 0.0 G9
72 210.75 S9
197.258 210.75 M9
0.800000 G9 D9 0.0 G9
72 195.75 S9
225.131 195.75 M9
0.800000 G9 D9 0.0 G9
72 180.75 S9
158.249 180.75 M9
0.800000 G9 D9 0.0 G9
72 165.75 S9
183.087 165.75 M9
0.800000 G9 D9 0.0 G9
72 150.75 S9
341.705 150.75 M9
0.800000 G9 D9 0.0 G9
72 135.75 S9
330.401 135.75 M9
0.800000 G9 D9 0.0 G9
72 120.75 S9
234.289 120.75 M9
0.800000 G9 D9 0.0 G9
72 105.75 S9
352.457 105.75 M9
0.800000 G9 D9 0.0 G9
72 90.75 S9
239.744 90.75 M9
0.800000 G9 D9 0.0 G9
72 237 S9
[] 4.800000 SL
257.044 237 M9
0.500000 G9 D9 0.0 G9
72 222 S9
268.933 222 M9
0.500000 G9 D9 0.0 G9
72 207 S9
244.331 207 M9
0.500000 G9 D9 0.0 G9
72 192 S9
256.14 192 M9
0.500000 G9 D9 0.0 G9
72 177 S9
132.33 177 M9
0.500000 G9 D9 0.0 G9
72 162 S9
272.886 162 M9
0.500000 G9 D9 0.0 G9
72 147 S9
341.637 147 M9
0.500000 G9 D9 0.0 G9
72 132 S9
329.91 132 M9
0.500000 G9 D9 0.0 G9
72 117 S9
268.658 117 M9
0.500000 G9 D9 0.0 G9
72 102 S9
353.428 102 M9
0.500000 G9 D9 0.0 G9
72 87 S9
272.53 87 M9
0.500000 G9 D9 0.0 G9
72 233.25 S9
[] 4.800000 SL
300.62 233.25 M9
0.010000 G9 D9 0.0 G9
72 218.25 S9
269.135 218.25 M9
0.010000 G9 D9 0.0 G9
72 203.25 S9
277.134 203.25 M9
0.010000 G9 D9 0.0 G9
72 188.25 S9
290.795 188.25 M9
0.010000 G9 D9 0.0 G9
72 173.25 S9
224.689 173.25 M9
0.010000 G9 D9 0.0 G9
72 158.25 S9
301.326 158.25 M9
0.010000 G9 D9 0.0 G9
72 143.25 S9
341.705 143.25 M9
0.010000 G9 D9 0.0 G9
72 128.25 S9
332.356 128.25 M9
0.010000 G9 D9 0.0 G9
72 113.25 S9
274.673 113.25 M9
0.010000 G9 D9 0.0 G9
72 98.25 S9
353.884 98.25 M9
0.010000 G9 D9 0.0 G9
72 83.25 S9
296.631 83.25 M9
0.010000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(80) 0 72 60 TXC
(|) 0 100.8 72 TXC
(82) 0 100.8 60 TXC
(|) 0 129.6 72 TXC
(84) 0 129.6 60 TXC
(|) 0 158.4 72 TXC
(86) 0 158.4 60 TXC
(|) 0 187.2 72 TXC
(88) 0 187.2 60 TXC
(|) 0 216 72 TXC
(90) 0 216 60 TXC
(|) 0 244.8 72 TXC
(92) 0 244.8 60 TXC
(|) 0 273.6 72 TXC
(94) 0 273.6 60 TXC
(|) 0 302.4 72 TXC
(96) 0 302.4 60 TXC
(|) 0 331.2 72 TXC
(98) 0 331.2 60 TXC
(|) 0 360 72 TXC
(100) 0 360 60 TXC
(|) -90 72 72 TXC
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 252 
L9
( Conditional Branch Prediction Accuracy (%)) 0 360 47 TXR
() 90 41.5 252 TXR
(doduc) 0 21.6 237 TXL
(eqntott) 0 21.6 222 TXL
(espress) 0 21.6 207 TXL
(fpppp) 0 21.6 192 TXL
(gcc) 0 21.6 177 TXL
(li) 0 21.6 162 TXL
(mat300) 0 21.6 147 TXL
(nasa7) 0 21.6 132 TXL
(spice) 0 21.6 117 TXL
(tomcatv) 0 21.6 102 TXL
(average) 0 21.6 87 TXL
() 0 21.6 226.5 TXL
() 0 21.6 211.5 TXL
() 0 21.6 196.5 TXL
() 0 21.6 181.5 TXL
() 0 21.6 166.5 TXL
() 0 21.6 151.5 TXL
() 0 21.6 136.5 TXL
() 0 21.6 121.5 TXL
() 0 21.6 106.5 TXL
() 0 21.6 91.5 TXL
() 0 21.6 76.5 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
initclip 
%%EndDocument
 @endspecial 395 1152 a Fg(Figure)11 b(13:)18 b(Combined)12
b(Predictor)f(Performance)g(by)h(Benchmark)167 1288 y(One)17
b(combination)f(of)h(branch)f(predictors)h(that)g(is)g(useful)g(is)g
(bimodal/gshare.)32 b(In)16 b(this)h(com-)94 1353 y(bination,)h(global)f
(information)f(can)i(be)g(used)f(if)g(it)h(is)g(worthwhile,)g(otherwise)f
(the)g(usual)h(branch)94 1418 y(direction)c(as)i(predicted)e(by)h(the)g
(bimodal)f(scheme)i(can)f(be)g(used.)27 b(Here,)16 b(we)f(assume)h(gshare)f
(uses)94 1483 y(the)g(same)h(number)f(of)g(history)g(and)h(address)g(bits.)28
b(This)16 b(assumption)g(maximizes)g(the)f(amount)g(of)94 1548
y(global)9 b(information.)16 b(Diluting)8 b(the)i(branch)f(address)h
(information)e(is)i(less)g(of)f(a)h(concern)g(because)g(the)94
1614 y(bimodal)g(prediction)g(can)h(always)g(be)g(used.)18
b(Similarly)m(,)10 b(gshare)h(performs)f(signi\256cantly)g(better)g(here)94
1679 y(than)f(gselect)g(since)h(it)f(uses)h(more)e(global)h(information.)16
b(Figure)8 b(13)h(shows)h(how)f(the)g(bimodal/gshare)94 1744
y(combination)16 b(works)g(on)h(the)g(SPEC'89)f(benchmarks.)31
b(Here,)18 b(all)f(the)g(benchmarks)f(were)h(run)f(to)94 1809
y(completion.)23 b(Also,)16 b(each)e(predictor)f(array)h(has)h(1K)f
(counters.)24 b(Thus,)16 b(the)e(combined)g(predictor)g(is)94
1874 y(actually)g(3)g(times)g(as)h(lar)o(ge.)24 b(As)14 b(the)h(graph)e
(shows,)j(the)e(combined)g(predictor)f(always)i(does)f(better)94
1940 y(than)e(either)h(predictor)f(alone.)20 b(For)12 b(example,)h(with)g
(eqntott,)f(gshare)h(is)h(much)e(more)h(ef)o(fective)f(than)94
2005 y(bimodal)17 b(and)g(bimodal/gshare)g(matches)g(the)h(performance)e(of)h
(gshare.)33 b(Figure)17 b(14)g(shows)h(how)94 2070 y(often)f(each)i
(predictor)e(was)i(used)g(in)f(the)g(bimodal/gshare)g(combined)f(predictor)h
(on)g(these)g(same)94 2135 y(runs.)31 b(For)16 b(these)h(sizes,)j(the)c
(bimodal)g(predictor)g(is)h(typically)f(used)i(more)e(often.)31
b(However)n(,)18 b(for)94 2200 y(eqntott,)f(the)f(gshare)g(predictor)f(is)i
(more)f(often)f(used.)31 b(Again)16 b(the)g(choice)g(of)g(predictors)f(is)i
(made)94 2265 y(branch)c(by)g(branch.)21 b(In)12 b(any)i(one)f(benchmark,)g
(many)h(branches)f(may)g(use)h(the)f(bimodal)g(prediction)94
2331 y(while)i(other)h(branches)f(use)i(gshare.)29 b(Figure)14
b(15)i(shows)h(how)e(using)h(bimodal/gshare)f(ef)o(fects)h(the)94
2396 y(number)f(of)h(instructions)g(between)g(misspredicted)g(branches.)31
b(The)16 b(combination)g(increases)h(this)94 2461 y(measure)d
(signi\256cantly)f(for)g(some)h(of)f(the)h(benchmarks,)g(especially)g(some)g
(of)f(the)h(less)g(predictable)94 2526 y(benchmarks)e(like)g(gcc.)167
2591 y(Figure)k(16)g(shows)h(the)g(combined)f(predictor)g(accuracy)h(for)e(a)
i(range)g(of)f(predictor)f(sizes.)32 b(As)94 2657 y(earlier)n(,)17
b(only)f(the)g(average)h(accuracy)f(across)h(the)f(SPEC'89)g(benchmarks)h
(run)e(for)h(10M)h(instruc-)94 2722 y(tions)e(is)h(shown.)28
b(In)15 b(this)h(chart,)g(we)g(choose)g(to)f(display)h(a)f(bimodal/gshare)g
(predictor)g(where)g(the)969 2866 y(14)p eop
%%Page: 15 19
bop 321 1095 a @beginspecial @setspecial
%%BeginDocument: bpfrac1kd.psf
-36.000000 -54.000000 translate
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 237 S9
[] 4.800000 SL
325.473 237 M9
0.003000 G9 D9 0.0 G9
72 222 S9
173.246 222 M9
0.003000 G9 D9 0.0 G9
72 207 S9
258.777 207 M9
0.003000 G9 D9 0.0 G9
72 192 S9
290.848 192 M9
0.003000 G9 D9 0.0 G9
72 177 S9
276.776 177 M9
0.003000 G9 D9 0.0 G9
72 162 S9
273.173 162 M9
0.003000 G9 D9 0.0 G9
72 147 S9
359.999 147 M9
0.003000 G9 D9 0.0 G9
72 132 S9
355.529 132 M9
0.003000 G9 D9 0.0 G9
72 117 S9
230.891 117 M9
0.003000 G9 D9 0.0 G9
72 102 S9
340.513 102 M9
0.003000 G9 D9 0.0 G9
72 87 S9
288.522 87 M9
0.003000 G9 D9 0.0 G9
initclip 
10 /Helvetica SetTxt
(|) 0 72 72 TXC
(0) 0 72 60 TXC
(|) 0 129.6 72 TXC
(20) 0 129.6 60 TXC
(|) 0 187.2 72 TXC
(40) 0 187.2 60 TXC
(|) 0 244.8 72 TXC
(60) 0 244.8 60 TXC
(|) 0 302.4 72 TXC
(80) 0 302.4 60 TXC
(|) 0 360 72 TXC
(100) 0 360 60 TXC
(|) -90 72 72 TXC
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 252 
L9
( Fraction Predictions from bimodal (%)) 0 360 47 TXR
() 90 41.5 252 TXR
(doduc) 0 14.4 237 TXL
(eqntott) 0 14.4 222 TXL
(espress) 0 14.4 207 TXL
(fpppp) 0 14.4 192 TXL
(gcc) 0 14.4 177 TXL
(li) 0 14.4 162 TXL
(mat300) 0 14.4 147 TXL
(nasa7) 0 14.4 132 TXL
(spice) 0 14.4 117 TXL
(tomcatv) 0 14.4 102 TXL
(average) 0 14.4 87 TXL
() 0 14.4 226.5 TXL
() 0 14.4 211.5 TXL
() 0 14.4 196.5 TXL
() 0 14.4 181.5 TXL
() 0 14.4 166.5 TXL
() 0 14.4 151.5 TXL
() 0 14.4 136.5 TXL
() 0 14.4 121.5 TXL
() 0 14.4 106.5 TXL
() 0 14.4 91.5 TXL
() 0 14.4 76.5 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
initclip 
%%EndDocument
 @endspecial 345 1256 a Fg(Figure)11 b(14:)18 b(bimodal/gshare)12
b(Predictor)f(Performance)g(by)h(Benchmark)321 2466 y @beginspecial
@setspecial
%%BeginDocument: runl1kd.psf
-36.000000 -54.000000 translate
6 SetSym
189.787 239.727 S9
[] 4.800000 SL
161.086 284.727 189.433 284.727 
0.800000 G9 L9 0.000000 G9
10 /Helvetica SetTxt
( bimodal) 0 202.937 281.727 TXL
6 SetSym
180.228 235.636 S9
[] 4.800000 SL
161.086 271.727 189.433 271.727 
0.500000 G9 L9 0.000000 G9
10 /Helvetica SetTxt
( gshare) 0 202.937 268.727 TXL
6 SetSym
201.08 231.545 S9
[] 4.800000 SL
161.086 258.727 189.433 258.727 
0.010000 G9 L9 0.000000 G9
10 /Helvetica SetTxt
( bimodal/gshare) 0 202.937 255.727 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 239.727 S9
[] 4.800000 SL
189.787 239.727 M9
0.800000 G9 D9 0.0 G9
72 223.364 S9
103.171 223.364 M9
0.800000 G9 D9 0.0 G9
72 207 S9
138.804 207 M9
0.800000 G9 D9 0.0 G9
72 190.636 S9
252.667 190.636 M9
0.800000 G9 D9 0.0 G9
72 174.273 S9
125.145 174.273 M9
0.800000 G9 D9 0.0 G9
72 157.909 S9
125.525 157.909 M9
0.800000 G9 D9 0.0 G9
72 141.545 S9
295.89 141.545 M9
0.800000 G9 D9 0.0 G9
72 125.182 S9
260.228 125.182 M9
0.800000 G9 D9 0.0 G9
72 108.818 S9
176.047 108.818 M9
0.800000 G9 D9 0.0 G9
72 92.4545 S9
336.964 92.4545 M9
0.800000 G9 D9 0.0 G9
72 235.636 S9
[] 4.800000 SL
180.228 235.636 M9
0.500000 G9 D9 0.0 G9
72 219.273 S9
143.649 219.273 M9
0.500000 G9 D9 0.0 G9
72 202.909 S9
151.741 202.909 M9
0.500000 G9 D9 0.0 G9
72 186.545 S9
262.567 186.545 M9
0.500000 G9 D9 0.0 G9
72 170.182 S9
120.566 170.182 M9
0.500000 G9 D9 0.0 G9
72 153.818 S9
152.368 153.818 M9
0.500000 G9 D9 0.0 G9
72 137.455 S9
295.75 137.455 M9
0.500000 G9 D9 0.0 G9
72 121.091 S9
259.511 121.091 M9
0.500000 G9 D9 0.0 G9
72 104.727 S9
188.148 104.727 M9
0.500000 G9 D9 0.0 G9
72 88.3636 S9
342.183 88.3636 M9
0.500000 G9 D9 0.0 G9
72 231.545 S9
[] 4.800000 SL
201.08 231.545 M9
0.010000 G9 D9 0.0 G9
72 215.182 S9
143.733 215.182 M9
0.010000 G9 D9 0.0 G9
72 198.818 S9
164.378 198.818 M9
0.010000 G9 D9 0.0 G9
72 182.455 S9
277.949 182.455 M9
0.010000 G9 D9 0.0 G9
72 166.091 S9
140.281 166.091 M9
0.010000 G9 D9 0.0 G9
72 149.727 S9
167.343 149.727 M9
0.010000 G9 D9 0.0 G9
72 133.364 S9
295.89 133.364 M9
0.010000 G9 D9 0.0 G9
72 117 S9
262.724 117 M9
0.010000 G9 D9 0.0 G9
72 100.636 S9
190.729 100.636 M9
0.010000 G9 D9 0.0 G9
72 84.2727 S9
344.911 84.2727 M9
0.010000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(10) 0 72 60 TXC
7 /Helvetica SetTxt
(|) 0 98.2635 72 TXC
(|) 0 113.627 72 TXC
(|) 0 124.527 72 TXC
(|) 0 132.982 72 TXC
(|) 0 139.89 72 TXC
(|) 0 145.731 72 TXC
(|) 0 150.791 72 TXC
(|) 0 155.253 72 TXC
10 /Helvetica SetTxt
(|) 0 159.245 72 TXC
(100) 0 159.245 60 TXC
7 /Helvetica SetTxt
(|) 0 185.509 72 TXC
(|) 0 200.872 72 TXC
(|) 0 211.773 72 TXC
(|) 0 220.227 72 TXC
(|) 0 227.136 72 TXC
(|) 0 232.976 72 TXC
(|) 0 238.036 72 TXC
(|) 0 242.499 72 TXC
10 /Helvetica SetTxt
(|) 0 246.491 72 TXC
(1000) 0 246.491 60 TXC
7 /Helvetica SetTxt
(|) 0 272.755 72 TXC
(|) 0 288.118 72 TXC
(|) 0 299.018 72 TXC
(|) 0 307.473 72 TXC
(|) 0 314.381 72 TXC
(|) 0 320.222 72 TXC
(|) 0 325.282 72 TXC
(|) 0 329.744 72 TXC
10 /Helvetica SetTxt
(|) 0 333.736 72 TXC
(10000) 0 333.736 60 TXC
7 /Helvetica SetTxt
(|) 0 360 72 TXC
10 /Helvetica SetTxt
(|) -90 72 72 TXC
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 252 
L9
( Instructions) 0 360 47 TXR
() 90 41.5 252 TXR
(doduc) 0 26.3812 235.636 TXL
(eqntott) 0 26.3812 219.273 TXL
(espress) 0 26.3812 202.909 TXL
(fpppp) 0 26.3812 186.545 TXL
(gcc) 0 26.3812 170.182 TXL
(li) 0 26.3812 153.818 TXL
(mat300) 0 26.3812 137.455 TXL
(nasa7) 0 26.3812 121.091 TXL
(spice) 0 26.3812 104.727 TXL
(tomcatv) 0 26.3812 88.3636 TXL
() 0 26.3812 225.136 TXL
() 0 26.3812 208.773 TXL
() 0 26.3812 192.409 TXL
() 0 26.3812 176.045 TXL
() 0 26.3812 159.682 TXL
() 0 26.3812 143.318 TXL
() 0 26.3812 126.955 TXL
() 0 26.3812 110.591 TXL
() 0 26.3812 94.2273 TXL
() 0 26.3812 77.8636 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
initclip 
%%EndDocument
 @endspecial 429 2627 a(Figure)f(15:)18 b(Instructions)11 b(between)i
(Misspredicted)g(Branches)969 2866 y(15)p eop
%%Page: 16 20
bop 321 992 a @beginspecial @setspecial
%%BeginDocument: combo.psf
-36.000000 -54.000000 translate
6 SetSym
<01> 201.314 135.529 SY
46.1373 45.4659 S9
[] 0.600000 SL
206.314 135.529 234.66 135.529 
0.002000 G9 L9 0.000000 G9
<01> 239.66 135.529 SY
10 /Helvetica SetTxt
( bimodalN/gshareN+1) 0 248.164 132.529 TXL
6 SetSym
<04> 201.314 122.529 SY
227.176 257.785 S9
[] 0.600000 SL
206.314 122.529 234.66 122.529 
0.001000 G9 L9 0.000000 G9
<04> 239.66 122.529 SY
10 /Helvetica SetTxt
( local/gshare) 0 248.164 119.529 TXL
6 SetSym
<08> 201.314 109.529 SY
-5.58823 -22.2459 S9
[] 0.600000 SL
206.314 109.529 234.66 109.529 
0.006000 G9 L9 0.000000 G9
<08> 239.66 109.529 SY
10 /Helvetica SetTxt
( gselect-best) 0 248.164 106.529 TXL
6 SetSym
<02> 201.314 96.5294 SY
72 99.2647 S9
[] 0.600000 SL
206.314 96.5294 234.66 96.5294 
0.003000 G9 L9 0.000000 G9
<02> 239.66 96.5294 SY
10 /Helvetica SetTxt
( bimodal) 0 248.164 93.5294 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
46.1373 45.4659 S9
[] 0.600000 SL
97.8627 163.385 M9
149.588 221.868 M9
201.314 252.519 M9
253.039 263.802 M9
304.765 269.543 M9
356.49 271.04 M9
0.002000 G9 D9 0.0 G9
227.176 257.785 S9
[] 0.600000 SL
283.297 270.915 M9
338.953 278.553 M9
394.235 282.363 M9
449.207 285.734 M9
503.919 286.02 M9
0.001000 G9 D9 0.0 G9
-5.58823 -22.2459 S9
[] 0.600000 SL
46.1373 76.4471 M9
97.8627 153.131 M9
149.588 204.488 M9
201.314 234.28 M9
253.039 249.541 M9
304.765 256.303 M9
356.49 259.382 M9
408.216 260.68 M9
0.006000 G9 D9 0.0 G9
72 99.2647 S9
[] 0.600000 SL
97.8627 137.224 M9
123.725 157.608 M9
149.588 169.956 M9
175.451 179.632 M9
201.314 182.577 M9
227.176 187.043 M9
253.039 187.528 M9
278.902 187.806 M9
304.765 189.068 M9
330.627 189.114 M9
356.49 189.116 M9
0.003000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.1765 TXC
(89) 0 67 90.1765 TXR
(|) -90 72 114.353 TXC
(90) 0 67 111.353 TXR
(|) -90 72 135.529 TXC
(91) 0 67 132.529 TXR
(|) -90 72 156.706 TXC
(92) 0 67 153.706 TXR
(|) -90 72 177.882 TXC
(93) 0 67 174.882 TXR
(|) -90 72 199.059 TXC
(94) 0 67 196.059 TXR
(|) -90 72 220.235 TXC
(95) 0 67 217.235 TXR
(|) -90 72 241.412 TXC
(96) 0 67 238.412 TXR
(|) -90 72 262.588 TXC
(97) 0 67 259.588 TXR
(|) -90 72 283.765 TXC
(98) 0 67 280.765 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<01> 46.1373 45.4659 SY
<01> 97.8627 163.385 SY
<01> 149.588 221.868 SY
<01> 201.314 252.519 SY
<01> 253.039 263.802 SY
<01> 304.765 269.543 SY
<01> 356.49 271.04 SY
<04> 227.176 257.785 SY
<04> 283.297 270.915 SY
<04> 338.953 278.553 SY
<04> 394.235 282.363 SY
<04> 449.207 285.734 SY
<04> 503.919 286.02 SY
<08> -5.58823 -22.2459 SY
<08> 46.1373 76.4471 SY
<08> 97.8627 153.131 SY
<08> 149.588 204.488 SY
<08> 201.314 234.28 SY
<08> 253.039 249.541 SY
<08> 304.765 256.303 SY
<08> 356.49 259.382 SY
<08> 408.216 260.68 SY
<02> 72 99.2647 SY
<02> 97.8627 137.224 SY
<02> 123.725 157.608 SY
<02> 149.588 169.956 SY
<02> 175.451 179.632 SY
<02> 201.314 182.577 SY
<02> 227.176 187.043 SY
<02> 253.039 187.528 SY
<02> 278.902 187.806 SY
<02> 304.765 189.068 SY
<02> 330.627 189.114 SY
<02> 356.49 189.116 SY
initclip 
%%EndDocument
 @endspecial 467 1152 a Fg(Figure)11 b(16:)18 b(Combined)12
b(Predictor)f(Performance)g(by)h(Size)94 1288 y(gshare)h(array)f(contains)i
(twice)f(as)g(many)g(counters)g(\(bimodalN/gshareN+1\).)19
b(This)14 b(allows)f(a)g(more)94 1353 y(direct)18 b(comparison)g(to)h
(gselect-best)g(since)g(the)g(total)f(predictor)g(size)h(is)g(an)g(integral)f
(number)g(of)94 1418 y(bytes.)27 b(Predictor)13 b(bimodalN/gshareN+1)i(also)g
(has)h(slightly)e(better)h(performance)f(since)h(the)h(pre-)94
1483 y(dictor)c(selection)i(array)f(cost)g(is)h(amortized)f(over)g(more)g
(predictor)f(counters.)21 b(The)14 b(performance)e(of)94 1548
y(bimodalN/gshareN+1)c(is)i(signi\256cantly)f(better)g(than)h(gselect-best.)
17 b(The)10 b(1KB)g(combined)f(predictor)94 1614 y(has)k(nearly)f(the)g(same)
h(performance)e(as)i(a)f(16KB)h(gselect-best)f(predictor)m(.)167
1679 y(Figure)k(16)g(also)h(shows)g(the)g(performance)e(of)h(a)h(combined)f
(local/gshare)g(predictor)g(where)g(it)94 1744 y(outperforms)8
b(bimodal/gshare.)16 b(For)9 b(this)h(plot,)g(all)f(the)h(local/gshare)f
(arrays)g(have)h(the)g(same)g(number)94 1809 y(of)i(entries.)20
b(For)13 b(sizes)h(of)e(2KB)h(and)g(lar)o(ger)n(,)g(the)g(local/gshare)g
(predictor)f(has)h(better)g(accuracy)g(than)94 1874 y(bimodalN/gshareN+1.)j
(For)10 b(lar)o(ge)f(arrays)h(this)g(accuracy)g(approaches)g(98.1\045)h
(correct.)17 b(This)10 b(result)94 1940 y(is)15 b(as)g(we)f(would)g(expect)h
(since)g(lar)o(ge)f(local)h(predictors)f(subsume)h(the)f(information)f
(available)h(to)h(a)94 2005 y(bimodal)c(predictor)m(.)94 2182
y Fh(9)71 b(Conclusions)94 2298 y Fg(In)11 b(this)h(paper)n(,)g(we)g(have)g
(presented)g(two)g(new)g(methods)f(for)h(improving)e(branch)i(prediction)e
(perfor)o(-)94 2363 y(mance.)18 b(First,)13 b(we)f(showed)h(that)f(using)h
(the)f(bit-wise)g(exclusive)h(OR)g(of)f(the)g(global)g(branch)g(history)94
2429 y(and)e(the)g(branch)g(address)g(to)g(access)i(predictor)d(counters)h
(results)g(in)g(better)g(performance)e(for)i(a)g(given)94 2494
y(counter)j(array)h(size.)24 b(W)l(e)14 b(also)g(showed)h(that)e(the)h
(advantages)h(of)e(multiple)h(branch)f(predictors)h(can)94
2559 y(be)h(combined)f(by)g(providing)g(multiple)g(predictors)g(and)h(by)f
(keeping)h(track)f(of)g(which)h(predictor)f(is)94 2624 y(more)j(accurate)i
(for)e(the)h(current)g(branch.)35 b(These)20 b(methods)e(permit)f
(construction)h(of)g(predictors)94 2689 y(that)d(are)g(more)g(accurate)g(for)
g(a)g(given)g(size)h(than)f(previously)g(known)g(methods.)27
b(Also,)16 b(combined)969 2866 y(16)p eop
%%Page: 17 21
bop 94 83 a Fg(predictors)11 b(using)i(local)f(and)h(global)f(branch)g
(information)e(reach)j(a)f(prediction)g(accuracy)g(of)g(98.1\045)94
148 y(as)k(compared)g(to)f(97.1\045)i(for)e(the)h(previously)f(most)h
(accurate)g(known)f(scheme.)29 b(The)17 b(approaches)94 213
y(presented)9 b(here)f(should)h(be)g(increasingly)f(useful)h(as)g(machine)g
(designers)g(attempt)f(to)h(take)g(advantage)94 278 y(of)i(instruction)g
(level)h(parallelism)f(and)g(miss-predicted)g(branches)h(become)g(a)g
(critical)f(performance)94 343 y(bottleneck.)94 520 y Fh(10)71
b(Suggestions)20 b(for)f(Futur)o(e)g(W)l(ork)94 637 y Fg(There)10
b(are)g(a)h(number)e(of)h(ways)h(this)f(study)g(could)g(be)h(extended)f(to)g
(possibly)g(\256nd)g(more)g(accurate)g(and)94 702 y(less)15
b(costly)g(branch)g(predictors.)25 b(First,)15 b(there)g(are)f(a)h(lar)o(ge)g
(number)f(of)g(parameters)h(such)g(as)g(sizes,)94 767 y(associativities,)j
(and)f(pipeline)f(costs)h(that)g(were)f(not)g(fully)g(explored)g(here.)31
b(Careful)16 b(exploration)94 832 y(of)j(this)g(space)h(might)f(yield)g
(better)g(predictors.)39 b(Second,)22 b(other)d(sources)h(of)f(information)e
(such)94 898 y(as)f(whether)f(the)g(branch)h(tar)o(get)f(is)g(forward)g(or)g
(backward)g(might)g(be)h(usefully)f(added)g(to)h(increase)94
963 y(accuracy)m(.)33 b(Third,)19 b(the)e(typically)g(sparse)h(branch)f
(history)g(might)f(be)i(compressed)f(to)h(reduce)f(the)94 1028
y(number)9 b(of)h(counters)f(needed.)18 b(Finally)m(,)10 b(a)g(compiler)f
(with)h(pro\256le)f(support)h(might)f(be)h(able)g(to)g(reduce)94
1093 y(or)i(eliminate)g(the)g(need)h(for)f(branch)g(predictors)g(as)h
(described)g(here.)18 b(For)12 b(example,)h(previous)f(work)94
1158 y(has)k(shown)h(that)f(using)g(pro\256le)g(information)e(to)i(set)h(a)f
(likely-taken)g(bit)f(in)i(the)f(branch)g(results)g(in)94 1224
y(accuracy)g(close)g(to)g(that)f(of)h(the)f(bimodal)g(scheme.)30
b(Thus,)17 b(for)e(code)h(optimized)f(in)h(this)g(way)m(,)h(the)94
1289 y(bimodal)g(predictor)f(in)i(the)g(bimodal/gshare)f(scheme)h(might)f(be)
h(unnecessary)m(.)34 b(More)18 b(elaborate)94 1354 y(optimization)12
b(might)g(also)i(eliminate)e(the)h(need)g(for)g(the)g(gshare)g(predictor)f
(as)h(well.)21 b(This)13 b(might)g(be)94 1419 y(done)h(with)g(either)g(more)g
(careful)f(inspection)i(of)e(branch)h(conditions)g(or)g(more)g(elaborate)g
(pro\256ling)94 1484 y(of)k(typical)h(branch)g(patterns.)38
b(For)18 b(example,)j(branches)f(with)e(correlated)h(conditions)f(might)h(be)
94 1549 y(detected)f(with)g(semantic)g(analysis)h(or)f(by)g(more)g(elaborate)
g(pro\256ling)f(that)h(could)g(detect)g(branch)94 1615 y(correlation)9
b(dynamically)m(.)16 b(This)11 b(information)d(might)h(then)h(be)g(used)h(to)
f(duplicate)f(or)h(restructure)f(the)94 1680 y(branches)g(so)g(that)g(a)h
(simpler)e(branch)h(prediction)f(method)h(could)g(take)g(advantage)g(of)f
(the)i(correlation.)94 1745 y(Furthermore,)i(branch)g(patterns)h(caused)h(by)
f(loops)g(might)f(be)h(exploited)g(by)g(careful)f(unrolling)g(that)94
1810 y(takes)18 b(advantage)g(of)g(the)g(typical)g(iteration)f(count)h
(detected)g(either)f(semantically)h(or)g(with)f(more)94 1875
y(elaborate)12 b(pro\256ling.)94 2052 y Fh(A)70 b(Appendix)94
2169 y Fg(The)14 b(local)g(branch)f(prediction)g(scheme)i(has)f(a)g(number)f
(of)h(variations)f(that)h(were)g(not)f(discussed)i(in)94 2234
y(the)c(Section)h(4.)18 b(In)11 b(this)h(appendix,)g(we)g(will)f(discuss)i
(two)f(variations)f(and)h(show)g(that)g(the)f(combined)94 2299
y(predictor)18 b(has)j(better)e(performance)f(than)i(these)g(alternatives.)40
b(First,)21 b(similarly)e(to)h(the)f(gselect)94 2364 y(scheme,)13
b(it)f(is)h(possible)g(to)f(index)g(the)g(counter)g(array)g(with)g(both)g
(the)g(branch)g(address)h(and)g(the)f(local)94 2430 y(history)m(.)29
b(Again,)17 b(there)f(are)g(a)h(lar)o(ge)f(number)f(of)h(possibilities.)30
b(Figure)16 b(17)g(shows)h(the)f(family)f(of)94 2495 y(performance)h(curves)h
(where)h(the)f(number)g(of)g(history)g(bits)g(used)h(to)f(index)g(the)h
(counter)f(array)g(is)94 2560 y(held)c(constant.)20 b(For)12
b(example,)i(local-2h)e(implies)h(that)g(there)f(are)h(2)g(history)g(bits)g
(used)g(to)g(index)g(the)94 2625 y(counter)j(array)g(and)g(the)h(remaining)f
(index)g(bits)h(come)f(from)g(the)g(branch)h(address.)31 b(W)l(e)17
b(keep)g(the)94 2690 y(assumption)g(that)g(the)g(number)f(of)h(history)f
(array)h(and)g(counter)f(array)h(entries)g(are)g(the)g(same.)32
b(As)969 2866 y(17)p eop
%%Page: 18 22
bop 321 992 a @beginspecial @setspecial
%%BeginDocument: papsize.psf
-36.000000 -54.000000 translate
6 SetSym
<04> 278.902 201.6 SY
10 /Helvetica SetTxt
( bimodal/gshare) 0 292.406 198.6 TXL
6 SetSym
<0a> 278.902 188.6 SY
10 /Helvetica SetTxt
( local) 0 292.406 185.6 TXL
6 SetSym
<0e> 278.902 175.6 SY
10 /Helvetica SetTxt
( local-2h) 0 292.406 172.6 TXL
6 SetSym
<0e> 278.902 162.6 SY
10 /Helvetica SetTxt
( local-4h) 0 292.406 159.6 TXL
6 SetSym
<0e> 278.902 149.6 SY
10 /Helvetica SetTxt
( local-6h) 0 292.406 146.6 TXL
6 SetSym
<0e> 278.902 136.6 SY
10 /Helvetica SetTxt
( local-8h) 0 292.406 133.6 TXL
6 SetSym
<0e> 278.902 123.6 SY
10 /Helvetica SetTxt
( local-10h) 0 292.406 120.6 TXL
6 SetSym
<0e> 278.902 110.6 SY
10 /Helvetica SetTxt
( local-12h) 0 292.406 107.6 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
-16.3222 -96.1906 S9
[] 0.600000 SL
35.4036 22.0003 M9
87.1287 147.546 M9
138.854 215.096 M9
190.58 248.653 M9
242.305 264.156 M9
294.031 270.932 M9
345.756 274.409 M9
397.482 276.796 M9
449.207 277.336 M9
D9
35.4036 -43.7803 S9
97.8627 108.692 M9
157.914 203.246 M9
216.442 242.938 M9
273.92 258.235 M9
330.627 264.873 M9
386.748 268.236 M9
442.404 268.154 M9
D9
20.2745 -49.3877 S9
72 77.8234 M9
123.725 176.142 M9
175.451 215.947 M9
227.176 230.229 M9
278.902 235.043 M9
330.627 236.19 M9
382.353 236.341 M9
434.078 236.339 M9
D9
87.1287 98.9849 S9
138.854 194.211 M9
190.58 236.726 M9
242.305 252.913 M9
294.031 257.127 M9
345.756 258.214 M9
397.482 258.391 M9
449.207 258.402 M9
D9
149.588 200.164 S9
201.314 240.698 M9
253.039 255.697 M9
304.765 260.566 M9
356.49 261.942 M9
408.216 262.091 M9
459.941 262.186 M9
D9
209.64 241.165 S9
261.365 257.302 M9
313.091 262.22 M9
364.816 264.162 M9
416.542 264.568 M9
468.267 264.452 M9
D9
268.168 258.751 S9
319.893 264.156 M9
371.619 265.56 M9
423.344 265.348 M9
475.07 265.484 M9
D9
325.645 263.557 S9
377.371 265.026 M9
429.096 265.05 M9
480.822 264.523 M9
D9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 93.6 TXC
(89) 0 67 90.6 TXR
(|) -90 72 115.2 TXC
(90) 0 67 112.2 TXR
(|) -90 72 136.8 TXC
(91) 0 67 133.8 TXR
(|) -90 72 158.4 TXC
(92) 0 67 155.4 TXR
(|) -90 72 180 TXC
(93) 0 67 177 TXR
(|) -90 72 201.6 TXC
(94) 0 67 198.6 TXR
(|) -90 72 223.2 TXC
(95) 0 67 220.2 TXR
(|) -90 72 244.8 TXC
(96) 0 67 241.8 TXR
(|) -90 72 266.4 TXC
(97) 0 67 263.4 TXR
(|) -90 72 288 TXC
(98) 0 67 285 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Miss Rate (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<04> -16.3222 -96.1906 SY
<04> 35.4036 22.0003 SY
<04> 87.1287 147.546 SY
<04> 138.854 215.096 SY
<04> 190.58 248.653 SY
<04> 242.305 264.156 SY
<04> 294.031 270.932 SY
<04> 345.756 274.409 SY
<04> 397.482 276.796 SY
<04> 449.207 277.336 SY
<0a> 35.4036 -43.7803 SY
<0a> 97.8627 108.692 SY
<0a> 157.914 203.246 SY
<0a> 216.442 242.938 SY
<0a> 273.92 258.235 SY
<0a> 330.627 264.873 SY
<0a> 386.748 268.236 SY
<0a> 442.404 268.154 SY
<0e> 20.2745 -49.3877 SY
<0e> 72 77.8234 SY
<0e> 123.725 176.142 SY
<0e> 175.451 215.947 SY
<0e> 227.176 230.229 SY
<0e> 278.902 235.043 SY
<0e> 330.627 236.19 SY
<0e> 382.353 236.341 SY
<0e> 434.078 236.339 SY
<0e> 87.1287 98.9849 SY
<0e> 138.854 194.211 SY
<0e> 190.58 236.726 SY
<0e> 242.305 252.913 SY
<0e> 294.031 257.127 SY
<0e> 345.756 258.214 SY
<0e> 397.482 258.391 SY
<0e> 449.207 258.402 SY
<0e> 149.588 200.164 SY
<0e> 201.314 240.698 SY
<0e> 253.039 255.697 SY
<0e> 304.765 260.566 SY
<0e> 356.49 261.942 SY
<0e> 408.216 262.091 SY
<0e> 459.941 262.186 SY
<0e> 209.64 241.165 SY
<0e> 261.365 257.302 SY
<0e> 313.091 262.22 SY
<0e> 364.816 264.162 SY
<0e> 416.542 264.568 SY
<0e> 468.267 264.452 SY
<0e> 268.168 258.751 SY
<0e> 319.893 264.156 SY
<0e> 371.619 265.56 SY
<0e> 423.344 265.348 SY
<0e> 475.07 265.484 SY
<0e> 325.645 263.557 SY
<0e> 377.371 265.026 SY
<0e> 429.096 265.05 SY
<0e> 480.822 264.523 SY
initclip 
%%EndDocument
 @endspecial 409 1152 a Fg(Figure)12 b(17:)17 b(Local)c(Predictor)e
(Performance)g(with)h(Address)h(Bits)94 1288 y(the)j(\256gure)f(shows,)k
(reducing)c(the)h(number)g(of)f(history)h(bits)g(can)h(improve)e
(performance.)29 b(This)17 b(is)94 1353 y(mainly)c(due)i(to)f(the)g
(reduction)f(in)h(the)h(history)e(array)h(size)h(itself.)23
b(The)15 b(\256gure)e(also)i(shows)g(that)f(the)94 1418 y(bimodal/gshare)j
(predictor)g(performance)f(is)i(still)g(signi\256cantly)f(better)h(than)g
(the)f(dif)o(ferent)g(local)94 1483 y(predictor)12 b(variations.)22
b(In)13 b(addition,)h(the)g(bimodal/gshare)e(predictor)h(only)g(requires)g(a)
h(single)g(level)94 1548 y(of)e(array)f(access.)167 1614 y(Another)21
b(variation)h(in)g(the)g(local)g(scheme)h(is)f(to)g(change)h(the)f(number)f
(of)h(history)f(entries.)94 1679 y(Figure)14 b(18)i(shows)g(the)f(resulting)g
(performance.)26 b(The)16 b(notation)f(local-64HR)g(signi\256es)h(that)f
(there)94 1744 y(are)g(64)g(history)f(table)h(entries.)27 b(As)15
b(the)g(\256gure)g(shows,)i(using)e(the)g(same)g(number)g(of)f(history)h
(table)94 1809 y(entries)d(as)h(counters)f(is)h(usually)f(a)h(good)f(choice.)
94 1986 y Fh(Refer)o(ences)94 2103 y Fg([BL93])63 b(T)l(.)14
b(Ball)g(and)g(J.)g(R.)g(Larus.)22 b(Branch)14 b(prediction)e(for)h(free.)21
b(In)13 b Ff(Pr)n(oceedings)i(of)e(the)h(ACM)304 2168 y(SIGPLAN)f('93)f
(Confer)n(ence)h(on)g(Pr)n(ogramming)g(Language)g(Design)f(and)h(Implementa-)
304 2233 y(tion)p Fg(,)f(Albuquerque,)g(NM,)h(1993.)94 2340
y([FF92])70 b(J.)15 b(A.)g(Fisher)f(and)h(S.)g(M.)g(Freudenber)o(ger)m(.)24
b(Predicting)13 b(conditional)h(branch)g(directions)304 2405
y(from)g(previous)h(runs)g(of)g(a)h(program.)25 b(In)15 b Ff(Pr)n(oceedings)h
(of)g(ASPLOS)g(V)p Fg(,)g(pages)g(85\26195,)304 2470 y(Boston,)d(MA,)g
(October)f(1992.)94 2577 y([HCC89])24 b(W)-5 b(.)16 b(W)-5
b(.)15 b(Hwu,)i(T)l(.)f(M.)g(Conte,)g(and)f(P)-6 b(.)16 b(P)-6
b(.)15 b(Chang.)26 b(Comparing)14 b(software)g(and)h(hardware)304
2642 y(schemes)e(for)e(reducing)h(the)g(cost)h(of)f(branches.)18
b(In)12 b Ff(Pr)n(oc.)i(16th)e(Int.)g(Sym.)h(on)f(Computer)304
2707 y(Ar)n(chitectur)n(e)p Fg(,)i(pages)f(224\261233,)f(May)h(1989.)969
2866 y(18)p eop
%%Page: 19 23
bop 321 992 a @beginspecial @setspecial
%%BeginDocument: pagphsbsize.psf
-36.000000 -54.000000 translate
6 SetSym
<0e> 201.314 160.043 SY
48.4002 5.3687 S9
[] 0.600000 SL
206.314 160.043 234.66 160.043 
L9
<0e> 239.66 160.043 SY
10 /Helvetica SetTxt
( local-  64 HR) 0 248.164 157.043 TXL
6 SetSym
<0e> 201.314 147.043 SY
98.4415 122.049 S9
206.314 147.043 234.66 147.043 
L9
<0e> 239.66 147.043 SY
10 /Helvetica SetTxt
( local-256 HR) 0 248.164 144.043 TXL
6 SetSym
<0e> 201.314 134.043 SY
149.734 165.861 S9
206.314 134.043 234.66 134.043 
L9
<0e> 239.66 134.043 SY
10 /Helvetica SetTxt
( local-  1K HR) 0 248.164 131.043 TXL
6 SetSym
<0e> 201.314 121.043 SY
201.35 181.803 S9
206.314 121.043 234.66 121.043 
L9
<0e> 239.66 121.043 SY
10 /Helvetica SetTxt
( local-  4K HR) 0 248.164 118.043 TXL
6 SetSym
<0e> 201.314 108.043 SY
253.048 187.121 S9
206.314 108.043 234.66 108.043 
L9
<0e> 239.66 108.043 SY
10 /Helvetica SetTxt
( local-16K HR) 0 248.164 105.043 TXL
6 SetSym
<04> 201.314 95.0435 SY
35.4036 -53.8482 S9
[] 0.600000 SL
206.314 95.0435 234.66 95.0435 
0.004000 G9 L9 0.000000 G9
<04> 239.66 95.0435 SY
10 /Helvetica SetTxt
( local) 0 248.164 92.0435 TXL
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
48.4002 5.3687 S9
[] 0.600000 SL
76.3944 63.5455 M9
97.8627 111.883 M9
123.725 141.552 M9
159.735 164.349 M9
204.657 178.976 M9
254.046 190.669 M9
305.055 195.05 M9
356.572 195.691 M9
D9
98.4415 122.049 S9
124.874 168.524 M9
141.841 195.867 M9
157.914 214.659 M9
179.846 225.691 M9
213.196 232.112 M9
256.912 236.174 M9
305.913 238.073 M9
356.817 237.261 M9
D9
149.734 165.861 S9
175.741 211.383 M9
191.349 234.585 M9
203.576 248.984 M9
216.442 257.802 M9
235.502 262.744 M9
266.58 266.431 M9
309.159 268.67 M9
357.779 267.52 M9
D9
201.35 181.803 S9
227.249 229.534 M9
242.499 249.768 M9
253.618 261.723 M9
263.186 270.161 M9
273.92 274.43 M9
290.784 278.249 M9
319.893 280.684 M9
361.4 280.503 M9
D9
253.048 187.121 S9
278.92 235.193 M9
294.079 254.281 M9
304.91 266.043 M9
313.554 274.157 M9
321.417 278.104 M9
330.627 281.644 M9
345.756 283.955 M9
373.142 283.722 M9
D9
35.4036 -53.8482 S9
[] 0.600000 SL
97.8627 111.883 M9
157.914 214.659 M9
216.442 257.802 M9
273.92 274.43 M9
330.627 281.644 M9
386.748 285.3 M9
442.404 285.211 M9
0.004000 G9 D9 0.0 G9
initclip 
(|) 0 72 72 TXC
(32) 0 72 60 TXC
(|) 0 97.8627 72 TXC
(64) 0 97.8627 60 TXC
(|) 0 123.725 72 TXC
(128) 0 123.725 60 TXC
(|) 0 149.588 72 TXC
(256) 0 149.588 60 TXC
(|) 0 175.451 72 TXC
(512) 0 175.451 60 TXC
(|) 0 201.314 72 TXC
(1K) 0 201.314 60 TXC
(|) 0 227.176 72 TXC
(2K) 0 227.176 60 TXC
(|) 0 253.039 72 TXC
(4K) 0 253.039 60 TXC
(|) 0 278.902 72 TXC
(8K) 0 278.902 60 TXC
(|) 0 304.765 72 TXC
(16K) 0 304.765 60 TXC
(|) 0 330.627 72 TXC
(32K) 0 330.627 60 TXC
(|) 0 356.49 72 TXC
(64K) 0 356.49 60 TXC
(|) -90 72 72 TXC
(88) 0 67 69 TXR
(|) -90 72 95.4783 TXC
(89) 0 67 92.4783 TXR
(|) -90 72 118.957 TXC
(90) 0 67 115.957 TXR
(|) -90 72 142.435 TXC
(91) 0 67 139.435 TXR
(|) -90 72 165.913 TXC
(92) 0 67 162.913 TXR
(|) -90 72 189.391 TXC
(93) 0 67 186.391 TXR
(|) -90 72 212.87 TXC
(94) 0 67 209.87 TXR
(|) -90 72 236.348 TXC
(95) 0 67 233.348 TXR
(|) -90 72 259.826 TXC
(96) 0 67 256.826 TXR
(|) -90 72 283.304 TXC
(97) 0 67 280.304 TXR
() 0 216 28 TXC
[] 1.000000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
( Predictor Size (bytes)) 0 360 47 TXR
( Conditional Branch Prediction Accuracy (%)) 90 41.5 288 TXR
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
6 SetSym
<0e> 48.4002 5.3687 SY
<0e> 76.3944 63.5455 SY
<0e> 97.8627 111.883 SY
<0e> 123.725 141.552 SY
<0e> 159.735 164.349 SY
<0e> 204.657 178.976 SY
<0e> 254.046 190.669 SY
<0e> 305.055 195.05 SY
<0e> 356.572 195.691 SY
<0e> 98.4415 122.049 SY
<0e> 124.874 168.524 SY
<0e> 141.841 195.867 SY
<0e> 157.914 214.659 SY
<0e> 179.846 225.691 SY
<0e> 213.196 232.112 SY
<0e> 256.912 236.174 SY
<0e> 305.913 238.073 SY
<0e> 356.817 237.261 SY
<0e> 149.734 165.861 SY
<0e> 175.741 211.383 SY
<0e> 191.349 234.585 SY
<0e> 203.576 248.984 SY
<0e> 216.442 257.802 SY
<0e> 235.502 262.744 SY
<0e> 266.58 266.431 SY
<0e> 309.159 268.67 SY
<0e> 357.779 267.52 SY
<0e> 201.35 181.803 SY
<0e> 227.249 229.534 SY
<0e> 242.499 249.768 SY
<0e> 253.618 261.723 SY
<0e> 263.186 270.161 SY
<0e> 273.92 274.43 SY
<0e> 290.784 278.249 SY
<0e> 319.893 280.684 SY
<0e> 361.4 280.503 SY
<0e> 253.048 187.121 SY
<0e> 278.92 235.193 SY
<0e> 294.079 254.281 SY
<0e> 304.91 266.043 SY
<0e> 313.554 274.157 SY
<0e> 321.417 278.104 SY
<0e> 330.627 281.644 SY
<0e> 345.756 283.955 SY
<0e> 373.142 283.722 SY
<04> 35.4036 -53.8482 SY
<04> 97.8627 111.883 SY
<04> 157.914 214.659 SY
<04> 216.442 257.802 SY
<04> 273.92 274.43 SY
<04> 330.627 281.644 SY
<04> 386.748 285.3 SY
<04> 442.404 285.211 SY
initclip 
%%EndDocument
 @endspecial 164 1152 a Fg(Figure)11 b(18:)18 b(Local)13 b(Predictor)e
(Performance)g(with)h(V)-6 b(arying)12 b(Number)g(of)g(History)f(Registers)94
1288 y([JW89])60 b(N.)20 b(P)-6 b(.)20 b(Jouppi)g(and)g(D.)g(W)-5
b(.)21 b(W)l(all.)38 b(A)l(vailable)20 b(instruction-level)f(parallelism)g
(for)g(su-)304 1353 y(perscalar)d(and)h(superpipelined)g(machines.)31
b(In)16 b Ff(Pr)n(oceedings)j(of)e(ASPLOS)g(III)p Fg(,)f(pages)304
1418 y(272\261282,)c(Boston,)h(MA,)g(April)f(1989.)94 1525
y([Kil86])62 b(E.)18 b(A.)g(Killian.)31 b(In)17 b Ff(RISCompiler)g(and)g(C)h
(Pr)n(ogrammer)r(')-6 b(s)18 b(Guide)p Fg(.)32 b(MIPS)16 b(Computer)304
1590 y(Systems,)d(930)f(Arques)g(A)l(ve.,)i(Sunnyvale,)e(CA)h(94086,)f(1986.)
94 1697 y([LS84])68 b(J.K.L.)13 b(Lee)g(and)e(A.J.)i(Smith.)k(Branch)11
b(prediction)g(strategies)h(and)f(branch)h(tar)o(get)f(buf)o(fer)304
1762 y(design.)18 b Ff(Computer)p Fg(,)13 b(17\(1\),)f(January)g(1984.)94
1869 y([L)l(W93])53 b(M.)11 b(S.)g(Lam)h(and)e(R.)i(P)-6 b(.)12
b(W)n(ilson.)j(Limits)c(of)g(control)f(\257ow)g(on)h(parallelism.)k(In)c
Ff(Pr)n(oc.)h(20th)304 1934 y(Int.)g(Sym.)h(on)f(Computer)h(Ar)n(chitectur)n
(e)p Fg(,)h(May)f(1993.)94 2040 y([MH86])46 b(S.)12 b(McFarling)f(and)h(J.)g
(Hennessy)m(.)18 b(Reducing)12 b(the)g(cost)g(of)f(branches.)18
b(In)11 b Ff(Pr)n(oc.)i(13th)f(Int.)304 2106 y(Sym.)g(on)h(Computer)f(Ar)n
(chitectur)n(e)p Fg(,)j(pages)e(396\261403,)f(June)h(1986.)94
2212 y([PSR92])37 b(S.)13 b(T)l(.)h(Pan,)g(K.)g(So,)f(and)g(J.)h(T)l(.)h
(Rahmeh.)20 b(Improving)11 b(the)j(accuracy)f(of)f(dynamic)h(branch)304
2277 y(prediction)d(using)i(branch)f(correlation.)16 b(In)11
b Ff(Pr)n(oceedings)i(of)e(ASPLOS)h(V)p Fg(,)h(pages)f(76\26184,)304
2343 y(Boston,)h(MA,)g(October)f(1992.)94 2449 y([Sit93])70
b(R.)10 b(L.)i(Sites.)i(Alpha)c(AXP)g(architecture.)j Ff(Communications)d(of)
g(the)g(ACM)p Fg(,)i(36\(2\):33\26144,)304 2515 y(Feb.)g(1993.)94
2621 y([Smi81])45 b(J.)16 b(E)h(Smith.)27 b(A)16 b(study)g(of)f(branch)h
(prediction)f(strategies.)28 b(In)15 b Ff(Pr)n(oc.)j(8th)e(Int.)f(Sym.)i(on)
304 2686 y(Computer)12 b(Ar)n(chitectur)n(e)p Fg(,)i(pages)f(135\261148,)g
(May)f(1981.)969 2866 y(19)p eop
%%Page: 20 24
bop 94 83 a Fg([Smi91])45 b(M.)13 b(D.)h(Smith.)19 b(T)n(racing)13
b(with)f(pixie.)20 b(T)m(echnical)13 b(Report)g(CSL-TR-91-497,)f(Computer)304
148 y(Systems)g(Laboratory)m(,)g(Stanford)f(University)m(,)h(November)g
(1991.)94 254 y([SPE90])40 b(SPEC.)f Ff(The)20 b(SPEC)h(Benchmark)g(Report)p
Fg(.)40 b(W)l(aterside)21 b(Associates,)j(Fremont,)d(CA,)304
320 y(January)12 b(1990.)94 426 y([W)l(al91])47 b(D.)13 b(W)-5
b(.)15 b(W)l(all.)20 b(Limits)14 b(of)f(instruction-level)f(parallelism.)20
b(In)13 b Ff(Pr)n(oceedings)h(of)f(ASPLOS)304 492 y(IV)p Fg(,)f(pages)h
(176\261188,)g(Santa)f(Clara,)h(CA,)g(April)e(1991.)94 598
y([YP92])62 b(T)l(.)20 b(Y)-6 b(.)19 b(Y)-5 b(eh)18 b(and)h(Y)-6
b(.)19 b(N.)h(Patt.)35 b(Alternative)18 b(implementations)g(of)g(two-level)g
(adaptive)304 663 y(branch)h(prediction.)37 b(In)20 b Ff(Pr)n(oc.)h(19th)f
(Int.)f(Sym.)i(on)f(Computer)g(Ar)n(chitectur)n(e)p Fg(,)j(pages)304
729 y(124\261134,)12 b(May)h(1992.)94 835 y([YP93])62 b(T)l(.)16
b(Y)-6 b(.)15 b(Y)-5 b(eh)15 b(and)g(Y)-6 b(.)15 b(N.)h(Patt.)25
b(A)15 b(comparison)f(of)h(dynamic)g(branch)f(predictors)h(that)f(use)304
901 y(two)f(levels)g(of)g(branch)g(history)m(.)20 b(In)13 b
Ff(Pr)n(oc.)h(20th)f(Int.)g(Sym.)h(on)f(Computer)h(Ar)n(chitectur)n(e)p
Fg(,)304 966 y(pages)e(257\261266,)h(May)f(1993.)969 2866 y(20)p
eop
end
userdict /end-hook known{end-hook}if
%%EOF
%%Page: 21 25
BS
0 SI
15 /Times-Bold AF
24734 8205 MT
(WRL Research Reports)SH
10 /Times-Roman AF
9000 10807 MT
(``Titan System Manual.'')SH
34200 XM
(``MultiTitan: Four)
250 W( Architecture Papers.'')SH
9000 12202 MT
(Michael J. K. Nielsen.)SH
34200 XM
(Norman P. Jouppi, Jeremy Dion,)
3 W( David Boggs, Mich-)2 W
9000 13597 MT
(WRL Research Report 86/1, September 1986.)SH
35572 XM
(ael J. K. Nielsen.)SH
34200 14992 MT
(WRL Research Report 87/8, April 1988.)SH
9000 16293 MT
(``Global Register Allocation at Link Time.'')SH
9000 17688 MT
(David W. Wall.)SH
34200 XM
(``Fast Printed Circuit Board Routing.'')SH
9000 19083 MT
(WRL Research Report 86/3, October 1986.)SH
34200 XM
(Jeremy Dion.)SH
34200 20478 MT
(WRL Research Report 88/1, March 1988.)SH
9000 21779 MT
(``Optimal Finned Heat Sinks.'')SH
9000 23174 MT
(William R. Hamburgen.)SH
34200 XM
(``Compacting Garbage Collection)
261 W( with Ambiguous)262 W
9000 24569 MT
(WRL Research Report 86/4, October 1986.)SH
35572 XM
(Roots.'')SH
34200 25964 MT
(Joel F. Bartlett.)SH
9000 27265 MT
(``The Mahler Experience:)
415 W( Using an Intermediate)416 W
34200 27359 MT
(WRL Research Report 88/2, February 1988.)SH
10372 28660 MT
(Language as the Machine Description.'')SH
9000 30055 MT
(David W. Wall and Michael L. Powell.)SH
34200 XM
(``The Experimental Literature of The Internet:)
186 W( An)620 W
9000 31450 MT
(WRL Research Report 87/1, August 1987.)SH
35572 XM
(Annotated Bibliography.'')SH
34200 32845 MT
(Jeffrey C. Mogul.)SH
9000 34146 MT
(``The Packet Filter:  An Efficient)
281 W( Mechanism for)280 W
34200 34240 MT
(WRL Research Report 88/3, August 1988.)SH
10372 35541 MT
(User-level Network Code.'')SH
9000 36936 MT
(Jeffrey C. Mogul, Richard)
535 W( F. Rashid, Michael)536 W
34200 XM
(``Measured Capacity of an Ethernet:)
320 W( Myths)
892 W( and)321 W
10372 38331 MT
(J. Accetta.)SH
35572 XM
(Reality.'')SH
9000 39726 MT
(WRL Research Report 87/2, November 1987.)SH
34200 XM
(David R. Boggs, Jeffrey)
434 W( C. Mogul, Christopher)433 W
35572 41121 MT
(A. Kent.)SH
9000 42422 MT
(``Fragmentation Considered Harmful.'')SH
34200 42516 MT
(WRL Research Report 88/4, September 1988.)SH
9000 43817 MT
(Christopher A. Kent, Jeffrey C. Mogul.)SH
9000 45212 MT
(WRL Research Report 87/3, December 1987.)SH
34200 XM
(``Visa Protocols for Controlling)
95 W( Inter-Organizational)96 W
35572 46607 MT
(Datagram Flow:  Extended Description.'')SH
9000 47908 MT
(``Cache Coherence in Distributed Systems.'')SH
34200 48002 MT
(Deborah Estrin, Jeffrey)
379 W( C. Mogul, Gene Tsudik,)378 W
9000 49303 MT
(Christopher A. Kent.)SH
35572 49397 MT
(Kamaljit Anand.)SH
9000 50698 MT
(WRL Research Report 87/4, December 1987.)SH
34200 50792 MT
(WRL Research Report 88/5, December 1988.)SH
9000 53394 MT
(``Register Windows vs. Register Allocation.'')SH
34200 53488 MT
(``SCHEME->C A Portable Scheme-to-C Compiler.'')SH
9000 54789 MT
(David W. Wall.)SH
34200 54883 MT
(Joel F. Bartlett.)SH
9000 56184 MT
(WRL Research Report 87/5, December 1987.)SH
34200 56278 MT
(WRL Research Report 89/1, January 1989.)SH
9000 58880 MT
(``Editing Graphical Objects)
818 W( Using Procedural)817 W
34200 58974 MT
(``Optimal Group Distribution in Carry-Skip Ad-)448 W
10372 60275 MT
(Representations.'')SH
35572 60369 MT
(ders.'')SH
9000 61670 MT
(Paul J. Asente.)SH
34200 61764 MT
(Silvio Turrini.)SH
9000 63065 MT
(WRL Research Report 87/6, November 1987.)SH
34200 63159 MT
(WRL Research Report 89/2, February 1989.)SH
9000 65761 MT
(``The USENET Cookbook:)
692 W( an Experiment in)693 W
34200 65855 MT
(``Precise Robotic Paste Dot Dispensing.'')SH
10372 67156 MT
(Electronic Publication.'')SH
34200 67250 MT
(William R. Hamburgen.)SH
9000 68551 MT
(Brian K. Reid.)SH
34200 68645 MT
(WRL Research Report 89/3, February 1989.)SH
9000 69946 MT
(WRL Research Report 87/7, December 1987.)SH
31900 75600 MT
(21)SH
ES
%%Page: 22 26
BS
0 SI
10 /Times-Roman AF
5400 7886 MT
(``Simple and Flexible Datagram Access Controls for)82 W
30600 XM
(``Link-Time Code Modification.'')SH
6772 9281 MT
(Unix-based Gateways.'')SH
30600 XM
(David W. Wall.)SH
5400 10676 MT
(Jeffrey C. Mogul.)SH
30600 XM
(WRL Research Report 89/17, September 1989.)SH
5400 12071 MT
(WRL Research Report 89/4, March 1989.)SH
30600 13372 MT
(``Noise Issues in the ECL Circuit Family.'')SH
30600 14767 MT
(Jeffrey Y.F. Tang and J. Leon Yang.)SH
5400 14790 MT
(``Spritely NFS: Implementation and Performance)
137 W( of)138 W
30600 16162 MT
(WRL Research Report 90/1, January 1990.)SH
6772 16185 MT
(Cache-Consistency Protocols.'')SH
5400 17580 MT
(V. Srinivasan and Jeffrey C. Mogul.)SH
30600 18858 MT
(``Efficient Generation)
716 W( of Test Patterns Using)715 W
5400 18975 MT
(WRL Research Report 89/5, May 1989.)SH
31972 20253 MT
(Boolean Satisfiablilty.'')SH
30600 21648 MT
(Tracy Larrabee.)SH
5400 21671 MT
(``Available Instruction-Level Parallelism for)
193 W( Super-)192 W
30600 23043 MT
(WRL Research Report 90/2, February 1990.)SH
6772 23066 MT
(scalar and Superpipelined Machines.'')SH
5400 24461 MT
(Norman P. Jouppi and David W. Wall.)SH
30600 25739 MT
(``Two Papers on Test Pattern Generation.'')SH
5400 25856 MT
(WRL Research Report 89/7, July 1989.)SH
30600 27134 MT
(Tracy Larrabee.)SH
30600 28529 MT
(WRL Research Report 90/3, March 1990.)SH
5400 28552 MT
(``A Unified Vector/Scalar Floating-Point Architec-)276 W
6772 29947 MT
(ture.'')SH
30600 31225 MT
(``Virtual Memory vs. The File System.'')SH
5400 31342 MT
(Norman P.)
402 W( Jouppi, Jonathan Bertoni, and David)401 W
30600 32620 MT
(Michael N. Nelson.)SH
6772 32737 MT
(W. Wall.)SH
30600 34015 MT
(WRL Research Report 90/4, March 1990.)SH
5400 34132 MT
(WRL Research Report 89/8, July 1989.)SH
30600 36711 MT
(``Efficient Use)
72 W( of Workstations for Passive Monitor-)73 W
5400 36828 MT
(``Architectural and)
226 W( Organizational Tradeoffs in the)227 W
31972 38106 MT
(ing of Local Area Networks.'')SH
6772 38223 MT
(Design of the MultiTitan CPU.'')SH
30600 39501 MT
(Jeffrey C. Mogul.)SH
5400 39618 MT
(Norman P. Jouppi.)SH
30600 40896 MT
(WRL Research Report 90/5, July 1990.)SH
5400 41013 MT
(WRL Research Report 89/9, July 1989.)SH
30600 43592 MT
(``A One-Dimensional Thermal Model for the)
175 W( VAX)174 W
5400 43709 MT
(``Integration and Packaging)
327 W( Plateaus of Processor)326 W
31972 44987 MT
(9000 Multi Chip Units.'')SH
6772 45104 MT
(Performance.'')SH
30600 46382 MT
(John S. Fitch.)SH
5400 46499 MT
(Norman P. Jouppi.)SH
30600 47777 MT
(WRL Research Report 90/6, July 1990.)SH
5400 47894 MT
(WRL Research Report 89/10, July 1989.)SH
30600 50473 MT
(``1990 DECWRL/Livermore Magic Release.'')SH
5400 50590 MT
(``A 20-MIPS Sustained 32-bit CMOS)
159 W( Microproces-)160 W
30600 51868 MT
(Robert N. Mayo,)
19 W( Michael H. Arnold, Walter S. Scott,)20 W
6772 51985 MT
(sor with)
99 W( High Ratio of Sustained to Peak Perfor-)98 W
31972 53263 MT
(Don Stark, Gordon T. Hamachi.)SH
6772 53380 MT
(mance.'')SH
30600 54658 MT
(WRL Research Report 90/7, September 1990.)SH
5400 54775 MT
(Norman P. Jouppi and Jeffrey Y. F. Tang.)SH
5400 56170 MT
(WRL Research Report 89/11, July 1989.)SH
30600 57354 MT
(``Pool Boiling Enhancement Techniques for Water)
36 W( at)35 W
31972 58749 MT
(Low Pressure.'')SH
5400 58866 MT
(``The Distribution of Instruction-Level and)
115 W( Machine)116 W
30600 60144 MT
(Wade R. McGillis, John S.)
794 W( Fitch, William)795 W
6772 60261 MT
(Parallelism and Its Effect on Performance.'')SH
31972 61539 MT
(R. Hamburgen, Van P. Carey.)SH
5400 61656 MT
(Norman P. Jouppi.)SH
30600 62934 MT
(WRL Research Report 90/9, December 1990.)SH
5400 63051 MT
(WRL Research Report 89/13, July 1989.)SH
30600 65630 MT
(``Writing Fast X Servers for Dumb Color Frame)
13 W( Buf-)12 W
5400 65747 MT
(``Long Address Traces from)
660 W( RISC Machines:)659 W
31972 67025 MT
(fers.'')SH
6772 67142 MT
(Generation and Analysis.'')SH
30600 68420 MT
(Joel McCormack.)SH
5400 68537 MT
(Anita Borg, R.E.Kessler, Georgia Lazana, and)
59 W( David)60 W
30600 69815 MT
(WRL Research Report 91/1, February 1991.)SH
6772 69932 MT
(W. Wall.)SH
5400 71327 MT
(WRL Research Report 89/14, September 1989.)SH
28300 75600 MT
(22)SH
ES
%%Page: 23 27
BS
0 SI
10 /Times-Roman AF
9000 7886 MT
(``A Simulation Based Study of TLB Performance.'')SH
34200 XM
(``Cache Write Policies and Performance.'')SH
9000 9281 MT
(J. Bradley Chen, Anita Borg, Norman P. Jouppi.)SH
34200 XM
(Norman P. Jouppi.)SH
9000 10676 MT
(WRL Research Report 91/2, November 1991.)SH
34200 XM
(WRL Research Report 91/12, December 1991.)SH
34200 13372 MT
(``Packaging a 150 W Bipolar ECL Microprocessor.'')SH
9000 13395 MT
(``Analysis of Power Supply)
137 W( Networks in VLSI Cir-)138 W
34200 14767 MT
(William R. Hamburgen, John S. Fitch.)SH
10372 14790 MT
(cuits.'')SH
34200 16162 MT
(WRL Research Report 92/1, March 1992.)SH
9000 16185 MT
(Don Stark.)SH
9000 17580 MT
(WRL Research Report 91/3, April 1991.)SH
34200 18858 MT
(``Observing TCP Dynamics in Real Networks.'')SH
34200 20253 MT
(Jeffrey C. Mogul.)SH
34200 21648 MT
(WRL Research Report 92/2, April 1992.)SH
9000 22090 MT
(``TurboChannel T1 Adapter.'')SH
9000 23485 MT
(David Boggs.)SH
34200 24344 MT
(``Systems for Late Code Modification.'')SH
9000 24880 MT
(WRL Research Report 91/4, April 1991.)SH
34200 25739 MT
(David W. Wall.)SH
34200 27134 MT
(WRL Research Report 92/3, May 1992.)SH
9000 27576 MT
(``Procedure Merging with Instruction Caches.'')SH
9000 28971 MT
(Scott McFarling.)SH
34200 29830 MT
(``Piecewise Linear Models for Switch-Level)
71 W( Simula-)70 W
9000 30366 MT
(WRL Research Report 91/5, March 1991.)SH
35572 31225 MT
(tion.'')SH
34200 32620 MT
(Russell Kao.)SH
9000 33062 MT
(``Don't Fidget with Widgets, Draw!.'')SH
34200 34015 MT
(WRL Research Report 92/5, September 1992.)SH
9000 34457 MT
(Joel Bartlett.)SH
9000 35852 MT
(WRL Research Report 91/6, May 1991.)SH
34200 36711 MT
(``A Smart Frame Buffer.'')SH
34200 38106 MT
(Joel McCormack & Bob McNamara.)SH
9000 38548 MT
(``Pool Boiling)
11 W( on Small Heat Dissipating Elements in)10 W
34200 39501 MT
(WRL Research Report 93/1, January 1993.)SH
10372 39943 MT
(Water at Subatmospheric Pressure.'')SH
9000 41338 MT
(Wade R. McGillis, John S.)
794 W( Fitch, William)795 W
10372 42733 MT
(R. Hamburgen, Van P. Carey.)SH
9000 44128 MT
(WRL Research Report 91/7, June 1991.)SH
9000 46824 MT
(``Incremental, Generational)
517 W( Mostly-Copying Gar-)516 W
10372 48219 MT
(bage Collection in Uncooperative)
738 W( Environ-)739 W
10372 49614 MT
(ments.'')SH
9000 51009 MT
(G. May Yip.)SH
9000 52404 MT
(WRL Research Report 91/8, June 1991.)SH
9000 55100 MT
(``Interleaved Fin Thermal Connectors)
160 W( for Multichip)159 W
10372 56495 MT
(Modules.'')SH
9000 57890 MT
(William R. Hamburgen.)SH
9000 59285 MT
(WRL Research Report 91/9, August 1991.)SH
9000 61981 MT
(``Experience with a Software-defined Machine Ar-)227 W
10372 63376 MT
(chitecture.'')SH
9000 64771 MT
(David W. Wall.)SH
9000 66166 MT
(WRL Research Report 91/10, August 1991.)SH
9000 68862 MT
(``Network Locality at the Scale of Processes.'')SH
9000 70257 MT
(Jeffrey C. Mogul.)SH
9000 71652 MT
(WRL Research Report 91/11, November 1991.)SH
31900 75600 MT
(23)SH
ES
%%Page: 24 28
BS
0 SI
15 /Times-Bold AF
21716 8205 MT
(WRL Technical Notes)SH
10 /Times-Roman AF
5400 10807 MT
(``TCP/IP PrintServer: Print Server Protocol.'')SH
30600 XM
(``Systems for Late Code Modification.'')SH
5400 12202 MT
(Brian K. Reid and Christopher A. Kent.)SH
30600 XM
(David W. Wall.)SH
5400 13597 MT
(WRL Technical Note TN-4, September 1988.)SH
30600 XM
(WRL Technical Note TN-19, June 1991.)SH
5400 16293 MT
(``TCP/IP PrintServer:)
270 W( Server Architecture and Im-)271 W
30600 XM
(``Unreachable Procedures in)
416 W( Object-oriented Pro-)415 W
6772 17688 MT
(plementation.'')SH
31972 XM
(gramming.'')SH
5400 19083 MT
(Christopher A. Kent.)SH
30600 XM
(Amitabh Srivastava.)SH
5400 20478 MT
(WRL Technical Note TN-7, November 1988.)SH
30600 XM
(WRL Technical Note TN-21, November 1991.)SH
5400 23174 MT
(``Smart Code, Stupid Memory: A Fast X Server for)
30 W( a)29 W
30600 XM
(``Cache Replacement with Dynamic Exclusion'')SH
6772 24569 MT
(Dumb Color Frame Buffer.'')SH
30600 XM
(Scott McFarling.)SH
5400 25964 MT
(Joel McCormack.)SH
30600 XM
(WRL Technical Note TN-22, November 1991.)SH
5400 27359 MT
(WRL Technical Note TN-9, September 1989.)SH
30600 28660 MT
(``Boiling Binary)
225 W( Mixtures at Subatmospheric Pres-)226 W
5400 30055 MT
(``Why Aren't Operating Systems Getting)
165 W( Faster As)166 W
31972 XM
(sures'')SH
6772 31450 MT
(Fast As Hardware?'')SH
30600 XM
(Wade R. McGillis,)
795 W( John S. Fitch, William)794 W
5400 32845 MT
(John Ousterhout.)SH
31972 XM
(R. Hamburgen, Van P. Carey.)SH
5400 34240 MT
(WRL Technical Note TN-11, October 1989.)SH
30600 XM
(WRL Technical Note TN-23, January 1992.)SH
5400 36936 MT
(``Mostly-Copying Garbage Collection Picks)
595 W( Up)594 W
30600 XM
(``A Comparison)
100 W( of Acoustic and Infrared Inspection)101 W
6772 38331 MT
(Generations and C++.'')SH
31972 XM
(Techniques for Die Attach'')SH
5400 39726 MT
(Joel F. Bartlett.)SH
30600 XM
(John S. Fitch.)SH
5400 41121 MT
(WRL Technical Note TN-12, October 1989.)SH
30600 XM
(WRL Technical Note TN-24, January 1992.)SH
5400 43817 MT
(``Limits of Instruction-Level Parallelism.'')SH
30600 XM
(``TurboChannel Versatec Adapter'')SH
5400 45212 MT
(David W. Wall.)SH
30600 XM
(David Boggs.)SH
5400 46607 MT
(WRL Technical Note TN-15, December 1990.)SH
30600 XM
(WRL Technical Note TN-26, January 1992.)SH
5400 49303 MT
(``The Effect of)
177 W( Context Switches on Cache Perfor-)178 W
30600 XM
(``A Recovery Protocol For Spritely NFS'')SH
6772 50698 MT
(mance.'')SH
30600 XM
(Jeffrey C. Mogul.)SH
5400 52093 MT
(Jeffrey C. Mogul and Anita Borg.)SH
30600 XM
(WRL Technical Note TN-27, April 1992.)SH
5400 53488 MT
(WRL Technical Note TN-16, December 1990.)SH
30600 54789 MT
(``Electrical Evaluation Of The BIPS-0 Package'')SH
5400 56184 MT
(``MTOOL: A)
542 W( Method For)
146 W( Detecting Memory Bot-)145 W
30600 XM
(Patrick D. Boyle.)SH
6772 57579 MT
(tlenecks.'')SH
30600 XM
(WRL Technical Note TN-29, July 1992.)SH
5400 58974 MT
(Aaron Goldberg and John Hennessy.)SH
30600 60275 MT
(``Transparent Controls for Interactive Graphics'')SH
5400 60369 MT
(WRL Technical Note TN-17, December 1990.)SH
30600 61670 MT
(Joel F. Bartlett.)SH
5400 63065 MT
(``Predicting Program Behavior Using Real or)
304 W( Es-)305 W
30600 XM
(WRL Technical Note TN-30, July 1992.)SH
6772 64460 MT
(timated Profiles.'')SH
30600 65761 MT
(``A Practical System for Intermodule Code Optimiza-)8 W
5400 65855 MT
(David W. Wall.)SH
31972 67156 MT
(tion at Link-Time'')SH
5400 67250 MT
(WRL Technical Note TN-18, December 1990.)SH
30600 68551 MT
(Amitabh Srivastava & David W. Wall.)SH
30600 69946 MT
(WRL Technical Note TN-31, December 1992.)SH
28300 75600 MT
(24)SH
ES
%%Page: 25 29
BS
0 SI
10 /Times-Roman AF
9000 7886 MT
(``Design Tools for BIPS-0'')SH
9000 9281 MT
(Jeremy Dion & Louis Monier.)SH
9000 10676 MT
(WRL Technical Note TN-32, December 1992.)SH
9000 12071 MT
(``Link-Time Optimization of Address)
70 W( Calculation on)71 W
10372 13466 MT
(a 64-bit Architecture'')SH
9000 14861 MT
(Amitabh Srivastava & David W. Wall.)SH
9000 16256 MT
(WRL Technical Note TN-35, June 1993.)SH
31900 75600 MT
(25)SH
ES
%%Trailer
%%Pages: 9
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Courier Symbol
