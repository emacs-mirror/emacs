%!PS-Adobe-2.0
%%Creator: dvips, version 5.4 (C) 1986-90 Radical Eye Software
%%Title: iwmm.dvi
%%Pages: 16 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR}B /@letter{/vsize 10 N}B /@landscape{
/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{/vsize 15.5531 N
}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{statusdict
/manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0
]N /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0
]N df-tail}B /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N
/FontBBox FBB N string /base X array /BitMaps X /BuildChar{CharBuilder}N
/Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[
}B /E{pop nn dup definefont setfont}B /ch-image{ch-data dup type /stringtype
ne{ctr get /ctr ctr 1 add N}if}B /ch-width{ch-data dup length 5 sub get}B
/ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup length 3
sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data
dup length 1 sub get}B /ctr 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff
ch-height sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height
true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{
/cc X dup type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S
ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr
ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI
save N @rigin 0 0 moveto}B /eop{clear SI restore showpage userdict /eop-hook
known{eop-hook}if}B /@start{userdict /start-hook known{start-hook}if
/VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE S 1
string dup 0 3 index put cvn put}for}B /p /show load N /RMat[1 0 0 -1 0 0]N
/BDot 8 string N /v{/ruley X /rulex X V}B /V{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}B /a{moveto}B /delta 0 N /tail{
dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /l{p
-4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t
{p 4 w}B /w{0 rmoveto}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B
/eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div N pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}B
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{/foo X[1 0 foo 1 0 0]
TransFont}B /ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0
0]TransFont}B /TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N @MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury
currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S
lineto S lineto closepath clip newpath moveto}N /endTexFig{end psf$SavedState
restore}N /@beginspecial{SDict begin /SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults}B /@setspecial{CLIP{newpath 0 0 moveto hs 0
rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}{initclip}ifelse ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}B /@endspecial{grestore
clear SpecialSave restore end}B /@defspecial{SDict begin}B /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}B /st{stroke SaveX SaveY moveto}B /fil{fill SaveX SaveY
moveto}B /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}B end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 12 15 15 25
23 10 10 10 15 17 7 10 7 8 15 15 15 15 15 15 15 15 15 15 8
8 17 17 17 13 28 22 20 20 22 18 17 22 22 10 12 22 18 27 22
22 17 22 20 17 18 22 22 28 22 22 18 10 8 10 14 15 10 13 15
13 15 13 10 15 15 8 8 15 8 23 15 15 15 15 10 12 8 15 15 22
15 15 13 14 6 14 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 15 15 5 15 15 15 15 5 13 15
10 10 17 17 0 15 15 15 7 0 14 10 10 13 13 15 30 30 0 13 0 10
10 10 10 10 10 10 10 0 10 10 0 10 10 10 30 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 27 0 8 0 0 0 0 18 22 27 9 0 0 0 0 0 20 0 0
0 8 0 0 8 15 22 15 0 0 0 0 ] /Times-Roman 1000 471859 rf /Fb
1 3 df<C00060E000E07001C03803801C07000E0E00071C0003B80001F00000E00000E00001F0
0003B800071C000E0E001C07003803807001C0E000E0C0006013147A9320>2
D E /Fc 3 44 df<01C003C0038007000E000E001C001C00380038007800780070007000F000F0
00F000F000F000F000F000F000F000F000F000F000F000F0007000700078007800380038001C00
1C000E000E000700038003C001C00A2A7D9E10>40 D<E000F000700038001C001C000E000E0007
000700078007800380038003C003C003C003C003C003C003C003C003C003C003C003C003C003C0
0380038007800780070007000E000E001C001C0038007000F000E0000A2A7E9E10>I<00060000
000600000006000000060000000600000006000000060000000600000006000000060000000600
000006000000060000FFFFFFE0FFFFFFE000060000000600000006000000060000000600000006
0000000600000006000000060000000600000006000000060000000600001B1C7E9720>43
D E /Fd [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 10 14 23 21 21 42 35 14 14 14 21 24 10 14 10
12 21 21 21 21 21 21 21 21 21 21 14 14 24 24 24 21 39 30 28
30 30 28 25 32 32 16 21 32 28 39 30 32 25 32 30 23 28 30 30
42 30 30 28 14 12 14 24 21 14 21 23 18 23 18 14 21 23 12 14
23 12 35 23 21 23 23 18 16 14 23 21 30 21 21 18 16 9 16 22
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 14 21 21 7 21 21 21 21 12 21 21 14 14 23 23 0 21 21
21 10 0 22 15 14 21 21 21 42 42 0 21 0 14 14 14 14 14 14 14
14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 42
0 12 0 0 0 0 28 32 42 14 0 0 0 0 0 30 0 0 0 12 0 0 12 21 30
23 0 0 0 0 ] /Times-Bold 1000 655360 rf /Fe 1 64 df<01000100010001000380F39E7F
FC1FF007C007C00EE00C60183010100F0E7F8C10>63 D E /Ff [ 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10
14 17 21 21 35 32 14 14 14 21 28 10 14 10 12 21 21 21 21 21
21 21 21 21 21 14 14 28 28 28 21 38 25 25 28 30 25 25 30 30
14 18 28 23 35 28 30 25 30 25 21 23 30 25 35 25 23 23 16 12
16 18 21 14 21 21 18 21 18 12 21 21 12 12 18 12 30 21 21 21
21 16 16 12 21 18 28 18 18 16 17 11 17 22 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 21 21
7 21 21 21 21 9 23 21 14 14 21 21 0 21 21 21 10 0 22 15 14
23 23 21 37 42 0 21 0 14 14 14 14 14 14 14 14 0 14 14 0 14
14 14 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0 0 23
30 39 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 28 21 0 0 0 0 ] /Times-Italic
1000 655360 rf /Fg [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 28 25 25 50 41 17 17 17 25
28 12 17 12 14 25 25 25 25 25 25 25 25 25 25 17 17 28 28 28
25 46 36 33 36 36 33 30 39 39 19 25 39 33 47 36 39 30 39 36
28 33 36 36 50 36 36 33 17 14 17 29 25 17 25 28 22 28 22 17
25 28 14 17 28 14 41 28 25 28 28 22 19 17 28 25 36 25 25 22
20 11 20 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 14 25 25 17 17 28
28 0 25 25 25 12 0 27 17 17 25 25 25 50 50 0 25 0 17 17 17
17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 50 0 15 0 0 0 0 33 39 50 16 0 0 0 0 0 36 0 0 0 14
0 0 14 25 36 28 0 0 0 0 ] /Times-Bold 1000 786432 rf /Fh [
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 9 12 16 19 19 31 29 12 12 12 19 25 9 12 9 10 19 19 19 19
19 19 19 19 19 19 12 12 25 25 25 19 34 23 23 25 27 23 23 27
27 12 17 25 21 31 25 27 23 27 23 19 21 27 23 31 23 21 21 15
10 15 16 19 12 19 19 17 19 17 10 19 19 10 10 17 10 27 19 19
19 19 15 15 10 19 17 25 17 17 15 15 10 15 20 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 19
19 6 19 19 19 19 8 21 19 12 12 19 19 0 19 19 19 9 0 20 13 12
21 21 19 33 37 0 19 0 12 12 12 12 12 12 12 12 0 12 12 0 12
12 12 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0 21
27 35 12 0 0 0 0 0 25 0 0 0 10 0 0 10 19 25 19 0 0 0 0 ] /Times-Italic
1000 589824 rf /Fi [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 9 12 21 19 19 37 31 12 12 12 19 21
9 12 9 10 19 19 19 19 19 19 19 19 19 19 12 12 21 21 21 19 35
27 25 27 27 25 23 29 29 15 19 29 25 35 27 29 23 29 27 21 25
27 27 37 27 27 25 12 10 12 22 19 12 19 21 17 21 17 12 19 21
10 12 21 10 31 21 19 21 21 17 15 12 21 19 27 19 19 17 15 8
15 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 12 19 19 6 19 19 19 19 10 19 19 12 12 21 21 0
19 19 19 9 0 20 13 12 19 19 19 37 37 0 19 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 37 0 11 0 0 0 0 25 29 37 12 0 0 0 0 0 27 0 0 0 10 0 0 10
19 27 21 0 0 0 0 ] /Times-Bold 1000 589824 rf /Fj [ 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 12
15 19 19 31 29 12 12 12 19 21 9 12 9 10 19 19 19 19 19 19 19
19 19 19 10 10 21 21 21 17 34 27 25 25 27 23 21 27 27 12 15
27 23 33 27 27 21 27 25 21 23 27 27 35 27 27 23 12 10 12 18
19 12 17 19 17 19 17 12 19 19 10 10 19 10 29 19 19 19 19 12
15 10 19 19 27 19 19 17 18 7 18 20 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 19 19 6 19 19
19 19 7 17 19 12 12 21 21 0 19 19 19 9 0 17 13 12 17 17 19
37 37 0 17 0 12 12 12 12 12 12 12 12 0 12 12 0 12 12 12 37
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0 23 27 33 12
0 0 0 0 0 25 0 0 0 10 0 0 10 19 27 19 0 0 0 0 ] /Times-Roman
1000 589824 rf /Fk [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 6 8 10 12 12 21 19 8 8 8 12 14 6
8 6 7 12 12 12 12 12 12 12 12 12 12 7 7 14 14 14 11 23 18 17
17 18 15 14 18 18 8 10 18 15 22 18 18 14 18 17 14 15 18 18
24 18 18 15 8 7 8 12 12 8 11 12 11 12 11 8 12 12 7 7 12 7 19
12 12 12 12 8 10 7 12 12 18 12 12 11 12 5 12 13 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 12
12 4 12 12 12 12 4 11 12 8 8 14 14 0 12 12 12 6 0 11 9 8 11
11 12 25 25 0 11 0 8 8 8 8 8 8 8 8 0 8 8 0 8 8 8 25 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 22 0 7 0 0 0 0 15 18 22 8 0 0 0 0 0
17 0 0 0 7 0 0 7 12 18 12 0 0 0 0 ] /Times-Roman 1000 393216
rf /Fl [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 7 10 12 15 15 24 23 10 10 10 15 16 7 10 7 8 15
15 15 15 15 15 15 15 15 15 8 8 16 16 16 13 27 21 19 19 21 18
16 21 21 10 11 21 18 26 21 21 16 21 19 16 18 21 21 27 21 21
18 10 8 10 14 15 10 13 15 13 15 13 10 15 15 8 8 15 8 23 15
15 15 15 10 11 8 15 15 21 15 15 13 14 6 14 16 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 15
15 5 15 15 15 15 5 13 15 10 10 16 16 0 15 15 15 7 0 13 10 10
13 13 15 29 29 0 13 0 10 10 10 10 10 10 10 10 0 10 10 0 10
10 10 29 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 26 0 8 0 0 0 0 18
21 26 9 0 0 0 0 0 19 0 0 0 8 0 0 8 15 21 15 0 0 0 0 ] /Times-Roman
1000 458752 rf /Fm [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21
23 10 14 10 12 21 21 21 21 21 21 21 21 21 21 12 12 23 23 23
18 38 30 28 28 30 25 23 30 30 14 16 30 25 37 30 30 23 30 28
23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14
21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18
20 8 20 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21 21 21 7 18 21 14 14 23
23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14 14
14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 37 0 11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12
0 0 12 21 30 21 0 0 0 0 ] /Times-Roman 1000 655360 rf /Fn 2
64 df<00030003000700060006000E000C001C0018001800380030003000700060006000E000C0
00C001C001800380030003000700060006000E000C000C001C0018001800380030007000600060
00E000C000C00010297E9E15>61 D<002000002000002000007000007000007000007000E07038
7F77F01FFFC007FF0001FC0001FC0001FC0003DE00038E000707000603000C0180080080151480
9315>63 D E /Fo [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 15 19 32 29 29 58 48 19 19 19 29 33 15
19 15 16 29 29 29 29 29 29 29 29 29 29 19 19 33 33 33 29 54
42 39 42 42 39 36 45 45 23 29 45 39 55 42 45 36 45 42 32 39
42 42 58 42 42 39 19 16 19 34 29 19 29 32 26 32 26 19 29 32
16 19 32 16 48 32 29 32 32 26 23 19 32 29 42 29 29 26 23 13
23 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 19 29 29 10 29 29 29 29 16 29 29 19 19 32 32
0 29 29 29 15 0 31 20 19 29 29 29 58 58 0 29 0 19 19 19 19
19 19 19 19 0 19 19 0 19 19 19 58 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 58 0 17 0 0 0 0 39 45 58 19 0 0 0 0 0 42 0 0 0 16 0 0
16 29 42 32 0 0 0 0 ] /Times-Bold 1000 917504 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin @letter /letter where {pop letter} if
%%EndSetup
%%Page: 1 1
bop 408 194 a Fo(Incr)o(emental)15 b(Collection)h(of)f(Matur)o(e)f(Objects)
1445 172 y Fn(?)590 338 y Fm(Richard)c(L.)h(Hudson)908 323
y Fl(1)934 338 y Fm(and)f(J.)h(Eliot)e(B.)i(Moss)1271 323 y
Fl(2)686 409 y Fk(1)720 425 y Fj(University)e(Computing)f(Services)727
471 y(University)h(of)g(Massachusetts)729 516 y(Amherst,)g(MA)25
b(01003,)8 b(USA)769 562 y(hudson@cs.umas)o(s.edu)718 592 y
Fk(2)751 608 y Fj(Object)h(Systems)f(Laboratory)688 653 y(Department)h(of)g
(Computer)g(Science)727 699 y(University)g(of)g(Massachusetts)727
745 y(Amherst,)k(MA)25 b(01003,)8 b(USA)784 790 y(moss@cs.umass.edu)301
954 y Fi(Abstract.)20 b Fj(W)m(e)10 b(present)e(a)i(garbage)e(collection)h
(algorithm)h(that)g(extends)e(generational)h(scav-)301 1000
y(enging)j(to)i(collect)f(lar)o(ge)g(older)h(generations)e(\()p
Fh(matur)o(e)g(objects)p Fj(\))h(non-disruptively)n(.)f(The)h(al-)301
1046 y(gorithm')n(s)e(approach)e(is)i(to)g(process)e(bounded-size)f(pieces)i
(of)h(mature)g(object)f(space)f(at)i(each)301 1091 y(collection;)j(the)h
(subtleties)f(lie)i(in)f(guaranteeing)e(that)i(it)g(eventually)f(collects)g
(any)g(and)g(all)301 1137 y(garbage.)e(The)g(algorithm)h(does)f(not)h(assume)
e(any)i(special)f(hardware)g(or)h(operating)g(system)301 1183
y(support,)7 b(e.g.,)g(for)h(forwarding)g(pointers)f(or)g(protection)g
(traps.)h(The)e(algorithm)i(copies)e(objects,)301 1228 y(so)i(it)i(naturally)
g(supports)e(compaction)f(and)h(reclustering.)301 1274 y Fi(Keywords:)j
Fj(clustering,)i(compaction,)e(copying)h(collection,)g(garbage)f(collection,)
i(garbage)301 1320 y(collector)8 b(toolkits,)h(generation)e(scavenging,)f
(incremental)i(collection,)g(mature)g(objects,)g(non-)301 1365
y(disruptive)h(collection.)183 1505 y Fg(1)49 b(Intr)o(oduction)183
1602 y Fm(Generational)11 b(garbage)h(collection)e(is)h(very)h(ef)o(fective)g
(at)g(reducing)e(total)h(garbage)h(collection)e(time.)183 1652
y(The)j(majority)e(of)i(the)f(collections)g(are)h(also)g(non-disruptive.)d
(However)n(,)k(as)f(good)f(as)h(generational)183 1702 y(collectors)i(are,)i
(they)e(can)h(still)e(be)i(disruptive)e(when)i(the)f(lar)o(ger)n(,)i(older)e
(generations)g(need)h(to)f(be)183 1751 y(collected.)9 b(T)m(o)g(collect)f
(these)h(older)f(objects)h(in)f(a)h(non-disruptive)d(manner)n(,)k(we)f
(present)g(an)g(algorithm)183 1801 y(that)g(has)i(the)f(following)e
(properties:)203 1890 y Ff(Incr)n(emental)p Fm(:)g(The)g(maximum)g(number)f
(of)h(bytes)f(moved)g(at)h(each)h(incremental)e(collection)g(is)g(small.)203
1939 y Ff(Compaction)e(and)i(Clustering)p Fm(:)e(The)i(algorithm)f(supports)f
(compaction)i(and)g(reclustering)f(of)h(objects)253 1989 y(via)j(copying.)203
2039 y Ff(Ef\256cient)h(Implementation)p Fm(:)d(The)k(algorithm)d(can)j(be)f
(implemented)g(on)f(stock)h(hardware)g(and)g(does)253 2089
y(not)f(rely)g(on)f(operating)h(system)g(features)h(such)g(as)g(protected)e
(pages.)245 2177 y(Bishop)g([Bishop,)g(1977)o(])i(discussed)f(how)g(related)h
(objects)f(should)f(be)i(placed)g(in)e(the)i(same)g(area)183
2227 y(and)f(references)i(into)d(these)h(areas)i(should)d(be)i(handled)e(by)h
(a)h(level)f(of)g(indirection)e(so)i(that)g(each)h(area)183
2277 y(could)i(be)h(collected)g(independently)e(of)h(other)g(areas.)j(Our)d
(algorithm)f(borrows)h(heavily)g(from)h(his)183 2327 y(conceptual)9
b(work)g(describing)g(areas)h(that)f(hold)g(related)g(objects.)h(Our)f
(contribution)e(is)i(to)g(show)g(how)183 2376 y(this)g(can)i(be)g(used)f(to)g
(create)h(a)g(collector)f(with)f(the)h(above)g(characteristics.)p
183 2402 237 2 v 193 2429 a Fe(?)220 2445 y Fj(This)15 b(project)f(is)h
(supported)f(by)g(National)h(Science)f(Foundation)f(Grant)i(CCR-8658074)e
(and)h(by)h(Digital)220 2491 y(Equipment)8 b(Corporation)h(and)g(Apple)f
(Computer)n(.)p eop
%%Page: 2 2
bop 403 194 a Fm(In)16 b(Section)c(2)k(we)h(discuss)g(the)f(problem)g(of)g
(collecting)g(older)f(generations)h(holding)f(mature)340 244
y(objects)h(and)g(review)h(some)g(recent)f(work)g(in)f(the)h(area.)i(In)e
(Section)c(3)k(we)h(give)e(an)i(overview)f(of)340 293 y(the)c(collector)n(.)g
(Section)g(4)g(presents)g(our)g(algorithm,)f(while)g(Section)h(5)g(shows)h
(an)f(example)h(of)f(how)340 343 y(the)f(algorithm)e(works.)i(Section)h(6)f
(describes)g(how)g(to)f(extend)h(the)f(algorithm)g(to)g(handle)h(a)g
(potential)340 393 y(problem.)6 b(Finally)m(,)g(Section)12
b(7)6 b(discusses)g(some)g(future)g(extensions)g(to)g(support)g(additional)g
(techniques)340 443 y(that)k(mitigate)f(the)i(disruptive)d(behavior)i(of)g
(garbage)g(collection.)340 563 y Fg(2)50 b(The)13 b(Pr)o(oblem)g(and)f(Some)g
(History)340 648 y Fm(This)h(paper)g(addresses)h(the)f(problem)f(of)h
(collecting)e(older)i(objects)f(incrementally)m(,)h(in)f(the)h(context)340
697 y(of)h(a)h(copying,)f(scavenging)g(collector)n(.)g(W)m(e)g(insist)f(on)h
(copying)f(in)h(order)g(to)g(support)f(compaction)340 747 y(and)18
b(clustering)e(\(e.g.,)j(hierarchical)e(decomposition)f([W)n(ilson)9
b Ff(et)k(al.)p Fm(,)d(1991)o(]\).)18 b(Because)g(copying)340
797 y(collectors)9 b(move)g(objects,)g(we)g(assume)h(the)f(safety)g(property)
e(that)h(all)h(pointers)f(\(and)g(pointer)g(derived)340 847
y(quantities\))h(can)i(be)g(found)e(and)h(updated)g(appropriately)f(\(see,)i
(e.g.,)h([Diwan)e Ff(et)i(al.)p Fm(,)f(1992)o(]\).)403 897
y(Pieces)i(of)g(the)f(problem)g(of)h(doing)e(garbage)i(collection)e
(non-disruptively)f(have)j(been)g(worked)340 947 y(on)c(for)f(years.)i(In)e
(this)g(section,)g(we)i(will)d(review)i(some)g(of)f(these)i(attempts)e(and)h
(discuss)f(some)i(of)e(their)340 996 y(drawbacks.)403 1046
y(Baker)16 b([Baker)n(,)11 b(1978)o(])k(discussed)h(the)f(problem)h(of)f
(constructing)f(a)i(non-disruptive)d(garbage)340 1096 y(collector)n(.)g(His)g
(solution)d(was)k(a)g(modi\256cation)e(of)g(a)i(stop-and-copy)d(algorithm)h
(\256rst)g(discussed)i(by)340 1146 y(Fenichel)k(and)g(Y)l(ochelson)f
([Fenichel)10 b(and)g(Y)l(ochelson,)g(1969)o(].)18 b(Baker)g(used)g(a)g(read)
g(barrier)f(that)340 1196 y(trapped)9 b(all)g(reads)h(of)e(old)g(objects)h
(and)g(then)g(copied)g(the)g(objects)g(or)f(updated)h(the)g(pointers)f(to)g
(moved)340 1245 y(objects.)h(White)g([White,)h(1980)o(])e(suggested)h(that)f
(collecting)f(unreachable)j(objects)e(was)i(not)e(as)h(much)340
1295 y(of)e(a)g(problem)g(as)g(improving)g(t)o(he)g(lo)o(cality)f(of)g
(reference)h(of)g(live)g(o)o(bjects,)g(and)g(pr)o(oposed)g(a)g(scheme)g(that)
340 1345 y(improved)12 b(locality)f(of)h(reference)h(of)f(running)f(programs)
h(but)f(that)h(collected)g(unreachable)h(objects)340 1395 y(of)o(f-line.)g
(Both)f(Baker)i(and)f(White)g(assumed)i(special)f(pointer)e(forwarding)g
(hardware)i(support)e(for)340 1445 y(their)e(algorithms.)403
1494 y(Lieberman)i(and)f(Hewitt)f([Lieberman)h(and)f(Hewitt,)g(1983)o(],)h
(Moon)f([Moon,)g(1984)o(],)h(and)g(Ungar)340 1544 y([Ungar)n(,)g(1984)o(])17
b(all)g(presented)h(algorithms)e(that)h(reduced)h(the)f(running)e(time)j
(required)e(by)h(most)340 1594 y(garbage)12 b(collections)f(by)g(focusing)f
(attention)g(on)h(the)g(youngest)f(and)i(most)f(volatile)f(generations)h(of)
340 1644 y(objects.)j(Lieberman)g(and)g(Hewitt)e(relied)h(on)h(special)f
(hardware)h(and)g(a)g(Baker)o(-style)f(algorithm)f(to)340 1694
y(achieve)d(incremental)e(performance.)h(Moon)f(also)g(relied)g(on)g(the)g
(Lisp)g(machine)h(hardware)g(to)e(provide)340 1744 y(a)14 b(read)g(barrier)n
(.)f(Ungar)g(was)h(concerned)f(only)f(with)g(young)h(objects,)g(and)g
(collected)g(older)g(objects)340 1793 y(\252of)o(f-line\272.)i(This)f(work)f
(made)j(the)e(time)g(to)f(perform)h(most)h(garbage)f(collections)f
(reasonable)i(and)340 1843 y(the)c(majority)f(of)h(collections)f
(non-disruptive.)f(The)j(drawback)f(was)h(the)f(lar)o(ge)h(cost)f(and)g
(disruption)340 1893 y(when)g(lar)o(ge)f(old)g(generations)f(needed)i(to)f
(be)h(collected.)403 1943 y(Appel,)c(Ellis,)g(and)h(Li)f([Appel)j
Ff(et)i(al.)p Fm(,)f(1988)o(])c(suggested)g(collecting)g(on)g(stock)g
(hardware)h(by)f(using)340 1993 y(read-protected)i(or)f(no-access)i(pages)f
(in)f(older)g(generations:)f(when)i(a)g(page)g(is)f(touched,)h(it)e(is)h
(scanned)340 2042 y(and)15 b(all)e(pointers)g(to)h(moved)g(objects)g(are)h
(updated.)f(For)g(ef)o(\256ciency)h(their)f(algorithm)e(depends)j(on)340
2092 y(two)f(properties.)g(First,)h(the)f(algorithm)f(requires)i(a)g(fast)f
(protection)f(fault)h(re\257ection)h(mechanism.)340 2142 y(Providing)f(such)i
(a)h(fast)f(mechanism)h(may)g(require)e(modifying)f(the)i(operating)f
(system.)i(Second,)340 2192 y(the)12 b(algorithm)f(requires)h(high)f
(locality)g(of)g(reference)j(in)e(the)g(application)e(being)i(run.)g(W)n
(ithout)e(this)340 2242 y(property)m(,)e(the)h(scanning)f(resulting)f(from)i
(touching)e(several)i(pages)g(shortly)e(after)i(a)g(collection)e(would)340
2292 y(make)12 b(collection)d(ef)o(fectively)h(disruptive.)403
2341 y(Boehm)f([Boehm)h Ff(et)j(al.)p Fm(,)d(1991)o(])f(showed)h(how)f
(collectors)g(could)f(be)i(made)h(\252mostly)d(parallel\272)i(in)340
2391 y(the)g(trace)h(phase)g(of)f(a)h(collector)n(.)e(His)h(algorithm)f(also)
h(relies)g(on)g(using)f(the)h(page)h(trap)f(hardware)g(and)340
2441 y(operating)e(system)i(support)d(to)i(do)f(bookkeeping)g(during)f(the)i
(mark)g(phase.)h(This)f(choice)h(reduces)f(the)340 2491 y(amount)h(of)g
(mutator)g(cooperation)f(needed.)p eop
%%Page: 3 3
bop 245 194 a Fm(The)14 b(Lisp)e(Machine)i([W)m(einreb)c(and)g(Moon,)g(1981)o
(])j(demonstrated)g(how)f(linked)g(lists)g(could)g(be)183 244
y(compacted)d(using)f(cdr)o(-coding.)g(W)n(ilson)g([W)n(ilson)i
Ff(et)i(al.)p Fm(,)f(1991)o(])d(showed)h(how)f(hierarchical)h(decom-)183
293 y(position)e(could)i(also)h(be)g(used)g(to)f(compress)i(data,)f(in)f
(addition)f(to)h(improving)f(locality)g(of)i(reference.)183
343 y(W)n(ilson')n(s)g(scheme)i(is)f(similar)f(to)h(Moon')n(s)f
(\252approximately)g(depth-\256rst\272)g(algorithm)g([Moon,)g(1984)o(])183
393 y(and)16 b(demonstrates)g(the)g(gains)f(in)h(locality)e(that)i(can)g(be)h
(made)g(by)e(reclustering)g(items)h(based)h(on)183 443 y(their)11
b(reachability)g(path)h(characteristics.)h(Unfortunately)m(,)e(mutation)g(of)
h(objects)f(requires)h(periodic)183 493 y(reclustering.)f(T)m(o)i(allow)e
(this)g(reclustering)h(and)g(compaction,)g(the)g(objects)g(need)g(to)g(be)g
(moved)h(and)183 542 y(pointers)c(to)g(the)i(moved)f(objects)g(updated)g
(appropriately)m(.)245 601 y(Lang)f([Lang)i(and)f(Dupont,)f(1987)o(])g
(showed)g(how)f(the)h(incremental)g(compaction)g(of)f(a)i(lar)o(ge)f(heap)183
651 y(can)f(be)g(done)g(using)f(a)h(hybrid)f(mark/sweep)h(and)g(copying)f
(collector)n(.)g(The)h(algorithm)f(copies)h(as)g(much)183 701
y(of)j(the)h(heap)g(as)g(there)g(is)f(contiguous)f(free)j(space)g(during)d
(each)j(collection)d(thus)h(compacting)h(some)183 751 y(portion)c(of)i(the)g
(heap.)h(The)g(remaining)f(live)g(objects)g(are)h(not)e(copied.)i(Dead)g
(objects)f(in)f(areas)j(where)183 801 y(live)g(objects)h(were)h(not)f
(evacuated)h(are)g(marked)g(and)g(placed)f(on)g(a)h(free)g(list)e(along)h
(with)f(the)h(lar)o(ge)183 851 y(evacuated)i(area.)i(This)d(process)i
(incrementally)e(continues)g(until)f(the)h(entire)h(heap)g(is)f(compacted.)
183 900 y(This)d(algorithm)f(requires)i(that)e(all)i(live)f(objects)g(be)h
(inspected)f(and)h(possible)e(updated)h(during)f(each)183 950
y(pass)g(of)g(the)g(collector)n(.)g(Such)g(romping)f(through)g(memory)h
(becomes)i(disruptive)c(as)j(the)f(heap)h(grows)183 1000 y(lar)o(ge)f(enough)
g(to)g(af)o(fect)h(the)f(cache)i(and)e(virtual)f(memory)h(mechanisms.)245
1059 y(W)n(ilson)g([W)n(ilson)f(and)i(Moher)n(,)f(1989)o(])h(tries)f(to)g
(make)i(his)e(collector)g(non-disruptive)e(using)h(tem-)183
1109 y(poral)i(opportunism,)e(a)j(technique)f(that)g(tries)g(to)g(hide)g
(long)f(garbage)i(collection)f(by)g(piggy-backing)183 1159
y(onto)c(long)h(computations)g(or)h(onto)f(long)f(interactive)i(pauses.)h
(Hayes)g([Hayes,)h(1991)o(])e(suggested)g(key)183 1208 y(object)i
(opportunism,)g(which)g(monitors)g(key)h(objects.)h(When)f(a)g(key)h(object)e
(become)j(unreachable,)183 1258 y(one)9 b(attempts)g(to)g(collect)g(the)g
(objects)g(associated)h(with)e(it.)h(By)g(using)f(the)h(key)h(object)e(as)i
(an)g(indicator)183 1308 y(of)d(when)h(a)g(group)f(of)g(objects)h(become)h
(unreachable,)g(the)e(collector)g(focuses)i(its)e(attention)f(on)h(a)i(group)
183 1358 y(of)j(objects)g(that)g(are)i(likely)d(to)h(be)h(unreachable.)h
(While)e(temporal)h(opportunism)d(uses)k(hints)d(about)183
1408 y Ff(when)f Fm(to)f(do)h(collections,)g(key)g(object)g(opportunism)e
(adds)j(hints)e(about)g Ff(wher)n(e)j Fm(to)d(do)h(collections.)245
1467 y(Bishop)i([Bishop,)d(1977)o(])k(presented)h(a)f(garbage)h(collection)e
(algorithm)g(that)g(divided)g(the)h(heap)183 1517 y(into)8
b(multiple)f(areas.)k(Users)f(speci\256ed)g(the)f(area)i(in)d(which)h(each)h
(object)f(was)h(allocated.)g(These)g(areas)183 1566 y(were)i(designed)g(to)f
(be)h(garbage)h(collected)e(individually)m(.)f(By)h(collecting)g(the)g(areas)
j(independently)m(,)183 1616 y(the)c(collections)g(would)g(not)g(interfere)h
(with)f(processes)i(that)e(did)g(not)h(use)g(the)g(area)h(being)e(collected.)
183 1666 y(In)g(order)g(to)g(allow)h(independent)e(collection,)h(each)i(area)
g(kept)e(track)h(of)f(pointers)g(both)f(into)h(the)g(area)183
1716 y(and)i(out)f(of)h(the)g(area.)h(Referencing)f(an)h(object)e(in)h
(another)g(area)h(was)g(accomplished)f(using)f(a)i(level)183
1766 y(of)d(indirection.)245 1825 y(Bishop)i(pointed)f(out)h(that)h(related)g
(areas)h(could)e(be)h(collected)g(at)g(the)g(same)h(time.)g(He)f(handled)183
1875 y(multiple)f(area)j(cycles)g(of)f(garbage)g(either)g(by)g(collecting)e
(all)i(areas)h(involved)e(in)g(the)h(cycle)h(at)f(the)183 1924
y(same)i(time,)g(or)e(by)h(using)f(copying)g(to)h(consolidate)f(the)h(cycle)h
(of)f(objects)g(into)e(one)i(area.)i(In)e(his)183 1974 y(thesis,)e(Bishop)f
(presented)i(an)f(inductive)f(proof)h(to)g(show)g(that)g(his)g(technique)f
(of)i(moving)e(objects)183 2024 y(guarantees)f(that)e(all)h(unreachable)h
(objects)f(are)h(collected.)245 2083 y(Bishop)i(did)h(not)g(bound)f(the)i
(size)g(of)f(an)h(area)h(or)e(provide)g(ways)h(to)f(collect)g(individual)e
(areas)183 2133 y(incrementally)m(.)h(In)h(addition,)e(his)h(use)h(of)g
(levels)f(of)h(indirection)e(to)h(communicate)h(between)g(areas)183
2183 y(was)d(a)f(source)h(of)f(inef)o(\256ciency)m(.)245 2242
y(Our)d(mature)h(object)f(space)i(algorithm)d(does)i(not)e(require)i(special)
f(hardware)i(or)e(special)h(operating)183 2292 y(system)13
b(support,)g(and)g(it)f(is)h(not)g(disruptive.)f(It)g(insures)h(that)g(all)g
(reachable)h(objects)f(are)h(collected,)183 2341 y(that)9 b(they)h(are)h
(moved)f(in)g(a)h(manner)f(consistent)g(with)f(compaction)h(and)g(clustering)
f(algorithms,)h(and)183 2391 y(that)e(they)g(are)h(available)f(immediately)h
(after)f(each)i(collection.)e(Our)g(algorithm)f(also)i(limits)e(area)j(size,)
183 2441 y(provides)f(ways)h(to)f(collect)h(individual)d(areas)k
(incrementally)m(,)f(and)g(eliminates)f(levels)h(of)g(indirection)183
2491 y(between)g(areas.)p eop
%%Page: 4 4
bop 340 194 a Fg(3)50 b(Overview)12 b(of)g(the)g(Garbage)g(Collector)340
295 y Fm(T)m(o)d(collect)f(young)f(objects,)h(we)h(designed)f(a)h(garbage)g
(collection)e(toolkit)e(that)j(supports)f(generational)340
345 y(scavenging)k(techniques.)726 329 y Fl(3)753 345 y Fm(Our)f(algorithm)g
(for)g(collecting)f(mature)i(objects)g(is)f(an)h(extension)f(of)g(this)340
394 y(toolkit.)f(W)m(e)h(now)g(of)o(fer)g(an)h(overview)f(of)g(the)g(toolkit)
e(as)j(a)f(basis)h(for)f(explaining)e(the)i(extensions.)340
520 y Fd(3.1)42 b(The)10 b(T)l(oolkit)f(Concept)340 605 y Fm(The)j(toolkit)c
(divides)i(the)h(responsibility)c(for)n(,)k(and)g(support)f(of,)g(garbage)i
(collection)d(into)h(two)g(parts:)340 655 y(a)19 b(language-independent)e
(part,)h(supplied)f(by)h(the)g(toolkit,)f(and)h(a)h(language)f
(\(implementation\))340 704 y(speci\256c)13 b(part,)f(nominally)e(supplied)h
(by)g(the)h(language)g(implementor)n(.)f(The)i(language-independent)340
754 y(part)7 b(consists)f(mostly)h(of)f(the)h(data)g(structures)f(and)h(code)
h(for)e(managing)h(multiple)e(generations)i(and)g(for)340 804
y(allocating)j(heap)i(objects.)f(The)g(language)g(implementor)g(must)f
(supply)g(the)h(following)e(capabilities:)340 854 y(the)h(ability)e(to)h
(locate)i(at)f(scavenge-time)g(all)g Ff(r)n(oot)f(pointers)h
Fm(\(those)f(pointers)g(outside)g(the)g(scavenged)340 904 y(generations)16
b(that)f(refer)i(to)e(objects)h(in)g(the)f(scavenged)j(generations\),)d(and)h
(the)g(ability)f(to)g(locate)340 953 y(all)j(pointers)f(within)f(a)i(heap)g
(object,)g(given)f(a)h(pointer)f(to)g(the)h(object.)g(The)g(toolkit)d
(includes)j(a)340 1003 y(library)9 b(of)g(routines)f(that)h(an)h(implementor)
e(can)j(use)e(to)g(locate)h(inter)o(-generational)e(pointers;)g(it)g(is)h
(the)340 1053 y(implementor)r(')n(s)k(responsibility)d(to)k(locate)g(roots)e
(lying)h(in)g(the)g(stack\(s\),)i(registers,)e(and)h(any)g(other)340
1103 y(areas)e(outside)d(the)h(heap.)340 1229 y Fd(3.2)42 b(The)10
b(Structur)o(e)j(of)d(the)g(Heap)340 1313 y Fm(The)i(toolkit)d(de\256nes)j
(the)f(structure)f(of)h(the)g(heap)g(and)g(supplies)g(the)g(necessary)h
(allocation)e(routines.)340 1363 y(The)g(heap)f(consists)g(of)f(a)i(number)f
(of)f Ff(generations)p Fm(.)h(Generations)f(are)i(numbered)f(0,)g(1,)h(2,)f
(...,)h(in)f(order)340 1413 y(of)g(increasing)g(age.)i(In)e(any)g(given)f
(collection,)h(a)h(selected)g(generation)e(and)i(all)e(younger)h(generations)
340 1463 y(will)g(be)i(scavenged.)h(The)e(total)g(number)g(of)g(generations)g
(may)g(vary)h(over)f(time.)403 1513 y(Each)15 b(generation)e(consists)g(of)h
(a)h(number)e(of)h Ff(steps)p Fm(.)g(Steps)g(segregate)h(objects)f(by)f(age)i
(and/or)340 1563 y(type)10 b(within)e(a)i(generation,)g(and)g(during)e
(scavenging)i(all)f(surviving)f(\(reachable\))j(objects)e(in)h(a)g(given)340
1612 y(step)f(are)g(copied)e(to)h(some)h(other)f(step.)g(This)g
Ff(pr)n(omotion)f(step)h Fm(may)h(belong)e(to)h(the)g(same)h(or)f(a)h(dif)o
(ferent)340 1662 y(generation,)h(and)g(by)f(adjusting)f(the)i(promotion)e
(steps)i(before)g(scavenging,)g(one)g(can)g(introduce)f(new)340
1712 y(steps,)i(combine)f(existing)f(steps,)i(etc.)g(The)f(number)g(of)g
(steps)h(in)e(a)i(generation)e(may)i(vary)f(over)g(time.)403
1762 y(A)h(primary)g(function)f(of)h(steps)h(is)f(to)g(eliminate)h(the)f
(need)h(for)f(storing)f(or)h(maintaining)f(any)i(age)340 1812
y(information)g(in)i(individual)d(objects.)j(This)g(reduces)g(storage)g(and)g
(time)g(costs,)g(but)f(also)h(gives)f(the)340 1862 y(collector)d(age)i
(information)d(without)f(imposing)i(any)h(requirements)f(on)g(object)h
(formats)f(\(which)h(are)340 1912 y(entirely)f(the)g(responsibility)d(of)j
(the)g(language)g(implementor\).)403 1962 y(While)c(the)h(meaning)g(of)f
(steps)h(is)g(somewhat)g(arbitrary)m(,)g(we)g(impose)g(a)g(convention)f(that)
g(the)h(lowest)340 2011 y(numbered)12 b(step)f(in)g(a)h(generation)f(has)h
(the)f(youngest)f(objects)h(in)g(that)g(generation,)g(etc.)h(Further)n(,)g
(we)340 2061 y(number)i(the)f(steps)g(0,)h(1,)f(2,)h(...,)h(such)e(that)g
(every)g(step)h(in)e(the)i(system)f(has)h(a)g(unique)e(number)n(.)i(For)340
2111 y(example)g(generation)f(0)g(might)f(have)i(steps)g(0)f(and)g(1,)h
(generation)e(1)h(might)g(have)g(steps)h(2)f(through)340 2161
y(4,)f(and)f(so)h(on.)f(A)h(simple)f(promotion)e(policy)h(is)i(to)e(promote)h
(survivors)f(of)h(step)h Ff(k)g Fm(to)e(step)i Ff(k)e Fc(+)g
Fm(1.)i(In)340 2211 y(that)f(case,)j(the)d(number)g(of)g(steps)h(in)f(a)h
(generation)f(determines)g(the)h(number)f(of)g(scavenges)i(\(of)e(that)340
2261 y(generation\))f(necessary)i(to)d(promote)h(objects)g(to)g(the)g(next)g
(generation.)403 2311 y(Each)15 b(step)g(consists)f(of)g(a)h(number)g(of)f
Ff(blocks)p Fm(.)h(A)f(block)g(is)h(2)1347 2296 y Ff(n)1384
2311 y Fm(bytes,)f(aligned)g(on)g(a)i(2)1744 2296 y Ff(n)1781
2311 y Fm(byte)340 2360 y(boundary)8 b(for)h(some)g(value)g(of)g
Ff(n)f Fm(chosen)i(when)e(the)h(system)g(is)g(built.)f(A)g(typical)g(block)h
(size)g(might)f(be)340 2410 y(64K)j(bytes.)h(The)g(number)f(of)g(blocks)g(in)
g(a)h(step)f(may)h(vary)f(over)h(time.)f(While)g(the)g(blocks)g(of)g(a)h
(step)p 340 2447 237 2 v 354 2475 a Fk(3)378 2491 y Fj(For)d(a)g(more)g
(detailed)g(discussion)e(of)i(the)g(toolkit)h(see)e([Hudson)g
Fh(et)13 b(al.)p Fj(,)d(1991)n(].)p eop
%%Page: 5 5
bop 183 194 a Fm(are)13 b(usually)f(not)g(contiguous,)g(a)h
Ff(nursery)h Fm(may)g(be)f(set)g(up)f(to)h(consist)f(of)g(a)i(number)f(of)f
(contiguous)183 244 y(blocks,)f(so)g(that)g(one)h(might)e(more)i(readily)f
(use)h(a)g(page)g(trap)f(\(rather)g(than)g(an)h(explicit)e(limit)g(check\))
183 293 y(to)f(detect)i(nursery)f(over\257ow)g(and)g(trigger)f(a)i(scavenge.)
245 345 y(Blocks)i(have)g(four)g(primary)g(advantages.)h(First,)f(they)g
(allow)f(sizes)i(of)f(steps)h(and)f(generations)183 394 y(to)h(change)i
(easily)f(since)h(the)f(storage)g(of)g(a)h(step)f(need)h(not)e(be)i
(contiguous.)e(Second,)h(they)g(allow)183 444 y(speedy)d(determination)f(of)g
(the)h(generation,)f(step,)i(and)f(promotion)e(step)h(of)h(an)g(object:)f
(the)h(address)183 494 y(of)c(the)g(object)h(is)f(simply)g(shifted)g(right)f
(by)h Ff(n)h Fm(bits)e(and)i(indexes)g(a)g(block)f(table)g(containing)f(the)i
(needed)183 544 y(information.)k(Third,)j(blocks)e(match)i(naturally)e(with)h
(page)g(trapping)f(or)h(card)h(marking)f(schemes)183 594 y(\(both)e(of)h
(which)g(the)h(toolkit)d(supports\).)h(Fourth,)h(they)g(reduce)h(the)g
(storage)f(needed)i(under)e(some)183 644 y(circumstances)e(when)g(compared)g
(with)e(copying)h(collectors)g(that)g(use)h(semi-spaces.)h(If)e
Ff(b)h Fm(bytes)f(are)183 693 y(present)g(in)g(a)h(generation)f(before)h(a)g
(scavenge)h(and)f(the)f(survivors)f(consume)j Ff(a)e Fm(bytes,)h(then)f(a)h
(semi-)183 743 y(space)k(scheme)g(uses)f(2)c Fb(\002)h Ff(b)j
Fm(bytes)f(whereas)i(our)e(scheme)i(uses)f Ff(b)c Fc(+)h Ff(a)j
Fm(bytes)f(\(modulo)g(rounding)183 793 y(resulting)d(from)h(the)h(block)f
(size\).)h(The)h(degree)f(of)f(advantage)i(depends)e(on)h(the)f(survival)g
(rate)h Ff(a)p Fn(=)p Ff(b)o Fm(,)183 843 y(but)c(may)i(be)g(signi\256cant)e
(in)h(some)h(applications.)245 894 y(Blocks)j(do)g(introduce)f(a)i(problem,)g
(however)n(.)f(They)h(cannot)g(handle)f(objects)g(lar)o(ger)h(than)f(the)183
944 y(block)d(size.)h(T)m(o)g(handle)f(such)h(objects)f(we)h(provide)f(a)h
Ff(lar)n(ge)f(object)g(space)i Fm(\(LOS\),)f(as)g(suggested)f(in)183
994 y([Ungar)f(and)g(Jackson,)h(1988)o(].)e(In)f(fact,)h(it)e(is)h(probably)f
(a)i(good)e(idea)i(to)f(put)f(into)g(LOS)i(any)f(object)g(that)183
1044 y(consumes)i(a)g(signi\256cant)f(fraction)g(of)g(a)h(block;)e(we)i(used)
g(the)g(heuristic)e(threshold)g(of)i(1/8)e(of)i(a)g(block.)183
1093 y(Further)n(,)d(as)g(also)g(discussed)g(in)g([Ungar)g(and)k(Jackson,)g
(1988)o(],)c(any)g(object)g(that)g(cont)o(ains)g(few)g(p)o(oint)o(ers)183
1143 y(and)15 b(that)f(exceeds)j(some)f(threshold)e(in)h(size)g(should)f(be)i
(stored)f(in)f(LOS)i(to)f(avoid)f(the)h(overhead)183 1193 y(of)g(copying.)f
(LOS)i(uses)g(free)g(list)f(allocation)f(based)i(on)f(splay)g(trees)h
([Sleator)10 b(and)g(T)m(arjan,)h(1983)o(,)183 1243 y(Sleator)f(and)g(T)m
(arjan,)h(1985)o(,)h(Jones,)f(1986)o(])g(and,)h(once)f(allocated,)h(an)f(LOS)
h(object)f(is)g(never)g(moved.)183 1293 y(However)n(,)e(LOS)g(objects)f
(still)f(belong)h(to)g(a)h(step,)g(which)f(is)h(indicated)e(by)i(threading)e
(the)h(objects)h(onto)183 1342 y(a)k(doubly)d(linked)i(list)f(rooted)g(in)h
(the)g(step)h(data)f(structure.)h(When)f(a)h(LOS)g(object)f(is)g(promoted,)g
(we)183 1392 y(simply)c(unchain)i(it)f(from)g(one)h(list)e(and)i(chain)g(it)f
(into)f(another)n(.)h(When)h(scavenging)g(is)f(complete,)i(any)183
1442 y(LOS)f(objects)g(remaining)g(on)g(a)h(scavenged)g(step')n(s)f(LOS)h
(list)e(are)i(freed.)245 1493 y(While)j(the)g(generation,)g(step,)h(and)g
(block,)f(of)g(a)h(non-LOS)f(object)g(can)h(be)g(determined)g(using)183
1543 y(the)e(simple)g(shift)g(and)g(index)g(technique,)g(LOS)h(may)g(combine)
g(objects)f(from)g(dif)o(ferent)g(steps)h(and)183 1593 y(generations)e(in)h
(the)g(same)i(block.)e(Therefore,)i(we)f(store)f(a)h(back)g(reference)g(from)
g(a)f(LOS)h(object')n(s)183 1643 y(header)c(to)f(its)g(containing)f(step.)i
(It)f(is)h(relatively)e(easy)j(to)e(determine)h(the)f(step)h(given)f(a)h
(pointer)f(to)g(the)183 1693 y(base)h(of)e(an)i(LOS)g(object,)f(but)f
(determining)g(the)h(step)g(given)f(a)i(pointer)e(into)g(the)h(middle)f(of)h
(the)g(object)183 1742 y(requires)h(locating)f(the)h(object)g(header)n(,)i
(which)d(is)h(supported)g(but)f(involves)g(additional)f(work.)183
1875 y Fd(3.3)41 b(Phases)11 b(of)f(a)g(Scavenge)183 1965 y
Fm(A)e(scavenge)h(consists)e(of)h(two)f(phases.)i(First,)f(the)g(root)e(set)j
(for)e(the)h(scavenge)h(is)f(determined)f(based)i(on)183 2015
y(the)h(remembered)h(sets,)g(as)g(well)f(as)h(the)f(stack,)h(register)n(,)f
(and)g(global)g(variable)g(contents.)g(All)f(objects)183 2065
y(directly)h(reachable)i(from)f(the)h(roots)e(are)i(copied)f(into)f(new)i
(space,)h(and)e(the)g(roots)g(updated)f(to)h(point)183 2115
y(to)f(the)g(copied)g(object.)h(All)e(objects)i(reachable)g(from)g(the)f(new)
h(space)h(objects)e(are)h(then)f(copied)h(over)183 2165 y(using)d(a)j
(non-recursive)d(Cheney)i(scan)h([Cheney)m(,)f(1970)o(].)1034
2149 y Fl(4)1061 2165 y Fm(As)g(each)g(object)g(is)f(copied,)h(a)g
(forwarding)183 2214 y(pointer)g(is)i(left)f(in)g(the)g(old)g(copy)m(,)i(so)e
(that)g(other)h(references)h(to)e(the)h(object)f(can)h(be)g(updated)g(as)g
(they)183 2264 y(are)17 b(encountered.)f(Since)h(the)f(toolkit)d(makes)18
b(no)d(assumptions)h(about)g(object)f(format,)i(language)183
2314 y(implementors)f(can)i(de\256ne)g(the)f(details)g(of)g(the)g(forwarding)
e(pointer)h(format.)i(The)g(toolkit)c(does)p 183 2356 237 2
v 196 2384 a Fk(4)220 2399 y Fj(The)7 b(toolkit)i(might)f(be)f(adapted)f(to)i
(support)g(mark-sweep)e(or)i(other)g(approaches)d(to)j(collection,)g(but)g
(currently)220 2445 y(it)k(provides)d(only)i(copying)e(collection.)i(Also,)g
(it)h(would)e(not)h(be)f(hard)g(to)h(incorporate)g(suggestions)d(such)h(as)
220 2491 y(hierarchical)g(clustering)f([W)o(ilson)i Fh(et)i(al.)p
Fj(,)e(1991)o(].)p eop
%%Page: 6 6
bop 340 194 a Fm(determine)9 b(automatically)f(where)h(to)f(allocate)h(the)f
(new)h(copy)g(of)f(the)h(object,)f(given)g(the)h(object')n(s)f(size)340
244 y(\(which)i(must)g(be)h(determined)f(by)g(language-speci\256c)h(code\).)
403 293 y(Before)e(a)h(scavenge)g(begins,)f(the)g(toolkit,)f(following)e(a)k
(dynamically)f(modi\256able)g(plan)g(supplied)340 343 y(by)i(the)g(language)g
(implementor)n(,)h(determines)f(the)g(generations)g(to)f(be)i(scavenged)g
(and)f(creates)i(new)340 393 y(steps)e(accordingly)m(.)f(It)f(also)i(sets)f
(up)g(all)g(the)g(promotion)f(step)h(references.)i(After)e(a)h(scavenge,)h
(all)d(the)340 443 y(old)14 b(steps)g(of)f(the)h(scavenged)h(generations)f
(are)h(deleted)f(and)g(their)f(blocks)h(become)h(available)f(for)340
493 y(allocation.)403 542 y(These)g(scavenge)h(techniques)d(work)h(well)g
(for)g(small)g(heaps.)h(In)f(lar)o(ge)g(heaps,)i(however)n(,)f(scav-)340
592 y(enging)c(older)h(and)f(older)h(generations)f(along)g(with)g(all)g
(younger)g(generations)h(becomes)h(disruptive.)340 642 y(In)e(order)g(to)f
(avoid)h(this)f(disruption)e(we)k(limit)d(the)i(number)g(of)g(generations)f
(in)g(the)h(heap.)h(Any)f(object)340 692 y(that)i(lives)f(through)f(several)j
(scavenges)g(is)f(moved)g(into)f Ff(matur)n(e)h(object)g(space)g
Fm(\(MOS\))g(where)g(it)g(is)340 742 y(collected)f(using)e(our)h
(non-disruptiv)o(e)e(algorithm.)340 867 y Fg(4)50 b(The)13
b(Matur)o(e)f(Object)f(Space)h(Algorithm)340 957 y Fm(W)m(e)h(now)f(describe)
g(mature)h(object)f(space,)h(its)f(structure)f(and)i(its)e(collection)g
(algorithm.)g(The)i(com-)340 1007 y(ponents)j(used)g(to)g(implement)g(this)g
(algorithm)e(are)j(the)g(same)g(as)g(those)f(used)h(to)e(implement)h(the)340
1057 y(garbage)11 b(collection)e(toolkit)f(for)i(young)f(objects.)i(In)f
(particular)n(,)g(the)g(blocks,)g(the)h(remembered)h(sets,)340
1106 y(and)h(the)f(scanning)h(and)f(copying)f(mechanisms)j(are)g(the)e(same)i
(for)e(both)f(mature)i(object)f(space)i(and)340 1156 y(generational)c(space.)
403 1206 y(First,)g(we)i(will)d(describe)j(how)e(mature)i(space)g(is)f
(divided)e(into)h(areas.)j(Second,)e(we)h(will)d(discuss)340
1256 y(the)i(remembered)i(set)e(mechanisms)h(used)f(to)g(track)g(pointers)f
(between)h(mature)h(space)g(areas.)h(Third,)340 1306 y(we)h(will)d(present)i
(the)g(rules)g(that)f(determine)h(where)g(mature)g(objects)g(are)h(placed.)f
(Fourth,)f(we)i(will)340 1356 y(show)8 b(how)g(collection)f(of)g(an)h(area)i
(results)d(in)h(objects)f(being)h(moved)g(so)g(that)f(any)h(unreachable)h
(object)340 1405 y(is)h(eventually)g(isolated)f(and)i(collected.)340
1520 y Fd(4.1)42 b(The)10 b(Structur)o(e)j(of)d(Matur)o(e)h(Object)g(Space)
340 1594 y Fm(Mature)i(object)g(space)h(is)f(divided)f(into)g
Ff(ar)n(eas)p Fm(,)i(just)e(as)i(young)e(object)h(space)h(is)f(divided)f
(into)f(gen-)340 1644 y(erations.)h(The)h(structure)e(of)h(an)g(area)h(is)f
(similar)g(to)f(a)i(generation)e(in)g(that)h(all)f(pointers)g(into)g(an)h
(area)340 1694 y(can)i(be)f(found)e(at)i(scavenge)h(time)f(\(i.e.,)g(each)h
(area)g(has)f(a)h(remembered)g(set\).)f(An)f(area)i(consists)f(of)340
1744 y(one)d(or)f(more)g(blocks.)h(These)g(blocks)f(are)h(the)f(same)i(as)f
(the)f(blocks)g(used)g(in)g(young)f(object)h(space)h(and)340
1793 y(share)j(the)e(same)i(bookkeeping)d(functions,)h(including)f(quick)h
(determination)f(of)h(the)h(area)h(in)e(which)340 1843 y(the)16
b(block)f(resides,)i(and)f(during)e(a)i(collection,)f(determination)g(of)g
(the)h(area)h(to)e(which)h(an)g(object)340 1893 y(should)10
b(be)h(copied.)g(In)g(addition,)e(blocks)h(support)g(determination)f(of)i
(whether)f(a)i(pointer)d(should)h(be)340 1943 y(recorded)h(in)f(a)h
(remembered)h(set.)f(Unlike)e(generations)h(in)g(the)g(heap,)h(age)g
(information)e(is)h(no)g(longer)340 1993 y(interesting,)f(so)i(areas)g(do)f
(not)g(have)g(steps.)403 2042 y(Unlike)g(Bishop')n(s)g(areas,)j(our)e(areas)h
(are)g(sized)g(so)f(that)g(each)h(individual)d(area)k(can)f(be)f(collected)
340 2092 y(quickly)m(.)k(The)h(collector)e(works)h(on)g(one)g(area)h(at)g(a)f
(time.)h(The)g(problem)e(with)h(a)g(straightforward)340 2142
y(implementation)10 b(of)g(Bishop')n(s)g(algorithm)f(with)h(limited)f(area)j
(size)g(is)f(that)f(a)h(multiple)e(area)j(circular)340 2192
y(structure)g(might)f(not)h(be)g(collected)h(because)g(local)g(information)d
(is)i(not)g(suf)o(\256cient)g(to)f(determine)i(if)340 2242
y(an)g(object)e(is)h(globally)f(unreachable.)i(Hence,)g(just)f(as)g(in)g
(Bishop')n(s)e(approach,)j(we)g(must)f(migrate)g(a)340 2292
y(multi-area)g(cycle)h(of)f(garbage)g(into)f(a)i(single)e(area)i(in)f(order)f
(to)h(reclaim)h(it.)e(However)n(,)i(the)f(limit)f(on)340 2341
y(area)g(size)f(makes)g(this)e(impossible)g(if)h(the)g(linked)f(structure)h
(is)g(lar)o(ger)g(than)g(can)h(\256t)f(into)f(a)h(single)g(area.)340
2391 y(Since)i(Bishop)e(did)g(not)h(restrict)f(the)h(size)h(of)f(areas,)i(he)
f(did)e(not)g(have)i(this)e(problem.)h(Hence,)i(the)e(key)340
2441 y(contribution)f(of)j(our)f(algorithm)g(is)h(insuring)e(that)h(we)i
(reclaim)f(lar)o(ge)g(structures)g(of)g(garbage)g(while)340
2491 y(still)d(imposing)g(the)h(limit)f(on)h(area)h(size,)h(so)e(that)g
(collections)f(will)g(be)h(non-disruptive.)p eop
%%Page: 7 7
bop 245 194 a Fm(T)m(o)10 b(further)f(describe)h(the)g(structure)f(of)h(MOS,)
g(we)h(\256rst)e(introduce)g(some)i(terminology)m(.)d(Pointers)183
244 y(to)g(mature)h(objects)g(from)g(outside)f(mature)h(object)f(space)j(are)
e Ff(r)n(oot)g(pointers)p Fm(.)f(Root)g(pointers)g(reside)h(in)183
293 y(young)f(object)h(space,)i(lar)o(ge)f(object)f(space,)i(on)f(the)f
(stack,)h(in)f(registers,)h(and)f(in)g(static)g(areas.)j(Objects)183
343 y(immediately)g(reachable)h(from)g(roots)e(are)j Ff(leaders)p
Fm(.)f(Objects)f(that)g(are)i(not)d(immediately)h(reachable)183
393 y(from)e(roots,)g(but)f(still)g(reachable)i(from)f(objects)g(in)g(mature)
g(object)g(space,)i(are)f Ff(followers)p Fm(.)245 443 y(W)m(e)j(will)e(use)i
(a)g(train)f(metaphor)g(to)g(describe)h(the)g(algorithm.)e(An)h(area)i(can)f
(be)g(thought)e(of)h(as)183 493 y(a)i(railroad)f Ff(car)p Fm(.)i(The)f(cars)h
(are)g(used)f(to)f(bound)g(the)g(amount)h(of)f(work)h(that)f(is)g(done)h
(during)e(each)183 542 y(invocation)g(of)i(the)f(collector)n(.)h(A)g(group)f
(of)h(cars)h(holding)c(a)k(linked)e(structure)g(of)h(objects)g(can)g(be)183
592 y(thought)e(of)i(as)i(a)f Ff(train)p Fm(.)e(T)o(rains)i(are)g(used)g(to)e
(group)h(lar)o(ge)h(related)f(objects)h(so)f(that)g(they)g(can)h(be)183
642 y(managed)11 b(as)g(a)g(unit.)183 764 y Fd(4.2)41 b(Roots)10
b(and)g(Remember)o(ed)i(Sets)183 844 y Fm(Each)17 b(area)h(has)f(an)f
(associated)h(remembered)h(set,)f(which)f(allows)g(us)h(to)e(\256nd)h(all)h
(pointers)e(from)183 894 y(outside)c(the)h(area)i(that)e(refer)g(to)g
(objects)g(in)g(the)g(area.)i(However)n(,)f(since)g(we)g(will)e(scavenge)j
(an)e(area)183 944 y(only)g(when)h(all)g(young)g(spaces)i(are)f(also)f
(scavenged,)i(and)f(since)f(all)h(scavenges)g(process)g(all)f(roots)183
994 y(\(stack\(s\),)d(registers,)g(static)g(areas\),)h(remembered)h(sets)e
(for)g(areas)h(need)f(only)f(track)h(references)i(from)183
1043 y(other)g(MOS)h(areas.)i(The)e(remembered)i(set)e(for)g(a)g
Ff(train)f Fm(is)h(simply)f(the)h(union)e(of)i(the)g(remembered)183
1093 y(sets)d(of)g(its)g(cars,)h(less)g(any)f(intra-train)f(references.)245
1143 y(A)f(more)h(subtle)e(remembered)j(set)e(property)f(comes)j(from)e(the)g
(fact)g(that)g(the)g(algorithm)e(processes)183 1193 y(areas)17
b(in)d(round-robin)f(order)n(.)j(T)m(o)f(understand)g(this,)g(suppose)h(we)g
(assign)f(each)i(area)f(a)g(sequence)183 1243 y(number)n(,)g(and)f(when)h(an)
f(area)i(is)e(scavenged,)i(it)d(is)i(assigned)f(the)g(next)g(highest)g
(number)n(.)g(Then)h(a)183 1292 y(remembered)i(set)f(need)g(only)e(record)i
(references)h(from)f(higher)e(numbered)i(to)f(lower)g(numbered)183
1342 y(areas.)11 b(When)e(an)h(area)h(is)e(collected,)h(its)e(number)i(will)e
(be)i(the)f(lowest,)g(and)g(hence)i(we)f(will)e(be)h(able)h(to)183
1392 y(\256nd)g(all)g(the)g(references)i(from)e(other)f(areas)j(into)d(the)h
(collected)g(area.)245 1442 y(W)m(e)i(gain)f(two)f(advantages)i(from)f
(handling)f(the)h(remembered)i(sets)e(this)g(way)m(.)h(First,)f(we)h(reduce)
183 1492 y(the)e(total)g(volume)h(of)f(remembered)j(set)e(information.)e(If)i
(pointers)f(are)i(evenly)e(distributed)f(in)h(terms)183 1541
y(of)g(the)g(direction)f(they)g(point,)g(the)h(remembered)i(sets)f(would)e
(be)h(half)g(as)h(big,)f(but)f(it)h(is)g(not)f(clear)i(that)183
1591 y(the)d(algorithm)g(leads)h(to)g(such)g(distribution)o(s,)e(so)i(the)g
(magnitude)f(of)h(this)f(bene\256t)h(is)g(unclear)n(.)g(Second,)183
1641 y(and)16 b(perhaps)h(more)g(importantly)m(,)e(we)i(do)g(not)f(have)h(to)
f(update)g Ff(other)g Fm(area')n(s)i(remembered)g(sets)183
1691 y(when)10 b(an)h(area)g(is)f(scavenged.)i(This)e(is)g(because)i(none)e
(of)g(the)g(scavenged)i(area')n(s)f(information)d(could)183
1741 y(possibly)j(be)h(recorded)h(in)f(the)g(other)f(area')n(s)j(remembered)g
(sets,)f(since)g(such)f(entries)g(would)f(record)183 1791 y(pointers)d(from)h
(lower)o(-numbered)f(areas)j(to)d(higher)o(-numbered)g(ones,)i(which)f(our)f
(directionality)f(rule)183 1840 y(speci\256cally)j(does)h(not)e(record.)245
1890 y(The)h(toolkit)d(leaves)k(the)e(structure)h(of)f(the)g(remembered)j
(sets)e(up)f(to)g(the)h(language)f(implementor)n(.)183 1940
y(The)k(toolkit)e(does,)j(however)n(,)f(provide)f(several)i(alternative)e
(implementations)g(including)f(remem-)183 1990 y(bering)j(slots,)h(objects,)g
(cards,)h(or)f(pages.)h(See)h([Hosking)8 b Ff(et)13 b(al.)p
Fm(,)d(1992)o(])15 b(for)g(performance)h(studies)183 2040 y(comparing)10
b(the)g(available)g(techniques.)183 2161 y Fd(4.3)41 b(Collecting)9
b(an)i(Ar)o(ea)g(in)f(Matur)o(e)h(Object)g(Space)183 2242 y
Fm(As)e(previously)e(mentioned,)i(we)h(process)f(areas)i(in)d(round)g(robin)g
(order)n(,)h(collecting)f(one)h(area)h(\(or)f(car\))183 2292
y(upon)h(each)j(scavenge)f(of)f(MOS)h(\(which)f(implies)f(that)h(all)g(young)
f(generations)h(are)h(also)g(scavenged)183 2341 y(at)e(the)g(same)i(time\).)
245 2391 y(There)f(is)f(a)g(check)h(that)f(is)f(always)i(done)f(before)g
(collecting)f(a)h(car:)h(if)e(there)h(are)h(no)f(root)f(pointers)183
2441 y(to)h(the)g(train)g(whose)h(car)g(is)f(about)g(to)g(be)h(collected,)g
(then)f(we)h(check)h(the)e(train')n(s)f(remembered)k(set.)e(If)183
2491 y(the)d(remembered)h(set)f(is)g(empty)m(,)h(then)f(the)f(entire)h(train)
f(can)i(be)g(reclaimed)f(with)f(no)h(further)f(ef)o(fort.)h(W)m(e)p
eop
%%Page: 8 8
bop 340 194 a Fm(can)14 b(readily)d(enhance)j(the)e(remembered)i(set)f
(bookkeeping)e(to)g(make)j(the)e(check)h(ef)o(\256cient)g(\(though)340
244 y(possibly)j(inaccurate)h(for)f(one)h(round)f(robin)f(cycle)i(of)g
(scavenging\):)f(record)h(with)e(each)j(car)f(the)340 293 y(number)d(of)f
(extra-train)f(references)j(to)d(objects)h(in)g(that)g(car)n(,)i(and)e(also)g
(keep)h(a)g(sum)f(across)i(all)d(the)340 343 y(cars)g(\(easily)e(updated)f
(as)i(cars)h(are)f(collected)f(\(removed\))g(or)g(added\).)721
445 y
 11840716 11011860 8551628 24997068 26641612 41837199 startTexFig
721 445 a
%%BeginDocument: leaders.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 -4 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 148 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 397 612 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 397 460 ] concat
[
(Train B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 144 531 ] concat
[
(Root)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 162 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 273 148 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 273 -4 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 160 683 ] concat
[
(Before)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 304 683 ] concat
[
(After)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 164 ] concat
55 364
63 364
63 300
3 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 281 318 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 280 531 ] concat
[
(Root)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 164 ] concat
183 364
215 364
215 436
3 MLine
End

Begin %I Line
3 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -357 338.5 ] concat
629 349 629 79 Line
End

End %I eop

showpage


end
%%EndDocument
 721 445 a
 endTexFig
683 1230 a Fi(Fig.)c(1.)k Fj(Leaders)d(in)j(T)o(rain)f(B)g(are)g(moved)f
(into)h(another)g(train.)403 1371 y Fm(When)14 b(a)h(car)h(is)e(collected)g
(we)h(refer)g(to)f(it)g(as)h(a)g Ff(fr)n(om)f Fm(car)n(.)h(Each)h(reachable)f
(object)f(in)g(a)h Ff(fr)n(om)340 1421 y Fm(car)g(has)g(an)g(associated)g
Ff(to)e Fm(car)i(which)f(is)g(determined)g(by)g(how)g(the)g(object)g(is)g
(reached.)i(First,)e(we)340 1471 y(copy)e(any)h(objects)f(in)f(the)i(car)g
(referred)f(to)g(by)g(roots)f(into)g(either)h(a)h(new)g(train)e(or)h(some)h
Ff(other)f Fm(train)340 1521 y(\(Figure)g(1\).)g(Which)g(train)f(we)i(choose)
f(is)g(a)h(policy)e(decision)h(that)f(does)h(not)g(af)o(fect)h(the)e
(correctness)340 1570 y(of)g(the)g(algorithm.)f(Next,)h(we)h(scan)g(the)f
(copied)g(objects)g(and)g(copy)g(over)n(,)g(in)g(typical)f(copy)h(collector)
340 1620 y(style,)g(all)e(other)h(objects)g(in)g(the)g Ff(fr)n(om)g
Fm(car)h(reachable)h(from)e(objects)g(in)f(the)h(other)g(train.)403
1670 y(At)h(the)h(same)h(time)f(we)g(move)h(objects)e(being)g(promoted)h
(from)f(young)g(generations)g(into)g(trains)340 1720 y(holding)c(references)j
(to)f(them,)g(or)f(if)g(they)h(are)g(referred)h(to)e(by)g(roots,)g(into)g
(any)g(train.)h(Since)g(the)f(young)340 1770 y(generations)h(are)h(bounded)f
(in)g(size,)h(the)f(volume)g(of)g(promoted)g(objects)g(is)g(also)g(bounded,)g
(so)h(we)g(can)340 1819 y(bound)g(the)g(disruption)d(caused)12
b(by)e(promotions)1061 1804 y Fl(5)1075 1819 y Fm(.)403 1869
y(At)g(this)f(point)g(the)h Ff(fr)n(om)g Fm(car)h(may)g(still)e(contain)h
(reachable)h(follower)e(objects,)h(but)g(they)g(must)g(be)340
1919 y(reachable)f(only)d(from)i(other)e(cars.)j(Using)e(the)g
Ff(fr)n(om)h Fm(car)r(')n(s)f(remembered)i(set,)f(we)g(locate)g(all)f
(references)340 1969 y(from)k(outside)f(the)g(train)g(to)g(objects)g(still)g
(in)g(the)g Ff(fr)n(om)h Fm(car)n(,)h(and)f(move)g(them)f(to)h(the)f(train)g
(containing)340 2019 y(the)g(reference.)j(See)e(Figure)h(2.)403
2069 y(The)d(only)e(remaining)h(reachable)i(objects)e(in)g(the)h
Ff(fr)n(om)f Fm(car)i(are)f(reachable)h(from)e(other)g(cars)i(in)d(the)340
2118 y(same)14 b(train.)d(These)i(objects)e(are)i(moved)f(into)e(the)i(last)f
(car)i(of)e(the)h(train)f(as)h(illustrated)e(in)h(Figure)h(3.)340
2168 y(This)e(leaves)g(only)e(unreachable)i(objects)f(in)g(the)g(car)n(.)i
(The)f(space)g(for)f(these)h(objects)f(is)g(then)g(recycled.)403
2218 y(This)k(is)f(similar)h(to)f(Bishop')n(s)g(approach.)h(If)g(the)g(train)
f(to)h(which)f(we)i(want)f(to)f(move)h(an)h(object)340 2268
y(is)g(full,)f(we)h(add)f(a)i(car)f(to)f(that)g(train)g(and)h(copy)f(the)h
(object)f(there.)h(In)f(any)h(case,)h(an)f(object)g(that)f(is)340
2318 y(reachable)c(from)e(outside)g(the)h(train)e(being)h(collected)h(is)f
(moved)h(to)f(some)h(other)f(train)g(\(thus)g(collapsing)340
2367 y(garbage)k(into)e(fewer)i(trains)f(and)g(eventually)f(a)i(single)f
(train\),)f(or)h(\(if)g(unreachable\))h(is)f(reclaimed.)p 340
2401 237 2 v 354 2429 a Fk(5)378 2445 y Fj(Setting)c(the)g(size)g(of)h(young)
e(generations)g(is)h(a)g(policy)g(decision.)g(The)f(size)h(can)g(be)f
(limited)j(by)e(collecting)g(young)378 2491 y(generations)h(more)i(often)h
(or)f(by)g(promoting)g(more)g(objects)f(into)h(mature)h(space)d(during)i
(each)f(collection.)p eop
%%Page: 9 9
bop 594 152 a
 10893473 7189686 723599 39534837 18550456 51375554 startTexFig
594 152 a
%%BeginDocument: follow.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 14.9999 842 ] concat
[
(Before)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -16.0001 330 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -32.0001 522 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -16.0001 235 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -32.0001 399.5 ] concat
55 284 71 300 Rect
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 14.9999 516 ] concat
32 578 32 369 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 166 842 ] concat
[
(After)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 161 522 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 135 330 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 119 522 ] concat
55 284 71 300 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -8.00019 346 ] concat
199 468
223 468
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 261.5 794 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 264.5 699 ] concat
[
(Train B)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 135 235 ] concat
31 420 111 500 Rect
End

Begin %I Line
3 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -76.0001 332.5 ] concat
204 509 204 324 Line
End

End %I eop

showpage


end
%%EndDocument
 594 152 a
 endTexFig
384 695 a Fi(Fig.)7 b(2.)i Fj(Followers)g(in)g(T)o(rain)g(B)g(reachable)f
(from)i(another)e(train)i(are)f(moved)f(there.)594 811 y
 10893473 10021991 986726 35719495 17497948 50980864 startTexFig
594 811 a
%%BeginDocument: follow1.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 19.9999 836 ] concat
[
(Before)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 19.9999 700 ] concat
[
(After)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -11.0001 188 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 19.9999 604 ] concat
[
(Car A)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -11.0001 321 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -5.00009 513 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 19.9999 737 ] concat
[
(Car A)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 126 187.5 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 379.5 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 111 379.5 ] concat
55 284 71 300 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -17.0001 203.5 ] concat
199 468
223 468
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 157 603.5 ] concat
[
(Car B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 246.5 651.5 ] concat
[
(Train A)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 126 321 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 112 513.5 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 157 737 ] concat
[
(Car B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 246.5 785 ] concat
[
(Train A)
] Text
End

Begin %I Line
3 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 21.4999 523 ] concat
0 381 467 381 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -75.0002 236 ] concat
241 569 142 569 Line
End

End %I eop

showpage


end
%%EndDocument
 594 811 a
 endTexFig
577 1533 a Fi(Fig.)e(3.)k Fj(Other)f(followers)h(are)f(moved)f(to)h(the)g
(last)g(car)n(.)245 1735 y Fm(Of)i(course,)h(we)f(scan)h(moved)f(objects,)g
(and)g(evacuate)h(any)g(remaining)e(reachable)i(objects)f(from)183
1785 y(the)e(car)n(.)i(W)m(e)f(collect)f(cars)i(in)e(the)g(order)g(they)h
(were)g(linked)f(onto)f(the)i(train.)f(Since)h(we)g(check)g(to)f(see)i(if)183
1835 y(an)g(object)f(is)h(referred)g(to)f(by)h(another)f(train)g
Ff(befor)n(e)h Fm(we)h(check)f(references)i(inside)d(the)g(train,)h(objects)
183 1884 y(referred)h(to)e(directly)h(from)g(other)g(trains)g(will)f(always)i
(moved)f(out)g(of)g(this)f(train.)h(This)h(is)f(important)183
1934 y(since)f(a)h(train)e(might)g(contain)g(a)i(multi-area)e(cycle)i(of)f
(objects)f(that)h(\252belongs)f(in\272)h(another)g(train,)f(i.e.,)183
1984 y(is)h(not)f(reachable)j(from)e(the)g(leaders)h(of)f(this)f(train.)245
2063 y(The)h(objects)f(that)f(are)i(referenced)h(during)d(any)h(one)g
(invocation)f(of)h(the)g(algorithm)e(are)k(just)d(those)183
2113 y(objects)k(that)f(are)j(involved)c(with)i(the)g(car)h(where)g(we)g(are)
g(currently)e(focused,)i(either)f(as)i(a)e(member)183 2163
y(of)e(the)h(car)g(or)f(by)h(pointing)d(into)h(the)i(car)n(.)g(This)g
(locality)e(is)i(known)e(ahead)j(of)e(time)h(so)g(the)f(algorithm)183
2213 y(will)g(be)i(able)g(to)g(provide)e(the)i(operating)f(system)h(hints)f
(about)g(what)g(locations)g(it)g(will)g(need)h(during)183 2262
y(the)e(next)g(cycle)h(of)f(the)g(collector)n(.)245 2341 y(Since)e(the)f
(algorithm)f(periodically)g(copies)h(all)g(reachable)i(objects)e(in)g(mature)
h(space,)h(it)d(reclusters)183 2391 y(live)g(objects)h(at)h(no)f(additional)e
(cost.)j(During)e(the)h(copying,)f(we)i(can)g(apply)f(sophisticated)f
(compaction)183 2441 y(and)k(clustering)g(techniques)g(such)h(as)g(those)g
(described)f(by)h(W)n(ilson)f([W)n(ilson)f Ff(et)j(al.)p Fm(,)f(1991)o(].)g
(In)f(addi-)183 2491 y(tion,)e(this)g(algorithm)f(avoids)h(the)h
(fragmentation)f(that)g(can)i(occur)f(with)f(mark)h(and)g(sweep)h
(collectors.)p eop
%%Page: 10 10
bop 340 194 a Fd(4.4)42 b(Why)10 b(the)g(Collector)g(W)n(orks)340
290 y Fm(Having)i(presented)g(the)g(collection)f(algorithm,)g(we)h(now)g(ar)o
(gue)g(that)g(it)f(will)g(eventually)g(collect)h(all)340 340
y(unreachable)17 b(objects,)f(even)h(lar)o(ge)f(cycles)h(of)f(garbage.)h
(Suppose)f(we)g(have)h(some)f(garbage)h(that)340 390 y(threads)c(through)f(a)
h(number)h(of)e(trains.)h(As)g(we)h(process)g(the)f(lowest)f(numbered)i
(train,)e(car)i(by)f(car)n(,)340 440 y(one)d(of)g(three)g(things)f(will)f
(happen)i(to)f(each)j(object:)d(it)g(will)f(be)j(detected)f(as)h(garbage)f
(and)g(reclaimed;)340 489 y(it)e(will)g(be)h(moved)g(to)f(another)h(train;)e
(or)i(it)f(will)f(be)j(moved)e(to)h(another)f(car)i(of)e(the)h(same)h(train)e
(\(but)g(not)340 539 y(a)j(car)f(of)f(the)h Ff(new)f Fm(train\).)g(The)i
(last)e(case)i(will)e(not)g(repeat)h(inde\256nitely)m(,)e(since)i(eventually)
f(we)h(reach)h(a)340 589 y(situation)d(where)i(we)h(have)f(reclaimed)g(or)g
(moved)g(to)f(other)g(trains)g(all)g(objects)h(reachable)h(from)e(roots)340
639 y(or)14 b(other)g(trains,)g(and)g(the)g(remembered)i(set)f(of)f(the)g
(current)f(train)h(will)f(be)h(empty)m(.)h(By)f(induction,)340
689 y(then,)f(in)f(one)g(round)f(robin)g(pass)i(of)f(the)h(trains,)f(the)g
(garbage)h(structure)f(will)f(be)h(compacted)i(into)d(a)340
738 y(single)e(train.)h(Again,)f(we)h(see)h(that)e(as)h(we)h(process,)f(car)h
(by)e(car)n(,)i(eventually)e(the)g(train')n(s)g(remembered)340
788 y(set)i(will)e(be)h(empty)h(and)f(the)g(garbage)h(then)f(reclaimed.)403
841 y(Each)h(train)f(pass)h(may)g(require)f(objects)g(to)g(be)h(copied)f
(several)h(times)g(to)e(other)h(cars)i(in)d(the)i(train,)340
891 y(but)f(each)i(pass)g(through)d(the)i(cars)g(in)g(a)g(train)f(will)g
(reduce)h(the)g(number)g(of)f(objects)h(since)g(any)g(object)340
940 y(referenced)g(from)e(outside)f(the)h(train)g(will)f(be)i(moved.)f(By)g
(induction)e(each)k(pass)f(through)d(the)i(cars)i(on)340 990
y(a)g(train)f(will)f(either)h(reduce)h(the)f(size)h(of)f(the)g(train)f(or)h
(reclaim)h(the)f(entire)g(train.)403 1043 y(One)d(way)h(to)f(conceptualize)g
(the)g(algorithm)f(is)h(as)h(pulling)d(dif)o(ferent)i(threads)g(or)g(chains)h
(of)f(objects)340 1092 y(apart,)j(until)d(garbage)j(is)f(isolated)f(and)i
(then)e(reclaimed.)j(Of)e(course,)h(smaller)f(garbage)h(structures)f(are)340
1142 y(reclaimed)j(sooner)f(and)f(with)g(less)h(copying,)f(but)g(the)h(point)
e(is)i(that)f(the)h(algorithm)e(is)i(guaranteed)g(to)340 1192
y(reclaim)d(garbage)g(in)f(a)h(train)f(or)g(evacuate)i(it)d(into)g(another)h
(train)g(within)f Ff(O)p Fc(\()p Ff(n)1455 1177 y Fl(2)1471
1192 y Fc(\))i Fm(car)g(collections,)f(where)340 1242 y Ff(n)14
b Fm(is)f(the)g(number)h(of)f(cars)h(in)f(the)h(train.)f(Since)g(pieces)i(of)
e(garbage)h(structures)f(can)h(not)f(be)h(copied)340 1292 y(back)i(into)d(a)j
(train)e(from)g(which)h(they)f(were)i(evacuated,)g(the)f(algorithm)e(takes)i
(at)g(most)g(one)g(pass)340 1342 y(through)9 b(the)h(trains)f(to)h(collect)f
(a)i(garbage)g(structure)1123 1326 y Fl(6)1149 1342 y Fm(while)e(retaining)g
(the)h(desired)g(non-disruptiv)o(e,)340 1391 y(incremental)h(behavior)n(.)340
1539 y Fg(5)50 b(An)12 b(Example)340 1652 y Fm(The)20 b(next)e(several)h
(\256gures)g(illustrate)e(a)i(simple)f(example)h(of)f(how)h(the)f(algorithm)f
(works.)i(For)340 1702 y(simplicity)12 b(we)h(will)f(assume)i(the)f(maximum)h
(number)f(of)g(objects)f(that)h(can)h(\256t)e(in)h(a)g(car)h(is)f(3.)g(This)
340 1752 y(means)f(that)d(any)i(given)e(invocation)g(of)h(the)g(collector)g
(will)f(move)h(at)h(most)f(three)g(objects.)403 1804 y(In)f(Figure)j(4)d(we)i
(show)e(three)h(data)g(structures.)f(One)h(structure,)f(consisting)g(of)g
(objects)g(R,)h(S,)g(and)340 1854 y(T)m(,)j(is)g(reachable)g(from)f(a)h
(root.)f(The)h(structure)e(consisting)g(of)h(object)g(A)g(and)g(B)h(is)f
(circular)g(garbage)340 1904 y(spanning)f(two)f(trains.)h(The)h(other)e
(structure,)h(consisting)f(of)g(objects)h(C,)h(D,)f(E)h(and)f(F)m(,)g(forms)g
(a)h(lar)o(ge)340 1954 y(circular)h(structure)g(of)f(garbage)i(that)e(can)i
(not)e(\256t)g(into)g(one)h(car)n(.)h(W)m(e)f(will)f(show)h(how)f(the)h
(structure)340 2004 y(C-D-E-F)d(is)g(isolated)g(and)g(freed)h(and)f(how)g
(A-B)g(is)g(consolidated)f(and)i(freed.)403 2056 y(W)m(e)e(start)f(by)g
(applying)f(the)i(rules)f(to)g(train)g(B.)h(Is)g(any)f(object)h(in)f(the)g
(train)g(reachable)i(from)e(outside)340 2106 y(of)14 b(train)e(B?)i(Both)e
(object)h(A)h(and)g(object)f(R)g(are)h(reachable)h(so)e(we)h(focus)g(our)f
(attention)f(on)h(car)h(1.)340 2156 y(Leader)e(R)e(is)g(evacuated)i(to)e
(another)g(train.)g(The)h(choice)f(of)g(which)g(train)g(is)g(a)h(policy)e
(decision.)i(Here)340 2206 y(we)g(chose)h(train)d(A)i(instead)f(of)g
(creating)h(a)g(new)f(train.)g(Next)h(follower)e(B)h(is)h(reachable)g(from)g
(train)e(A)340 2255 y(so)i(it)e(is)h(evacuated)h(to)f(train)f(A.)i(Object)f
(C)g(is)g(only)f(reachable)i(from)f(train)f(B)h(so)g(C)g(is)g(moved)h(into)d
(the)340 2305 y(last)i(car)h(in)f(train)g(B.)g(The)h(space)g(used)g(for)f
(car)h(1)f(is)g(now)g(recycled.)h(Figure)h(5)e(shows)g(the)g(state)h(of)e
(the)340 2355 y(trains)h(after)g(the)h(\256rst)f(invocation)e(of)i(the)g
(algorithm.)p 340 2401 237 2 v 354 2429 a Fk(6)378 2445 y Fj(It)g(might)f
(require)g(two)g(passes)e(through)i(the)f(objects)g(if)i(the)f(train)h
(remembered)e(set)h(information)g(is)g(managed)378 2491 y(as)f(previously)g
(discussed.)p eop
%%Page: 11 11
bop 489 152 a
 14208860 9519932 2828615 33351352 25260195 48546938 startTexFig
489 152 a
%%BeginDocument: fig2-1.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 97 148 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 97 300 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 47.9998 795 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 47.9998 643 ] concat
[
(Train B)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 81 492 ] concat
55 284 71 300 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 97 316 ] concat
47 460
47 300
2 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 81 316 ] concat
55 284 71 300 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 97 382 ] concat
55 226
71 226
71 402
55 402
4 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 121 340 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 121 292 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 48 587 ] concat
[
(Root)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -53 374 ] concat
133 210
229 210
2 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 201 148 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 305 148 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 233 340 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 193 340 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 297 292 ] concat
55 284 71 300 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 193 292 ] concat
55 284 71 300 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 47 382 ] concat
145 250
201 250
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 47 382 ] concat
217 250
241 250
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 47 374 ] concat
145 210
201 210
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 47 374 ] concat
217 210
305 210
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 140 612 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 140.5 788 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 180.5 588 ] concat
[
(R)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 252.5 588 ] concat
[
(S)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 357 588 ] concat
[
(T)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 180 636 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 252 636 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 292.5 636 ] concat
[
(E)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 128 563 ] concat
[
(Car 1)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 232 563 ] concat
[
(Car 2)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 336 563 ] concat
[
(Car 3)
] Text
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -32 152 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 188 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 388.5 484 ] concat
[
(F)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -76 183 ] concat
380 449
428 449
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -76 183 ] concat
436 441
436 425
260 425
260 441
4 MLine
End

End %I eop

showpage


end
%%EndDocument
 489 152 a
 endTexFig
692 842 a Fi(Fig.)7 b(4.)i Fj(The)f(starting)i(con\256guration)489
903 y
 14208860 9519932 5723013 22694707 28154593 37890293 startTexFig
489 903 a
%%BeginDocument: fig2-2.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 145 -27.9998 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 145 124 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 95.9998 619 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 95.9998 467 ] concat
[
(Train B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 96 419 ] concat
[
(Root)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 249 -27.9998 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 353 -27.9998 ] concat
31 420 111 500 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 95 206 ] concat
217 250
241 250
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 95 198 ] concat
217 210
305 210
2 MLine
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 56 512 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -196 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172 99.9998 ] concat
[
(A)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 16 336 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -20.0002 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172.5 276 ] concat
[
(B)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -24 480 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212.5 83.9998 ] concat
[
(R)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 16 328 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284.5 83.9998 ] concat
[
(S)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 16 328 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 389 83.9998 ] concat
[
(T)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 224 336 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212 124 ] concat
[
(C)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 16 336 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284 124 ] concat
[
(D)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 16 336 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 265 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 324.5 124 ] concat
[
(E)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 280 387 ] concat
[
(Car 2)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 384 387 ] concat
[
(Car 3)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -35 215 ] concat
227 385
227 369
267 369
267 385
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -35 215 ] concat
259 393
235 393
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -35 215 ] concat
387 241
435 241
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -35 215 ] concat
163 201
187 201
187 345
219 345
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -35 215 ] concat
227 337
227 193
331 193
3 MLine
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 16 -23.9998 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 188 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 388.5 484 ] concat
[
(F)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -28 70.0002 ] concat
468 394
468 418
332 418
332 394
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -28 70.0002 ] concat
444 386
460 386
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 176 388 ] concat
[
(Freed Car 1)
] Text
End

End %I eop

showpage


end
%%EndDocument
 489 903 a
 endTexFig
566 1593 a Fi(Fig.)d(5.)i Fj(Evacuate)e(leader)i(R,)g(group)g(A-B)h(and)e
(copy)g(C.)245 1741 y Fm(The)16 b(second)h(invocation)d(of)h(the)h(collector)
f(focuses)i(on)e(car)i(2)e(in)h(Figure)11 b(5.)17 b(No)e(objects)h(are)183
1790 y(referenced)c(by)e(roots,)g(so)h(we)g(look)e(for)i(objects)f(in)g(car)h
(2)g(referenced)h(from)e(outside)g(train)g(B.)h(Object)183
1840 y(S)h(is)g(referenced)i(from)e(train)g(A,)h(so)f(we)h(move)f(S)h(into)e
(train)h(A.)g(Since)h(all)f(cars)h(in)f(train)g(A)g(are)h(full,)183
1890 y(we)c(need)h(to)e(add)h(another)g(car)h(to)f(make)h(room)f(for)f(S.)i
(Finally)m(,)e(we)i(look)e(for)h(objects)f(referenced)j(from)183
1940 y(other)g(cars)j(in)e(the)g(train.)g(Object)g(D)g(is)g(moved)h(into)e
(the)h(last)g(car)h(of)g(the)f(train.)g(Car)g(3)g(is)h(full)e(so)h(we)183
1990 y(create)g(a)f(new)g(car)g(to)f(make)i(room)f(for)f(object)g(D.)h(The)h
(scanning)e(of)h(object)f(D)h(\256nds)f(object)g(E)i(in)e(car)183
2039 y(2.)i(E)g(is)f(evacuated)i(into)e(car)h(4.)g(This)g(gives)g(us)f(the)h
(state)g(found)f(in)g(Figure)h(6.)g(Notice)f(how)h(the)f(live)183
2089 y(R-S-T)f(structure)f(is)h(being)g(extracted)h(from)f(the)g(dead)h
(C-D-E-F)f(structure.)245 2141 y(On)j(the)h(next)f(invocation)f(of)h(the)g
(algorithm)f(we)i(note)f(that)g(train)g(B)g(is)h(still)e(referenced)j(so)e
(we)183 2190 y(focus)e(on)g(car)h(3.)f(Again)g(no)g(objects)g(are)h
(referenced)g(by)f(roots.)g(Follower)f(T)i(is)f(referenced)i(by)d(train)183
2240 y(A)f(so)g(it)f(is)h(moved)g(into)e(train)h(A.)i(Object)f(T)g(is)g
(scanned)g(but)g(contains)f(no)h(references)h(into)e(car)i(3.)f(Next)183
2290 y(we)h(consider)f(references)i(from)e(within)f(the)h(train)f(B.)i
(Object)f(F)h(is)f(so)g(referenced)i(so)f(it)e(is)h(moved)h(into)183
2340 y(car)g(4.)h(The)f(scan)h(of)f(object)g(F)g(\256nds)g(a)g(reference)i
(to)d(C.)h(Since)h(car)g(4)f(is)f(full)g(a)i(new)f(car)h(is)f(attached)g(to)
183 2390 y(the)f(end)g(of)g(the)g(train)f(and)i(C)f(is)g(moved)g(into)f(it.)g
(At)h(this)g(point)e(\(shown)i(in)f(Figure)k(7\))d(structure)g(R-S-T)183
2439 y(has)h(been)h(separated)g(from)f(structure)g(C-D-E-F)g(like)g(pulling)e
(spaghetti)h(out)g(onto)g(a)i(fork.)245 2491 y(The)h(next)f(invocation)f(of)h
(the)g(algorithm)f(notes)h(that)g(train)g(B)g(has)h(no)f(references)i(into)d
(it,)h(so)h(the)p eop
%%Page: 12 12
bop 646 152 a
 14208860 9519932 4736286 33351352 27167866 48546938 startTexFig
646 152 a
%%BeginDocument: fig2-3.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 148 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 129 300 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 79.9998 795 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 79.9998 643 ] concat
[
(Train B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 80 595 ] concat
[
(Root)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 233 148 ] concat
31 420 111 500 Rect
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 40 688 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -196 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172 99.9998 ] concat
[
(A)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 0 512 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -20.0002 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172.5 276 ] concat
[
(B)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -40 656 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212.5 83.9998 ] concat
[
(R)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 0 656 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284.5 83.9998 ] concat
[
(S)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -104 504 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 389 83.9998 ] concat
[
(T)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 112 512 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212 124 ] concat
[
(C)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 104 512 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284 124 ] concat
[
(D)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 104 512 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 265 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 324.5 124 ] concat
[
(E)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 264 563 ] concat
[
(Car 3)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -51 391 ] concat
227 385
227 369
267 369
267 385
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -51 391 ] concat
259 393
235 393
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -51 391 ] concat
163 201
187 201
187 345
219 345
4 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 233 300 ] concat
31 420 111 500 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -51 483 ] concat
235 253
331 253
2 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 337 148 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 368 563 ] concat
[
(Car 4)
] Text
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -104 152 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 188 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 388.5 484 ] concat
[
(F)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -148 309 ] concat
444 323
468 323
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -148 309 ] concat
484 323
532 323
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -148 309 ] concat
548 323
572 323
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -148 309 ] concat
580 331
580 355
436 355
436 331
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -13 164 ] concat
301 564
301 540
269 540
269 420
293 420
5 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 160 564 ] concat
[
(Freed Car 2)
] Text
End

End %I eop

showpage


end
%%EndDocument
 646 152 a
 endTexFig
749 842 a Fi(Fig.)7 b(6.)i Fj(Evacuate)e(follower)j(S)f(and)g(copy)f(D)h(and)
f(E.)646 929 y
 14208860 9662020 2828615 33943388 24799723 49007411 startTexFig
646 929 a
%%BeginDocument: fig2-4.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 97 308 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 47.9998 803 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 47.9998 651 ] concat
[
(Train B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 48 603 ] concat
[
(Root)
] Text
End

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 96.9999 156.001 ] concat
31 420 111 500 Rect
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 8 696.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -196 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172 99.9998 ] concat
[
(A)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -32 520.001 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -20.0002 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172.5 276 ] concat
[
(B)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -72 664.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212.5 83.9998 ] concat
[
(R)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -32 664.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284.5 83.9998 ] concat
[
(S)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -96 664.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 389 83.9998 ] concat
[
(T)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 136 520.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212 124 ] concat
[
(C)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -32.0001 520.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284 124 ] concat
[
(D)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -32.0001 520.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 265 -172 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 324.5 124 ] concat
[
(E)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -83 399.001 ] concat
227 385
227 369
267 369
267 385
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -83 399.001 ] concat
259 393
235 393
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -83 399.001 ] concat
163 201
187 201
187 345
219 345
4 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 201 308 ] concat
31 420 111 500 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -83 491.001 ] concat
235 253
331 253
2 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 201 156.001 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 232 572.001 ] concat
[
(Car 4)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -83 552.001 ] concat
347 192
371 192
2 MLine
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -96.0001 120.001 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 188 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 388.5 484 ] concat
[
(F)
] Text
End

End %I eop

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 297 156.001 ] concat
31 420 111 500 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -284 348.001 ] concat
548 292
572 292
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 328 572.001 ] concat
[
(Car 5)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -221 164 ] concat
517 468
517 444
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -221 164 ] concat
525 436
573 436
573 468
3 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -221 164 ] concat
573 484
573 508
477 508
477 484
4 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 128 572.001 ] concat
[
(Freed Car 3)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 128 724 ] concat
[
(Car 6)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 232 724 ] concat
[
(Car 7)
] Text
End

End %I eop

showpage


end
%%EndDocument
 646 929 a
 endTexFig
635 1628 a Fi(Fig.)e(7.)k Fj(Lar)o(ge)f(cyclic)f(dead)g(structures)h(are)g
(isolated)f(into)i(one)e(train.)340 1800 y Fm(entire)13 b(train)f(is)h
(recycled)g(immediately)m(.)h(Note)e(that)h(we)g(isolated)f(the)h(structure)f
(C-D-E-F)h(into)e(one)340 1850 y(train)k(where)h(it)f(can)h(be)f(reclaimed)i
(even)f(though)d(it)i(is)g(lar)o(ger)h(than)f(any)g(area)i(we)f
(incrementally)340 1900 y(considered.)11 b(This)f(leaves)h(us)g(with)e(only)g
(train)g(A.)403 1964 y(In)i(Figure)h(8,)g(we)g(note)g(that)f(train)g(A)h(has)
g(a)g(reference)i(from)d(outside)g(the)h(train)f(so)h(we)g(focus)g(on)340
2014 y(car)h(6.)g(Since)f(object)g(R)g(is)g(reachable)i(from)e(a)h(root)e(we)
h(move)h(it)e(to)h(another)g(train.)g(In)g(this)f(case)j(we)340
2064 y(create)g(a)f(new)f(train)g(C)g(and)g(move)h(R)f(into)f(it.)h
(Structure)f(A-B,)h(which)g(used)h(to)e(form)h(a)h(circular)f(list)340
2114 y(that)e(spanned)g(multiple)f(trains,)h(is)g(now)g(isolated)g(and)g(is)g
(recycled.)403 2178 y(Figure)h(9)f(does)f(not)g(show)g(recycled)h(train)f(B)g
(but)g(does)g(show)h(the)f(new)h(train)e(C)h(that)g(holds)g(object)340
2227 y(R.)k(W)m(e)g(now)f(consider)g(car)h(7.)g(Object)f(S)h(is)f(moved)g
(into)f(the)i(train)e(C)h(and)h(object)f(S)g(is)h(scanned)g(for)340
2277 y(references)f(into)d(car)i(7.)f(Object)g(T)g(is)g(found)f(and)h(moved)g
(into)f(train)g(C.)i(Car)f(7)f(can)i(now)f(be)g(recycled.)403
2341 y(In)f(Figure)i(10,)f(what)e(remains)i(is)f(a)h(train)e(with)g(three)i
(neatly)e(clustered)h(live)g(objects.)g(These)i(were)340 2391
y(the)k(only)f(three)i(reachable)g(objects)f(present)g(at)g(the)g(beginning)f
(of)h(the)g(example.)h(The)g(algorithm)340 2441 y(successfully)e(grouped)f
(all)g(unreachable)h(objects)g(into)e(unreachable)j(trains)e(where)h(they)f
(could)g(be)340 2491 y(freed)e(without)d(disruption.)p eop
%%Page: 13 13
bop 489 197 a
 14208860 9519932 1841889 35851059 24273469 50980864 startTexFig
489 197 a
%%BeginDocument: fig2-5.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 80.9999 188.001 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 80.9999 340.001 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 31.9998 835 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 31.9998 683 ] concat
[
(Train B)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 31.9999 635 ] concat
[
(Root)
] Text
End

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 185 188.001 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 289 188.001 ] concat
31 420 111 500 Rect
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -8.00007 728.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -196 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172 99.9998 ] concat
[
(A)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -48.0001 552.001 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 113 -20.0002 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 172.5 276 ] concat
[
(B)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -88.0001 696.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212.5 83.9998 ] concat
[
(R)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -48.0001 696.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284.5 83.9998 ] concat
[
(S)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -112 696.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 389 83.9998 ] concat
[
(T)
] Text
End

End %I eop

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -99.0001 431.001 ] concat
227 385
227 369
267 369
267 385
4 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -99.0001 431.001 ] concat
259 393
235 393
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -99.0001 431.001 ] concat
163 201
187 201
187 345
219 345
4 MLine
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 185 340.001 ] concat
31 420 111 500 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -99.0001 523.001 ] concat
235 253
331 253
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -99.0001 584.001 ] concat
347 192
371 192
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 112 756.001 ] concat
[
(Car 6)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 216 756.001 ] concat
[
(Car 7)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 112 604.001 ] concat
[
(Freed Train B)
] Text
End

End %I eop

showpage


end
%%EndDocument
 489 197 a
 endTexFig
596 887 a Fi(Fig.)6 b(8.)k Fj(T)o(rains)e(with)i(no)f(references)e(can)i(be)f
(freed.)639 1017 y
 9472573 8809488 657817 36377313 16774348 51507118 startTexFig
639 1017 a
%%BeginDocument: fig2-6.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 61 197.001 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 61 349.001 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 11.9999 844.001 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 11.9999 644.001 ] concat
[
(Root)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 45 349.001 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 104.5 645.001 ] concat
[
(R)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 157 493.001 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 216.5 789.001 ] concat
[
(S)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 197 493.001 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 257 789.001 ] concat
[
(T)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 165 349.001 ] concat
31 420 111 500 Rect
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -119 593.001 ] concat
347 192
371 192
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 11.9999 692.001 ] concat
[
(New Train C)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -119 561.001 ] concat
163 80
219 80
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -119 561.001 ] concat
235 80
267 80
267 224
331 224
4 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 196 765.001 ] concat
[
(Car 7)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 92 613.001 ] concat
[
(Car 8)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 92 765.001 ] concat
[
(Freed Car 6)
] Text
End

End %I eop

showpage


end
%%EndDocument
 639 1017 a
 endTexFig
561 1663 a Fi(Fig.)e(9.)k Fj(Evacuate)d(R)i(so)g(cycle)f(A-B)i(can)e(now)h
(be)f(freed.)639 1793 y
 9472573 8809488 263127 36706222 16379658 51836026 startTexFig
639 1793 a
%%BeginDocument: fig2-7.epsf

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def




Begin
[ 0.921813 0 0 0.921813 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 54.9999 202.001 ] concat
31 420 111 500 Rect
End

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 54.9999 354.001 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 5.99988 849.001 ] concat
[
(Train A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 5.99988 649.001 ] concat
[
(Root)
] Text
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -114 566.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 153 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 212.5 83.9998 ] concat
[
(R)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -146 566.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 225 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 284.5 83.9998 ] concat
[
(S)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -250 598.001 ] concat

Begin %I Rect
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 329 -212 ] concat
55 284 71 300 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 389 83.9998 ] concat
[
(T)
] Text
End

End %I eop

Begin %I Rect
1 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 159 354.001 ] concat
31 420 111 500 Rect
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 5.99988 697.001 ] concat
[
(New Train C)
] Text
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -125 566.001 ] concat
163 80
219 80
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -125 627.001 ] concat
235 19
259 19
2 MLine
End

Begin %I MLine
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -125 627.001 ] concat
267 27
267 43
2 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 85.9999 618.001 ] concat
[
(Car 8)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica 12 SetF
[ 1 0 0 1 85.9999 770.001 ] concat
[
(Freed Train A)
] Text
End

End %I eop

showpage


end
%%EndDocument
 639 1793 a
 endTexFig
523 2438 a Fi(Fig.)e(10.)j Fj(Live)g(structure)g(R-S-T)h(is)f(clustered)g
(into)g(one)f(train.)p eop
%%Page: 14 14
bop 340 194 a Fg(6)50 b(Popular)12 b(objects)340 326 y Fm(There)g(is)e(one)g
(possible)g(way)g(in)g(which)g(our)g(algorithm)f(as)i(presented)f(might)g(be)
g(disruptive.)f(Call)h(an)340 376 y(object)g Ff(popular)e Fm(if)h(there)h
(are)g(many)g(references)i(to)d(it.)g(T)m(o)h(copy)g(a)g(popular)e(object,)i
(we)g(must)g(process)340 426 y(a)h(lar)o(ge)f(remembered)i(set)e(and)g
(update)g(many)g(pointers.)1173 411 y Fl(7)1199 426 y Fm(In)g(fact,)h(we)f
(cannot)g(bound)f(the)h(number)g(of)340 476 y(references)i(to)e(an)h(object,)
f(so)g(we)h(cannot)f(bound)f(the)h(work)g(involved)e(in)i(moving)f(an)i
(object.)403 532 y(Our)f(solution)f(is)i(not)f(to)h(move)g(such)h(objects,)f
(analogously)f(to)g(the)h(treatment)g(of)g(lar)o(ge)g(objects.)340
582 y(W)m(e)k(can)g(detect)f(popular)f(objects)h(\(or)g(popular)f(cars,)i
(anyway\))g(by)e(considering)g(the)h(size)h(of)f(their)340
632 y(remembered)g(set.)f(If)f(the)g(remembered)i(set)f(size)f(exceeds)i
(some)f(threshold,)e(we)i(simply)f(retain)f(the)340 682 y(whole)e(area,)i
(logically)c(\(but)h(not)g(physically\))g(copying)g(it)g(and)h(having)f(it)g
(start)h(a)g(new)h(train)e(\(if)g(it)g(is)h(an)340 732 y(engine\))g(or)g
(join)f(the)h(newest)g(train)f(\(if)h(it)f(is)h(a)h(boxcar\).)f(W)n(ith)g
(some)g(cleverness)i(we)e(might)f(be)i(be)f(able)340 781 y(to)j(clear)h(out)f
(some)h(objects,)f(but)f(it)h(may)h(not)e(be)i(worthwhile.)e(The)i
(remembered)h(set)e(is)g(discarded)340 831 y(and)j(will)e(be)h(rebuilt)f
(over)h(time)g(as)h(we)g(cycle)g(through)d(all)i(the)g(other)g(areas.)i(W)m
(e)e(need)h(only)e(take)340 881 y(care)e(that)e(the)g(threshold)f(that)h
(determines)h(popular)e(versus)h(non-popular)f(areas)j(is)e(high)f(enough)h
(that)340 931 y(we)k(can)g(still)d(collect)i(highly)e(linked)h(cyclic)h
(garbage.)h(Thus,)g(the)f(threshold)e(should)h(be)h(no)g(smaller)340
981 y(than)i(the)g(number)g(of)f(pointers)g(that)g(\256t)h(in)f(one)h(area.)i
(W)m(e)e(have)h(yet)e(to)h(work)f(out)g(the)h(details)f(and)340
1030 y(correctness)e(ar)o(gument.)340 1198 y Fg(7)50 b(Futur)o(e)12
b(W)m(ork)340 1331 y Fm(W)m(e)17 b(can)f(add)g(W)n(ilson')n(s)f(temporal)h
(opportunism)e(to)h(our)g(algorithm)g(with)g(no)g(problem.)h(Hayes')n(s)340
1380 y(key)d(object)g(opportunism)d(is)j(more)g(problematic)f(since)i(we)f
(assumed)h(round-robin)c(processing)j(of)340 1430 y(the)i(areas.)i(T)m(o)e
(process)g(areas)i(in)d(arbitrary)g(order)n(,)h(we)h(would)e(have)h(to)f
(remember)i(all)f(inter)o(-area)340 1480 y(references)i(\(instead)d(of)g
(just)g(those)g(pointing)f(in)h(one)g(\252direction\272\))g(and)h(we)g(would)
f(have)h(to)f(deal)340 1530 y(with)d(updating)e(remembered)k(sets.)f(W)m(e)g
(might)e(avoid)h(updating)f(remembered)j(sets)f(by)e(including)g(a)340
1580 y(\252time-stamp\272)h(with)e(remembered)j(set)e(entries,)g(which)g
(would)f(allow)g(us)h(to)g(detect)g(and)g(ignore)f(stale)340
1630 y(entries,)i(rather)f(than)g(having)f(to)h(remove)h(them)f(immediately)m
(.)h(The)g(costs)f(and)g(bene\256ts)h(are)g(unclear)n(.)403
1686 y(W)m(e)f(envision)e(a)j(distributed)c(version)i(of)h(the)f(mature)h
(space)h(algorithm.)e(Though)g(it)g(falls)g(outside)340 1736
y(the)14 b(scope)h(of)f(this)f(paper)n(,)i(we)g(intend)e(to)h(develop)f(a)i
(version)e(where)i(each)g(node)f(in)g(a)h(distributed)340 1786
y(system)f(holds)f(multiple)e(complete)j(trains.)f(The)h(algorithm)e(does)h
(not)g(change.)h(If)f(node)h Ff(A)f Fm(holds)g(a)340 1835 y(structure)g
Ff(S)g Fm(without)f(a)h(leader)n(,)i(then)e Ff(S)g Fm(will)f(be)i(migrated)f
(to)f(some)j(train)d(in)h(node)g Ff(B)h Fm(that)e(holds)h(a)340
1885 y(reference)h(to)e Ff(S)p Fm(.)h(If)f(no)g(node)g Ff(B)h
Fm(is)f(willing)e(to)i(accept)i(the)e(structure)g(then)g(either)g(the)g
(structure)g(will)340 1935 y(be)h(discarded)f(or)g(node)g Ff(B)g
Fm(and)h(node)e Ff(A)i Fm(would)e(have)i(to)e(agree)i(on)f(some)h(sort)e(of)h
(\252rent\272)h(so)f(node)g Ff(A)340 1985 y Fm(could)f(af)o(ford)g(to)f
(retain)h Ff(S)p Fm(.)g(Such)g(a)h(rental)e(agreement)i(would)e(be)i
(equivalent)e(to)g(introducing)f(a)i(root)340 2035 y(in)f(node)g
Ff(A)h Fm(referencing)f Ff(S)p Fm(.)403 2091 y(The)f(MOS)f(approach)h(also)g
(seems)h(promising)d(for)h(collect)g(lar)o(ge)h(persistent)f(heaps)h(for)f
(persistent)340 2141 y(and)18 b(database)h(languages.)g(Some)f(details)f
(would)g(need)i(to)e(be)h(worked)f(out)h(to)f(insure)g(that)g(the)340
2191 y(algorithms)10 b(makes)i(as)f(few)g(secondary)h(storage)e(accesses)k
(as)d(possible.)g(It)f(will)g(probably)f(pay)i(to)f(be)340
2241 y(opportunistic)e(and)i(do)f(whatever)h(processing)g(one)g(can)h(on)e
(parts)h(of)g(the)g(heap)g(that)g(are)g(brought)f(into)340
2290 y(main)i(memory)g(by)f(normal)g(application)f(activity)m(,)h(as)h(well)f
(as)h(to)f(exploit)e(temporal)j(opportunism)d(to)340 2340 y(make)k(more)e
(progress)g(during)f(periods)h(of)g(light)e(load,)i(etc.)p
340 2402 237 2 v 354 2429 a Fk(7)378 2445 y Fj(Lar)o(ge)f(objects)g(could)g
(also)g(be)h(a)f(problem,)h(but)g(we)g(can)e(put)i(them)g(in)g(lar)o(ge)g
(object)f(space)f(just)i(as)g(we)f(do)h(for)378 2491 y(the)f(young)e
(generations.)p eop
%%Page: 15 15
bop 183 194 a Fg(8)49 b(Conclusions)183 301 y Fm(W)m(e)17 b(have)h(described)
f(what)g(we)g(believe)g(is)g(the)g(\256rst)g(ef)o(\256cient)h(non-disrupti)o
(ve)d(copy)i(collection)183 351 y(algorithm)c(for)h(mature)h(objects.)g(The)h
(algorithm)d(is)i(incremental,)g(supports)f(fast)h(allocation,)f(and)183
401 y(supports)8 b(compaction)h(and)h(clustering)e(via)i(copying.)f(W)m(e)h
(believe)f(this)g(algorithm)f(goes)i(a)g(long)e(way)183 451
y(towards)13 b(making)g(garbage)h(collection)f(palatable)g(for)h(a)g(variety)
f(of)g(languages)h(and)g(long)e(running)183 501 y(applications.)183
643 y Fg(9)49 b(Acknowledgements)183 751 y Fm(W)m(e)16 b(appreciate)i(T)m
(ony)e(Hosking')n(s)f(work)h(on)g(implementing)f(the)h(toolkit)e(discussed)j
(here.)g(Amer)183 801 y(Diwan)d(and)g(David)f(Moon)h(provided)f(extensive)h
(comments)g(on)g(drafts)g(of)g(the)g(paper)n(.)g(Other)g(col-)183
850 y(leagues)d(also)f(read)h(and)f(critiqued)g(the)g(paper)n(.)h(Finally)m
(,)e(we)i(thank)f(Barry)g(Hayes)h(for)f(challenging)g(us)183
900 y(to)f(implement)h(key)g(opportunism;)e(it)h(was)i(thinking)d(about)i
(that)f(problem)h(that)f(led)h(to)g(our)g(invention)183 950
y(of)g(the)g(algorithm)f(described)h(here.)183 1093 y Fg(Refer)o(ences)183
1196 y Fj([Appel)f Fh(et)j(al.)p Fj(,)e(1988])20 b(Andrew)12
b(W)m(.)d(Appel,)g(John)i(R.)e(Ellis,)h(and)e(Kai)h(Li.)14
b(Realtime)9 b(concurrent)f(collection)g(on)213 1242 y(stock)g
(multiprocessors.)k(In)e Fh(Pr)o(oceedings)c(of)j(the)g(ACM)g(SIGPLAN)g('88)g
(Confer)o(ence)d(on)j(Pr)o(ogramming)213 1287 y(Language)e(Design)h(and)g
(Implementation)h Fj(\(Atlanta,)h(Geor)o(gia,)f(June)f(1988\),)h
Fh(ACM)g(SIGPLAN)g(Not.)h(23)p Fj(,)f(7)213 1333 y(\(July)g(1988\),)g(pp.)j
(11\26120.)183 1380 y([Baker)o(,)c(1978])20 b(H.)13 b(G.)c(Baker)n(.)k(List)c
(processing)d(in)j(real)g(time)g(on)f(a)h(serial)f(computer)n(.)13
b Fh(Communications)7 b(of)i(the)213 1426 y(ACM)g(21)p Fj(,)g(4)g(\(April)i
(1978\),)d(280\261294.)183 1473 y([Bishop,)h(1977])20 b(Peter)12
b(B.)d(Bishop.)k Fh(Computer)8 b(Systems)f(with)j(a)f(V)l(ery)f(Lar)o(ge)f
(Addr)o(ess)f(Space)i(and)g(Garbage)213 1519 y(Collection)p
Fj(.)13 b(PhD)c(thesis,)g(Massachuse)o(tts)e(Institute)j(of)f(T)m(echnology)n
(,)e(Cambridge,)i(MA,)h(May)f(1977.)183 1566 y([Boehm)f Fh(et)13
b(al.)p Fj(,)d(1991])20 b(Hans-J.)8 b(Boehm,)h(Alan)j(J.)d(Demers,)g(and)f
(Scott)h(Shenker)n(.)k(Mostly)c(parallel)g(garbage)213 1612
y(collection.)k(In)c([OOPSLA,)h(1991)n(],)h(pp.)h(157\261164.)183
1659 y([Cheney)n(,)7 b(1970])20 b(C.)13 b(J.)c(Cheney)n(.)j(A)d(nonrecursive)
e(list)j(compacting)e(algorithm.)14 b Fh(Communications)8 b(of)h(the)213
1705 y(ACM)g(13)p Fj(,)g(11)g(\(November)f(1970\),)h(677\261678.)183
1752 y([Diwan)g Fh(et)j(al.)p Fj(,)f(1992])19 b(Amer)10 b(Diwan,)f(J.)j
(Eliot)i(B.)9 b(Moss,)g(and)f(Richard)k(L.)d(Hudson.)j(Compiler)e(support)e
(for)213 1798 y(garbage)e(collection)i(in)h(a)f(statically)g(typed)f
(language.)12 b(In)c Fh(Confer)o(ence)d(on)j(Pr)o(ogramming)e(Language)g
(Design)213 1843 y(and)i(Implementation)h Fj(\(San)g(Francisco,)f
(California,)i(June)e(1992\),)h(SIGPLAN,)g(ACM)g(Press,)g(pp.)j(273\261282.)
183 1891 y([Fenichel)c(and)g(Y)l(ochelson,)g(1969])20 b(Robert)12
b(R.)e(Fenichel)e(and)g(Jerome)j(C.)f(Y)l(ochelson.)i(A)d(LISP)213
1936 y(garbage-collector)e(for)j(virtual-memory)g(computer)f(systems.)j
Fh(Communications)7 b(of)j(the)f(ACM)g(12)p Fj(,)g(11)213 1982
y(\(November)f(1969\),)h(611\261612.)183 2029 y([Hayes,)f(1991])20
b(Barry)9 b(Hayes.)k(Using)8 b(key)g(object)h(opportunism)f(to)i(collect)f
(old)g(objects.)j(In)213 2075 y([OOPSLA,)d(1991)o(],)h(pp.)i(33\26146.)183
2122 y([Hosking)c Fh(et)k(al.)p Fj(,)f(1992])19 b(Antony)12
b(L.)e(Hosking,)e(J.)k(Eliot)h(B.)d(Moss,)e(and)h(Darko)f(Stefanovi)r(\302)
-14 b(c.)13 b(A)c(comparative)213 2168 y(performance)f(evaluation)g(of)h
(write)h(barrier)g(implementations.)j(In)d Fh(Pr)o(oceeding)o(s)c(of)k(the)f
(Confer)o(ence)d(on)213 2214 y(Object-Oriented)i(Pr)o(ogramming)f(Systems,)g
(Languages,)g(and)i(Applications)f Fj(\(V)l(ancouver)o(,)f(Canada,)213
2259 y(October)h(1992\).)13 b(T)m(o)d(appear)n(.)183 2307 y([Hudson)e
Fh(et)k(al.)p Fj(,)e(1991])20 b(Richard)12 b(L.)d(Hudson,)f(J.)13
b(Eliot)g(B.)c(Moss,)g(Amer)g(Diwan,)h(and)e(Christopher)k(F)m(.)213
2352 y(W)m(eight.)i(A)9 b(language-indepen)o(den)o(t)e(garbage)h(collector)h
(toolkit.)14 b(C)p Fa(OINS)8 b Fj(T)m(echnical)g(Report)h(91-47,)213
2398 y(University)g(of)g(Massachusetts,)e(Amherst,)i(September)f(1991.)13
b(Submitted)c(for)h(publication.)183 2445 y([Jones,)e(1986])20
b(Douglas)11 b(W)m(.)e(Jones.)j(An)d(empirical)g(comparison)f(of)i
(priority-queue)f(and)f(event-set)213 2491 y(implementations.)13
b Fh(Communications)7 b(of)j(the)f(ACM)g(29)p Fj(,)g(4)g(\(April)h(1986\),)f
(300\261311.)p eop
%%Page: 16 16
bop 340 194 a Fj([Lang)9 b(and)f(Dupont,)h(1987])20 b(Bernard)9
b(Lang)f(and)g(Francis)g(Dupont.)13 b(Incremental)c(incrementally)g
(compacting)370 239 y(garbage)f(collection.)13 b Fh(SIGPLAN)c('87)g(\261)g
(Symposium)f(on)g(Interpr)o(eters)f(and)h(Interpr)o(etive)g(T)m(echniques)370
285 y Fj(\(1987\),)i(253\261263.)340 331 y([Lieberman)f(and)f(Hewitt,)j
(1983])20 b(Henry)8 b(Lieberman)g(and)h(Carl)g(Hewitt.)15 b(A)9
b(real-time)h(garbage)e(collection)370 376 y(based)g(on)h(the)g(lifetimes)h
(of)f(objects.)k Fh(Communications)7 b(of)j(the)f(ACM)g(26)p
Fj(,)g(6)g(\(June)f(1983\),)h(419\261429.)340 422 y([Moon,)h(1984])20
b(David)8 b(Moon.)13 b(Garbage)8 b(collection)h(in)g(a)g(lar)o(ge)h(Lisp)e
(system.)13 b(In)c Fh(Pr)o(oceedings)d(of)k(the)f(ACM)370 468
y(Symposium)f(on)h(Lisp)f(and)h(Functional)f(Pr)o(ogramming)f
Fj(\(Austin,)i(TX,)h(August)e(1984\),)h(pp.)j(235\261246.)340
513 y([OOPSLA,)e(1991])20 b Fh(Pr)o(oceedings)5 b(of)10 b(the)f(Confer)o
(ence)d(on)j(Object-Oriented)f(Pr)o(ogramming)f(Systems,)370
559 y(Languages,)g(and)i(Applications)f Fj(\(Phoenix,)g(Arizona,)h(October)g
(1991\),)g Fh(ACM)g(SIGPLAN)g(Not.)h(26)p Fj(,)f(11)370 605
y(\(November)g(1991\).)340 650 y([Sleator)h(and)e(T)m(arjan,)i(1983])20
b(Daniel)12 b(Dominic)d(Sleator)g(and)f(Robert)13 b(Endre)8
b(T)m(arjan.)14 b(Self-adjusting)9 b(binary)370 696 y(search)f(trees.)14
b(In)9 b Fh(Pr)o(oceedings)d(of)j(the)g(ACM)g(SIGACT)g(Symposium)f(on)h
(Theory)e Fj(\(Boston,)i(Massachuse)o(tts,)370 742 y(April)i(1983\),)e(pp.)j
(235\261245.)340 787 y([Sleator)e(and)e(T)m(arjan,)i(1985])20
b(Daniel)12 b(Dominic)d(Sleator)g(and)f(Robert)13 b(Endre)8
b(T)m(arjan.)14 b(Self-adjusting)9 b(binary)370 833 y(search)f(trees.)14
b Fh(Journal)7 b(of)j(the)f(ACM)g(32)p Fj(,)g(3)g(\(July)g(1985\).)340
879 y([Ungar)o(,)g(1984])20 b(David)9 b(Ungar)n(.)k(Generation)8
b(scavenging:)f(A)i(non-disruptive)g(high)g(performance)f(storage)370
924 y(reclamation)h(algorithm.)14 b(In)c Fh(Pr)o(oceedings)5
b(of)10 b(the)f(ACM)g(SIGSOFT/SIGPLAN)g(Softwar)o(e)e(Engineering)370
970 y(Symposium)h(on)h(Practical)f(Softwar)o(e)g(Development)f(Envir)o
(onments)g Fj(\(Pittsbur)o(gh,)j(Pennsylvania,)d(April)370
1016 y(1984\),)i Fh(ACM)h(SIGPLAN)e(Not.)i(19)p Fj(,)f(5)g(\(May)g(1984\),)g
(pp.)j(157\261167.)340 1061 y([Ungar)e(and)e(Jackson,)f(1988])20
b(David)8 b(Ungar)h(and)f(Frank)h(Jackson.)i(T)m(enuring)e(policies)f(for)i
(generation-based)370 1107 y(storage)f(reclamation.)k(In)c
Fh(Pr)o(oceedings)d(of)j(the)g(Confer)o(ence)e(on)h(Object-Oriented)h(Pr)o
(ogramming)d(Systems,)370 1153 y(Languages,)h(and)i(Applications)f
Fj(\(San)h(Diego,)g(California,)h(September)e(1988\),)h Fh(ACM)g(SIGPLAN)g
(Not.)g(23)p Fj(,)370 1198 y(11)g(\(November)g(1988\),)g(pp.)j(1\26117.)340
1244 y([W)m(einreb)e(and)e(Moon,)h(1981])20 b(Daniel)9 b(W)m(einreb)g(and)f
(David)h(Moon.)k Fh(Lisp)c(Machine)f(Manual)p Fj(,)h(third)k(ed.)370
1290 y(Massachusetts)7 b(Institute)i(of)h(T)m(echnology)n(,)d(1981.)340
1335 y([White,)k(1980])20 b(Jon)11 b(L.)f(White.)k(Address/memory)7
b(management)h(for)i(a)e(gigantic)h(Lisp)g(environment)f(or)o(,)h(GC)370
1381 y(considered)f(harmful.)14 b(In)9 b Fh(Pr)o(oceedings)d(of)j(the)g(ACM)h
(Symposium)d(on)i(Lisp)f(and)h(Functional)f(Pr)o(ogramming)370
1427 y Fj(\(Stanford,)i(California,)g(August)f(1980\),)g(ACM,)g(pp.)k
(119\261127.)340 1472 y([W)o(ilson)d Fh(et)i(al.)p Fj(,)e(1991])20
b(Paul)12 b(R.)e(W)o(ilson,)f(Michael)j(S.)d(Lam,)g(and)f(Thomas)j(G.)f
(Moher)n(.)j(Ef)o(fective)370 1518 y(\252static-graph\272)8
b(reor)o(ganization)h(to)g(improve)g(locality)h(in)f(garbage-collected)e
(systems.)12 b(In)d Fh(Pr)o(oceedings)d(of)370 1564 y(the)j(ACM)h(SIGPLAN)e
('91)i(Confer)o(ence)c(on)i(Pr)o(ogramming)f(Language)g(Design)h(and)g
(Implementation)370 1609 y Fj(\(T)m(oronto,)i(Canada,)e(June)g(1991\),)h
Fh(ACM)g(SIGPLAN)g(Not.)g(26)p Fj(,)g(6)g(\(June)g(1991\),)g(pp.)j
(177\261191.)340 1655 y([W)o(ilson)e(and)e(Moher)o(,)h(1989])20
b(Paul)11 b(R.)f(W)o(ilson)f(and)f(Thomas)j(G.)f(Moher)n(.)j(Design)8
b(of)i(the)f(Opportunistic)370 1701 y(Garbage)f(Collector.)14
b(In)c Fh(Pr)o(oceedings)5 b(of)10 b(the)f(Confer)o(ence)d(on)j
(Object-Oriented)f(Pr)o(ogramming)e(Systems,)370 1746 y(Languages,)h(and)g
(Applications)h Fj(\(New)h(Orleans,)f(Louisiana,)g(October)g(1989\),)g
Fh(ACM)h(SIGPLAN)f(Not.)h(24)p Fj(,)g(10)370 1792 y(\(October)h(1989\),)e
(pp.)13 b(23\26135.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
