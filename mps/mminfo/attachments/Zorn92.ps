%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Title: CU-CS-573-92.dvi
%%Pages: 37 1
%%BoundingBox: 0 0 612 792
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa 9 118 df<000FE010007FFC3000FC0E7003E003
F007C001F00F8000F01F0000F03E0000703E0000707E0000307C0000307C000030FC000000FC00
0000FC000000FC000000FC000000FC000000FC0000007C0000007C0000307E0000303E0000303E
0000601F0000600F8000E007C000C003E0038000FC0F00007FFC00000FF0001C1F7C9E24>67
D<FFC00003FF80FFE00007FF8007E00007F00007E00007F00006F0000DF00006F0000DF0000678
0019F00006780019F00006780019F000063C0031F000063C0031F000063C0031F000061E0061F0
00061E0061F000060F00C1F000060F00C1F000060F00C1F00006078181F00006078181F0000603
C301F0000603C301F0000603C301F0000601E601F0000601E601F0000601E601F0000600FC01F0
000600FC01F00006007801F0000F007801F000FFF0783FFF80FFF0303FFF80291F7E9E2D>77
D<001800003C00003C00003C00007E00007E00007E0000CF0000CF0000CF000187800187800387
C00303C00303C007FFE007FFE00601E00C00F00C00F01E00F8FF03FFFF03FF18177F961C>97
D<007E0803FF9807C1F80F00781E00383C00387C0018780018F80018F80000F80000F80000F800
00F80000F800187800187C00183C00301E00300F006007C1C003FF80007E0015177E961B>99
D<FFE000FFE0001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00
001E01801E01801E01801E01801E03801E03001E07001E0F00FFFF00FFFF0011177E9617>108
D<00FE0003FF800F83E01F01F03E00F83C00787C007C78003CF8003EF8003EF8003EF8003EF800
3EF8003EF8003E78003C7C007C3C00783E00F81F01F00F83E003FF8000FE0017177E961D>111
D<0F841FEC307C601CE01CE00CE00CF000FC007FC03FF01FF80FFC007C001E000EC00EC00EC00E
E01CF838DFF087E00F177E9615>115 D<7FFFFC7FFFFC783C1C603C0C603C0CE03C0EC03C06C0
3C06C03C06003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C0000
3C0007FFE007FFE017177F961B>I<FFC3FCFFC3FC1E00F01E00601E00601E00601E00601E0060
1E00601E00601E00601E00601E00601E00601E00601E00601E00601E00600E00C00F00C0078380
01FF00007C0016177E961C>I E /Fb 50 125 df<00007C07800001FF1FE000038F39E000071F
3BE0000F1F7BE0000F0E79C0001E00F000001E00F000001E00F000001E00F000003E00F000003C
01E00003FFFFFF8007FFFFFF00003C01E000003C01E000007803C000007803C000007803C00000
7803C000007803C00000F003C00000F007800000F007800000F007800000F007800001E0078000
01E00F000001E00F000001E00F000001E00F000003C00E000003C01E000003C01E000003801C00
00738E1C0000FF9F380000FF1F380000F61E700000FC1FE00000780F8000002329819F1C>11
D<7FF07FF0FFE07FE00C047D8B10>45 D<0000006000000060000000E0000000C0000001C00000
038000000300000007000000060000000E0000001C000000180000003800000030000000700000
0060000000E0000001C0000001800000038000000300000007000000060000000E0000001C0000
001800000038000000300000007000000060000000E0000001C000000180000003800000030000
0007000000060000000E0000001C00000018000000380000003000000070000000E0000000C000
00001B2D80A117>47 D<00020006000E001C003C01FC07BC067800780078007800F000F000F000
F001E001E001E001E003C003C003C003C00780078007800780FFF8FFF80F1D7B9C17>49
D<0001800003C00003C0000780000780000780000700000F00000F00000E00001E00001C00003C
0000380000380000700000700000E00001CE0001DE00039E00071E00061E000C3C00183C00303C
007F3C00FFF80080FF80007F0000780000F00000F00000F00000F00001E00001E00000C0001226
7D9C17>52 D<01806001FFE001FFC003FF0003FC00030000030000060000060000060000060000
0CF8000FFC000F0E000C0F00180F00000F00000F80000F80001F00781F00F81F00F81E00F03E00
E03C00C07800E1F0007FC0001F0000131D7B9C17>I<001F00007F8000E1C00181C00300E00700
E00700E00F01C00F01C00F83800FE70007FE0007FC0003FC0007FE000EFF001C3F00381F00700F
00700700E00700E00700E00600E00E00E00C00E018007070003FE0001F8000131D7B9C17>56
D<003E00007F8001E1C00381C00781C00701E00F01E01E01E01E01E01E01E01E01C01C03C01C03
C01C07C01C07C01C0F800FFF8007E780000700000F00000E00001E00781C00F83800F87000F0E0
00E1C0007F80003E0000131D7B9C17>I<0000060000000E0000000E0000001F0000001F000000
3F0000003F0000007F000000DF000000DF0000019F0000019F0000031F0000031F0000061F0000
0C1F00000C1F0000181F0000181F8000300F80003FFF80007FFF8000E00F8000C00F8001800F80
01800F8003000F8003000F800F000F807FC0FFF8FFC0FFF81D1F7E9E22>65
D<01FFFFC001FFFFF0001F00F8001F0078001F007C003E007C003E007C003E007C003E007C007C
00F8007C00F8007C01F0007C03E000F80FC000FFFF0000FFFF8000F807C001F003E001F003E001
F001E001F001E003E003E003E003E003E003E003E003C007C007C007C00F8007C01F0007C03E00
FFFFFC00FFFFE0001E1F7D9E20>I<0000FC060007FF0C001F819C007C00FC00F0007C01E00078
03C00038078000380F8000380F0000301F0000303E0000303E0000003C0000007C0000007C0000
007C00000078000000F8000000F8000000F80000C07800018078000180780003007C0003003C00
06001E000C000F00380007C0F00003FFC00000FE00001F1F7A9E21>I<01FFFFFE01FFFFFC001F
003C001F001C001F001C003E000C003E000C003E000C003E0018007C0C18007C0C18007C0C0000
7C1C0000F8380000FFF80000FFF80000F8380001F0300001F0300001F0303001F0306003E00060
03E0006003E000C003E001C007C0018007C0038007C0070007C01F00FFFFFF00FFFFFE001F1F7D
9E1F>69 D<01FFFFFC01FFFFF8001F0078001F0038001F0038003E0018003E0018003E0018003E
0030007C0C30007C0C30007C0C00007C1C0000F8380000FFF80000FFF80000F8380001F0300001
F0300001F0300001F0300003E0000003E0000003E0000003E0000007C0000007C0000007C00000
07C00000FFFE0000FFFC00001E1F7D9E1E>I<0001FC0C0007FF18001F03B8007C01F800F000F8
01E000F003C00070078000700F8000700F0000601F0000603E0000603E0000007C0000007C0000
007C0000007C000000F8000000F801FFF0F801FFF0F8000F8078001F0078001F0078001F007C00
1F003C003E001E003E001F007E000FC1DE0003FF8C0000FE04001E1F7A9E23>I<01FFF801FFF8
001F00001F00001F00003E00003E00003E00003E00007C00007C00007C00007C0000F80000F800
00F80000F80001F00001F00001F00001F00003E00003E00003E00003E00007C00007C00007C000
07C000FFFC00FFFC00151F7E9E12>73 D<001FFF80001FFF800000F8000000F8000000F8000001
F0000001F0000001F0000001F0000003E0000003E0000003E0000003E0000007C0000007C00000
07C0000007C000000F8000000F8000000F8000000F8000001F0000001F00003C1F00007C1F0000
FC3E0000FC3E0000F87C000070F800003FE000001F800000191F7E9E18>I<01FFFC0001FFFC00
001F0000001F0000001F0000003E0000003E0000003E0000003E0000007C0000007C0000007C00
00007C000000F8000000F8000000F8000000F8000001F0000001F0000001F0018001F0018003E0
030003E0030003E0060003E0060007C00E0007C01C0007C03C0007C0FC00FFFFF800FFFFF80019
1F7D9E1D>76 D<01FF8001FFC001FF8001FFC0001F8003F800001F8003F800001F8006F8000037
8007F0000037800DF0000037800DF00000378019F00000678033E00000678033E00000678063E0
0000678063E00000C3C0C7C00000C3C0C7C00000C3C187C00000C3C187C0000183C30F80000183
C60F80000183C60F80000183CC0F80000303CC1F00000303D81F00000303D81F00000303F01F00
000603F03E00000603E03E00000603C03E00000E03C03E0000FFE387FFE000FFC387FFC0002A1F
7D9E29>I<01FF80FFE001FF80FFE0001F801E00001FC00C00001FC00C000037C018000033E018
000033E018000033E018000063F030000061F030000061F030000061F8300000C0F8600000C0F8
600000C0FC600000C07C600001807CC00001807CC00001803EC00001803EC00003003F80000300
1F800003001F800003001F800006000F000006000F000006000F00000E000F0000FFE0060000FF
C0060000231F7D9E22>I<0001FC00000FFF00001E07C0007803E000F001E001E000F003C000F0
078000780F8000781F0000781F0000783E0000783E0000783C0000F87C0000F87C0000F87C0000
F8F80001F0F80001F0F80001E0F80003E0F80003C0780007C078000F807C000F003C001E003E00
3C001F00F8000F83E00007FF800000FE00001D1F7A9E23>I<01FFFF8001FFFFE0001F01F0001F
0078001F0078003E007C003E007C003E007C003E007C007C00F8007C00F8007C00F0007C01E000
F803E000F80F8000FFFF0000FFF80001F0000001F0000001F0000001F0000003E0000003E00000
03E0000003E0000007C0000007C0000007C0000007C00000FFFC0000FFF800001E1F7D9E1F>I<
01FFFF0001FFFFC0001F03E0001F00F0001F00F8003E00F8003E00F8003E00F8003E00F8007C01
F0007C01F0007C03E0007C07C000F81F0000FFFE0000FFF80000F83C0001F03E0001F01E0001F0
1F0001F01F0003E03E0003E03E0003E03E0003E03E0007C07C0007C07C1807C07C1807C03E30FF
FC1FE0FFF80FC01D1F7D9E21>82 D<0007E0C0001FF980003C1F800070078000E0078001E00300
03C0030003C0030003C0030007C0000007C0000007F0000003FE000003FFC00001FFE00000FFF0
00007FF8000007F8000000FC0000007C0000007C00000078003000780030007800300070007000
F0007001E0007801C0007E078000E7FF000081FC00001A1F7D9E1A>I<0FFFFFF01FFFFFE01E07
C1E01807C0E03807C060300F8060300F8060600F8060600F80C0C01F00C0C01F00C0001F000000
1F0000003E0000003E0000003E0000003E0000007C0000007C0000007C0000007C000000F80000
00F8000000F8000000F8000001F0000001F0000001F0000003F00000FFFF8000FFFF80001C1F78
9E21>I<7FFE3FF87FFE3FF807C0078007C0030007C003000F8006000F8006000F8006000F8006
001F000C001F000C001F000C001F000C003E0018003E0018003E0018003E0018007C0030007C00
30007C0030007C003000F8006000F8006000F8006000F800C0007801800078018000380700003C
1C00000FF8000007E000001D1F779E22>I<FFF9FFE1FF80FFF1FFE1FF801F803E003C001F803E
0030000F803E0030000F803E0060000F803E0060000F807E00C0000F807F01C0000F80FF018000
0F80DF0300000F819F0300000F819F0600000F831F0600000F831F0C00000F861F0C00000F8E1F
1800000F8C1F1800000F981F3000000F981F3000000FB01F6000000FB01FE000000FE01FC00000
0FE01F8000000FC01F8000000FC01F0000000F801F0000000F801E0000000F001E00000006001C
00000006001C000000291F779E2D>87 D<00FFF8FFE000FFF8FFE0000FC03E00000FC038000007
C070000007C060000007E0C0000007E180000003E300000003F700000003FE00000001FC000000
01F800000001F800000000F800000000F800000000FC00000001FC000000037C000000067E0000
000E7E0000001C3E000000183F000000303F000000601F000000C01F000001C01F800003800F80
000F801F8000FFE07FF800FFE0FFF800231F7E9E22>I<00F18003FBC0070F800E0F801C07803C
07803C0F00780F00780F00780F00F01E00F01E00F01E00F01E30F03C60F03C60707C6070FCC03F
9F800F0F0014147C9317>97 D<03C0003FC0003F80000780000780000780000F00000F00000F00
000F00001E00001E00001E78001FFE003F8E003E07003C07003C07807807807807807807807807
80F00F00F00F00F00F00F01E00F01C00703C0070380038F0003FE0000F800011207C9F15>I<00
7E0001FF000387800F0F801E0F801C0F003C0600780000780000780000F00000F00000F00000F0
0000F00000700200700700381E001FF80007E00011147C9315>I<0000780007F80007F00000F0
0000F00000F00001E00001E00001E00001E00003C00003C000F3C003FBC0070F800E0F801C0780
3C07803C0F00780F00780F00780F00F01E00F01E00F01E00F01E30F03C60F03C60707C6070FCC0
3F9F800F0F0015207C9F17>I<007C0001FF000783000F01801E01803C01803C0300780E007FFC
007FE000F00000F00000F00000F000007000007002007807003C1E001FF80007E00011147C9315
>I<0001E00003F8000778000FF8000EF8001E70001E00001E00001E00003E00003C00003C0007
FFE007FFE0003C0000780000780000780000780000780000F00000F00000F00000F00000F00001
E00001E00001E00001E00001E00003C00003C00003C00003C000038000778000FF0000FF0000F6
0000FC00007800001529819F0E>I<003E3000FF7801E3F00381F00780F00700F00F01E01E01E0
1E01E01E01E03C03C03C03C03C03C03C03C03C07801C07801C0F800E3F800FFF0003CF00000F00
000F00001E00701E00F81E00F83C00F0F800FFF0003F8000151D7E9315>I<00F0000FF0000FE0
0001E00001E00001E00003C00003C00003C00003C000078000078000079F0007FF800FE3C00F81
C00F01E00F01E01E03C01E03C01E03C01E03C03C07803C07803C07803C0F0C780F18780E18781E
30780E70F00FE060078016207E9F17>I<006000F001F001F000E0000000000000000000000000
0F001F8033C033C063C063C0C780078007800F000F001E001E001E303C603C603CC03CC01F800F
000C1F7D9E0E>I<01E01FE01FC003C003C003C007800780078007800F000F000F000F001E001E
001E001E003C003C003C003C0078007800780078C0F180F180F180F3007E003C000B207D9F0C>
108 D<0F07C0F8001F9FE3FC0033F8F71E0063E07C0E0063C0780F0063C0780F00C780F01E0007
80F01E000780F01E000780F01E000F01E03C000F01E03C000F01E03C000F01E078601E03C078C0
1E03C070C01E03C0F1801E03C073803C07807F001803003C0023147D9325>I<0F07C01F9FE033
F8F063E07063C07863C078C780F00780F00780F00780F00F01E00F01E00F01E00F03C31E03C61E
03861E078C1E039C3C03F81801E018147D931A>I<007C0001FF000383800F01C01E01C01C01E0
3C01E07801E07801E07801E0F003C0F003C0F003C0F00780F00700700F00701E003838001FF000
07C00013147C9317>I<01E1E003F3F8067E1C0C7C1C0C781E0C781E18F01E00F01E00F01E00F0
1E01E03C01E03C01E03C01E07803C07803C07003E0E003E1C007BF80079E000780000780000F00
000F00000F00000F00001E0000FFE000FFE000171D809317>I<0F1E001FBF0033E18063C3C063
C7C063C7C0C787800787000780000780000F00000F00000F00000F00001E00001E00001E00001E
00003C000018000012147D9313>114 D<00FC03FE0707060F0E0F0E0E1E001FE00FF80FFC07FC
01FE003E781EF81CF81CF01860703FE01F8010147D9313>I<00C001E003C003C003C003C00780
0780FFF0FFF00F000F000F000F001E001E001E001E003C003C003C003C307860786078C079C03F
801E000C1C7C9B0F>I<0780601FC0F039C1E031E1E061C1E063C1E0C3C3C00783C00783C00783
C00F07800F07800F07800F078C0F0F180E0F180F0F180F1F3007F7E003E3C016147D9318>I<07
81C01FC3C039C3E031E1E061C0E063C0E0C3C0C00780C00780C00780C00F01800F01800F01800F
03000F03000F06000F06000F0C0007F80001E00013147D9315>I<078060E01FC0F1E039C1E1F0
31E1E0F061C1E07063C1E070C3C3C0600783C0600783C0600783C0600F0780C00F0780C00F0780
C00F0781800F0781800F0781000F0F8300071F860007FBFC0001F0F8001C147D931E>I<07C380
0FE7C0187CE03079E0607BE0607BE0C0F3C000F38000F00000F00001E00001E00039E00079E060
FBC0C0FBC0C0F3C180E7C3007CFE00387C0013147D9315>I<0780301FC07839C0F031E0F061C0
F063C0F0C3C1E00781E00781E00781E00F03C00F03C00F03C00F03C00F07800F07800F07800F1F
8007FF0001EF00000F00000E00381E007C1C007C3C0078780070F0003FC0001F0000151D7D9316
>I<FFFFFFFFFF80FFFFFFFFFF8029027B8C2E>124 D E /Fc 3 111 df<0001FC00000FFF0000
1E07C0007803E000F001E001E000F003C000F0078000780F8000781F0000781F0000783E000078
3E0000783C0000F87C0000F87C0000F87C0000F8F80001F0F80001F0F80001E0F80003E0F80003
C0780007C078000F807C000F003C001E003E003C001F00F8000F83E00007FF800000FE00001D1F
7E9E23>79 D<00001E0001FE0001FC00003C00003C00003C0000780000780000780000780000F0
0000F0007CF001FEF00787E00F03E01E01E01E01E03C03C07C03C07C03C07C03C0F80780F80780
F80780F8078CF80F18780F18781F18387F301FE7F00F81C017207F9F18>100
D<0E07E0003F8FF00033F8780063F0380063E03C0063C03C00C780780007807800078078000780
78000F00F0000F00F0000F00F0000F01E1801E01E3001E03C3001E03C6001E01CE003C01FC0018
00700019147F931B>110 D E /Fd 4 53 df<0C007C00FC009C001C001C001C001C001C001C00
1C001C001C001C00FF80FF8009107E8F0F>49 D<1F007F80C3C0E1E0E0E000E001E001C0038007
000E00186030607FC0FFC0FFC00B107F8F0F>I<1F003F8073C073C023C003800F800F0003C001
C001E041E0E1E0E1C07F803F000B107F8F0F>I<0380078007800F801F801B8033807380E380FF
E0FFE00380038003801FE01FE00B107F8F0F>I E /Fe 40 122 df<0007F800003FFC0001FFFE
0003F83E0007E07E0007C07E000FC07E000FC07E000FC03C000FC000000FC000000FC1FF00FFFF
FF00FFFFFF00FFFFFF000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F000F
C03F000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F007FF9FFE07FF9FFE07FF9FFE0
1B20809F1D>12 D<3C007E00FF00FF00FF80FF807F803F8003800780070007000E001E003C0038
00100009117D9F0F>39 D<FFF0FFF0FFF0FFF0FFF00C057F8C11>45 D<00700001F0000FF000FF
F000FFF000F3F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F000FFFF80FFFF80FFFF8011
1D7C9C1A>49 D<07F0001FFE007FFF007E7F80FF3FC0FF1FC0FF1FE0FF1FE07E0FE0180FE0001F
E0001FC0001FC0003F80003F00007E0000F80000F00001E00003C0E00780E00F00E01E01E01FFF
E03FFFC07FFFC0FFFFC0FFFFC0FFFFC0131D7D9C1A>I<01FC0007FF000FFF801F1FC03F8FE03F
8FE03F8FE03F8FE01F8FE01F1FC0001FC0003F8001FF0001FC0001FF80000FC0000FE00007F03C
07F87E07F8FF07F8FF07F8FF07F8FF07F07E07F07C0FE03FFFC00FFF0003FC00151D7E9C1A>I<
0003C00007C0000FC0001FC0001FC0003FC0007FC000F7C001E7C001E7C003C7C00787C00F07C0
0E07C01E07C03C07C07807C0F007C0FFFFFEFFFFFEFFFFFE000FC0000FC0000FC0000FC0000FC0
01FFFE01FFFE01FFFE171D7F9C1A>I<3003803FFF803FFF803FFF003FFE003FF8003FE0003E00
0038000038000038000039F8003FFE003FFF003E1F80380FC0380FC0000FE0000FE03C0FE07E0F
E0FE0FE0FE0FE0FE0FC0FE1FC07C3F803FFF001FFC0007F000131D7D9C1A>I<003F0001FFC007
FFE00FE3E01F87F01F07F03F07F07E07F07E03E07E0000FE3E00FEFF80FFFFC0FF87E0FF03F0FF
03F0FE03F8FE03F8FE03F8FE03F87E03F87E03F87E03F83E03F03E03F01F87E00FFFC007FF8001
FC00151D7E9C1A>I<7000007FFFF87FFFF87FFFF87FFFF07FFFE0FFFFC0F003C0E00780E00F00
E01E00003C00003C0000780000F80000F80001F00001F00003F00003F00003F00007F00007F000
07F00007F00007F00007F00007F00007F00001C000151E7D9D1A>I<01FC0007FF000FFF801F07
C01E07E03E03E03E03E03F03E03F83E03FE7C03FF7C01FFF800FFF000FFFC00FFFE01FFFE03E7F
F07C1FF8FC07F8F803F8F800F8F800F8F800F8F800F07C01F03F03E03FFFC00FFF8003FC00151D
7E9C1A>I<3C7EFFFFFFFF7E3C000000003C7EFFFFFFFF7E3C08147D930F>58
D<0000E000000001F000000001F000000003F800000003F800000003F800000007FC00000007FC
0000000FFE0000000EFE0000000EFE0000001CFF0000001C7F0000003C7F800000383F80000038
3F800000703FC00000701FC00000F01FE00000E00FE00000FFFFE00001FFFFF00001FFFFF00003
C007F800038003F800038003F800070001FC00070001FC00FFF01FFFE0FFF01FFFE0FFF01FFFE0
231F7E9E28>65 D<FFFFFE00FFFFFFC0FFFFFFE007E007F007E003F807E003FC07E003FC07E003
FC07E003FC07E003FC07E003F807E007F807E00FF007FFFFE007FFFF8007FFFFE007E00FF007E0
03F807E001FC07E001FC07E001FE07E001FE07E001FE07E001FE07E001FE07E001FC07E003FC07
E007F8FFFFFFF0FFFFFFE0FFFFFF001F1F7E9E25>I<0007FC06003FFF0E00FFFFDE03FE03FE07
F800FE0FE0007E1FC0003E3F80001E3F80001E7F80000E7F00000E7F00000EFF000000FF000000
FF000000FF000000FF000000FF000000FF0000007F0000007F00000E7F80000E3F80000E3F8000
1C1FC0001C0FE0003807F8007803FE01F000FFFFC0003FFF800007FC001F1F7D9E26>I<FFFFFF
E0FFFFFFE0FFFFFFE007F007E007F003E007F001E007F000F007F000F007F0007007F0707007F0
707007F0707007F0700007F1F00007FFF00007FFF00007FFF00007F1F00007F0700007F0700007
F0700007F0700007F0000007F0000007F0000007F0000007F0000007F00000FFFFC000FFFFC000
FFFFC0001C1F7E9E21>70 D<FFFF9FFFF0FFFF9FFFF0FFFF9FFFF007F000FE0007F000FE0007F0
00FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007
FFFFFE0007FFFFFE0007FFFFFE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE00
07F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE0007F000FE00FFFF9FFF
F0FFFF9FFFF0FFFF9FFFF0241F7E9E29>72 D<FFFF81FFE0FFFF81FFE0FFFF81FFE007F0007C00
07F000F80007F001F00007F003C00007F007800007F00F000007F01E000007F07C000007F0F800
0007F1F8000007F3F8000007F7FC000007FFFE000007FEFF000007FCFF000007F87F800007F03F
C00007F01FE00007F01FE00007F00FF00007F007F80007F007F80007F003FC0007F001FE0007F0
00FF00FFFF87FFF0FFFF87FFF0FFFF87FFF0241F7E9E29>75 D<FFFFFE00FFFFFF80FFFFFFE007
F00FF007F007F807F003F807F003FC07F003FC07F003FC07F003FC07F003FC07F003FC07F003F8
07F007F807F00FF007FFFFE007FFFF8007FFFE0007F0000007F0000007F0000007F0000007F000
0007F0000007F0000007F0000007F0000007F00000FFFF8000FFFF8000FFFF80001E1F7E9E24>
80 D<03FC180FFF381FFFF83E03F87C00F8780078F80078F80038F80038FC0000FF0000FFF800
7FFF007FFFC03FFFE01FFFF00FFFF803FFF8001FFC0001FC0000FC00007CE0007CE0007CE0007C
F00078F800F8FE01F0FFFFE0E7FFC0C1FF00161F7D9E1D>83 D<7FFFFFFC7FFFFFFC7FFFFFFC7E
0FE0FC780FE03C700FE01CF00FE01EF00FE01EE00FE00EE00FE00EE00FE00EE00FE00E000FE000
000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000000FE000000FE00007FFFFC007FFFFC007FFFFC01F1E7E9D24>I<03FC00
0FFF801FFFC03F8FE03F83F03F83F01F03F00E03F001FFF00FFFF03FC3F07E03F0FC03F0FC03F0
FC03F0FC03F07E0FF07FFDFE3FF9FE0FE07E17147F9319>97 D<FF800000FF800000FF8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8FF000
1FFFF8001FFFFC001FE07E001F803F001F803F001F803F801F803F801F803F801F803F801F803F
801F803F801F803F801F803F801F803F001FC07F001FE0FE001FFFFC001E3FF8001C0FE0001920
7F9F1D>I<0007FC000007FC000007FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC0003F8FC000FFFFC001FFFFC003F83FC007F00FC007E00FC00FE
00FC00FE00FC00FE00FC00FE00FC00FE00FC00FE00FC00FE00FC00FE00FC007E00FC007E01FC00
3F07FC001FFFFF800FFEFF8003F0FF8019207E9F1D>100 D<01FE0007FF801FFFE03F87F07F03
F07F01F8FE01F8FFFFF8FFFFF8FFFFF8FE0000FE0000FE00007E00007F00383F80783FC0F00FFF
F007FFC000FF0015147F9318>I<001FC0007FE001FFF003F0F007E7F00FC7F00FC3E00FC3E00F
C0000FC0000FC0000FC000FFFC00FFFC00FFFC000FC0000FC0000FC0000FC0000FC0000FC0000F
C0000FC0000FC0000FC0000FC0000FC0000FC0000FC0007FFC007FFC007FFC0014207F9F10>I<
03FC7C0FFFFE1FFFFE3F0FFE3E07DC7E07E07E07E07E07E07E07E03E07C03F0FC01FFF801FFF00
3BFC003800003800003FFF803FFFF01FFFF81FFFFC7FFFFC7C00FEF8003EF8003EF8003E7C007C
7F01FC3FFFF80FFFE001FF00171E7F931A>I<FF800000FF800000FF8000001F8000001F800000
1F8000001F8000001F8000001F8000001F8000001F8000001F8000001F87F0001F9FF8001FBFFC
001FF0FE001FC07E001FC07E001F807E001F807E001F807E001F807E001F807E001F807E001F80
7E001F807E001F807E001F807E001F807E00FFF1FFC0FFF1FFC0FFF1FFC01A207E9F1D>I<0E00
3F803F807F807F803F803F800E0000000000000000000000FF80FF80FF801F801F801F801F801F
801F801F801F801F801F801F801F801F801F80FFF0FFF0FFF00C217EA00F>I<FF80FF80FF801F
801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F80
1F801F801F801F801F801F80FFF0FFF0FFF00C207E9F0F>108 D<FF07F00FE000FF1FFC3FF800
FF3FFE7FFC001F707FE0FE001FC03F807E001FC03F807E001F803F007E001F803F007E001F803F
007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E00
1F803F007E001F803F007E00FFF1FFE3FFC0FFF1FFE3FFC0FFF1FFE3FFC02A147E932D>I<FF07
F000FF1FF800FF3FFC001F70FE001FC07E001FC07E001F807E001F807E001F807E001F807E001F
807E001F807E001F807E001F807E001F807E001F807E001F807E00FFF1FFC0FFF1FFC0FFF1FFC0
1A147E931D>I<01FF0007FFC01FFFF03F83F83F01F87E00FC7E00FCFE00FEFE00FEFE00FEFE00
FEFE00FEFE00FE7E00FC7E00FC3F01F83F83F81FFFF007FFC001FF0017147F931A>I<FF8FF000
FFFFF800FFFFFC001FE0FE001F807F001F807F001F803F801F803F801F803F801F803F801F803F
801F803F801F803F801F803F801F807F001FC07F001FE0FE001FFFFC001FBFF8001F8FE0001F80
00001F8000001F8000001F8000001F8000001F800000FFF00000FFF00000FFF00000191D7F931D
>I<FF3F00FF7F80FFFFC01FEFE01FCFE01FCFE01F87C01F83801F80001F80001F80001F80001F
80001F80001F80001F80001F8000FFF800FFF800FFF80013147F9316>114
D<0FE63FFE7FFE781EF00EF00EFC00FFE07FF87FFC1FFE0FFF00FFE00FE00FF00FF81EFFFEFFFC
C7F010147E9315>I<0380038003800380078007800F800F803F80FFFCFFFCFFFC1F801F801F80
1F801F801F801F801F801F801F8E1F8E1F8E1F8E1F8C0FFC07F803F00F1D7F9C14>I<FF83FE00
FF83FE00FF83FE001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E
001F807E001F807E001F807E001F807E001F80FE001F81FE000FFFFFC007FE7FC003F87FC01A14
7E931D>I<FFE7FF3FE0FFE7FF3FE0FFE7FF3FE01F80FC07000FC1FC0E000FC1FC0E000FE3FE1E
0007E3BE1C0007E3BE1C0007F7BF3C0003F71F380003F71FB80001FE0FF00001FE0FF00001FE0F
F00000FC07E00000FC07E00000FC07E000007803C000007803C00023147F9326>119
D<FFF0FF80FFF0FF80FFF0FF800FC038000FC0380007E0700007E0700007F0F00003F0E00003F9
E00001F9C00001F9C00000FF800000FF800000FF8000007F0000007F0000003E0000003E000000
1C0000001C00007C380000FE380000FE780000E0700000F1E000007FC000007F8000001E000000
191D7F931C>121 D E /Ff 5 55 df<03000F00FF00F700070007000700070007000700070007
0007000700070007000700070007007FF07FF00C157E9412>49 D<1F803FE071F0F8F0F878F878
70780078007800F000E001C0038007000E000C18181830387FF0FFF0FFF00D157E9412>I<0FC0
1FF03078783C783C783C103C007800F007E007E00078003C001E701EF81EF81EF83C70383FF00F
C00F157F9412>I<007000F000F001F003F0077006700E701C70187030707070E070FFFEFFFE00
7000700070007003FE03FE0F157F9412>I<01F007F80E1C1C3C383C70187000F080F7F0FFF8F8
1CF81CF01EF01EF01E701E701E381C3C381FF007C00F157F9412>54 D E
/Fg 42 122 df<0003FC1FC0003FFEFFE000FFFFFFE001FC1FF7F003F03FC7F007E03FC7F00FC0
3F87F00FC01F83E00FC01F80000FC01F80000FC01F80000FC01F80000FC01F8000FFFFFFFC00FF
FFFFFC00FFFFFFFC000FC01F80000FC01F80000FC01F80000FC01F80000FC01F80000FC01F8000
0FC01F80000FC01F80000FC01F80000FC01F80000FC01F80000FC01F80000FC01F80000FC01F80
000FC01F80000FC01F80007FF8FFF8007FF8FFF8007FF8FFF80024237FA221>11
D<0007F800003FFC0000FFFE0003F83F0007F07F0007E07F000FC07F000FC07F000FC03E000FC0
08000FC000000FC000000FC00000FFFFFF00FFFFFF00FFFFFF000FC03F000FC03F000FC03F000F
C03F000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F000FC03F00
0FC03F000FC03F000FC03F007FF0FFE07FF0FFE07FF0FFE01B237FA21F>I<FFFCFFFCFFFCFFFC
FFFC0E057F8D13>45 D<3C7EFFFFFFFF7E3C08087C8710>I<00180000780003F800FFF800FFF8
00FFF80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F8
0003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F8007FFFE07FFF
E07FFFE013207C9F1C>49 D<03FC001FFF003FFF807C3FE0FE0FE0FF07F0FF07F0FF07F8FF03F8
7E03F81803F80007F80007F00007F0000FE0000FC0001F80003F00003E0000780000F03801E038
03C0380780380F00781FFFF81FFFF03FFFF07FFFF0FFFFF0FFFFF0FFFFF015207D9F1C>I<00FE
0003FF800FFFE01F07F01F87F03FC3F83FC3F83FC3F83FC3F81F87F80F07F0000FE0001FC001FF
8001FE0001FFC00007F00003F80001FC0001FC3E01FE7F01FEFF81FEFF81FEFF81FEFF81FCFF01
FC7F03F83E07F01FFFE00FFFC001FE0017207E9F1C>I<3000603C01E03FFFE03FFFC03FFF803F
FF003FFE003FF80039000038000038000038000039FC003BFF003FFFC03E0FE03C07E03807F000
07F00007F80007F83C07F87E07F8FE07F8FF07F8FF07F0FE07F07C0FE07C1FC03FFF801FFF0007
F80015207D9F1C>53 D<001F8000FFE003FFF007F0700FC1F81F83F83F03F83F03F87E03F87E01
F07E0000FE1F80FE7FE0FEFFF0FFC1F8FF80F8FF00FCFF00FCFE00FEFE00FEFE00FEFE00FE7E00
FE7E00FE7E00FE3E00FC3E00FC1F00F80F83F007FFE003FFC000FF0017207E9F1C>I<00007000
000000F800000000F800000000F800000001FC00000001FC00000003FE00000003FE00000003FE
00000007FF00000007FF0000000FFF8000000E7F8000000E7F8000001E7FC000001C3FC000001C
3FC00000381FE00000381FE00000781FF00000700FF00000700FF00000E00FF80000FFFFF80001
FFFFFC0001FFFFFC0001C003FC0003C003FE00038001FE00038001FE00070000FF00FFF01FFFF8
FFF01FFFF8FFF01FFFF825227EA12A>65 D<FFFFFF8000FFFFFFF000FFFFFFF80007F803FC0007
F801FE0007F800FE0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FE00
07F801FE0007F801FC0007F807F80007FFFFF00007FFFFF00007FFFFFC0007F800FE0007F8007F
0007F8007F8007F8003F8007F8003FC007F8003FC007F8003FC007F8003FC007F8003FC007F800
3FC007F8007F8007F800FF8007F801FF00FFFFFFFE00FFFFFFF800FFFFFFE00022227EA128>I<
0003FE0180001FFF838000FFFFE78001FF00FF8003F8003F8007F0001F800FE0000F801FC0000F
803F800007803F800007807F800003807F000003807F00000380FF00000000FF00000000FF0000
0000FF00000000FF00000000FF00000000FF00000000FF000000007F000000007F000003807F80
0003803F800003803F800007801FC00007000FE0000F0007F0001E0003F8003C0001FF00F80000
FFFFF000001FFFC0000003FE000021227DA128>I<FFFFFF8000FFFFFFF000FFFFFFFC0007F803
FE0007F8007F0007F8003F8007F8001FC007F8000FE007F8000FE007F8000FF007F80007F007F8
0007F007F80007F007F80007F807F80007F807F80007F807F80007F807F80007F807F80007F807
F80007F807F80007F807F80007F807F80007F007F80007F007F80007F007F8000FE007F8000FE0
07F8001FC007F8003F8007F8007F0007F803FE00FFFFFFFC00FFFFFFF000FFFFFF800025227EA1
2B>I<FFFFFFFCFFFFFFFCFFFFFFFC07F801FC07F8007C07F8003C07F8001C07F8001E07F8001E
07F81C0E07F81C0E07F81C0E07F81C0E07F83C0007F87C0007FFFC0007FFFC0007FFFC0007F87C
0007F83C0007F81C0707F81C0707F81C0707F81C0E07F8000E07F8000E07F8001E07F8001E07F8
003E07F8007E07F801FCFFFFFFFCFFFFFFFCFFFFFFFC20227EA125>I<0003FE00C0001FFFC1C0
007FFFF3C001FF80FFC003FC003FC007F0000FC00FE00007C01FC00007C03FC00003C03F800003
C07F800001C07F000001C07F000001C0FF00000000FF00000000FF00000000FF00000000FF0000
0000FF00000000FF00000000FF001FFFFC7F001FFFFC7F001FFFFC7F80003FC03F80003FC03FC0
003FC01FC0003FC00FE0003FC007F0003FC003FC003FC001FF80FFC0007FFFEFC0001FFFC3C000
03FF00C026227DA12C>71 D<FFFFF0FFFFF0FFFFF003FC0003FC0003FC0003FC0003FC0003FC00
03FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC00
03FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC00FFFFF0FFFFF0FFFFF0142280
A115>73 D<FFFFF000FFFFF000FFFFF00007F8000007F8000007F8000007F8000007F8000007F8
000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007
F8000007F8000007F8003807F8003807F8003807F8003807F8007807F8007807F8007807F800F0
07F801F007F803F007F80FF0FFFFFFF0FFFFFFF0FFFFFFF01D227EA122>76
D<FFFC00003FFFFFFC00003FFFFFFE00007FFF07FE00007FE007FE00007FE0077F0000EFE0077F
0000EFE0073F8001CFE0073F8001CFE0073F8001CFE0071FC0038FE0071FC0038FE0070FE0070F
E0070FE0070FE0070FE0070FE00707F00E0FE00707F00E0FE00703F81C0FE00703F81C0FE00701
FC380FE00701FC380FE00701FC380FE00700FE700FE00700FE700FE007007FE00FE007007FE00F
E007007FE00FE007003FC00FE007003FC00FE007001F800FE007001F800FE0FFF81F81FFFFFFF8
0F01FFFFFFF80F01FFFF30227EA135>I<FFFFFE0000FFFFFFC000FFFFFFF00007F807F80007F8
01FC0007F800FE0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007
F800FE0007F801FC0007F807F80007FFFFF00007FFFFC00007FFFFE00007F80FF00007F807F800
07F807F80007F803FC0007F803FC0007F803FC0007F803FC0007F803FC0007F803FC0007F803FC
0007F803FC0007F803FC0E07F801FE0EFFFFC1FFFCFFFFC07FF8FFFFC01FF027227EA12A>82
D<01FC0C07FF9C1FFFFC3F03FC3E00FC7C007C7C003CFC001CFC001CFE001CFE0000FF8000FFFC
007FFFC07FFFE03FFFF01FFFF80FFFFC07FFFE01FFFE000FFF0000FF00007F00007FE0003FE000
3FE0003FF0003EF0003EFC007CFF00FCFFFFF8E7FFE0C0FF8018227DA11F>I<7FFFFFFF807FFF
FFFF807FFFFFFF807E07F81F807807F807807807F807807007F80380F007F803C0F007F803C0E0
07F801C0E007F801C0E007F801C0E007F801C00007F800000007F800000007F800000007F80000
0007F800000007F800000007F800000007F800000007F800000007F800000007F800000007F800
000007F800000007F800000007F800000007F800000007F800000007F8000007FFFFF80007FFFF
F80007FFFFF80022227EA127>I<FFFF8FFFF83FFEFFFF8FFFF83FFEFFFF8FFFF83FFE07F8007F
8001C007F8007F8001C003FC007FC0038003FC003FC0038003FE003FC0038001FE007FE0070001
FE007FE0070001FF007FE00F0000FF00EFF00E0000FF00EFF00E0000FF80EFF81E00007F81C7F8
1C00007F81C7F81C00003FC3C7FC3800003FC383FC3800003FE383FC3800001FE783FE7000001F
E701FE7000001FF701FFF000000FFE00FFE000000FFE00FFE000000FFE00FFE0000007FC007FC0
000007FC007FC0000003FC007F80000003F8003F80000003F8003F80000001F0001F00000001F0
001F00000001F0001F00000000E0000E000037227FA13A>87 D<07FC001FFF803FFFC07F0FE07F
07E07F03F03E03F01C03F00003F001FFF00FFFF03FE3F07F83F07F03F0FE03F0FE03F0FE03F0FE
07F07F0FF03FFDFF1FF8FF0FC07F18167E951B>97 D<FF800000FF800000FF8000001F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F87F000
1FBFFC001FFFFE001FF07F001FC03F001F801F801F801F801F801FC01F801FC01F801FC01F801F
C01F801FC01F801FC01F801FC01F801FC01F801F801F803F801FC03F001FE07E001F7FFC001E3F
F8001C0FE0001A237EA21F>I<00FF0007FFC00FFFE01F87F03F07F07F07F07E03E07E01C0FE00
00FE0000FE0000FE0000FE0000FE00007E00007F00007F00703F80701FC1E00FFFC007FF8000FE
0014167E9519>I<0003FE000003FE000003FE0000007E0000007E0000007E0000007E0000007E
0000007E0000007E0000007E0000007E0000007E0001FC7E0007FF7E001FFFFE003F81FE003F00
7E007E007E007E007E00FE007E00FE007E00FE007E00FE007E00FE007E00FE007E00FE007E00FE
007E007E007E007E007E003F00FE003F83FE001FFFFFC007FF7FC001F87FC01A237EA21F>I<00
FE0007FF800FFFC01F87E03F03F07E01F07E01F8FE01F8FFFFF8FFFFF8FFFFF8FE0000FE0000FE
00007E00007E00007F00383F00781FC0F00FFFE003FFC000FE0015167E951A>I<001FC0007FE0
01FFF003F0F007E7F007C7F00FC7F00FC3E00FC0000FC0000FC0000FC0000FC000FFFC00FFFC00
FFFC000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC000
0FC0000FC0000FC0000FC0007FFC007FFC007FFC0014237FA211>I<01FC1E0007FF7F001FFFFF
803F07EF803E03E7007E03F2007E03F0007E03F0007E03F0007E03F0003E03E0003F07E0001FFF
C0001FFF000039FC000038000000380000003C0000003FFFE0003FFFF8001FFFFE001FFFFF003F
FFFF007C003F80F8000F80F8000F80F8000F80F8000F807C001F003F007E001FFFFC000FFFF800
01FFC00019217F951C>I<FF800000FF800000FF8000001F8000001F8000001F8000001F800000
1F8000001F8000001F8000001F8000001F8000001F8000001F87E0001F9FF8001FBFFC001FF0FC
001FE07E001FC07E001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F80
7E001F807E001F807E001F807E001F807E001F807E00FFF1FFC0FFF1FFC0FFF1FFC01A237EA21F
>I<0E003F003F807F807F803F803F000E00000000000000000000000000FF80FF80FF801F801F
801F801F801F801F801F801F801F801F801F801F801F801F801F801F80FFF0FFF0FFF00C247FA3
0F>I<FF80FF80FF801F801F801F801F801F801F801F801F801F801F801F801F801F801F801F80
1F801F801F801F801F801F801F801F801F801F801F801F801F801F80FFF0FFF0FFF00C237FA20F
>108 D<FF87F00FE000FF9FFC3FF800FFBFFE7FFC001FF07EE0FC001FE03FC07E001FC03F807E
001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F80
3F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E001F803F007E
00FFF1FFE3FFC0FFF1FFE3FFC0FFF1FFE3FFC02A167E952F>I<FF87E000FF9FF800FFBFFC001F
F0FC001FE07E001FC07E001F807E001F807E001F807E001F807E001F807E001F807E001F807E00
1F807E001F807E001F807E001F807E001F807E001F807E00FFF1FFC0FFF1FFC0FFF1FFC01A167E
951F>I<00FE0007FFC00FFFE01F83F03F01F87E00FC7E00FC7E00FCFE00FEFE00FEFE00FEFE00
FEFE00FEFE00FEFE00FE7E00FC7E00FC3F01F81F83F00FFFE007FFC000FE0017167E951C>I<FF
87F000FFBFFC00FFFFFE001FF0FF001FC07F001F803F801F803F801F801FC01F801FC01F801FC0
1F801FC01F801FC01F801FC01F801FC01F801FC01F803F801F803F801FC07F001FE0FE001FFFFC
001FBFF8001F8FE0001F8000001F8000001F8000001F8000001F8000001F8000001F800000FFF0
0000FFF00000FFF000001A207E951F>I<FF3E00FF7F80FFFFC01FEFE01FCFE01FCFE01F87C01F
83801F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8000FFF800FF
F800FFF80013167E9517>114 D<07F3001FFF007FFF00780F00F00700F00700F00000FE0000FF
F0007FFC003FFE001FFF0007FF00007F80000F80E00780E00780F00780FC0F00FFFE00FFFC00C7
F00011167E9516>I<01C00001C00001C00001C00003C00003C00007C00007C0000FC0003FC000
FFFF00FFFF00FFFF000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC000
0FC3800FC3800FC3800FC3800FC3800FE70007FF0003FE0001F80011207F9F16>I<FFF03FE0FF
F03FE0FFF03FE00FC00E000FE01E0007E01C0007E01C0003F0380003F0380003F8780001F87000
01FCF00000FCE00000FCE000007FC000007FC000007FC000003F8000003F8000001F0000001F00
00000E00001B167F951E>118 D<FFF0FFE0FFF0FFE0FFF0FFE007E0780007F0F00003F8E00001
F9E00000FFC000007F8000007F0000003F0000001F8000003FC000007FE00000F7F00001E3F000
01C1F80003C1FC000780FE00FFC1FFE0FFC1FFE0FFC1FFE01B167F951E>120
D<FFF03FE0FFF03FE0FFF03FE00FC00E000FE01E0007E01C0007E01C0003F0380003F0380003F8
780001F8700001FCF00000FCE00000FCE000007FC000007FC000007FC000003F8000003F800000
1F0000001F0000000E0000000E0000001C00007C1C0000FE3C0000FE380000E0780000F1F00000
7FE000007FC000001F0000001B207F951E>I E /Fh 50 123 df<007E0001FF000783800F0780
1E07801E03001E00001E00001E00001E0000FFFF80FFFF801E07801E07801E07801E07801E0780
1E07801E07801E07801E07801E07801E07801E0780FF0FF0FF0FF0141A809915>12
D<00C00180030006000E000C001C003800380038007000700070007000F000F000F000F000F000
F000F000F000F000F00070007000700070003800380038001C000C000E0006000300018000C00A
267E9B0F>40 D<C0006000300018001C000C000E00070007000700038003800380038003C003C0
03C003C003C003C003C003C003C003C003800380038003800700070007000E000C001C00180030
006000C0000A267E9B0F>I<70F0F8F87818183830306040050C7D840B>44
D<FFC0FFC0FFC00A0380890D>I<70F8F8F87005057D840B>I<07E01FF83C3C381C700E700E700E
F00FF00FF00FF00FF00FF00FF00FF00FF00FF00F700E700E700E381C3C3C1FF807E010187F9713
>48 D<01800780FF80FF8007800780078007800780078007800780078007800780078007800780
0780078007800780FFF0FFF00C187D9713>I<0F803FE070F06078E07CF07CF03C603C007C0078
007800F000E001C003800300060C0C0C180C301C3FF87FF8FFF8FFF80E187E9713>I<01E007F0
0E381C783878383070007000F000F7E0FFF0F838F838F03CF03CF03CF03C703C703C7038383838
701FE007C00E187E9713>54 D<07801FE0387070707038F038F038F03CF03CF03CF03C707C707C
3FFC1FBC003C003800383078787078E071C03F801F000E187E9713>57 D<000C0000001E000000
1E0000001E0000003F0000003F0000003F000000778000006780000067800000C3C00000C3C000
00C3C0000181E0000181E0000181E0000300F00003FFF00003FFF0000600780006007800060078
000C003C001E003C00FF81FFC0FF81FFC01A1A7F991D>65 D<003F0201FFC603E06E0F803E1F00
1E1E000E3C000E7C0006780006780006F80000F80000F80000F80000F80000F800007800067800
067C00063C000C1E000C1F00180F803803E07001FFC0003F00171A7E991C>67
D<FFFF8000FFFFE0000F01F0000F0078000F003C000F001E000F001E000F000F000F000F000F00
0F800F000F800F000F800F000F800F000F800F000F800F000F800F000F800F000F000F000F000F
001F000F001E000F003C000F007C000F00F800FFFFE000FFFF8000191A7F991D>I<FFFFF0FFFF
F00F00F00F00700F00300F00380F00180F00180F06180F06000F06000F0E000FFE000FFE000F0E
000F06000F06000F06000F00000F00000F00000F00000F00000F0000FFF800FFF800151A7F9919
>70 D<003F020001FFC60003E06E000F803E001F001E001E000E003C000E007C00060078000600
78000600F8000000F8000000F8000000F8000000F8000000F803FFC07803FFC078001E007C001E
003C001E001E001E001F001E000F801E0003E07E0001FFE600003F82001A1A7E991E>I<FFF0FF
F00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F00FFF0FFF00C1A7F990E>73 D<FFF800FFF8000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00300F00300F00300F0070
0F00700F00600F00E00F03E0FFFFE0FFFFE0141A7F9918>76 D<FF00FFC0FF80FFC00F801E000F
C00C000DE00C000DE00C000CF00C000CF80C000C780C000C3C0C000C3E0C000C1E0C000C0F0C00
0C0F0C000C078C000C03CC000C03CC000C01EC000C00FC000C00FC000C007C000C007C000C003C
001E001C00FFC01C00FFC00C001A1A7F991D>78 D<FFFE0000FFFFC0000F03E0000F01F0000F00
F0000F00F8000F00F8000F00F8000F00F8000F00F0000F01F0000F03E0000FFFC0000FFF00000F
0380000F03C0000F01C0000F01E0000F01E0000F01E0000F01F0000F01F0000F01F0C00F00F8C0
FFF07F80FFF03F001A1A7F991C>82 D<0FC21FF6383E701E600EE006E006E006F000F8007F803F
F01FF80FFC01FE001E000F0007C007C007C007E006F00EFC1CDFF887E0101A7E9915>I<7FFFFF
007FFFFF00781E0F00601E0300601E0300E01E0380C01E0180C01E0180C01E0180001E0000001E
0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E000000
1E0000001E0000001E0000001E000003FFF00003FFF000191A7F991C>I<FFC7FF1FF0FFC7FF1F
F01E00F803C01E007801800F007803000F007803000F00FC03000780FC06000780FC060007819E
060007819E0E0003C19E0C0003C30F0C0003C30F0C0001E30F180001E70F980001E607980000F6
07B00000F607B00000FC03F000007C03E000007C03E000007801E000007801E000003801C00000
3000C000241A7F9927>87 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0FEFE07257D9B0B>91 D<FEFE06060606060606060606060606060606060606
0606060606060606060606060606FEFE0725809B0B>93 D<1FC0007FF000787800783C00303C00
003C000FFC003FFC007C3C00F83C00F03C00F03D80F03D80787D803FFF001F1E0011107F8F13>
97 D<FE0000FE00001E00001E00001E00001E00001E00001E00001E00001E00001E7E001FFF00
1F87801E03C01E01C01E01E01E01E01E01E01E01E01E01E01E01E01E01C01E03C01F87801DFF00
187C00131A809915>I<07F00FFC3C3C383C7018F000F000F000F000F000F0007800380C3E180F
F807E00E107F8F11>I<007F00007F00000F00000F00000F00000F00000F00000F00000F00000F
0007CF001FFF003C1F00780F00700F00F00F00F00F00F00F00F00F00F00F00F00F00700F00780F
003C3F001FFFE007CFE0131A7F9915>I<07C01FF03C787838703CFFFCFFFCF000F000F000F000
7800380C3E180FF007E00E107F8F11>I<00F003F8073C0F3C1E181E001E001E001E001E00FFC0
FFC01E001E001E001E001E001E001E001E001E001E001E001E00FFE0FFE00E1A80990C>I<078E
1FFF38777878787878787878787838703FE03780700070007FF03FFC3FFE7FFFF00FE007E007F0
0F781E3FFC07E010187F8F13>I<FE0000FE00001E00001E00001E00001E00001E00001E00001E
00001E00001E7E001EFF001F87801F07801E07801E07801E07801E07801E07801E07801E07801E
07801E07801E0780FFCFF0FFCFF0141A809915>I<1C003E003E003E001C000000000000000000
0000FE00FE001E001E001E001E001E001E001E001E001E001E001E001E00FFC0FFC00A1A80990B
>I<01C003E003E003E001C0000000000000000000000FE00FE001E001E001E001E001E001E001
E001E001E001E001E001E001E001E001E001E061E0F1E0F3C07F803E000B2183990C>I<FE0000
FE00001E00001E00001E00001E00001E00001E00001E00001E00001E3FC01E3FC01E1E001E3800
1E70001EE0001FE0001FF0001FF0001E78001E7C001E3C001E3E001E1F00FF9FE0FF9FE0131A80
9914>I<FE00FE001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001E00FFC0FFC00A1A80990B>I<FE3E07C0FEFF9FF01F87F0F81F03E0
781E03C0781E03C0781E03C0781E03C0781E03C0781E03C0781E03C0781E03C0781E03C0781E03
C078FFCFF9FFFFCFF9FF2010808F21>I<FE7E00FEFF001F87801F07801E07801E07801E07801E
07801E07801E07801E07801E07801E07801E0780FFCFF0FFCFF01410808F15>I<07E01FF83C3C
781E700EF00FF00FF00FF00FF00FF00F700E781E3C3C1FF807E010107F8F13>I<FE7E00FFFF00
1F87801E03C01E03C01E01E01E01E01E01E01E01E01E01E01E01E01E03C01E03C01F87801FFF00
1E7C001E00001E00001E00001E00001E0000FFC000FFC0001317808F15>I<FEE0FFF81F781F78
1E301E001E001E001E001E001E001E001E001E00FFE0FFE00D10808F0F>114
D<1F603FE060E0E060E060FC00FF807FC03FE007F000F0C070C070F0E0FFC0DF800C107F8F0F>
I<0C000C000C000C001C001C003C00FFC0FFC03C003C003C003C003C003C003C003C603C603C60
3C603C601FC00F800B177F960F>I<FE3F80FE3F801E07801E07801E07801E07801E07801E0780
1E07801E07801E07801E07801E0F801E1F800FFFF003E7F01410808F15>I<FF1F80FF1F801E0E
001E0C001E0C000F18000F18000FB80007B00007B00007F00003E00003E00001C00001C00001C0
0011107F8F14>I<FE7F9F80FE7F9F803E1E0E001E1E0C001E1F0C001F1F1C000F3718000F3798
000FB7B80007E3B00007E3F00003E3E00003C1E00003C1E00001C1C0000180C00019107F8F1C>
I<7F9FC07F9FC00F1E0007980007B80003F00001E00001E00000F00001F80003F800033C00063E
000E1E00FF3FE0FF3FE01310808F14>I<FF1F80FF1F801E0E001E0C001E0C000F18000F18000F
B80007B00007B00007F00003E00003E00001C00001C00001C000018000018000618000F30000C7
0000FE000078000011177F8F14>I<7FF87FF870F061F061E063C067C007800F181F181E183C38
7C307870FFF0FFF00D107F8F11>I E /Fi 2 122 df<0C000E00CCC0FFC0FFC03F00FFC0FFC0CC
C00E000C000A0B7D8B10>3 D<08001C001C001C001C007F00FF807F001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C0009167D900F>121 D E /Fj
34 122 df<000700001F00007F0007FF00FFFF00FFFF00FFFF00F8FF0000FF0000FF0000FF0000
FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000
FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF007FFFFE7FFFFE7F
FFFE7FFFFE17277BA622>49 D<00FF800007FFF0001FFFFC003FFFFE007E07FF807F01FF80FF80
FFC0FF80FFC0FF807FE0FF807FE0FF803FE07F003FE01C007FE000007FE000007FE000007FC000
00FFC00000FF800001FF000001FE000003FC000007F000000FE000001FC000003F0000007E01E0
007C01E000F801E001F003C003C003C0078003C00FFFFFC01FFFFFC03FFFFFC07FFFFFC0FFFFFF
80FFFFFF80FFFFFF80FFFFFF801B277DA622>I<007F800003FFF00007FFFC000FFFFE001F83FF
003FC1FF003FC0FF803FC0FF803FE0FF803FC0FF801FC0FF800F81FF800001FF000001FF000003
FE000007F80000FFF00000FFC00000FFF8000003FE000000FF000000FF8000007FC000007FC000
007FE000007FE01C007FE07F007FE0FF807FE0FF807FE0FF807FE0FF807FC0FF80FFC0FF00FF80
7F01FF003FFFFE001FFFFC0007FFF00000FF80001B277DA622>I<00001F0000003F0000003F00
00007F000000FF000001FF000001FF000003FF000007FF00000FFF00001F7F00001E7F00003C7F
0000787F0000F87F0001F07F0001E07F0003C07F0007807F000F807F000F007F001E007F003C00
7F007C007F00F8007F00FFFFFFF8FFFFFFF8FFFFFFF8FFFFFFF80000FF000000FF000000FF0000
00FF000000FF000000FF00007FFFF8007FFFF8007FFFF8007FFFF81D277EA622>I<180003001F
803F001FFFFF001FFFFE001FFFFC001FFFFC001FFFF0001FFFE0001FFF80001FFC00001E000000
1E0000001E0000001E0000001E0000001E3FC0001FFFF8001FFFFC001F80FF001F007F801E007F
8000003FC000003FC000003FE000003FE018003FE07E003FE0FF003FE0FF003FE0FF003FE0FF00
3FC0FF007FC0FE007FC07C00FF803F01FF003FFFFE000FFFF80003FFE00000FF00001B277DA622
>I<0007F000003FFC0000FFFE0001FFFF0007FC1F000FF03F800FE07F801FE07F803FC07F803F
C07F807FC03F007F801E007F8000007F800000FF820000FF9FF000FFFFFC00FFFFFE00FFE07F00
FFE03F80FFC03FC0FFC03FC0FF803FE0FF803FE0FF803FE0FF803FE0FF803FE07F803FE07F803F
E07F803FE07F803FE03F803FC03FC03FC01FC07F800FE0FF0007FFFE0003FFFC0000FFF000003F
C0001B277DA622>I<3C0000003F0000003FFFFFF03FFFFFF03FFFFFF03FFFFFF07FFFFFE07FFF
FFC07FFFFF807FFFFF8078001F0078003E0078007C00F000F800F000F000F001F0000003E00000
07C0000007C000000F8000001F8000001F0000003F0000003F0000007F0000007F0000007E0000
00FE000000FE000000FE000000FE000001FE000001FE000001FE000001FE000001FE000001FE00
0001FE000001FE000000FC0000007800001C297CA822>I<000007C00000000007C0000000000F
E0000000000FE0000000000FE0000000001FF0000000001FF0000000003FF8000000003FF80000
00003FF8000000007FFC000000007FFC00000000FFFE00000000F3FE00000000F3FE00000001F3
FF00000001E1FF00000003E1FF80000003C0FF80000003C0FF80000007C0FFC0000007807FC000
000F807FE000000F003FE000000F003FE000001F003FF000001E001FF000003FFFFFF800003FFF
FFF800003FFFFFF800007FFFFFFC0000780007FC0000F80007FE0000F00003FE0000F00003FE00
01F00003FF0001E00001FF00FFFF003FFFFEFFFF003FFFFEFFFF003FFFFEFFFF003FFFFE2F297E
A834>65 D<FFFFFFF80000FFFFFFFF8000FFFFFFFFE000FFFFFFFFF80003FE003FFC0003FE0007
FE0003FE0001FF0003FE0000FF8003FE00007FC003FE00007FC003FE00003FE003FE00003FE003
FE00001FF003FE00001FF003FE00001FF003FE00001FF003FE00001FF803FE00001FF803FE0000
1FF803FE00001FF803FE00001FF803FE00001FF803FE00001FF803FE00001FF803FE00001FF803
FE00001FF803FE00001FF003FE00001FF003FE00001FF003FE00003FE003FE00003FE003FE0000
3FC003FE00007FC003FE0000FF8003FE0001FF0003FE0007FE0003FE001FFC00FFFFFFFFF800FF
FFFFFFE000FFFFFFFF8000FFFFFFFC00002D297DA835>68 D<FFFFFEFFFFFEFFFFFEFFFFFE01FF
0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF
0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF
0001FF0001FF0001FF0001FF0001FF0001FF00FFFFFEFFFFFEFFFFFEFFFFFE17297FA81A>73
D<FFFF0000003FFFC0FFFF8000007FFFC0FFFF8000007FFFC0FFFF8000007FFFC003FFC00000FF
F00003FFC00000FFF00003DFE00001EFF00003DFE00001EFF00003CFF00003CFF00003CFF00003
CFF00003CFF00003CFF00003C7F800078FF00003C7F800078FF00003C3FC000F0FF00003C3FC00
0F0FF00003C3FC000F0FF00003C1FE001E0FF00003C1FE001E0FF00003C0FF003C0FF00003C0FF
003C0FF00003C07F80780FF00003C07F80780FF00003C07F80780FF00003C03FC0F00FF00003C0
3FC0F00FF00003C01FE1E00FF00003C01FE1E00FF00003C01FE1E00FF00003C00FF3C00FF00003
C00FF3C00FF00003C007FF800FF00003C007FF800FF00003C007FF800FF00003C003FF000FF000
03C003FF000FF00003C001FE000FF00003C001FE000FF000FFFF00FC03FFFFC0FFFF00FC03FFFF
C0FFFF00FC03FFFFC0FFFF007803FFFFC03A297DA841>77 D<FFFFFFE00000FFFFFFFE0000FFFF
FFFF8000FFFFFFFFE00003FE007FF00003FE001FF80003FE000FFC0003FE0007FC0003FE0007FC
0003FE0007FE0003FE0007FE0003FE0007FE0003FE0007FE0003FE0007FE0003FE0007FC0003FE
0007FC0003FE000FF80003FE001FF00003FE007FE00003FFFFFF800003FFFFFE000003FFFFFC00
0003FE01FF000003FE00FF800003FE007FC00003FE007FC00003FE003FE00003FE003FE00003FE
003FE00003FE003FE00003FE003FF00003FE003FF00003FE003FF00003FE003FF00003FE003FF0
0F03FE003FF80F03FE003FFC0FFFFFF81FFE1FFFFFF80FFFFEFFFFF803FFFCFFFFF8007FF03029
7DA834>82 D<007F80E003FFF1E00FFFFFE01FFFFFE03FC07FE03F001FE07F000FE07E0007E0FE
0003E0FE0003E0FE0001E0FF0001E0FF0001E0FF800000FFF80000FFFF80007FFFF8007FFFFE00
3FFFFF001FFFFFC00FFFFFC007FFFFE001FFFFF0003FFFF00001FFF800001FF800000FF8000007
F8F00007F8F00003F8F00003F8F00003F8F80003F8FC0007F0FE0007F0FF000FE0FFE01FE0FFFF
FFC0FFFFFF00F0FFFE00E01FF0001D297CA826>I<FFFFF87FFFF80FFFF0FFFFF87FFFF80FFFF0
FFFFF87FFFF80FFFF0FFFFF87FFFF80FFFF003FE0001FF00003C0003FF0001FF8000780001FF00
00FF8000780001FF0000FF8000F80000FF8001FFC000F00000FF8001FFC000F00000FFC001FFC0
01F000007FC003FFE001E000007FC003FFE001E000007FE003FFE003E000003FE0079FF003C000
003FE0079FF003C000001FF00F9FF8078000001FF00F0FF8078000001FF80F0FF80F8000000FF8
1F0FFC0F0000000FF81E07FC0F0000000FFC1E07FC1F00000007FC3E07FE1E00000007FC3C03FE
1E00000007FE3C03FE3E00000003FE7801FF3C00000003FE7801FF3C00000001FFF801FFF80000
0001FFF000FFF800000001FFF000FFF800000000FFF000FFF000000000FFE0007FF000000000FF
E0007FF0000000007FE0007FE0000000007FC0003FE0000000007FC0003FE0000000003F80001F
C0000000003F80001FC0000000001F80001F80000000001F00000F80000000001F00000F800000
44297FA847>87 D<01FF80000FFFF0001FFFFC003FC1FE003FC0FF003FC0FF003FC07F803FC07F
800F007F8000007F800000FF80007FFF8003FFFF800FFFFF803FF07F807FC07F807F807F80FF80
7F80FF007F80FF007F80FF007F80FF80FF807F81FF807FC3FFFC3FFFFFFC0FFF1FFC01FC07FC1E
1B7E9A21>97 D<001FF00000FFFE0003FFFF000FF07F801FE07F803FC07F803FC07F807FC07F80
7F801E00FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF8000
007FC000007FC000003FC003C03FE007C01FF007C00FFC1F8003FFFF0000FFFC00001FE0001A1B
7E9A1F>99 D<00007FF80000007FF80000007FF80000007FF800000007F800000007F800000007
F800000007F800000007F800000007F800000007F800000007F800000007F800000007F8000000
07F800003FC7F80001FFF7F80003FFFFF8000FF83FF8001FE00FF8003FC007F8003FC007F8007F
C007F8007F8007F800FF8007F800FF8007F800FF8007F800FF8007F800FF8007F800FF8007F800
FF8007F800FF8007F800FF8007F8007F8007F8007F8007F8003FC007F8003FC00FF8001FE01FF8
000FF07FFF8007FFFFFF8001FFF7FF80003F87FF80212A7EA926>I<003FE00001FFF80003FFFE
000FF07F001FE03F803FC03FC03FC01FC07F801FC07F800FE0FF800FE0FF800FE0FFFFFFE0FFFF
FFE0FFFFFFE0FF800000FF800000FF800000FF8000007F8000007FC000003FC001E03FE003E01F
F003C00FFC0FC003FFFF8000FFFE00001FF0001B1B7E9A20>I<0003F800001FFE00007FFF0001
FF7F8003FE7F8003FC7F8007F87F8007F87F8007F83F0007F8000007F8000007F8000007F80000
07F8000007F80000FFFFC000FFFFC000FFFFC000FFFFC00007F8000007F8000007F8000007F800
0007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8
000007F8000007F8000007F8000007F8000007F800007FFFC0007FFFC0007FFFC0007FFFC00019
2A7EA915>I<00FF81F003FFEFF80FFFFFFC1FC1FEFC3FC1FEFC3F80FEFC7F80FF307F80FF007F
80FF007F80FF007F80FF007F80FF003F80FE003FC1FE001FC1FC001FFFF8001FFFE0003CFF8000
3C0000003E0000003E0000003FFFF8003FFFFF003FFFFFC01FFFFFE00FFFFFF01FFFFFF03FFFFF
F87E000FF8FE0003F8FC0001F8FC0001F8FC0001F8FE0003F87E0003F07F0007F03FC01FE00FFF
FF8003FFFE00007FF0001E287E9A22>I<FFF0000000FFF0000000FFF0000000FFF00000000FF0
0000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000F
F00000000FF00000000FF00000000FF07F00000FF1FFC0000FF7FFE0000FFF8FF0000FFE07F800
0FFC07F8000FFC07F8000FF807F8000FF807F8000FF007F8000FF007F8000FF007F8000FF007F8
000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007
F8000FF007F8000FF007F800FFFF1FFF80FFFF1FFF80FFFF1FFF80FFFF1FFF80212A7DA926>I<
07800FE01FF03FF03FF03FF03FF01FF00FE00780000000000000000000000000FFF0FFF0FFF0FF
F00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0
FFFFFFFFFFFFFFFF102B7EAA13>I<FFF00000FFF00000FFF00000FFF000000FF000000FF00000
0FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF07F
FC0FF07FFC0FF07FFC0FF07FFC0FF01F800FF03F000FF07E000FF1F8000FF3F0000FF7E0000FFF
E0000FFFE0000FFFF0000FFFF8000FFFFC000FFFFC000FF3FE000FE1FF000FE0FF000FE0FF800F
E07FC00FE03FC00FE03FE0FFFE7FFEFFFE7FFEFFFE7FFEFFFE7FFE1F2A7EA924>107
D<FFF0FFF0FFF0FFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0
0FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0FF
FFFFFFFFFFFFFF102A7EA913>I<FFE03F800FE000FFE1FFE07FF800FFE7FFF1FFFC00FFEF87FB
E1FE000FFE03FF80FF000FFC03FF00FF000FFC03FF00FF000FF803FE00FF000FF803FE00FF000F
F003FC00FF000FF003FC00FF000FF003FC00FF000FF003FC00FF000FF003FC00FF000FF003FC00
FF000FF003FC00FF000FF003FC00FF000FF003FC00FF000FF003FC00FF000FF003FC00FF000FF0
03FC00FF000FF003FC00FF000FF003FC00FF00FFFF1FFFC7FFF0FFFF1FFFC7FFF0FFFF1FFFC7FF
F0FFFF1FFFC7FFF0341B7D9A39>I<FFE07F0000FFE1FFC000FFE7FFE000FFEF8FF0000FFE07F8
000FFC07F8000FFC07F8000FF807F8000FF807F8000FF007F8000FF007F8000FF007F8000FF007
F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF0
07F8000FF007F8000FF007F800FFFF1FFF80FFFF1FFF80FFFF1FFF80FFFF1FFF80211B7D9A26>
I<003FE00001FFFC0003FFFE000FF07F801FC01FC03FC01FE03F800FE07F800FF07F800FF07F80
0FF0FF800FF8FF800FF8FF800FF8FF800FF8FF800FF8FF800FF8FF800FF8FF800FF87F800FF07F
800FF03F800FE03FC01FE01FE03FC00FF07F8007FFFF0001FFFC00003FE0001D1B7E9A22>I<FF
F0FE0000FFF7FFC000FFFFFFF000FFFE0FF8000FFC07FC000FF003FE000FF001FE000FF001FF00
0FF001FF000FF000FF800FF000FF800FF000FF800FF000FF800FF000FF800FF000FF800FF000FF
800FF000FF800FF000FF800FF001FF000FF001FF000FF003FE000FF803FE000FFC07FC000FFE0F
F8000FFFFFE0000FF7FF80000FF1FE00000FF00000000FF00000000FF00000000FF00000000FF0
0000000FF00000000FF00000000FF0000000FFFF000000FFFF000000FFFF000000FFFF00000021
277E9A26>I<FFE3F0FFEFFCFFFFFEFFFCFF0FFCFF0FF8FF0FF8FF0FF0FF0FF03C0FF0000FF000
0FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF000FFFF80
FFFF80FFFF80FFFF80181B7E9A1C>114 D<03FE700FFFF03FFFF07E03F07C01F0F800F0F800F0
FC00F0FF0000FFF800FFFF007FFFC07FFFF03FFFF80FFFF803FFFC003FFC0001FCF000FCF0007C
F8007CF8007CFC00F8FF01F8FFFFF0FFFFC0E1FE00161B7E9A1B>I<0078000078000078000078
0000F80000F80000F80001F80003F80003F80007F8001FFFF0FFFFF0FFFFF0FFFFF007F80007F8
0007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F87807F87807F8
7807F87807F87807F87807F8F803FCF001FFF000FFC0003F8015267FA51B>I<FFF07FF800FFF0
7FF800FFF07FF800FFF07FF8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000F
F007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F8000FF007F800
0FF007F8000FF007F8000FF007F8000FF00FF8000FF00FF8000FF01FF80007F83FFF8007FFFFFF
8001FFF7FF80007FC7FF80211B7D9A26>I<FFFE3FFE1FFEFFFE3FFE1FFEFFFE3FFE1FFEFFFE3F
FE1FFE07F807F803C007F807F803C007F80FF807C003FC0FFC078003FC0FFC078003FE1FFE0F80
01FE1EFE0F0001FE1EFE0F0001FF3EFF1F0000FF3C7F1E0000FF7C7F3E00007FF83FBC00007FF8
3FBC00007FF83FFC00003FF01FF800003FF01FF800003FF01FF800001FE00FF000001FE00FF000
000FC007E000000FC007E000000FC007E00000078003C0002F1B7F9A32>119
D<FFFF07FF80FFFF07FF80FFFF07FF80FFFF07FF8007F800F00007FC01F00003FC01E00003FE03
E00001FE03C00001FE03C00001FF07C00000FF07800000FF8F8000007F8F0000007F8F0000003F
DE0000003FDE0000003FFE0000001FFC0000001FFC0000000FF80000000FF80000000FF8000000
07F000000007F000000003E000000003E000000003C000000003C000003C07C000007E07800000
FF0F800000FF0F000000F01F000000F03E000000787C0000007FF80000003FF00000000FC00000
0021277F9A24>121 D E /Fk 61 123 df<003F0F8000FFFFC003E3F3E00787E3E00707C3E00F
07C1C00F03C0000F03C0000F03C0000F03C0000F03C000FFFFFC00FFFFFC000F03C0000F03C000
0F03C0000F03C0000F03C0000F03C0000F03C0000F03C0000F03C0000F03C0000F03C0000F03C0
000F03C0000F03C0007F87FC007F87FC001B1D809C18>11 D<003F0000FF8003E3800787C00707
C00F07C00F03800F00000F00000F00000F0000FFFFC0FFFFC00F03C00F03C00F03C00F03C00F03
C00F03C00F03C00F03C00F03C00F03C00F03C00F03C00F03C00F03C07F87F87F87F8151D809C17
>I<0F0000C01F8001C038E0038070780780707FFF00F037FE00F0300E00F0301C00F0301800F0
303800F0303000F03070007060E0007060C00038C1C0001F8380000F0303C0000707E0000E0E30
000C1C18001C1C1800383C0C00303C0C00703C0C00603C0C00E03C0C01C03C0C01803C0C03801C
1807001C1806000E300E0007E00C0003C01E217E9E23>37 D<00C00180030007000E000E001C00
1C003800380038007000700070007000F000F000F000F000F000F000F000F000F000F000F000F0
0070007000700070003800380038001C001C000E000E0007000300018000C00A2A7D9E10>40
D<C0006000300038001C001C000E000E00070007000700038003800380038003C003C003C003C0
03C003C003C003C003C003C003C003C003800380038003800700070007000E000E001C001C0038
0030006000C0000A2A7E9E10>I<70F0F8F8781818183030706040050D7D840C>44
D<FFE0FFE0FFE00B03808A0E>I<70F8F8F87005057D840C>I<00030003000700060006000E000C
001C0018001800380030003000700060006000E000C000C001C001800380030003000700060006
000E000C000C001C001800180038003000700060006000E000C000C00010297E9E15>I<07E00F
F01C38381C781E700E700EF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00F700E
700E781E381C1C380FF007E0101B7E9A15>I<018003801F80FF80E78007800780078007800780
078007800780078007800780078007800780078007800780078007800780FFFCFFFC0E1B7D9A15
>I<07E01FF8307C783EFC1EFC1FFC1FFC0F780F001F001E001E003C003C007800F000E001C003
8007030E031C0318073FFE7FFEFFFEFFFE101B7E9A15>I<07E01FF0387C7C3C7C3E7E1E7C3E38
3E003C003C007807E007E00078003C001E001E001F301F781FFC1FFC1FFC1E783C78783FF00FC0
101B7E9A15>I<001C00001C00003C00007C00007C0000FC0001FC0003BC00033C00073C000E3C
000C3C00183C00383C00303C00603C00E03C00FFFFC0FFFFC0003C00003C00003C00003C00003C
00003C0003FFC003FFC0121B7F9A15>I<300C3FFC3FF83FF03FC03000300030003000300033E0
3FF03C3C301C301E001E001F001F701FF81FF81FF81EF81E603C30781FF00FC0101B7E9A15>I<
00F003FC070C0C1E1C3E383E381C70007000F000F3F0F7F8FC1CF80EF80EF00FF00FF00FF00F70
0F700F700E380E381C1C380FF003E0101B7E9A15>I<07E00FF01C38381C300E700E700E780E7C
1C7F1C3FB81FF00FF80FFC1DFE38FE703FE01FE00FE007E007E0077006700C3C3C1FF007E0101B
7E9A15>56 D<07E00FF01C38381C701C700EF00EF00EF00FF00FF00FF00F701F701F383F1FEF0F
CF000F000E000E381E7C1C7C18783830F03FE00F80101B7E9A15>I<70F8F8F870000000000000
000070F0F8F8781818183030706040051A7D910C>59 D<00060000000F0000000F0000000F0000
001F8000001F8000001F8000003FC0000037C0000037C0000077E0000063E0000063E00000E3F0
0000C1F00000C1F00001C1F8000180F8000180F80003FFFC0003FFFC0003007C0007007E000600
3E0006003E001F003F00FFC1FFF0FFC1FFF01C1C7F9B1F>65 D<FFFFC0FFFFF00F80F80F807C0F
803C0F803E0F803E0F803E0F803E0F803E0F807C0F80F80FFFF00FFFE00F80F80F807C0F803E0F
801E0F801F0F801F0F801F0F801F0F801F0F803E0F803E0F80FCFFFFF8FFFFE0181C7E9B1D>I<
001F808000FFE18003F03B8007C00F800F0007801E0007803E0003803C0003807C000180780001
80F8000180F8000000F8000000F8000000F8000000F8000000F8000000F8000000780001807C00
01803C0001803E0003001E0003000F00060007C00C0003F0380000FFF000001FC000191C7E9B1E
>I<FFFFC000FFFFF0000F80FC000F803E000F801F000F800F000F8007800F8007C00F8003C00F
8003C00F8003E00F8003E00F8003E00F8003E00F8003E00F8003E00F8003E00F8003E00F8003C0
0F8003C00F8007C00F8007800F800F800F800F000F803E000F80FC00FFFFF000FFFFC0001B1C7E
9B20>I<FFFFFCFFFFFC0F803C0F801C0F800C0F800E0F80060F83060F83060F83060F83000F87
000FFF000FFF000F87000F83000F83000F83030F83030F80030F80060F80060F80060F800E0F80
1E0F807CFFFFFCFFFFFC181C7E9B1C>I<FFFFF8FFFFF80F80780F80380F80180F801C0F800C0F
800C0F830C0F830C0F83000F83000F87000FFF000FFF000F87000F83000F83000F83000F83000F
80000F80000F80000F80000F80000F8000FFFC00FFFC00161C7E9B1B>I<001F808000FFE18003
F03B8007C00F800F0007801E0007803E0003803C0003807C00018078000180F8000180F8000000
F8000000F8000000F8000000F8000000F801FFF0F801FFF078000F807C000F803C000F803E000F
801E000F800F000F8007C00F8003F03F8000FFF380001FC0801C1C7E9B21>I<FFF8FFF80F800F
800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F80
0F800F800F80FFF8FFF80D1C7F9B0F>73 D<FFC001FF80FFC001FF800FE003F8000FE003F8000F
E003F8000DF006F8000DF006F8000DF006F8000CF80CF8000CF80CF8000CF80CF8000C7C18F800
0C7C18F8000C7C18F8000C3E30F8000C3E30F8000C3E30F8000C1F60F8000C1F60F8000C1F60F8
000C0FC0F8000C0FC0F8000C0FC0F8000C0780F8000C0780F8001E0780F800FFC30FFF80FFC30F
FF80211C7E9B26>77 D<003F800001FFF00003E0F80007803C000F001E001E000F003C0007803C
0007807C0007C0780003C0F80003E0F80003E0F80003E0F80003E0F80003E0F80003E0F80003E0
F80003E07C0007C07C0007C03C0007803E000F801E000F000F001E0007803C0003E0F80001FFF0
00003F80001B1C7E9B20>79 D<FFFF80FFFFE00F80F00F80780F803C0F803E0F803E0F803E0F80
3E0F803E0F803E0F803C0F80780F80F00FFFE00FFF800F80000F80000F80000F80000F80000F80
000F80000F80000F80000F8000FFF800FFF800171C7E9B1C>I<FFFF0000FFFFE0000F81F0000F
8078000F803C000F803E000F803E000F803E000F803E000F803E000F803C000F8078000F81F000
0FFFE0000FFFC0000F83E0000F81F0000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8
000F80F8000F80F8300F807C30FFF83FE0FFF80FC01C1C7E9B1F>82 D<07E0801FF9803C1F8078
0780700380F00380F00180F00180F80000F80000FF00007FF0003FFC001FFE000FFF0003FF8000
3F800007C00007C00003C0C003C0C003C0C00380E00380F00700FC0F00CFFC0083F800121C7E9B
17>I<7FFFFFC07FFFFFC0781F03C0701F01C0601F00C0E01F00E0C01F0060C01F0060C01F0060
C01F0060001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F00
00001F0000001F0000001F0000001F0000001F0000001F0000001F000007FFFC0007FFFC001B1C
7F9B1E>I<FFF8FFC0FFF8FFC00F801E000F800C000F800C000F800C000F800C000F800C000F80
0C000F800C000F800C000F800C000F800C000F800C000F800C000F800C000F800C000F800C000F
800C000F800C000F800C000F800C000780180003C0180003C0300001F0E000007FC000001F0000
1A1C7E9B1F>I<FFF1FFE1FFFFF1FFE1FF1F803E00780F803F00300F801F00300F801F003007C0
3F806007C03F806007C03F806003E03FC0C003E067C0C003E067C0C001F067C18001F0C3E18001
F0C3E18000F8C3E30000F981F30000F981F300007D81F600007F00FE00007F00FE00007F00FE00
003E007C00003E007C00003E007C00001C003800001C003800001C003800281C7F9B2B>87
D<1FE0003FF8007C3C007C1E007C1E00381E00001E0007FE001FFE003C1E00781E00F01E00F01E
60F01E60F03E60787FE03FFFC00F8F8013127F9115>97 D<FE0000FE00001E00001E00001E0000
1E00001E00001E00001E00001E00001E00001E7E001FFF001F87801E01C01E01E01E00E01E00F0
1E00F01E00F01E00F01E00F01E00F01E00E01E01E01E01C01F87801DFF00187C00141D7F9C17>
I<03F00FF81E7C387C787C7038F000F000F000F000F000F000780078063C061E0C0FF803E00F12
7F9112>I<003F80003F8000078000078000078000078000078000078000078000078000078003
E7800FFF801E1F80380780780780700780F00780F00780F00780F00780F00780F0078070078078
0780380F801E1F800FF7F007E7F0141D7F9C17>I<03E00FF01C38381C781E700EFFFEFFFEF000
F000F000F000700078063C061E0C0FF803E00F127F9112>I<007C01FE03DF079F0F1F0F0E0F00
0F000F000F000F00FFE0FFE00F000F000F000F000F000F000F000F000F000F000F000F000F000F
007FF07FF0101D809C0D>I<07E3800FFFC03C3DC0381D80781E00781E00781E00781E00381C00
3C3C003FF00037E0007000007000003FF8003FFE001FFF003FFF807007C0E001C0E001C0E001C0
E001C07003803C0F001FFE0007F800121B7F9115>I<FE0000FE00001E00001E00001E00001E00
001E00001E00001E00001E00001E00001E7E001EFF001F8F001F07801E07801E07801E07801E07
801E07801E07801E07801E07801E07801E07801E07801E0780FFCFF0FFCFF0141D7F9C17>I<1C
003E003E003E001C00000000000000000000000000FE00FE001E001E001E001E001E001E001E00
1E001E001E001E001E001E001E00FFC0FFC00A1D809C0B>I<007000F800F800F8007000000000
000000000000000007F807F8007800780078007800780078007800780078007800780078007800
7800780078007800787078F878F8F0F8E07FC03F000D25849C0D>I<FE0000FE00001E00001E00
001E00001E00001E00001E00001E00001E00001E00001E7FC01E7FC01E3E001E18001E30001E60
001EE0001FE0001FF0001FF0001E78001E7C001E3C001E3E001E1E001E1F00FF9FE0FF9FE0131D
7F9C16>I<FE00FE001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E00
1E001E001E001E001E001E001E001E001E001E00FFC0FFC00A1D809C0B>I<FE3E07C0FEFF9FF0
1F87B0F01F03E0781F03E0781E03C0781E03C0781E03C0781E03C0781E03C0781E03C0781E03C0
781E03C0781E03C0781E03C0781E03C078FFCFF9FFFFCFF9FF20127F9123>I<FE7E00FEFF001F
8F001F07801E07801E07801E07801E07801E07801E07801E07801E07801E07801E07801E07801E
0780FFCFF0FFCFF014127F9117>I<03F0000FFC001E1E00380700780780700380F003C0F003C0
F003C0F003C0F003C0F003C07003807807803807001E1E000FFC0003F00012127F9115>I<FE7E
00FFFF001F87801E03C01E01E01E01E01E00F01E00F01E00F01E00F01E00F01E00F01E01E01E01
E01E03C01F87801FFF001E7C001E00001E00001E00001E00001E00001E0000FFC000FFC000141A
7F9117>I<03E1800FF3801E1B803C0F80780780780780F00780F00780F00780F00780F00780F0
07807807807807803C0F801E1F800FF78003E78000078000078000078000078000078000078000
3FF0003FF0141A7F9116>I<FFE0FFF01FF81EF81EF81E701E001E001E001E001E001E001E001E
001E001E00FFE0FFE00D127F9110>I<1FB03FF07070E030E030F000FE007FC07FE01FF007F800
78C038C038E038F070FFE08F800D127F9110>I<06000600060006000E000E001E003E00FFE0FF
E01E001E001E001E001E001E001E001E001E301E301E301E301E300E600FE003C00C1A7F9910>
I<FE3F80FE3F801E07801E07801E07801E07801E07801E07801E07801E07801E07801E07801E07
801E07801E0F800E1F800FF7F003E7F014127F9117>I<FF8FE0FF8FE01E07801E03000F06000F
06000F0600078C00078C0007DC0003D80003D80003F80001F00001F00000E00000E00000E00013
127F9116>I<FF3FCFE0FF3FCFE01E0F07801E0F03001E0F03000F0F86000F0F86000F1B860007
9BCC00079BCC0007B1CC0003F1F80003F1F80003E0F80001E0F00001E0F00001C0700000C06000
1B127F911E>I<7FCFF07FCFF00F878007860003CC0003DC0001F80000F00000F00000780000FC
0001FC00019E00031F00070F000F0780FF9FF8FF9FF81512809116>I<FF8FE0FF8FE01E07801E
03000F06000F06000F0600078C00078C0007DC0003D80003D80003F80001F00001F00000E00000
E00000E00000C00000C00070C000F98000C18000C700007E00003C0000131A7F9116>I<7FFC7F
FC787870F860F061E063E063C00780078C0F0C1F0C1E1C3C187C187878FFF8FFF80E127F9112>
I E /Fl 7 117 df<000380000007C0000007C0000007C000000FE000000FE000001FF000001F
F000001FF000003BF800003BF800007BFC000071FC000071FC0000E0FE0000E0FE0001E0FF0001
C07F0001C07F0003FFFF8003FFFF8007FFFFC007001FC007001FC00F001FE0FFE0FFFEFFE0FFFE
FFE0FFFE1F1C7E9B24>65 D<07F8001FFE003F1F803F0F803F0FC01E0FC00C0FC003FFC01FFFC0
3F8FC07E0FC0FC0FC0FC0FC0FC0FC0FC1FC07E3FF83FF7F80FC3F815127F9117>97
D<FF8000FF8000FF80001F80001F80001F80001F80001F80001F80001F80001F80001F9F801FFF
E01FE1F01F80F81F807C1F807C1F807E1F807E1F807E1F807E1F807E1F807E1F807C1F807C1F80
F81FE1F01EFFE01C1F80171D7F9C1B>I<03F8000FFE001F3F003E3F007C3F007C1E00FC0C00FC
0000FC0000FC0000FC0000FC00007C00007E03803E03801F07000FFE0003F80011127E9115>I<
FF3C00FF7F00FFDF801F9F801F9F801F8F001F86001F80001F80001F80001F80001F80001F8000
1F80001F8000FFF800FFF800FFF80011127F9114>114 D<0FD83FF87078F038F038F800FFC0FF
F07FF83FF81FFC01FCE03CE03CF03CF878FFF0CFC00E127E9113>I<0380038003800380078007
800F800F803FFCFFFCFFFC1F801F801F801F801F801F801F801F801F9C1F9C1F9C1F9C0F9807F8
03E00E1A7F9913>I E /Fm 2 122 df<00C00000E00000C00000C00040C080E0C1C0F8C7C07CCF
801FFE0007F80001E00007F8001FFE007CCF80F8C7C0E0C1C040C08000C00000C00000E00000C0
0012157D9619>3 D<018003C003C003C003C003C003C003C00180018001800180799EFFFFFFFF
799E01800180018003C003C003C003C003C003C003C003C003C003C003C003C003C003C003C003
C003C003C003C00180018001800180018001800180102D7DA217>121 D
E /Fn 21 119 df<00003FE0010001FFF8030007FFFE03001FF00F07003F80038F007E0000CF00
F800007F01F000003F03E000001F07C000001F0FC000000F0F8000000F1F000000073F00000007
3F000000073E000000037E000000037E000000037E00000003FC00000000FC00000000FC000000
00FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0000
00007E000000007E000000037E000000033E000000033F000000033F000000071F000000060F80
0000060FC000000E07C000000C03E000001801F000003800F8000030007E0000E0003F8001C000
1FF00F800007FFFF000001FFFC0000003FE00028317CB030>67 D<00001FE000800001FFFC0180
0007FFFF0180001FF8078380003F8001C780007E0000678000FC00003F8001F000001F8003E000
001F8007C000000F800FC0000007800F80000007801F80000003801F00000003803F0000000380
3E00000001807E00000001807E00000001807E0000000180FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000
FC0000000000FC00001FFFFC7E00001FFFFC7E00001FFFFC7E0000003F803E0000001F803F0000
001F801F0000001F801F8000001F800F8000001F800FC000001F8007C000001F8003E000001F80
01F000001F8000FC00001F80007E00003F80003F8000EF80001FF803E7800007FFFF83800001FF
FE018000001FF000802E317CB034>71 D<FFF80000003FFEFFFC0000007FFEFFFC0000007FFE03
FC0000007F80037E000000DF80037E000000DF80037E000000DF80033F0000019F80033F000001
9F80033F0000019F80031F8000031F80031F8000031F80031F8000031F80030FC000061F80030F
C000061F800307E0000C1F800307E0000C1F800307E0000C1F800303F000181F800303F000181F
800303F000181F800301F800301F800301F800301F800301F800301F800300FC00601F800300FC
00601F800300FC00601F8003007E00C01F8003007E00C01F8003003F01801F8003003F01801F80
03003F01801F8003001F83001F8003001F83001F8003001F83001F8003000FC6001F8003000FC6
001F8003000FC6001F80030007EC001F80030007EC001F80030007EC001F80030003F8001F8003
0003F8001F80030001F0001F80078001F0001F800FC001F0001F80FFFC00E007FFFEFFFC00E007
FFFEFFFC00E007FFFE37317DB03D>77 D<7FFFFFFFFFE07FFFFFFFFFE07FFFFFFFFFE07F001F80
0FE07C001F8003E070001F8000E070001F8000E060001F80006060001F800060E0001F800070E0
001F800070C0001F800030C0001F800030C0001F800030C0001F800030C0001F800030C0001F80
003000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001F80
000000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001F80
000000001F80000000001F80000000003FC00000001FFFFF8000001FFFFF8000001FFFFF80002C
317EB030>84 D<03FE00000FFFC0001E03E0003F00F0003F0078003F007C001E003C000C003E00
00003E0000003E0000003E0000003E000003FE00007FFE0001FF3E0007F03E000FC03E001F003E
003F003E007E003E007E003E00FC003E0CFC003E0CFC003E0CFC007E0CFC007E0C7E00FE0C3E01
FF181F871FF80FFE0FF003F807C01E1F7D9E21>97 D<07C0000000FFC0000000FFC0000000FFC0
0000000FC000000007C000000007C000000007C000000007C000000007C000000007C000000007
C000000007C000000007C000000007C000000007C000000007C000000007C000000007C0000000
07C0FE000007C7FF800007CE07E00007D801F00007F000F80007E0007C0007C0003C0007C0003E
0007C0003E0007C0001F0007C0001F0007C0001F8007C0001F8007C0001F8007C0001F8007C000
1F8007C0001F8007C0001F8007C0001F8007C0001F0007C0001F0007C0003F0007C0003E0007C0
003E0007C0007C0007E000780007B000F000079801E000070E07C0000707FF80000601FC000021
327EB125>I<001FF00000FFFC0001F01E0007C03F000F803F000F003F001F001E003E000C003E
0000007E0000007C000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC0000007C0000007E0000003E0000003F0001801F0001800F8003000FC0070007E00E
0001F81C0000FFF000001FC000191F7E9E1D>I<000001F00000003FF00000003FF00000003FF0
00000003F000000001F000000001F000000001F000000001F000000001F000000001F000000001
F000000001F000000001F000000001F000000001F000000001F000000001F000000001F000001F
C1F00000FFF1F00001F03DF00003C00FF0000F8003F0000F0003F0001F0001F0003E0001F0003E
0001F0007E0001F0007C0001F0007C0001F000FC0001F000FC0001F000FC0001F000FC0001F000
FC0001F000FC0001F000FC0001F000FC0001F0007C0001F0007C0001F0003E0001F0003E0001F0
001E0001F0001F0003F0000F8007F00007C00DF80003F039FF8000FFE1FF80003F81FF8021327E
B125>I<003F800000FFE00003E0F80007807C000F003E001F003E001E001F003E001F007E001F
007C001F807C000F80FC000F80FFFFFF80FFFFFF80FC000000FC000000FC000000FC000000FC00
0000FC0000007C0000007E0000003E0000003E0001801F0001800F0003000F80060007E00E0001
F83C0000FFF000001FC000191F7E9E1D>I<0003F0000FF8003E3C00787E00F87E01F07E01F03C
01E01803E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000FFFFC0
FFFFC0FFFFC003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000
03E0007FFF807FFF807FFF8017327FB114>I<003F00F801FFE3FC03E1FF3C07807C3C0F807C18
1F003E001F003E003F003F003F003F003F003F003F003F003F003F003F003F003F003F001F003E
001F003E000F807C000780780007E1F0000DFFE0000C3F00001C0000001C0000001C0000001C00
00000F0000000FFFF80007FFFF0003FFFF800FFFFFC01E000FE03C0001F0780000F0780000F8F0
000078F0000078F0000078F0000078F0000078780000F0780000F03E0003E01F0007C007E03F00
01FFFC00003FE0001E2E7E9E21>I<07C0000000FFC0000000FFC0000000FFC00000000FC00000
0007C000000007C000000007C000000007C000000007C000000007C000000007C000000007C000
000007C000000007C000000007C000000007C000000007C000000007C000000007C0FE000007C3
FF800007CE07C00007DC03E00007D803E00007F001F00007E001F00007E001F00007C001F00007
C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F000
07C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F0
0007C001F00007C001F00007C001F000FFFE3FFF80FFFE3FFF80FFFE3FFF8021327EB125>I<07
000F801FC01FC01FC00F800700000000000000000000000000000000000000000007C0FFC0FFC0
FFC00FC007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C0FFFCFFFCFFFC0E307FAF11>I<07C0FFC0FFC0FFC00FC007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C0FFFEFFFEFFFE0F327FB111>108 D<07C0FE0000FFC3FF8000FFCE07C000FFDC03E0000FD803
E00007F001F00007E001F00007E001F00007C001F00007C001F00007C001F00007C001F00007C0
01F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007
C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F000
FFFE3FFF80FFFE3FFF80FFFE3FFF80211F7E9E25>110 D<001FC00000FFF80001F07C0007C01F
000F800F801F0007C01E0003C03E0003E03E0003E07C0001F07C0001F07C0001F0FC0001F8FC00
01F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F03E0003E03E
0003E01E0003C01F0007C00F800F8007C01F0001F07C0000FFF800001FC0001D1F7E9E21>I<07
C3E0FFCFF0FFDC78FFF0FC0FF0FC07E0FC07E07807E00007C00007C00007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007
C00007C000FFFF00FFFF00FFFF00161F7E9E19>114 D<01FC100FFF301E03F03800F078007070
0070F00030F00030F00030F80030FC00007F80007FFC003FFF801FFFC007FFE001FFF0000FF800
01F8C0007CC0007CC0003CE0003CE0003CF0003CF00038F80078FC00F0EF03E0C3FFC080FE0016
1F7E9E1A>I<00600000600000600000600000600000E00000E00000E00001E00001E00003E000
07E0000FE0001FFFE0FFFFE0FFFFE003E00003E00003E00003E00003E00003E00003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E03003E03003E03003E03003E03003E030
03E03003E03001F06001F06000F8C0007F80001F00142C7FAB19>I<07C001F000FFC03FF000FF
C03FF000FFC03FF0000FC003F00007C001F00007C001F00007C001F00007C001F00007C001F000
07C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F00007C001F0
0007C001F00007C001F00007C001F00007C001F00007C001F00007C003F00007C003F00007C007
F00003C007F00003E00DF80001F039FF8000FFF1FF80001FC1FF80211F7E9E25>I<FFFC03FF80
FFFC03FF80FFFC03FF8007E000FC0007E000700003E000600003E000600003F000E00001F000C0
0001F000C00000F801800000F801800000FC018000007C030000007C030000007E070000003E06
0000003E060000001F0C0000001F0C0000001F9C0000000F980000000F9800000007F000000007
F000000007F000000003E000000003E000000003E000000001C000000001C00000211F7F9E23>
I E /Fo 1 14 df<0001FE0000000FFFC000003E01F00000F0003C0001C0000E00038000070007
000003800E000001C01C000000E018000000603800000070300000003070000000386000000018
6000000018E00000001CC00000000CC00000000CC00000000CC00000000CC00000000CC0000000
0CC00000000CC00000000CC00000000CE00000001C600000001860000000187000000038300000
0030380000007018000000601C000000E00E000001C00700000380038000070001C0000E0000F0
003C00003E01F000000FFFC0000001FE000026297D9F2D>13 D E /Fp 85
125 df<001F83F000FFEFF801E0FE7C03C1F87C0781F87C0F01F0380F00F0000F00F0000F00F0
000F00F0000F00F0000F00F000FFFFFF80FFFFFF800F00F0000F00F0000F00F0000F00F0000F00
F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000F
00F0000F00F000FFC3FF00FFC3FF001E20809F1B>11 D<001F8000FFC001E0E003C0F00781F00F
01F00F00E00F00000F00000F00000F00000F0000FFFFF0FFFFF00F00F00F00F00F00F00F00F00F
00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0FFC3FFFF
C3FF1820809F19>I<001FB000FFF001E1F003C1F00781F00F00F00F00F00F00F00F00F00F00F0
0F00F00F00F0FFFFF0FFFFF00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0
0F00F00F00F00F00F00F00F00F00F00F00F00F00F0FFE7FFFFE7FF1820809F19>I<001FC0FC00
007FE7FE0001F07F070003C0FE07800780FC0F800F00F80F800F007807000F007800000F007800
000F007800000F007800000F00780000FFFFFFFF80FFFFFFFF800F007807800F007807800F0078
07800F007807800F007807800F007807800F007807800F007807800F007807800F007807800F00
7807800F007807800F007807800F007807800F007807800F00780780FFE3FF3FF8FFE3FF3FF825
20809F26>I<781E00FC3F00FC3F00FE3F80FE3F807E1F800601800601800601800C03000C0300
180600380E00701C00200800110F7E9F17>34 D<000300C0000300C0000300C0000701C0000601
80000601800006018000060180000E0380000C0300000C0300000C0300000C0300001C07000018
06007FFFFFFCFFFFFFFE00300C0000300C0000300C0000701C0000601800006018000060180000
601800FFFFFFFE7FFFFFFC01C07000018060000180600001806000018060000380E0000300C000
0300C0000300C0000300C0000701C0000601800006018000060180001F297D9F26>I<0F000030
1F80007038E00060787001E0707C07C0703FFF80F031FB80F0300700F0300600F0300E00F0301C
00F030180070303800706070007860600038C0E0001F81C0000F018000000380E0000303F00007
0718000E070C000C0E0C001C0E0C00381E0600301E0600701E0600E01E0600C01E0601C01E0603
801E0603000E0C07000E0C0E00070C0C0007181C0003F0180000E01F257DA126>37
D<78FCFCFEFE7E0606060C0C18387020070F7D9F0D>39 D<006000C001800380070006000E001C
001C003C003800380078007000700070007000F000F000F000F000F000F000F000F000F000F000
F000F00070007000700070007800380038003C001C001C000E00060007000380018000C000600B
2E7DA112>I<C0006000300038001C000C000E000700070007800380038003C001C001C001C001
C001E001E001E001E001E001E001E001E001E001E001E001E001C001C001C001C003C003800380
0780070007000E000C001C00380030006000C0000B2E7DA112>I<000600000006000000060000
000600000006000000060000000600000006000000060000000600000006000000060000000600
000006000000060000FFFFFFF0FFFFFFF000060000000600000006000000060000000600000006
00000006000000060000000600000006000000060000000600000006000000060000000600001C
207D9A23>43 D<78FCFCFEFE7E0606060C0C18387020070F7D850D>I<FFC0FFC0FFC00A037F8B
0F>I<78FCFCFCFC7806067D850D>I<00030003000700060006000E000C000C001C001800180038
0030003000700060006000E000C000C001C00180018001800380030003000700060006000E000C
000C001C0018001800380030003000700060006000E000C000C000102D7DA117>I<03F0000FFC
001E1E003C0F00380700780780780780780780F807C0F807C0F807C0F807C0F807C0F807C0F807
C0F807C0F807C0F807C0F807C0F807C0F807C07807807807807807803C0F003C0F001E1E000FFC
0003F000121D7E9C17>I<00C001C00FC0FFC0F3C003C003C003C003C003C003C003C003C003C0
03C003C003C003C003C003C003C003C003C003C003C003C003C07FFF7FFF101D7D9C17>I<07F0
001FFC00383E00601F00F80F80FC0F80FC0FC0FC07C07807C03007C0000FC0000F80000F80001F
00001E00003C0000780000F00000E00001C0000380000700C00E00C01C00C01801C03FFF807FFF
80FFFF80FFFF80121D7E9C17>I<07F0001FFC00383E00381F007C1F807C0F807C0F803C1F8000
1F00001F00001E00003C0003F80003F000003C00001E00000F00000F80000FC0000FC0300FC078
0FC0FC0FC0FC0F80FC0F80781F00383E001FFC0007F000121D7E9C17>I<000E00000E00001E00
003E00003E00007E0000FE0000DE00019E00039E00031E00061E000E1E000C1E00181E00381E00
301E00601E00E01E00FFFFF0FFFFF0001E00001E00001E00001E00001E00001E0001FFE001FFE0
141D7F9C17>I<3803003FFF003FFE003FFC003FF0003FC0003000003000003000003000003000
0031F00037FC003E1E00380F003007800007800007C00007C00007C07807C0F807C0F807C0F807
80F00F80600F00383E001FF80007E000121D7E9C17>I<007C0001FE000783000F07801E0F801C
0F803C0700780000780000780000F80000F9FC00FBFE00FE0F00FC0700FC0780F807C0F807C0F8
07C0F807C07807C07807C07807C03807803C07801C0F000E1E0007FC0003F000121D7E9C17>I<
6000007FFFC07FFFC07FFF807FFF80E00300C00600C00C00C00C00001800003000003000006000
00E00000E00001E00001C00001C00003C00003C00003C00003C00007C00007C00007C00007C000
07C00007C00007C000038000121E7D9D17>I<03F0000FFC001C1E003807003003807003807003
807803807C03807E07003F8E001FFC001FF80007FC000FFE001CFF00387F80701F807007C0E003
C0E001C0E001C0E001C0E001807003807803003C0E000FFC0003F000121D7E9C17>I<03F0000F
F8001E1E003C0E00780700780780F80780F80780F80780F807C0F807C0F807C0F807C0780FC038
0FC03C1FC01FF7C00FE7C00007C0000780000780000780380F007C0F007C1E00781C003078001F
F0000FC000121D7E9C17>I<78FCFCFCFC78000000000000000078FCFCFCFC7806147D930D>I<78
FCFCFCFC78000000000000000070F8FCFCFC7C0C0C0C181838306020061D7D930D>I<7FFFFFE0
FFFFFFF00000000000000000000000000000000000000000000000000000000000000000FFFFFF
F07FFFFFE01C0C7D9023>61 D<0FC03FF070F86078F07CF87CF87C707C007800F801F001C00380
03800300070006000600060006000600000000000000000000000F001F801F801F801F800F000E
207D9F15>63 D<0003800000038000000380000007C0000007C0000007C000000FE000000FE000
000FE0000019F0000019F0000019F0000030F8000030F8000030F80000607C0000607C0000607C
0000C03E0000C03E0000FFFE0001FFFF0001801F0001801F0003000F8003000F8003000F800700
07C00F8007C0FFE07FFEFFE07FFE1F1F7F9E22>65 D<FFFFF000FFFFFC0007C03F0007C01F0007
C00F8007C00FC007C00FC007C00FC007C00FC007C00FC007C00F8007C01F8007C01F0007C07E00
07FFFC0007FFFE0007C01F0007C00F8007C00FC007C007C007C007E007C007E007C007E007C007
E007C007E007C007C007C00FC007C00F8007C03F00FFFFFE00FFFFF8001B1F7F9E20>I<001FC0
40007FF0C001F819C003E00FC0078007C00F0003C01F0001C03E0001C03E0001C07E0000C07C00
00C07C0000C0FC000000FC000000FC000000FC000000FC000000FC000000FC0000007C0000007C
0000C07E0000C03E0000C03E0000C01F0001800F0001800780030003E0060001F81C00007FF800
001FC0001A1F7D9E21>I<FFFFF000FFFFFE0007C03F0007C00F8007C007C007C003E007C001F0
07C001F007C000F807C000F807C000F807C000FC07C000FC07C000FC07C000FC07C000FC07C000
FC07C000FC07C000FC07C000FC07C000F807C000F807C000F807C001F007C001F007C003E007C0
03C007C00F8007C03F00FFFFFE00FFFFF0001E1F7F9E23>I<FFFFFF80FFFFFF8007C00F8007C0
038007C0018007C0018007C001C007C000C007C000C007C060C007C060C007C0600007C0600007
C0E00007FFE00007FFE00007C0E00007C0600007C0600007C0603007C0603007C0003007C00060
07C0006007C0006007C000E007C000E007C001E007C007C0FFFFFFC0FFFFFFC01C1F7F9E1F>I<
FFFFFF80FFFFFF8007C00F8007C0038007C0018007C0018007C001C007C000C007C000C007C060
C007C060C007C0600007C0600007C0E00007FFE00007FFE00007C0E00007C0600007C0600007C0
600007C0600007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C00000FF
FF0000FFFF00001A1F7F9E1E>I<000FE020007FF86001F81CE003E007E007C003E00F8001E01F
0000E03E0000E03E0000E07E0000607C0000607C000060FC000000FC000000FC000000FC000000
FC000000FC000000FC00FFFC7C00FFFC7C0003E07E0003E03E0003E03E0003E01F0003E00F8003
E007C003E003E007E001F80FE0007FFCE0000FE0201E1F7D9E24>I<FFFC7FFEFFFC7FFE07C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007FFFFC007FFFFC007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C0FFFC7FFEFFFC7FFE1F1F7F9E
22>I<FFFEFFFE07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C0FFFEFFFE0F1F809E10>I<0FFFE00FFFE0
003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00
003E00003E00003E00003E00003E00003E00003E00003E00783E00FC3E00FC3E00FC3E00F87C00
70F8003FF0000FC000131F7F9E17>I<FFFE0FFEFFFE0FFE07C003E007C0038007C0030007C006
0007C00C0007C0180007C0300007C0600007C0C00007C1800007C3800007C7C00007CFC00007DF
E00007FBF00007F1F00007E0F80007C0F80007C07C0007C07E0007C03E0007C01F0007C01F0007
C00F8007C00FC007C007C007C007E0FFFE3FFEFFFE3FFE1F1F7F9E23>I<FFFF00FFFF0007C000
07C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C000
07C00007C00007C00007C00307C00307C00307C00307C00707C00707C00607C00E07C01E07C07E
FFFFFEFFFFFE181F7F9E1C>I<FFC0000FFEFFE0001FFE07E0001FC007E0001FC006F00037C006
F00037C006F00037C006780067C006780067C006780067C0063C00C7C0063C00C7C0063C00C7C0
061E0187C0061E0187C0060F0307C0060F0307C0060F0307C006078607C006078607C006078607
C00603CC07C00603CC07C00603CC07C00601F807C00601F807C00601F807C00600F007C00F00F0
07C0FFF0F0FFFEFFF060FFFE271F7F9E2A>I<FFC01FFEFFE01FFE07F001E007F000C006F800C0
06F800C0067C00C0067E00C0063E00C0061F00C0061F80C0060F80C00607C0C00607E0C00603E0
C00603F0C00601F0C00600F8C00600FCC006007CC006003EC006003FC006001FC006000FC00600
0FC0060007C0060007C0060003C00F0001C0FFF001C0FFF000C01F1F7F9E22>I<003FC00000FF
F00003F0FC0007C03E000F801F001F000F801F000F803E0007C03E0007C07C0003E07C0003E0FC
0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F07C0003E0
7E0007E07E0007E03E0007C01F000F801F000F800F801F0007C03E0003F0FC0000FFF000003FC0
001C1F7D9E23>I<FFFFF000FFFFFC0007C03E0007C01F0007C00F8007C00F8007C00FC007C00F
C007C00FC007C00FC007C00FC007C00F8007C00F8007C01F0007C03E0007FFFC0007FFF00007C0
000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007
C0000007C00000FFFE0000FFFE00001A1F7F9E1F>I<FFFFC000FFFFF80007C07C0007C03E0007
C01F0007C01F0007C01F8007C01F8007C01F8007C01F8007C01F0007C01F0007C03E0007C07C00
07FFF80007FFC00007C0E00007C0F00007C0780007C0780007C07C0007C07C0007C07C0007C07E
0007C07E0007C07E0007C07E0607C07F0607C03F8EFFFE1FFCFFFE03F01F1F7F9E21>82
D<07E0800FF9803C1F80380780700380700380F00180F00180F00180F80000F80000FE00007FE0
007FFC003FFE001FFF0007FF8000FF80000F800007C00007C00003C0C003C0C003C0C003C0E003
80E00780F00700FE0E00CFFC0083F800121F7D9E19>I<7FFFFFE07FFFFFE07C0F81E0700F80E0
600F8060600F8060E00F8070C00F8030C00F8030C00F8030C00F8030000F8000000F8000000F80
00000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F
8000000F8000000F8000000F8000000F8000000F800007FFFF0007FFFF001C1F7E9E21>I<FFFE
1FFEFFFE1FFE07C001E007C000C007C000C007C000C007C000C007C000C007C000C007C000C007
C000C007C000C007C000C007C000C007C000C007C000C007C000C007C000C007C000C007C000C0
07C000C007C000C007C000C007C000C003C0018003E0018001E0030000F00600007C1C00001FF8
000007E0001F1F7F9E22>I<FFF807FEFFF807FE0FC001F00FC000E007C000C007C000C003E001
8003E0018003E0018001F0030001F0030001F8030000F8060000F8060000FC0E00007C0C00007C
0C00003E1800003E1800003E1800001F3000001F3000001FB000000FE000000FE000000FE00000
07C0000007C0000003800000038000000380001F1F7F9E22>I<FFF8FFF83FF0FFF8FFF83FF00F
800F800F800F800F8003000F800FC0030007C007C0060007C007C0060007C00FE0060003E00FE0
0C0003E00FE00C0003E00FF00C0001F019F0180001F019F0180001F019F0180000F830F8300000
F830F8300000F830F83000007C607C6000007C607C6000007C607C6000003EC03EC000003EC03E
C000003EC03EC000003F801FC000001F801F8000001F801F8000001F000F8000000F000F000000
0F000F0000000E000700000006000600002C1F7F9E2F>I<7FFC7FF87FFC7FF807E01F8003E00E
0003F00E0001F80C0000F8180000FC3800007C3000007E6000003FE000001FC000001FC000000F
8000000FC0000007E0000007E000000FF000000DF0000019F8000038FC0000307C0000607E0000
E03E0000C03F0001C01F8001800F8003800FC00FC00FC0FFF07FFEFFF07FFE1F1F7F9E22>I<FF
FC03FF80FFFC03FF8007E000F80003E000600003F000600001F000C00001F801C00000F8018000
00FC038000007E030000007E060000003F060000001F0C0000001F9C0000000F980000000FF800
000007F000000007E000000003E000000003E000000003E000000003E000000003E000000003E0
00000003E000000003E000000003E000000003E000000003E00000007FFF0000007FFF0000211F
809E22>I<7FFFF87FFFF87E01F07801F07003E06007E0E007C0E00FC0C00F80C01F00C01F0000
3E00003E00007C0000FC0000F80001F80001F00003E00C03E00C07C00C07C00C0F801C1F801C1F
00183F00183E00387C00787C01F8FFFFF8FFFFF8161F7D9E1C>I<FEFEC0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE072D7CA10D>
I<0802001C0700380E00300C00601800601800C03000C03000C03000FC3F00FE3F80FE3F807E1F
807E1F803C0F00110F7D9F17>I<FEFE0606060606060606060606060606060606060606060606
060606060606060606060606060606060606FEFE072D7FA10D>I<07F0001FFC003E1E003E0F00
3E07801C078000078000078003FF800FFF803F07807C07807C0780F80798F80798F80798F80F98
7C1FF83FF3F00FC1E015147F9317>97 D<0F0000FF0000FF00000F00000F00000F00000F00000F
00000F00000F00000F00000F00000F1F800F7FC00FE1E00F80F00F00780F00780F007C0F007C0F
007C0F007C0F007C0F007C0F007C0F00780F00780F00F80F80F00EC1E00E7FC00C1F001620809F
19>I<03F00FFC1E3E3C3E3C3E781C7800F800F800F800F800F800F80078007C003C033E031F0E
0FFC03F010147E9314>I<0003C0003FC0003FC00003C00003C00003C00003C00003C00003C000
03C00003C00003C003E3C00FFBC01E0FC03C07C07C03C07803C07803C0F803C0F803C0F803C0F8
03C0F803C0F803C07803C07803C07803C03C07C01E1FC00FFBFC03E3FC16207E9F19>I<03F000
0FFC001E1E003C0F003C0F00780F00780780F80780FFFF80FFFF80F80000F80000F80000780000
7C00003C01801E03800F070007FE0001F80011147F9314>I<003E0000FF0003CF80078F80078F
800F07000F00000F00000F00000F00000F00000F0000FFF000FFF0000F00000F00000F00000F00
000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000FFF0
00FFF0001120809F0E>I<03F1E00FFFF01E1F703C0F607C0F807C0F807C0F807C0F807C0F803C
0F001E1E001FFC0033F0003000003000003800003FFE003FFF801FFFC03FFFE07801E07000F0E0
0070E00070E000707000E07801E03E07C00FFF0003FC00141E7F9317>I<0F0000FF0000FF0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F1F800F7FC00FE1E00FC0F0
0F80F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0
0F00F0FFF3FFFFF3FF1820809F19>I<0E001F003F003F001F000E00000000000000000000000F
007F007F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFE0FFE0
0B1F809E0D>I<00F001F801F801F801F800F000000000000000000000007807F807F800F80078
0078007800780078007800780078007800780078007800780078007800780078007800787078F8
78F8F0F9E07FC03F000D28839E0E>I<0F0000FF0000FF00000F00000F00000F00000F00000F00
000F00000F00000F00000F00000F0FF80F0FF80F07C00F07000F06000F0C000F18000F38000F78
000FFC000FBC000F1E000F1F000F0F000F0F800F07C00F03C00F03E0FFE7FCFFE7FC1620809F18
>I<0F00FF00FF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF00C20809F0D>I<0F0FC07E00
FF3FE1FF00FFE0F707800FC07E03C00F807C03C00F007803C00F007803C00F007803C00F007803
C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F0078
03C00F007803C0FFF3FF9FFCFFF3FF9FFC2614809327>I<0F1F80FF7FC0FFE1E00FC0F00F80F0
0F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F0
FFF3FFFFF3FF1814809319>I<01F80007FE001F0F803C03C03C03C07801E07801E0F801F0F801
F0F801F0F801F0F801F0F801F07801E07801E03C03C03C03C01F0F8007FE0001F80014147F9317
>I<0F1F80FF7FC0FFE1E00F81F00F00F80F00F80F007C0F007C0F007C0F007C0F007C0F007C0F
007C0F00780F00F80F00F80F81F00FC3E00F7FC00F1F000F00000F00000F00000F00000F00000F
00000F0000FFF000FFF000161D809319>I<03E0C00FF9C01F1DC03E07C07C07C07C03C07803C0
F803C0F803C0F803C0F803C0F803C0F803C07803C07C03C07C07C03E07C01E1FC00FFBC003E3C0
0003C00003C00003C00003C00003C00003C00003C0003FFC003FFC161D7E9318>I<0F7CFFFEFF
DF0F9F0F9F0F0E0F000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF010148093
12>I<0FB03FF07070E030E030E030F000FF007FC03FE01FF003F80078C038C038E038E030F070
FFE08F800D147E9312>I<06000600060006000E000E001E003E00FFF8FFF81E001E001E001E00
1E001E001E001E001E001E001E181E181E181E181E180F3007E003C00D1C7F9B12>I<0F00F0FF
0FF0FF0FF00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F
00F00F01F00F01F00707F003FEFF01F8FF1814809319>I<FFC7F8FFC7F81F01E00F01C00F0180
0F018007830007830007830003C60003C60003EE0001EC0001EC0001FC0000F80000F800007000
00700000700015147F9318>I<FF9FF3FCFF9FF3FC1E03C0F01E03C0E00F03C0C00F07C0C00F07
E0C00787E180078CE180078CF18003CCF30003D8730003D87B0003F87F0001F87E0001F03E0001
F03E0000F03C0000E01C0000E01C001E147F9321>I<7FE7FC7FE7FC0783E007838003C30001E6
0001EE0000FC00007800007800003C00007E0000FE0001CF000187800387800703C00F03E0FFCF
FEFFCFFE1714809318>I<FFC7F8FFC7F81F01E00F01C00F01800F018007830007830007830003
C60003C60003EE0001EC0001EC0001FC0000F80000F80000700000700000700000600000600000
600070C000F8C000C18000E380007F00003C0000151D7F9318>I<3FFF3FFF381E303E703C6078
60F861F001E003E007C007830F831F031E073C067C06781EFFFEFFFE10147F9314>I<FFFFFCFF
FFFC1602808C17>I<FFFFFFFFFFF0FFFFFFFFFFF02C02808C2D>I E /Fq
1 5 df<00007FFFFFFFFFFFFC000000000000000000FFFFFFFFFFFFFE000000000000000001FF
FFFFFFFFFFFF000000000000000003FFFFFFFFFFFFFF800000000000000007E000000000000FC0
000000000000000FC0000000000007E0000000000000001F80000000000003F000000000000000
3F00000000000001F8000000000000007E00000000000000FC00000000000000FC000000000000
007E00000000000001F8000000000000003F00000000000003F0000000000000001F8000000000
0007E0000000000000000FC000000000000FC00000000000000007E000000000001F8000000000
00000003F000000000003F000000000000000001F800000000007E000000000000000000FC0000
000000FC007FFFFFFFFFFFFE007E0000000000F8007FFFFFFFFFFFFE003E0000000000F0007FFF
FFFFFFFFFE001E0000000000F0007FFFFFFFFFFFFE001E0000000000F0007800000000001E001E
0000000000F0007800000000001E001E0000000000F0007800000000001E001E0000000000F000
7800000000001E001E0000000000F0007800000000001E001E0000000000F0007800000000001E
001E0000000000F0007800000000001E001E0000000000F0007800000000001E001E0000000000
F0007800000000003FFFFE0000000000F0007800000000003FFFFE0000000000F0007800000000
003FFFFE0000000000F0007800000000003FFFFE0000000000F0007803FFFFFFFFC00001FFFFFF
FFF0F0007807FFFFFFFFC00001FFFFFFFFF8F0007807FFFFFFFFC00001FFFFFFFFF8F0007807FF
FFFFFFC00001FFFFFFFFF8F000780780000003C00001E000000078F000780780000003C00001E0
00000078F000780780000003C00001E000000078F000780780000003C00001E000000078F00078
0780000003C00001E000000078F000780780000003C00001E000000078F000780780000003C000
01E000000078F000780780000003C00001E000000078F000780780000003C00001E000000078F0
007807FFC003FFC00001FFF000FFF8F0007807FFC003FFC00001FFF000FFF8F0007807FFC003FF
C00001FFF000FFF8F0007803FFC003FFC00001FFF000FFF0F000780003C003C03FFFFE00F000F0
00F000780003C003C03FFFFE00F000F000F000780003C003C03FFFFE00F000F000F000780003C0
03C03FFFFE00F000F000F000780003C003C01E001E00F000F000F000780003C003C01E001E00F0
00F000F000780003C003C01E001E00F000F000F000780003C003C01E001E00F000F000F0007800
03C003C01E001E00F000F000F000780003C003C01E001E00F000F000F000780003C003C01E001E
00F000F000F000780003C003C01E001E00F000F000F0007FFFFFFFFFFFFE001E00F000F000F000
7FFFFFFFFFFFFE001E00F000F000F8007FFFFFFFFFFFFE003E00F000F000FC007FFFFFFFFFFFFE
007E00F000F0007E000000000000000000FC00F000F0003F000000000000000001F800F000F000
1F800000000000000003F000F000F0000FC00000000000000007E000F000F00007E00000000000
00000FC000F000F00003F0000000000000001F8000F000F00001F8000000000000003F0000F000
F00000FC000000000000007E0000F000F000007E00000000000000FC0000F000F000003F000000
00000001F80000F000F000001F80000000000003F00000F000F000000FC0000000000007E00000
F000F0000007E000000000000FC00000F000F0000003FFFFFFFFFFFFFF800000F000F0000001FF
FFFFFFFFFFFF000000F000F0000000FFFFFFFFFFFFFE000000F000F00000007FFFFFFFFFFFFC00
0000F000F0000000000003C003C000000000F000F0000000000003C003C000000000F000F00000
00000003C003C000000000F000F0000000000003C003C000000000F000F0000000000003C003C0
00000000F000F0000000000003C003C000000000F000F0000000000003C003C000000000F000F0
000000000003C003C000000000F000F0000000000003C003FFFFFFFFFFF000F0000000000003C0
03FFFFFFFFFFF000F0000000000003E003FFFFFFFFFFF001F0000000000003F003FFFFFFFFFFF0
03F0000000000001F80000000000000007E0000000000000FC000000000000000FC00000000000
007E000000000000001F800000000000003F000000000000003F000000000000001F8000000000
00007E000000000000000FC0000000000000FC0000000000000007E0000000000001F800000000
00000003F0000000000003F00000000000000001F8000000000007E00000000000000000FC0000
0000000FC000000000000000007E00000000001F8000000000000000003F00000000003F000000
0000000000001F80000000007E0000000000000000000FFFFFFFFFFFFC00000000000000000007
FFFFFFFFFFF800000000000000000003FFFFFFFFFFF000000000000000000001FFFFFFFFFFE000
00007D707ED081>4 D E /Fr 42 124 df<0000C018000000C018000000C018000001C0380000
01803000000180300000018030000003807000000300600000030060000003006000000700E000
000600C000000600C000000600C000000E01C000000C018000FFFFFFFFC0FFFFFFFFC000180300
000018030000001803000000380700000030060000003006000000300600000030060000FFFFFF
FFC0FFFFFFFFC000600C000000E01C000000C018000000C018000000C018000001C03800000180
3000000180300000018030000003807000000300600000030060000003006000000700E0000006
00C000000600C00000222D7DA229>35 D<78FCFCFEFE7E0606060C0C1C1830706007107C850E>
44 D<FFE0FFE0FFE00B037F8B10>I<01F00007FC000F1E001C07003C07803803807803C07803C0
7803C0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0
F803E0F803E07803C07803C07803C03803803C07801E0F000F1E0007FC0001F00013207E9F18>
48 D<00C001C007C0FFC0FBC003C003C003C003C003C003C003C003C003C003C003C003C003C0
03C003C003C003C003C003C003C003C003C003C003C003C0FFFFFFFF10207C9F18>I<03F0000F
FE00383F00300F80600FC0F807C0FC07E0FC07E0FC03E07803E03007E00007E00007C00007C000
0F80000F00001E00003E00003C0000700000E00001C0000180000300600600600C00601800E038
00C03FFFC07FFFC0FFFFC0FFFFC013207E9F18>I<03F0000FFE001C1F00380F807C0F807C0FC0
7C07C03C0FC0180FC0000F80000F80000F00001F00003C0003F80003F000001E00000F00000F80
0007C00007C00007E03007E07807E0FC07E0FC07E0FC07C0F80FC0700F803C1F001FFC0003F000
13207E9F18>I<000700000700000F00001F00001F00003F00007F00006F0000CF0001CF00018F
00038F00030F00060F000E0F000C0F00180F00380F00300F00600F00E00F00FFFFF8FFFFF8000F
00000F00000F00000F00000F00000F00000F0001FFF801FFF815207F9F18>I<1000801C07801F
FF001FFE001FFC001FF8001FC00018000018000018000018000018000019F8001FFE001E0F0018
07801807800003C00003C00003E00003E00003E07803E0F803E0F803E0F803C0F003C060078030
0F003C1E000FFC0003F00013207E9F18>I<6000007000007FFFE07FFFE07FFFC07FFFC0600180
E00300C00300C00600C00C00000C0000180000300000300000600000600000E00000E00001E000
01C00001C00003C00003C00003C00003C00007C00007C00007C00007C00007C00007C00007C000
03800013227DA118>55 D<01F80007FE000E0F001803803003807001C07001C07001C07801C07C
03807E03803F87001FEE000FFC0007FC0003FE000FFF001C7F80381FC0700FC07003E0E001E0E0
00E0E000E0E000E0E000E07000C07001C03803801E0F000FFE0003F80013207E9F18>I<01F000
07FC000E0E001C07003C07807803807803C0F803C0F803C0F803C0F803E0F803E0F803E0F803E0
7807E07807E03C07E01C0FE00FFBE007F3E00003E00003C00003C00003C03807807C07807C0700
780E00301C003838001FF00007C00013207E9F18>I<000180000003C0000003C0000003C00000
07E0000007E0000007E000000FF000000DF000000DF0000018F8000018F8000018F80000307C00
00307C0000307C0000603E0000603E0000603E0000C01F0000C01F0001C01F8001FFFF8001FFFF
8003800FC0030007C0030007C0070007E0060003E0060003E00E0003F01F0003F0FFC01FFFFFC0
1FFF20227EA125>65 D<FFFFF800FFFFFF0007C01F8007C007C007C007E007C003E007C003F007
C003F007C003F007C003F007C003F007C003E007C007E007C00FC007C01F8007FFFF0007FFFE00
07C01F8007C007C007C003E007C003F007C001F007C001F807C001F807C001F807C001F807C001
F807C001F807C003F007C003F007C007E007C00FC0FFFFFF00FFFFFC001D227EA123>I<000FE0
10003FF83000FC0E7001E003F007C001F00F8001F00F0000F01F0000F03E0000703E0000707E00
00307C0000307C000030FC000030FC000000FC000000FC000000FC000000FC000000FC000000FC
0000007C0000307C0000307E0000303E0000303E0000601F0000600F0000C00F8000C007C00180
01F0030000FC0E00003FFC00000FE0001C227DA123>I<FFFFF000FFFFFE0007C01F0007C00FC0
07C003C007C001E007C001F007C000F807C000F807C000FC07C0007C07C0007C07C0007C07C000
7E07C0007E07C0007E07C0007E07C0007E07C0007E07C0007E07C0007E07C0007E07C0007C07C0
007C07C0007C07C000F807C000F807C001F007C001E007C003E007C007C007C01F00FFFFFE00FF
FFF8001F227EA125>I<FFFFE00000FFFFF8000007C07E000007C01F000007C00F800007C007C0
0007C007E00007C007E00007C007E00007C007E00007C007E00007C007E00007C007C00007C00F
800007C01F000007C07E000007FFF8000007FFF0000007C078000007C03C000007C03E000007C0
1E000007C01F000007C01F000007C01F000007C01F000007C01F800007C01F800007C01F800007
C01F818007C00FC18007C00FE300FFFE03FF00FFFE00FC0021227EA124>82
D<03F0200FFC601E0FE03803E07801E07000E0F000E0F00060F00060F00060F80000F800007C00
007FC0003FFC003FFF001FFF8007FFC000FFC0000FE00003E00001F00001F00000F0C000F0C000
F0C000F0E000E0E000E0F001E0F801C0FE0780C7FF0081FC0014227DA11B>I<7FFFFFF87FFFFF
F87C07C0F87007C0386007C0186007C018E007C01CE007C00CC007C00CC007C00CC007C00CC007
C00C0007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C00000
07C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C000
0007C00003FFFF8003FFFF801E227EA123>I<FFFE0FFFFFFE0FFF07C001F807C0006007C00060
07C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C000
6007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0006007C0
006007C0006003C000C003E000C001E0018000E0018000F00300003C0E00001FFC000007F00020
227EA125>I<7FFFFE7FFFFE7F007C7C007C7000F87001F8E001F0E003F0C003E0C007C0C007C0
C00F80001F80001F00003F00003E00007C00007C0000F80001F80001F00303F00303E00307C003
07C0030F80071F80071F00063F000E3E000E7C003E7C00FEFFFFFEFFFFFE18227DA11E>90
D<1FE0003FF8007C3C007C1E007C0F00380F00000F00000F0003FF000FFF003F0F007C0F007C0F
00F80F00F80F18F80F18F80F18781F187C3FB83FE7F00F83C015157E9418>97
D<01FE0007FF000F0F801E0F803C0F807C0700780000F80000F80000F80000F80000F80000F800
00F800007C00007C00C03C00C01E01800F830007FE0001F80012157E9416>99
D<0001E0001FE0001FE00003E00001E00001E00001E00001E00001E00001E00001E00001E00001
E00001E003F1E007FDE01F07E03E03E03C01E07801E07801E0F801E0F801E0F801E0F801E0F801
E0F801E0F801E07801E07801E03C01E03C03E01F0FF00FFDFE03F1FE17237EA21B>I<01FC0007
FF000F0F801E07C03C03C07C03E07801E0FFFFE0FFFFE0F80000F80000F80000F80000F8000078
00007C00603C00601E00C00F838007FF0000FC0013157F9416>I<001E00007F0001E78001CF80
03CF80078700078000078000078000078000078000078000078000078000FFF800FFF800078000
078000078000078000078000078000078000078000078000078000078000078000078000078000
0780000780000780007FFC007FFC00112380A20F>I<0F0000FF0000FF00001F00000F00000F00
000F00000F00000F00000F00000F00000F00000F00000F00000F1F800F7FC00FE1E00FC0F00F80
F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00
F00F00F0FFF3FFFFF3FF18237FA21B>104 D<0E001F003F003F001F000E000000000000000000
0000000000000F00FF00FF001F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F00FFE0FFE00B2280A10D>I<00F001F801F801F801F800F00000000000000000000000
000000007807F807F800F800780078007800780078007800780078007800780078007800780078
00780078007800780078007800787078F870F8F0F9E07FC01F000D2C83A10F>I<0F00FF00FF00
1F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F00FFF0FFF00C2380A20D>108
D<0F0FC07E00FF3FE1FF00FFE0F707801FC07E03C00F807C03C00F007803C00F007803C00F0078
03C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F007803C00F00
7803C00F007803C00F007803C00F007803C0FFF3FF9FFCFFF3FF9FFC26157F9429>I<0F1F80FF
7FC0FFE1E01FC0F00F80F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F
00F00F00F00F00F00F00F00F00F0FFF3FFFFF3FF18157F941B>I<01FC0007FF000F07801E03C0
3C01E07800F07800F0F800F8F800F8F800F8F800F8F800F8F800F8F800F87800F07C01F03C01E0
1E03C00F078007FF0001FC0015157F9418>I<0F1F80FF7FE0FFE1F00F80F80F00780F007C0F00
7C0F003E0F003E0F003E0F003E0F003E0F003E0F003E0F007C0F007C0F00780F80F00FE1F00F7F
C00F1F000F00000F00000F00000F00000F00000F00000F00000F0000FFF000FFF000171F7F941B
>I<0F7CFFFEFFDF1F9F0F9F0F0E0F000F000F000F000F000F000F000F000F000F000F000F000F
00FFF8FFF810157F9413>114 D<0FD83FF870786018E018E018F000FC007FC03FE01FF00FF800
7CC03CC01CE01CE01CF018F838FFF08FC00E157E9413>I<03000300030003000700070007000F
001F003F00FFF8FFF80F000F000F000F000F000F000F000F000F000F000F0C0F0C0F0C0F0C0F0C
0F0C079803F001E00E1F7F9E13>I<0F00F0FF0FF0FF0FF01F01F00F00F00F00F00F00F00F00F0
0F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F00F01F00F01F00787F803FEFF01F8FF
18157F941B>I<FFE3FEFFE3FE1F00F80F00600F00600780C00780C007C0C003C18003C18003E3
8001E30001E30000F60000F60000FE00007C00007C00007C0000380000380017157F941A>I<7F
E3FF007FE3FF0007C1F00003C0E00003E1C00001E3800000F3000000FF0000007E0000003C0000
003E0000003E0000007F00000067800000C7C00001C3C0000181E0000381F0000F81F800FFC3FF
80FFC3FF80191580941A>120 D<FFE3FEFFE3FE1F00F80F00600F00600780C00780C007C0C003
C18003C18003E38001E30001E30000F60000F60000FE00007C00007C00007C0000380000380000
3000003000007000006000F86000F8C000F9C000FB80007F00003E0000171F7F941A>I<FFFFFE
FFFFFE1702808D18>123 D E /Fs 24 122 df<FFFFFF8000FFFFFFF000FFFFFFFC0003F000FE
0003F0007F0003F0003F0003F0003F8003F0001F8003F0001FC003F0001FC003F0001FC003F000
1FC003F0001FC003F0001F8003F0003F8003F0003F0003F0007E0003F000FC0003F007F80003FF
FFE00003FFFFFC0003F0007E0003F0003F8003F0001FC003F0000FC003F0000FE003F00007E003
F00007F003F00007F003F00007F003F00007F003F00007F003F00007F003F0000FE003F0000FE0
03F0001FC003F0003F8003F000FF00FFFFFFFE00FFFFFFFC00FFFFFFE00024297EA82A>66
D<0000FF00100007FFE030001FFFF870007FC03CF000FE000FF001F80007F003F00003F007E000
01F00FC00000F01F800000F01F800000703F000000703F000000707F000000307F000000307E00
000030FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE
00000000FE000000007E000000007F000000307F000000303F000000303F000000301F80000060
1F800000600FC00000E007E00000C003F000018001F800038000FE000F00007FC03E00001FFFF8
000007FFE0000000FF800024297DA82B>I<0000FF00100007FFE030001FFFF870007FC03CF000
FE000FF001F80007F003F00003F007E00001F00FC00000F01F800000F01F800000703F00000070
3F000000707F000000307F000000307E00000030FE00000000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE0001FFFF7E0001FFFF7F0001FFFF7F0000
03F03F000003F03F000003F01F800003F01F800003F00FC00003F007E00003F003F00003F001F8
0003F000FE0007F0007FC03DF0001FFFF8F00007FFF0700000FF801028297DA82F>71
D<FFF0000007FFC0FFF800000FFFC0FFF800000FFFC003F800000FF000037C00001BF000037C00
001BF000037C00001BF000033E000033F000033E000033F000033E000033F000031F000063F000
031F000063F000030F8000C3F000030F8000C3F000030F8000C3F0000307C00183F0000307C001
83F0000307C00183F0000303E00303F0000303E00303F0000301F00603F0000301F00603F00003
01F00603F0000300F80C03F0000300F80C03F0000300F80C03F00003007C1803F00003007C1803
F00003007C1803F00003003E3003F00003003E3003F00003001F6003F00003001F6003F0000300
1F6003F00003000FC003F00003000FC003F00003000FC003F0000FC0078003F000FFFC0780FFFF
C0FFFC0780FFFFC0FFFC0300FFFFC032297EA837>77 D<7FFFFFFFF87FFFFFFFF87FFFFFFFF87E
00FC01F87800FC00787000FC00386000FC00186000FC0018E000FC001CE000FC001CC000FC000C
C000FC000CC000FC000CC000FC000CC000FC000C0000FC00000000FC00000000FC00000000FC00
000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC
00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000
FC00000000FC00000000FC00000000FC000001FFFFFE0001FFFFFE0001FFFFFE0026297EA82B>
84 D<FFFFC03FFFFFFFC03FFFFFFFC03FFF03F00003F003F00000C003F00000C003F00000C003
F00000C003F00000C003F00000C003F00000C003F00000C003F00000C003F00000C003F00000C0
03F00000C003F00000C003F00000C003F00000C003F00000C003F00000C003F00000C003F00000
C003F00000C003F00000C003F00000C003F00000C003F00000C003F00000C003F00000C003F000
00C001F000018001F800018000F800038000F8000300007C000600003E001C00001FC07800000F
FFF0000003FFE00000007F000028297EA82D>I<07FC00001FFF80003E07C0003F01E0003F01F0
003F00F8001E00F8000000F8000000F8000000F800001FF80001FFF80007F8F8001FC0F8003F00
F8007E00F8007E00F800FC00F860FC00F860FC00F860FC00F860FC01F8607E03F8603F067FC01F
FC7F8003F01F001B1A7E991E>97 D<07C00000FFC00000FFC00000FFC000000FC0000007C00000
07C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C000
0007C3F80007CFFE0007DC1F0007F0078007E007C007C003E007C003E007C001F007C001F007C0
01F807C001F807C001F807C001F807C001F807C001F807C001F807C001F807C001F007C001F007
C003E007C003E007E007C007B00F8007981F00070FFC000603F0001D2A7FA921>I<007FE001FF
F807C07C0F80FC1F00FC3E00FC3E00787E00007C0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC00007C00007E00003E000C3F000C1F00180F803007E06001FFC0007F00161A7E991B
>I<00001F000003FF000003FF000003FF0000003F0000001F0000001F0000001F0000001F0000
001F0000001F0000001F0000001F0000001F0000001F0000001F00007E1F0001FF9F0007C0FF00
0F807F001F003F003E001F003E001F007C001F007C001F00FC001F00FC001F00FC001F00FC001F
00FC001F00FC001F00FC001F00FC001F007C001F007C001F003E001F003E001F001F003F000F00
7F8007C1DFF803FF9FF800FE1FF81D2A7EA921>I<007E0003FF8007C3E00F01F01E00F03E00F8
3E00F87C007C7C007CFC007CFFFFFCFFFFFCFC0000FC0000FC0000FC0000FC00007C00007E0000
3E000C3E000C1F00180F803007E06001FFC0007F00161A7E991B>I<000F80003FE000F9E001F3
F001E3F003E3F007C1E007C0C007C00007C00007C00007C00007C00007C00007C00007C000FFFE
00FFFE00FFFE0007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0
0007C00007C00007C00007C00007C00007C00007C00007C00007C000FFFF00FFFF00FFFF00142A
7FA912>I<00FC0F8003FF3FC00F87F3C01F03E3C03E01F1803E01F0007E01F8007E01F8007E01
F8007E01F8007E01F8007E01F8003E01F0003E01F0001F03E0000F87C0001BFF000018FC000038
00000038000000380000003C0000001FFFC0001FFFF8000FFFFC001FFFFE003C007F0078000F00
70000F80F0000780F0000780F0000780F000078078000F0078000F003E003E000F80F80007FFF0
0000FF80001A277E991E>I<07C00000FFC00000FFC00000FFC000000FC0000007C0000007C000
0007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C1
F80007C7FE0007DC1F0007F81F0007F00F8007E00F8007E00F8007C00F8007C00F8007C00F8007
C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F80
07C00F8007C00F8007C00F80FFFE7FFCFFFE7FFCFFFE7FFC1E2A7FA921>I<07000F801FC01FC0
1FC00F8007000000000000000000000000000000000007C07FC07FC07FC00FC007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0FFFCFFFCFFFC0E2980A8
10>I<07C0FFC0FFC0FFC00FC007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C0FFFEFFFEFFFE0F2A80A910>108 D<07C1F800FFC7FE00FFDC1F00FFF81F000FF00F8007
E00F8007E00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F80
07C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F80FFFE7FFCFFFE7F
FCFFFE7FFC1E1A7F9921>110 D<007F000001FFC00007C1F0000F0078001E003C003E003E003E
003E007C001F007C001F00FC001F80FC001F80FC001F80FC001F80FC001F80FC001F80FC001F80
FC001F807C001F007C001F003E003E003E003E001F007C000F80F80007C1F00001FFC000007F00
00191A7E991E>I<07CF80FFDFE0FFF1E0FFE3F00FE3F007E3F007C1E007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C000FF
FF00FFFF00FFFF00141A7F9917>114 D<07F8C01FFFC03C07C07803C07001C0F000C0F000C0F8
00C0FC0000FF80007FF8003FFE001FFF000FFF8001FFC0000FE0C003E0C003E0E001E0E001E0E0
01E0F001C0F803C0FE0780C7FE0083F800131A7E9918>I<00C00000C00000C00000C00001C000
01C00001C00003C00003C00007C0000FC0001FFF80FFFF80FFFF8007C00007C00007C00007C000
07C00007C00007C00007C00007C00007C00007C00007C00007C0C007C0C007C0C007C0C007C0C0
07C0C007C0C003E18001E18000FF00007C0012257FA417>I<07C00F80FFC1FF80FFC1FF80FFC1
FF800FC01F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007
C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C00F8007C01F8007C01F8003C03FC0
01E0EFFC00FFCFFC007F0FFC1E1A7F9921>I<FFF81FF8FFF81FF8FFF81FF807C007C007C00700
07E0070003E0060003E0060001F00C0001F00C0001F81C0000F8180000F81800007C3000007C30
00007E3000003E6000003E6000001FC000001FC000001FC000000F8000000F8000000F80000007
0000000700001D1A7F9920>I<FFF81FF8FFF81FF8FFF81FF807C007C007C0070007E0070003E0
060003E0060001F00C0001F00C0001F81C0000F8180000F81800007C3000007C3000007E300000
3E6000003E6000001FC000001FC000001FC000000F8000000F8000000F80000007000000070000
0006000000060000000E0000000C0000300C0000FC180000FC180000FC300000FC70000078E000
003FC000001F0000001D267F9920>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 0 1
bop 712 544 a Fs(The)20 b(Measured)f(Cost)h(of)575 619 y(Conserv)m(ativ)n(e)g
(Garbage)f(Collection)835 740 y Fr(Benjamin)d(Zorn)639 798
y(Departmen)o(t)g(of)h(Computer)f(Science)794 856 y(Campus)h(Bo)o(x)e(#430)
525 914 y(Univ)o(ersit)o(y)h(of)h(Colorado,)h(Boulder)e(80309{043)q(0)674
1024 y(CU-CS-573-92)204 b(April)17 b(1992)911 1520 y Fq(\004)530
1666 y Fs(Univ)n(ersit)n(y)k(of)f(Colorado)h(at)f(Boulder)632
1768 y Fr(T)l(ec)o(hnical)d(Rep)q(ort)f(CU-CS-573-92)619 1813
y(Departmen)o(t)g(of)g(Computer)h(Science)794 1856 y(Campus)g(Bo)o(x)e(430)
734 1901 y(Univ)o(ersit)o(y)g(of)i(Colorado)711 1945 y(Boulder,)f(Colorado)j
(80309)p eop
%%Page: 0 2
bop 753 1205 a Fp(Cop)o(yrigh)o(t)979 1204 y(c)967 1205 y Fo(\015)15
b Fp(1992)30 b(b)o(y)826 1257 y(Benjamin)14 b(Zorn)643 1314
y(Departmen)o(t)f(of)i(Computer)f(Science)787 1370 y(Campus)g(Bo)o(x)h(#430)
537 1426 y(Univ)o(ersit)o(y)f(of)g(Colorado,)g(Boulder)h(80309{0430)p
eop
%%Page: 1 3
bop 655 224 a Fn(The)21 b(Measured)h(Cost)f(of)494 315 y(Conserv)l(ativ)n(e)i
(Garbage)e(Collecti)q(on)1432 289 y Fm(\003)o(y)815 441 y Fr(Benjamin)16
b(Zorn)619 499 y(Departmen)o(t)g(of)g(Computer)h(Science)773
558 y(Campus)g(Bo)o(x)f(#430)505 616 y(Univ)o(ersit)o(y)g(of)g(Colorado,)i
(Boulder)f(80309{043)q(0)863 717 y(April)g(1992)884 881 y Fl(Abstract)251
953 y Fk(Because)22 b(dynamic)f(memory)g(managemen)o(t)f(is)h(an)f(imp)q
(ortan)o(t)h(part)g(of)f(a)h(large)g(class)h(of)189 1002 y(computer)d
(programs,)h(high-p)q(erformance)g(algorithms)g(for)f(dynamic)g(memory)g
(managemen)o(t)189 1052 y(ha)o(v)o(e)14 b(b)q(een,)i(and)f(will)h(con)o(tin)o
(ue)g(to)f(b)q(e,)g(of)f(considerable)j(in)o(terest.)23 b(Exp)q(erience)18
b(indicates)f(that)189 1102 y(for)d(man)o(y)g(programs,)g(dynamic)h(storage)g
(allo)q(cation)h(is)g(so)f(imp)q(ortan)o(t)g(that)f(programmers)h(feel)189
1152 y(comp)q(elled)h(to)f(write)h(and)f(use)g(their)h(o)o(wn)f(domain-sp)q
(eci\014c)h(allo)q(cators)h(to)d(a)o(v)o(oid)h(the)g(o)o(v)o(erhead)189
1202 y(of)c(system)h(libraries.)20 b(Conserv)n(ativ)o(e)13
b(garbage)e(collection)j(has)e(b)q(een)h(suggested)g(as)f(an)f(imp)q(ortan)o
(t)189 1251 y(algorithm)g(for)g(dynamic)g(storage)g(managemen)o(t)g(in)g(C)g
(programs.)17 b(In)11 b(this)h(pap)q(er,)g(I)f(ev)n(aluate)h(the)189
1301 y(costs)18 b(of)f(di\013eren)o(t)j(dynamic)e(storage)g(managemen)o(t)f
(algorithms,)i(including)g(domain-sp)q(eci\014c)189 1351 y(allo)q(cators;)13
b(widely-used)h(general-purp)q(ose)g(allo)q(cators;)f(and)f(a)f(publicly)j(a)
o(v)n(ailable)f(conserv)n(ativ)o(e)189 1401 y(garbage)f(collection)k
(algorithm.)i(Surprisingly)m(,)d(I)e(\014nd)g(that)g(programmer)g(enhancemen)
o(ts)h(often)189 1451 y(ha)o(v)o(e)f(little)i(e\013ect)g(on)f(program)e(p)q
(erformance.)19 b(I)13 b(also)h(\014nd)f(that)h(the)g(true)g(cost)g(of)f
(conserv)n(ativ)o(e)189 1500 y(garbage)j(collection)j(is)e(not)f(the)h(CPU)g
(o)o(v)o(erhead,)g(but)f(the)h(memory)f(system)h(o)o(v)o(erhead)g(of)f(the)
189 1550 y(algorithm.)29 b(I)17 b(conclude)i(that)f(conserv)n(ativ)o(e)h
(garbage)e(collection)j(is)e(a)f(promising)i(alternativ)o(e)189
1600 y(to)c(explicit)j(storage)d(managemen)o(t)g(and)g(that)g(the)h(p)q
(erformance)g(of)f(conserv)n(ativ)o(e)i(collection)g(is)189
1650 y(lik)o(ely)c(to)f(b)q(e)g(impro)o(v)o(ed)g(in)h(the)f(future.)18
b(C)12 b(programmers)g(should)g(no)o(w)g(seriously)i(consider)g(using)189
1700 y(conserv)n(ativ)o(e)h(garbage)f(collection)i(instead)f(of)f(mallo)q
(c/free)h(in)f(programs)g(they)g(write.)75 1895 y Fj(1)69 b(In)n(tro)r
(duction)75 2048 y Fp(Dynamic)10 b(storage)h(allo)q(cation)f(is)h(an)h(imp)q
(ortan)o(t)e(part)h(of)h(a)f(man)o(y)g(kinds)h(of)f(programs)f(including)h
(sim-)75 2144 y(ulators,)17 b(in)o(terpreters,)h(program)e(and)i(logic)g
(optimizers,)e(and)i(windo)o(w)g(systems.)27 b(The)19 b(increasing)75
2240 y(use)c(of)e(the)i(ob)s(ject-orien)o(ted)e(programmi)o(ng)e(paradigm)h
(will)h(substan)o(tially)g(increase)h(the)g(n)o(um)o(b)q(er)f(of)75
2336 y(programs)f(that)i(hea)o(vily)g(use)h(dynamic)e(storage)g(allo)q
(cation.)18 b(The)d(imp)q(ortance)e(of)h(dynamic)f(storage)p
75 2415 720 2 v 126 2442 a Fi(\003)144 2457 y Fh(This)19 b(material)e(is)h
(based)i(up)q(on)g(w)o(ork)e(supp)q(orted)j(b)o(y)e(the)g(National)f(Science)
i(F)m(oundation)g(under)f(Gran)o(t)g(No.)75 2503 y(CCR-9121269.)128
2534 y Fi(y)144 2550 y Fh(Last)13 b(revision)g(August)h(1992.)964
2700 y Fp(1)p eop
%%Page: 2 4
bop 75 42 a Fp(allo)q(cation)14 b(has)h(prompted)g(extensiv)o(e)h(researc)o
(h)f(on)h(the)g(topic,)f(including)g(design,)h(implemen)o(tat)o(ion)75
137 y(and)f(ev)m(aluation)e(of)h(man)o(y)f(di\013eren)o(t)g(approac)o(hes.)20
b(T)l(ec)o(hniques)15 b(for)e(dynamic)h(storage)f(managemen)o(t)75
233 y(can)21 b(b)q(e)g(divided)g(in)o(to)f(t)o(w)o(o)f(broad)h(categories:)30
b(explicit)20 b(storage)f(managemen)o(t,)g(where)i(the)g(user)75
329 y(explicitly)14 b(allo)q(cates)f(and)i(deallo)q(cates)f(ob)s(jects;)g
(and)h(automatic)d(storage)h(managemen)o(t,)f(where)j(ob-)75
425 y(jects)d(no)g(longer)f(needed)i(are)f(automaticall)o(y)d(deallo)q
(cated.)18 b(While)12 b(automatic)d(storage)i(managemen)o(t)75
521 y(has)j(b)q(een)i(used)f(extensiv)o(ely)f(with)g(certain)g(programming)d
(languages,)j(suc)o(h)g(as)h(Lisp,)f(only)g(recen)o(tly)75
617 y(has)i(the)f(tec)o(hnique)h(b)q(een)h(suggested)f(as)f(an)h(extension)f
(of)g(C)h(language)f(en)o(vironmen)o(ts.)k(Automatic)75 713
y(storage)e(managemen)o(t)d(has)k(b)q(een)h(greatly)d(b)q(ene\014cial)j(in)e
(the)h(languages)f(that)g(supp)q(ort)h(it)f(b)q(ecause)75 809
y(it)e(eliminates)f(the)i(need)h(for)f(the)g(programmer)d(to)j(correctly)f
(main)o(tain)f(informatio)o(n)g(ab)q(out)i(all)f(the)75 905
y(ob)s(jects)21 b(allo)q(cated.)38 b(The)21 b(only)g(factor)g(prev)o(en)o
(ting)g(this)g(tec)o(hnique)h(from)d(b)q(eing)j(adopted)g(in)f(all)75
1001 y(programmi)o(ng)13 b(languages)h(is)h(its)f(asso)q(ciated)g(p)q
(erformance)h(cost.)146 1110 y(The)i(C)f(language)h(commonly)d(pro)o(vides)i
(library)g(routines)g(\(i.e.,)g(mallo)q(c)f(and)i(free\))g(for)f(explicit)75
1206 y(dynamic)d(storage)g(managemen)o(t.)k(Because)e(standard)f(C)g(allo)o
(ws)f(un)o(tagged)g(union)i(t)o(yp)q(es)f(and)h(in)o(ter-)75
1302 y(con)o(v)o(ersions)j(of)g(p)q(oin)o(ter)g(and)h(in)o(teger)e(t)o(yp)q
(es,)j(the)e(classic)g(garbage)g(collection)f(algorithms,)f(whic)o(h)75
1398 y(assume)j(that)g(all)g(program)f(p)q(oin)o(ters)h(can)h(b)q(e)h
(correctly)e(iden)o(ti\014ed,)i(cannot)f(b)q(e)h(used)f(in)g(most)e(C)75
1494 y(implemen)o(tati)o(ons.)24 b(Conserv)m(ativ)o(e)16 b(garbage)h
(collection,)g(ho)o(w)o(ev)o(er,)f(is)h(an)h(approac)o(h)f(that)g(allo)o(ws)e
(C)75 1590 y(programs)e(to)h(use)i(automatic)c(storage)i(managemen)o(t.)j
(Another)f(common)c(approac)o(h)j(to)g(automatic)75 1686 y(storage)c
(managemen)o(t,)f(reference)j(coun)o(ting,)f(has)h(not)f(b)q(een)h
(successfully)g(applied)f(in)g(a)g(conserv)m(ativ)o(e)75 1781
y(setting)i(and)i(will)d(not)i(b)q(e)h(considered)g(further)f(in)g(this)f
(pap)q(er.)146 1890 y(Explicit)j(and)h(automatic)e(storage)h(managemen)o(t)e
(algorithms)g(are)j(v)o(ery)g(similar)d(and)k(man)o(y)d(of)75
1986 y(the)g(costs)g(presen)o(t)g(in)g(automatic)e(storage)h(managemen)o(t)e
(algorithms)g(are)j(also)g(presen)o(t)g(in)g(explicit)75 2082
y(managemen)o(t)h(algorithms)g(\(e.g.,)j(o)o(v)o(erhead)f(to)h(allo)q(cate)e
(and)j(free)f(an)g(ob)s(ject\).)33 b(Lik)o(ewise,)20 b(man)o(y)75
2178 y(tec)o(hniques)14 b(that)f(impro)o(v)o(e)f(explicit)g(managemen)o(t)f
(algorithms)g(can)j(b)q(e)g(applied)g(to)f(automatic)e(algo-)75
2274 y(rithms,)i(and)i(vice)h(v)o(ersa.)146 2382 y(Giv)o(en)9
b(that)h(these)g(t)o(w)o(o)f(approac)o(hes)h(to)f(storage)g(managemen)o(t)f
(exist,)i(it)f(is)h(imp)q(ortan)o(t)e(to)h(compare)75 2478
y(them)20 b(and)i(determine)e(their)h(particular)f(strengths)h(and)h(w)o
(eaknesses.)38 b(While)21 b(implemen)o(tat)o(ions)964 2700
y(2)p eop
%%Page: 3 5
bop 75 42 a Fp(of)19 b(conserv)m(ativ)o(e)f(garbage)g(collection)g(for)g(C)h
(are)f(publicly)h(a)o(v)m(ailable,)f(man)o(y)g(C)h(programm)o(ers)d(are)75
137 y(curren)o(tly)g(not)f(a)o(w)o(are)g(that)g(they)h(exist)g(or,)f(p)q
(erhaps,)i(feel)f(that)f(their)h(p)q(erformance)f(is)g(inadequate.)75
233 y(The)d(purp)q(ose)h(of)e(this)g(pap)q(er)h(is)g(to)f(increase)h(the)g(a)
o(w)o(areness)e(of)i(conserv)m(ativ)o(e)f(garbage)g(collection)g(and)75
329 y(to)h(presen)o(t)h(a)g(thorough)g(ev)m(aluation)f(of)g(its)h(p)q
(erformance)f(relativ)o(e)f(to)i(explicit)f(storage)g(managemen)o(t)75
425 y(tec)o(hniques.)146 534 y(I)20 b(compare)f(the)h(p)q(erformance)g(of)g
(four)f(explicit)h(storage)f(managemen)o(t)e(algorithms)g(with)j(the)75
630 y(p)q(erformance)e(of)g(a)g(conserv)m(ativ)o(e)g(garbage)g(collection)f
(algorithm.)27 b(A)19 b(ma)s(jor)d(motiv)m(ation)g(for)i(this)75
726 y(measuremen)o(t)e(is)j(the)g(b)q(elief)f(that)g(programmers)e(ha)o(v)o
(e)i(misp)q(erceptions)g(ab)q(out)g(the)h(relativ)o(e)e(p)q(er-)75
822 y(formance)h(of)i(di\013eren)o(t)f(dynamic)f(storage)h(managemen)o(t)e
(algorithms)o(.)31 b(In)20 b(particular,)f(there)h(is)f(a)75
918 y(widespread)c(b)q(elief)g(that)g(garbage)f(collection)g(algorithms)e
(are)j(b)q(oth)h(slo)o(w)e(and)h(memory-in)o(tensiv)o(e.)146
1026 y(In)21 b(an)g(e\013ort)f(to)g(clarify)g(the)h(relativ)o(e)e(costs)i(of)
f(di\013eren)o(t)h(storage)e(managemen)o(t)f(metho)q(ds,)k(I)75
1122 y(ha)o(v)o(e)d(p)q(erformed)f(a)g(careful)h(and)g(extensiv)o(e)g(p)q
(erformance)f(ev)m(aluation)g(of)h(eac)o(h)g(algorithm.)28
b(I)19 b(not)75 1218 y(only)i(measure)g(the)g(CPU)h(o)o(v)o(erhead)f(of)g
(the)h(programs,)e(but)i(also)e(the)i(memory)d(they)j(used)g(and)75
1314 y(the)17 b(lo)q(calit)o(y)f(of)h(reference)h(exhibited)g(b)o(y)f(the)g
(programs.)25 b(Only)17 b(b)o(y)h(a)f(thorough)f(ev)m(aluation)h(of)g(all)75
1410 y(relev)m(an)o(t)e(p)q(erformance)f(metrics)g(can)h(a)g(fair)f
(comparison)f(b)q(e)j(made.)146 1518 y(I)11 b(ev)m(aluate)f(the)h
(algorithms')c(p)q(erformances)j(in)h(six)f(large)g(C)g(programs)f(that)h(w)o
(ere)g(c)o(hosen)h(b)q(ecause)75 1614 y(they)g(are)g(b)q(oth)g(widely-used)g
(and)g(they)g(allo)q(cate)e(a)i(large)f(amoun)o(t)f(of)i(dynamic)e(data.)18
b(In)12 b(four)e(of)h(these)75 1710 y(programs)k(the)j(programmer)c(in)o(ten)
o(tionally)h(a)o(v)o(oided)i(using)g(the)g(system-pro)o(vided)f(allo)q
(cators)g(and)75 1806 y(implemen)o(ted)f(domain-sp)q(eci\014c)i(allo)q
(cation)e(routines)h(for)h(the)g(most)e(common)g(ob)s(ject)i(t)o(yp)q(es.)25
b(This)75 1902 y(extra)17 b(e\013ort)f(suggests)h(that)f(the)i(programmers)c
(b)q(eliev)o(ed)j(that)g(the)g(library)g(storage)f(managemen)o(t)75
1998 y(routines)f(w)o(ere)g(slo)o(w.)146 2107 y(I)g(decided)h(to)f(test)f
(the)h(in)o(tuition)f(of)g(the)i(programm)o(er)c(b)o(y)k(comparing)d(the)i(p)
q(erformance)f(of)h(the)75 2203 y(domain-sp)q(eci\014c)k(enhancemen)o(ts)h
(with)f(the)h(general-purp)q(ose)h(storage)d(managemen)o(t)f(algorithms.)75
2299 y(My)11 b(results)g(sho)o(w)g(that)g(programmer)e(in)o(tuition)h(ab)q
(out)h(storage)f(managemen)o(t)f(p)q(erformance)i(is)g(often)75
2395 y(not)i(go)q(o)q(d.)19 b(In)14 b(the)g(programs)d(measured,)i
(programmer)d(enhancemen)o(ts)j(had)h(little)e(\(and)h(sometimes)75
2491 y(negativ)o(e\))h(e\013ect)h(on)g(the)g(p)q(erformance)g(of)f(dynamic)h
(storage)e(managemen)o(t.)964 2700 y(3)p eop
%%Page: 4 6
bop 146 42 a Fp(My)14 b(results)h(also)f(sho)o(w)g(that)h(the)g(CPU)g(o)o(v)o
(erhead)f(of)h(conserv)m(ativ)o(e)f(garbage)h(collection)e(is)i(com-)75
137 y(parable)e(to)g(that)f(of)h(explicit)g(storage)f(managemen)o(t)e(tec)o
(hniques.)20 b(I)13 b(\014nd)h(that)f(the)g(CPU)h(o)o(v)o(erhead)e(is)75
233 y(more)h(dep)q(enden)o(t)j(on)f(the)g(application)e(program)g(than)h(the)
h(particular)f(storage)f(managemen)o(t)f(algo-)75 329 y(rithm)i(used.)22
b(Conserv)m(ativ)o(e)15 b(garbage)f(collection)h(p)q(erforms)f(faster)h(than)
h(some)e(explicit)h(algorithms)75 425 y(and)h(slo)o(w)o(er)e(than)i(others,)f
(the)h(relativ)o(e)f(p)q(erformance)g(b)q(eing)h(largely)e(dep)q(enden)o(t)k
(on)e(the)f(program.)75 521 y(Measuremen)o(ts)d(of)g(memory)f(usage)i(and)g
(lo)q(calit)o(y)e(of)i(reference)h(indicate)f(that)f(conserv)m(ativ)o(e)h
(garbage)75 617 y(collection)h(requires)h(substan)o(tially)f(more)g(memory)f
(than)i(explicit)g(storage)f(managemen)o(t,)e(and)k(also)75
713 y(in)o(terferes)j(signi\014can)o(tly)f(with)g(the)i(program's)c(lo)q
(calit)o(y)i(of)h(reference,)i(increasing)d(the)i(n)o(um)o(b)q(er)e(of)75
809 y(cac)o(he)h(misses)e(and)h(page)g(faults)g(dramatically)l(.)26
b(Nev)o(ertheless,)19 b(the)f(o)o(v)o(erall)f(results)h(indicate)g(that)75
905 y(conserv)m(ativ)o(e)13 b(garbage)f(collection)g(p)q(erforms)g
(su\016cien)o(tly)h(w)o(ell)f(that)h(programmers)d(should)j(strongly)75
1001 y(consider)i(using)g(the)g(tec)o(hnique)h(instead)f(of)g(explicit)f
(storage)g(allo)q(cation.)146 1110 y(This)20 b(pap)q(er)g(is)g(organized)g
(as)g(follo)o(ws.)34 b(The)20 b(next)h(section)f(describ)q(es)h(the)f
(algorithms)e(b)q(eing)75 1206 y(ev)m(aluated)g(and)g(compared)f(in)g(this)g
(pap)q(er.)28 b(Then)19 b(I)f(describ)q(e)g(related)f(attempts)f(to)h
(measure)g(and)75 1302 y(compare)i(the)i(p)q(erformance)f(of)g(storage)g
(managemen)o(t)e(algorithms.)33 b(After)20 b(the)h(related)f(w)o(ork,)h(I)75
1398 y(describ)q(e)f(the)e(ev)m(aluation)h(metho)q(ds)f(used)h(including)g
(the)g(test)f(programs.)28 b(Finally)18 b(I)h(presen)o(t)g(the)75
1494 y(results)c(of)f(m)o(y)g(measuremen)o(ts)f(and)i(summarize)e(m)o(y)h
(conclusions.)75 1702 y Fj(2)69 b(Algorithm)24 b(Descriptions)75
1855 y Fp(This)16 b(pap)q(er)i(compares)d(four)i(di\013eren)o(t)f(explicit)g
(storage)g(managemen)o(t)e(implemen)o(tat)o(ions)g(with)i(an)75
1951 y(implemen)o(tati)o(on)f(of)j(conserv)m(ation)f(garbage)g(collection.)27
b(In)18 b(this)g(section,)f(I)i(describ)q(e)f(the)g(storage)75
2047 y(managemen)o(t)12 b(algorithms)h(used)i(in)g(these)h(implemen)o(tati)o
(ons.)964 2700 y(4)p eop
%%Page: 5 7
bop 75 42 a Fg(2.1)56 b(Explicit)19 b(Storage)g(Managemen)n(t)f(Implemen)n
(tations)75 179 y Fp(There)j(are)f(man)o(y)f(di\013eren)o(t)h(strategies)f
(for)i(explicit)e(dynamic)h(storage)f(managemen)o(t,)g(including)75
275 y(\014rst-\014t,)k(b)q(est-\014t,)h(and)f(buddy)g(algorithms)881
259 y Ff(1)898 275 y Fp(.)41 b(It)22 b(is)g(not)g(the)g(in)o(ten)o(t)g(of)f
(this)h(pap)q(er)h(to)e(exhaus-)75 371 y(tiv)o(ely)13 b(compare)g(all)g(p)q
(ossible)g(algorithms)e(for)j(explicit)f(storage)g(managemen)o(t.)k(Instead,)
d(this)f(pap)q(er)75 467 y(considers)k(four)g(w)o(ell-implemen)o(ted,)d
(widely-used)k(implemen)o(tati)o(ons)c(in)k(an)f(e\013ort)f(to)h(c)o
(haracterize)75 563 y(the)h(v)m(ariation)e(in)i(p)q(erformance)f(exhibited)h
(b)o(y)g(these)g(implemen)o(tati)o(ons.)25 b(Comparing)16 b(the)i(p)q(erfor-)
75 659 y(mance)e(of)g(conserv)m(ativ)o(e)f(garbage)h(collection)f(with)h
(these)g(implemen)o(tatio)o(ns)e(pro)o(vides)i(insigh)o(t)f(in)o(to)75
755 y(the)j(relativ)o(e)e(cost)i(of)f(explicit)g(and)h(automatic)e(storage)g
(managemen)o(t.)26 b(The)18 b(four)f(explicit)g(imple-)75 851
y(men)o(tations)c(considered)i(are:)k(an)c(implemen)o(tatio)o(n)d(of)j(Kn)o
(uth's)g(b)q(oundary-tag)g(\014rst-\014t)f(algorithm;)75 947
y(a)k(Cartesian-tree,)h(b)q(etter-\014t)f(algorithm)e(\(as)i(pro)o(vided)h(b)
o(y)g(the)f(Sun)i(Op)q(erating)f(System\);)f(a)h(fast)75 1043
y(buddy)f(algorithm)d(\(the)i(BSD)g(Unix)g(implemen)o(tatio)o(n)e(of)i(mallo)
q(c\);)e(and)j(a)f(h)o(ybrid)g(\014rst-\014t,)g(buddy)75 1139
y(algorithm)12 b(\(the)j(GNU)g(publicly)g(a)o(v)m(ailable)f(mallo)q(c/free)f
(implemen)o(tati)o(on\).)75 1311 y Fe(Kn)o(uth's)18 b(Boundary-tag)j
(First-\014t)e(Algorithm)43 b Fp(This)16 b(algorithm)e(is)i(a)h(straigh)o
(tforw)o(ar)o(d)d(im-)75 1407 y(plemen)o(tation)i(of)h(a)h(\014rst-\014t)g
(strategy)e(with)i(sev)o(eral)f(optimizations)e([17)o(].)28
b(I)18 b(measured)f(a)h(publicly)75 1503 y(a)o(v)m(ailable)d(implemen)o
(tatio)o(n)f(of)i(the)h(classic)f(Kn)o(uth)h(algorithm)c(written)j(b)o(y)h
(Mark)e(Moraes.)23 b(In)18 b(this)75 1599 y(algorithm,)11 b(free)k(blo)q(c)o
(ks)f(are)h(connected)g(together)f(in)h(a)f(doubly-link)o(ed)h(list.)j
(During)c(allo)q(cation)f(the)75 1695 y(list)19 b(is)h(scanned)h(for)e(the)h
(\014rst)g(free)g(blo)q(c)o(k)g(that)g(is)f(large)h(enough.)35
b(This)19 b(blo)q(c)o(k)h(is)g(split)f(in)o(to)g(t)o(w)o(o)75
1791 y(blo)q(c)o(ks,)c(one)h(of)g(the)g(appropriate)f(size,)g(and)h
(returned.)22 b(As)16 b(an)g(optimization,)d(if)i(the)h(extra)f(piece)h(is)75
1887 y(to)q(o)h(small)f(\(in)i(this)f(case)i(less)e(than)h(24)g(b)o(ytes\),)g
(the)g(blo)q(c)o(k)g(is)f(not)h(split.)27 b(The)19 b(free)f(list)f(p)q(oin)o
(ter)g(is)75 1983 y(implemen)o(ted)12 b(as)i(a)g(\\ro)o(ving")e(p)q(oin)o
(ter,)i(whic)o(h)g(eliminates)e(the)i(aggregation)e(of)i(small)e(blo)q(c)o
(ks)i(at)g(the)75 2079 y(fron)o(t)g(of)h(the)g(free)h(list.)146
2187 y(In)e(this)f(algorithm,)e(allo)q(cated)h(blo)q(c)o(ks)i(con)o(tain)f(t)
o(w)o(o)f(extra)h(w)o(ords)g(of)h(space)g(o)o(v)o(erhead,)f(one)h(w)o(ord)75
2283 y(at)j(eac)o(h)g(end)h(of)f(the)h(blo)q(c)o(k.)26 b(Eac)o(h)17
b(w)o(ord)g(con)o(tains)f(the)i(size)f(of)g(the)g(blo)q(c)o(k)g(and)h(its)f
(curren)o(t)g(status)p 75 2355 720 2 v 127 2382 a Fd(1)144
2398 y Fh(There)c(is)g(some)f(disagreemen)o(t)h(ab)q(out)h(the)g(exact)f
(de\014nition)h(of)f(a)g(buddy)h(algorithm.)j(In)c(this)g(discussion,)g
(buddy)75 2444 y(algorithms)e(include)g(an)o(y)h(algorithm)f(that)h(allo)q
(cates)f(storage)h(from)f(\014xed-size)h(p)q(o)q(ols.)17 b(While)11
b(some)g(buddy)i(algorithms)75 2490 y(attempt)f(to)h(merge)f(adjacen)o(t)i
(ob)r(jects)f(\(buddies\),)h(I)f(do)g(not)g(consider)h(this)f(a)g(necessary)h
(feature)f(of)g(suc)o(h)g(algorithms.)964 2700 y Fp(5)p eop
%%Page: 6 8
bop 75 42 a Fp(\(allo)q(cated)12 b(or)h(free\).)19 b(These)14
b(\\b)q(oundary-tags")e(are)h(used)h(to)f(allo)o(w)e(e\016cien)o(t)i(freeing)
g(and)h(coalescing)75 137 y(of)h(storage.)j(When)d(a)g(blo)q(c)o(k)g(of)f
(storage)g(is)g(freed,)h(the)g(algorithm)d(examines)i(the)h(blo)q(c)o(ks)g(b)
q(efore)g(and)75 233 y(after)f(it)g(to)g(determine)f(if)h(they)h(are)f(also)g
(free.)19 b(It)c(coalesces)f(the)h(allo)q(cated)e(blo)q(c)o(k)i(with)f(these)
g(blo)q(c)o(ks)75 329 y(if)j(p)q(ossible)h(and)g(the)f(freed)h(blo)q(c)o(k)g
(is)f(link)o(ed)h(in)o(to)e(the)i(free-list)f(data)g(structure.)27
b(Main)o(taining)16 b(the)75 425 y(b)q(oundary)g(tags)e(reduces)i(deallo)q
(cation)e(to)g(a)h(constan)o(t)f(time)g(op)q(eration.)146 534
y(In)g(the)g(w)o(orst)f(case,)h(this)f(algorithm,)e(while)i(simple,)g(can)h
(also)f(b)q(e)h(quite)g(slo)o(w)f(\()p Fc(O)q Fp(\()p Fc(n)p
Fp(\),)g(where)h Fc(n)g Fp(is)75 630 y(the)f(length)f(of)g(the)g(free)h
(list\).)k(Lik)o(ewise,)12 b(heap)h(fragmen)o(tation)d(asso)q(ciated)h(with)h
(a)g(\014rst-\014t)g(approac)o(h)75 726 y(can)j(b)q(e)g(considerable.)k(In)c
(practice,)f(ho)o(w)o(ev)o(er,)f(this)h(algorithm)d(is)j(often)g(e\016cien)o
(t)g(b)q(oth)h(in)f(time)f(and)75 822 y(space.)34 b(The)21
b(other)e(algorithms)e(discussed)k(attempt)d(to)h(impro)o(v)o(e)f(on)i(this)f
(simple,)g(y)o(et)h(e\013ectiv)o(e,)75 918 y(approac)o(h.)75
1090 y Fe(Stephenson's)e(Cartesian)h(T)l(ree)f(Algorithm)42
b Fp(This)16 b(is)g(the)h(algorithm)c(pro)o(vided)j(b)o(y)h(the)f(Sun)75
1186 y(Op)q(erating)21 b(System)g(library)f(routines)h(mallo)q(c)e(and)j
(free)f([24)o(,)g(25].)38 b(This)21 b(algorithm,)e(instead)i(of)75
1282 y(placing)c(the)i(free)f(blo)q(c)o(ks)g(in)f(a)h(linear)g(list,)f
(places)h(them)f(in)h(a)f(Cartesian)g(tree)h([27)o(].)28 b(Descenden)o(ts)75
1378 y(in)17 b(this)f(tree)h(are)f(ordered)h(b)q(oth)g(b)o(y)g(address)g
(\(left)f(descenden)o(ts)i(ha)o(v)o(e)e(lo)o(w)o(er)f(addresses)i(than)g
(righ)o(t)75 1474 y(descenden)o(ts\))c(and)f(b)o(y)f(size)h(\(descenden)o(ts)
h(on)e(the)h(left)g(are)f(smaller)f(than)h(descenden)o(ts)i(on)f(the)g(righ)o
(t\).)75 1570 y(Suc)o(h)k(an)f(organization)e(is)i(attractiv)o(e)f(b)q
(ecause)i(the)f(w)o(orst-case)f(cost)h(of)g(all)f(op)q(erations)h(on)g(the)g
(tree)75 1666 y(\(allo)q(cation,)g(deallo)q(cation,)h(and)i(mo)o(ving)d(blo)q
(c)o(ks)i(around\))g(is)g Fc(O)q Fp(\()p Fc(d)p Fp(\),)f(where)i
Fc(d)f Fp(is)g(the)g(depth)h(of)f(the)75 1762 y(tree.)146 1870
y(This)g(algorithm)e(\(sometimes)g(called)i(\\b)q(etter-\014t"\))h(allo)o(ws)
e(for)h(more)g(precise)h(allo)q(cation)e(than)75 1966 y(\014rst-\014t)g(b)q
(ecause)i(the)f(tree)f(is)g(examined)g(starting)f(at)h(the)g(ro)q(ot)g(un)o
(til)g(a)g(blo)q(c)o(k)h(that)f(is)g(close)g(to)g(the)75 2062
y(necessary)f(size)g(is)g(found.)20 b(If)15 b(the)g(c)o(hildren)g(of)g(a)f
(no)q(de)i(of)e(su\016cien)o(t)h(size)g(are)g(themselv)o(es)e(to)q(o)i
(small,)75 2158 y(the)j(no)q(de)g(itself)e(is)h(used)h(for)f(the)h(allo)q
(cation.)25 b(Then)18 b(the)f(no)q(de)h(is)f(split)g(and)h(whatev)o(er)f
(remains)e(is)75 2254 y(placed)j(appropriately)f(in)h(the)g(tree.)29
b(When)18 b(an)g(ob)s(ject)g(is)f(deallo)q(cated,)h(it)g(is)f(lo)q(cated)h
(in)g(the)g(tree)75 2350 y(based)e(on)f(its)f(address)h(and)h(size,)e(and)i
(coalesced)f(with)g(adjacen)o(t)f(free)i(blo)q(c)o(ks)e(if)h(p)q(ossible.)964
2700 y(6)p eop
%%Page: 7 9
bop 146 42 a Fp(The)14 b(Cartesian)e(tree)i(algorithm)d(app)q(ears)j
(attractiv)o(e,)d(but)j(in)g(practice)g(it)f(can)h(ha)o(v)o(e)f(dra)o(wbac)o
(ks.)75 137 y(The)18 b(\014rst)f(and)h(most)e(imp)q(ortan)o(t)f(is)i(that)g
(the)h(tree)f(ma)o(y)f(b)q(ecome)h(un)o(balanced,)i(in)e(the)h(w)o(orst)e
(case)75 233 y(degenerating)c(to)h(a)f(linear)g(list)g(of)h(free)f(blo)q(c)o
(ks.)19 b(Because)14 b(the)f(ob)s(jects)f(in)h(the)g(tree)f(completely)g
(deter-)75 329 y(mine)g(its)h(shap)q(e,)h(no)g(balancing)f(algorithms)d(can)k
(eliminate)d(this)i(w)o(orst-case)g(b)q(eha)o(vior.)19 b(Also,)12
b(while)75 425 y(the)k(b)q(etter-\014t)f(nature)h(of)f(allo)q(cation)e(w)o
(ould)i(app)q(ear)h(to)f(reduce)h(fragmen)o(tation,)c(b)q(oth)k(Stephenson)75
521 y(and)k(Kn)o(uth)g(w)o(arn)f(that)f(under)j(some)d(circumstances,)h(a)g
(b)q(etter/b)q(est-\014t)h(approac)o(h)f(ma)o(y)f(in)i(fact)75
617 y(increase)c(fragmen)o(tation)e(due)j(to)f(the)g(algorithm's)d(tendency)
18 b(to)e(increase)g(the)h(o)q(ccurrence)g(of)f(v)o(ery)75
713 y(small)f(blo)q(c)o(ks.)25 b(Empirical)15 b(comparisons)g(b)o(y)i(Korn)g
(and)g(V)l(o,)g(ho)o(w)o(ev)o(er,)g(suggest)f(that)g(the)i(memory)75
809 y(o)o(v)o(erhead)d(of)g(the)g(Stephenson)h(algorithm)c(is)j(close)g(to)f
(that)h(of)g(b)q(est-\014t)g(algorithms)d([18)o(].)75 981 y
Fe(Kingsley's)19 b(P)o(o)o(w)o(ers-of-Tw)o(o)g(Buddy)i(Algorithm)43
b Fp(As)18 b(an)g(alternativ)o(e)f(to)h(a)g(more)f(con)o(v)o(en-)75
1077 y(tional)12 b(\014rst-\014t)h(algorithm,)e(Chris)i(Kingsley)g(implemen)o
(ted)e(a)i(v)o(ery)g(fast)g(buddy)h(algorithm)d(that)i(w)o(as)75
1173 y(distributed)i(with)g(the)g(4.2)f(BSD)i(Unix)f(release)g([16)o(].)20
b(Kingsley's)15 b(algorithm)d(allo)q(cates)i(ob)s(jects)h(in)g(a)75
1269 y(limited)d(n)o(um)o(b)q(er)h(of)g(di\013eren)o(t)g(size)h(classes,)f
(namely)g(p)q(o)o(w)o(ers)g(of)g(t)o(w)o(o)g(min)o(us)f(a)i(constan)o(t.)k
(Allo)q(cation)75 1365 y(requests)d(are)f(rounded)i(up)f(to)f(the)h(nearest)g
(size)g(class)f(and)h(a)f(free)h(list)f(of)g(ob)s(jects)h(of)f(eac)o(h)h
(size)g(class)75 1461 y(is)d(main)o(tained.)17 b(If)c(no)f(ob)s(jects)g(of)g
(a)g(particular)f(size)i(class)f(are)g(a)o(v)m(ailable,)f(more)g(storage)g
(is)h(allo)q(cated.)75 1557 y(No)j(attempt)e(is)i(made)f(to)h(coalesce)g(ob)s
(jects.)146 1666 y(Because)f(this)g(algorithm)d(is)j(so)f(simple,)g(it)g(is)h
(also)f(easy)h(to)f(pro)o(vide)h(a)g(fast)f(implemen)o(tatio)o(n.)k(As)75
1762 y(w)o(e)d(will)e(see,)i(the)g(algorithm)d(is)i(consisten)o(tly)g(the)h
(fastest)f(of)g(those)h(compared.)k(On)c(the)g(other)g(hand,)75
1858 y(it)e(also)g(w)o(astes)h(considerable)f(space,)i(esp)q(ecially)e(if)h
(the)g(size)g(requests)g(are)g(often)g(sligh)o(tly)e(larger)h(than)75
1954 y(the)h(size)g(classes)g(pro)o(vided.)18 b(This)13 b(algorithm)d
(illustrates)h(one)i(extreme)f(of)h(the)g(time/space)e(tradeo\013s)75
2049 y(p)q(ossible)17 b(in)g(dynamic)f(storage)g(managemen)o(t.)23
b(In)o(terestingly)l(,)17 b(its)f(widespread)h(use)h(w)o(ould)f(suggest)75
2145 y(that)g(users)h(often)g(consider)g(CPU)g(p)q(erformance)f(more)f(imp)q
(ortan)o(t)g(than)i(memory)d(usage)j(in)g(these)75 2241 y(systems)c(\(or,)g
(p)q(erhaps,)h(are)g(not)g(a)o(w)o(are)f(of)h(the)g(p)q(enalt)o(y\).)75
2413 y Fe(Haertel's)25 b(Hybrid)f(Algorithm)43 b Fp(In)23 b(an)f(e\013ort)g
(to)f(obtain)h(the)h(b)q(est)f(of)g(b)q(oth)h(w)o(orlds,)g(Mik)o(e)75
2509 y(Haertel)16 b(has)g(implemen)o(ted)e(a)h(h)o(ybrid)i(of)e(the)i
(\014rst-\014t)f(and)g(buddy-metho)q(d)h(algorithms)c([13)o(].)22
b(This)964 2700 y(7)p eop
%%Page: 8 10
bop 75 42 a Fp(implemen)o(tati)o(on)8 b(is)j(a)o(v)m(ailable)f(to)h(the)g
(public)g(as)g(the)g(F)l(ree)h(Soft)o(w)o(are)d(F)l(oundation)i(implemen)o
(tati)o(on)d(of)75 137 y(mallo)q(c/free.)17 b(In)c(Haertel's)e(algorithm,)e
(requests)j(larger)f(than)h(a)g(sp)q(eci\014c)h(size)f(\(e.g.,)g(4096)f(b)o
(ytes\))g(are)75 233 y(managed)k(using)h(a)g(link)o(ed-list,)e(\014rst-\014t)
i(strategy)l(,)f(while)h(ob)s(jects)f(smaller)f(than)i(this)g(are)g(allo)q
(cated)75 329 y(in)f(sp)q(eci\014c)h(size)f(classes)g(\(p)q(o)o(w)o(ers)f(of)
h(t)o(w)o(o\),)e(lik)o(e)h(the)i(Kingsley)f(buddy)h(algorithm.)146
438 y(An)h(imp)q(ortan)o(t)d(goal)i(of)g(Haertel's)g(approac)o(h)g(is)g(to)h
(impro)o(v)o(e)d(the)j(lo)q(calit)o(y)e(of)i(reference)g(during)75
534 y(allo)q(cation.)g(He)d(do)q(es)f(this)g(b)o(y)g(dividing)f(allo)q(cated)
g(storage)g(up)h(in)o(to)f(page-sized)i(c)o(h)o(unks)f(and)g(storing)75
630 y(information)d(ab)q(out)i(these)h(c)o(h)o(unks)g(in)f(small,)f(highly)h
(lo)q(calized)g(c)o(h)o(unk)h(headers.)19 b(Instead)13 b(of)f(tra)o(v)o(ers-)
75 726 y(ing)h(the)g(en)o(tire)g(heap)h(attempting)c(to)j(\014nd)h(a)f
(\014t,)g(only)g(the)g(information)e(in)i(the)g(c)o(h)o(unk)h(headers)g(m)o
(ust)75 822 y(b)q(e)i(tra)o(v)o(ersed.)21 b(This)15 b(algorithm)e(also)i
(reduces)h(the)g(p)q(er-ob)s(ject)g(space)g(o)o(v)o(erhead)f(required)h(b)o
(y)f(other)75 918 y(algorithms)c(\(suc)o(h)k(as)e(the)i(b)q(oundary-tags)f
(in)g(Kn)o(uth's)g(algorithm\))d(in)k(the)f(follo)o(wing)e(w)o(a)o(y)l(.)19
b(Ch)o(unks)75 1014 y(are)e(allo)q(cated)g(so)g(that)g(all)g(ob)s(jects)g(in)
g(a)h(c)o(h)o(unk)g(are)f(the)h(same)e(size.)27 b(The)18 b(address)g(of)f(an)
o(y)h(ob)s(ject)75 1110 y(can)f(b)q(e)g(used)g(to)f(lo)q(cate)h(the)f(c)o(h)o
(unk)h(header,)g(whic)o(h)g(con)o(tains)f(information)e(ab)q(out)i(the)h(ob)s
(ject)f(size)75 1206 y(asso)q(ciated)g(with)g(the)h(c)o(h)o(unk.)25
b(The)17 b(c)o(h)o(unk)g(header)g(also)f(con)o(tains)g(a)h(coun)o(t)f(of)h
(the)f(n)o(um)o(b)q(er)h(of)f(free)75 1302 y(blo)q(c)o(ks)e(within)f(a)h(c)o
(h)o(unk)g(and)h(deallo)q(cates)e(en)o(tire)g(c)o(h)o(unks)i(when)f(all)f
(the)h(ob)s(jects)g(in)g(the)g(c)o(h)o(unk)g(ha)o(v)o(e)75
1398 y(b)q(een)i(freed.)k(Haertel's)14 b(algorithm)e(represen)o(ts)j(a)g(h)o
(ybrid)g(of)g(the)g(Kn)o(uth)g(and)h(Kingsley)e(algorithms,)75
1494 y(com)o(bining)f(the)j(b)q(est)f(features)g(of)g(b)q(oth.)75
1666 y Fg(2.2)56 b(The)18 b(Bo)r(ehm-W)-5 b(eiser)17 b(Conserv)m(ativ)n(e)i
(Collection)h(Algorithm)75 1804 y Fp(An)o(y)g(garbage)f(collection)g
(algorithm)e(\(as)j(distinguished)f(from)f(reference)j(coun)o(ting)f
(algorithms)1841 1787 y Ff(2)1857 1804 y Fp(\))75 1900 y(iden)o(ti\014es)f
(garbage)g(ob)s(jects)g(b)o(y)g(\014rst)h(visiting)e(all)g(ob)s(jects)h
(still)f(in)i(use)f(b)o(y)h(the)g(program.)31 b(These)75 1995
y(ob)s(jects)17 b(are)h(de\014ned)h(as)f(still)e(in)i(use)g(if)g(they)g(are)f
(reac)o(hable)h(b)o(y)g(some)e(p)q(oin)o(ter)i(tra)o(v)o(ersal)e(starting)75
2091 y(from)d(the)j(ro)q(ot)e(set)h(of)g(p)q(oin)o(ters)f(\(t)o(ypically)g
(those)h(on)g(the)g(run)o(time)f(stac)o(k)g(and)h(in)g(registers\).)146
2200 y(Adding)22 b(garbage)g(collection)f(to)h(C)h(in)o(tro)q(duces)f(the)h
(di\016cult)f(problem)f(of)h(iden)o(tifying)g(heap)75 2296
y(p)q(oin)o(ters)d(without)f(run)o(time)g(t)o(yp)q(e)h(information.)30
b(Because)20 b(C)f(is)g(w)o(eakly)f(t)o(yp)q(ed,)i(a)f(p)q(oin)o(ter)g(to)g
(an)75 2392 y(ob)s(ject)11 b(can)g(b)q(e)h(stored)e(in)h(an)g(in)o(teger)g(v)
m(ariable.)18 b(Th)o(us,)11 b(ev)o(en)h(if)e(the)h(lo)q(cations)f(of)h(all)f
(p)q(oin)o(ter)h(v)m(ariables)p 75 2462 720 2 v 127 2488 a
Fd(2)144 2504 y Fh(F)m(or)f(a)g(complete)g(discussion)h(of)e(the)i(t)o(w)o(o)
e(approac)o(hes)j(to)e(automatic)g(storage)g(managemen)o(t,)g(see)g(the)g
(surv)o(ey)h(article)75 2550 y(b)o(y)i(Cohen)h([10].)964 2700
y Fp(8)p eop
%%Page: 9 11
bop 75 42 a Fp(w)o(ere)17 b(kno)o(wn)f(to)h(a)f(garbage)g(collector,)g(the)h
(collector)f(w)o(ould)g(still)f(b)q(e)j(unable)f(to)g(iden)o(tify)f(all)g
(heap)75 137 y(p)q(oin)o(ters)i(precisely)l(.)32 b(F)l(urthermore,)18
b(there)h(is)f(no)h(w)o(a)o(y)f(for)h(a)g(collector)e(to)i(distinguish)f(an)h
(in)o(teger)75 233 y(v)m(ariable)13 b(that)g(\\app)q(ears")g(to)g(con)o(tain)
g(a)g(heap)h(p)q(oin)o(ter)f(\(i.e.,)f(has)h(a)h(v)m(alue)f(that)g(is)g(an)h
(address)f(in)h(the)75 329 y(heap\))j(from)e(one)i(that)f(really)g(do)q(es.)
25 b(Suc)o(h)18 b(an)f(in)o(teger)f(v)m(ariable)g(is)h(called)f(an)h(am)o
(biguous)e(p)q(oin)o(ter.)75 425 y(The)e(existence)f(of)g(am)o(biguous)e(p)q
(oin)o(ters)i(leads)g(to)g(conserv)m(ativ)o(e)f(collection)g(algorithms,)f
(whic)o(h)i(treat)75 521 y(the)h(ro)q(ot)f(set)g(as)g(a)h(series)f(of)h(p)q
(oten)o(tial)e(p)q(oin)o(ters)h(\(ignoring)f(t)o(yp)q(e)i(information)d
(presen)o(t)j(in)f(the)h(source)75 617 y(program\),)18 b(and)i(assume)e(that)
h(an)o(y)g(memory)e(lo)q(cation)h(whose)i(v)m(alue)f(is)h(an)f(address)h(in)f
(the)h(heap)75 713 y(is)d(a)h(p)q(oin)o(ter.)27 b(F)l(urthermore,)16
b(b)q(ecause)j(these)f(am)o(biguous)d(p)q(oin)o(ters)j(could)f(p)q(oten)o
(tially)f(b)q(e)j(in)o(teger)75 809 y(v)m(ariables,)e(ob)s(jects)f(they)h(p)q
(oin)o(t)g(to)g(cannot)g(b)q(e)h(relo)q(cated)e(b)o(y)h(the)h(collector)e
(since)h(doing)g(so)g(w)o(ould)75 905 y(require)e(mo)q(difying)e(the)j(v)m
(ariable's)e(v)m(alue.)146 1014 y(Sev)o(eral)23 b(di\013eren)o(t)g(conserv)m
(ativ)o(e)h(collection)f(algorithms)e(ha)o(v)o(e)i(b)q(een)i(implemen)o(ted)d
(and)i(de-)75 1110 y(scrib)q(ed.)c(These)15 b(include)g(early)e(w)o(ork)h(b)o
(y)g(Caplinger)f([9],)g(an)i(unpublished)g(implemen)o(tati)o(on)d(similar)75
1206 y(to)17 b(the)g(Bo)q(ehm-W)l(eiser)g(collector)f(b)o(y)h(Doug)g(McIlro)o
(y)g([6)o(],)g(another)g(unpublished)i(implemen)o(tat)o(ion)75
1302 y(b)o(y)j(P)o(aul)g(Hil\014nger)g([14)o(],)h(and)g(a)f(mostly-cop)o
(ying)d(garbage)j(collector)f(b)o(y)h(Bartlett)f([2)o(,)h(4].)41
b(The)75 1398 y(conserv)m(ativ)o(e)18 b(collection)f(algorithm)e(that)j(is)g
(considered)h(in)f(this)g(pap)q(er)h(is)f(the)g(one)h(describ)q(ed)g(b)o(y)75
1494 y(Bo)q(ehm)e(and)h(W)l(eiser)f([5])g(\(v)o(ersion)f(1.6)h(of)g(the)h
(soft)o(w)o(are\))1106 1477 y Ff(3)1124 1494 y Fp(.)27 b(Of)18
b(the)g(implemen)o(tat)o(ions)d(men)o(tioned,)75 1590 y(this)g(implemen)o
(tation)e(is)i(easy)h(to)f(obtain)g(and)i(requires)e(the)h(least)g(e\013ort)e
(to)i(use.)22 b(Their)16 b(algorithm)75 1686 y(implemen)o(ts)d(a)i
(mark-and-sw)o(eep)f(garbage)h(collector)f(that)h(do)q(es)h(not)f(relo)q
(cate)f(ob)s(jects)h(and)h(follo)o(ws)75 1781 y(p)q(oin)o(ters)f(conserv)m
(ativ)o(ely)l(.)146 1890 y(The)10 b(Bo)q(ehm-W)l(eiser)g(conserv)m(ativ)o(e)g
(collector)f(is)h(similar)d(in)j(man)o(y)f(w)o(a)o(ys)h(to)f(explicit)h
(managemen)o(t)75 1986 y(algorithms,)g(and)j(in)g(particular)f(to)g
(Haertel's)g(mallo)q(c/free)f(implemen)o(tatio)o(n.)17 b(Both)c(algorithms)d
(use)75 2082 y(di\013eren)o(t)j(approac)o(hes)g(for)g(small)e(and)j(large)e
(ob)s(jects;)h(b)q(oth)h(algorithms)c(allo)q(cate)i(smaller)f(ob)s(jects)i
(in)75 2178 y(distinct)j(size)g(classes;)g(b)q(oth)h(algorithms)c(allo)q
(cate)i(similarly)e(sized)k(ob)s(jects)f(in)g(aligned,)g(page-sized)75
2274 y(c)o(h)o(unks;)f(and)h(b)q(oth)f(algorithms)d(reclaim)h(en)o(tire)i(c)o
(h)o(unks)g(if)g(all)f(ob)s(jects)h(in)g(them)f(are)h(free.)p
75 2355 720 2 v 127 2382 a Fd(3)144 2398 y Fh(Alan)e(Demers)f(also)h(pla)o(y)
o(ed)h(a)f(ma)r(jor)f(role)h(in)g(implemen)o(ting)e(this)h(collector.)964
2700 y Fp(9)p eop
%%Page: 10 12
bop 146 42 a Fp(There)12 b(are)g(also)f(notable)h(di\013erences)g(b)q(et)o(w)
o(een)h(Haertel's)e(and)i(Bo)q(ehm)e(and)i(W)l(eiser's)e(algorithm.)75
137 y(Unlik)o(e)20 b(the)h(BSD)f(algorithm)e(describ)q(ed)j(ab)q(o)o(v)o(e,)g
(the)g(size)f(classes)g(tak)o(e)g(on)h(v)m(alues)f(that)g(are)g(not)75
233 y(p)q(o)o(w)o(ers)c(of)g(t)o(w)o(o,)f(but)h(range)h(from)d(8)i(to)g(2048)
f(b)o(ytes,)h(concen)o(trating)g(on)g(a)g(v)m(ariet)o(y)g(of)g(smaller)e
(sizes)75 329 y(\(including)g(16,)f(24,)h(32,)f(and)i(48)e(b)o(yte)h(ob)s
(jects\).)19 b(Ch)o(unk)14 b(headers)h(in)f(the)g(Bo)q(ehm-W)l(eiser)g
(algorithm)75 425 y(include)i(bitmaps)d(used)j(to)e(mark)g(whic)o(h)h(ob)s
(jects)g(are)f(allo)q(cated)h(and)g(free)g(in)g(eac)o(h)h(c)o(h)o(unk.)146
534 y(Because)e(of)g(the)g(similarit)o(ies,)d(allo)q(cation)h(pro)q(ceeds)i
(in)g(the)g(Bo)q(ehm-W)l(eiser)f(algorithm)e(m)o(uc)o(h)i(as)75
630 y(it)i(do)q(es)h(in)g(the)g(Haertel)f(algorithm:)j(a)d(free)h(list)f(of)g
(ob)s(jects)g(in)h(eac)o(h)g(size)g(class)f(is)g(main)o(tained,)f(and)75
726 y(an)j(ob)s(ject)g(is)g(remo)o(v)o(ed)f(from)f(the)j(appropriate)e(free)h
(list)f(when)i(it)f(is)g(allo)q(cated.)25 b(If)18 b(the)f(free)g(list)f(is)75
822 y(empt)o(y)l(,)i(the)g(Bo)q(ehm-W)l(eiser)g(collector)f(can)i(either)f
(request)h(more)e(memory)f(from)g(the)j(system,)e(or)75 918
y(more)d(commonly)l(,)e(can)j(in)o(v)o(ok)o(e)g(a)f(garbage)h(collection)f
(to)g(reclaim)g(un)o(used)i(space.)146 1026 y(When)d(a)g(collection)f(is)h
(required,)g(ob)s(jects)f(are)h(visited)g(transitiv)o(ely)l(,)e(starting)h
(from)f(the)i(ro)q(ot)g(set,)75 1122 y(and)j(mark)o(ed.)22
b(F)l(or)15 b(this)h(algorithm,)d(the)j(ro)q(ot)g(set)g(includes)g(all)f
(data)h(in)g(the)g(stac)o(k,)f(data)h(segmen)o(t,)75 1218 y(and)d(registers.)
18 b(An)o(y)13 b(p)q(oten)o(tial)e(p)q(oin)o(ter)i(is)f(follo)o(w)o(ed)f(and)
i(the)g(ob)s(ject)g(p)q(oin)o(ted)f(to)h(is)f(mark)o(ed)f(\(details)75
1314 y(ab)q(out)19 b(ho)o(w)f(am)o(biguous)f(p)q(oin)o(ters)h(are)g(resolv)o
(ed)g(are)h(included)g(in)g([5)o(]\).)30 b(After)18 b(visiting)f(reac)o
(hable)75 1410 y(ob)s(jects,)d(the)h(sw)o(eep)g(phase)g(reclaims)d(ob)s
(jects)j(that)f(are)g(no)h(longer)f(in)h(use)g(and)g(places)f(them)g(on)h
(the)75 1506 y(appropriate)f(free)h(list.)146 1614 y(One)j(of)f(the)g
(biggest)g(di\013erences)h(b)q(et)o(w)o(een)f(an)h(explicit)e(storage)h
(managemen)o(t)d(algorithm)h(and)75 1710 y(a)j(garbage)g(collection)g
(algorithm)d(is)j(the)h(size)g(and)g(structure)f(of)g(the)h(heap.)31
b(Garbage)18 b(collection,)75 1806 y(b)q(ecause)c(it)e(visits)f(all)h(the)g
(liv)o(e)g(data,)g(is)g(a)h(time-consuming)d(op)q(eration.)18
b(The)13 b(e\016ciency)g(of)f(collection)75 1902 y(is)h(increased)g(if)g
(more)e(garbage)i(can)g(b)q(e)h(collected)f(during)g(eac)o(h)g(collection)f
(phase.)19 b(The)14 b(ob)o(vious)e(w)o(a)o(y)75 1998 y(to)18
b(allo)o(w)f(more)h(garbage)g(to)g(b)q(e)i(collected)e(is)h(to)f(w)o(ait)f
(longer)h(b)q(et)o(w)o(een)i(collection)d(phases,)j(whic)o(h)75
2094 y(results)d(in)g(more)f(data)h(ha)o(ving)g(a)g(c)o(hance)h(to)f(b)q
(ecome)g(garbage.)26 b(If)17 b(collection)g(e\016ciency)h(w)o(ere)f(the)75
2190 y(only)g(consideration,)f(this)h(line)g(of)g(reasoning)g(w)o(ould)f
(suggest)h(that)g(collections)f(should)h(tak)o(e)g(place)75
2286 y(infrequen)o(tly)l(.)36 b(Unfortunately)l(,)21 b(the)f(longer)g(one)h
(w)o(aits)e(b)q(et)o(w)o(een)i(collections,)f(the)h(more)e(address)75
2382 y(space)e(is)f(required)h(to)f(hold)g(all)g(the)g(allo)q(cated)g(and)h
(not)f(y)o(et)g(collected)h(garbage.)23 b(Th)o(us,)17 b(the)f(prime)952
2700 y(10)p eop
%%Page: 11 13
bop 75 42 a Fp(trade-o\013)11 b(in)g(collection)f(algorithm)f(design)j(is)f
(b)q(et)o(w)o(een)h(e\016ciency)g(of)f(collection)f(\(ho)o(w)h(m)o(uc)o(h)g
(garbage)75 137 y(is)k(reclaimed)e(p)q(er)j(collection\))e(and)h(program)e
(address)i(space)h(size.)146 246 y(The)j(Bo)q(ehm-W)l(eiser)g(collector)g
(seeks)h(to)f(balance)g(these)h(concerns:)30 b(one)19 b(heuristic)h(it)f
(uses)g(is)75 342 y(that)14 b(if)g(a)g(collection)f(phase)i(reclaims)e(less)h
(than)h(25\045)e(of)h(the)h(heap,)g(then)g(the)f(heap)h(is)f(expanded)i(b)o
(y)75 438 y(50\045.)27 b(Th)o(us,)18 b(in)g(these)g(collection)f(algorithms,)
e(the)j(heap)g(will)e(gro)o(w)h(un)o(til)g(eac)o(h)h(collection)f(phase)75
534 y(consisten)o(tly)g(reclaims)f(more)h(than)h(25\045)g(of)g(the)g(heap.)29
b(Of)19 b(course,)f(these)h(p)q(ercen)o(tages)f(are)g(quite)75
630 y(heuristic)f(and)h(in)f(man)o(y)f(collectors)g(are)h(tunable)g(b)o(y)h
(the)f(programmer.)23 b(The)18 b(heap)g(con\014guration)75
726 y(used)f(in)f(the)g(exp)q(erimen)o(ts)f(presen)o(ted)i(started)e(the)i
(heap)f(at)g(256)f(kilob)o(ytes)g(and)i(allo)o(w)o(ed)d(the)j(heap)75
822 y(to)e(expand)g(based)h(on)f(this)g(heuristic.)75 1028
y Fj(3)69 b(Related)22 b(W)-6 b(ork)75 1181 y Fp(There)18 b(ha)o(v)o(e)f(b)q
(een)i(sev)o(eral)e(substan)o(tial)f(e\013orts)h(to)g(compare)f(a)i(broad)f
(range)g(of)h(dynamic)e(storage)75 1277 y(managemen)o(t)11
b(algorithms,)g(but)j(none)h(of)e(the)h(existing)f(p)q(erformance)g(surv)o
(eys)h(has)g(also)f(ev)m(aluated)h(a)75 1373 y(conserv)m(ativ)o(e)h
(collection)f(algorithm.)146 1482 y(In)f(Kn)o(uth's)f(F)l(undamen)o(tal)f
(Algorithms)f(text)i([17)o(],)g(he)h(compares)e(the)h(time)f(and)i(space)f(o)
o(v)o(erhead)75 1578 y(of)k(\014rst-\014t,)g(b)q(est-\014t)h(and)f(buddy)h
(system)e(metho)q(ds.)23 b(The)16 b(p)q(erformance)g(ev)m(aluation)f(is)h
(based)h(on)f(a)75 1674 y(sim)o(ulation)10 b(where)k(the)g(ob)s(ject)e(sizes)
i(and)f(ob)s(ject)g(lifetimes)e(w)o(ere)i(calculated)g(using)g(probabilit)o
(y)f(dis-)75 1770 y(tributions.)17 b(Kn)o(uth)11 b(concludes)g(that)f(the)g
(\014rst-\014t)h(metho)q(d,)f(with)g(optimizations,)e(w)o(orks)h
(surprisingly)75 1866 y(w)o(ell)h(and)i(in)f(all)f(cases)i(b)q(etter)f(than)g
(the)h(b)q(est-\014t)f(metho)q(d.)18 b(The)12 b(buddy)g(system)e(algorithm)e
(he)k(de\014nes)75 1962 y(also)k(do)q(es)i(w)o(ell)e(in)i(comparison)d(with)i
(the)g(other)g(metho)q(ds.)26 b(Kn)o(uth)18 b(also)e(compares)g(the)i(exp)q
(ected)75 2058 y(o)o(v)o(erhead)13 b(of)g(a)g(mark-and-sw)o(eep)f(algorithm,)
e(and)j(concludes)h(that)f(under)h(the)f(b)q(est)g(circumstances,)75
2154 y(garbage)h(collection)f(can)i(b)q(e)h(comp)q(etitiv)o(e)c(with)i(the)h
(other)f(algorithms)e(\(an)i(observ)m(ation)g(con\014rmed)75
2250 y(here\).)146 2358 y(A)i(more)g(recen)o(t)h(comparison)e(of)h(explicit)g
(managemen)o(t)e(algorithms)g(w)o(as)i(conducted)i(b)o(y)f(Korn)75
2454 y(and)i(V)l(o)g([18)o(].)29 b(They)19 b(implemen)o(ted)e(and)i(tested)f
(11)g(di\013eren)o(t)g(storage)g(managemen)o(t)d(algorithms,)75
2550 y(including)e(a)h(doubly-link)o(ed)f(\014rst-\014t)g(algorithm,)e(the)i
(BSD)h(mallo)q(c)d(and)j(the)g(Stephenson)g(Cartesian)952 2700
y(11)p eop
%%Page: 12 14
bop 75 42 a Fp(tree)15 b(algorithm.)i(Their)d(results)h(indicate)f(that)g
(the)h(BSD)h(buddy)g(algorithm)c(consisten)o(tly)h(used)j(the)75
137 y(most)e(space)i(and)g(the)g(least)f(time)f(of)h(all)g(the)h(algorithms)d
(compared.)21 b(The)16 b(Stephenson)g(algorithm,)75 233 y(while)e(approac)o
(hing)g(the)h(b)q(est-\014t)h(algorithms)11 b(in)k(space)g(w)o(asted,)f(also)
g(had)h(an)g(execution)f(time)g(that)75 329 y(w)o(as)g(higher)h(than)g(man)o
(y)f(of)h(the)g(other)g(algorithms.)146 438 y(Bozman)20 b(et)h(al.)38
b(measured)21 b(the)g(ob)s(ject)g(allo)q(cation)f(b)q(eha)o(vior)h(of)g(the)g
(op)q(erating)g(system)f(on)75 534 y(t)o(w)o(o)g(large)g(IBM)h(mainframes)d
(with)i(h)o(undreds)i(of)f(users)g([7)o(].)37 b(In)21 b(their)g(pap)q(er,)h
(they)g(compare)d(a)75 630 y(v)m(ariet)o(y)14 b(of)h(algorithms,)d(including)
j(sev)o(eral)f(v)m(ariations)f(of)i(buddy)h(systems,)d(\014rst-\014t,)i
(cartesian)f(tree)75 726 y(algorithms,)i(and)j(subp)q(o)q(ol)f(cac)o(hing)h
(algorithms)o(.)27 b(Subp)q(o)q(ol)19 b(algorithms)d(are)i(m)o(uc)o(h)f(lik)o
(e)h(Haertel's)75 822 y(h)o(ybrid)k(algorithm|p)q(o)q(ols)d(of)i(sp)q
(eci\014c)i(ob)s(ject)e(sizes)h(are)g(main)o(tained,)f(and)h(requests)g(for)f
(larger)75 918 y(ob)s(jects)d(are)h(handled)g(as)g(a)f(free-list)g(searc)o
(h.)31 b(Bozman)18 b(et)g(al.)31 b(in)o(v)o(estigate)17 b(a)h(v)m(ariet)o(y)g
(of)h(subp)q(o)q(ol)75 1014 y(algorithms)e(and)i(iden)o(tify)g(a)h(t)o(w)o
(o-lev)o(el)d(subp)q(o)q(ol)j(algorithm)d(that)i(is)g(most)f(appropriate)g
(for)h(their)75 1110 y(m)o(ulti-user)13 b(op)q(erating)i(systems)e(en)o
(vironmen)o(t.)146 1218 y(The)j(Bozman)f(pap)q(er)i(con)o(tains)f(complete)f
(information)e(ab)q(out)k(the)f(observ)o(ed)g(in)o(terarriv)m(al)f(and)75
1314 y(holding)h(times)e(of)i(ob)s(jects)g(in)g(the)h(systems)e(measured.)22
b(Empirical)14 b(information)g(from)g(actual)i(sys-)75 1410
y(tems)e(has)h(since)g(b)q(een)h(used)g(b)o(y)f(other)f(researc)o(hers)h(to)g
(in)o(v)o(estigate)e(and)i(compare)f(the)h(p)q(erformance)75
1506 y(of)i(their)f(algorithms.)23 b(In)18 b(particular,)d(Bren)o(t)i(uses)h
(their)e(data)h(to)f(compare)g(the)h(p)q(erformance)g(of)f(a)75
1602 y(\014rst-\014t,)h(balanced)h(binary)f(tree)g(algorithm)e(with)i(Kn)o
(uth's)g(\014rst-\014t)g(b)q(oundary)h(tag)f(algorithm)d([8],)75
1698 y(and)j(Oldeho)q(eft)f(and)h(Allan)f(also)f(use)i(empirical)d(data)i(to)
g(study)g(the)h(p)q(erformance)e(of)h(an)h(adaptiv)o(e)75 1794
y(enhancemen)o(t)e(to)g(standard)f(storage)g(managemen)o(t)f(algorithms)f
([22)o(].)146 1902 y(The)j(researc)o(h)h(presen)o(ted)g(in)f(this)g(pap)q(er)
h(di\013ers)f(substan)o(tially)e(from)h(the)i(related)f(w)o(ork)f(in)i(sev-)
75 1998 y(eral)g(w)o(a)o(ys.)21 b(First,)15 b(none)i(of)e(the)i(pap)q(ers)f
(discuss)h(or)e(compare)g(the)h(p)q(erformance)g(of)g(a)f(conserv)m(ativ)o(e)
75 2094 y(garbage)k(collection)g(algorithm)f(with)h(explicit)h(storage)f
(managemen)o(t)e(algorithms.)32 b(Second,)22 b(lik)o(e)75 2190
y(the)c(Bozman)f(study)l(,)h(this)g(pap)q(er)g(measures)f(the)h(p)q
(erformance)f(of)g(the)h(algorithms)d(in)j(actual)f(pro-)75
2286 y(grams;)c(ho)o(w)o(ev)o(er,)g(this)i(w)o(ork)f(di\013ers)g(from)f
(Bozman's)h(in)g(that)h(w)o(e)f(in)o(v)o(estigate)f(the)i(p)q(erformance)f
(of)75 2382 y(individual)h(programs)f(and)i(not)g(m)o(ulti-user)e(op)q
(erating)i(systems.)21 b(Third,)15 b(this)h(pap)q(er)g(presen)o(ts)g(not)75
2478 y(only)d(the)h(gross)e(p)q(erformance)h(measures)f(of)h(execution)h
(time)d(and)j(memory)d(used,)j(but)g(also)e(presen)o(ts)952
2700 y(12)p eop
%%Page: 13 15
bop 75 42 a Fp(detailed)13 b(information)e(ab)q(out)i(the)h(reference)g(lo)q
(calit)o(y)e(of)h(di\013eren)o(t)g(algorithms.)j(Finally)l(,)c(this)h(pap)q
(er)75 137 y(considers)k(the)f(p)q(erformance)g(e\013ect)h(of)f
(programmer-wri)o(tten,)e(domain-sp)q(eci\014c)i(enhancemen)o(ts)h(to)75
233 y(general-purp)q(ose)f(allo)q(cation)d(routines.)75 441
y Fj(4)69 b(Metho)r(ds)75 595 y Fp(I)15 b(ev)m(aluate)g(the)g(e\013ect)f(of)h
(the)f(storage)g(managemen)o(t)e(algorithms)g(on)i(the)h(p)q(erformance)f(of)
h(six)f(large)75 691 y(C)e(programs.)k(While)c(this)f(approac)o(h)h(has)g(b)q
(een)h(tak)o(en)f(in)g(coun)o(tless)f(p)q(erformance)g(studies)h(including)75
787 y(the)i(empirical)d(studies)j(men)o(tioned)e(ab)q(o)o(v)o(e,)i(the)f(use)
i(of)e(actual)g(programs)e(to)i(compare)g(p)q(erformance)75
883 y(has)i(the)g(dra)o(wbac)o(k)f(that)g(only)h(a)f(small)f(sample)g(of)i
(the)g(actual)f(space)h(of)g(programs)e(is)h(in)o(v)o(estigated.)75
979 y(Ideally)l(,)f(h)o(undreds)h(of)e(suc)o(h)i(programs)c(w)o(ould)j(b)q(e)
g(measured)f(in)h(suc)o(h)g(a)g(study)l(,)g(but)g(suc)o(h)h(a)e(complete)75
1075 y(sampling)i(of)h(the)g(space)h(of)f(programs)f(is)h(impractical.)j
(Another)d(approac)o(h)g(tak)o(en)h(in)f(related)g(w)o(ork)75
1171 y(is)g(to)g(compare)f(p)q(erformance)h(based)g(on)h(syn)o(thetic)f(b)q
(enc)o(hmarks)g(that)g(use)g(standard)g(distributions)75 1267
y(of)21 b(ob)s(ject)h(lifespan,)g(size,)h(and)f(birth)g(rate.)39
b(Syn)o(thetic)22 b(b)q(enc)o(hmarks)f(ha)o(v)o(e)h(the)g(dra)o(wbac)o(k)f
(that)75 1363 y(they)f(ma)o(y)d(b)q(e)k(completely)c(unrepresen)o(tativ)o(e)i
(of)g(actual)g(program)f(execution.)32 b(My)20 b(view)f(is)g(that)75
1459 y(algorithms)12 b(are)j(mainly)e(of)i(in)o(terest)f(if)h(they)g(impro)o
(v)o(e)e(the)j(p)q(erformance)e(of)h(programs)e(that)h(p)q(eople)75
1555 y(actually)f(use.)21 b(As)14 b(suc)o(h,)h(I)g(ha)o(v)o(e)f(collected)h
(a)f(group)g(of)h(programs)d(that)i(are)h(in)f(widespread)h(use)g(and)75
1651 y(that)f(allo)q(cate)g(large)h(amoun)o(ts)e(of)i(dynamic)f(memory)l(.)
146 1759 y(The)19 b(programs)e(considered,)k(presen)o(ted)f(in)f(T)l(able)g
(2,)h(are)f(dra)o(wn)g(from)f(di\013eren)o(t)g(application)75
1855 y(areas)10 b(including)g(language)g(in)o(terpreters,)h(n)o(um)o(b)q(er)f
(factoring,)f(logic)h(optimization,)e(and)j(VLSI)h(la)o(y)o(out)75
1951 y(to)q(ols.)34 b(The)21 b(table)f(sho)o(ws)g(the)g(fraction)g(of)g(time)
e(eac)o(h)j(program)d(sp)q(en)o(t)j(doing)f(dynamic)f(storage)75
2047 y(managemen)o(t,)e(with)h(n)o(um)o(b)q(ers)h(ranging)f(from)g
(23{38\045.)30 b(In)20 b(general,)f(the)g(programs)e(sp)q(en)o(t)i(more)75
2143 y(time)d(freeing)i(ob)s(jects)f(than)h(allo)q(cating)e(them,)h(except)i
(in)f(the)g(case)g(of)f(y)o(acr,)h(where)g(the)g(program)75
2239 y(seldom)e(called)i(free.)28 b(Y)l(acr)18 b(is)f(a)h(sp)q(ecial)f(case)h
(among)e(these)i(programs)e(b)q(ecause,)j(in)f(this)f(v)o(ersion,)75
2335 y(the)e(programmer)d(made)i(no)i(attempt)d(to)h(deallo)q(cate)h(dead)g
(ob)s(jects.)146 2443 y(In)23 b(four)f(other)f(programs)g(\(cfrac,)i(ga)o
(wk,)g(ghostscript,)f(and)h(p)q(erl\),)g(the)g(programm)o(er)d(wrote)75
2539 y(domain-sp)q(eci\014c)g(allo)q(cation)f(routines)h(for)g(the)h(most)e
(common)g(ob)s(jects)h(t)o(yp)q(es)g(allo)q(cated)g(b)o(y)h(the)952
2700 y(13)p eop
%%Page: 14 16
bop 75 63 1818 2 v 74 232 2 170 v 100 103 a Fp(cfrac)p 342
232 V 173 w(Cfrac,)17 b(v)o(ersion)f(2.00,)h(is)g(a)g(program)f(that)h
(factors)f(large)h(in)o(tegers)f(using)i(the)f(con-)368 159
y(tin)o(ued)e(fraction)f(metho)q(d.)19 b(The)c(input)h(is)e(a)h(33-digit)f(n)
o(um)o(b)q(er)h(that)f(is)h(the)g(pro)q(duct)368 216 y(of)f(t)o(w)o(o)g
(primes.)p 1892 232 V 75 234 1818 2 v 74 347 2 113 v 100 274
a(espresso)p 342 347 V 108 w(Espresso,)k(v)o(ersion)g(2.3,)g(is)h(a)f(logic)f
(optimization)f(program.)28 b(The)19 b(input)g(\014le)f(w)o(as)368
330 y(one)d(of)g(the)g(larger)f(example)g(inputs)h(pro)o(vided)g(with)g(the)g
(release)g(co)q(de.)p 1892 347 V 75 349 1818 2 v 74 518 2 170
v 100 388 a(ga)o(wk)p 342 518 V 166 w(Gn)o(u)10 b(Awk,)i(v)o(ersion)e(2.11,)g
(is)h(a)f(publicly)h(a)o(v)m(ailable)f(in)o(terpreter)g(for)h(the)g(A)-5
b(WK)11 b(rep)q(ort)368 445 y(and)i(extraction)f(language.)19
b(The)13 b(input)h(script)e(formats)f(the)j(w)o(ords)e(in)i(a)f(dictionary)
368 501 y(in)o(to)h(\014lled)h(paragraphs.)p 1892 518 V 75
520 1818 2 v 74 858 2 339 v 100 559 a(ghostscript)p 342 858
V 49 w(GhostScript,)c(v)o(ersion)g(2.1,)g(is)h(a)g(publicly)f(a)o(v)m
(ailable)g(in)o(terpreter)g(for)h(the)g(P)o(ostScript)368 616
y(page-description)i(language.)19 b(The)14 b(input)h(used)g(is)f(a)g(large)g
(system)f(do)q(cumen)o(tation)368 672 y(man)o(ual.)j(F)l(or)11
b(this)f(study)l(,)i(GhostScript)f(did)g(not)g(run)g(as)g(an)g(in)o(teractiv)
o(e)f(application)368 729 y(as)15 b(it)h(is)g(often)g(used,)g(but)h(instead)f
(w)o(as)f(executed)i(with)f(the)g(NODISPLA)l(Y)i(option)368
785 y(that)11 b(simply)f(forces)i(the)g(in)o(terpretation)e(of)i(the)g(P)o
(ostscript)f(without)g(displa)o(ying)f(the)368 842 y(results.)p
1892 858 V 75 860 1818 2 v 74 1029 2 170 v 100 900 a(p)q(erl)p
342 1029 V 191 w(P)o(erl)19 b(4.10,)h(is)f(a)h(publicly)g(a)o(v)m(ailable)f
(rep)q(ort)g(extraction)g(and)i(prin)o(ting)e(language,)368
956 y(commonly)12 b(used)k(on)f(UNIX)i(systems.)i(The)c(input)h(script)e
(formats)f(the)j(w)o(ords)f(in)g(a)368 1013 y(dictionary)f(in)o(to)g
(\014lled)h(paragraphs.)p 1892 1029 V 75 1031 1818 2 v 74 1200
2 170 v 100 1071 a(y)o(acr)p 342 1200 V 184 w(Y)l(A)o(CR)j(\(Y)l(et)g
(Another)g(Channel)g(Router\),)h(v)o(ersion)e(2.1,)h(is)f(a)h(c)o(hannel)h
(router)e(for)368 1127 y(prin)o(ted)f(circuit)f(b)q(oards.)23
b(The)17 b(input)f(\014le)g(w)o(as)g(one)g(of)g(the)g(larger)f(example)h
(inputs)368 1184 y(pro)o(vided)f(with)f(the)h(release)g(co)q(de.)p
1892 1200 V 75 1202 1818 2 v 444 1279 a Fe(T)l(able)i(1:)40
b Fk(General)15 b(Information)f(ab)q(out)f(the)i(T)m(est)f(Programs)p
96 1495 1759 2 v 95 1721 2 226 v 121 1591 a Fp(Program)p 565
1721 V 590 1535 a(Lines)i(of)590 1591 y(co)q(de)p 779 1721
V 805 1535 a(Ob)s(jects)805 1591 y(allo-)805 1647 y(cated)805
1704 y(\(x10)893 1687 y Ff(6)912 1704 y Fp(\))p 994 1721 V
1020 1535 a(Bytes)1020 1591 y(allo-)1020 1647 y(cated)1020
1704 y(\(x10)1108 1687 y Ff(6)1127 1704 y Fp(\))p 1209 1721
V 1235 1535 a(Exec.)1235 1591 y(time)1235 1647 y(\(seconds\))p
1424 1721 V 1450 1535 a(\045)f(time)1450 1591 y(in)1450 1647
y(mallo)q(c)p 1639 1721 V 1639 1721 V 1664 1535 a(\045)g(time)1664
1591 y(in)g(free)p 1854 1721 V 96 1722 1759 2 v 95 1779 2 57
v 121 1762 a(cfrac)p 565 1779 V 436 w(6,000)p 779 1779 V 132
w(3.81)p 994 1779 V 133 w(65.0)p 1209 1779 V 146 w(216)p 1424
1779 V 133 w(10.9)p 1639 1779 V 133 w(14.4)p 1854 1779 V 96
1781 1759 2 v 95 1837 2 57 v 121 1820 a(espresso)p 565 1837
V 348 w(15,500)p 779 1837 V 132 w(1.66)p 994 1837 V 146 w(105)p
1209 1837 V 146 w(237)p 1424 1837 V 156 w(8.0)p 1639 1837 V
133 w(16.4)p 1854 1837 V 96 1839 1759 2 v 95 1895 2 57 v 121
1878 a(ga)o(wk)p 565 1895 V 429 w(8,500)p 779 1895 V 132 w(4.47)p
994 1895 V 146 w(170)p 1209 1895 V 146 w(144)p 1424 1895 V
133 w(12.0)p 1639 1895 V 133 w(26.7)p 1854 1895 V 96 1897 1759
2 v 95 1953 2 57 v 121 1936 a(ghostscript)p 565 1953 V 289
w(29,500)p 779 1953 V 132 w(0.92)p 994 1953 V 169 w(89)p 1209
1953 V 146 w(147)p 1424 1953 V 156 w(9.7)p 1639 1953 V 133
w(20.6)p 1854 1953 V 96 1955 1759 2 v 95 2011 2 57 v 121 1994
a(p)q(erl)p 565 2011 V 431 w(34,500)p 779 2011 V 132 w(0.36)p
994 2011 V 156 w(8.3)p 1209 2011 V 146 w(174)p 1424 2011 V
156 w(8.7)p 1639 2011 V 133 w(14.7)p 1854 2011 V 96 2013 1759
2 v 95 2070 2 57 v 121 2053 a(y)o(acr)p 565 2070 V 447 w(9,000)p
779 2070 V 132 w(0.88)p 994 2070 V 133 w(28.8)p 1209 2070 V
168 w(92)p 1424 2070 V 134 w(28.0)p 1639 2070 V 155 w(0.1)p
1854 2070 V 96 2071 1759 2 v 75 2148 a Fe(T)l(able)f(2:)37
b Fk(T)m(est)12 b(Program)e(P)o(erformance)i(Information.)17
b(Execution)c(times)f(w)o(ere)g(measured)g(on)f(a)g(Solb)q(ourne)75
2205 y(S4000)h(Desktop)h(W)m(orkstation)g(computer)h(\(SP)m(AR)o(C)e(arc)o
(hitecture\))k(with)e(13)e(SPECMarks)i(p)q(erformance)g(and)75
2261 y(16)9 b(megab)o(ytes)i(of)e(memory)m(.)16 b(Execution)c(times)f(pro)o
(vided)g(are)f(for)g(the)g(SunOS)h(implemen)o(tation)g(of)f(mallo)q(c/free)75
2318 y(including)21 b(programmer)e(enhancemen)o(ts,)j(whic)o(h)f(is)f(used)g
(as)f(a)g(base)h(case)h(throughout)e(this)h(pap)q(er.)36 b(The)75
2374 y(fraction)17 b(of)f(time)h(sp)q(en)o(t)h(in)f(mallo)q(c/free)h(w)o(as)f
(measured)g(with)h(the)f(SunOS)g(mallo)q(c/free)h(and)e(programmer)75
2431 y(allo)q(cator)f(enhancemen)o(ts)h(remo)o(v)o(ed.)i(The)c(fraction)g(of)
g(time)g(in)h(free)f(includes)j(time)d(sp)q(en)o(t)h(in)g(reallo)q(c.)952
2700 y Fp(14)p eop
%%Page: 15 17
bop 75 42 a Fp(program.)17 b(I)e(call)f(programs)e(that)h(use)i(sp)q(ecial)f
(routines)g(to)g(allo)q(cate)f(certain)h(ob)s(ject)f(t)o(yp)q(es)i(the)f
(\\op-)75 137 y(timized")e(v)o(ersions)h(of)h(the)g(programs.)j(In)e(p)q
(erforming)d(this)i(researc)o(h,)f(eac)o(h)h(program)e(w)o(as)i(mo)q
(di\014ed)75 233 y(so)e(that)g(it)g(no)h(longer)f(made)f(use)i(of)f(these)h
(sp)q(ecial-purp)q(ose)h(routines)e(but)g(instead)h(alw)o(a)o(ys)e(called)h
(the)75 329 y(general-purp)q(ose)18 b(allo)q(cator,)d(and)i(I)h(call)e(this)h
(form)e(of)i(the)g(program)e(the)j(\\unoptimized")d(v)o(ersion.)75
425 y(The)h(unoptimized)f(programs)f(w)o(ere)i(also)f(mo)q(di\014ed)g(so)g
(that)h(calls)f(to)g(mallo)q(c)f(in)o(v)o(ok)o(ed)h(the)h(Bo)q(ehm-)75
521 y(W)l(eiser)g(conserv)m(ativ)o(e)h(garbage)e(collection)h(implemen)o
(tati)o(on)e(and)j(calls)f(to)g(free)h(b)q(ecame)f(n)o(ull)g(calls,)75
617 y(resulting)e(in)h(the)h(garbage-collected)e(v)o(ersion)g(of)h(the)g
(programs.)146 726 y(It)i(is)g(imp)q(ortan)o(t)e(to)i(note)g(that)g(the)g
(programs)f(needed)j(to)d(b)q(e)i(c)o(hanged)g(v)o(ery)f(little)f(to)h(use)h
(the)75 822 y(Bo)q(ehm-W)l(eiser)d(collector)g(instead)h(of)f(mallo)q
(c/free,)f(for)i(whic)o(h)f(they)i(w)o(ere)e(written.)22 b(The)16
b(program)75 918 y(requiring)h(the)i(most)d(complex)h(con)o(v)o(ersion)g(to)g
(garbage)h(collection)f(w)o(as)g(cfrac,)h(in)g(whic)o(h)g(the)g(pro-)75
1014 y(grammer)c(had)k(implemen)o(ted)d(his)j(o)o(wn)f(v)o(ersion)f(of)h
(reference)i(coun)o(ting.)26 b(The)17 b(reference)i(coun)o(ting)75
1110 y(co)q(de)f(b)q(ecomes)g(unnecessary)g(when)h(garbage)e(collection)f(is)
h(used,)i(and)f(the)g(remo)o(v)m(al)e(of)h(that)g(co)q(de)75
1206 y(from)d(cfrac)h(required)h(less)f(than)h(30)f(min)o(utes.)k(The)d(ease)
f(with)g(whic)o(h)h(programs)d(can)j(b)q(e)g(con)o(v)o(erted)75
1302 y(to)h(use)g(garbage)f(collection)g(suggests)h(that)f(programmers)e
(should)j(at)g(least)f(exp)q(erimen)o(t)g(with)h(this)75 1398
y(approac)o(h)e(since)g(the)g(exp)q(erimen)o(t)g(is)f(v)o(ery)h(easy)g(to)g
(p)q(erform.)146 1506 y(T)l(o)h(collect)f(the)i(data)e(for)h(this)g(pap)q
(er,)g(eac)o(h)h(program)d(w)o(as)i(executed)h(in)f(optimized)f(and)h(unop-)
75 1602 y(timized)f(form)f(with)h(eac)o(h)h(of)g(the)g(four)g(di\013eren)o(t)
f(explicit)h(storage)e(managemen)o(t)g(implemen)o(tat)o(ions)75
1698 y(and)j(also)f(with)g(garbage)g(collection.)23 b(T)l(o)17
b(assure)g(rep)q(eatabilit)o(y)l(,)e(\014v)o(e)i(executions)g(of)f(eac)o(h)h
(program)75 1794 y(w)o(ere)h(p)q(erformed,)g(the)h(results)f(a)o(v)o(eraged,)
g(and)g(a)g(high)h(consistency)f(w)o(as)g(observ)o(ed)g(\(the)g(range)g(of)75
1890 y(v)m(alues)d(observ)o(ed)h(w)o(as)e(less)h(that)f(5\045)h(of)g(the)g
(mean)f(in)h(all)f(cases\).)146 1998 y(In)k(addition)f(to)h(executing)g(the)g
(programs)d(and)k(observing)e(the)h(CPU)g(o)o(v)o(erhead)f(and)i(memory)75
2094 y(usage,)13 b(the)f(programs)f(w)o(ere)h(instrumen)o(ted)f(with)h(an)h
(address-trace)f(extraction)f(to)q(ol.)18 b(The)13 b(to)q(ol,)f(AE)75
2190 y(\(Abstract)k(Execution\))g([19)o(],)h(extracts)f(all)f(memory)g
(references)i(the)g(programs)e(p)q(erform,)g(allo)o(wing)75
2286 y(the)j(memory)e(system)g(p)q(erformance)i(of)f(the)i(programs)d(\(and)i
(storage)e(managemen)o(t)g(implemen)o(ta-)75 2382 y(tions\))j(to)g(b)q(e)i
(studied)g(using)e(trace-driv)o(en)h(sim)o(ulation.)32 b(Among)19
b(other)g(metrics,)h(this)f(approac)o(h)952 2700 y(15)p eop
%%Page: 16 18
bop 117 51 1717 2 v 116 221 2 170 v 164 91 a Fp(Program)p 383
221 V 70 w(SunOS)409 147 y(\(seconds\))15 b(/)409 204 y(SunOS=1)p
673 221 V 699 91 a(B-W)g(GC)699 147 y(\(seconds\))g(/)699 204
y(SunOS=1)p 963 221 V 989 91 a(GNU)989 147 y(\(seconds\))g(/)989
204 y(SunOS=1)p 1253 221 V 1279 91 a(Kn)o(uth)1279 147 y(\(seconds\))g(/)1279
204 y(SunOS=1)p 1543 221 V 1568 91 a(BSD)1568 147 y(\(seconds\))g(/)1568
204 y(SunOS=1)p 1833 221 V 117 222 1717 2 v 116 279 2 57 v
142 262 a(cfrac)p 383 279 V 190 w(216.2/)e(1.00)p 673 279 V
67 w(175.9/)g(0.81)p 963 279 V 67 w(217.2/)g(1.00)p 1253 279
V 66 w(225.3/)h(1.04)p 1543 279 V 66 w(221.6/)g(1.03)p 1833
279 V 117 281 1717 2 v 116 337 2 57 v 142 320 a(espresso)p
383 337 V 125 w(236.9/)f(1.00)p 673 337 V 67 w(165.9/)g(0.70)p
963 337 V 67 w(206.9/)g(0.87)p 1253 337 V 66 w(170.4/)h(0.72)p
1543 337 V 66 w(158.8/)g(0.67)p 1833 337 V 117 339 1717 2 v
116 395 2 57 v 142 378 a(ga)o(wk)p 383 395 V 183 w(144.0/)f(1.00)p
673 395 V 67 w(156.6/)g(1.09)p 963 395 V 67 w(147.8/)g(1.03)p
1253 395 V 66 w(117.8/)h(0.82)p 1543 395 V 66 w(105.2/)g(0.73)p
1833 395 V 117 397 1717 2 v 116 453 2 57 v 142 436 a(ghostscript)p
383 453 V 66 w(147.1/)f(1.00)p 673 453 V 67 w(187.3/)g(1.27)p
963 453 V 67 w(176.1/)g(1.20)p 1253 453 V 66 w(178.3/)h(1.21)p
1543 453 V 66 w(187.8/)g(1.28)p 1833 453 V 117 455 1717 2 v
116 511 2 57 v 142 494 a(p)q(erl)p 383 511 V 208 w(173.7/)f(1.00)p
673 511 V 67 w(165.6/)g(0.95)p 963 511 V 67 w(149.2/)g(0.86)p
1253 511 V 66 w(145.1/)h(0.84)p 1543 511 V 66 w(137.7/)g(0.79)p
1833 511 V 117 513 1717 2 v 116 570 2 57 v 142 553 a(y)o(acr)p
383 570 V 224 w(91.6/)f(1.00)p 673 570 V 89 w(91.2/)h(1.00)p
963 570 V 89 w(99.2/)g(1.08)p 1253 570 V 89 w(78.5/)g(0.86)p
1543 570 V 89 w(85.0/)g(0.93)p 1833 570 V 117 571 1717 2 v
75 648 a Fe(T)l(able)k(3:)41 b Fk(Absolute)16 b(and)e(relativ)o(e)i(CPU)f(p)q
(erformance)g(of)f(\014v)o(e)g(di\013eren)o(t)i(dynamic)f(storage)g
(managemen)o(t)75 705 y(algorithms)k(for)f(the)g(six)h(programs)f(measured.)
32 b(F)m(or)18 b(eac)o(h)g(measuremen)o(t,)i(the)f(absolute)g(time)g(\(user)g
(time)75 761 y(plus)e(system)g(time\))g(and)f(the)g(time)h(relativ)o(e)h(to)e
(the)h(SunOS)f(implemen)o(tation)i(is)f(giv)o(en)f(\(smaller)i(is)f
(faster\).)75 818 y(Execution)22 b(times)f(w)o(ere)g(measured)g(on)e(a)h
(Solb)q(ourne)h(S4000)e(Desktop)i(W)m(orkstation)f(computer)g(\(SP)m(AR)o(C)
75 874 y(arc)o(hitecture\))d(with)d(13)g(SPECMarks)g(p)q(erformance)h(and)f
(16)f(megab)o(ytes)h(of)g(memory)m(.)75 1059 y Fp(allo)o(ws)g(me)h(to)h
(collect)f(information)e(ab)q(out)j(the)g(cac)o(he)h(miss)d(rate)h(and)i
(virtual)d(memory)g(page)i(fault)75 1155 y(rate)f(for)f(all)g(cac)o(he)i(and)
f(memory)e(sizes.)75 1363 y Fj(5)69 b(Results)75 1516 y Fp(In)22
b(this)e(section,)i(I)g(consider)f(the)g(relativ)o(e)e(p)q(erformance)i(of)f
(explicit)h(storage)e(managemen)o(t)g(and)75 1612 y(conserv)m(ativ)o(e)d
(garbage)h(collection;)f(I)h(measure)f(the)h(e\013ect)g(of)f(domain-sp)q
(eci\014c)h(allo)q(cator)e(enhance-)75 1708 y(men)o(ts)h(on)h(program)e(p)q
(erformance;)i(and)g(I)h(in)o(v)o(estigate)d(the)j(lo)q(calit)o(y)d(of)i
(reference)h(of)e(the)i(di\013eren)o(t)75 1804 y(approac)o(hes)d(to)g
(storage)e(managemen)o(t.)75 1979 y Fg(5.1)56 b(Explicit)19
b(Storage)g(Managemen)n(t)f(and)h(Conserv)m(ativ)n(e)g(Garbage)g(Collection)
75 2117 y Fp(Figure)13 b(1)g(\(T)l(able)g(3\))f(sho)o(ws)h(the)h(CPU)f(p)q
(erformance)f(of)h(the)h(four)f(explicit)f(managemen)o(t)f(algorithms)75
2213 y(and)k(the)g(conserv)m(ativ)o(e)g(collection)f(algorithm)d(in)k(eac)o
(h)g(of)g(the)g(six)f(test)h(programs.)i(F)l(rom)d(the)h(\014gure)75
2309 y(w)o(e)g(see)h(that)f(the)h(CPU)g(p)q(erformance)f(of)g(the)h
(algorithms)c(v)m(aries)k(widely)l(.)21 b(The)16 b(\014gure)g(clearly)f
(illus-)75 2405 y(trates)g(that)g(the)h(CPU)g(p)q(erformance)f(of)h(the)g
(conserv)m(ativ)o(e)g(garbage)f(collection)g(algorithm)e(is)i(often)75
2501 y(comparable)c(and)i(sometim)o(es)d(b)q(etter)j(than)f(the)h(p)q
(erformance)e(of)h(the)h(explicit)e(storage)h(managemen)o(t)952
2700 y(16)p eop
%%Page: 17 19
bop 0 622 a
 30785863 18945146 0 0 35456368 22168453 startTexFig
0 622 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/cpu-base.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(Sun OS) 7506 4558 2 just-string
(B-W GC (256)) 7506 4206 2 just-string
(GNU) 7506 3854 2 just-string
(Knuth) 7506 3502 2 just-string
(BSD) 7506 3150 2 just-string
80 setlinewidth
0.0 setgray
newpath
  7506 4590 moveto
  8826 4590 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  7506 4238 moveto
  8826 4238 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  7506 3886 moveto
  8826 3886 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  7506 3534 moveto
  8826 3534 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  7506 3182 moveto
  8826 3182 lineto
stroke
0.0 setgray
(CPU time (seconds)) 150 5010 2 just-string
(Program) 8826 500 5 just-string
(0) 920 685 5 just-string
(50) 920 1464 5 just-string
(100) 920 2243 5 just-string
(150) 920 3022 5 just-string
(200) 920 3801 5 just-string
(cfrac) 1758 150 7 just-string
(espresso) 2740 150 7 just-string
(gawk) 3722 150 7 just-string
(ghostscript) 4704 150 7 just-string
(perl) 5686 150 7 just-string
(yacr) 6668 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 685 moveto
  1220 685 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  7206 685 moveto
  7356 685 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1464 moveto
  1220 1464 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 1464 moveto
  7356 1464 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2243 moveto
  1220 2243 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 2243 moveto
  7356 2243 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3022 moveto
  1220 3022 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 3022 moveto
  7356 3022 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3801 moveto
  1220 3801 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 3801 moveto
  7356 3801 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1758 4560 moveto
  1758 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1758 650 moveto
  1758 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2740 4560 moveto
  2740 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2740 650 moveto
  2740 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3722 4560 moveto
  3722 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3722 650 moveto
  3722 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4704 4560 moveto
  4704 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4704 650 moveto
  4704 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5686 4560 moveto
  5686 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5686 650 moveto
  5686 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6668 4560 moveto
  6668 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6668 650 moveto
  6668 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4560 moveto
  1070 500 lineto
  7356 500 lineto
  7356 4560 lineto
  1070 4560 lineto
stroke
0.0 setgray
118 setlinewidth
0.0 setgray
newpath
  1474 685 moveto
  1474 4053 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2455 685 moveto
  2455 4375 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3437 685 moveto
  3437 2928 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  4419 685 moveto
  4419 2976 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5401 685 moveto
  5401 3391 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  6383 685 moveto
  6383 2112 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1616 685 moveto
  1616 3425 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2598 685 moveto
  2598 3269 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  3580 685 moveto
  3580 3124 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4562 685 moveto
  4562 3603 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5543 685 moveto
  5543 3265 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  6525 685 moveto
  6525 2105 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  1758 685 moveto
  1758 4069 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  2740 685 moveto
  2740 3908 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  3722 685 moveto
  3722 2987 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  4704 685 moveto
  4704 3428 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  5686 685 moveto
  5686 3009 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  6668 685 moveto
  6668 2230 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  1901 685 moveto
  1901 4195 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  2883 685 moveto
  2883 3339 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  3864 685 moveto
  3864 2520 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  4846 685 moveto
  4846 3462 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  5828 685 moveto
  5828 2945 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  6810 685 moveto
  6810 1908 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  2043 685 moveto
  2043 4137 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  3025 685 moveto
  3025 3159 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  4007 685 moveto
  4007 2324 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  4989 685 moveto
  4989 3610 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  5971 685 moveto
  5971 2830 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  6952 685 moveto
  6952 2009 lineto
stroke
0.0 setgray
%%EndDocument
 0 622 a
 endTexFig
169 1920 a Fe(Figure)16 b(1:)40 b Fk(CPU)14 b(Ov)o(erhead)h(of)e(Explicit)k
(and)c(Automatic)i(F)m(orms)e(of)h(Storage)g(Managemen)o(t.)952
2700 y Fp(17)p eop
%%Page: 18 20
bop 75 42 a Fp(algorithms.)17 b(In)f(cfrac,)f(the)g(conserv)m(ativ)o(e)g
(collector)f(did)h(b)q(etter)g(than)g(all)g(explicit)f(managemen)o(t)e(al-)75
137 y(gorithms)h(b)o(y)j(ab)q(out)f(20\045)g(b)q(ecause)h(the)g(reference)g
(coun)o(ting)f(co)q(de,)h(necessary)g(to)e(p)q(erform)h(explicit)75
233 y(deallo)q(cation)k(in)g(the)h(program,)f(w)o(as)g(disabled.)34
b(The)20 b(\014gure)h(also)e(sho)o(ws)g(that)g(the)h(CPU)g(p)q(erfor-)75
329 y(mance)h(among)f(explicit)h(managemen)o(t)e(algorithms)g(v)m(aries)i
(widely)l(.)40 b(F)l(urthermore,)21 b(the)h(relativ)o(e)75
425 y(p)q(erformance)13 b(of)h(algorithms)d(dep)q(ends)16 b(on)e(the)h
(application.)j(F)l(or)13 b(example,)g(in)h(four)g(cases)h(the)f(BSD)75
521 y(algorithm)f(p)q(erforms)h(substan)o(tially)f(b)q(etter)j(than)f(the)h
(SunOS)h(algorithm,)12 b(while)j(in)g(the)h(other)f(t)o(w)o(o)75
617 y(cases)g(it)g(p)q(erforms)e(w)o(orse)i(\(up)g(to)g(28\045)f(w)o(orse)h
(in)g(ghostscript)f(program\).)146 726 y(The)i(most)f(imp)q(ortan)o(t)f
(conclusion)i(to)g(dra)o(w)f(from)g(this)h(comparison)f(is)g(that)h(the)h
(CPU)f(p)q(erfor-)75 822 y(mance)g(of)h(di\013eren)o(t)f(dynamic)g(storage)g
(managemen)o(t)e(algorithms)g(is)i(v)o(ery)h(program)e(dep)q(enden)o(t|)75
918 y(unless)h(there)h(is)e(prior)h(kno)o(wledge)g(that)f(garbage)g
(collection)h(will)e(sho)o(w)i(m)o(uc)o(h)f(w)o(orse)h(p)q(erformance)75
1014 y(than)g(explicit)f(managemen)o(t,)f(p)q(oten)o(tial)g(CPU)i(p)q
(erformance)g(should)g(not)g(b)q(e)h(a)e(factor)h(in)g(c)o(ho)q(osing)75
1110 y(b)q(et)o(w)o(een)g(explicit)e(and)h(automatic)e(algorithms.)146
1218 y(Figure)g(2)i(\(T)l(able)f(4\))g(sho)o(ws)g(the)h(memory)d(usage)i(of)g
(the)h(six)f(test)g(programs)f(using)h(the)h(di\013eren)o(t)75
1314 y(storage)21 b(managemen)o(t)e(tec)o(hniques.)40 b(The)23
b(\014gure)f(sho)o(ws)f(that)h(conserv)m(ativ)o(e)f(garbage)g(collection)75
1410 y(do)q(es)e(not)g(come)f(without)g(cost.)31 b(In)19 b(programs)e(where)i
(memory)e(is)h(correctly)g(deallo)q(cated)h(b)o(y)g(the)75
1506 y(programmer)12 b(\(i.e.,)h(all)g(but)i(y)o(acr\),)f(the)h(conserv)m
(ativ)o(e)f(garbage)g(collection)f(algorithm)f(requires)j(30\045)75
1602 y(to)h(150\045)f(more)g(memory)e(than)k(the)f(SunOS)i(implemen)o(tat)o
(ion.)i(Of)c(course,)h(in)f(the)g(case)g(where)h(the)75 1698
y(programmer)10 b(did)j(not)g(correctly)f(deallo)q(cate)h(free)g(storage,)f
(the)h(garbage)g(collected)g(implemen)o(tat)o(ion)75 1794 y(p)q(erforms)h(b)q
(etter)h(than)g(the)g(explicit)g(algorithms.)146 1902 y(The)20
b(\014gure)f(sho)o(ws)g(that)g(the)h(fast)f(BSD)h(algorithm)d(also)h
(requires)i(more)e(space)i(\(up)g(to)f(42\045\))75 1998 y(than)14
b(the)h(SunOS)g(algorithm,)c(whic)o(h)k(sho)o(w)o(ed)f(the)g(b)q(est)h
(memory)c(p)q(erformance.)19 b(In)c(an)o(y)f(ev)o(en)o(t,)g(the)75
2094 y(memory)d(o)o(v)o(erhead)j(of)g(ev)o(en)g(the)g(w)o(orst)f(explicit)g
(storage)g(managemen)o(t)e(algorithm)g(is)j(substan)o(tially)75
2190 y(lo)o(w)o(er)g(than)h(the)g(conserv)m(ativ)o(e)g(garbage)f(collection)g
(algorithm.)146 2299 y(Giv)o(en)20 b(that)g(the)h(memory)d(o)o(v)o(erhead)i
(of)g(conserv)m(ativ)o(e)h(garbage)e(collection)h(is)g(so)h(large,)f(it)g(is)
75 2395 y(imp)q(ortan)o(t)14 b(to)h(understand)i(the)f(implications)d(of)j
(this)f(measuremen)o(t.)20 b(Assuming)15 b(that)g(a)h(program)75
2491 y(uses)j(virtual)f(memory)l(,)f(the)i(actual)f(program)e(p)q(erformance)
i(cost)h(of)f(suc)o(h)h(a)g(large)f(address)h(space)952 2700
y(18)p eop
%%Page: 19 21
bop 0 71 a
 30785863 18945146 0 0 35456368 22168453 startTexFig
0 71 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/mem-base.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(Sun OS) 7506 4558 2 just-string
(B-W GC (256)) 7506 4206 2 just-string
(GNU) 7506 3854 2 just-string
(Knuth) 7506 3502 2 just-string
(BSD) 7506 3150 2 just-string
80 setlinewidth
0.0 setgray
newpath
  7506 4590 moveto
  8826 4590 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  7506 4238 moveto
  8826 4238 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  7506 3886 moveto
  8826 3886 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  7506 3534 moveto
  8826 3534 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  7506 3182 moveto
  8826 3182 lineto
stroke
0.0 setgray
(Memory Usage (kilobytes)) 3340 4910 5 just-string
(Program) 8826 500 5 just-string
(0) 920 685 5 just-string
(1000) 920 1087 5 just-string
(2000) 920 1490 5 just-string
(3000) 920 1892 5 just-string
(4000) 920 2295 5 just-string
(5000) 920 2698 5 just-string
(6000) 920 3100 5 just-string
(7000) 920 3503 5 just-string
(8000) 920 3906 5 just-string
(9000) 920 4308 5 just-string
(cfrac) 1758 150 7 just-string
(espresso) 2740 150 7 just-string
(gawk) 3722 150 7 just-string
(ghostscript) 4704 150 7 just-string
(perl) 5686 150 7 just-string
(yacr) 6668 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 685 moveto
  1220 685 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  7206 685 moveto
  7356 685 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1087 moveto
  1220 1087 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 1087 moveto
  7356 1087 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1490 moveto
  1220 1490 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 1490 moveto
  7356 1490 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1892 moveto
  1220 1892 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 1892 moveto
  7356 1892 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2295 moveto
  1220 2295 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 2295 moveto
  7356 2295 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2698 moveto
  1220 2698 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 2698 moveto
  7356 2698 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3100 moveto
  1220 3100 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 3100 moveto
  7356 3100 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3503 moveto
  1220 3503 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 3503 moveto
  7356 3503 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3906 moveto
  1220 3906 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 3906 moveto
  7356 3906 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4308 moveto
  1220 4308 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7206 4308 moveto
  7356 4308 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1758 4560 moveto
  1758 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1758 650 moveto
  1758 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2740 4560 moveto
  2740 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2740 650 moveto
  2740 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3722 4560 moveto
  3722 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3722 650 moveto
  3722 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4704 4560 moveto
  4704 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4704 650 moveto
  4704 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5686 4560 moveto
  5686 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5686 650 moveto
  5686 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6668 4560 moveto
  6668 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6668 650 moveto
  6668 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4560 moveto
  1070 500 lineto
  7356 500 lineto
  7356 4560 lineto
  1070 4560 lineto
stroke
0.0 setgray
118 setlinewidth
0.0 setgray
newpath
  1474 685 moveto
  1474 981 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2455 685 moveto
  2455 1243 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3437 685 moveto
  3437 1090 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  4419 685 moveto
  4419 2317 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5401 685 moveto
  5401 1257 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  6383 685 moveto
  6383 1242 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1616 685 moveto
  1616 1412 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2598 685 moveto
  2598 1959 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  3580 685 moveto
  3580 1321 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4562 685 moveto
  4562 4375 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5543 685 moveto
  5543 1450 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  6525 685 moveto
  6525 1125 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  1758 685 moveto
  1758 986 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  2740 685 moveto
  2740 1214 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  3722 685 moveto
  3722 1122 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  4704 685 moveto
  4704 2378 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  5686 685 moveto
  5686 1276 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  6668 685 moveto
  6668 1254 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  1901 685 moveto
  1901 991 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  2883 685 moveto
  2883 1267 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  3864 685 moveto
  3864 1094 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  4846 685 moveto
  4846 2661 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  5828 685 moveto
  5828 1276 lineto
stroke
0.0 setgray
0.700000 setgray
newpath
  6810 685 moveto
  6810 1236 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  2043 685 moveto
  2043 991 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  3025 685 moveto
  3025 1479 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  4007 685 moveto
  4007 1141 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  4989 685 moveto
  4989 2600 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  5971 685 moveto
  5971 1328 lineto
stroke
0.0 setgray
0.300000 setgray
newpath
  6952 685 moveto
  6952 1258 lineto
stroke
0.0 setgray
%%EndDocument
 0 71 a
 endTexFig
75 1369 a Fe(Figure)17 b(2:)40 b Fk(Memory)14 b(Usage)h(of)e(Explicit)j(and)e
(Automatic)h(F)m(orms)e(of)h(Storage)g(Managemen)o(t.)k(F)m(or)c(clarit)o(y)
75 1425 y(of)g(exp)q(osition,)j(the)e(memory)f(usage)i(n)o(um)o(b)q(ers)f
(for)g(the)g(y)o(acr)g(program)f(ha)o(v)o(e)h(b)q(een)h(scaled)g(do)o(wn)f(b)
o(y)f(a)h(factor)75 1482 y(of)e(ten.)p 75 1712 1867 2 v 74
1881 2 170 v 123 1751 a Fp(Program)p 342 1881 V 70 w(SunOS)368
1808 y(\(kilob)o(ytes\))g(/)368 1864 y(SunOS=1)p 662 1881 V
687 1751 a(B-W)j(GC)687 1808 y(\(kilob)o(ytes\))e(/)687 1864
y(SunOS=1)p 981 1881 V 1007 1751 a(GNU)1007 1808 y(\(kilob)o(ytes\))f(/)1007
1864 y(SunOS=1)p 1301 1881 V 1327 1751 a(Kn)o(uth)1327 1808
y(\(kilob)o(ytes\))g(/)1327 1864 y(SunOS=1)p 1621 1881 V 1647
1751 a(BSD)1647 1808 y(\(kilob)o(ytes\))g(/)1647 1864 y(SunOS=1)p
1941 1881 V 75 1883 1867 2 v 74 1939 2 57 v 100 1922 a(cfrac)p
342 1939 V 256 w(736/)h(1.00)p 662 1939 V 109 w(1807/)g(2.45)p
981 1939 V 131 w(748/)g(1.02)p 1301 1939 V 132 w(760/)g(1.03)p
1621 1939 V 132 w(761/)g(1.03)p 1941 1939 V 75 1941 1867 2
v 74 1997 2 57 v 100 1980 a(espresso)p 342 1997 V 168 w(1387/)g(1.00)p
662 1997 V 109 w(3166/)g(2.28)p 981 1997 V 109 w(1315/)f(0.95)p
1301 1997 V 109 w(1448/)h(1.04)p 1621 1997 V 109 w(1974/)g(1.42)p
1941 1997 V 75 1999 1867 2 v 74 2055 2 57 v 100 2038 a(ga)o(wk)p
342 2055 V 226 w(1006/)g(1.00)p 662 2055 V 109 w(1581/)g(1.57)p
981 2055 V 109 w(1086/)f(1.08)p 1301 2055 V 109 w(1018/)h(1.01)p
1621 2055 V 109 w(1134/)g(1.13)p 1941 2055 V 75 2057 1867 2
v 74 2113 2 57 v 100 2097 a(ghostscript)p 342 2113 V 109 w(4053/)g(1.00)p
662 2113 V 109 w(9167/)g(2.26)p 981 2113 V 109 w(4206/)f(1.04)p
1301 2113 V 109 w(4908/)h(1.21)p 1621 2113 V 109 w(4756/)g(1.17)p
1941 2113 V 75 2115 1867 2 v 74 2172 2 57 v 100 2155 a(p)q(erl)p
342 2172 V 251 w(1422/)g(1.00)p 662 2172 V 109 w(1901/)g(1.34)p
981 2172 V 109 w(1469/)f(1.03)p 1301 2172 V 109 w(1470/)h(1.03)p
1621 2172 V 109 w(1597/)g(1.12)p 1941 2172 V 75 2173 1867 2
v 74 2230 2 57 v 100 2213 a(y)o(acr)p 342 2230 V 221 w(13841/)g(1.00)p
662 2230 V 86 w(10944/)g(0.79)p 981 2230 V 86 w(14148/)f(1.02)p
1301 2230 V 87 w(13697/)g(0.99)p 1621 2230 V 86 w(14245/)h(1.03)p
1941 2230 V 75 2231 1867 2 v 75 2309 a Fe(T)l(able)k(4:)44
b Fk(Absolute)16 b(and)e(relativ)o(e)j(memory)d(o)o(v)o(erhead)h(of)f(\014v)o
(e)h(di\013eren)o(t)h(dynamic)f(storage)h(managemen)o(t)75
2365 y(algorithms)g(for)f(the)i(six)f(programs)f(measured.)24
b(F)m(or)15 b(eac)o(h)h(measuremen)o(t,)h(the)f(absolute)h(memory)e(o)o(v)o
(erhead)75 2421 y(and)f(the)g(o)o(v)o(erhead)g(relativ)o(e)i(to)e(the)g
(SunOS)h(implemen)o(tation)g(are)f(giv)o(en.)952 2700 y Fp(19)p
eop
%%Page: 20 22
bop 75 42 a Fp(dep)q(ends)23 b(on)e(the)h(lo)q(calit)o(y)e(of)h(reference)h
(in)f(accessing)g(it.)38 b(Before)22 b(in)o(v)o(estigating)d(this)i(asp)q
(ect)g(of)75 137 y(p)q(erformance,)13 b(ho)o(w)o(ev)o(er,)g(I)i(presen)o(t)f
(results)g(sho)o(wing)f(the)i(e\013ect)f(of)f(programmer-writ)o(ten,)e
(domain-)75 233 y(sp)q(eci\014c)16 b(enhancemen)o(ts)f(to)g(the)g
(general-purp)q(ose)g(allo)q(cation)f(algorithms.)75 408 y
Fg(5.2)56 b(The)18 b(E\013ect)f(of)i(Domain-sp)r(eci\014c)g(Allo)r(cator)h
(Enhancemen)n(ts)75 546 y Fp(In)h(four)f(of)g(the)g(programs)e(in)o(v)o
(estigated,)i(the)g(programmer)d(felt)j(comp)q(elled)f(to)h(a)o(v)o(oid)f
(using)h(the)75 642 y(general-purp)q(ose)e(storage)d(allo)q(cator)h(b)o(y)h
(writing)f(t)o(yp)q(e-sp)q(eci\014c)i(allo)q(cation)d(routines)i(for)f(the)i
(most)75 738 y(common)11 b(ob)s(ject)j(t)o(yp)q(es)f(in)h(the)g(program.)j
(In)d(this)g(section,)f(I)h(compare)e(the)i(CPU)g(p)q(erformance)f(and)75
834 y(the)i(memory)e(size)i(of)f(the)i(optimized)d(\(enhanced\))j(and)f
(unoptimized)f(v)o(ersions)h(of)f(these)i(programs.)146 942
y(Figure)11 b(3)g(\(T)l(able)g(5\))g(sho)o(ws)g(the)h(relativ)o(e)e(p)q
(erformance)h(of)h(the)f(optimized)g(and)g(unoptimized)g(v)o(er-)75
1038 y(sions)f(of)h(the)g(four)g(programs)e(using)i(eac)o(h)g(of)f(the)i
(explicit)e(storage)g(managemen)o(t)e(algorithms.)15 b(F)l(or)c(ex-)75
1134 y(ample,)h(the)h(BSD)g(optimized)e(bar)h(sho)o(ws)h(the)g(p)q
(erformance)f(of)g(the)h(program)e(using)h(domain-sp)q(eci\014c)75
1230 y(allo)q(cation)i(routines)h(for)g(the)h(most)e(common)f(ob)s(ject)i(t)o
(yp)q(es)h(and)g(the)g(BSD)g(allo)q(cation)d(routines)j(for)75
1326 y(the)k(rest.)33 b(The)20 b(BSD)g(unoptimized)f(bar)h(sho)o(ws)f(what)g
(the)h(p)q(eformance)f(is)h(when)g(all)f(allo)q(cations)75
1422 y(are)h(p)q(erformed)f(using)h(the)g(general-purp)q(ose)g(BSD)h(allo)q
(cator.)32 b(The)20 b(\014gure)h(sho)o(ws)e(that)g(in)h(some)75
1518 y(programs,)d(suc)o(h)i(as)g(cfrac,)g(programmer)d(tuning)j(did)f(impro)
o(v)o(e)f(p)q(erformance)h(o)o(v)o(er)g(the)h(standard)75 1614
y(storage)14 b(managemen)o(t)e(algorithms,)g(sometimes)g(b)o(y)j(as)g(m)o(uc)
o(h)f(as)h(60\045.)146 1723 y(The)21 b(general)g(conclusion)g(that)g(m)o(ust)
f(b)q(e)i(reac)o(hed)g(from)d(the)j(\014gure,)h(ho)o(w)o(ev)o(er,)e(is)g
(that)g(pro-)75 1819 y(grammer)14 b(optimizatio)o(ns)g(in)j(these)g(programs)
d(w)o(ere)j(mostly)d(unnecessary)l(.)25 b(While)16 b(it)g(is)g(clear)h(that)
75 1915 y(programmer)f(optimizations)h(can)j(impro)o(v)o(e)e(the)h(p)q
(erformance)g(of)g(the)h(program)e(for)h(a)g(particular)75
2011 y(storage)13 b(managemen)o(t)e(algorithm,)g(simply)h(using)i(a)f
(di\013eren)o(t)g(algorithm)e(\(and)j(esp)q(ecially)g(the)g(BSD)75
2107 y(algorithm\))g(app)q(ears)k(to)f(impro)o(v)o(e)e(p)q(erformance)i(ev)o
(en)h(more.)25 b(In)18 b(three)g(of)f(the)h(applications,)e(pro-)75
2203 y(grammer)11 b(enhancemen)o(ts)j(a\013ected)g(the)g(p)q(erformance)f(of)
h(the)g(BSD)h(algorithm)c(only)j(minimal)o(ly)d(\(2{)75 2299
y(7\045\).)22 b(In)17 b(the)f(fourth)f(application,)g(ghostscript,)g
(programm)o(er)f(enhancemen)o(ts)h(actually)g(decreased)75
2394 y(the)g(program)e(p)q(erformance)i(in)g(most)e(cases.)952
2700 y(20)p eop
%%Page: 21 23
bop 75 107 a
 14682517 16577003 0 0 28351938 35456368 startTexFig
75 107 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/cpu-tuning-cfra.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
(cfrac) 3590 8856 3 just-string
200 /Times-Roman choose-font
(optimized) 5821 7924 2 just-string
(unoptimized) 5821 7572 2 just-string
80 setlinewidth
0.0 setgray
newpath
  5821 7956 moveto
  7031 7956 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5821 7604 moveto
  7031 7604 lineto
stroke
0.0 setgray
(CPU (Sun OS = 1.0)) 150 8376 2 just-string
(Allocator) 7031 500 5 just-string
(0.00) 920 838 5 just-string
(0.10) 920 1254 5 just-string
(0.20) 920 1671 5 just-string
(0.30) 920 2088 5 just-string
(0.40) 920 2504 5 just-string
(0.50) 920 2921 5 just-string
(0.60) 920 3338 5 just-string
(0.70) 920 3755 5 just-string
(0.80) 920 4171 5 just-string
(0.90) 920 4588 5 just-string
(1.00) 920 5005 5 just-string
(1.10) 920 5421 5 just-string
(1.20) 920 5838 5 just-string
(1.30) 920 6255 5 just-string
(1.40) 920 6672 5 just-string
(1.50) 920 7088 5 just-string
(1.60) 920 7505 5 just-string
(1.70) 920 7922 5 just-string
(Sun OS) 1517 150 7 just-string
(GNU) 2753 150 7 just-string
(Knuth) 3988 150 7 just-string
(BSD) 5224 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 838 moveto
  1220 838 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  5521 838 moveto
  5671 838 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1254 moveto
  1220 1254 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1254 moveto
  5671 1254 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1671 moveto
  1220 1671 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1671 moveto
  5671 1671 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2088 moveto
  1220 2088 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2088 moveto
  5671 2088 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2504 moveto
  1220 2504 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2504 moveto
  5671 2504 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2921 moveto
  1220 2921 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2921 moveto
  5671 2921 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3338 moveto
  1220 3338 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3338 moveto
  5671 3338 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3755 moveto
  1220 3755 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3755 moveto
  5671 3755 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4171 moveto
  1220 4171 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4171 moveto
  5671 4171 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4588 moveto
  1220 4588 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4588 moveto
  5671 4588 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5005 moveto
  1220 5005 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5005 moveto
  5671 5005 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5421 moveto
  1220 5421 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5421 moveto
  5671 5421 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5838 moveto
  1220 5838 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5838 moveto
  5671 5838 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6255 moveto
  1220 6255 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6255 moveto
  5671 6255 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6672 moveto
  1220 6672 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6672 moveto
  5671 6672 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7088 moveto
  1220 7088 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7088 moveto
  5671 7088 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7505 moveto
  1220 7505 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7505 moveto
  5671 7505 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7922 moveto
  1220 7922 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7922 moveto
  5671 7922 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 7926 moveto
  1517 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 650 moveto
  1517 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 7926 moveto
  2753 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 650 moveto
  2753 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 7926 moveto
  3988 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 650 moveto
  3988 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 7926 moveto
  5224 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 650 moveto
  5224 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7926 moveto
  1070 500 lineto
  5671 500 lineto
  5671 7926 lineto
  1070 7926 lineto
stroke
0.0 setgray
148 setlinewidth
0.0 setgray
newpath
  1427 838 moveto
  1427 5005 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2663 838 moveto
  2663 5005 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3899 838 moveto
  3899 5171 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5134 838 moveto
  5134 5130 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1607 838 moveto
  1607 7588 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2842 838 moveto
  2842 6088 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4078 838 moveto
  4078 6338 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5314 838 moveto
  5314 5421 lineto
stroke
0.0 setgray
%%EndDocument
 75 107 a
 endTexFig
1020 107 a
 14682517 16577003 0 0 28351938 35456368 startTexFig
1020 107 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/cpu-tuning-gawk.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
(gawk) 3590 8856 3 just-string
200 /Times-Roman choose-font
(optimized) 5821 7924 2 just-string
(unoptimized) 5821 7572 2 just-string
80 setlinewidth
0.0 setgray
newpath
  5821 7956 moveto
  7031 7956 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5821 7604 moveto
  7031 7604 lineto
stroke
0.0 setgray
(CPU (Sun OS = 1.0)) 150 8376 2 just-string
(Allocator) 7031 500 5 just-string
(0.00) 920 838 5 just-string
(0.10) 920 1391 5 just-string
(0.20) 920 1944 5 just-string
(0.30) 920 2498 5 just-string
(0.40) 920 3051 5 just-string
(0.50) 920 3604 5 just-string
(0.60) 920 4158 5 just-string
(0.70) 920 4711 5 just-string
(0.80) 920 5264 5 just-string
(0.90) 920 5818 5 just-string
(1.00) 920 6371 5 just-string
(1.10) 920 6924 5 just-string
(1.20) 920 7478 5 just-string
(Sun OS) 1517 150 7 just-string
(GNU) 2753 150 7 just-string
(Knuth) 3988 150 7 just-string
(BSD) 5224 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 838 moveto
  1220 838 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  5521 838 moveto
  5671 838 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1391 moveto
  1220 1391 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1391 moveto
  5671 1391 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1944 moveto
  1220 1944 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1944 moveto
  5671 1944 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2498 moveto
  1220 2498 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2498 moveto
  5671 2498 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3051 moveto
  1220 3051 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3051 moveto
  5671 3051 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3604 moveto
  1220 3604 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3604 moveto
  5671 3604 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4158 moveto
  1220 4158 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4158 moveto
  5671 4158 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4711 moveto
  1220 4711 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4711 moveto
  5671 4711 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5264 moveto
  1220 5264 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5264 moveto
  5671 5264 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5818 moveto
  1220 5818 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5818 moveto
  5671 5818 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6371 moveto
  1220 6371 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6371 moveto
  5671 6371 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6924 moveto
  1220 6924 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6924 moveto
  5671 6924 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7478 moveto
  1220 7478 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7478 moveto
  5671 7478 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 7926 moveto
  1517 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 650 moveto
  1517 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 7926 moveto
  2753 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 650 moveto
  2753 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 7926 moveto
  3988 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 650 moveto
  3988 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 7926 moveto
  5224 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 650 moveto
  5224 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7926 moveto
  1070 500 lineto
  5671 500 lineto
  5671 7926 lineto
  1070 7926 lineto
stroke
0.0 setgray
148 setlinewidth
0.0 setgray
newpath
  1427 838 moveto
  1427 6371 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2663 838 moveto
  2663 6537 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3899 838 moveto
  3899 5375 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5134 838 moveto
  5134 4877 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1607 838 moveto
  1607 7588 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2842 838 moveto
  2842 6924 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4078 838 moveto
  4078 5873 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5314 838 moveto
  5314 4988 lineto
stroke
0.0 setgray
%%EndDocument
 1020 107 a
 endTexFig
75 1221 a
 14682517 16577003 0 0 28351938 35456368 startTexFig
75 1221 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/cpu-tuning-gs.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
(ghostscript) 3590 8856 3 just-string
200 /Times-Roman choose-font
(optimized) 5821 7924 2 just-string
(unoptimized) 5821 7572 2 just-string
80 setlinewidth
0.0 setgray
newpath
  5821 7956 moveto
  7031 7956 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5821 7604 moveto
  7031 7604 lineto
stroke
0.0 setgray
(CPU (Sun OS = 1.0)) 150 8376 2 just-string
(Allocator) 7031 500 5 just-string
(0.00) 920 838 5 just-string
(0.10) 920 1365 5 just-string
(0.20) 920 1892 5 just-string
(0.30) 920 2420 5 just-string
(0.40) 920 2947 5 just-string
(0.50) 920 3475 5 just-string
(0.60) 920 4002 5 just-string
(0.70) 920 4529 5 just-string
(0.80) 920 5057 5 just-string
(0.90) 920 5584 5 just-string
(1.00) 920 6112 5 just-string
(1.10) 920 6639 5 just-string
(1.20) 920 7167 5 just-string
(1.30) 920 7694 5 just-string
(Sun OS) 1517 150 7 just-string
(GNU) 2753 150 7 just-string
(Knuth) 3988 150 7 just-string
(BSD) 5224 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 838 moveto
  1220 838 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  5521 838 moveto
  5671 838 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1365 moveto
  1220 1365 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1365 moveto
  5671 1365 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1892 moveto
  1220 1892 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1892 moveto
  5671 1892 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2420 moveto
  1220 2420 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2420 moveto
  5671 2420 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2947 moveto
  1220 2947 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2947 moveto
  5671 2947 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3475 moveto
  1220 3475 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3475 moveto
  5671 3475 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4002 moveto
  1220 4002 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4002 moveto
  5671 4002 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4529 moveto
  1220 4529 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4529 moveto
  5671 4529 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5057 moveto
  1220 5057 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5057 moveto
  5671 5057 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5584 moveto
  1220 5584 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5584 moveto
  5671 5584 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6112 moveto
  1220 6112 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6112 moveto
  5671 6112 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6639 moveto
  1220 6639 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6639 moveto
  5671 6639 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7167 moveto
  1220 7167 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7167 moveto
  5671 7167 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7694 moveto
  1220 7694 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7694 moveto
  5671 7694 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 7926 moveto
  1517 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 650 moveto
  1517 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 7926 moveto
  2753 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 650 moveto
  2753 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 7926 moveto
  3988 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 650 moveto
  3988 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 7926 moveto
  5224 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 650 moveto
  5224 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7926 moveto
  1070 500 lineto
  5671 500 lineto
  5671 7926 lineto
  1070 7926 lineto
stroke
0.0 setgray
148 setlinewidth
0.0 setgray
newpath
  1427 838 moveto
  1427 6112 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2663 838 moveto
  2663 7167 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3899 838 moveto
  3899 7219 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5134 838 moveto
  5134 7588 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1607 838 moveto
  1607 6903 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2842 838 moveto
  2842 5743 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4078 838 moveto
  4078 6323 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5314 838 moveto
  5314 5321 lineto
stroke
0.0 setgray
%%EndDocument
 75 1221 a
 endTexFig
1020 1221 a
 14682517 16577003 0 0 28351938 35456368 startTexFig
1020 1221 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/cpu-tuning-perl.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
(perl) 3590 8856 3 just-string
200 /Times-Roman choose-font
(optimized) 5821 7924 2 just-string
(unoptimized) 5821 7572 2 just-string
80 setlinewidth
0.0 setgray
newpath
  5821 7956 moveto
  7031 7956 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5821 7604 moveto
  7031 7604 lineto
stroke
0.0 setgray
(CPU (Sun OS = 1.0)) 150 8376 2 just-string
(Allocator) 7031 500 5 just-string
(0.00) 920 838 5 just-string
(0.10) 920 1382 5 just-string
(0.20) 920 1926 5 just-string
(0.30) 920 2471 5 just-string
(0.40) 920 3015 5 just-string
(0.50) 920 3560 5 just-string
(0.60) 920 4104 5 just-string
(0.70) 920 4649 5 just-string
(0.80) 920 5193 5 just-string
(0.90) 920 5737 5 just-string
(1.00) 920 6282 5 just-string
(1.10) 920 6826 5 just-string
(1.20) 920 7371 5 just-string
(1.30) 920 7915 5 just-string
(Sun OS) 1517 150 7 just-string
(GNU) 2753 150 7 just-string
(Knuth) 3988 150 7 just-string
(BSD) 5224 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 838 moveto
  1220 838 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  5521 838 moveto
  5671 838 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1382 moveto
  1220 1382 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1382 moveto
  5671 1382 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1926 moveto
  1220 1926 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 1926 moveto
  5671 1926 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2471 moveto
  1220 2471 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 2471 moveto
  5671 2471 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3015 moveto
  1220 3015 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3015 moveto
  5671 3015 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3560 moveto
  1220 3560 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 3560 moveto
  5671 3560 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4104 moveto
  1220 4104 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4104 moveto
  5671 4104 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4649 moveto
  1220 4649 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 4649 moveto
  5671 4649 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5193 moveto
  1220 5193 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5193 moveto
  5671 5193 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 5737 moveto
  1220 5737 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 5737 moveto
  5671 5737 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6282 moveto
  1220 6282 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6282 moveto
  5671 6282 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 6826 moveto
  1220 6826 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 6826 moveto
  5671 6826 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7371 moveto
  1220 7371 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7371 moveto
  5671 7371 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7915 moveto
  1220 7915 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5521 7915 moveto
  5671 7915 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 7926 moveto
  1517 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1517 650 moveto
  1517 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 7926 moveto
  2753 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2753 650 moveto
  2753 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 7926 moveto
  3988 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3988 650 moveto
  3988 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 7926 moveto
  5224 7776 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5224 650 moveto
  5224 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 7926 moveto
  1070 500 lineto
  5671 500 lineto
  5671 7926 lineto
  1070 7926 lineto
stroke
0.0 setgray
148 setlinewidth
0.0 setgray
newpath
  1427 838 moveto
  1427 6282 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2663 838 moveto
  2663 5520 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3899 838 moveto
  3899 5411 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5134 838 moveto
  5134 5139 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1607 838 moveto
  1607 7588 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2842 838 moveto
  2842 6010 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4078 838 moveto
  4078 5792 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5314 838 moveto
  5314 5302 lineto
stroke
0.0 setgray
%%EndDocument
 1020 1221 a
 endTexFig
75 2369 a Fe(Figure)14 b(3:)39 b Fk(Comparison)12 b(of)f(CPU)i(p)q
(erformance)g(of)f(four)g(programs)f(using)i(domain-sp)q(eci\014c)i(allo)q
(cators)e(for)75 2426 y(the)i(most)g(common)f(ob)r(ject)i(t)o(yp)q(es)g
(\(optimized\))g(v)o(ersus)g(using)g(a)f(general-purp)q(ose)i(allo)q(cator)f
(for)e(all)i(ob)r(jects)75 2482 y(\(unoptimized\).)k(F)m(or)13
b(eac)o(h)i(program,)e(four)g(di\013eren)o(t)j(general-purp)q(ose)g(allo)q
(cators)g(are)e(measured.)952 2700 y Fp(21)p eop
%%Page: 22 24
bop 572 192 1280 2 v 572 246 2 57 v 706 229 a Fp(Relativ)o(e)14
b(CPU)h(Ov)o(erhead)h(\(SunOS,)g(optimized)d(=)j(1.0\))p 1851
246 V 572 248 1280 2 v 572 303 2 57 v 685 290 a(cfrac)p 891
303 V 1002 286 a(ga)o(wk)p 1211 303 V 159 w(ghostscript)p 1531
303 V 171 w(p)q(erl)p 1851 303 V 98 305 1754 2 v 97 361 2 57
v 123 344 a(Sun)g(OS,)g(optimized)p 572 361 V 288 w(1.00)p
891 361 V 237 w(1.00)p 1211 361 V 238 w(1.00)p 1531 361 V 238
w(1.00)p 1851 361 V 97 417 V 123 401 a(Sun)g(OS,)g(unoptimized)p
572 417 V 238 w(1.62)p 891 417 V 237 w(1.22)p 1211 417 V 238
w(1.15)p 1531 417 V 238 w(1.24)p 1851 417 V 98 419 1754 2 v
97 476 2 57 v 123 459 a(GNU,)f(optimized)p 572 476 V 336 w(1.00)p
891 476 V 237 w(1.03)p 1211 476 V 238 w(1.20)p 1531 476 V 238
w(0.86)p 1851 476 V 97 532 V 123 515 a(GNU,)g(unoptimized)p
572 532 V 286 w(1.26)p 891 532 V 237 w(1.10)p 1211 532 V 238
w(0.93)p 1531 532 V 238 w(0.95)p 1851 532 V 98 534 1754 2 v
97 590 2 57 v 123 573 a(Kn)o(uth,)h(optimized)p 572 590 V 312
w(1.04)p 891 590 V 237 w(0.82)p 1211 590 V 238 w(1.21)p 1531
590 V 238 w(0.84)p 1851 590 V 97 647 V 123 630 a(Kn)o(uth,)g(unoptimized)p
572 647 V 262 w(1.32)p 891 647 V 237 w(0.91)p 1211 647 V 238
w(1.04)p 1531 647 V 238 w(0.91)p 1851 647 V 98 648 1754 2 v
97 705 2 57 v 123 688 a(BSD,)f(optimized)p 572 705 V 348 w(1.03)p
891 705 V 237 w(0.73)p 1211 705 V 238 w(1.28)p 1531 705 V 238
w(0.79)p 1851 705 V 97 761 V 123 744 a(BSD,)g(unoptimized)p
572 761 V 298 w(1.10)p 891 761 V 237 w(0.75)p 1211 761 V 238
w(0.85)p 1531 761 V 238 w(0.82)p 1851 761 V 98 763 1754 2 v
75 840 a Fe(T)l(able)20 b(5:)49 b Fk(Relativ)o(e)17 b(CPU)f(p)q(erformance)h
(of)e(programs)h(using)h(domain-sp)q(eci\014c)h(allo)q(cators)f(for)f(the)g
(most)75 896 y(common)f(ob)r(ject)i(t)o(yp)q(es)g(\(optimized\))g(v)o(ersus)h
(using)e(a)g(general-purp)q(ose)i(allo)q(cator)f(for)f(all)g(ob)r(jects)h
(\(unopti-)75 953 y(mized\))g(All)f(measuremen)o(ts)h(are)f(relativ)o(e)h(to)
e(the)h(p)q(erformance)h(of)e(the)h(optimized)h(SunOS)e(implemen)o(tation)75
1009 y(of)e(the)i(program)e(\(smaller)j(is)e(faster\).)p 572
1484 1280 2 v 572 1539 2 57 v 672 1522 a Fp(Relativ)o(e)h(Memory)e(Ov)o
(erhead)j(\(SunOS,)g(optimized)d(=)j(1.0\))p 1851 1539 V 572
1541 1280 2 v 572 1596 2 57 v 685 1583 a(cfrac)p 891 1596 V
1002 1579 a(ga)o(wk)p 1211 1596 V 159 w(ghostscript)p 1531
1596 V 171 w(p)q(erl)p 1851 1596 V 98 1597 1754 2 v 97 1654
2 57 v 123 1637 a(Sun)g(OS,)g(optimized)p 572 1654 V 288 w(1.00)p
891 1654 V 237 w(1.00)p 1211 1654 V 238 w(1.00)p 1531 1654
V 238 w(1.00)p 1851 1654 V 97 1710 V 123 1693 a(Sun)g(OS,)g(unoptimized)p
572 1710 V 238 w(1.01)p 891 1710 V 237 w(1.00)p 1211 1710 V
238 w(0.92)p 1531 1710 V 238 w(1.00)p 1851 1710 V 98 1712 1754
2 v 97 1768 2 57 v 123 1751 a(GNU,)f(optimized)p 572 1768 V
336 w(1.02)p 891 1768 V 237 w(1.08)p 1211 1768 V 238 w(1.04)p
1531 1768 V 238 w(1.03)p 1851 1768 V 97 1825 V 123 1808 a(GNU,)g(unoptimized)
p 572 1825 V 286 w(1.01)p 891 1825 V 237 w(1.05)p 1211 1825
V 238 w(1.05)p 1531 1825 V 238 w(1.03)p 1851 1825 V 98 1826
1754 2 v 97 1883 2 57 v 123 1866 a(Kn)o(uth,)h(optimized)p
572 1883 V 312 w(1.03)p 891 1883 V 237 w(1.01)p 1211 1883 V
238 w(1.21)p 1531 1883 V 238 w(1.03)p 1851 1883 V 97 1939 V
123 1922 a(Kn)o(uth,)g(unoptimized)p 572 1939 V 262 w(1.09)p
891 1939 V 237 w(1.03)p 1211 1939 V 238 w(1.56)p 1531 1939
V 238 w(1.03)p 1851 1939 V 98 1941 1754 2 v 97 1997 2 57 v
123 1981 a(BSD,)f(optimized)p 572 1997 V 348 w(1.03)p 891 1997
V 237 w(1.13)p 1211 1997 V 238 w(1.17)p 1531 1997 V 238 w(1.12)p
1851 1997 V 97 2054 V 123 2037 a(BSD,)g(unoptimized)p 572 2054
V 298 w(1.03)p 891 2054 V 237 w(1.09)p 1211 2054 V 238 w(1.15)p
1531 2054 V 238 w(1.12)p 1851 2054 V 98 2056 1754 2 v 75 2133
a Fe(T)l(able)20 b(6:)51 b Fk(Relativ)o(e)18 b(memory)e(o)o(v)o(erhead)g(of)g
(programs)g(using)h(domain-sp)q(eci\014c)h(allo)q(cators)g(for)e(the)h(most)
75 2189 y(common)e(ob)r(ject)i(t)o(yp)q(es)g(\(optimized\))g(v)o(ersus)h
(using)e(a)g(general-purp)q(ose)i(allo)q(cator)f(for)f(all)g(ob)r(jects)h
(\(unopti-)75 2246 y(mized\))g(All)f(measuremen)o(ts)h(are)f(relativ)o(e)h
(to)e(the)h(p)q(erformance)h(of)e(the)h(optimized)h(SunOS)e(implemen)o
(tation)75 2302 y(of)e(the)i(program.)952 2700 y Fp(22)p eop
%%Page: 23 25
bop 146 42 a Fp(Giv)o(en)18 b(that)h(the)h(CPU)f(p)q(erformance)f(of)h(the)h
(programs)d(w)o(as)h(not)h(signi\014can)o(tly)f(impro)o(v)o(ed)g(b)o(y)75
137 y(programmer)13 b(optimizations,)g(the)k(p)q(ossibilit)o(y)d(exists)i
(that)g(the)g(programmer's)d(in)o(ten)o(t)j(in)g(optimiz-)75
233 y(ing)e(w)o(as)g(to)f(reduce)j(the)e(storage)f(required)i(b)o(y)f(the)h
(program.)i(T)l(able)d(6)g(sho)o(ws)g(the)h(relativ)o(e)e(memory)75
329 y(sizes)18 b(required)g(in)g(the)g(optimized)e(and)i(unoptimized)f(v)o
(ersions)g(of)h(the)g(programs)e(for)h(eac)o(h)h(of)g(the)75
425 y(algorithms)11 b(considered.)20 b(The)14 b(table)f(sho)o(ws)g(that)g
(optimizations)e(had)j(little)e(\(and)i(sometimes)d(nega-)75
521 y(tiv)o(e\))i(e\013ect)h(on)h(the)f(memory)e(requiremen)o(ts)h(of)h(the)g
(programs.)j(Because)e(little)e(space)i(w)o(as)e(actually)75
617 y(sa)o(v)o(ed)g(in)g(the)g(optimized)e(storage)h(allo)q(cators,)f(the)j
(results)e(in)h(the)g(table)g(suggest)f(that)h(space)g(sa)o(vings)75
713 y(w)o(ere)i(not)g(the)g(in)o(ten)o(t)f(of)h(program)e(optimizations.)146
822 y(The)20 b(strongest)f(argumen)o(t)g(one)i(can)f(mak)o(e)f(for)h(the)g
(optimizations)e(is)h(that)h(they)h(reduce)g(the)75 918 y(program)13
b(o)o(v)o(erhead)h(most)f(when)j(the)f(SunOS)h(algorithm)c(is)j(used.)20
b(Because)c(the)f(SunOS)h(algorithm)75 1014 y(often)c(required)g(the)g(least)
g(memory)d(o)o(v)o(erhead)j(of)g(the)g(algorithms)d(considered,)k(optimizing)
d(the)i(CPU)75 1110 y(p)q(erformance)e(of)g(that)g(algorithm)e(pro)o(vides)i
(b)q(oth)g(CPU)h(and)g(memory)d(e\016ciency)l(.)19 b(Th)o(us)10
b(the)h(program)75 1206 y(optimizations)i(sometimes)g(pro)o(vide)i(p)q
(erformance)h(comparable)e(to)h(the)h(fast)g(BSD)g(algorithm)d(with)75
1302 y(only)i(the)g(space)h(requiremen)o(ts)d(of)i(the)h(SunOS)g(algorithm.)h
(Suc)o(h)f(a)f(b)q(ene\014t)h(did)g(not)e(alw)o(a)o(ys)g(o)q(ccur,)75
1398 y(and)h(the)g(BSD)g(algorithm,)c(ev)o(en)k(without)f(optimization,)e
(sometim)o(es)g(reduced)k(program)d(execution)75 1494 y(time)h(b)o(y)h
(20\045)f(with)h(an)g(a)o(v)o(erage)f(10\045)g(additional)g(memory)f(o)o(v)o
(erhead.)75 1668 y Fg(5.3)56 b(Reference)16 b(Lo)r(calit)n(y)75
1806 y Fp(In)i(this)e(section,)h(I)h(in)o(v)o(estigate)d(the)i(program)e(lo)q
(calit)o(y)g(of)i(reference)h(in)f(three)g(cases:)24 b(the)17
b(BSD)g(al-)75 1902 y(gorithm)e(with)i(programmer)d(enhancemen)o(ts,)k(the)g
(BSD)f(algorithm)e(without)h(enhancemen)o(ts,)i(and)75 1998
y(the)i(Bo)q(ehm-W)l(eiser)f(conserv)m(ativ)o(e)g(garbage)f(collection)h
(algorithm.)30 b(Using)19 b(trace-driv)o(en)g(sim)o(ula-)75
2094 y(tion)e(in)g(com)o(bination)e(with)i(cac)o(he)h(and)f(virtual)f(memory)
f(sim)o(ulation)g(to)q(ols,)h(I)i(compare)f(the)g(page)75 2190
y(fault)h(rate)g(and)h(the)g(cac)o(he)g(miss)e(rate)h(of)g(these)h(three)g
(cases)f(for)g(eac)o(h)h(of)f(the)h(test)f(programs.)28 b(In)75
2286 y(these)19 b(measuremen)o(ts,)f(the)h(cac)o(he)g(miss)e(rates)i(are)g
(calculated)f(using)h(the)g(all-asso)q(ciativit)o(y)d(cac)o(he)75
2382 y(sim)o(ulator)d(t)o(yc)o(ho,)i(written)g(b)o(y)h(Mark)f(Hill)g([15)o
(].)22 b(P)o(age)16 b(fault)f(rates)g(w)o(ere)h(computed)g(using)f(a)h(mo)q
(di-)75 2478 y(\014ed)g(stac)o(k)e(sim)o(ulatio)o(n)e(algorithm)g([28)o(],)i
(in)h(whic)o(h)g(an)g(LR)o(U)g(page)g(replacemen)o(t)e(p)q(olicy)i(is)f
(assumed.)952 2700 y(23)p eop
%%Page: 24 26
bop 75 42 a Fp(F)l(or)13 b(these)h(measuremen)o(ts,)e(only)h(data)g
(references)i(w)o(ere)e(measured)g(b)q(ecause)i(the)f(dynamic)f(memory)75
137 y(managemen)o(t)i(algorithm)g(used)j(has)g(little)e(e\013ect)h(on)h
(instruction)f(reference)h(lo)q(calit)o(y)l(.)26 b(In)18 b(all)f(cases)75
233 y(o)o(v)o(er)e(100)g(million)e(data)i(references)h(w)o(ere)g(used)g(to)f
(measure)g(the)h(miss)e(rate)h(and)h(page)f(fault)g(rate)g(of)75
329 y(the)g(programs.)146 438 y(I)e(ha)o(v)o(e)f(already)g(sho)o(wn)g(that)g
(conserv)m(ativ)o(e)g(garbage)f(collection)h(increases)g(the)h(memory)d
(require-)75 534 y(men)o(ts)k(of)h(the)h(programs)e(measured)g(from)g
(30{150\045.)20 b(In)c(this)f(section,)g(I)h(sho)o(w)f(that)g(the)h
(increased)75 630 y(memory)d(requiremen)o(ts)g(translate)h(to)h(a)g(decrease)
g(in)g(the)h(lo)q(calit)o(y)d(of)i(reference.)146 738 y(Figure)j(4)h(and)g
(Figure)f(5)h(compare)f(the)h(virtual)f(memory)e(lo)q(calit)o(y)i(of)g(the)h
(BSD)h(and)f(garbage)75 834 y(collection)13 b(algorithms.)j(Figure)d(4)h
(compares)e(the)i(total)e(page)i(faults)f(of)g(the)h(di\013eren)o(t)f
(algorithms)e(in)75 930 y(eac)o(h)j(of)g(the)g(test)f(programs)f(assuming)h
(a)g(\014xed)i(memory)c(size)j(of)g(t)o(w)o(o)f(megab)o(ytes.)18
b(Tw)o(o)13 b(megab)o(ytes)75 1026 y(w)o(as)19 b(c)o(hosen)g(b)q(ecause)i(it)
e(represen)o(ts)g(a)g(memory)e(size)i(for)g(whic)o(h)h(there)f(is)g(a)g
(signi\014can)o(t)g(di\013eren)o(t)75 1122 y(b)q(et)o(w)o(een)f(the)g(allo)q
(cators)d(in)j(the)g(applications)e(c)o(hosen.)28 b(If)18 b(smaller)d(memory)
g(sizes)j(are)f(measured,)75 1218 y(all)d(allo)q(cators)f(sho)o(w)h(higher)h
(fault)f(rates;)g(if)g(larger)g(memory)e(sizes)j(are)g(c)o(hosen,)g(all)f
(allo)q(cators)f(sho)o(w)75 1314 y(lo)o(w)h(fault)g(rates)h(\(illustrated)e
(in)i(Figure)g(5\).)146 1422 y(The)c(\014gure)h(sho)o(ws)f(conclusiv)o(ely)f
(that)h(conserv)m(ativ)o(e)g(garbage)f(collection)h(signi\014can)o(tly)f
(decreases)75 1518 y(the)h(lo)q(calit)o(y)f(of)g(reference)i(in)f(all)g(the)g
(programs,)e(t)o(ypically)h(causing)h(one)g(to)g(t)o(w)o(o)f(orders)h(of)f
(magnitude)75 1614 y(more)j(page)h(faults)g(for)g(the)h(giv)o(en)f(memory)e
(size.)19 b(In)o(terestingly)l(,)14 b(ev)o(en)h(in)f(the)h(y)o(acr)f
(program,)e(where)75 1710 y(conserv)m(ativ)o(e)f(garbage)g(collection)g
(reduced)i(the)e(total)g(memory)e(requiremen)o(ts)h(b)o(y)i(20\045,)f(the)h
(garbage)75 1806 y(collection)h(algorithm)e(still)i(sho)o(w)o(ed)h(far)f
(less)h(lo)q(calit)o(y)e(of)i(reference.)20 b(This)14 b(can)g(b)q(e)h
(attributed)e(to)h(the)75 1902 y(non-lo)q(calit)o(y)d(of)h(this)g(garbage)g
(collection)f(algorithm:)16 b(the)d(mark)e(phase)h(visits)g(all)f(reac)o
(hable)i(ob)s(jects)75 1998 y(and)i(the)h(sw)o(eep)f(phase)g(sequen)o(tially)
f(references)i(substan)o(tial)e(parts)g(of)h(the)g(heap.)146
2107 y(Figure)i(5)g(sho)o(ws)g(the)h(page)g(fault)f(rate)g(\(faults)f(p)q(er)
j(reference\))f(as)f(a)h(function)f(of)h(the)g(memory)75 2203
y(size)e(for)f(the)h(ga)o(wk)f(test)g(program.)20 b(This)15
b(\014gure)h(b)q(etter)g(illustrates)e(the)i(relativ)o(e)e(reference)j(lo)q
(calit)o(y)75 2299 y(of)f(the)h(optimized)e(and)i(unoptimized)e(v)o(ersions)h
(of)g(the)h(BSD)f(algorithm.)21 b(The)c(page)g(fault)e(rates)h(of)75
2395 y(the)g(unoptimized)e(algorithm)e(are)k(sligh)o(tly)d(higher)j(than)f
(those)g(of)g(the)h(optimized)e(BSD)h(algorithm,)75 2491 y(for)i(all)g
(memory)e(sizes.)56 b(The)18 b(fault)f(rate)h(of)f(the)h(garbage)f
(collection)g(algorithm)e(is)i(substan)o(tially)952 2700 y(24)p
eop
%%Page: 25 27
bop 0 23 a
 30785863 16577003 0 0 35456368 22168453 startTexFig
0 23 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/vmsim.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(BSD (opt)) 7286 4558 2 just-string
(BSD (unopt)) 7286 4206 2 just-string
(B-W GC) 7286 3854 2 just-string
80 setlinewidth
0.0 setgray
newpath
  7286 4590 moveto
  8826 4590 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  7286 4238 moveto
  8826 4238 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  7286 3886 moveto
  8826 3886 lineto
stroke
0.0 setgray
(Total Page Faults) 150 5010 2 just-string
(Program) 8826 500 5 just-string
(1) 920 685 5 just-string
(3) 920 1014 5 just-string
(10) 920 1375 5 just-string
(30) 920 1704 5 just-string
(100) 920 2065 5 just-string
(300) 920 2394 5 just-string
(1000) 920 2755 5 just-string
(3000) 920 3084 5 just-string
(10000) 920 3445 5 just-string
(30000) 920 3774 5 just-string
(100000) 920 4135 5 just-string
(300000) 920 4464 5 just-string
(cfrac) 1614 150 7 just-string
(espresso) 2610 150 7 just-string
(gawk) 3605 150 7 just-string
(ghostscript) 4601 150 7 just-string
(perl) 5596 150 7 just-string
(yacr) 6592 150 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  1070 685 moveto
  1220 685 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 685 moveto
  7136 685 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1014 moveto
  1220 1014 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 1014 moveto
  7136 1014 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1375 moveto
  1220 1375 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 1375 moveto
  7136 1375 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1704 moveto
  1220 1704 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 1704 moveto
  7136 1704 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2065 moveto
  1220 2065 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 2065 moveto
  7136 2065 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2394 moveto
  1220 2394 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 2394 moveto
  7136 2394 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2755 moveto
  1220 2755 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 2755 moveto
  7136 2755 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3084 moveto
  1220 3084 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 3084 moveto
  7136 3084 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3445 moveto
  1220 3445 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 3445 moveto
  7136 3445 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3774 moveto
  1220 3774 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 3774 moveto
  7136 3774 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4135 moveto
  1220 4135 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 4135 moveto
  7136 4135 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4464 moveto
  1220 4464 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6986 4464 moveto
  7136 4464 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1614 4560 moveto
  1614 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1614 650 moveto
  1614 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2610 4560 moveto
  2610 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2610 650 moveto
  2610 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3605 4560 moveto
  3605 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3605 650 moveto
  3605 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4601 4560 moveto
  4601 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4601 650 moveto
  4601 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5596 4560 moveto
  5596 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5596 650 moveto
  5596 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6592 4560 moveto
  6592 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6592 650 moveto
  6592 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4560 moveto
  1070 500 lineto
  7136 500 lineto
  7136 4560 lineto
  1070 4560 lineto
stroke
0.0 setgray
119 setlinewidth
0.0 setgray
newpath
  1465 685 moveto
  1465 685 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2461 685 moveto
  2461 2910 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3456 685 moveto
  3456 2607 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  4451 685 moveto
  4451 3193 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5447 685 moveto
  5447 685 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  6442 685 moveto
  6442 3379 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1614 685 moveto
  1614 685 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2610 685 moveto
  2610 2907 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  3605 685 moveto
  3605 2647 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4601 685 moveto
  4601 3285 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5596 685 moveto
  5596 685 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  6592 685 moveto
  6592 3379 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  1764 685 moveto
  1764 3695 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  2759 685 moveto
  2759 4136 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  3755 685 moveto
  3755 2966 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  4750 685 moveto
  4750 4375 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  5745 685 moveto
  5745 685 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  6741 685 moveto
  6741 3973 lineto
stroke
0.0 setgray
%%EndDocument
 0 23 a
 endTexFig
75 1171 a Fe(Figure)14 b(4:)39 b Fk(P)o(age)12 b(fault)g(rates)h(for)f(a)g
(memory)g(size)i(of)d(2)h(megab)o(ytes)h(in)f(the)h(six)g(test)g(programs.)18
b(F)m(or)11 b(sev)o(eral)75 1227 y(of)16 b(the)h(programs)g(\(e.g.,)f(p)q
(erl\))i(and)f(allo)q(cators,)h(the)f(address)h(space)g(required)h(w)o(as)d
(less)j(than)d(2)h(megab)o(ytes)75 1284 y(and)d(no)f(page)h(faults)h(w)o(ere)
f(required.)0 1370 y
 30785863 16577003 0 0 35456368 22168453 startTexFig
0 1370 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/gawk-pfr.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(BSD (opt)) 6776 4738 2 just-string
(BSD (unopt)) 6776 4446 2 just-string
(B-W GC) 6776 4154 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  6776 4770 moveto
  7986 4770 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  6776 4478 moveto
  7986 4478 lineto
stroke
14 setlinewidth
[50] 0 setdash
newpath
  6776 4186 moveto
  7986 4186 lineto
stroke
(Page Fault Rate) 90 5130 2 just-string
(Memory Size (Kbytes)) 8776 380 5 just-string
(.0000001) 860 778 5 just-string
(.0000002) 860 1211 5 just-string
(.0000005) 860 1782 5 just-string
(.000001) 860 2215 5 just-string
(.000002) 860 2647 5 just-string
(.000005) 860 3218 5 just-string
(.00001) 860 3651 5 just-string
(.00002) 860 4083 5 just-string
(.00005) 860 4654 5 just-string
(1000) 2075 90 7 just-string
(2000) 3846 90 7 just-string
(3000) 5618 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 778 moveto
  1100 778 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 778 moveto
  6686 778 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1211 moveto
  1100 1211 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 1211 moveto
  6686 1211 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1782 moveto
  1100 1782 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 1782 moveto
  6686 1782 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2215 moveto
  1100 2215 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 2215 moveto
  6686 2215 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2647 moveto
  1100 2647 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 2647 moveto
  6686 2647 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3218 moveto
  1100 3218 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 3218 moveto
  6686 3218 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3651 moveto
  1100 3651 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 3651 moveto
  6686 3651 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4083 moveto
  1100 4083 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 4083 moveto
  6686 4083 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4654 moveto
  1100 4654 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6536 4654 moveto
  6686 4654 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2075 4740 moveto
  2075 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2075 530 moveto
  2075 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3846 4740 moveto
  3846 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3846 530 moveto
  3846 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5618 4740 moveto
  5618 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5618 530 moveto
  5618 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4740 moveto
  950 380 lineto
  6686 380 lineto
  6686 4740 lineto
  950 4740 lineto
stroke
14 setlinewidth
[] 0 setdash
newpath
  1211 1029 moveto
  1437 959 lineto
  1664 939 lineto
  1891 923 lineto
  2118 918 lineto
  2344 911 lineto
  2571 906 lineto
  2798 903 lineto
  3024 898 lineto
  3251 896 lineto
  3478 893 lineto
  3705 892 lineto
  3931 889 lineto
  4158 886 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  1211 1092 moveto
  1437 1052 lineto
  1664 1026 lineto
  1891 1009 lineto
  2118 999 lineto
  2344 992 lineto
  2571 984 lineto
  2798 975 lineto
  3024 970 lineto
  3251 967 lineto
  3478 965 lineto
  3705 962 lineto
  3931 960 lineto
  4158 956 lineto
  4385 956 lineto
  4612 955 lineto
  4838 955 lineto
stroke
14 setlinewidth
[50] 0 setdash
newpath
  1211 4542 moveto
  1437 4408 lineto
  1664 4377 lineto
  1891 4367 lineto
  2118 4357 lineto
  2344 4348 lineto
  2571 4326 lineto
  2798 4301 lineto
  3024 4265 lineto
  3251 4198 lineto
  3478 4138 lineto
  3705 2559 lineto
  3931 1071 lineto
  4158 808 lineto
  4385 685 lineto
  4612 630 lineto
  4838 615 lineto
  5065 596 lineto
  5292 589 lineto
  5518 582 lineto
  5745 581 lineto
  5972 579 lineto
  6199 578 lineto
  6425 578 lineto
stroke
%%EndDocument
 0 1370 a
 endTexFig
241 2518 a Fe(Figure)i(5:)40 b Fk(P)o(age)14 b(fault)g(rates)h(for)f
(di\013eren)o(t)i(memory)d(sizes)j(in)e(the)h(ga)o(wk)e(application.)952
2700 y Fp(25)p eop
%%Page: 26 28
bop 75 42 a Fp(higher)15 b(than)g(either)g(BSD)g(algorithm)e(for)h(memories)e
(up)k(to)f(2)g(megab)o(ytes.)146 150 y(Figure)10 b(6)h(and)g(Figure)f(7)h
(compare)f(the)h(total)e(cac)o(he)j(miss)d(rate)i(of)f(the)h(three)h
(algorithms)c(assuming)75 246 y(a)j(direct-mapp)q(ed)f(cac)o(he)i(with)e
(32-b)o(yte)h(blo)q(c)o(ks.)18 b(Just)11 b(as)g(the)g(previous)g(\014gures)g
(sho)o(w)o(ed)f(that)h(garbage)75 342 y(collection)18 b(has)h(m)o(uc)o(h)f(w)
o(orse)g(lo)q(calit)o(y)f(of)i(reference)g(at)g(the)g(page)g(lev)o(el,)g
(these)g(\014gures)g(sho)o(w)g(that)75 438 y(the)h(cac)o(he)h(lo)q(calit)o(y)
d(of)i(the)g(Bo)q(ehm-W)l(eiser)g(garbage)f(collection)g(algorithm)f(is)h
(also)h(m)o(uc)o(h)f(w)o(orse)75 534 y(than)j(the)g(BSD)h(algorithm,)d
(except)j(in)f(the)h(ghostscript)e(and)h(y)o(acr)g(applications.)39
b(Ghostscript)75 630 y(sho)o(ws)11 b(anomalous)e(b)q(eha)o(vior)i(when)h(the)
f(programmer)e(enhancemen)o(ts)i(are)g(com)o(bined)g(with)f(the)i(BSD)75
726 y(algorithm,)d(resulting)h(in)h(extremely)e(high)i(cac)o(he)h(miss)d
(rates.)18 b(This)11 b(o)o(v)o(erhead)f(is)h(also)f(re\015ected)i(in)f(the)75
822 y(measured)i(CPU)h(time)f(of)g(this)h(implemen)o(tati)o(on)d(as)j(sho)o
(wn)g(in)g(T)l(able)g(3,)f(where)i(the)f(BSD)g(algorithm)75
918 y(unc)o(haracteristically)g(tak)o(es)i(longer)f(to)h(execute)h(than)f
(the)g(Sun)h(OS)g(algorithm.)j(While)c(I)g(ha)o(v)o(e)g(not)75
1014 y(in)o(v)o(estigated)h(the)h(source)h(of)f(this)g(cac)o(he)g(con)o(ten)o
(tion,)g(I)h(surmise)e(it)h(results)g(from)f(access)h(con\015icts)75
1110 y(b)q(et)o(w)o(een)e(the)f(domain-sp)q(eci\014c)f(allo)q(cator)g(and)h
(the)g(underlying)h(general-purp)q(ose)f(allo)q(cator.)146
1218 y(In)g(four)f(of)g(the)g(applications,)f(ho)o(w)o(ev)o(er,)g(the)i(Bo)q
(ehm-W)l(eiser)f(collector)f(results)g(in)i(m)o(uc)o(h)e(higher)75
1314 y(miss)19 b(rates)g(than)i(the)f(other)g(algorithms.)32
b(Bo)q(ehm)20 b(and)h(W)l(eiser)f(note)g(that)g(their)g(collector)f(ma)o(y)75
1410 y(result)14 b(in)h(extra)g(cac)o(he)g(misses)e(b)q(ecause)j(c)o(h)o(unk)
g(headers,)f(whic)o(h)g(are)f(frequen)o(tly)h(accessed,)g(are)g(also)75
1506 y(page)k(aligned,)g(and)g(th)o(us)g(con)o(tain)g(the)g(same)f(least)g
(signi\014can)o(t)g(bits)h(in)g(their)f(addresses)i([5)o(].)31
b(My)75 1602 y(measuremen)o(ts)13 b(con\014rm)h(their)h(observ)m(ation.)146
1710 y(Figure)f(6)g(sho)o(ws)g(the)h(miss)e(rates)h(of)g(the)h(algorithms)d
(and)j(programs)d(in)j(a)f(direct-mapp)q(ed,)h(128-)75 1806
y(kilob)o(yte)h(cac)o(he)i(with)e(a)h(blo)q(c)o(ksize)h(of)e(32)h(b)o(ytes.)
26 b(In)18 b(practice,)f(the)h(miss)d(rate)i(of)g(the)g(conserv)m(ativ)o(e)75
1902 y(algorithm)e(app)q(ears)k(to)e(b)q(e)i(3{10)e(times)g(higher)h(than)g
(the)g(BSD)h(algorithm.)26 b(Figure)17 b(7)h(sho)o(ws)g(the)75
1998 y(cac)o(he)j(miss)f(rate)g(as)h(a)g(function)g(of)g(cac)o(he)g(size)g
(in)g(the)h(ga)o(wk)e(application,)h(assuming)e(a)i(direct-)75
2094 y(mapp)q(ed)15 b(cac)o(he.)21 b(The)16 b(conserv)m(ativ)o(e)f(garbage)g
(collection)f(algorithm)f(sho)o(ws)h(a)i(relativ)o(ely)d(high)j(miss)75
2190 y(rate)f(for)f(cac)o(he)i(sizes)f(as)f(large)h(as)g(t)o(w)o(o)e(megab)o
(ytes.)146 2299 y(Based)h(on)h(these)g(measures)e(of)h(reference)i(lo)q
(calit)o(y)l(,)c(I)j(reac)o(h)g(t)o(w)o(o)e(imp)q(ortan)o(t)f(conclusions.)20
b(First,)75 2395 y(it)10 b(is)h(clear)f(that)h(the)g(Bo)q(ehm-W)l(eiser)f
(conserv)m(ativ)o(e)h(garbage)f(collection)g(algorithm)e(not)j(only)f
(requires)75 2491 y(a)j(larger)g(address)h(space,)f(but)h(also)f(disrupts)g
(the)h(memory)d(reference)j(lo)q(calit)o(y)e(of)h(the)h(test)f(programs)952
2700 y(26)p eop
%%Page: 27 29
bop 0 36 a
 30785863 16577003 0 0 35456368 22168453 startTexFig
0 36 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/tycho.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(BSD (opt)) 7616 4558 2 just-string
(BSD (unopt)) 7616 4206 2 just-string
(B-W GC) 7616 3854 2 just-string
(25.9%) 4350 4520 2 just-string
80 setlinewidth
0.0 setgray
newpath
  7616 4590 moveto
  8826 4590 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  7616 4238 moveto
  8826 4238 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  7616 3886 moveto
  8826 3886 lineto
stroke
0.0 setgray
(Cache Miss Rate) 150 5010 2 just-string
(Program) 8826 500 5 just-string
(0.00) 920 685 5 just-string
(2.00) 920 1177 5 just-string
(4.00) 920 1669 5 just-string
(6.00) 920 2161 5 just-string
(8.00) 920 2653 5 just-string
(10.00) 920 3145 5 just-string
(12.00) 920 3637 5 just-string
(14.00) 920 4129 5 just-string
(cfrac) 1644 150 7 just-string
(espresso) 2694 150 7 just-string
(gawk) 3743 150 7 just-string
(ghostscript) 4793 150 7 just-string
(perl) 5842 150 7 just-string
(yacr) 6892 150 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  1070 685 moveto
  1220 685 lineto
stroke
0.0 setgray
[] 0 setdash
8 setlinewidth
newpath
  7316 685 moveto
  7466 685 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1177 moveto
  1220 1177 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 1177 moveto
  7466 1177 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 1669 moveto
  1220 1669 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 1669 moveto
  7466 1669 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2161 moveto
  1220 2161 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 2161 moveto
  7466 2161 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 2653 moveto
  1220 2653 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 2653 moveto
  7466 2653 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3145 moveto
  1220 3145 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 3145 moveto
  7466 3145 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 3637 moveto
  1220 3637 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 3637 moveto
  7466 3637 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4129 moveto
  1220 4129 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  7316 4129 moveto
  7466 4129 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1644 4560 moveto
  1644 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1644 650 moveto
  1644 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2694 4560 moveto
  2694 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  2694 650 moveto
  2694 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3743 4560 moveto
  3743 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  3743 650 moveto
  3743 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4793 4560 moveto
  4793 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  4793 650 moveto
  4793 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5842 4560 moveto
  5842 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  5842 650 moveto
  5842 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6892 4560 moveto
  6892 4410 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  6892 650 moveto
  6892 500 lineto
stroke
0.0 setgray
[] 0 setdash
2 setlinewidth
newpath
  1070 4560 moveto
  1070 500 lineto
  7466 500 lineto
  7466 4560 lineto
  1070 4560 lineto
stroke
0.0 setgray
126 setlinewidth
0.0 setgray
newpath
  1487 685 moveto
  1487 692 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  2536 685 moveto
  2536 928 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  3586 685 moveto
  3586 799 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  4635 685 moveto
  4635 4375 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  5685 685 moveto
  5685 785 lineto
stroke
0.0 setgray
0.0 setgray
newpath
  6734 685 moveto
  6734 4316 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  1644 685 moveto
  1644 696 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  2694 685 moveto
  2694 928 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  3743 685 moveto
  3743 693 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  4793 685 moveto
  4793 785 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  5842 685 moveto
  5842 774 lineto
stroke
0.0 setgray
0.800000 setgray
newpath
  6892 685 moveto
  6892 4316 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  1802 685 moveto
  1802 1634 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  2851 685 moveto
  2851 1329 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  3901 685 moveto
  3901 1878 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  4950 685 moveto
  4950 1545 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  6000 685 moveto
  6000 1672 lineto
stroke
0.0 setgray
0.400000 setgray
newpath
  7049 685 moveto
  7049 3489 lineto
stroke
0.0 setgray
%%EndDocument
 0 36 a
 endTexFig
75 1184 a Fe(Figure)15 b(6:)39 b Fk(Cac)o(he)13 b(miss)g(rates)h(for)e(a)g
(128-kilob)o(yte)h(direct-mapp)q(ed)h(cac)o(he)g(in)f(the)g(six)g(test)h
(programs.)k(The)75 1241 y(BSD)13 b(\(opt\))h(v)n(alue)f(for)g(the)h
(ghostscript)h(program)e(is)h(sho)o(wn)f(in)h(the)g(graph)f(as)g(15.0\045,)e
(but)j(is)g(actually)g(25.9\045.)0 1357 y
 30785863 16577003 0 0 35456368 22168453 startTexFig
0 1357 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/gawk-cmr.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(BSD (opt)) 6886 4738 2 just-string
(BSD (unopt)) 6886 4446 2 just-string
(BW-GC) 6886 4154 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  6886 4770 moveto
  8206 4770 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  6886 4478 moveto
  8206 4478 lineto
stroke
14 setlinewidth
[50] 0 setdash
newpath
  6886 4186 moveto
  8206 4186 lineto
stroke
(Cache Miss Rate (%)) 90 5130 2 just-string
(Cache Size (Kbytes)) 8886 380 5 just-string
(0.00) 860 578 5 just-string
(1.00) 860 1200 5 just-string
(2.00) 860 1822 5 just-string
(3.00) 860 2445 5 just-string
(4.00) 860 3067 5 just-string
(5.00) 860 3689 5 just-string
(6.00) 860 4312 5 just-string
(30) 1904 90 7 just-string
(100) 3223 90 7 just-string
(300) 4426 90 7 just-string
(1000) 5745 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 578 moveto
  1100 578 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  6646 578 moveto
  6796 578 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1200 moveto
  1100 1200 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6646 1200 moveto
  6796 1200 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1822 moveto
  1100 1822 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6646 1822 moveto
  6796 1822 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2445 moveto
  1100 2445 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6646 2445 moveto
  6796 2445 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3067 moveto
  1100 3067 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6646 3067 moveto
  6796 3067 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3689 moveto
  1100 3689 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6646 3689 moveto
  6796 3689 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4312 moveto
  1100 4312 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6646 4312 moveto
  6796 4312 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1904 4740 moveto
  1904 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1904 530 moveto
  1904 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3223 4740 moveto
  3223 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3223 530 moveto
  3223 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4426 4740 moveto
  4426 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4426 530 moveto
  4426 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5745 4740 moveto
  5745 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5745 530 moveto
  5745 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4740 moveto
  950 380 lineto
  6796 380 lineto
  6796 4740 lineto
  950 4740 lineto
stroke
14 setlinewidth
[] 0 setdash
newpath
  1216 2215 moveto
  1975 1493 lineto
  2734 1155 lineto
  3493 866 lineto
  4253 589 lineto
  5012 583 lineto
  5771 578 lineto
  6530 578 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  1216 2375 moveto
  1975 1785 lineto
  2734 987 lineto
  3493 600 lineto
  4253 593 lineto
  5012 578 lineto
  5771 578 lineto
  6530 578 lineto
stroke
14 setlinewidth
[50] 0 setdash
newpath
  1216 4542 moveto
  1975 4008 lineto
  2734 3767 lineto
  3493 3596 lineto
  4253 3391 lineto
  5012 3171 lineto
  5771 2438 lineto
  6530 956 lineto
stroke
%%EndDocument
 0 1357 a
 endTexFig
109 2505 a Fe(Figure)j(7:)40 b Fk(Cac)o(he)14 b(miss)h(rates)g(for)e
(di\013eren)o(t)j(direct-mapp)q(ed)g(cac)o(he)f(sizes)h(in)e(the)h(ga)o(wk)e
(application.)952 2700 y Fp(27)p eop
%%Page: 28 30
bop 75 42 a Fp(far)15 b(more)e(than)i(explicit)g(storage)e(managemen)o(t)g
(metho)q(ds.)19 b(Second,)c(I)h(conclude)g(that)e(programmer)75
137 y(optimizations)k(ma)o(y)h(increase)h(the)h(reference)h(lo)q(calit)o(y)c
(of)j(the)g(programs)d(studied,)k(although)e(the)75 233 y(e\013ect)15
b(is)g(not)g(a)g(signi\014can)o(t)f(part)h(of)g(the)h(o)o(v)o(erall)d
(program)g(p)q(erformance)i(in)g(the)h(Solb)q(ourne)f(system)75
329 y(I)i(ha)o(v)o(e)g(used)h(to)e(compare)g(p)q(erformance.)25
b(In)18 b(computer)e(systems)g(with)g(smaller)f(cac)o(hes)i(and)h(main)75
425 y(memories)12 b(the)k(impact)d(of)i(programmer)d(optimizations)g(ma)o(y)h
(b)q(e)j(more)e(signi\014can)o(t.)75 633 y Fj(6)69 b(Summary)75
787 y Fp(In)15 b(this)f(pap)q(er,)g(I)h(compared)f(conserv)m(ativ)o(e)f
(garbage)h(collection)f(algorithm)e(with)j(four)g(explicit)g(stor-)75
883 y(age)i(managemen)o(t)d(algorithms.)20 b(I)d(compared)e(CPU)h(p)q
(erformance,)f(memory)f(o)o(v)o(erhead,)i(and)g(refer-)75 979
y(ence)i(lo)q(calit)o(y)d(of)i(the)g(di\013eren)o(t)f(algorithms)e(to)j
(fully)f(ev)m(aluate)h(the)g(e\013ect)g(of)g(algorithm)d(c)o(hoice)j(on)75
1075 y(program)8 b(p)q(erformance.)18 b(T)l(o)10 b(p)q(erform)f(the)h
(comparison,)f(I)i(used)g(six)f(widely-used,)h(memory-in)o(tensiv)o(e)75
1171 y(test)17 b(programs.)26 b(In)19 b(four)e(of)h(these)g(programs,)e(the)i
(programmers)d(implemen)o(ted)g(domain-sp)q(eci\014c)75 1267
y(allo)q(cators)f(for)i(the)g(most)e(common)g(ob)s(ject)i(t)o(yp)q(es)g(in)g
(their)f(programs.)21 b(I)16 b(measured)g(the)g(impact)e(of)75
1363 y(programmer)i(enhancemen)o(ts)k(to)f(determine)f(what)h(programmers)e
(consider)i(to)g(b)q(e)h(a)g(substan)o(tial)75 1459 y(p)q(erformance)12
b(impro)o(v)o(emen)o(t)e(\(at)j(least)f(substan)o(tial)f(enough)j(to)f(w)o
(arran)o(t)e(the)i(extra)g(e\013ort)f(of)h(co)q(ding)75 1555
y(the)i(optimizations\).)146 1663 y(F)l(rom)f(these)j(measuremen)o(ts,)d(I)j
(reac)o(h)g(the)f(follo)o(wing)f(conclusions.)23 b(First,)15
b(the)i(CPU)f(o)o(v)o(erhead)75 1759 y(of)k(conserv)m(ativ)o(e)h(garbage)e
(collection)h(is)g(often)h(not)f(signi\014can)o(tly)f(higher)i(than)f(that)g
(of)h(di\013eren)o(t)75 1855 y(explicit)14 b(storage)f(managemen)o(t)e
(algorithms.)17 b(The)e(CPU)f(o)o(v)o(erhead)g(of)g(storage)f(managemen)o(t)f
(is)i(ap-)75 1951 y(plication)g(dep)q(enden)o(t,)j(and)f(conserv)m(ativ)o(e)f
(garbage)g(collection)g(compares)f(w)o(ell)h(with)g(other)g(explicit)75
2047 y(storage)c(managemen)o(t)f(algorithms.)16 b(These)d(test)f(programs,)e
(whic)o(h)i(sp)q(end)i(up)f(to)f(30\045)g(of)g(their)g(total)75
2143 y(execution)19 b(time)e(in)i(storage)e(managemen)o(t,)g(represen)o(t)i
(the)g(w)o(orst)e(case)i(o)o(v)o(erhead)f(that)h(migh)o(t)d(b)q(e)75
2239 y(exp)q(ected)e(to)f(b)q(e)h(asso)q(ciated)e(with)h(garbage)f
(collection.)18 b(Ev)o(en)c(so,)f(the)g(Bo)q(ehm-W)l(eiser)f(conserv)m(ativ)o
(e)75 2335 y(garbage)k(collection)f(algorithm,)f(when)j(compared)f(with)g
(four)g(w)o(ell-implemen)o(ted,)e(widely-used)i(al-)75 2431
y(lo)q(cator)d(implemen)o(tat)o(ions,)e(w)o(as)i(the)h(slo)o(w)o(est)e(allo)q
(cator)g(in)i(only)g(one)g(of)f(the)i(the)f(six)f(programs,)f(and)75
2527 y(the)j(faster)g(allo)q(cator)e(in)i(one)g(other.)952
2700 y(28)p eop
%%Page: 29 31
bop 146 42 a Fp(Conserv)m(ativ)o(e)17 b(garbage)g(collection)g(do)q(es)h(not)
g(come)f(without)g(a)h(cost.)27 b(In)19 b(the)f(programs)e(mea-)75
137 y(sured,)j(the)f(garbage)g(collection)f(algorithm)e(used)k(30{150\045)e
(more)f(address)j(space)f(than)g(the)h(most)75 233 y(space)14
b(e\016cien)o(t)e(explicit)h(managemen)o(t)d(algorithm.)17
b(In)c(addition,)g(the)g(conserv)m(ativ)o(e)g(garbage)f(collec-)75
329 y(tion)e(algorithm)e(signi\014can)o(tly)i(reduced)i(the)f(reference)h(lo)
q(calit)o(y)d(of)i(the)g(programs,)e(greatly)h(increasing)75
425 y(the)17 b(page)h(fault)e(rate)h(and)g(cac)o(he)h(miss)d(rate)i(of)g(the)
g(applications)f(for)h(a)g(large)f(range)h(of)g(cac)o(he)h(and)75
521 y(memory)c(sizes.)25 b(This)16 b(result)g(suggests)g(that)g(not)h(only)f
(do)q(es)h(the)g(conserv)m(ativ)o(e)f(garbage)g(collection)75
617 y(algorithm)f(increase)j(the)h(size)f(of)g(the)g(address)h(space,)g(but)f
(also)f(frequen)o(tly)h(references)h(the)g(en)o(tire)75 713
y(space)13 b(it)f(requires.)19 b(F)l(or)12 b(systems)f(with)h(enough)h(cac)o
(he)g(and)f(memory)l(,)f(this)h(disadv)m(an)o(tage)g(of)g(the)h(con-)75
809 y(serv)m(ativ)o(e)k(garbage)f(collection)h(algorithm)d(do)q(es)k(not)f
(signi\014can)o(tly)f(degrade)h(its)g(p)q(erformance,)g(but)75
905 y(in)e(systems)e(with)i(smaller)d(cac)o(hes)k(and)f(memories,)d(some)i(p)
q(erformance)g(degradation)g(is)g(inevitable.)146 1014 y(Finally)l(,)f(I)h
(ha)o(v)o(e)h(ev)m(aluated)f(the)h(e\013ect)f(of)g(domain-sp)q(eci\014c)g
(allo)q(cator)f(enhancemen)o(ts)h(in)g(four)g(of)75 1110 y(the)f(test)f
(programs.)17 b(With)11 b(some)h(algorithms,)e(programm)o(er)g(enhancemen)o
(ts)i(increase)h(p)q(erformance)75 1206 y(signi\014can)o(tly)l(,)g(while)h
(with)g(other)g(algorithms)d(\(and)j(most)f(notably)h(the)g(BSD)h
(algorithm\),)c(enhance-)75 1302 y(men)o(ts)k(ha)o(v)o(e)h(little,)f(and)h
(sometimes)e(negativ)o(e)h(e\013ect.)23 b(I)17 b(conclude)g(that)e
(programmers,)e(instead)j(of)75 1398 y(sp)q(ending)g(time)e(writing)g
(domain-sp)q(eci\014c)h(storage)f(allo)q(cators,)g(should)h(consider)h(using)
f(other)g(pub-)75 1494 y(licly)e(a)o(v)m(ailable)g(implemen)o(tati)o(ons)f
(of)h(storage)g(managemen)o(t)f(algorithms)f(if)i(the)i(one)f(they)g(are)g
(using)75 1590 y(p)q(erforms)e(p)q(o)q(orly)l(.)20 b(It)14
b(app)q(ears)f(that)h(c)o(hoice)f(of)h(algorithm)c(has)k(more)e(impact)g(on)i
(p)q(erformance)f(than)75 1686 y(programmer)c(enhancemen)o(t)j(of)g(a)g
(particular)f(algorithm.)16 b(P)o(erhaps)c(op)q(erating)f(systems)g(should)h
(pro-)75 1781 y(vide)17 b(users)f(with)g(a)h(v)m(ariet)o(y)f(of)g(dynamic)g
(storage)f(managemen)o(t)f(algorithms)f(instead)k(of)f(pro)o(viding)75
1877 y(a)f(single)f(c)o(hoice)359 1861 y Ff(4)379 1877 y Fp(.)146
1986 y(Giv)o(en)20 b(that)g(conserv)m(ativ)o(e)g(garbage)g(collection)g(has)g
(a)h(cost,)g(when)g(should)g(it)f(b)q(e)i(considered)75 2082
y(as)17 b(an)g(alternativ)o(e)e(to)i(explicit)f(storage)g(managemen)o(t?)25
b(This)16 b(pap)q(er)i(has)f(compared)f(conserv)m(ativ)o(e)75
2178 y(garbage)c(collection)g(head-to-head)i(with)f(explicit)f(storage)g
(managemen)o(t,)f(un)o(til)h(no)o(w)h(treating)f(them)75 2274
y(as)h(if)g(they)h(are)f(equally)g(desirable)g(alternativ)o(es.)18
b(Garbage)12 b(collection,)g(ho)o(w)o(ev)o(er,)h(has)h(a)f(tremendous)75
2370 y(adv)m(an)o(tage)j(o)o(v)o(er)g(explicit)f(managemen)o(t)f(metho)q(ds)h
(b)q(ecause)j(it)e(is)g(far)f(easier)h(for)g(a)g(programmer)e(to)p
75 2451 720 2 v 127 2478 a Fd(4)144 2494 y Fh(A)d(colleague)g(and)h(I)f(in)o
(v)o(estigate)h(the)f(p)q(ossibilit)o(y)g(of)g(automatically)f(generating)i
(an)g(appropriate)g(allo)q(cator)g(in)f([12].)952 2700 y Fp(29)p
eop
%%Page: 30 32
bop 75 42 a Fp(use.)19 b(With)11 b(programs)f(that)i(do)g(substan)o(tial)e
(explicit)h(storage)g(managemen)o(t,)e(programmers)g(sp)q(end)k(a)75
137 y(signi\014can)o(t)e(amoun)o(t)f(of)i(time)e(\014nding)j(and)f
(eliminating)d(storage)i(managemen)o(t)e(bugs)j(\(memory)e(leaks)75
233 y(and)k(duplicate)g(frees\).)19 b(Ro)o(vner)c(estimates)d(that)h(dev)o
(elop)q(ers)h(using)g(the)g(Mesa)g(language)f(sp)q(en)o(t)i(40\045)75
329 y(of)h(the)h(dev)o(elopmen)o(t)f(time)f(implemen)o(ting)f(memory)g
(managemen)o(t)g(pro)q(cedures)k(and)f(\014nding)g(bugs)75
425 y(related)c(to)h(explicit)f(storage)g(reclamation)e([23)o(].)19
b(In)c(addition,)e(storage)g(managemen)o(t)e(bugs)j(that)f(are)75
521 y(not)i(found)g(can)g(greatly)f(con)o(tribute)g(to)h(the)g(unreliabilit)o
(y)e(of)h(soft)o(w)o(are.)k(Bartlett)c(has)h(noted)g(that)f(a)75
617 y(large)h(fraction)h(of)g(soft)o(w)o(are-caused)f(total)g(system)g
(failures)g(are)i(caused)f(b)o(y)h(memory)d(managemen)o(t)75
713 y(errors)g([3].)146 822 y(While)g(the)h(adv)m(an)o(tages)g(of)f(freeing)h
(the)g(programmer)d(from)h(explicit)h(storage)g(managemen)o(t)e(are)75
918 y(di\016cult)18 b(to)g(quan)o(tify)l(,)g(they)h(are)f(ob)o(vious)g(and)h
(substan)o(tial.)28 b(Keeping)20 b(this)e(in)g(mind,)g(along)g(with)75
1014 y(the)i(result)f(that)h(the)g(CPU)f(o)o(v)o(erhead)h(of)g(conserv)m
(ativ)o(e)f(garbage)g(collection)g(is)g(not)h(signi\014can)o(t,)g(I)75
1110 y(w)o(ould)15 b(recommend)f(that)h(conserv)m(ativ)o(e)h(garbage)f
(collection)f(b)q(e)j(used)f(in)g(almost)d(ev)o(ery)j(case.)21
b(As)16 b(a)75 1206 y(default,)d(the)g(algorithm)e(has)i(lo)o(w)f(o)o(v)o
(erhead)h(and)h(is)e(far)h(easier)g(to)g(use.)19 b(In)14 b(cases)g(where)f
(the)h(memory)75 1302 y(a)o(v)m(ailable)g(is)h(kno)o(wn)g(to)g(b)q(e)h(quite)
f(limited,)e(explicit)h(storage)g(managemen)o(t)f(ma)o(y)g(b)q(e)j(necessary)
l(,)g(but)75 1398 y(should)d(only)g(b)q(e)g(considered)h(if)e(garbage)h
(collection)e(has)i(b)q(een)h(sho)o(wn)f(to)g(require)g(excessiv)o(e)g
(memory)75 1494 y(or)i(CPU)g(o)o(v)o(erhead.)75 1668 y Fg(6.1)56
b(Impro)n(v)n(emen)n(ts)18 b(to)g(Conserv)m(ativ)n(e)h(GC)g(Algorithms)75
1806 y Fp(Explicit)13 b(storage)f(managemen)o(t)f(algorithms)g(ha)o(v)o(e)j
(had)g(decades)g(to)f(b)q(e)i(tuned)f(and)g(impro)o(v)o(ed)e(while)75
1902 y(conserv)m(ativ)o(e)e(garbage)f(collection)g(algorithms)e(ha)o(v)o(e)j
(only)g(b)q(een)h(implemen)o(ted)d(in)i(the)g(past)g(few)g(y)o(ears.)75
1998 y(T)l(rends)18 b(in)g(garbage)g(collection)e(tec)o(hnology)i(suggest)f
(that)g(impro)o(v)o(emen)o(ts)e(to)i(the)i(Bo)q(ehm-W)l(eiser)75
2094 y(conserv)m(ativ)o(e)f(collection)f(algorithm)e(are)j(p)q(ossible)g(and)
g(lik)o(ely)f(in)h(the)g(near)h(future.)28 b(In)19 b(particular)75
2190 y(generation)13 b(tec)o(hniques,)i(already)e(successfully)i(applied)f
(in)g(Lisp)h(en)o(vironmen)o(ts,)d(can)i(b)q(e)h(applied)g(to)75
2286 y(conserv)m(ativ)o(e)g(collection)f(algorithms.)146 2394
y(Generation)d(tec)o(hniques)h([20)o(])g(fo)q(cus)g(the)g(atten)o(tion)f(of)h
(garbage)f(collection)g(on)h(the)g(most)e(recen)o(tly)75 2490
y(allo)q(cated)19 b(ob)s(jects,)g(whic)o(h)h(empirical)d(evidence)k(sho)o(ws)
d(are)i(the)f(ob)s(jects)g(most)f(lik)o(ely)g(to)h(b)q(ecome)952
2700 y(30)p eop
%%Page: 31 33
bop 75 42 a Fp(garbage.)18 b(F)l(o)q(cusing)c(garbage)e(collection)g(on)i
(these)f(y)o(ounger)g(ob)s(jects)g(serv)o(es)g(three)h(purp)q(oses.)20
b(First,)75 137 y(the)13 b(e\016ciency)g(of)f(collection)g(is)g(increased)h
(b)q(ecause)g(a)g(higher)f(p)q(ercen)o(tage)h(of)f(the)h(ob)s(jects)f
(visited)g(are)75 233 y(garbage.)21 b(Second,)c(b)q(ecause)g(few)o(er)e(ob)s
(jects)h(are)f(visited)g(during)h(eac)o(h)g(collection,)f(program)f(pauses)75
329 y(asso)q(ciated)g(with)f(garbage)h(collection)f(are)h(shortened.)20
b(The)15 b(\014nal)f(and)h(most)d(imp)q(ortan)o(t)g(purp)q(ose)j(of)75
425 y(generation)f(garbage)h(collection)f(\(based)h(on)g(m)o(y)f(measuremen)o
(ts\))e(is)j(that)g(the)g(reference)h(lo)q(calit)o(y)d(of)75
521 y(garbage)g(collection)g(is)h(substan)o(tially)e(increased)i([29)o(].)19
b(This)14 b(increase)g(o)q(ccurs)h(b)q(ecause)g(only)e(a)h(small)75
617 y(part)h(of)f(the)i(program's)c(address)k(space)f(is)g(visited)f(during)h
(a)g(collection.)146 726 y(Generation)9 b(garbage)h(collection)f(has)h(b)q
(een)i(successfully)e(used)h(in)f(languages)g(including)g(Lisp)h([21)o(],)75
822 y(Smalltalk)i([26)o(],)i(and)h(ML)f([1].)21 b(Because)16
b(generation)f(collection)f(relies)h(on)h(the)g(b)q(eha)o(vior)f(that)g(most)
75 918 y(ob)s(jects)j(liv)o(e)g(a)g(relativ)o(ely)f(short)h(time,)f
(generation)h(collection)g(will)f(only)h(b)q(e)i(e\013ectiv)o(e)e(for)g(C)g
(if)g(C)75 1014 y(programs)c(also)h(displa)o(y)h(this)f(b)q(eha)o(vior.)23
b(Figure)16 b(8)f(sho)o(ws)h(the)g(surviv)m(al)g(curv)o(es)g(for)g(ob)s
(jects)g(in)g(\014v)o(e)75 1110 y(of)21 b(the)g(applications)e(used)j(in)e
(this)h(pap)q(er.)37 b(The)22 b(surviv)m(al)e(curv)o(e)h(plots)f(the)h
(fraction)f(of)h(ob)s(jects)75 1206 y(surviving)15 b(past)g(a)g(particular)f
(age)h(as)g(a)g(function)h(of)f(age)g(\(e.g.,)f(in)h(the)h(\014gure,)f(appro)
o(ximately)e(50\045)75 1302 y(of)j(the)h(ob)s(jects)e(liv)o(e)h(b)q(ey)o(ond)
h(10,000)e(cycles)h(in)g(the)h(p)q(erl)f(application\).)22
b(The)17 b(\014gure)g(sho)o(ws)e(that)h(in)75 1398 y(all)i(cases)g(except)i
(y)o(acr,)e(few)o(er)h(than)f(10\045)h(of)f(ob)s(jects)g(allo)q(cated)g(liv)o
(e)g(b)q(ey)o(ond)h(100,000)e(cycles)i(\(or)75 1494 y(appro)o(ximately)13
b(3)i(milliseconds)e(on)j(a)f(33-megahertz)e(CPU\).)i(Ob)s(ject)h(lifespans)e
(w)o(ere)i(measured)e(as)75 1590 y(the)f(n)o(um)o(b)q(er)f(of)h(instructions)
e(b)q(et)o(w)o(een)j(when)f(they)g(w)o(ere)g(allo)q(cated)e(and)j(freed.)19
b(Ob)s(ject)13 b(lifespans)f(in)75 1686 y(y)o(acr)i(are)g(quite)g(long)g(b)q
(ecause)h(the)f(programmer)e(failed)h(to)h(free)g(garbage)g(ob)s(jects.)19
b(I)c(conclude)g(from)75 1781 y(the)e(data)f(in)h(the)g(\014gure)g(that)g
(generation)f(tec)o(hniques)h(can)g(b)q(e)h(successfully)f(applied)f(to)h(C)g
(programs.)75 1877 y(A)h(generation)g(collector)f(that)g(collected)h(ob)s
(jects)f(less)h(frequen)o(tly)g(than)g(ev)o(ery)g(100,000)e(cycles)j(\(e.g.,)
75 1973 y(ev)o(ery)g(5{10)f(seconds\))h(w)o(ould)g(\014nd)h(mostly)d(dead)j
(ob)s(jects)e(and)h(th)o(us)g(p)q(erform)f(e\016cien)o(tly)l(.)146
2082 y(Generation)g(tec)o(hniques)j(ha)o(v)o(e)e(already)g(b)q(een)i(applied)
f(to)f(conserv)m(ativ)o(e)g(garbage)g(collection)f(al-)75 2178
y(gorithms.)i(Bo)q(ehm)c(et)g(al.)18 b(ha)o(v)o(e)11 b(a)h(tec)o(hnique)g
(called)g(\\stic)o(ky-mark-bit,")d(curren)o(tly)i(a)o(v)m(ailable)g(in)h(the)
75 2274 y(P)o(ortable)k(Common)e(Run)o(time)i(system,)g(that)g(adds)h
(generations)g(to)f(their)h(conserv)m(ativ)o(e)f(collection)75
2370 y(algorithm)g([11)o(].)30 b(Bartlett)17 b(also)h(has)h(extended)g(a)g
(mostly-cop)o(ying)d(conserv)m(ativ)o(e)i(collection)g(algo-)75
2466 y(rithm)13 b(for)h(C++)h(to)f(use)h(generation)f(tec)o(hniques)h([2)o
(].)20 b(F)l(rom)13 b(these)i(researc)o(h)f(initiativ)o(es)f(and)h(others)952
2700 y(31)p eop
%%Page: 32 34
bop 0 0 a
 30785863 16577003 0 0 35456368 22168453 startTexFig
0 0 a
%%BeginDocument: /home/tile/zorn/papers/gc-meas/new-final/lifespan.ps
0.06 0.06 scale
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
300 /Times-Bold choose-font
() 4488 5490 3 just-string
200 /Times-Roman choose-font
(cfrac) 7106 4738 2 just-string
(espresso) 7106 4446 2 just-string
(ghostscript) 7106 4154 2 just-string
(perl) 7106 3862 2 just-string
(yacr) 7106 3570 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  7106 4770 moveto
  8316 4770 lineto
stroke
[] 0 setdash 8 setlinewidth 7106 4770 24 mark0
14 setlinewidth
[25] 0 setdash
newpath
  7106 4478 moveto
  8316 4478 lineto
stroke
[] 0 setdash 8 setlinewidth 7106 4478 24 mark1
14 setlinewidth
[50] 0 setdash
newpath
  7106 4186 moveto
  8316 4186 lineto
stroke
[] 0 setdash 8 setlinewidth 7106 4186 24 mark2
14 setlinewidth
[75] 0 setdash
newpath
  7106 3894 moveto
  8316 3894 lineto
stroke
[] 0 setdash 8 setlinewidth 7106 3894 24 mark3
14 setlinewidth
[100] 0 setdash
newpath
  7106 3602 moveto
  8316 3602 lineto
stroke
[] 0 setdash 8 setlinewidth 7106 3602 24 mark4
(Fraction of Objects Surviving) 90 5130 2 just-string
(Lifespan (cycles)) 8886 380 5 just-string
(0.00) 860 578 5 just-string
(0.10) 860 975 5 just-string
(0.20) 860 1371 5 just-string
(0.30) 860 1767 5 just-string
(0.40) 860 2164 5 just-string
(0.50) 860 2560 5 just-string
(0.60) 860 2956 5 just-string
(0.70) 860 3353 5 just-string
(0.80) 860 3749 5 just-string
(0.90) 860 4145 5 just-string
(1.00) 860 4542 5 just-string
(1e+02) 1766 90 7 just-string
(1e+04) 3123 90 7 just-string
(1e+06) 4480 90 7 just-string
(1e+08) 5837 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 578 moveto
  1100 578 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  6866 578 moveto
  7016 578 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 975 moveto
  1100 975 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 975 moveto
  7016 975 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1371 moveto
  1100 1371 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 1371 moveto
  7016 1371 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1767 moveto
  1100 1767 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 1767 moveto
  7016 1767 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2164 moveto
  1100 2164 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 2164 moveto
  7016 2164 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2560 moveto
  1100 2560 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 2560 moveto
  7016 2560 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2956 moveto
  1100 2956 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 2956 moveto
  7016 2956 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3353 moveto
  1100 3353 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 3353 moveto
  7016 3353 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3749 moveto
  1100 3749 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 3749 moveto
  7016 3749 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4145 moveto
  1100 4145 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 4145 moveto
  7016 4145 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4542 moveto
  1100 4542 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6866 4542 moveto
  7016 4542 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1766 4740 moveto
  1766 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1766 530 moveto
  1766 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3123 4740 moveto
  3123 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3123 530 moveto
  3123 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4480 4740 moveto
  4480 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4480 530 moveto
  4480 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5837 4740 moveto
  5837 4590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5837 530 moveto
  5837 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4740 moveto
  950 380 lineto
  7016 380 lineto
  7016 4740 lineto
  950 4740 lineto
stroke
8 setlinewidth 1226 4542 24 mark0
1430 4542 24 mark0
1634 4531 24 mark0
1838 4179 24 mark0
2043 3402 24 mark0
2247 1929 24 mark0
2451 1711 24 mark0
2655 1604 24 mark0
2860 1292 24 mark0
3064 755 24 mark0
3268 590 24 mark0
3472 587 24 mark0
3677 584 24 mark0
3881 584 24 mark0
4085 584 24 mark0
4289 584 24 mark0
4494 584 24 mark0
4698 584 24 mark0
4902 584 24 mark0
5106 584 24 mark0
5311 583 24 mark0
5515 583 24 mark0
5719 583 24 mark0
5923 583 24 mark0
6128 582 24 mark0
6332 580 24 mark0
6536 578 24 mark0
6740 578 24 mark0
14 setlinewidth
[] 0 setdash
newpath
  1226 4542 moveto
  1430 4542 lineto
  1634 4531 lineto
  1838 4179 lineto
  2043 3402 lineto
  2247 1929 lineto
  2451 1711 lineto
  2655 1604 lineto
  2860 1292 lineto
  3064 755 lineto
  3268 590 lineto
  3472 587 lineto
  3677 584 lineto
  3881 584 lineto
  4085 584 lineto
  4289 584 lineto
  4494 584 lineto
  4698 584 lineto
  4902 584 lineto
  5106 584 lineto
  5311 583 lineto
  5515 583 lineto
  5719 583 lineto
  5923 583 lineto
  6128 582 lineto
  6332 580 lineto
  6536 578 lineto
  6740 578 lineto
stroke
[] 0 setdash 8 setlinewidth 1226 4542 24 mark1
1430 4473 24 mark1
1634 4467 24 mark1
1838 4359 24 mark1
2043 4109 24 mark1
2247 3932 24 mark1
2451 3743 24 mark1
2655 3466 24 mark1
2860 3162 24 mark1
3064 2715 24 mark1
3268 2237 24 mark1
3472 1777 24 mark1
3677 1349 24 mark1
3881 983 24 mark1
4085 720 24 mark1
4289 595 24 mark1
4494 592 24 mark1
4698 590 24 mark1
4902 589 24 mark1
5106 589 24 mark1
5311 589 24 mark1
5515 589 24 mark1
5719 589 24 mark1
5923 589 24 mark1
6128 589 24 mark1
6332 589 24 mark1
6536 589 24 mark1
6740 588 24 mark1
14 setlinewidth
[25] 0 setdash
newpath
  1226 4542 moveto
  1430 4473 lineto
  1634 4467 lineto
  1838 4359 lineto
  2043 4109 lineto
  2247 3932 lineto
  2451 3743 lineto
  2655 3466 lineto
  2860 3162 lineto
  3064 2715 lineto
  3268 2237 lineto
  3472 1777 lineto
  3677 1349 lineto
  3881 983 lineto
  4085 720 lineto
  4289 595 lineto
  4494 592 lineto
  4698 590 lineto
  4902 589 lineto
  5106 589 lineto
  5311 589 lineto
  5515 589 lineto
  5719 589 lineto
  5923 589 lineto
  6128 589 lineto
  6332 589 lineto
  6536 589 lineto
  6740 588 lineto
stroke
[] 0 setdash 8 setlinewidth 1226 4542 24 mark2
1430 4542 24 mark2
1634 4532 24 mark2
1838 4529 24 mark2
2043 4390 24 mark2
2247 4281 24 mark2
2451 4088 24 mark2
2655 3977 24 mark2
2860 3832 24 mark2
3064 3511 24 mark2
3268 2866 24 mark2
3472 1915 24 mark2
3677 837 24 mark2
3881 715 24 mark2
4085 708 24 mark2
4289 704 24 mark2
4494 702 24 mark2
4698 696 24 mark2
4902 693 24 mark2
5106 690 24 mark2
5311 686 24 mark2
5515 684 24 mark2
5719 684 24 mark2
5923 680 24 mark2
6128 654 24 mark2
6332 578 24 mark2
6536 578 24 mark2
6740 578 24 mark2
14 setlinewidth
[50] 0 setdash
newpath
  1226 4542 moveto
  1430 4542 lineto
  1634 4532 lineto
  1838 4529 lineto
  2043 4390 lineto
  2247 4281 lineto
  2451 4088 lineto
  2655 3977 lineto
  2860 3832 lineto
  3064 3511 lineto
  3268 2866 lineto
  3472 1915 lineto
  3677 837 lineto
  3881 715 lineto
  4085 708 lineto
  4289 704 lineto
  4494 702 lineto
  4698 696 lineto
  4902 693 lineto
  5106 690 lineto
  5311 686 lineto
  5515 684 lineto
  5719 684 lineto
  5923 680 lineto
  6128 654 lineto
  6332 578 lineto
  6536 578 lineto
  6740 578 lineto
stroke
[] 0 setdash 8 setlinewidth 1226 4542 24 mark3
1430 4542 24 mark3
1634 4542 24 mark3
1838 4432 24 mark3
2043 3752 24 mark3
2247 3203 24 mark3
2451 3069 24 mark3
2655 2865 24 mark3
2860 2745 24 mark3
3064 2620 24 mark3
3268 1344 24 mark3
3472 815 24 mark3
3677 764 24 mark3
3881 673 24 mark3
4085 619 24 mark3
4289 608 24 mark3
4494 604 24 mark3
4698 602 24 mark3
4902 600 24 mark3
5106 600 24 mark3
5311 599 24 mark3
5515 599 24 mark3
5719 599 24 mark3
5923 578 24 mark3
6128 578 24 mark3
6332 578 24 mark3
6536 578 24 mark3
6740 578 24 mark3
14 setlinewidth
[75] 0 setdash
newpath
  1226 4542 moveto
  1430 4542 lineto
  1634 4542 lineto
  1838 4432 lineto
  2043 3752 lineto
  2247 3203 lineto
  2451 3069 lineto
  2655 2865 lineto
  2860 2745 lineto
  3064 2620 lineto
  3268 1344 lineto
  3472 815 lineto
  3677 764 lineto
  3881 673 lineto
  4085 619 lineto
  4289 608 lineto
  4494 604 lineto
  4698 602 lineto
  4902 600 lineto
  5106 600 lineto
  5311 599 lineto
  5515 599 lineto
  5719 599 lineto
  5923 578 lineto
  6128 578 lineto
  6332 578 lineto
  6536 578 lineto
  6740 578 lineto
stroke
[] 0 setdash 8 setlinewidth 1226 4542 24 mark4
1430 4542 24 mark4
1634 4542 24 mark4
1838 4542 24 mark4
2043 4542 24 mark4
2247 4542 24 mark4
2451 4542 24 mark4
2655 4542 24 mark4
2860 4542 24 mark4
3064 4542 24 mark4
3268 4542 24 mark4
3472 4542 24 mark4
3677 4542 24 mark4
3881 4542 24 mark4
4085 4542 24 mark4
4289 4542 24 mark4
4494 4542 24 mark4
4698 4542 24 mark4
4902 4542 24 mark4
5106 4542 24 mark4
5311 4384 24 mark4
5515 4188 24 mark4
5719 3854 24 mark4
5923 3515 24 mark4
6128 2502 24 mark4
6332 818 24 mark4
6536 578 24 mark4
6740 578 24 mark4
14 setlinewidth
[100] 0 setdash
newpath
  1226 4542 moveto
  1430 4542 lineto
  1634 4542 lineto
  1838 4542 lineto
  2043 4542 lineto
  2247 4542 lineto
  2451 4542 lineto
  2655 4542 lineto
  2860 4542 lineto
  3064 4542 lineto
  3268 4542 lineto
  3472 4542 lineto
  3677 4542 lineto
  3881 4542 lineto
  4085 4542 lineto
  4289 4542 lineto
  4494 4542 lineto
  4698 4542 lineto
  4902 4542 lineto
  5106 4542 lineto
  5311 4384 lineto
  5515 4188 lineto
  5719 3854 lineto
  5923 3515 lineto
  6128 2502 lineto
  6332 818 lineto
  6536 578 lineto
  6740 578 lineto
stroke
%%EndDocument
 0 0 a
 endTexFig
207 1148 a Fe(Figure)17 b(8:)40 b Fk(F)m(raction)14 b(of)f(ob)r(jects)j
(surviving)f(as)f(a)f(function)i(of)e(age)h(in)g(\014v)o(e)h(test)f
(programs.)75 1281 y Fp(that)19 b(ma)o(y)e(dev)o(elop)j(as)f(the)g(true)g(p)q
(oten)o(tial)f(of)h(conserv)m(ativ)o(e)g(garbage)g(collection)f(b)q(ecomes)h
(clear,)75 1377 y(it)f(is)g(lik)o(ely)f(that)h(m)o(uc)o(h)f(b)q(etter)h
(conserv)m(ativ)o(e)g(collection)g(algorithms,)d(with)j(increased)h(lo)q
(calit)o(y)d(of)75 1473 y(reference)g(and)f(decreased)h(address)f(space)h
(needs,)g(will)d(b)q(e)j(disco)o(v)o(ered.)146 1582 y(In)22
b(this)f(pap)q(er)h(I)g(ha)o(v)o(e)f(measured)g(the)g(p)q(erformance)g(of)g
(a)g(conserv)m(ativ)o(e)g(garbage)g(collection)75 1678 y(algorithm)14
b(and)j(found)g(it)f(to)g(b)q(e)h(comparable)e(to)h(that)g(of)h(the)f(b)q
(est)h(explicit)f(storage)g(managemen)o(t)75 1774 y(algorithms.)j(As)c(ob)s
(ject-orien)o(ted)g(programming)d(b)q(ecomes)k(widely)f(used,)h(tec)o
(hniques)g(that)f(reduce)75 1870 y(the)i(complexit)o(y)d(of)i(managing)e
(heap-allo)q(cated)i(storage)f(will)g(b)q(ecome)h(more)f(imp)q(ortan)o(t.)21
b(E\016cien)o(t)75 1966 y(conserv)m(ativ)o(e)12 b(garbage)g(collection)f
(algorithms)f(are)i(a)o(v)m(ailable)f(for)h(use)h(righ)o(t)e(no)o(w)h(and,)h
(in)g(the)f(future,)75 2062 y(are)21 b(lik)o(ely)g(to)g(increase)g(in)h
(e\016ciency)g(as)f(b)q(etter)h(algorithms)d(are)i(disco)o(v)o(ered.)39
b(C)21 b(programmers)75 2158 y(should)c(no)o(w)f(seriously)g(consider)h
(using)g(conserv)m(ativ)o(e)f(garbage)g(collection)g(instead)h(of)f(mallo)q
(c/free)75 2254 y(in)f(programs)e(they)i(write.)952 2700 y(32)p
eop
%%Page: 33 35
bop 75 42 a Fj(7)69 b(Ac)n(kno)n(wledgemen)n(ts)75 195 y Fp(I)18
b(w)o(ould)g(lik)o(e)f(to)h(thank)f(Da)o(vid)h(Barrett)f(for)g(his)h
(assistance)f(in)h(collecting)f(the)h(data)g(presen)o(ted)g(in)75
291 y(this)d(pap)q(ers)h(and)g(for)f(insigh)o(tful)f(commen)o(ts)f(on)i
(drafts)g(of)g(this)g(pap)q(er.)21 b(I)16 b(w)o(ould)f(also)g(lik)o(e)f(to)h
(thank)75 387 y(Hans)f(Bo)q(ehm,)g(Mik)o(e)f(Haertel,)h(P)o(aul)f
(Hil\014nger,)h(James)f(Larus,)h(Edw)o(ard)g(Gehringer,)f(Jo)q(el)i
(Bartlett,)75 483 y(John)g(Ellis,)e(Mic)o(hael)g(Lam,)g(Ken)j(Rimey)l(,)d
(Urs)h(Ho)q(elzle,)h(P)o(eter)e(Canning,)h(and)h(Kinson)f(Ho)h(for)e(their)75
579 y(commen)o(ts.)j(This)c(material)d(is)i(based)h(up)q(on)h(w)o(ork)e(supp)
q(orted)h(b)o(y)g(the)g(National)e(Science)j(F)l(oundation)75
675 y(under)j(Gran)o(t)e(No.)20 b(CCR-9121269.)75 829 y Fj(References)98
943 y Fp([1])h(Andrew)30 b(W.)e(App)q(el.)61 b(Simple)28 b(generational)f
(garbage)h(collection)g(and)h(fast)f(allo)q(cation.)168 999
y Fb(Softwar)n(e|Pr)n(actic)n(e)17 b(and)f(Exp)n(erienc)n(e)p
Fp(,)d(19\(2\):171{183,)e(F)l(ebruary)k(1989.)98 1090 y([2])21
b(Jo)q(el)14 b(Bartlett.)h(Mostly-cop)o(ying)c(garbage)h(collection)g(pic)o
(ks)h(up)h(generations)e(and)h(C++.)k(T)l(ec)o(h-)168 1147
y(nical)11 b(Rep)q(ort)h(TN-12,)f(Digital)f(Equipmen)o(t)g(Corp)q(oration)g
(W)l(estern)h(Researc)o(h)h(Lab)q(ortory)l(,)f(P)o(alo)168
1203 y(Alto,)j(CA,)h(Octob)q(er)h(1989.)98 1294 y([3])21 b(Jo)q(el)15
b(Bartlett.)j(Commen)o(t)11 b(on)k(his)f(exp)q(eriences)i(with)e(soft)o(w)o
(are-caused)f(total)g(system)g(failures.)168 1350 y(Priv)m(ate)i(Comm)o
(unicati)o(on,)d(Ma)o(y)i(1992.)98 1441 y([4])21 b(Jo)q(el)h(F.)g(Bartlett.)
38 b(Compacting)20 b(garbage)h(collection)f(with)h(am)o(biguous)f(ro)q(ots.)
39 b(T)l(ec)o(hnical)168 1497 y(Rep)q(ort)16 b(88/2,)d(Digital)g(Equipmen)o
(t)h(Corp)q(oration)f(W)l(estern)i(Researc)o(h)g(Lab)q(ortory)l(,)g(P)o(alo)e
(Alto,)168 1554 y(CA,)i(F)l(ebruary)g(1988.)98 1645 y([5])21
b(H.)k(Bo)q(ehm)f(and)h(M.)f(W)l(eiser.)48 b(Garbage)24 b(collection)g(in)h
(an)f(unco)q(op)q(erativ)o(e)h(en)o(vironmen)o(t.)168 1701
y Fb(Softwar)n(e|Pr)n(actic)n(e)17 b(and)f(Exp)n(erienc)n(e)p
Fp(,)d(pages)i(807{820,)e(Septem)o(b)q(er)i(1988.)98 1792 y([6])21
b(Hans-J)15 b(Bo)q(ehm)e(and)i(Alan)e(Demers.)k(Conserv)m(ativ)o(e)c(garbage)
g(collector)g(implemen)o(tati)o(on)e(do)q(c-)168 1848 y(umen)o(tation.)32
b(Reference)22 b(to)d(other)g(implemen)o(tatio)o(ns)f(of)h(conserv)m(ativ)o
(e)g(garbage)h(collection.)168 1905 y(F)l(rom)14 b(do)q(cumen)o(tation)f(of)i
(v)o(ersion)g(1.6)f(of)h(the)g(soft)o(w)o(are,)e(1989.)98 1996
y([7])21 b(G.)j(Bozman,)i(W.)e(Buco,)j(T.)d(P)l(.)g(Daly)l(,)i(and)f(W.)f(H.)
g(T)l(etzla\013.)47 b(Analysis)24 b(of)g(free-storage)168 2052
y(algorithms|revisited.)17 b Fb(IBM)e(Systems)h(Journal)p Fp(,)f
(23\(1\):44{64)o(,)d(1984.)98 2143 y([8])21 b(R.)e(P)l(.)f(Bren)o(t.)30
b(E\016cien)o(t)18 b(implemenatio)o(n)e(of)i(a)g(\014rst-\014t)g(strategy)g
(for)g(dynamic)f(storage)g(allo-)168 2199 y(cation.)29 b Fb(A)o(CM)19
b(T)m(r)n(ansactions)e(on)i(Pr)n(o)n(gr)n(amming)g(L)n(anguages)f(and)h
(Systems)p Fp(,)f(11\(3\):388{403)o(,)168 2256 y(July)e(1989.)98
2346 y([9])21 b(Mic)o(hael)15 b(Caplinger.)20 b(A)c(memory)d(allo)q(cator)g
(with)i(garbage)g(collection)f(for)h(C.)21 b(In)16 b Fb(Pr)n(o)n(c)n(e)n(e)n
(dings)168 2403 y(of)h(the)f(Winter)h(1988)g(USENIX)d(Confer)n(enc)n(e)p
Fp(,)f(pages)i(325{330,)e(Dallas,)g(TX,)i(F)l(ebruary)g(1988.)75
2494 y([10])21 b(Jacques)12 b(Cohen.)i(Garbage)c(collection)g(of)h(link)o(ed)
g(data)g(structures.)i Fb(A)o(CM)e(Computing)i(Surveys)p Fp(,)168
2550 y(13\(3\):341{367,)e(Septem)o(b)q(er)k(1981.)952 2700
y(33)p eop
%%Page: 34 36
bop 75 42 a Fp([11])21 b(Alan)g(Demers,)f(Mark)g(W)l(eiser,)i(Barry)e(Ha)o(y)
o(es,)h(Hans)g(Bo)q(ehm,)g(Daniel)f(Bobro)o(w,)h(and)f(Scott)168
98 y(Shenk)o(er.)43 b(Com)o(bining)20 b(generational)h(and)i(conserv)m(ativ)o
(e)f(garbage)g(collection:)33 b(F)l(ramew)o(ork)168 154 y(and)19
b(implemen)o(tat)o(ions.)25 b(In)18 b Fb(Confer)n(enc)n(e)f(R)n(e)n(c)n(or)n
(d)h(of)h(the)g(Sevente)n(enth)e(A)o(CM)g(Symp)n(osium)i(on)168
211 y(Principles)c(of)i(Pr)n(o)n(gr)n(amming)e(L)n(anguages)p
Fp(,)f(pages)h(261{269,)e(Jan)o(uary)i(1990.)75 305 y([12])21
b(Dirk)12 b(Grun)o(w)o(ald)g(and)h(Benjamin)f(Zorn.)k Fa(CustoMalloc)p
Fp(:)i(E\016cien)o(t)12 b(syn)o(thesized)h(memory)d(al-)168
361 y(lo)q(cators.)i(T)l(ec)o(hnical)f(Rep)q(ort)g(CS-CS-602-92,)f(Departmen)
o(t)f(of)i(Computer)e(Science,)j(Univ)o(ersit)o(y)168 418 y(of)j(Colorado,)e
(Boulder,)i(Boulder,)g(CO,)g(July)g(1992.)75 511 y([13])21
b(Mik)o(e)16 b(Haertel.)24 b(Description)15 b(of)i(GNU)f(mallo)q(c)f
(implemen)o(tat)o(ion.)21 b(P)o(ersonal)16 b(comm)o(unicati)o(on,)168
568 y(August)g(1991.)75 662 y([14])21 b(P)o(aul)g(N.)g(Hil\014nger.)37
b(Exp)q(erimen)o(tal)20 b(heuristic)g(mark-and-sw)o(eep)h(garbage)f
(collector)g(for)h(C.)168 718 y(Do)q(cumen)o(tation)14 b(of)g(unpublished)j
(implemen)o(tat)o(ion,)12 b(1989.)75 812 y([15])21 b(Mark)d(D.)f(Hill.)28
b Fb(Asp)n(e)n(cts)18 b(of)h(Cache)g(Memory)h(and)f(Instruction)f(Bu\013er)h
(Performanc)n(e)p Fp(.)29 b(PhD)168 868 y(thesis,)11 b(Univ)o(ersit)o(y)f(of)
h(California)d(at)j(Berk)o(eley)l(,)g(Berk)o(eley)l(,)h(CA,)e(No)o(v)o(em)o
(b)q(er)g(1987.)i(Also)e(app)q(ears)168 925 y(as)15 b(tec)o(h)g(rep)q(ort)g
(UCB/CSD)g(87/381.)75 1019 y([16])21 b(Chris)12 b(Kingsley)l(.)k(Description)
c(of)g(a)g(v)o(ery)g(fast)g(storage)g(allo)q(cator.)h(Do)q(cumen)o(tation)e
(of)h(4.2)g(BSD)168 1075 y(Unix)k(mallo)q(c)d(implemen)o(tat)o(ion,)f(F)l
(ebruary)j(1982.)75 1169 y([17])21 b(Donald)d(E.)f(Kn)o(uth.)29
b Fb(F)m(undamental)18 b(A)o(lgorithms)p Fp(,)g(v)o(olume)e(1)i(of)f
Fb(The)i(A)o(rt)f(of)h(Computer)h(Pr)n(o-)168 1225 y(gr)n(amming)p
Fp(,)j(c)o(hapter)e(2,)i(pages)e(435{451.)37 b(Addison)22 b(W)l(esley)l(,)g
(Reading,)h(MA,)e(2nd)h(edition,)168 1282 y(1973.)75 1376 y([18])f(Da)o(vid)c
(G.)f(Korn)i(and)f(Kiem-Phong)f(V)l(o.)26 b(In)18 b(searc)o(h)f(of)g(a)g(b)q
(etter)g(mallo)q(c.)24 b(In)18 b Fb(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)168
1432 y(the)h(Summer)g(1985)g(USENIX)d(Confer)n(enc)n(e)p Fp(,)f(pages)i
(489{506,)e(1985.)75 1526 y([19])21 b(James)f(R.)h(Larus.)37
b(Abstract)21 b(execution:)31 b(A)21 b(tec)o(hnique)g(for)f(e\016cien)o(tly)h
(tracing)f(programs.)168 1582 y Fb(Softwar)n(e|Pr)n(actic)n(e)d(and)f(Exp)n
(erienc)n(e)p Fp(,)d(20\(12\):1241{12)o(58,)f(Decem)o(b)q(er)i(1990.)75
1676 y([20])21 b(Henry)13 b(Lieb)q(erman)e(and)i(Carl)d(Hewitt.)k(A)e
(real-time)e(garbage)h(collector)g(based)h(on)g(the)g(lifetimes)168
1733 y(of)j(ob)s(jects.)k Fb(Communic)n(ations)d(of)g(the)h(A)o(CM)p
Fp(,)c(26\(6\):419{429,)f(June)k(1983.)75 1826 y([21])21 b(Da)o(vid)12
b(A.)g(Mo)q(on.)j(Garbage)c(collection)h(in)g(a)g(large)g(Lisp)g(system.)i
(In)f Fb(Confer)n(enc)n(e)f(R)n(e)n(c)n(or)n(d)h(of)h(the)168
1883 y(1984)j(A)o(CM)d(Symp)n(osium)h(on)g(LISP)e(and)j(F)m(unctional)e(Pr)n
(o)n(gr)n(amming)p Fp(,)f(pages)h(235{246,)e(Austin,)168 1939
y(T)l(exas,)j(August)g(1984.)75 2033 y([22])21 b(Ro)q(dney)d(R.)f(Oldeho)q
(eft)h(and)f(Stephen)h(J.)e(Allan.)24 b(Adaptiv)o(e)17 b(exact-\014t)f
(storage)g(managemen)o(t.)168 2090 y Fb(Communic)n(ations)g(of)g(the)h(A)o
(CM)p Fp(,)d(28\(5\):506{5)o(11,)e(Ma)o(y)i(1985.)75 2183 y([23])21
b(P)o(aul)e(Ro)o(vner.)33 b(On)20 b(adding)g(garbage)e(collection)h(and)g
(run)o(time)f(t)o(yp)q(es)i(to)f(a)g(strongly-t)o(yp)q(ed,)168
2240 y(statically)14 b(c)o(hec)o(k)o(ed,)i(concurren)o(t)g(language.)21
b(T)l(ec)o(hnical)15 b(Rep)q(ort)i(CSL-84-7,)e(Xero)o(x)g(P)o(alo)g(Alto)168
2296 y(Researc)o(h)h(Cen)o(ter,)f(P)o(alo)e(Alto,)h(California,)f(July)i
(1985.)75 2390 y([24])21 b(C.)10 b(J.)h(Stephenson.)i(F)l(ast)c(\014ts:)18
b(New)10 b(metho)q(ds)g(for)g(dynamic)f(storage)g(allo)q(cation.)h(In)h
Fb(Pr)n(o)n(c)n(e)n(e)n(dings)168 2447 y(of)18 b(the)g(Ninth)f(A)o(CM)f(Symp)
n(osium)i(on)f(Op)n(er)n(ating)f(System)h(Principles)p Fp(,)e(pages)h(30{32,)
f(Bretton)168 2503 y(W)l(o)q(o)q(ds,)g(NH,)g(Octob)q(er)h(1983.)952
2700 y(34)p eop
%%Page: 35 37
bop 75 42 a Fp([25])21 b(Sun)g(Microsystems,)d(Moun)o(tain)g(View,)i(CA.)33
b Fb(Unix)20 b(Manual)g(Page)g(for)h(mal)r(lo)n(c)p Fp(,)f(SunOS)h(4.1)168
98 y(edition,)15 b(1990.)75 192 y([26])21 b(Da)o(vid)10 b(Ungar.)j
(Generation)d(sca)o(v)o(enging:)17 b(A)11 b(non-disruptiv)o(e)g(high)f(p)q
(erformance)h(storage)e(recla-)168 248 y(mation)g(algorithm.)g(In)i
Fb(SIGSOFT/SIGPLAN)e(Pr)n(actic)n(al)i(Pr)n(o)n(gr)n(amming)g(Envir)n
(onments)f(Con-)168 305 y(fer)n(enc)n(e)p Fp(,)k(pages)h(157{167,)e(April)h
(1984.)75 399 y([27])21 b(Jean)g(V)l(uillemin.)32 b(A)19 b(unifying)h(lo)q
(ok)f(at)g(data)g(structures.)33 b Fb(Communic)n(ations)20
b(of)h(the)f(A)o(CM)p Fp(,)168 455 y(23\(4\):229{239,)11 b(April)k(1980.)75
549 y([28])21 b(Benjamin)g(Zorn.)39 b Fb(Comp)n(ar)n(ative)23
b(Performanc)n(e)f(Evaluation)g(of)h(Garb)n(age)f(Col)r(le)n(ction)f(A)o
(lgo-)168 605 y(rithms)p Fp(.)40 b(PhD)21 b(thesis,)h(Univ)o(ersit)o(y)f(of)g
(California)e(at)i(Berk)o(eley)l(,)i(Berk)o(eley)l(,)g(CA,)e(No)o(v)o(em)o(b)
q(er)168 662 y(1989.)e(Also)c(app)q(ears)g(as)g(tec)o(h)g(rep)q(ort)g
(UCB/CSD)g(89/544.)75 756 y([29])21 b(Benjamin)15 b(Zorn.)20
b(The)c(e\013ect)f(of)g(garbage)g(collection)f(on)h(cac)o(he)h(p)q
(erformance.)k(T)l(ec)o(hnical)15 b(Re-)168 812 y(p)q(ort)i(CU-CS-528-91,)f
(Departmen)o(t)f(of)i(Computer)e(Science,)j(Univ)o(ersit)o(y)e(of)h
(Colorado,)e(Boul-)168 868 y(der,)g(Boulder,)g(CO,)g(Ma)o(y)g(1991.)952
2700 y(35)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
