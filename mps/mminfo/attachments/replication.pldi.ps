%!PS-Adobe-2.0
%%Creator: dvips by Radical Eye Software
%%Title: pldi93.dvi
%%Pages: 10 1
%%BoundingBox: 0 0 612 792
%%EndComments
%%BeginDocument: tex.pro
/TeXDict 200 dict def TeXDict begin /bdf{bind def}def /bop-aux{}bdf /@rigin{
/@page-height exch def /@page-width exch def 72 Resolution div dup neg scale
translate}bdf /@letter{Resolution dup -10 mul 8.5 11 @rigin}bdf /@landscape{[
0 1 -1 0 0 0]concat Resolution dup 8.5 11 @rigin}bdf /@a4{Resolution dup
-10.6929133858 mul 21 2.54 div 29.7 2.54 div @rigin}bdf /@legal{Resolution dup
-13 mul 8.5 14 @rigin}bdf /@11x17{statusdict /11x17tray known{statusdict begin
11x17tray end}if Resolution dup -16 mul 11 17 @rigin}bdf /@manualfeed{
statusdict /manualfeed true put}bdf /@copies{/#copies exch def}bdf /@draft{
/bop-aux{gsave initmatrix 72 dup scale @page-width 2 div @page-height 2 div
translate @page-height @page-width atan rotate /Helvetica-Bold findfont 2
scalefont setfont(DRAFT)dup stringwidth pop 2 div neg -1 moveto .95 setgray
show grestore}bdf}bdf /@FontMatrix[1 0 0 -1 0 0]def /@FontBBox[0 0 0 0]def
/dmystr(ZZf@@@)def /newname{dmystr cvn}bdf /df{/fontname exch def dmystr 2
fontname cvx(@@@@)cvs putinterval newname 7 dict def newname load begin
/FontType 3 def /FontMatrix @FontMatrix def /FontBBox @FontBBox def /BitMaps
256 array def /BuildChar{CharBuilder}def /Encoding IdentityEncoding def end
fontname{/foo setfont}2 array copy cvx def fontname load 0 dmystr 6 string
copy cvn cvx put}bdf /dfe{newname dup load definefont setfont}bdf /ch-image{
ch-data 0 get}bdf /ch-width{ch-data 1 get}bdf /ch-height{ch-data 2 get}bdf
/ch-xoff{ch-data 3 get}bdf /ch-yoff{ch-data 4 get}bdf /ch-dx{ch-data 5 get}
bdf /CharBuilder{save 3 1 roll exch /BitMaps get exch get /ch-data exch def
ch-data null ne{ch-dx 0 ch-xoff ch-yoff neg ch-xoff ch-width add ch-height
ch-yoff sub setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub
ch-height ch-yoff sub .1 add]{ch-image}imagemask}if restore}bdf /dc{/ch-code
exch def /ch-data exch def newname load /BitMaps get ch-code ch-data put}bdf
/bop{gsave /SaveImage save def /bop-aux load exec 0 0 moveto}bdf /eop{clear
SaveImage restore showpage grestore}bdf /@start{/Resolution exch def
/IdentityEncoding 256 array def 0 1 255{IdentityEncoding exch 1 string dup 0 3
index put cvn put}for}bdf /p{show}bdf /RuleMatrix[1 0 0 -1 -.1 -.1]def
/BlackDots 8 string def /v{gsave currentpoint translate false RuleMatrix{
BlackDots}imagemask grestore}bdf /a{moveto}bdf /delta 0 def /tail{dup /delta
exch def 0 rmoveto}bdf /b{exch show tail}bdf /c{show delta 4 sub tail}bdf /d{
show delta 3 sub tail}bdf /e{show delta 2 sub tail}bdf /f{show delta 1 sub
tail}bdf /g{show delta 0 rmoveto}bdf /h{show delta 1 add tail}bdf /i{show
delta 2 add tail}bdf /j{show delta 3 add tail}bdf /k{show delta 4 add tail}
bdf /l{show -4 0 rmoveto}bdf /m{show -3 0 rmoveto}bdf /n{show -2 0 rmoveto}
bdf /o{show -1 0 rmoveto}bdf /q{show 1 0 rmoveto}bdf /r{show 2 0 rmoveto}bdf
/s{show 3 0 rmoveto}bdf /t{show 4 0 rmoveto}bdf /w{0 rmoveto}bdf /x{0 exch
rmoveto}bdf /y{3 2 roll show moveto}bdf /bos{/section save def}bdf /eos{clear
section restore}bdf end
%%EndDocument
%%BeginDocument: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm exch def
findfont dup length 1 add dict /newfont exch def{1 index /FID ne{newfont 3 1
roll put}{pop pop}ifelse}forall 256 dict begin newfont /Encoding get 255 -1 0{
2 copy get 4 -1 roll 1000 mul PixPerEm div def pop}for pop newfont /Metrics
currentdict put end /fontname exch def dmystr 2 fontname cvx(@@@@)cvs
putinterval newname dup newfont definefont[PixPerEm 0 0 PixPerEm neg 0 0]
makefont def fontname{/foo setfont}2 array copy cvx def fontname load 0 dmystr
6 string copy cvn cvx put}bdf /ObliqueSlant{dup sin exch cos div neg}bdf
/SlantFont{/foo exch def[1 0 foo 1 0 0]TransFont}bdf /ExtendFont{/foo exch def
258 2 roll 0 1 255{pop foo div 256 1 roll}for 258 -2 roll[foo 0 0 1 0 0]
TransFont}bdf /TransFont{exch findfont exch makefont dup length dict /newfont
exch def{1 index /FID ne{newfont 3 1 roll put}{pop pop}ifelse}forall dup
newfont definefont pop}bdf end
%%EndDocument
%%BeginDocument: special.pro
TeXDict begin /SDict 200 dict def SDict begin /@SpecialDefaults{/hs 612 def
/vs 792 def /ho 0 def /vo 0 def /hsc 1 def /vsc 1 def /ang 0 def /CLIP false
def /BBcalc false def}bdf /@scaleunit 1 def /@hscale{@scaleunit div /hsc exch
def}bdf /@vscale{@scaleunit div /vsc exch def}bdf /@hsize{/hs exch def /CLIP
true def}bdf /@vsize{/vs exch def /CLIP true def}bdf /@hoffset{/ho exch def}
bdf /@voffset{/vo exch def}bdf /@angle{/ang exch def}bdf /@rwi{10 div /rwi
exch def}bdf /@llx{/llx exch def}bdf /@lly{/lly exch def}bdf /@urx{/urx exch
def}bdf /@ury{/ury exch def /BBcalc true def}bdf end /@MacSetUp{userdict /md
known{userdict /md get type /dicttype eq{md begin /letter{}def /note{}def
/legal{}def /od{txpose 1 0 mtx defaultmatrix dtransform exch atan/pa exch def
newpath clippath mark{transform{itransform moveto}}{transform{itransform
lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39 0 put
10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}def /txpose{pxs pys
scale ppr aload pop por{noflips{pop exch neg exch translate pop 1 -1 scale}if
xflip yflip and{pop exch neg exch translate 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg translate}if xflip yflip
not and{pop exch neg exch translate pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 translate}if yflip xflip not and{ppr 1 get neg ppr 0 get neg translate}
if}{noflips{translate pop pop 270 rotate 1 -1 scale}if xflip yflip and{
translate pop pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2
get ppr 0 get neg sub neg translate}if xflip yflip not and{translate pop pop
90 rotate ppr 3 get ppr 1 get neg sub neg 0 translate}if yflip xflip not and{
translate pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 exch translate}
if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2
copy translate .96 dup scale neg exch neg exch translate}if}def /cp{pop pop
showpage pm restore}def end}if}if}def /psf$TeXscale{65536 div}def /startTexFig
{/psf$SavedState save def userdict maxlength dict begin Resolution 72 div dup
neg scale currentpoint translate /psf$ury exch psf$TeXscale def /psf$urx exch
psf$TeXscale def /psf$lly exch psf$TeXscale def /psf$llx exch psf$TeXscale def
/psf$y exch psf$TeXscale def /psf$x exch psf$TeXscale def currentpoint /psf$cy
exch def /psf$cx exch def /psf$sx psf$x psf$urx psf$llx sub div def /psf$sy
psf$y psf$ury psf$lly sub div def psf$sx psf$sy scale psf$cx psf$sx div
psf$llx sub psf$cy psf$sy div psf$ury sub translate /showpage{}def /erasepage{
}def /copypage{}def @MacSetUp}def /doclip{psf$llx psf$lly psf$urx psf$ury
currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll exch lineto
exch lineto exch lineto closepath clip newpath moveto}def /endTexFig{end
psf$SavedState restore}def /@beginspecial{SDict begin /SpecialSave save def
Resolution 72 div dup neg scale currentpoint translate @SpecialDefaults}bdf
/@setspecial{CLIP{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0
rlineto closepath clip}{initclip}ifelse ho vo translate hsc vsc scale ang
rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg translate}if
/showpage{}def newpath}bdf /@endspecial{clear SpecialSave restore end}bdf
/@defspecial{SDict begin}bdf /@fedspecial{end}bdf /li{lineto}bdf /rl{rlineto}
bdf /rc{rcurveto}bdf /np{/SaveX currentpoint /SaveY exch def def newpath}bdf
/st{stroke SaveX SaveY moveto}bdf /fil{fill SaveX SaveY moveto}bdf /ellipse{
/endangle exch def /startangle exch def /yrad exch def /xrad exch def
/savematrix matrix currentmatrix def translate xrad yrad scale 0 0 1
startangle endangle arc savematrix setmatrix}bdf end
%%EndDocument
TeXDict begin 300 @start /fa 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 9 12 16 19 19 31 29 12 12 12 19 25 9 12 9 10 19 19 19 19 19 19
19 19 19 19 12 12 25 25 25 19 34 23 23 25 27 23 23 27 27 12 17 25 21 31 25 27
23 27 23 19 21 27 23 31 23 21 21 15 10 15 16 19 12 19 19 17 19 17 10 19 19 10
10 17 10 27 19 19 19 19 15 15 10 19 17 25 17 17 15 15 10 15 20 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 19 19 6 19 19 19 19 8
21 19 12 12 19 19 0 19 19 19 9 0 20 13 12 21 21 19 33 37 0 19 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0
21 27 35 12 0 0 0 0 0 25 0 0 0 10 0 0 10 19 25 19 0 0 0 0 /Times-Italic 1000
589824 rf /fb 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
9 12 15 19 19 31 29 12 12 12 19 21 9 12 9 10 19 19 19 19 19 19 19 19 19 19 10
10 21 21 21 17 34 27 25 25 27 23 21 27 27 12 15 27 23 33 27 27 21 27 25 21 23
27 27 35 27 27 23 12 10 12 18 19 12 17 19 17 19 17 12 19 19 10 10 19 10 29 19
19 19 19 12 15 10 19 19 27 19 19 17 18 7 18 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 19 19 6 19 19 19 19 7 17 19 12 12 21 21
0 19 19 19 9 0 17 13 12 17 17 19 37 37 0 17 0 12 12 12 12 12 12 12 12 0 12 12
0 12 12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0 23 27 33 12 0 0
0 0 0 25 0 0 0 10 0 0 10 19 27 19 0 0 0 0 /Times-Roman 1000 589824 rf /fc df[<
03C00FF01FF83FFC7FFE7FFEFFFFFFFFFFFFFFFF7FFE7FFE3FFC1FF80FF003C0>16 16 2 -2 21
]15 dc dfe /fd 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
12 17 28 25 25 50 41 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25 25
17 17 28 28 28 25 46 36 33 36 36 33 30 39 39 19 25 39 33 47 36 39 30 39 36 28
33 36 36 50 36 36 33 17 14 17 29 25 17 25 28 22 28 22 17 25 28 14 17 28 14 41
28 25 28 28 22 19 17 28 25 36 25 25 22 20 11 20 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 14 25 25 17 17
28 28 0 25 25 25 12 0 27 17 17 25 25 25 50 50 0 25 0 17 17 17 17 17 17 17 17 0
17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 15 0 0 0 0 33 39 50
16 0 0 0 0 0 36 0 0 0 14 0 0 14 25 36 28 0 0 0 0 /Times-Bold 1000 786432 rf
/fe 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17
21 21 35 32 14 14 14 21 28 10 14 10 12 21 21 21 21 21 21 21 21 21 21 14 14 28
28 28 21 38 25 25 28 30 25 25 30 30 14 18 28 23 35 28 30 25 30 25 21 23 30 25
35 25 23 23 16 12 16 18 21 14 21 21 18 21 18 12 21 21 12 12 18 12 30 21 21 21
21 16 16 12 21 18 28 18 18 16 17 11 17 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 21 21 7 21 21 21 21 9 23 21 14 14 21 21 0
21 21 21 10 0 22 15 14 23 23 21 37 42 0 21 0 14 14 14 14 14 14 14 14 0 14 14 0
14 14 14 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0 0 23 30 39 13 0 0 0
0 0 28 0 0 0 12 0 0 12 21 28 21 0 0 0 0 /Times-Italic 1000 655360 rf /ff 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26
11 11 11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22
22 24 20 18 24 24 11 13 24 20 30 24 24 18 24 22 18 20 24 24 31 24 24 20 11 9
11 16 17 11 15 17 15 17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24
17 17 15 16 7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11
15 15 17 33 33 0 15 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17
24 17 0 0 0 0 /Times-Roman 1000 524288 rf /fg 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 23 21 21 42 35 14 14 14 21 24 10 14 10
12 21 21 21 21 21 21 21 21 21 21 14 14 24 24 24 21 39 30 28 30 30 28 25 32 32
16 21 32 28 39 30 32 25 32 30 23 28 30 30 42 30 30 28 14 12 14 24 21 14 21 23
18 23 18 14 21 23 12 14 23 12 35 23 21 23 23 18 16 14 23 21 30 21 21 18 16 9
16 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14
21 21 7 21 21 21 21 12 21 21 14 14 23 23 0 21 21 21 10 0 22 15 14 21 21 21 42
42 0 21 0 14 14 14 14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 42 0 12 0 0 0 0 28 32 42 14 0 0 0 0 0 30 0 0 0 12 0 0 12 21 30 23 0
0 0 0 /Times-Bold 1000 655360 rf /fh 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21
21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23 30 30 14 16 30 25
37 30 30 23 30 28 23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14
21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21
21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14
14 14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0
11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
/Times-Roman 1000 655360 rf /fi 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 15 19 32 29 29 58 48 19 19 19 29 33 15 19 15 16 29 29 29 29
29 29 29 29 29 29 19 19 33 33 33 29 54 42 39 42 42 39 36 45 45 23 29 45 39 55
42 45 36 45 42 32 39 42 42 58 42 42 39 19 16 19 34 29 19 29 32 26 32 26 19 29
32 16 19 32 16 48 32 29 32 32 26 23 19 32 29 42 29 29 26 23 13 23 30 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 29 29 10 29 29 29
29 16 29 29 19 19 32 32 0 29 29 29 15 0 31 20 19 29 29 29 58 58 0 29 0 19 19
19 19 19 19 19 19 0 19 19 0 19 19 19 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58 0
17 0 0 0 0 39 45 58 19 0 0 0 0 0 42 0 0 0 16 0 0 16 29 42 32 0 0 0 0
/Times-Bold 1000 917504 rf /fj 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 12 17 20 25 25 41 39 17 17 17 25 28 12 17 12 14 25 25 25 25 25
25 25 25 25 25 14 14 28 28 28 22 46 36 33 33 36 30 28 36 36 17 19 36 30 44 36
36 28 36 33 28 30 36 36 47 36 36 30 17 14 17 23 25 17 22 25 22 25 22 17 25 25
14 14 25 14 39 25 25 25 25 17 19 14 25 25 36 25 25 22 24 10 24 27 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25
9 22 25 17 17 28 28 0 25 25 25 12 0 23 17 17 22 22 25 50 50 0 22 0 17 17 17 17
17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0
0 0 30 36 44 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 36 25 0 0 0 0 /Times-Roman
1000 786432 rf /fk 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 18 23 39 35 35 71 59 23 23 23 35 40 18 23 18 20 35 35 35 35 35 35 35 35 35
35 23 23 40 40 40 35 66 51 47 51 51 47 43 55 55 27 35 55 47 67 51 55 43 55 51
39 47 51 51 71 51 51 47 23 20 23 41 35 23 35 39 31 39 31 23 35 39 20 23 39 20
59 39 35 39 39 31 27 23 39 35 51 35 35 31 28 16 28 37 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 35 35 12 35 35 35 35 20 35 35
23 23 39 39 0 35 35 35 18 0 38 25 23 35 35 35 71 71 0 35 0 23 23 23 23 23 23
23 23 0 23 23 0 23 23 23 71 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 71 0 21 0 0 0 0 47
55 71 23 0 0 0 0 0 51 0 0 0 20 0 0 20 35 51 39 0 0 0 0 /Times-Bold 1000
1114112 rf end
 TeXDict begin @letter
%%EndProlog
%%Page: 1 1
 bop 334 149 a fk(Real-T)o(ime)18 b(Replication)g(Garbage)i(Collection)649 290
y fj(Scott)12 b(Nettles)g(and)h(James)g(O'T)l(oole)765 406 y(Appears)g(in)f
(PLDI)g('93)-75 642 y fi(Abstract)-75 734 y fh(W)m(e)c(have)g(implemented)g
(the)g(\256rst)f(copying)g(garbage)h(collector)f(that)-75 784 y(permits)h(con\
tinuous)f(unimpeded)i(mutator)f(access)j(to)d(the)g(original)-75 834 y(object\
s)h(during)f(copying.)13 b(The)d(garbage)g(collector)e(incrementally)-75 884 y
(replicates)15 b(all)f(accessible)i(objects)e(and)g(uses)h(a)g(mutation)f(log)
f(to)-75 933 y(bring)d(the)i(replicas)g(up-to-date)e(with)h(changes)h(made)h
(by)e(the)h(mu-)-75 983 y(tator)m(.)j(An)8 b(experimental)g(implementation)f
(demonstrates)h(that)g(the)-75 1033 y(costs)g(of)f(using)f(our)h(algorithm)f
(are)j(small)e(and)h(that)e(bounded)h(pause)-75 1083 y(times)j(of)g(50)g(mill\
iseconds)f(can)i(be)g(readily)f(achieved.)-75 1182 y fg(Keywords:)38 b fh(rea\
l-time)12 b(garbage)g(collection,)g(copying)f(garbage)-75 1232 y(collection,)
27 b(incremental)d(collection,)j(concurrent)d(collection,)-75 1282 y(replicat\
ion.)-75 1422 y fi(1)58 b(Intr)o(oduction)-75 1514 y fh(Garbage)11 b(collecto\
r)e(pauses)h(are)h(always)f(annoying,)f(but)g(for)g(many)-75 1564 y(applicati\
ons)16 b(they)h(are)i(intolerable.)35 b(For)18 b(example,)i(smoothly)-75 1600
y 401 2 v 38 x ff(Authors')15 b(addresses:)25 b(nettles@cs.cmu.edu,)15 b(Scho\
ol)g(of)g(Computer)g(Science,)-75 1678 y(Carnegie)6 b(Mellon)g(University)n
(,)h(5000)f(Forbes)g(A)n(venue,)g(Pittsbur)o(gh,)h(Pennsylvania)-75 1717 y
(15213.)j(\(412\)268-3617)-75 1757 y(otoole@lcs.mit.edu,)h(Laboratory)f(for)i
(Computer)e(Science,)i(Massachusetts)e(In-)-75 1796 y(stitute)e(of)g(T)n(echn\
ology)n(,)e(Cambridge,)h(Massachusetts)g(02139.)j(617-253-6018)-75 1875 y(Thi\
s)j(research)f(was)g(sponsored)f(by)h(the)h(A)n(vionics)e(Lab,)j(W)o(right)f
(Research)f(and)-75 1914 y(Development)g(Center)o(,)j(Aeronautical)d(Systems)
i(Division)f(\(AFSC\),)i(U.)g(S.)f(Air)-75 1954 y(Force,)9 b(W)o(right-Patter\
son)f(AFB,)h(OH)g(45433-6543)c(under)j(Contract)g(F33615-90-)-75 1993 y(C-146\
5,)j(Arpa)f(Order)h(No.)21 b(7597,)10 b(by)h(the)g(Air)g(Force)g(Systems)g
(Command)f(and)-75 2033 y(the)d(Defense)g(Advanced)f(Research)g(Projects)i
(Agency)e(\(DARP)m(A\))j(under)d(Contract)-75 2072 y(F19628-91-C-0128,)11 b
(and)i(by)f(the)h(Department)f(of)h(the)g(Army)g(under)f(Contract)-75 2111 y
(DABT63-92-C-0012.)-75 2190 y(The)i(views)f(and)g(conclusions)f(contained)g
(in)i(this)g(document)e(are)h(those)g(of)h(the)-75 2230 y(authors)c(and)g(sho\
uld)g(not)g(be)h(interpreted)f(as)g(representing)g(the)g(of)o(\256cial)i(poli\
cies,)-75 2269 y(either)g(expressed)f(or)i(implied,)g(of)g(the)f(Defense)g
(Advanced)e(Research)i(Projects)-75 2309 y(Agency)7 b(or)h(the)f(U.S.)j(Gover\
nment.)1025 642 y fh(tracking)k(a)h(mouse)g(in)g(an)g(interactive)f(graphics)
g(application)g(re-)1025 691 y(quires)8 b(pause)h(times)f(of)h(50)f(milliseco\
nds)g(or)g(less[5].)14 b(For)9 b(garbage)1025 741 y(collection)15 b(to)h(be)h
(useful)f(in)g(applications)f(with)h(real-time)g(con-)1025 791 y(straints,)6 b
(pause)i(times)f(must)f(be)i(bounded.)13 b(W)m(e)7 b(have)g(implemented)1025
841 y(a)h(garbage)h(collector)e(which)h(provides)f(real-time)h(collection)f
(using)1025 891 y(a)j(new)h(technique.)k(This)10 b(technique)g(is)g(ef\256cie\
nt)g(and)g(can)h(provide)1025 940 y(such)f(short)f(bounded)h(pause)h(times.)
1066 990 y(The)d(key)f(method)f(used)h(by)g(real-time)g(collectors)f(is)h fe
(incr)o(emental)1025 1040 y fh(collection,)14 b(in)f(which)h(garbage)g(collec\
tion)f(work)h(is)g(interleaved)1025 1090 y(with)8 b(mutation.)14 b(For)9 b
(incremental)h(collection)e(to)h(be)h(possible,)f(the)1025 1140 y(garbage)h
(collector)f(must)h(sometimes)h(suspend)f(its)f(work)g(and)h(per-)1025 1189 y
(mit)g(the)g(mutator)g(to)g(run,)h(even)g(though)e(the)i(collection)f(algorit\
hm)1025 1239 y(has)g(not)g(completed.)1066 1289 y(Previous)k(work)g(on)g(incr\
emental)g(collection)f(has)i(focused)f(on)1025 1339 y(techniques)9 b(that)f
(required)h(either)g(special)h(hardware)g(or)f(operating)1025 1389 y(system)g
(support)e([12)o(,)i(1],)g(or)g(in)f(which)g(the)g(extra)h(overhead)g(for)f
(the)1025 1439 y(mutator)i(was)h(potentially)e(very)i(high)f([4)o(,)i(16)o
(].)17 b(These)12 b(algorithms)1025 1488 y(are)j(variants)f(of)g(Baker)q(')n
(s)h(algorithm[2)n(])f(which)g(uses)h(a)g(to-space)1025 1538 y(invariant.)26 b
(The)16 b(to-space)f(invariant)e(requires)h(that)g(the)h(mutator)1025 1588 y
(use)f(only)f(pointers)g(into)f(to-space.)27 b(The)15 b(cost)f(of)g(enforcing)
f(this)1025 1638 y(restriction)6 b(leads)j(to)f(the)g(need)h(for)f(special)g
(hardware)h(or)f(operating)1025 1688 y(system)i(support.)1066 1737 y(Instead)
k(of)f(a)h(to-space)h(invariant,)e(our)g(method)h(uses)g(a)g(from-)1025 1787 y
(space)e(invariant)e(which)h(requires)g(that)g(the)g(mutator)g(use)h(only)e
(the)1025 1837 y(original)t(from-space)e(objects.)13 b(The)8 b(garbage)f(coll\
ector)f(incremen-)1025 1887 y(tally)h(builds)g(a)h(consistent)g(replica)g(of)
g(the)g(accessible)i(objects.)k(The)1025 1937 y(modi\256ed)f(collector)g(inva\
riant)f(decouples)i(the)g(execution)f(of)g(the)1025 1986 y(garbage)c(collecto\
r)g(from)g(the)g(mutator)m(,)h(and)f(permits)g(the)g(collector)1025 2036 y
(great)h(\257exibility)e(in)h(scheduling)h(its)f(replication)g(activity)l(.)
1066 2086 y(An)20 b(early)g(prototype)e(of)h(our)g(implementation[14)n(])h
(demon-)1025 2136 y(strated)14 b(that)g(replication)g(can)h(be)h(used)f(for)f
(incremental)h(collec-)1025 2186 y(tion)d(but)g(did)h(not)f(provide)h(real-ti\
me)g(response.)25 b(It)13 b(also)g(did)g(not)1025 2236 y(allow)i(for)h(a)h
(careful)f(comparison)h(of)f(performance)h(with)e(stop-)1025 2285 y(and-copy)
f(collection.)28 b(T)m(o)15 b(demonstrate)g(that)g(our)f(technique)g(is)1025
2335 y(practical)f(and)h(feasible)g(for)f(real-time)h(collection,)g(we)g(have)
g(im-)1025 2385 y(plemented)7 b(several)i(variants)f(of)f(this)g(technique)h
(for)f(Standard)h(ML)1025 2435 y(of)k(New)h(Jersey)h(\(SML/NJ\).)f(Our)g(expe\
rimental)f(collectors)h(pro-)1025 2485 y(vide)7 b(excellent)h(performance)h
(with)e(little)f(runtime)i(overhead.)14 b(The)1025 2534 y(real-time)d(collect\
or)f(provides)g(bounded)g(pause)i(times)f(within)e(the)1025 2584 y(limits)f
(needed)j(by)f(interactive)g(applications.)1066 2634 y(In)j(the)h(sections)g
(that)f(follow)l(,)i(we)f(introduce)f(our)g(general)h(ap-)1025 2684 y(proach,)
c(based)h(on)e(the)h(new)g(invariant.)k(W)m(e)c(provide)f(a)i(high-level)p eop
%%Page: 2 2
 bop -75 -33 a fh(explanation)13 b(of)h(our)f(method)h(and)g(its)f(fundamenta\
l)h(correctness)-75 16 y(conditions.)27 b(W)m(e)15 b(then)g(discuss)g(the)f
(details)h(of)f(our)g(experimen-)-75 66 y(tal)d(implementation)f(and)i(its)e
(real-time)i(performance)g(goals.)18 b(W)m(e)-75 116 y(present)d(experimental)
h(results)f(that)g(show)g(that)g(the)g(cost)h(of)f(the)-75 166 y(technique)g
(is)g(low)g(in)g(practice)h(and)g(that)f(pause)h(times)g(are)g(well)-75 216 y
(controlled.)d(Finally)l(,)d(we)g(discuss)g(possible)e(improvements)h(to)g
(the)-75 265 y(implementation)i(and)i(suggest)f(areas)i(for)e(further)g(work.)
21 b(W)m(e)13 b(as-)-75 315 y(sume)i(that)e(the)h(reader)h(is)f(familiar)g
(with)f(the)h(basics)h(of)f(copying)-75 365 y(and)e(generational)e(garbage)i
(collection,)f(a)h(survey)g(may)g(be)g(found)-75 415 y(in)e(W)n(ilson[20)n
(].)-75 555 y fi(2)58 b(Real-T)o(ime)12 b(Replication)h(Garbage)23 b(Col-)12
629 y(lection)-75 722 y fh(Incremental)13 b(collectors)f(permit)h(the)f(mutat\
or)g(to)g(resume)i(execu-)-75 772 y(tion)d(before)h(the)g(collection)e(has)j
(completed.)20 b(The)13 b(operations)e(of)-75 822 y(the)i(collector)f(and)h
(the)f(mutator)g(may)i(be)f(interleaved.)22 b(Thus)13 b(the)-75 871 y(effects)
8 b(of)g(the)g(garbage)h(collector)f(must)g(not)f(be)i(observable)f(by)g(the)
-75 921 y(language)i(primitives)f(used)h(by)g(the)g(mutator)m(.)-33 971 y(The)
d(standard)f(technique)h(used)g(by)f(copying)g(garbage)h(collectors)-75 1021 y
(to)f(copy)h(an)g(object)f(destroys)g(the)h(original)e(object)h(by)h(overwrit\
ing)t(it)-75 1071 y(with)i(a)i(forwarding)e(pointer)l(.)15 b(Therefore,)d(inc\
remental)e(collectors)-75 1120 y(that)16 b(use)g(the)h(standard)f(copying)f
(technique)h(require)g(the)g(muta-)-75 1170 y(tor)e(to)f(use)i(only)f(the)g
(relocated)g(copy)h(of)f(an)g(object.)27 b(Enforcing)-75 1220 y(this)10 b(to-\
space)i(invariant)d(typically)h(requires)g(a)i(\252read-barrier)r(\272,)g(as)
-75 1270 y(shown)f(in)h(\256gure)g(1.)20 b(The)13 b(implementation)d(of)i(rea\
d-barriers)g(has)-75 1320 y(consequently)i(been)g(the)h(focus)f(of)g(much)h
(ef)o(fort)f(in)g(incremental)-75 1370 y(garbage)d(collection)e(work.)-75 1428
y  15795512 6318204 5788794 32627752 28351938 41705635 startTexFig
%%BeginDocument: pictures/oldgc.ps

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def




Begin
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 400 662 ] concat
[
(read)
] Text
End

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 400 638 ] concat
[
(write)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 112 687 ] concat
[
(Fromspace)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -71 23 ] concat
207 593 239 617 Rect
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -71 23 ] concat
175 585
263 585
263 673
175 673
4 Poly
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 304 687 ] concat
[
(Tospace)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 113 23 ] concat
207 593 239 617 Rect
End

Begin %I Line
0 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -63.0001 22.9998 ] concat
391 641 391 617 Line
End

Begin %I Line
0 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -71 22.9998 ] concat
215 641 399 641 Line
End

Begin %I Line
0 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -71 21.9998 ] concat
215 642 215 618 Line
End

Begin %I Pict

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -71.0001 21.9998 ] concat
287 594
335 594
335 626
287 626
4 Poly
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 230 637 ] concat
[
(GC)
] Text
End

End %I eop

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -71 22.5 ] concat
335 610 391 610 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -71 22.5 ] concat
239 610 287 610 Line
End

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 438 645 ] concat
[
(Mutator)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 321 198 ] concat
111 418
175 418
175 466
111 466
4 Poly
End

End %I eop

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -95 229 ] concat
383 379
471 379
471 467
383 467
4 Poly
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 376 727 ] concat
[
(barrier)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -95 229 ] concat
471 419 527 419 Line
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -95 229 ] concat
471 395 527 395 Line
End

Begin %I Line
2 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 1 61 ] concat
391 651 391 515 Line
End

Begin %I MLine
2 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 1 61 ] concat
383 531
239 531
239 555
3 MLine
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 360 589 ] concat
[
(trap)
] Text
End

End %I eop

showpage


end
%%EndDocument
  endTexFig 52 1920 a(Figure)h(1:)k(A)c(Read)h(Barrier)f(Protecting)f(T)n(osp\
ace)-33 2019 y(In)e(contrast,)h(our)e(technique)h(requires)h(the)f(collector)
g(to)g(replicate)-75 2069 y(live)17 b(objects)h(without)e(destroying)g(the)i
(original)e(objects.)38 b(The)-75 2119 y(mutator)16 b(is)g(able)h(to)e(contin\
ue)h(accessing)i(the)e(original)f(objects.)-75 2169 y(This)e(allows)f(us)h
(to)g(eliminate)f(the)h(read-barrier)g(and)g(modify)f(the)-75 2219 y(to-space)
i(invariant.)26 b(However)n(,)16 b(our)d(method)h(requires)g(a)g(write-)-75
2269 y(barrier)d(because)j(the)d(mutator)g(may)h(continue)f(to)g(modify)g(obj\
ects)-75 2318 y(after)g(they)f(have)h(been)g(replicated.)k(A)c(write-barrier)
e(is)h(much)h(less)-75 2368 y(costly)f(to)f(implement)h(than)g(a)h(read-barri\
er[10)o(].)-33 2418 y(Conceptually)-5 b(,)17 b(the)e(standard)g fe(Copy)f fh
(operation)g(can)i(be)g(made)-75 2468 y(non-destructive)i(by)g(reserving)h
(an)h(extra)f(word)f(in)h(the)g(object)-75 2518 y(which)c(is)g(not)f(observab\
le)h(by)f(the)h(mutator)g(and)g(which)g(is)f(used)-75 2567 y(to)g(store)g(the)
g(forwarding)f(pointer)l(.)27 b(In)14 b(our)g(algorithm,)g(the)g(goal)-75 2617
y(of)h(the)h(collector)f(is)h(to)f(successfully)h(replicate)f(all)h(live)f
(objects)-75 2667 y(which)8 b(are)h(present)g(in)f(\252from-space\272)i(by)e
(creating)g(corresponding)1025 -75 y
 15795512 5054563 4933632 34403860 26904739 41508290 startTexFig
%%BeginDocument: pictures/sysblock.ps

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def




Begin
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 55 ] concat
127 601 175 601 Line
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 55 ] concat
127 625 175 625 Line
End

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 168 694 ] concat
[
(read)
] Text
End

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 160 670 ] concat
[
(write)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 208 719 ] concat
[
(Fromspace)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 55 ] concat
207 593 239 617 Rect
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 55 ] concat
175 585
263 585
263 673
175 673
4 Poly
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 400 719 ] concat
[
(Tospace)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 209 55 ] concat
207 593 239 617 Rect
End

Begin %I Line
0 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 32.9999 54.9998 ] concat
391 641 391 617 Line
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 55 ] concat
359 585
447 585
447 673
359 673
4 Poly
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 55 ] concat
143 601 143 561 Line
End

Begin %I Line
0 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 24.9999 54.9998 ] concat
215 641 399 641 Line
End

Begin %I Line
0 0 0 [12 4] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 24.9999 53.9998 ] concat
215 642 215 618 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 53.9999 ] concat
143 562 183 562 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 24.9999 53.9999 ] concat
255 562 311 562 Line
End

Begin %I Pict

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 24.9999 53.9998 ] concat
287 594
335 594
335 626
287 626
4 Poly
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 326 669 ] concat
[
(GC)
] Text
End

End %I eop

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 54.5 ] concat
335 610 391 610 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 24.9999 53.9999 ] concat
311 562 311 594 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 54.5 ] concat
239 610 287 610 Line
End

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 94 677 ] concat
[
(Mutator)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -23 230 ] concat
111 418
175 418
175 466
111 466
4 Poly
End

End %I eop

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 232 621 ] concat
[
(Log)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 24.9999 51.9999 ] concat
183 554
255 554
255 574
183 574
4 Poly
End

End %I eop

End %I eop

showpage


end
%%EndDocument
  endTexFig 1153 336 a(Figure)i(2:)15 b(Replication)8 b(and)j(The)g(Mutation)
d(Log)1025 470 y(objects)13 b(in)f(\252to-space\272.)26 b(When)14 b(this)f
(task)g(is)g(complete,)i(the)e(col-)1025 520 y(lector)d(replaces)h(the)f(root\
s)g(of)g(the)h(mutator)e(with)h(pointers)f(to)h(their)1025 570 y(correspondin\
g)e(replicas)i(in)f(to-space,)i(discards)f(from-space,)h(and)1025 619 y(termi\
nates.)1025 738 y fd(2.1)50 b(Mutations)11 b(ar)o(e)h(Logged)1025 816 y fh
(After)6 b(the)h(collector)g(has)g(replicated)g(an)h(object,)f(the)g(original)
f(object)1025 866 y(may)14 b(be)h(modi\256ed)f(by)g(the)g(mutator)l(.)28 b
(If)14 b(this)f(happens,)i(then)f(the)1025 915 y(same)h(modi\256cation)e(must)
h(also)g(be)g(made)h(to)e(the)h(replica)g(before)1025 965 y(the)i(mutator)g
(switches)g(to)g(using)g(the)g(replica.)34 b(Therefore,)20 b(our)1025 1015 y
(algorithm)13 b(requires)h(the)g(mutator)g(to)g(record)g(all)g(mutations)g
(in)g(a)1025 1065 y(\252mutation)8 b(log\272,)i(as)h(shown)e(in)g(\256gure)h
(2.)15 b(The)10 b(collector)f(must)h(use)1025 1115 y(the)f(mutation)g(log)g
(to)h(ensure)g(that)g(all)f(replicas)h(reach)h(a)g(consistent)1025 1164 y(sta\
te)c(by)g(the)h(time)f(the)g(collection)g(terminates.)14 b(The)8 b(collector)
f(does)1025 1214 y(this)j(by)h(processing)h(the)f(log)g(entries)g(and)h(apply\
ing)e(mutations)h(to)1025 1264 y(the)f(replicas.)1066 1314 y(When)k(the)g(col\
lector)f(modi\256es)g(a)i(replica)e(which)h(has)g(already)1025 1364 y(been)c
(scanned,)i(it)e(rescans)h(the)f(replica)h(to)f(ensure)g(that)g(any)h(object)
1025 1413 y(referenced)16 b(as)h(a)f(result)f(of)g(the)g(mutation)f(is)i(also)
f(replicated)h(in)1025 1463 y(to-space.)25 b(After)14 b(a)g(log)e(entry)i(has)
g(been)g(processed)g(in)f(this)g(way)1025 1513 y(it)e(may)i(be)f(discarded.)
22 b(The)13 b(cost)f(of)g(logging)e(and)j(of)e(processing)1025 1563 y(the)d
(mutation)g(log)g(depends)h(on)g(the)f(application,)h(and)g(also)g(the)f(im-)
1025 1613 y(plementation)g(of)i(logging.)j(Mutation)8 b(logging)g(works)h(bes\
t)h(when)1025 1663 y(mutations)f(are)i(infrequent)e(or)h(can)h(be)f(recorded)
h(without)d(mutator)1025 1712 y(cooperation.)28 b(Mutation)13 b(logging)g(is)
i(also)g(attractive)g(whenever)1025 1762 y(writes)g(are)h(already)g(expensive)
f(or)g(a)h(mutation)f(log)f(is)i(required)1025 1812 y(for)10 b(other)f(reason\
s.)17 b(For)10 b(example,)i(generational)e(collectors,)g(per-)1025 1862 y(sis\
tent)h(data,)j(and)e(distributed)e(systems)j(usually)f(make)h(mutation)1025
1912 y(operations)c(more)h(expensive[13].)1025 2030 y fd(2.2)50 b(The)12 b
(Collector)g(Invariant)1025 2108 y fh(The)k(invariant)e(maintained)h(by)h(the)
f(replication-based)g(garbage)1025 2158 y(collector)c(is)g(that)g(the)h(mutat\
or)e(can)j(only)d(access)k(from-space)f(ob-)1025 2208 y(jects,)f(that)e(all)h
(previously)f(scanned)i(objects)f(in)f(to-space)i(contain)1025 2257 y(only)5 b
(to-space)i(pointers,)g(and)f(that)g(all)g(to-space)h(replicas)g(are)h(up-to-)
1025 2307 y(date)i(with)f(respect)j(to)d(their)h(original)f(from-space)i(obje\
cts,)f(unless)1025 2357 y(a)g(corresponding)f(mutation)g(is)h(recorded)h(in)e
(the)i(mutation)e(log.)1066 2407 y(This)k(from-space)g(invariant)e(dif)o(fers)
i(from)f(standard)h(collector)1025 2457 y(invariants)e(because)j(it)f(require\
s)f(the)h(mutator)f(to)g(continue)g(using)1025 2506 y(the)j(original)e(from-s\
pace)j(objects.)30 b(The)16 b(from-space)g(invariant)1025 2556 y(permits)c
(the)h(replicated)f(objects)h(to)f(be)h(in)f(an)h(inconsistent)f(state,)1025
2606 y(as)i(long)g(as)g(the)g(inconsistencies)g(are)h(recorded)g(in)e(the)h
(mutation)1025 2656 y(log.)25 b(It)14 b(is)f(because)j(of)e(these)g(inconsist\
encies)g(that)f(the)h(mutator)p eop
%%Page: 3 3
 bop -75 -33 a fh(must)15 b(continue)e(to)h(use)i(only)d(the)i(from-space)g
(objects)g(until)e(the)-75 16 y(collection)c(algorithm)g(completes.)-75 135 y
fd(2.3)50 b(The)13 b(Completion)e(Condition)-75 213 y fh(The)h(collector)f
(has)h(completed)f(a)h(collection)e(when)i(the)f(mutation)-75 262 y(log)16 b
(is)h(empty)m(,)i(the)d(mutator)q(')m(s)h(roots)f(have)i(been)f(scanned,)j
(and)-75 312 y(all)e(of)g(the)g(objects)g(in)f(to-space)i(have)g(been)f(scann\
ed.)40 b(When)-75 362 y(these)16 b(conditions)e(have)i(been)g(met,)i(the)e
(invariant)e(ensures)i(that)-75 412 y(all)c(objects)h(reachable)h(from)e(the)
h(roots)e(have)j(been)f(replicated)f(in)-75 462 y(to-space,)h(are)f(up-to-dat\
e,)f(and)g(contain)g(only)f(to-space)i(pointers.)-75 511 y(When)7 b(the)h(col\
lector)e(has)i(established)f(this)f(completion)g(condition,)-75 561 y(it)j
(atomically)h(updates)g(all)g(roots)f(of)h(the)g(mutator)f(to)h(point)e(at)i
(their)-75 611 y(corresponding)5 b(to-space)i(replicas,)h(discards)f(the)f
(from-space,)j(and)-75 661 y(renames)j(to-space)e(as)h(from-space.)-75 779 y
fd(2.4)50 b(Limiting)12 b(Pause)h(T)o(imes)-75 857 y fh(In)k(order)g(to)g(gua\
rantee)g(that)g(the)g(garbage)h(collector)f(will)f(only)-75 907 y(pause)f(the)
f(mutator)g(for)g(a)h(bounded)f(time,)i(the)e(collection)f(algo-)-75 957 y
(rithm)8 b(must)h(somehow)g(limit)e(its)h(execution.)15 b(If)8 b(the)h(algori\
thm)e(has)-75 1007 y(not)g(completed)g(when)h(the)g(maximum)g(pause)g(time)f
(has)h(passed,)i(the)-75 1056 y(collector)g(must)g(stop)g(work)g(and)h(permit)
f(the)h(mutator)f(to)g(continue)-75 1106 y(executing.)-33 1156 y(The)15 b(rep\
lication-based)g(algorithm)e(described)j(here)g(can)g(sus-)-75 1206 y(pend)f
(execution)g(at)h(any)f(time,)i(and)f(is)f(suitable)g(for)g(concurrent)-75
1256 y(implementation)c(\(see)i(section)f(6\).)21 b(However)o(,)13 b(the)f
(actual)h(mech-)-75 1305 y(anisms)i(that)f(can)h(be)f(used)h(to)f(control)f
(the)h(duration)f(of)h(garbage)-75 1355 y(collection)7 b(pauses)j(are)f(imple\
mentation)e(dependent,)i(and)g(are)g(dis-)-75 1405 y(cussed)i(in)f(section)g
(3.3.)-75 1524 y fd(2.5)50 b(Optimization)11 b(Opportunities)-75 1601 y fh
(The)d(from-space)f(invariant)f(used)h(by)g(this)f(algorithm)f(is)i(very)g
(weak,)-75 1651 y(in)14 b(the)h(sense)h(that)e(the)g(collector)g(never)h(need\
s)h(to)e(work)g(on)h(any)-75 1701 y(particular)e(task)h(in)f(order)h(to)f(all\
ow)g(the)h(application)e(to)h(execute.)-75 1751 y(The)i(collector)f(only)f
(needs)i(to)f(replicate)g(all)g(the)h(live)e(data)i(soon)-75 1801 y(enough)h
(to)g(terminate)g(and)h(reuse)g(the)g(memory)g(in)f(from-space)-75 1850 y(bef\
ore)10 b(the)h(application)d(runs)i(out)g(of)g(memory)m(.)-33 1900 y(In)f(the)
g(algorithm)g(of)g(Appel,)h(Ellis,)f(and)h(Li[1)o(],)h(the)e(application)-75
1950 y(may)j(frequently)f(be)h(blocked)f(waiting)f(for)h(the)h(collector)f
(to)g(copy)-75 2000 y(the)16 b(objects)g(that)g(it)g(must)g(use.)34 b(W)m(e)
17 b(believe)f(that)g(the)g(\257exibil-)-75 2050 y(ity)9 b(of)i(our)f(invaria\
nt)f(of)o(fers)h(potentially)f(important)g(optimization)-75 2100 y(opportunit\
ies)h(to)i(any)h(replication-based)f(implementation.)22 b(For)-75 2149 y(exam\
ple,)d(the)c(collector)h(can)g(copy)g(objects)g(in)f(essentially)h(any)-75
2199 y(desired)10 b(order)n(.)-33 2249 y(This)i(freedom)i(in)e(copying)g(orde\
r)h(could)f(be)h(used)g(to)g(increase)-75 2299 y(locality)6 b(of)g(reference)
j(or)e(to)f(change)i(the)f(representation)f(of)h(objects)-75 2349 y(stored)k
(in)f(a)i(cache[17)q(].)17 b(Another)11 b(way)g(that)f(copying)g(order)h(free\
-)-75 2398 y(dom)k(can)g(be)h(exploited)d(is)i(by)f(concentrating)g(early)h
(replication)-75 2448 y(work)d(on)h(objects)g(reachable)h(from)f(particular)f
(roots.)23 b(Particular)-75 2498 y(roots)11 b(may)i(be)f(more)h(likely)e(to)g
(change)i(than)f(others,)h(so)f(copying)-75 2548 y(them)f(later)f(could)g(red\
uce)i(the)e(amount)g(of)h(latent)f(garbage)h(copied)-75 2598 y(by)f(the)g(col\
lector)m(.)-33 2647 y(Also,)i(if)f(no)h(mutable)g(objects)f(have)i(been)f(rep\
licated)g(then)g(the)-75 2697 y(collector)d(need)i(not)e(apply)h(mutations)f
(to)g(replicas.)16 b(The)10 b(collector)1025 -33 y(could)h(choose)j(to)e(conc\
entrate)h(early)f(replication)g(ef)o(fort)g(on)g(only)1025 16 y(immutable)c
(objects,)i(and)f(thereby)g(delay)g(the)g(need)h(to)e(process)i(the)1025 66 y
(log)k(until)f(the)h(last)h(possible)f(moment.)29 b(The)16 b(actual)f(copying)
e(of)1025 116 y(an)i(object)g(can)h(be)g(delayed)f(until)f(the)h(object)g(is)
g(scanned)h(using)1025 166 y(an)e(optimization)d(suggested)j(by)g(Ellis[9)n
(].)26 b(The)15 b(collector)e(could)1025 216 y(replicate)d(mutable)g(objects)
g(into)f(a)i(segregated)g(portion)e(of)h(the)g(to-)1025 265 y(space,)17 b(and)
e(delay)g(copying)f(and)h(scanning)f(mutable)h(objects)f(as)1025 315 y(long)8
b(as)h(possible.)14 b(Mutation)8 b(log)g(entries)h(created)h(before)f(the)g
(\256rst)1025 365 y(mutable)h(object)f(was)i(actually)f(copied)g(could)g(be)g
(discarded.)1025 505 y fi(3)58 b(Implementation)1025 597 y fh(T)m(o)8 b(test)
g(the)g(practicality)f(of)h(our)g(new)g(approach,)h(we)g(implemented)1025 647
y(a)j(real-time)g(garbage)h(collector)e(using)g(the)h(replication-based)f(al-)
1025 697 y(gorithm.)16 b(The)c(collector)e(is)h(designed)g(to)f(show)h(that)f
(pause)i(times)1025 747 y(can)k(be)g(limited)e(and)h(to)g(permit)g(accurate)i
(comparison)e(with)g(an)1025 797 y(existing)7 b(stop-and-copy)h(collector)m
(.)15 b(The)10 b(experimental)f(collector)1025 846 y(operates)d(in)g(the)h
(runtime)e(system)i(of)f(Standard)h(ML)f(of)h(New)g(Jersey)n(,)1025 896 y(whi\
ch)g(uses)i(a)g(two-level)e(generational)g(heap)i(design.)14 b(The)9 b(collec\
-)1025 946 y(tor)f(uses)h(the)g(replication)e(algorithm)h(for)g(both)g(minor)
n(-incremental)1025 996 y(and)15 b(major)o(-incremental)h(collections,)g(whic\
h)g(share)g(the)g(imple-)1025 1046 y(mentation)9 b(of)h(object)g(replication)
f(and)h(mutation)f(logging.)1066 1096 y(The)i(major)f(and)h(minor)e(collector\
s)h(dif)o(fer)g(in)g(when)g(collections)1025 1145 y(are)h(initiated)d(and)i
(how)g(their)g(execution)f(is)h(controlled.)k(The)d(real-)1025 1195 y(time)c
(collector)f(can)j(be)e(operated)h(with)e(the)h(incremental)h(algorithm)1025
1245 y(enabled)i(for)g(one)g(or)g(both)f(of)g(the)h(two)g(generations)g(prese\
nt)g(in)f(the)1025 1295 y(original)14 b(SML/NJ)j(collector)m(.)35 b(The)17 b
(experimental)g(results)f(pre-)1025 1345 y(sented)f(in)f(section)g(4)h(use)g
(results)g(from)f(various)g(con\256gurations)1025 1394 y(to)9 b(quantify)g
(the)h(costs)g(of)g(the)g(replication)f(method)h(and)g(the)g(pause)1025 1444 y
(time)g(behavior)f(for)h(several)h(benchmarks.)1025 1563 y fd(3.1)50 b(The)12
b(SML/NJ)g(Runtime)g(System)1025 1641 y fh(W)l(e)19 b(chose)f(SML/NJ)g(\(vers\
ion)f(0.75\))g(for)g(our)g(work)g(primarily)1025 1690 y(because)g(it)f(has)g
(a)h(good)f(compiler)g(and)g(a)h(simple)f(generational)1025 1740 y(garbage)f
(collector)m(.)30 b(Since)15 b(the)g(runtime)g(system)g(has)h(no)e(stack,)
1025 1790 y(heavy)7 b(demands)h(are)f(placed)h(on)f(the)f(storage)i(allocatio\
n)d(and)j(recla-)1025 1840 y(mation)16 b(system.)37 b(Providing)15 b(real-tim\
e)i(garbage)h(collection)e(is)1025 1890 y(therefore)10 b(challenging.)17 b
(However)n(,)12 b(the)f(SML)g(language)g(encour-)1025 1939 y(ages)16 b(a)g
(mostly)f(functional)f(programming)h(style,)i(so)e(mutations)1025 1989 y(are)
c(rare.)k(This)c(is)f(advantageous)g(to)g(our)f(technique.)1066 2039 y(In)e
(the)g(SML/NJ)g(collector)m(,)i(there)e(are)h(two)e(generations,)i(old)e(and)
1025 2089 y(new)m(.)21 b(Objects)13 b(are)g(allocated)f(in)g(new-space.)22 b
(When)13 b(new-space)1025 2139 y(\256lls,)c(a)g(minor)g(collection)f(is)h(ini\
tiated)e(which)i(copies)g(the)g(live)g(data)1025 2188 y(into)j(old-space.)27 b
(The)15 b(size)f(of)g(the)g(new-space)h(is)f(controlled)e(by)1025 2238 y(the)
d(runtime)g(parameter)i(N.)f(Another)f(parameter)o(,)i(O,)f(controls)e(the)
1025 2288 y(initiation)d(of)i(a)i(major)f(collection.)13 b(When)8 b(the)g(amo\
unt)g(of)g(memory)1025 2338 y(copied)j(into)f(the)i(old)f(space)i(by)e(minor)
g(collections)g(exceeds)i(O,)g(a)1025 2388 y(major)g(collection)g(occurs,)i
(copying)e(all)g(live)g(data)h(into)f(to-space)1025 2438 y(and)d(then)g(excha\
nging)f(the)i(roles)f(of)g(to-space)g(and)h(old-space.)1025 2556 y fd(3.2)50 b
(Replication)11 b(and)g(Logging)1025 2634 y fh(Generational)j(collectors)h
(must)g(identify)e(mutations)i(that)f(might)1025 2684 y(create)c(pointers)e
(from)h(old-space)g(into)f(new-space.)16 b(The)10 b(SML/NJ)p eop
%%Page: 4 4
 bop -75 -75 a
 15795512 4738653 5788794 34469642 31969935 42495016 startTexFig
%%BeginDocument: pictures/mlheaps.ps

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica-Oblique reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def




Begin
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 472 631 ] concat
[
(Tospace)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 288 631 ] concat
[
(Fromspace)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 112 631 ] concat
[
(Newspace)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 216 655 ] concat
[
(minor)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 392 663 ] concat
[
(major)
] Text
End

Begin %I BSpl
2 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 17 61 ] concat
167 595
199 603
239 603
287 587
4 BSpl
End

Begin %I BSpl
2 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 193 69 ] concat
167 595
199 603
239 603
287 587
4 BSpl
End

Begin %I MLine
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 1 61 ] concat
103 683
103 547
191 547
191 683
4 MLine
End

Begin %I MLine
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 177 61 ] concat
103 683
103 547
191 547
191 683
4 MLine
End

Begin %I MLine
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 353 61 ] concat
103 683
103 547
191 547
191 683
4 MLine
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 1 61 ] concat
367 635 279 635 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 1 61 ] concat
191 635 103 635 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 1 61 ] concat
191 659 103 659 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 200 717 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 376 701 ] concat
[
(O)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 200 685 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 353 37 ] concat
191 635 103 635 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 353 37 ] concat
191 659 103 659 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 552 685 ] concat
[
(L)
] Text
End

End %I eop

showpage


end
%%EndDocument
  endTexFig 40 316 a fh(Figure)10 b(3:)k(SML/NJ)d(Heaps)g(with)e(GC)h(Paramet\
ers)-75 450 y(collector)j(uses)h(a)g(log)f(called)g(the)h(\252storelist\272)e
(to)h(track)h(such)g(mu-)-75 500 y(tations.)37 b(The)19 b(replication-based)e
(algorithm)f(needs)j(to)e(log)g(all)-75 550 y(mutations)c(to)g(the)h(contents)
f(of)g(a)i(previously)d(replicated)i(object.)-75 599 y(W)m(e)e(modi\256ed)f
(the)g(SML/NJ)g(compiler)g(so)g(that)g(all)g(mutations)f(are)-75 649 y(record\
ed)h(in)e(its)h(storelist.)-33 699 y(The)37 b(most)g(straightforward)f(implem\
entation)g(of)g(non-)-75 749 y(destructive)15 b(copying)f(is)h(to)g(store)h
(a)g(forwarding)e(pointer)g(to)h(the)-75 799 y(replica)d(in)f(an)h(extra)g
(word)f(in)g(each)i(object.)19 b(However)o(,)12 b(measure-)-75 849 y(ments)i
(of)f(the)g(SML/NJ)h(system)g(suggest)f(that)f(most)i(objects)f(are)-75 898 y
(only)7 b(three)i(words)f(long,)g(including)e(the)i(object)g(header)i(word)d
(used)-75 948 y(to)i(store)g(certain)g(type)g(and)h(length)e(information.)13 b
(This)d(means)g(that)-75 998 y(the)f(overhead)h(of)f(allocating)f(an)i(extra)
f(word)g(per)g(object)g(would)f(be)-75 1048 y(prohibitive.)21 b(Therefore)13 b
(in)g(our)f(implementation)g(we)h(overwrite)-75 1098 y(the)d(object)g(header)
h(word)f(with)f(the)h(forwarding)f(pointer)l(.)-75 1156 y
 15795512 6792069 4933632 33943388 26904739 43481743 startTexFig
%%BeginDocument: pictures/getheader.ps

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Helvetica-Bold reencodeISO def
/Helvetica-Oblique reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def




Begin
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 168 694 ] concat
[
(read)
] Text
End

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 168 670 ] concat
[
(write)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 49 47 ] concat
175 585
263 585
263 673
175 673
4 Poly
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 400 759 ] concat
[
(Tospace)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 25 47 ] concat
359 585
447 585
447 673
359 673
4 Poly
End

Begin %I Pict
[ 1 0 0 1 24 -8 ] concat

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 232 621 ] concat
[
(Log)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 24.9999 51.9999 ] concat
183 554
255 554
255 574
183 574
4 Poly
End

End %I eop

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 232 759 ] concat
[
(Fromspace)
] Text
End

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 94 689 ] concat
[
(Mutator)
] Text
End

Begin %I Poly
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
100 607
164 607
164 679
100 679
4 Poly
End

End %I eop

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
164 615 236 615 Line
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
164 639 236 639 Line
End

Begin %I Text
0 0 0 SetCFg
Times-Bold 14 SetF
[ 1 0 0 1 160 726 ] concat
[
(getheader)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
180 615 180 567 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
236 663 324 663 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
180 567 244 567 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 248 665 ] concat
[
(original)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 416 665 ] concat
[
(replica)
] Text
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 148 41.0001 ] concat
236 663 324 663 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
164 671 260 671 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -12 41 ] concat
308 671 396 671 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 248 718 ] concat
[
(fwd ptr)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Oblique 14 SetF
[ 1 0 0 1 400 718 ] concat
[
(hdr word)
] Text
End

End %I eop

showpage


end
%%EndDocument
  endTexFig 522 x(Figure)d(4:)13 b(Getheader)7 b(Operations)f(Follow)f(the)i
(Forwarding)e(W)m(ord)-33 1778 y(Our)13 b(implementation)f(must)h(ensure)h
(that)e(the)i(replacement)g(of)-75 1827 y(the)k(object)f(header)i(word)e(is)h
(not)f(observable)h(by)f(the)h(mutator)m(.)-75 1877 y(The)g(mutator)e(accesse\
s)j(the)e(object)f(header)i(word)e(only)g(during)-75 1927 y(the)d(polymorphic)
f(equality)g(operator)h(and)g(certain)g(type-speci\256c)-75 1977 y(length)f
(operations.)23 b(W)m(e)14 b(modi\256ed)e(the)h(compiler)g(to)g(implement)-75
2027 y(these)f(operations)e(by)g(checking)i(for)e(the)h(forwarding)f(pointer)
g(and)-75 2076 y(reading)j(the)g(object)g(header)i(word)d(from)i(the)f(replic\
a)h(when)f(nec-)-75 2126 y(essary)n(.)19 b(This)12 b(slows)f(down)g(these)h
(operations)e(without)g(imposing)-75 2176 y(an)k(overhead)g(on)f(normal)h(rea\
d)g(access)i(to)d(object)g(contents.)25 b(W)m(e)-75 2226 y(also)10 b(modi\256\
ed)f(all)g(runtime)g(system)h(call)g(operations)f(which)g(mod-)-75 2276 y(ify)
16 b(ML)i(data)f(\(e.g.)37 b(I/O)16 b(primitives\))g(to)g(perform)h(appropria\
te)-75 2326 y(logging.)-75 2444 y fd(3.3)50 b(Contr)n(olling)12 b(Pause)h(Dur\
ation)-75 2522 y fh(In)7 b(SML/NJ)g(the)g(pauses)g(due)h(to)e(major)h(collect\
ions)f(are)i(the)f(longest)-75 2572 y(and)12 b(most)g(disruptive.)18 b(The)13
b(real-time)f(collector)f(uses)i(the)f(incre-)-75 2621 y(mental)e(algorithm)e
(to)h(eliminate)g(these)h(pauses.)15 b(The)c(incremental)-75 2671 y(algorithm)
j(is)g(enabled)i(when)f(the)f(O)h(parameter)h(\256rst)f(triggers)f(a)1025 -33
y(major)g(collection.)27 b(Each)16 b(time)e(a)h(minor)f(generation)g(collecti\
on)1025 16 y(occurs,)c(the)f(major)o(-incremental)g(collector)g(performs)h
(some)g(work)1025 66 y(after)i(the)g(minor)g(collector)f(terminates.)22 b(Thi\
s)12 b(approach)g(slightly)1025 116 y(increases)18 b(the)f(pause)i(times)e
(for)g(minor)g(collections)f(and)i(com-)1025 166 y(pletely)9 b(eliminates)h
(the)g(more)h(disruptive)d(major)i(pause)h(times.)1066 216 y(In)e(order)g(to)
g(control)f(the)h(total)f(pause)i(time)f(caused)i(by)e(the)g(com-)1025 265 y
(bined)d(minor)h(and)h(major)f(collections,)h(the)f(incremental)h(algorithm)
1025 315 y(restricts)f(the)h(amount)g(of)g(work)f(it)h(does)g(using)f(a)i(par\
ameter)o(,)g(L.)g(The)1025 365 y(L)g(parameter)h(limits)d(the)i(total)f(amoun\
t)g(of)h(memory)g(copied)g(by)f(the)1025 415 y(collections)j(during)f(a)j(sin\
gle)f(pause.)21 b(However)o(,)13 b(only)e(the)h(incre-)1025 465 y(mental)e
(algorithm)f(respects)i(the)f(work)g(limit)e(L.)1066 514 y(If)h(the)g(minor)f
(collection)g(has)h(exceeded)i(the)d(copy)h(limit)f(L,)i(then)1025 564 y(the)
g(major)o(-incremental)g(algorithm)e(processes)k(the)e(mutation)f(log,)1025
614 y(but)e(does)i(not)f(perform)g(any)g(additional)f(replication)g(work.)14 b
(There-)1025 664 y(fore,)d(when)f(L)h(is)g(very)f(small,)h(the)g(major)o(-inc\
remental)f(collection)1025 714 y(may)15 b(not)e(terminate.)28 b(There)15 b
(is)f(an)h(implementation-dependent)1025 764 y(lower)c(bound)g(for)g(L)i(that)
e(will)g(guarantee)h(termination,)g(but)f(such)1025 813 y(a)e(conservative)h
(completion)e(strategy)h(increases)i(the)e(total)f(cost)h(of)1025 863 y(garba\
ge)h(collection[14)n(].)1025 982 y fd(3.4)50 b(The)12 b(Real-T)o(ime)h(Collec\
tor)1025 1059 y fh(Minor)h(collection)g(pauses)i(are)h(usually)d(short,)i(but)
f(may)h(not)f(be)1025 1109 y(bounded)c(by)h(L.)h(Therefore,)h(to)e(bound)f
(these)i(collection)e(pauses,)1025 1159 y(the)d(real-time)g(collector)g(uses)
h(the)g(incremental)f(algorithm)f(for)h(mi-)1025 1209 y(nor)13 b(collections)
g(as)i(well)e(as)i(for)f(major)g(collections.)25 b(When)14 b(the)1025 1259 y
(work)c(limit)g(L)i(is)f(exceeded)i(during)c(a)j(minor)f(collection,)f(the)h
(col-)1025 1308 y(lector)e(suspends)h(execution)g(and)g(returns)g(control)e
(to)i(the)g(mutator)m(.)1025 1358 y(In)k(this)g(case,)k(new-space)e(must)f
(be)g(expanded)g(in)f(order)h(for)f(the)1025 1408 y(mutator)e(to)h(allocate)h
(more)g(objects.)25 b(Currently)12 b(the)h(implemen-)1025 1458 y(tation)e(exp\
ands)j(new-space)g(by)f(a)h(parameter)h(A,)e(whenever)h(any)1025 1508 y(incre\
mental)c(collection)f(is)h(awaiting)f(completion.)1066 1558 y(For)e(a)h(minor)
f(collection)f(the)i(log)e(contains)h(pointers)f(into)h(the)g(old)1025 1607 y
(heap)13 b(which)g(are)h(roots.)23 b(Our)13 b(technique)g(requires)g(that)f
(all)h(roots)1025 1657 y(be)g(atomically)f(updated)g(at)h(the)g(time)g(of)g
(a)g(\257ip.)23 b(For)12 b(minor)g(\257ips)1025 1707 y(this)f(requires)i(an)f
(additional)f(traversal)i(of)f(the)g(log)g(to)g(update)g(the)1025 1757 y(root\
s)e(in)i(the)f(old)g(heap.)21 b(At)11 b(this)g(point)f(the)i(log)f(has)h(been)
g(\256ltered)1025 1807 y(so)f(that)f(it)h(includes)f(only)g(the)h(pointer)f
(related)h(mutations)f(as)i(only)1025 1856 y(these)e(entries)g(are)h(roots.)
1066 1906 y(Our)d(real-time)g(collector)f(does)i(not)e(yet)h(of)o(fer)g(an)h
(absolute)e(guar-)1025 1956 y(antee)18 b(of)f(bounded)f(pause)i(times.)36 b
(First,)19 b(the)e(implementation)1025 2006 y(makes)h(no)f(attempt)f(to)h(shi\
eld)f(the)h(mutator)g(from)g(page)g(faults,)1025 2056 y(I/O,)9 b(swapping,)g
(and)h(other)f(system)h(effects.)15 b(Second,)c(the)e(current)1025 2105 y(imp\
lementation)k(does)h(not)g(incrementally)g(copy)g(a)h(single)f(lar)o(ge)1025
2155 y(object,)h(nor)f(does)h(it)f(incrementally)g(process)i(the)e(mutation)g
(log.)1025 2205 y(Therefore,)g(these)f(operations)f(can)i(exceed)g(the)f(work)
f(limit)g(L.)h(If)1025 2255 y(necessary)n(,)c(these)f(operations)f(can)h(easi\
ly)g(be)g(implemented)g(so)g(that)1025 2305 y(they)g(are)i(performed)g(increm\
entally)e(and)i(respect)f(the)h(work)e(limit.)1025 2445 y fi(4)58 b(Performan\
ce)1025 2537 y fh(The)10 b(goals)f(of)g(the)g(performance)h(study)e(were)j
(to)d(demonstrate)i(that)1025 2587 y(pause)j(times)g(are)g(bounded)f(and)h
(to)f(measure)i(the)e(overheads)h(im-)1025 2637 y(posed)c(by)f(our)h(techniqu\
e.)14 b(The)c(measured)g(performance)g(is)f(good;)1025 2687 y(the)16 b(real-t\
ime)g(collector)g(achieves)h(short)e(pause)i(times)g(with)e(an)p eop
%%Page: 5 5
 bop -75 -33 a fh(acceptable)13 b(overhead.)18 b(In)11 b(addition)f(to)g(the)
h(basic)h(measurements)-75 16 y(of)f(pause)i(and)f(execution)f(times,)h(we)g
(also)g(undertook)e(a)j(series)f(of)-75 66 y(experiments)g(to)g(quantify)f
(the)h(contributions)e(of)i(various)g(factors)-75 116 y(to)e(the)g(overhead.)
-75 235 y fd(4.1)50 b(Benchmarks)-75 312 y fh(Three)19 b(benchmarks)h(were)f
(used)f(to)g(test)h(our)f(implementation.)-75 362 y(Each)e(was)f(chosen)h(bec\
ause)g(it)e(stressed)i(the)e(memory)i(manage-)-75 412 y(ment)i(system)g(in)f
(a)h(dif)n(ferent)g(way)m(.)38 b(All)17 b(benchmarks)h(require)-75 462 y(seve\
ral)13 b(minutes)e(to)g(execute)i(and)f(require)g(many)g(major)g(and)g(mi-)
-75 511 y(nor)g(garbage)h(collections)f(during)f(execution.)22 b(See)14 b([6)
o(])f(for)f(more)-75 561 y(details)e(about)f(these)i(benchmarks.)-33 653 y fc
(\017)20 b fe(Primes)8 b fh(is)f(a)h(prime)f(number)g(sieve)h(implemented)f
(in)g(a)h(simple)8 702 y(lazy)14 b(language)g(which)f(is)g(in)h(turn)e(interp\
reted)h(by)g(an)h(SML)8 752 y(program.)24 b(It)13 b(allocates)h(memory)g(at)f
(a)h(very)g(high)e(rate)i(\(ap-)8 802 y(proximately)6 b(10Mb/sec\),)h(but)f
(few)h(objects)g(survive)f(garbage)8 852 y(collection.)19 b(It)12 b(is)g(typi\
cal)f(of)h(compute-bound)e(programs)i(in)8 902 y(SML/NJ.)-33 985 y fc(\017)20
b fe(Comp)13 b fh(is)g(the)g(SML/NJ)h(compiler)f(compiling)f(a)h(portion)f
(of)8 1035 y(itself.)i(This)7 b(is)h(the)f(most)h(realistic)f(benchmark;)i
(the)e(SML/NJ)8 1084 y(compiler)k(is)g(a)h(lar)o(ge)g(optimizing)d(compiler)i
(and)h(is)f(in)g(daily)l(,)8 1134 y(production)c(use.)15 b fe(Comp)8 b fh(doe\
s)g(not)g(allocate)h(as)g(much)g(data)g(as)8 1184 y fe(Primes)p fh(,)h(but)e
(more)h(of)f(it)g(survives)g(collections.)14 b(The)9 b(amount)8 1234 y(of)16 b
(live)g(data)g(\257uctuates)h(depending)e(on)h(the)g(phase)h(of)f(the)8 1284 y
(compilation.)-33 1367 y fc(\017)k fe(Sort)10 b fh(is)h(a)g(sorting)f(program)
h(based)g(on)g(futures)f(which)g(are)i(in)8 1416 y(turn)g(implemented)g(using)
g(SML)h(threads.)22 b fe(Sort)11 b fh(does)i(more)8 1466 y(mutation)f(than)i
(a)g(typical)f(SML)h(program)f(and)h(it)f(creates)i(a)8 1516 y(lar)o(ge)d(amo\
unt)f(of)g(live)g(data.)19 b(Both)10 b(the)h(lar)o(ge)h(mutation)e(rate)8 1566
y(and)f(the)f(substantial)g(survival)g(rate)h(make)h(this)d(a)j(challenging)8
1616 y(example)h(for)f(our)g(technique.)-33 1707 y(All)g(benchmarks)j(were)f
(executed)h(on)e(a)h(Decstation)g(5000/200)-75 1757 y(with)d(64)h(Mb)g(of)g
(physical)f(memory)i(running)d(the)i(Mach)h(2.5)f(oper-)-75 1807 y(ating)i
(system.)23 b(The)13 b(system)h(has)f(a)g(25MHz)g(clock)g(and)g(separate)-75
1856 y(64Kb)f(instruction)e(and)i(data)h(caches.)23 b(For)12 b(the)g(pause)h
(time)g(mea-)-75 1906 y(surements)e(the)f(system)h(clock)f(resolution)e(was)j
(set)g(to)20 b(4ms.)-75 2025 y fd(4.2)50 b(Parameter)13 b(Settings)-75 2103 y
fh(T)m(o)e(test)f(our)g(system)h(we)h(chose)f(values)g(for)f(the)g(parameters)
i(N,)f(O,)-75 2152 y(L)e(and)g(A.)g(For)f(O)h(we)g(used)f(the)h(values)f(5Mb)
g(and)h(1Mb.)14 b(The)9 b(lar)o(ger)-75 2202 y(value)18 b(is)f(typical)g(for)
g(running)f(SML/NJ)h(in)g(our)g(environment,)-75 2252 y(while)11 b(the)h(lowe\
r)g(setting)f(was)h(chosen)h(to)e(emphasize)i(overheads)-75 2302 y(present)6 b
(in)g(major)h(collections.)13 b(For)6 b(N)g(we)h(chose)g(1Mb)f(and)h(0.2Mb.)
-75 2352 y(Again,)13 b(the)f(lar)o(ger)h(value)f(is)h(typical)e(for)h(use)h
(with)e(the)i(stop-and-)-75 2401 y(copy)18 b(collector)m(.)37 b(The)19 b(lowe\
r)e(setting)g(was)h(chosen)g(because)h(it)-75 2451 y(allowed)8 b(us)h(to)g
(achieve)g(pause)h(times)f(of)f(50)h(milliseconds)f(yet)g(still)-75 2501 y
(have)14 b(the)g(collector)f(terminate.)27 b(W)l(e)15 b(chose)f(50)g(millisec\
onds)f(as)-75 2551 y(our)7 b(tar)o(get)g(pause)i(time)e(because)i(this)e(is)g
(the)g(maximum)i(pause)f(time)-75 2601 y(which)i(will)g(allow)g(an)h(interact\
ive)g(program)f(to)h(smoothly)e(track)i(a)-75 2650 y(mouse[5].)1066 -33 y(Whe\
n)19 b(N)f(is)h(0.2Mb)f(we)h(set)g(L)g(to)e(0.1Mb)i(and)f(when)h(N)f(is)1025
16 y(1Mb)13 b(we)i(set)g(L)g(to)e(0.5Mb.)27 b(The)15 b(value)g(of)f(0.1Mb)g
(was)h(chosen)1025 66 y(because)g(that)e(is)g(approximately)g(how)g(much)h
(data)g(the)g(collector)1025 116 y(can)f(copy)f(in)g(50)g(milliseconds,)g(whi\
le)g(the)h(value)f(of)g(0.5Mb)g(was)1025 166 y(chosen)f(somewhat)i(arbitraril\
y)-5 b(.)19 b(A)12 b(was)g(chosen)g(to)f(be)h(L/2.)19 b(This)1025 216 y(guara\
ntees)f(that)e(the)i(collector)e(will)h(make)h(progress)f(when)h(an)1025 265 y
(incremental)10 b(collection)f(is)h(active.)1066 315 y(W)m(e)15 b(also)g(ran)
g(our)g(benchmarks)g(with)f(other)h(values)g(of)g(L)g(but)1025 365 y(those)10
b(results)h(are)h(not)e(particularly)g(illuminating)e(and)j(have)h(been)1025
415 y(omitted)f(due)i(to)f(lack)g(of)h(space)h(\(see)f([19)o(])g(for)f(more)h
(details\).)21 b(In)1025 465 y(general,)c(as)f(L)g(increases,)i(pause)e(times)
g(increase)g(and)g(duration)1025 514 y(of)e(collections)g(decrease.)32 b(Any)
14 b(overheads)i(that)e(are)i(related)f(to)1025 564 y(collection)9 b(duration)
f(decrease.)1066 614 y(In)j(this)f(study)g(we)i(are)g(concerned)g(with)e(quan\
tifying)e(the)j(over-)1025 664 y(heads)j(of)g(adding)f(replication-based)h
(collection)f(to)g(the)h(system,)1025 714 y(rather)f(that)g(studying)f(what)h
(polices)h(should)e(be)i(used)g(to)f(control)1025 764 y(such)j(a)i(collector)
m(.)35 b(Since)17 b(the)f(choice)h(of)g(policy)e(can)j(strongly)1025 813 y
(in\257uence)13 b(performance)h(we)g(controlled)d(for)i(it)f(in)h(the)g(follo\
wing)1025 863 y(way)m(.)34 b(Using)16 b(the)h(parameters)h(above,)h(the)d(rea\
l-time)h(collector)1025 913 y(was)10 b(run)f(in)g(such)h(a)h(way)f(as)g(to)g
(produce)f(a)i(script)e(of)g(exactly)h(when)1025 963 y(it)k(\257ipped)h(and)h
(how)f(much)h(new)g(allocation)f(space)h(it)f(returned.)1025 1013 y(These)10 b
(scripts)f(were)h(then)f(used)h(to)e(replay)h(these)h(policy)e(decisions)1025
1062 y(for)i(all)g(benchmark)h(runs.)k(This)c(ensures)g(that)f(the)g(dif)o
(ferences)i(we)1025 1112 y(measured)e(were)h(those)e(imposed)h(by)f(our)g(mec\
hanism)i(rather)f(than)1025 1162 y(variations)c(caused)i(by)f(dif)n(ferent)g
(policy)f(decisions.)14 b(W)m(e)8 b(measured)1025 1212 y(the)h(overhead)g(cau\
sed)i(by)d(this)h(replay)g(method)g(and)g(found)g(it)f(to)h(be)1025 1262 y
(smaller)g(than)f(the)h(margins)f(of)h(error)f(\(approximately)g(2%\))g(typic\
al)1025 1311 y(in)h(our)h(benchmark)h(runtimes.)1025 1430 y fd(4.3)50 b(Pause)
13 b(T)o(imes)1025 1508 y fh(The)c(primary)g(motivation)e(for)i(using)f(a)h
(real-time)g(garbage)h(collec-)1025 1558 y(tor)5 b(is)h(to)g(provide)f(bounde\
d)h(collector)g(pause)h(times.)14 b(In)6 b(this)f(section)1025 1607 y(we)10 b
(present)h(the)f(measurement)h(results)f(for)g(our)g(benchmarks.)1025 1666 y
 15795512 10898901 3289088 3289088 17497948 13222133 startTexFig
%%BeginDocument: plots/comp-shortpauses.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -40 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 120 scalefont setfont
newpath
LTa
864 421 M
4113 421 L
864 421 M
864 2723 L
LTb
864 421 M
927 421 L
4113 421 M
4050 421 L
792 421 M
(0) Rshow
864 864 M
927 864 L
4113 864 M
4050 864 L
792 864 M
(500) Rshow
864 1306 M
927 1306 L
4113 1306 M
4050 1306 L
792 1306 M
(1000) Rshow
864 1749 M
927 1749 L
4113 1749 M
4050 1749 L
792 1749 M
(1500) Rshow
864 2192 M
927 2192 L
4113 2192 M
4050 2192 L
792 2192 M
(2000) Rshow
864 2634 M
927 2634 L
4113 2634 M
4050 2634 L
792 2634 M
(2500) Rshow
864 421 M
864 484 L
864 2723 M
864 2660 L
864 301 M
(0) Cshow
1514 421 M
1514 484 L
1514 2723 M
1514 2660 L
1514 301 M
(20) Cshow
2164 421 M
2164 484 L
2164 2723 M
2164 2660 L
2164 301 M
(40) Cshow
2813 421 M
2813 484 L
2813 2723 M
2813 2660 L
2813 301 M
(60) Cshow
3463 421 M
3463 484 L
3463 2723 M
3463 2660 L
3463 301 M
(80) Cshow
4113 421 M
4113 484 L
4113 2723 M
4113 2660 L
4113 301 M
(100) Cshow
LTb
864 421 M
4113 421 L
4113 2723 L
864 2723 L
864 421 L
336 1572 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Number of Pauses) Cshow
grestore
2488 181 M
(Pause Time \(milliseconds\)) Cshow
2488 2843 M
(Short GC Pauses during Comp Benchmark) Cshow
3431 864 M
(Max RT Pause 84ms) Cshow
LT0
3463 775 M
3561 510 L
3587 567 M
3561 510 L
3503 536 L
LT0
3690 2540 M
(Stop and Copy \(S+C\)) Rshow
3762 2540 M
3978 2540 L
864 1562 M
864 1562 L
994 2678 L
1124 1848 L
1254 990 L
1384 842 L
1514 832 L
1644 603 L
1774 502 L
1904 442 L
2034 434 L
2164 427 L
2294 423 L
2424 423 L
3463 422 L
3723 422 L
3853 423 L
4113 423 L
3834 2540 D
864 1562 D
994 2678 D
1124 1848 D
1254 990 D
1384 842 D
1514 832 D
1644 603 D
1774 502 D
1904 442 D
2034 434 D
2164 427 D
2294 423 D
2424 423 D
3463 422 D
3723 422 D
3853 423 D
LT1
3690 2420 M
(Real-Time \(RT\)) Rshow
3762 2420 M
3978 2420 L
864 1334 M
864 1334 L
994 2006 L
1124 1739 L
1254 984 L
1384 739 L
1514 850 L
1644 639 L
1774 525 L
1904 474 L
2034 463 L
2164 457 L
2294 483 L
2424 593 L
2553 819 L
2683 718 L
2813 502 L
2943 457 L
3073 433 L
3203 425 L
3333 423 L
3463 422 L
3593 422 L
3834 2420 A
864 1334 A
994 2006 A
1124 1739 A
1254 984 A
1384 739 A
1514 850 A
1644 639 A
1774 525 A
1904 474 A
2034 463 A
2164 457 A
2294 483 A
2424 593 A
2553 819 A
2683 718 A
2813 502 A
2943 457 A
3073 433 A
3203 425 A
3333 423 A
3463 422 A
3593 422 A
stroke
grestore
end
showpage
%%EndDocument
  endTexFig 1086 2448 a(Figure)f(5:)15 b(Compiler)9 b(Benchmark)i(\(N=0.2Mb,)
f(O=1Mb\))1066 2547 y(Figure)15 b(5)g(shows)g(a)g(plot)f(of)h(pause)h(times)f
(for)g(both)f(the)h(stop-)1025 2597 y(and-copy)8 b(collector)h(and)h(the)f
(real-time)g(collector)g(running)f fe(Comp)1025 2647 y fh(with)k(O=1Mb)i(and)
g(N=200Kb.)26 b(The)15 b(real-time)f(collector)f(has)i(a)1025 2697 y(maximum)
g(pause)h(of)e(84ms)h(and)g(the)g(peak)h(at)f(50ms)g(represents)p eop
%%Page: 6 6
 bop -75 -75 a
 15795512 10898901 3289088 3289088 17497948 13222133 startTexFig
%%BeginDocument: plots/comp-longpauses.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -40 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 120 scalefont setfont
newpath
LTa
864 421 M
4113 421 L
LTb
864 421 M
927 421 L
4113 421 M
4050 421 L
792 421 M
(0) Rshow
864 651 M
927 651 L
4113 651 M
4050 651 L
792 651 M
(0.5) Rshow
864 881 M
927 881 L
4113 881 M
4050 881 L
792 881 M
(1) Rshow
864 1112 M
927 1112 L
4113 1112 M
4050 1112 L
792 1112 M
(1.5) Rshow
864 1342 M
927 1342 L
4113 1342 M
4050 1342 L
792 1342 M
(2) Rshow
864 1572 M
927 1572 L
4113 1572 M
4050 1572 L
792 1572 M
(2.5) Rshow
864 1802 M
927 1802 L
4113 1802 M
4050 1802 L
792 1802 M
(3) Rshow
864 2032 M
927 2032 L
4113 2032 M
4050 2032 L
792 2032 M
(3.5) Rshow
864 2263 M
927 2263 L
4113 2263 M
4050 2263 L
792 2263 M
(4) Rshow
864 2493 M
927 2493 L
4113 2493 M
4050 2493 L
792 2493 M
(4.5) Rshow
864 2723 M
927 2723 L
4113 2723 M
4050 2723 L
792 2723 M
(5) Rshow
864 421 M
864 484 L
864 2723 M
864 2660 L
864 301 M
(100) Cshow
1225 421 M
1225 484 L
1225 2723 M
1225 2660 L
1225 301 M
(200) Cshow
1586 421 M
1586 484 L
1586 2723 M
1586 2660 L
1586 301 M
(300) Cshow
1947 421 M
1947 484 L
1947 2723 M
1947 2660 L
1947 301 M
(400) Cshow
2308 421 M
2308 484 L
2308 2723 M
2308 2660 L
2308 301 M
(500) Cshow
2669 421 M
2669 484 L
2669 2723 M
2669 2660 L
2669 301 M
(600) Cshow
3030 421 M
3030 484 L
3030 2723 M
3030 2660 L
3030 301 M
(700) Cshow
3391 421 M
3391 484 L
3391 2723 M
3391 2660 L
3391 301 M
(800) Cshow
3752 421 M
3752 484 L
3752 2723 M
3752 2660 L
3752 301 M
(900) Cshow
4113 421 M
4113 484 L
4113 2723 M
4113 2660 L
4113 301 M
(1000) Cshow
LTb
864 421 M
4113 421 L
4113 2723 L
864 2723 L
864 421 L
336 1572 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Number of Pauses) Cshow
grestore
2488 181 M
(Pause Time \(milliseconds\)) Cshow
2488 2843 M
(Long GC Pauses during Comp Benchmark) Cshow
3391 1342 M
(Max S+C Pause 988ms) Cshow
LT0
3535 1250 M
3925 973 L
3914 1035 M
3925 973 L
3862 962 L
LT0
3690 2540 M
(Stop and Copy \(S+C\)) Rshow
3762 2540 M
3978 2540 L
922 421 M
922 1342 L
936 421 M
936 881 L
980 421 M
980 1802 L
1456 421 M
1456 881 L
1485 421 M
1485 881 L
1514 421 M
1514 881 L
1543 421 M
1543 881 L
1557 421 M
1557 881 L
1600 421 M
1600 881 L
1615 421 M
1615 881 L
1658 421 M
1658 881 L
1788 421 M
1788 881 L
1817 421 M
1817 881 L
1875 421 M
1875 881 L
1889 421 M
1889 881 L
1904 421 M
1904 881 L
1990 421 M
1990 881 L
2048 421 M
2048 881 L
2063 421 M
2063 881 L
2077 421 M
2077 881 L
2091 421 M
2091 881 L
2106 421 M
2106 881 L
2120 421 M
2120 881 L
2308 421 M
2308 881 L
2597 421 M
2597 881 L
2611 421 M
2611 881 L
2626 421 M
2626 881 L
3261 421 M
3261 881 L
3622 421 M
3622 881 L
4041 421 M
4041 881 L
4055 421 M
4055 881 L
4070 421 M
4070 881 L
stroke
grestore
end
showpage
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 120 scalefont setfont
newpath
LTa
864 421 M
4113 421 L
864 421 M
864 2723 L
LTb
864 421 M
927 421 L
4113 421 M
4050 421 L
792 421 M
(0) Rshow
864 864 M
927 864 L
4113 864 M
4050 864 L
792 864 M
(500) Rshow
864 1306 M
927 1306 L
4113 1306 M
4050 1306 L
792 1306 M
(1000) Rshow
864 1749 M
927 1749 L
4113 1749 M
4050 1749 L
792 1749 M
(1500) Rshow
864 2192 M
927 2192 L
4113 2192 M
4050 2192 L
792 2192 M
(2000) Rshow
864 2634 M
927 2634 L
4113 2634 M
4050 2634 L
792 2634 M
(2500) Rshow
864 421 M
864 484 L
864 2723 M
864 2660 L
864 301 M
(0) Cshow
1514 421 M
1514 484 L
1514 2723 M
1514 2660 L
1514 301 M
(20) Cshow
2164 421 M
2164 484 L
2164 2723 M
2164 2660 L
2164 301 M
(40) Cshow
2813 421 M
2813 484 L
2813 2723 M
2813 2660 L
2813 301 M
(60) Cshow
3463 421 M
3463 484 L
3463 2723 M
3463 2660 L
3463 301 M
(80) Cshow
4113 421 M
4113 484 L
4113 2723 M
4113 2660 L
4113 301 M
(100) Cshow
LTb
864 421 M
4113 421 L
4113 2723 L
864 2723 L
864 421 L
336 1572 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Number of Pauses) Cshow
grestore
2488 181 M
(Pause Time \(milliseconds\)) Cshow
2488 2843 M
(Short GC Pauses during Comp Benchmark) Cshow
3431 864 M
(Max RT Pause 84ms) Cshow
LT0
3463 775 M
3561 510 L
3587 567 M
3561 510 L
3503 536 L
LT0
3690 2540 M
(Stop and Copy \(S+C\)) Rshow
3762 2540 M
3978 2540 L
864 1562 M
864 1562 L
994 2678 L
1124 1848 L
1254 990 L
1384 842 L
1514 832 L
1644 603 L
1774 502 L
1904 442 L
2034 434 L
2164 427 L
2294 423 L
2424 423 L
3463 422 L
3723 422 L
3853 423 L
4113 423 L
3834 2540 D
864 1562 D
994 2678 D
1124 1848 D
1254 990 D
1384 842 D
1514 832 D
1644 603 D
1774 502 D
1904 442 D
2034 434 D
2164 427 D
2294 423 D
2424 423 D
3463 422 D
3723 422 D
3853 423 D
LT1
3690 2420 M
(Real-Time \(RT\)) Rshow
3762 2420 M
3978 2420 L
864 1334 M
864 1334 L
994 2006 L
1124 1739 L
1254 984 L
1384 739 L
1514 850 L
1644 639 L
1774 525 L
1904 474 L
2034 463 L
2164 457 L
2294 483 L
2424 593 L
2553 819 L
2683 718 L
2813 502 L
2943 457 L
3073 433 L
3203 425 L
3333 423 L
3463 422 L
3593 422 L
3834 2420 A
864 1334 A
994 2006 A
1124 1739 A
1254 984 A
1384 739 A
1514 850 A
1644 639 A
1774 525 A
1904 474 A
2034 463 A
2164 457 A
2294 483 A
2424 593 A
2553 819 A
2683 718 A
2813 502 A
2943 457 A
3073 433 A
3203 425 A
3333 423 A
3463 422 A
3593 422 A
stroke
grestore
end
showpage
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 120 scalefont setfont
newpath
LTa
864 421 M
4113 421 L
864 421 M
864 2723 L
LTb
864 421 M
927 421 L
4113 421 M
4050 421 L
792 421 M
(0) Rshow
864 864 M
927 864 L
4113 864 M
4050 864 L
792 864 M
(500) Rshow
864 1306 M
927 1306 L
4113 1306 M
4050 1306 L
792 1306 M
(1000) Rshow
864 1749 M
927 1749 L
4113 1749 M
4050 1749 L
792 1749 M
(1500) Rshow
864 2192 M
927 2192 L
4113 2192 M
4050 2192 L
792 2192 M
(2000) Rshow
864 2634 M
927 2634 L
4113 2634 M
4050 2634 L
792 2634 M
(2500) Rshow
864 421 M
864 484 L
864 2723 M
864 2660 L
864 301 M
(0) Cshow
1514 421 M
1514 484 L
1514 2723 M
1514 2660 L
1514 301 M
(20) Cshow
2164 421 M
2164 484 L
2164 2723 M
2164 2660 L
2164 301 M
(40) Cshow
2813 421 M
2813 484 L
2813 2723 M
2813 2660 L
2813 301 M
(60) Cshow
3463 421 M
3463 484 L
3463 2723 M
3463 2660 L
3463 301 M
(80) Cshow
4113 421 M
4113 484 L
4113 2723 M
4113 2660 L
4113 301 M
(100) Cshow
LTb
864 421 M
4113 421 L
4113 2723 L
864 2723 L
864 421 L
336 1572 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Number of Pauses) Cshow
grestore
2488 181 M
(Pause Time \(milliseconds\)) Cshow
2488 2843 M
(Short GC Pauses during Comp Benchmark) Cshow
LT0
LT0
3690 2540 M
("ptime/gak.sc") Rshow
3762 2540 M
3978 2540 L
864 1562 M
864 1562 L
994 2678 L
1124 1848 L
1254 990 L
1384 842 L
1514 832 L
1644 603 L
1774 502 L
1904 442 L
2034 434 L
2164 427 L
2294 423 L
2424 423 L
3463 422 L
3723 422 L
3853 423 L
4113 423 L
3834 2540 D
864 1562 D
994 2678 D
1124 1848 D
1254 990 D
1384 842 D
1514 832 D
1644 603 D
1774 502 D
1904 442 D
2034 434 D
2164 427 D
2294 423 D
2424 423 D
3463 422 D
3723 422 D
3853 423 D
stroke
grestore
end
showpage
%%EndDocument
  endTexFig -14 707 a fh(Figure)10 b(6:)k(Compiler)9 b(Benchmark)i(\(N=0.2Mb,)
g(O=1Mb\))-75 840 y(the)j(result)g(of)h(truncating)e(the)h(longer)g(stop-and-\
copy)f(pauses)i(to)-75 890 y(that)8 b(value.)15 b(Figure)8 b(6)h(shows)g(the)
g(longer)f(pauses)h(of)g(the)g(stop-and-)-75 940 y(copy)16 b(collector)f(whic\
h)g(our)h(technique)f(eliminated.)32 b(Note)15 b(that)-75 990 y(during)10 b
(this)g(245)h(second)h(long)e(run)h(the)g(stop-and-copy)f(collector)-75 1039 y
(causes)i(a)f(pause)h(longer)e(than)g(0.5)g(seconds)i(approximately)d(every)
-75 1089 y(20)h(seconds.)-33 1139 y(T)m(able)j(1)g(summarizes)h(the)f(rest)g
(of)f(the)h(pause)h(time)f(data.)23 b(The)-75 1189 y(table)13 b(shows)h(the)f
(the)g(median)h(pause)g(time,)h(the)e(99%)g(percentile)-75 1239 y(pause)g(tim\
e,)g(and)g(the)f(maximum)h(pause)g(time.)22 b(These)14 b(measures)-75 1289 y
(show)h(that)f(the)h(real-time)f(collector)h(is)f(successful)i(at)f(bounding)
-75 1338 y(the)8 b(pauses,)i(and)f(that)f(in)g(exchange)h(the)f(duration)f
(of)h(many)h(shorter)-75 1388 y(pauses)i(increase)g(slightly)-5 b(.)-75 1507 y
fd(4.4)50 b(Elapsed)12 b(Times)-75 1584 y fh(The)20 b(real-time)g(collector)f
(is)g(clearly)h(successful)g(at)g(providing)-75 1634 y(bounded)15 b(pause)h
(time,)h(but)e(at)g(what)h(cost)f(in)g(performance?)33 b(A)-75 1684 y(diagram)
8 b(of)g(the)g(component)g(costs)g(of)g(elapsed)h(time)f(in)g(our)f(imple-)
-75 1734 y(mentation)j(is)g(shown)g(in)h(\256gure)f(7.)17 b(Several)11 b(of)f
(the)h(costs,)g(such)g(as)-75 1784 y(latent)c(garbage)h(and)f(the)h(generatio\
nal)f(scan)h(of)f(pointer)f(mutations,)-75 1833 y(are)12 b(shared)g(by)e(any)
i(incremental)f(and/or)f(generational)h(collector)m(,)-75 1883 y(and)h(are)g
(not)f(peculiar)g(to)g(replication)f(gc.)19 b(These)13 b(overheads)f(will)-75
1933 y(be)f(explored)e(in)h(some)h(detail)e(in)h(the)g(following)e(section.)
-33 1983 y(T)m(o)f(determine)g(total)f(overhead,)i(we)f(measured)i(our)d(benc\
hmarks)-75 2033 y(using)13 b(a)i(variety)e(of)h(con\256gurations:)21 b(the)14
b(full)e(real-time)j(collec-)-75 2083 y(tor)m(,)e(the)e(real-time)g(collector)
g(with)f(only)h(minor)f(collections)h(done)-75 2132 y(incrementally)m(,)e(the)
f(real-time)h(collector)f(with)f(only)h(major)h(collec-)-75 2182 y(tions)14 b
(done)i(incrementally)m(,)h(the)e(stop-and-copy)g(collector)g(with)-75 2232 y
(the)f(compiler)g(changes)g(for)g(real-time)g(collection)f(and)h(the)f(stop-)
-75 2282 y(and-copy)d(collector)f(without)g(those)h(modi\256cations.)-33 2332
y(Figures)i(8,)h(9,)h(and)f(10)g(summarize)h(this)e(data.)24 b(In)13 b(genera\
l)g(the)-75 2381 y(overhead)h(for)f(the)g(most)g(realistic)g(benchmark,)j fe
(Comp)p fh(,)e(is)f(under)-75 2431 y(10%.)18 b(W)m(e)12 b(consider)f(this)f
(overhead)i(acceptable.)20 b(Even)11 b fe(Sort)p fh(,)h(the)-75 2481 y(most)i
(demanding)g(benchmark,)i(shows)e(overheads)h(under)f(25%.)-75 2531 y(Note)d
(that)f(the)g(cost)h(of)f(doing)g(minor)n(-only)f(incremental)i(is)g(essen-)
-75 2581 y(tially)i(the)g(full)g(cost)h(of)g(real-time)g(collection.)26 b(W)m
(e)14 b(do)g(not)f(have)-75 2630 y(a)g(good)f(explanation)g(of)g(why)g(in)h
(some)g(cases)h(this)e(cost)h(is)f(lar)o(ger)-75 2680 y(than)g(for)g(the)h
(full)e(real-time)h(collector)n(,)i(but)d(in)h(later)h(sections)f(we)1064 152
y 922 2 v 1063 197 a 2 46 v 204 w 2 46 v 8 w 2 46 v 2 46 v 1579 184 a fb(Prim\
es)1985 197 y 2 46 v 1276 199 a 710 2 v 1063 243 a 2 46 v 1114 229 a(O)75 b
(N)1267 243 y 2 46 v 8 w 2 46 v 2 46 v 1368 229 a(Stop+Copy)1630 243 y 2 46 v
2 46 v 1729 229 a(Real-T)n(ime)1985 243 y 2 46 v 1276 245 a 710 2 v 1063 289 a
2 46 v 1089 275 a(Mb)50 b(Mb)1267 289 y 2 46 v 8 w 2 46 v 1301 275 a(50%)f
(99%)g(Max)h(50%)f(99%)g(Max)1985 289 y 2 46 v 1064 290 a 922 2 v 1063 336 a 2
46 v 1122 322 a(1)55 b(0.2)1267 336 y 2 46 v 8 w 2 46 v 1332 322 a(12)80 b
(96)62 b(106)80 b(12)g(52)g(66)1985 336 y 2 46 v 1063 382 a 2 46 v 1122 368 a
(1)55 b(1.0)1267 382 y 2 46 v 8 w 2 46 v 1332 368 a(28)80 b(96)62 b(102)80 b
(32)61 b(136)h(142)1985 382 y 2 46 v 1063 427 a 2 46 v 1122 414 a(5)55 b(0.2)
1267 427 y 2 46 v 8 w 2 46 v 1332 414 a(12)80 b(16)62 b(106)80 b(12)g(20)g
(58)1985 427 y 2 46 v 1063 473 a 2 46 v 1122 459 a(5)55 b(1.0)1267 473 y 2 46
v 8 w 2 46 v 1332 459 a(28)80 b(40)62 b(102)80 b(32)g(44)62 b(158)1985 473 y 2
46 v 1064 475 a 922 2 v 55 x 922 2 v 1063 576 a 2 46 v 204 w 2 46 v 8 w 2 46 v
2 46 v 1585 562 a(Comp)1985 576 y 2 46 v 1276 578 a 710 2 v 1063 622 a 2 46 v
1114 608 a(O)75 b(N)1267 622 y 2 46 v 8 w 2 46 v 2 46 v 1368 608 a(Stop+Copy)
1630 622 y 2 46 v 2 46 v 1729 608 a(Real-T)n(ime)1985 622 y 2 46 v 1276 623 a
710 2 v 1063 667 a 2 46 v 1089 654 a(Mb)50 b(Mb)1267 667 y 2 46 v 8 w 2 46 v
1301 654 a(50%)f(99%)g(Max)h(50%)f(99%)g(Max)1985 667 y 2 46 v 1064 669 a 922
2 v 1063 715 a 2 46 v 1122 701 a(1)55 b(0.2)1267 715 y 2 46 v 8 w 2 46 v 1350
701 a(8)81 b(36)62 b(990)80 b(12)g(64)g(86)1985 715 y 2 46 v 1063 760 a 2 46 v
1122 747 a(1)55 b(1.0)1267 760 y 2 46 v 8 w 2 46 v 1332 747 a(28)61 b(148)h
(934)80 b(36)61 b(292)h(314)1985 760 y 2 46 v 1063 806 a 2 46 v 1122 792 a
(5)55 b(0.2)1267 806 y 2 46 v 8 w 2 46 v 1332 792 a(12)80 b(36)62 b(778)80 b
(12)g(60)g(74)1985 806 y 2 46 v 1063 852 a 2 46 v 1122 838 a(5)55 b(1.0)1267
852 y 2 46 v 8 w 2 46 v 1332 838 a(32)61 b(120)h(450)80 b(36)61 b(260)h(294)
1985 852 y 2 46 v 1064 853 a 922 2 v 56 x 922 2 v 1063 955 a 2 46 v 204 w 2 46
v 8 w 2 46 v 2 46 v 1599 941 a(Sort)1985 955 y 2 46 v 1276 956 a 710 2 v 1063
1000 a 2 46 v 1114 987 a(O)75 b(N)1267 1000 y 2 46 v 8 w 2 46 v 2 46 v 1368
987 a(Stop+Copy)1630 1000 y 2 46 v 2 46 v 1729 987 a(Real-T)n(ime)1985 1000 y
2 46 v 1276 1002 a 710 2 v 1063 1046 a 2 46 v 1089 1032 a(Mb)50 b(Mb)1267 1046
y 2 46 v 8 w 2 46 v 1301 1032 a(50%)f(99%)g(Max)h(50%)f(99%)g(Max)1985 1046 y
2 46 v 1064 1048 a 922 2 v 1063 1093 a 2 46 v 1122 1080 a(1)55 b(0.2)1267 1093
y 2 46 v 8 w 2 46 v 1332 1080 a(24)61 b(232)h(342)80 b(36)g(72)g(78)1985 1093
y 2 46 v 1063 1139 a 2 46 v 1122 1125 a(1)55 b(1.0)1267 1139 y 2 46 v 8 w 2 46
v 1313 1125 a(108)61 b(316)h(350)f(116)g(328)h(342)1985 1139 y 2 46 v 1063
1185 a 2 46 v 1122 1171 a(5)55 b(0.2)1267 1185 y 2 46 v 8 w 2 46 v 1332 1171 a
(28)80 b(44)62 b(338)80 b(32)g(68)g(74)1985 1185 y 2 46 v 1063 1230 a 2 46 v
1122 1217 a(5)55 b(1.0)1267 1230 y 2 46 v 8 w 2 46 v 1313 1217 a(100)61 b(220)
h(314)f(108)g(320)h(334)1985 1230 y 2 46 v 1064 1232 a 922 2 v 1117 1369 a fh
(T)m(able)11 b(1:)j(Garbage)d(Collection)d(Pause)j(T)o(imes)g(\(msec\))1025
1770 y  15795512 10267081 3552215 19602964 35587932 40587345 startTexFig
%%BeginDocument: pictures/costtree.ps

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def




Begin
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 264 709 ] concat
[
(Elapsed Time)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 144 613 ] concat
[
(Garbage)
(Collection)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 456 613 ] concat
[
(Client)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 536 557 ] concat
[
(Computation)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 144 485 ] concat
[
(Latent)
(Garbage)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 264 525 ] concat
[
(Log)
(Processing)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 384 421 ] concat
[
(Mutation)
(Logging)
] Text
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -60.0001 -55.0001 ] concat
540 655 580 551 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -60.0001 -55.0001 ] concat
540 655 636 615 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 28 -63.0001 ] concat
140 647 76 607 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 504 493 ] concat
[
(Header)
(Merge)
(Overhead)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 280 373 ] concat
[
(Reapply)
(Mutations)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 0.29108 0.956699 -0.956699 0.29108 427.296 482.562 ] concat
[
(write log)
] Text
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 0.824628 -0.565675 0.565675 0.824628 344.738 481.938 ] concat
[
(read log)
] Text
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 1.00002 ] concat
324 695 204 615 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 1.00002 ] concat
324 695 484 615 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 9.00002 ] concat
324 487 420 415 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 9.00002 ] concat
324 487 324 367 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 9.00002 ] concat
188 575 188 479 Line
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 9.00002 ] concat
324 487 220 399 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 64 541 ] concat
[
(Stop + Copy)
(Garbage)
(Collection)
] Text
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 9.00002 ] concat
500 591 444 415 Line
End

Begin %I Text
0 0 0 SetCFg
Helvetica-Bold 14 SetF
[ 1 0 0 1 152 405 ] concat
[
(Generational)
(Scan Pointer)
(Mutations)
] Text
End

Begin %I Line
0 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 -0 -0 1 -20 9.00002 ] concat
188 575 300 519 Line
End

End %I eop

showpage


end
%%EndDocument
  endTexFig 1177 2512 a(Figure)e(7:)15 b(Components)9 b(of)h(Execution)g(T)o
(ime)p eop
%%Page: 7 7
 bop -75 64 a  15795512 10898901 3289088 3289088 17497948 13222133 startTexFig
%%BeginDocument: plots/primes-etime.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 140 scalefont setfont
newpath
LTa
1008 575 M
4089 575 L
1008 491 M
1008 2673 L
LTb
1008 575 M
1071 575 L
4089 575 M
4026 575 L
924 575 M
(0%) Rshow
1008 995 M
1071 995 L
4089 995 M
4026 995 L
924 995 M
(5%) Rshow
1008 1414 M
1071 1414 L
4089 1414 M
4026 1414 L
924 1414 M
(10%) Rshow
1008 1834 M
1071 1834 L
4089 1834 M
4026 1834 L
924 1834 M
(15%) Rshow
1008 2253 M
1071 2253 L
4089 2253 M
4026 2253 L
924 2253 M
(20%) Rshow
1008 2673 M
1071 2673 L
4089 2673 M
4026 2673 L
924 2673 M
(25%) Rshow
1624 491 M
1624 554 L
1624 2673 M
1624 2610 L
1624 351 M
(203) Cshow
2857 491 M
2857 554 L
2857 2673 M
2857 2610 L
2857 351 M
(257) Cshow
2240 491 M
2240 554 L
2240 2673 M
2240 2610 L
2240 351 M
(205) Cshow
3473 491 M
3473 554 L
3473 2673 M
3473 2610 L
3473 351 M
(267) Cshow
LTb
1008 491 M
4089 491 L
4089 2673 L
1008 2673 L
1008 491 L
392 1582 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Percent Slowdown) Cshow
grestore
1624 231 M
(1.0) Cshow
1624 105 M
(5) Cshow
2857 231 M
(0.2) Cshow
2857 105 M
(5) Cshow
2240 231 M
(1.0) Cshow
2240 105 M
(1) Cshow
3473 231 M
(0.2) Cshow
3473 105 M
(1) Cshow
1008 231 M
(N) Cshow
1008 105 M
(O) Cshow
4089 231 M
(Mb) Cshow
4089 105 M
(Mb) Cshow
3658 2505 M
(Primes) Lshow
1008 357 M
(Elapsed Time) Cshow
4089 357 M
(seconds) Cshow
LT0
LT0
2364 3260 M
(Real-Time) Rshow
2532 3260 D
1624 1817 D
2857 1557 D
2240 1800 D
3473 1548 D
LT1
2364 3120 M
(Minor-Incremental) Rshow
2532 3120 A
1624 1817 A
2857 1557 A
2240 1800 A
3473 1515 A
LT2
2364 2980 M
(Major-Incremental) Rshow
2532 2980 B
1624 617 B
2857 734 B
2240 617 B
3473 575 B
LT3
2364 2840 M
(Stop + Copy w/Mods) Rshow
2532 2840 C
1624 533 C
2857 575 C
2240 575 C
3473 541 C
stroke
grestore
end
showpage
%%EndDocument
  endTexFig 48 846 a fh(Figure)10 b(8:)k(Primes)d(Benchmark:)k(Elapsed)c(T)o
(imes)-75 967 y
 15795512 10898901 3289088 3289088 17497948 13222133 startTexFig
%%BeginDocument: plots/comp-etime.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 140 scalefont setfont
newpath
LTa
1008 491 M
4089 491 L
1008 491 M
1008 2673 L
LTb
1008 491 M
1071 491 L
4089 491 M
4026 491 L
924 491 M
(0%) Rshow
1008 927 M
1071 927 L
4089 927 M
4026 927 L
924 927 M
(5%) Rshow
1008 1364 M
1071 1364 L
4089 1364 M
4026 1364 L
924 1364 M
(10%) Rshow
1008 1800 M
1071 1800 L
4089 1800 M
4026 1800 L
924 1800 M
(15%) Rshow
1008 2237 M
1071 2237 L
4089 2237 M
4026 2237 L
924 2237 M
(20%) Rshow
1008 2673 M
1071 2673 L
4089 2673 M
4026 2673 L
924 2673 M
(25%) Rshow
1624 491 M
1624 554 L
1624 2673 M
1624 2610 L
1624 351 M
(176) Cshow
2240 491 M
2240 554 L
2240 2673 M
2240 2610 L
2240 351 M
(199) Cshow
2857 491 M
2857 554 L
2857 2673 M
2857 2610 L
2857 351 M
(209) Cshow
3473 491 M
3473 554 L
3473 2673 M
3473 2610 L
3473 351 M
(245) Cshow
LTb
1008 491 M
4089 491 L
4089 2673 L
1008 2673 L
1008 491 L
392 1582 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Percent Slowdown) Cshow
grestore
1624 133 M
(1.0) Cshow
1624 2 M
(5) Cshow
2240 133 M
(0.2) Cshow
2240 2 M
(5) Cshow
2857 133 M
(1.0) Cshow
2857 2 M
(1) Cshow
3473 133 M
(0.2) Cshow
3473 2 M
(1) Cshow
1008 133 M
(N) Cshow
1008 2 M
(O) Cshow
4089 133 M
(Mb) Cshow
4089 2 M
(Mb) Cshow
3658 2498 M
(Comp) Lshow
1008 378 M
(Elapsed Time) Cshow
4089 378 M
(seconds) Cshow
LT0
LT0
1624 1338 D
2240 1233 D
2857 1198 D
3473 1128 D
LT1
1624 1486 A
2240 1277 A
2857 1119 A
3473 1242 A
LT2
LT3
1624 840 C
2240 884 C
2857 700 C
3473 849 C
stroke
grestore
end
showpage
%%EndDocument
  endTexFig 28 1749 a(Figure)e(9:)15 b(Compiler)9 b(Benchmark:)15 b(Elapsed)c
(T)n(imes)-75 1870 y
 15795512 10898901 3289088 3289088 17497948 13222133 startTexFig
%%BeginDocument: plots/sort-etime.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 140 scalefont setfont
newpath
LTa
1008 491 M
4089 491 L
1008 491 M
1008 2673 L
LTb
1008 491 M
1071 491 L
4089 491 M
4026 491 L
924 491 M
(0%) Rshow
1008 927 M
1071 927 L
4089 927 M
4026 927 L
924 927 M
(5%) Rshow
1008 1364 M
1071 1364 L
4089 1364 M
4026 1364 L
924 1364 M
(10%) Rshow
1008 1800 M
1071 1800 L
4089 1800 M
4026 1800 L
924 1800 M
(15%) Rshow
1008 2237 M
1071 2237 L
4089 2237 M
4026 2237 L
924 2237 M
(20%) Rshow
1008 2673 M
1071 2673 L
4089 2673 M
4026 2673 L
924 2673 M
(25%) Rshow
1624 491 M
1624 554 L
1624 2673 M
1624 2610 L
1624 351 M
(206) Cshow
2857 491 M
2857 554 L
2857 2673 M
2857 2610 L
2857 351 M
(235) Cshow
2240 491 M
2240 554 L
2240 2673 M
2240 2610 L
2240 351 M
(233) Cshow
3473 491 M
3473 554 L
3473 2673 M
3473 2610 L
3473 351 M
(270) Cshow
LTb
1008 491 M
4089 491 L
4089 2673 L
1008 2673 L
1008 491 L
392 1582 M
currentpoint gsave translate 90 rotate 0 0 moveto
(Percent Slowdown) Cshow
grestore
1624 133 M
(1.0) Cshow
1624 2 M
(5) Cshow
2857 133 M
(0.2) Cshow
2857 2 M
(5) Cshow
2240 133 M
(1.0) Cshow
2240 2 M
(1) Cshow
3473 133 M
(0.2) Cshow
3473 2 M
(1) Cshow
1008 133 M
(N) Cshow
1008 2 M
(O) Cshow
4089 133 M
(Mb) Cshow
4089 2 M
(Mb) Cshow
3658 2498 M
(Sort) Lshow
1008 378 M
(Elapsed Time) Cshow
4089 378 M
(seconds) Cshow
LT0
LT0
1624 2315 D
2857 1975 D
2240 2402 D
3473 2045 D
LT1
1624 2272 A
2857 1905 A
2240 2210 A
3473 1879 A
LT2
1624 954 B
2857 866 B
2240 1242 B
3473 1102 B
LT3
1624 831 C
2857 753 C
2240 945 C
3473 779 C
stroke
grestore
end
showpage
%%EndDocument
  endTexFig 61 2652 a(Figure)f(10:)k(Sort)9 b(Benchmark:)15 b(Elapsed)c(T)o
(imes)1025 -33 y(will)d(see)k(why)e(it)f(should)g(be)i(essentially)e(the)i
(same.)1025 85 y fd(4.5)50 b(Overheads)9 b(Due)g(to)h(Compiler)f(Modi\256cati\
ons)1025 163 y fh(The)15 b(compiler)g(modi\256cations)f(which)h(were)g(needed)
h(to)e(support)1025 213 y(our)7 b(technique)h(impose)g(two)f(overheads)i(on)e
(the)h(compiler:)13 b(testing)1025 262 y(headers)j(for)g(forwarding)f(words)g
(and)h(adding)f(extra)h(records)h(to)1025 312 y(the)c(log.)23 b(The)14 b(extr\
a)f(log)f(records)i(also)f(impose)g(an)h(overhead)f(on)1025 362 y(the)h(garba\
ge)h(collector)m(.)27 b(T)n(o)14 b(measure)i(these)e(overheads)h(we)g(ran)
1025 412 y(the)9 b(stop-and-copy)g(collector)h(with)e(each)k(of)d(these)i(mod\
i\256cations)1025 462 y(enabled)i(separately)m(.)23 b(W)m(e)14 b(were)f(unabl\
e)g(to)f(measure)j(the)e(cost)f(of)1025 511 y(testing)c(for)i(the)g(presence)
h(of)f(forwarding)e(pointers,)h(leading)h(us)g(to)1025 561 y(conclude)h(that)
g(it)g(is)h(negligible,)e(or)i(at)g(most)f(a)h(few)h(percent.)19 b(The)1025
611 y(cost)13 b(of)g(the)g(extra)g(log)g(entries)g(accounted)g(for)g(essentia\
lly)g(all)f(of)1025 661 y(the)e(overhead)g(due)g(to)g(the)g(compiler)g(modi\
\256cations.)1066 711 y(Examining)i(the)h(entries)g(in)g(\256gures)g(8,)g(9,a\
nd)g(10,)h(we)g(see)g(that)1025 761 y(the)i(overhead)g(of)g(these)h(additiona\
l)d(records)j(is)f(essentially)g(0%)1025 810 y(for)d fe(Primes)h fh(and)g(nea\
r)g(5%)f(for)g fe(Comp)g fh(and)h fe(Sort)p fh(.)24 b(This)14 b(is)f(easily)
1025 860 y(explained)i(by)g(following)f(observations.)31 b fe(Primes)16 b fh
(does)g(almost)1025 910 y(no)e(mutations)g(and)h(so)f(should)g(see)i(no)f(ove\
rhead.)29 b fe(Sort)14 b fh(mostly)1025 960 y(mutates)8 b(integer)g(reference\
s)i(which)e(the)g(compiler)g(normally)g(does)1025 1010 y(not)f(place)i(on)f
(the)h(log,)f(while)g fe(Comp)g fh(contains)g(many)g(mutations)g(to)1025 1059
y(byte)g(data)h(which)f(is)g(likewise)g(normally)g(not)f(logged.)14 b(Perhaps)
9 b(the)1025 1109 y(overhead)d(due)g(to)g(these)g(non-pointer)t(mutations)g
(could)f(be)i(reduced)1025 1159 y(either)f(by)g(forwarding)f(them)h(to)g(to-s\
pace)h(during)e(mutation)g(instead)1025 1209 y(of)h(logging,)g(or)g(by)h(usin\
g)f(other)g(logging)f(techniques.)13 b(W)m(e)8 b(have)f(not)1025 1259 y(yet)i
(made)i(separate)g(measurements)h(of)e(the)f(mutator)h(and)g(garbage)1025 1308
y(collector)f(costs.)1128 1406 y 793 2 v 46 x 2 46 v 253 w 2 46 v 8 w 2 46 v 2
46 v 1604 1438 a fb(Primes)1920 1452 y 2 46 v 1128 1498 a 2 46 v 1203 1484 a
(O)100 b(N)1381 1498 y 2 46 v 8 w 2 46 v 1452 1484 a(CR)50 b(%CR)91 b(CF)49 b
(%CF)1920 1498 y 2 46 v 1128 1543 a 2 46 v 1153 1530 a(\(Mb\))i(\(Mb\))1381
1543 y 2 46 v 8 w 2 46 v 1415 1530 a(\(secs\))179 b(\(secs\))1920 1543 y 2 46
v 1128 1545 a 793 2 v 46 x 2 46 v 1211 1577 a(1)80 b(0.2)1381 1591 y 2 46 v 8
w 2 46 v 1455 1577 a(7.0)k(2.3)71 b(14.1)80 b(4.7)1920 1591 y 2 46 v 1128 1636
a 2 46 v 1211 1622 a(1)g(1.0)1381 1636 y 2 46 v 8 w 2 46 v 1455 1622 a(6.4)k
(2.7)71 b(21.2)80 b(9.0)1920 1636 y 2 46 v 1128 1682 a 2 46 v 1211 1668 a(5)g
(0.2)1381 1682 y 2 46 v 8 w 2 46 v 1455 1668 a(5.7)k(2.0)71 b(14.7)80 b(5.1)
1920 1682 y 2 46 v 1128 1728 a 2 46 v 1211 1714 a(5)g(1.0)1381 1728 y 2 46 v 8
w 2 46 v 1455 1714 a(6.1)k(2.6)71 b(21.4)80 b(9.2)1920 1728 y 2 46 v 1128 1729
a 793 2 v 56 x 793 2 v 45 x 2 46 v 253 w 2 46 v 8 w 2 46 v 2 46 v 1610 1817 a
(Comp)1920 1830 y 2 46 v 1128 1876 a 2 46 v 1203 1862 a(O)100 b(N)1381 1876 y
2 46 v 8 w 2 46 v 1452 1862 a(CR)50 b(%CR)91 b(CF)49 b(%CF)1920 1876 y 2 46 v
1128 1922 a 2 46 v 1153 1908 a(\(Mb\))i(\(Mb\))1381 1922 y 2 46 v 8 w 2 46 v
1415 1908 a(\(secs\))179 b(\(secs\))1920 1922 y 2 46 v 1128 1923 a 793 2 v 46
x 2 46 v 1211 1955 a(1)80 b(0.2)1381 1969 y 2 46 v 8 w 2 46 v 1455 1955 a(3.3)
k(1.3)90 b(3.7)80 b(1.4)1920 1969 y 2 46 v 1128 2015 a 2 46 v 1211 2001 a(1)g
(1.0)1381 2015 y 2 46 v 8 w 2 46 v 1455 2001 a(3.0)k(1.3)90 b(4.6)80 b(2.0)
1920 2015 y 2 46 v 1128 2060 a 2 46 v 1211 2047 a(5)g(0.2)1381 2060 y 2 46 v 8
w 2 46 v 1455 2047 a(3.1)k(1.4)90 b(3.9)80 b(1.8)1920 2060 y 2 46 v 1128 2106
a 2 46 v 1211 2092 a(5)g(1.0)1381 2106 y 2 46 v 8 w 2 46 v 1455 2092 a(2.5)k
(1.3)90 b(4.7)80 b(2.4)1920 2106 y 2 46 v 1128 2108 a 793 2 v 55 x 793 2 v 46
x 2 46 v 253 w 2 46 v 8 w 2 46 v 2 46 v 1624 2195 a(Sort)1920 2209 y 2 46 v
1128 2255 a 2 46 v 1203 2241 a(O)100 b(N)1381 2255 y 2 46 v 8 w 2 46 v 1452
2241 a(CR)50 b(%CR)91 b(CF)49 b(%CF)1920 2255 y 2 46 v 1128 2300 a 2 46 v 1153
2287 a(\(Mb\))i(\(Mb\))1381 2300 y 2 46 v 8 w 2 46 v 1415 2287 a(\(secs\))179
b(\(secs\))1920 2300 y 2 46 v 1128 2302 a 793 2 v 46 x 2 46 v 1211 2334 a(1)
80 b(0.2)1381 2348 y 2 46 v 8 w 2 46 v 1455 2334 a(5.3)k(1.7)71 b(10.2)80 b
(3.2)1920 2348 y 2 46 v 1128 2393 a 2 46 v 1211 2380 a(1)g(1.0)1381 2393 y 2
46 v 8 w 2 46 v 1455 2380 a(4.8)k(1.7)71 b(14.2)80 b(5.0)1920 2393 y 2 46 v
1128 2439 a 2 46 v 1211 2425 a(5)g(0.2)1381 2439 y 2 46 v 8 w 2 46 v 1455 2425
a(4.3)k(1.6)71 b(10.0)80 b(3.6)1920 2439 y 2 46 v 1128 2485 a 2 46 v 1211 2471
a(5)g(1.0)1381 2485 y 2 46 v 8 w 2 46 v 1455 2471 a(4.6)k(1.8)71 b(13.9)80 b
(5.6)1920 2485 y 2 46 v 1128 2486 a 793 2 v 1276 2623 a fh(T)m(able)11 b(2:)j
(Log)d(processing)e(costs)p eop
%%Page: 8 8
 bop -75 -33 a fg(4.5.1)42 b(Processing)10 b(the)h(Mutation)e(Log)-75 44 y fh
(T)m(wo)15 b(costs)h(of)f(our)f(technique)h(which)g(are)g(not)g(shared)g(by)g
(other)-75 94 y(incremental)d(or)g(generational)g(collectors)g(are)h(the)f
(costs)g(of)g(reap-)-75 144 y(plying)6 b(mutations)g(to)h(to-space)h(and)g
(of)f(atomically)g(updating)f(roots)-75 194 y(found)13 b(in)g(the)h(log)f(dur\
ing)g(a)h(minor)g(\257ip.)26 b(T)m(o)14 b(measure)i(this)d(cost)-75 243 y(we)
c(repeatedly)f(processed)h(the)f(mutation)g(log)f(in)h(order)g(to)g(increase)
-75 293 y(the)14 b(overhead)h(to)f(a)h(measurable)h(level,)f(both)f(with)f
(and)i(without)-75 343 y(the)e(reapplication)g(of)g(mutations)g(enabled.)25 b
(This)13 b(allowed)h(us)f(to)-75 393 y(distinguished)8 b(the)i(two)g(cases)i
(described)e(above.)-33 443 y(Figure)g(2)h(presents)g(these)g(results.)17 b
(CR)10 b(is)h(the)g(cost)g(of)f(reapply-)-75 493 y(ing)e(the)i(mutations)e
(in)h(seconds)g(and)h(%CR)e(is)h(the)g(percentage)i(cost)-75 542 y(relative)i
(to)g(that)g(of)h(the)f(real-time)h(collector)m(.)25 b(CF)13 b(is)h(the)f(cos\
t)h(of)-75 592 y(atomically)d(\257ipping)e(the)j(roots)e(in)h(seconds)h(and)f
(%CF)g(is)g(percent)-75 642 y(relative)d(to)h(real-time)f(collection.)14 b
(The)c(cost)e(of)h(actually)f(forward-)-75 692 y(ing)k(the)h(stores)g(is)g
(generally)f(small)h(and)g(is)g(always)h(smaller)f(than)-75 742 y(the)f(cost)
h(of)f(the)g(atomic)g(\257ip.)21 b(If)13 b(the)f(minor)f(collection)h(need)g
(not)-75 791 y(be)h(incremental)f(then)h(the)f(\257ip)g(cost)h(may)g(be)g(avo\
ided.)21 b(It)12 b(is)h(also)-75 841 y(possible)d(that)g(improving)f(the)i
(data)g(structures)f(used)h(to)f(represent)-75 891 y(the)15 b(mutation)f(log)
g(would)g(reduce)i(this)e(cost.)29 b(This)15 b(data,)i(along)-75 941 y(with)8
b(the)h(measurements)i(of)d(overheads)i(due)f(to)f(compiler)h(modi\256-)-75
991 y(cations)g(also)h(reveals)g(why)f(the)g(minor)o(-incremental)g(collector)
g(has)-75 1040 y(essentially)j(the)h(same)h(performance)g(as)g(the)e(real-tim\
e)h(collector)m(.)-75 1090 y(The)h(minor)n(-incremental)g(collector)f(shares)
h(all)f(these)h(costs)g(with)-75 1140 y(the)c(real-time)g(collector)n(,)h(and)
f(these)h(costs)f(dominate.)-75 1250 y fg(4.5.2)42 b(Latent)10 b(garbage)-75
1328 y fh(One)i(potential)d(overhead)j(for)f(any)g(incremental)h(collection)e
(algo-)-75 1378 y(rithm)k(is)h(that)f(data)h(considered)g(live)f(by)g(the)h
(collector)f(may)i(die)-75 1428 y(before)9 b(the)f(collector)g(terminates.)14
b(This)9 b(latent)e(garbage)i(increases)-75 1478 y(the)d(overhead)h(of)g(coll\
ection)e(since)i(it)f(must)g(be)h(copied)f(and)h(it)f(leaves)-75 1527 y(less)
j(free)g(memory)g(to)f(be)h(used)f(by)h(the)f(allocator)m(.)15 b(T)m(o)9 b
(measure)h(this)-75 1577 y(effect)h(we)h(compared)g(the)f(amounts)g(of)g(data)
g(copied)h(by)e(the)h(stop-)-75 1627 y(and-copy)h(collector)g(and)h(the)f(rea\
l-time)h(collector)m(.)22 b(Because)14 b(the)-75 1677 y(\257ips)f(and)g(alloc\
ation)f(amounts)g(were)i(exactly)f(synchronized)g(the)-75 1727 y(dif)n(ferenc\
e)f(between)f(the)f(two)f(is)h(the)g(latent)g(garbage.)-33 1776 y(T)m(able)g
(3)f(shows)g(our)g(measurements)i(of)e(latent)g(garbage)h(both)e(in)-75 1826 y
(Kb)h(\(G\))g(and)g(as)h(percentage)h(of)e(the)g(true)g(live)f(data)i(\(%G\).)
f(W)m(e)h(also)-75 1876 y(estimate)g(the)f(cost)h(of)f(copying)f(this)h(much)
g(data)h(in)f(seconds)h(\(CG\).)-75 1926 y(Our)h(cost)g(estimates)h(are)g(bas\
ed)g(on)e(measurements)j(of)e(the)g(rate)h(at)-75 1976 y(which)f(the)g(collec\
tor)g(copied)h(data.)19 b(These)13 b(measurements)g(show)-75 2025 y(a)c(typic\
al)e(copying)g(rate)i(of)f(approximately)f(2Mb/sec.)14 b(This)8 b(corre-)-75
2075 y(lates)j(well)f(with)g(the)g(fact)i(that)e(L)h(=)g(100Kb)f(gives)g(50)h
(millisecond)-75 2125 y(pause)g(times.)-33 2175 y(W)l(e)16 b(see)h(that)e(the)
g(amount)g(of)g(latent)g(garbage)h(is)f(generally)g(a)-75 2225 y(small)c(frac\
tion)g(of)f(the)h(total)f(amount)h(of)g(data)g(copied.)18 b(The)12 b(abso-)
-75 2275 y(lute)7 b(amount)g(of)g(latent)g(garbage)h(goes)g(down)f(both)f(wit\
h)h(increasing)-75 2324 y(N)14 b(and)g(O.)h(For)e(O)i(this)e(is)h(because)h
(there)f(are)h(fewer)g(collections)-75 2374 y(to)d(create)i(latent)e(garbage.)
22 b(For)13 b(N)f(it)g(is)g(because)i(for)f(these)g(mea-)-75 2424 y(surements)
i(increasing)f(N)h(increases)g(L.)h(When)e(L)h(increases)h(the)-75 2474 y(inc\
remental)d(algorithm)e(terminates)i(more)g(quickly)e(and)i(there)g(is)-75 2524
y(less)f(latent)f(garbage.)19 b(These)13 b(measurements)g(suggest)e(that)g
(latent)-75 2573 y(garbage)j(is)f(not)f(an)h(important)f(contributor)f(to)i
(the)g(overheads)g(in)-75 2623 y(our)d(current)g(tests.)15 b(However)n(,)c
(dif)n(ferent)g(policies)e(with)g(respect)i(to)-75 2673 y(when)e(to)g(begin)g
(collection)f(and)h(how)g(rapidly)f(to)h(complete)h(it)e(may)1211 -28 y 627 2
v 46 x 2 46 v 253 w 2 46 v 8 w 2 46 v 2 46 v 1604 4 a fb(Primes)1837 18 y 2 46
v 1211 64 a 2 46 v 1286 50 a(O)100 b(N)1464 64 y 2 46 v 8 w 2 46 v 1541 50 a
(G)50 b(%G)85 b(CG)1837 64 y 2 46 v 1211 109 a 2 46 v 1236 96 a(\(Mb\))51 b
(\(Mb\))1464 109 y 2 46 v 8 w 2 46 v 1498 96 a(\(Kb\))158 b(\(secs\))1837 109
y 2 46 v 1211 111 a 627 2 v 46 x 2 46 v 1294 143 a(1)80 b(0.2)1464 157 y 2 46
v 8 w 2 46 v 1512 143 a(739)61 b(0.5)89 b(0.4)1837 157 y 2 46 v 1211 202 a 2
46 v 1294 189 a(1)80 b(1.0)1464 202 y 2 46 v 8 w 2 46 v 1550 189 a(0)61 b(0.0)
89 b(0.0)1837 202 y 2 46 v 1211 248 a 2 46 v 1294 234 a(5)80 b(0.2)1464 248 y
2 46 v 8 w 2 46 v 1512 234 a(159)61 b(0.1)89 b(0.1)1837 248 y 2 46 v 1211 294
a 2 46 v 1294 280 a(5)80 b(1.0)1464 294 y 2 46 v 8 w 2 46 v 1550 280 a(0)61 b
(0.0)89 b(0.0)1837 294 y 2 46 v 1211 295 a 627 2 v 1209 351 a 631 2 v 1208 397
a 2 46 v 254 w 2 46 v 8 w 2 46 v 2 46 v 1610 383 a(Comp)1839 397 y 2 46 v 1208
442 a 2 46 v 1284 429 a(O)100 b(N)1462 442 y 2 46 v 8 w 2 46 v 1543 429 a(G)
50 b(%G)85 b(CG)1839 442 y 2 46 v 1208 488 a 2 46 v 1234 474 a(\(Mb\))51 b
(\(Mb\))1462 488 y 2 46 v 8 w 2 46 v 1500 474 a(\(Kb\))158 b(\(secs\))1839 488
y 2 46 v 1209 490 a 631 2 v 1208 535 a 2 46 v 1292 522 a(1)80 b(0.2)1462 535 y
2 46 v 8 w 2 46 v 1496 522 a(7556)60 b(3.6)90 b(3.9)1839 535 y 2 46 v 1208 581
a 2 46 v 1292 567 a(1)80 b(1.0)1462 581 y 2 46 v 8 w 2 46 v 1496 567 a(6247)
60 b(4.1)90 b(3.2)1839 581 y 2 46 v 1208 627 a 2 46 v 1292 613 a(5)80 b(0.2)
1462 627 y 2 46 v 8 w 2 46 v 1496 613 a(5561)60 b(1.6)90 b(2.8)1839 627 y 2 46
v 1208 672 a 2 46 v 1292 658 a(5)80 b(1.0)1462 672 y 2 46 v 8 w 2 46 v 1496
658 a(1723)60 b(1.9)90 b(0.9)1839 672 y 2 46 v 1209 674 a 631 2 v 55 x 631 2 v
1208 775 a 2 46 v 254 w 2 46 v 8 w 2 46 v 2 46 v 1624 761 a(Sort)1839 775 y 2
46 v 1208 821 a 2 46 v 1284 807 a(O)100 b(N)1462 821 y 2 46 v 8 w 2 46 v 1543
807 a(G)50 b(%G)85 b(CG)1839 821 y 2 46 v 1208 866 a 2 46 v 1234 853 a(\(Mb\))
51 b(\(Mb\))1462 866 y 2 46 v 8 w 2 46 v 1500 853 a(\(Kb\))158 b(\(secs\))
1839 866 y 2 46 v 1209 868 a 631 2 v 1208 914 a 2 46 v 1292 900 a(1)80 b(0.2)
1462 914 y 2 46 v 8 w 2 46 v 1496 900 a(5561)60 b(1.6)90 b(2.8)1839 914 y 2 46
v 1208 959 a 2 46 v 1292 946 a(1)80 b(1.0)1462 959 y 2 46 v 8 w 2 46 v 1496
946 a(4115)60 b(1.5)90 b(2.1)1839 959 y 2 46 v 1208 1005 a 2 46 v 1292 991 a
(5)80 b(0.2)1462 1005 y 2 46 v 8 w 2 46 v 1496 991 a(1237)60 b(0.4)90 b(0.6)
1839 1005 y 2 46 v 1208 1051 a 2 46 v 1292 1037 a(5)80 b(1.0)1462 1051 y 2 46
v 8 w 2 46 v 1514 1037 a(998)61 b(0.4)90 b(0.5)1839 1051 y 2 46 v 1209 1052 a
631 2 v 1251 1189 a fh(T)m(able)11 b(3:)j(Latent)c(garbage)h(amounts)1025 1322
y(make)g(this)e(effect)h(more)h(important.)1025 1462 y fi(5)58 b(Related)15 b
(W)m(ork)1025 1554 y fh(The)g(real-time)f(copying)f(collector)h(by)g(Baker[2)
o(])h(\256rst)f(proposed)1025 1604 y(the)d(condition)e(that)i(object)g(access\
es)j(somehow)e(be)f(redirected)h(to)1025 1654 y(the)f(relocated)i(copy)e(of)h
(the)g(object.)20 b(The)12 b(work)g(of)f(Ellis,)h(Li,)h(and)1025 1704 y(Appel\
[1)o(])j(exempli\256es)h(the)f(use)g(of)g(virtual)f(memory)i(traps)f(and)1025
1754 y(other)11 b(operating)h(system)g(support)f(to)h(implement)g(similar)g
(condi-)1025 1803 y(tions.)27 b(A)15 b(method)f(due)h(to)f(Brooks[4)o(],)i
(and)f(later)f(implemented)1025 1853 y(by)19 b(North[16)n(],)k(requires)d(the)
g(mutator)g(to)f(follow)g(a)i(forward-)1025 1903 y(ing)12 b(pointer)g(which)h
(leads)h(to)f(the)g(relocated)g(object.)24 b(Nilsen[15)o(])1025 1953 y(descri\
bes)17 b(a)g(software)f(implementation)f(of)i(Baker)q(')n(s)g(algorithm)1025
2003 y(which)d(is)g(designed)g(for)g(an)h(environment)e(in)h(which)g(strings)
f(are)1025 2052 y(heavily)i(used.)31 b(The)17 b(overhead)f(of)f(his)g(techniq\
ue)g(seems)j(to)d(be)1025 2102 y(prohibitive)7 b(in)j(a)h(more)f(general)h
(context.)1066 2152 y(Recent)d(work)f(by)h(Boehm,)g(Demers)h(and)f(Shenker)g
([3])g(on)f(a)h(con-)1025 2202 y(current)g(mark-and-sweep)i(collector)f(promi\
ses)g(real-time)g(perfor-)1025 2252 y(mance.)24 b(As)13 b(in)f(our)h(algorith\
m,)f(a)i(form)e(of)h(mutation)e(logging)g(is)1025 2301 y(used)g(by)h(the)f
(collector)g(to)h(track)f(changes)i(made)g(by)e(the)h(mutator)m(.)1025 2351 y
(The)i(mutation)f(log)g(is)h(implemented)g(by)f(periodically)g(sampling)1025
2401 y(the)i(dirty)f(page)j(bits)d(maintained)i(by)f(the)h(virtual)e(memory)i
(sys-)1025 2451 y(tem.)27 b(Live)15 b(objects)f(are)h(not)e(relocated,)j(but)
d(rather)h(are)i(marked)1025 2501 y(non-destructively)-6 b(.)21 b(Therefore,)
14 b(GC)e(ef)o(forts)f(can)i(be)g(interleaved)1025 2551 y(freely)e(with)g(mut\
ator)g(operations,)h(but)f(the)g(compaction)h(possible)1025 2600 y(in)g(copyi\
ng)h(collectors)g(is)g(unavailable.)25 b(The)14 b(authors)f(observed)1025 2650
y(the)d(possibility)e(of)j(using)f(a)h(from-space)h(invariant)d(for)i(a)g(cop\
ying)1025 2700 y(collector)l(.)p eop
%%Page: 9 9
 bop -33 -33 a fh(T)m(wo)13 b(recent)g(collectors)f(for)g(ML)h(are)h(quite)e
(closely)g(related)h(to)-75 16 y(ours.)22 b(However)o(,)14 b(both)d(depend)i
(on)f(the)h(semantics)h(of)e(ML)h(more)-75 66 y(closely)d(than)g(our)g(work.)
-33 116 y(Doligez)e(and)h(Leroy[8])g(have)h(implemented)f(a)g(concurrent)g
(col-)-75 166 y(lector)j(which)f(uses)i(a)f(mixed)g(strategy)f(to)h(provide)e
(collection)h(for)-75 216 y(a)e(multithreaded)f(version)g(of)h(CAML.)g(Immuta\
ble)g(objects)g(are)h(al-)-75 265 y(located)f(in)g(private)g(heaps)h(which)f
(are)h(collected)f(by)g(a)h(replication-)-75 315 y(based)j(stop-and-copy)e
(collector)m(.)22 b(This)12 b(collector)g(copies)g(values)-75 365 y(into)17 b
(a)i(shared)g(heap)f(which)g(is)g(collected)h(using)e(a)i(concurrent)-75 415 y
(mark-and-sweep)c(algorithm)e(based)i(on)e(Dijkstra[7)o(].)27 b(T)m(o)14 b
(avoid)-75 465 y(the)e(issue)g(of)f(inconsistent)g(mutable)g(values)i(all)e
(such)h(objects)g(are)-75 514 y(allocated)j(in)f(the)h(shared)g(heap.)29 b
(If)14 b(mutations)g(to)g(such)h(a)h(value)-75 564 y(cause)f(other)e(values)g
(which)g(currently)g(reside)g(in)g(a)h(private)f(heap)-75 614 y(to)e(become)j
(reachable)f(from)f(the)f(shared)i(heap,)g(these)g(values)f(are)-75 664 y(cop\
ied)k(into)e(the)i(shared)g(heap)h(at)f(the)g(time)f(of)h(mutation.)31 b(The)
-75 714 y(use)10 b(of)e(replication-copying)f(allows)h(the)h(original)e(owner)
i(of)g(these)-75 764 y(values)h(to)g(continue)f(to)h(access)j(the)d(copy)g
(in)f(the)h(private)g(heap.)-33 813 y(Huelsber)o(gen)j(and)g(Larus[11])g(have)
h(recently)f(built)e(a)j(concur-)-75 863 y(rent)6 b(collector)g(for)g(SML/NJ)
g(which)g(uses)i(replication-based)d(copy-)-75 913 y(ing.)14 b(They)8 b(use)h
(a)g(to-space)g(invariant)e(and)h(a)h(consistency)f(protocol)-75 963 y(which)
13 b(requires)f(that)h(the)f(mutator)h(read)g(and)g(write)f(the)h(to-space)
-75 1013 y(version)7 b(if)g(it)g(exists.)14 b(Our)8 b(previous)f(work[14)n
(])h(considers)g(this)e(pro-)-75 1062 y(tocol,)i(the)h(from-space)g(invariant)
e(and)i(other)f(consistency)g(options)-75 1112 y(for)g(replication)g(garbage)
h(collection.)14 b(In)8 b(addition)f(to)h(maintaining)-75 1162 y(a)16 b(to-sp\
ace)g(invariant,)h(their)e(collector)g(has)h(a)g(number)g(of)f(other)-75 1212
y(dif)n(ferences)c(from)d(our)h(own.)14 b(Their)9 b(collector)f(is)h(not)f
(generational)-75 1262 y(which)j(leads)g(to)g(a)h(slow)e(down)h(relative)g
(to)f(the)h(original)e(SML/NJ)-75 1311 y(collector)h(\(despite)h(the)g(use)h
(of)e(multiple)g(processors\))h(and)g(makes)-75 1361 y(it)f(dif)o(\256cult)g
(to)h(directly)f(assess)i(the)f(overhead)h(of)e(their)h(technique.)-75 1411 y
(Less)d(important)e(their)g(implementation)f(does)i(not)f(merge)h(forward-)
-75 1461 y(ing)15 b(pointers)h(with)f(header)i(words)f(and)g(thus)f(has)i(a)g
(substantial)-75 1511 y(space)h(penalty)l(.)34 b(Also)16 b(their)g(implementa\
tion)f(is)h(more)h(closely)-75 1561 y(tied)8 b(to)g(the)g(semantics)i(of)e
(mutable)g(values)h(in)f(SML)h(and)f(to)g(the)g(de-)-75 1610 y(tails)h(of)g
(their)f(processor)h(memory)h(consistency)f(model.)15 b(W)m(e)10 b(hope)-75
1660 y(to)i(implement)h(their)f(technique)g(along)g(with)g(others)g(from[14)o
(])h(in)-75 1710 y(the)c(context)g(of)g(a)h(concurrent)f(version)f(of)i(the)f
(collector)f(described)-75 1760 y(here.)38 b(This)17 b(will)f(allow)h(a)h(qua\
ntitative)e(comparison)h(of)g(these)-75 1810 y(options.)-75 1949 y fi(6)58 b
(Futur)o(e)15 b(W)m(ork)f(and)i(Conclusions)-75 2042 y fh(W)m(e)11 b(are)h
(actively)f(extending)f(the)g(current)h(work)g(in)f(several)i(direc-)-75 2092
y(tions.)24 b(Our)13 b(experimental)h(implementation)e(is)h(perfectly)g(suite\
d)-75 2142 y(for)g(use)h(as)g(a)g(concurrent)f(collector)m(.)24 b(The)14 b
(replication)e(primitive)-75 2191 y(can)17 b(be)f(interleaved)f(freely)h(with)
e(mutator)h(activity)l(,)j(as)e(long)f(as)-75 2241 y(the)g(memory)g(system)g
(provides)f(single-word)f(memory)j(atomic-)-75 2291 y(ity)l(.)f(Synchronizati\
on)7 b(between)i(the)f(collector)g(and)h(the)f(mutator)g(is)-75 2341 y(only)i
(required)h(for)f(transferring)g(the)h(mutation)f(log)g(and)h(updating)-75
2391 y(the)h(roots.)21 b(The)13 b(concurrent)f(version)g(of)g(this)g(implemen\
tation)f(is)-75 2441 y(working)d(and)h(initial)e(performance)j(measurements)g
(can)g(be)g(found)-75 2490 y(in)g([18)o(].)-33 2540 y(Replication-based)k(cop\
ying)g(is)h(also)g(a)h(promising)d(approach)-75 2590 y(for)d(use)h(in)g(heap)
g(based)g(transaction)f(systems.)17 b(In)11 b(addition)e(to)h(the)-75 2640 y
(advantages)h(concurrent)f(collection)f(has)h(for)g(such)h(systems)f(a)h(fur-)
-75 2690 y(ther)d(advantage)g(is)g(that)f(such)h(systems)h(also)e(must)h(log)
f(all)h(mutation)1025 -33 y(to)h(transactional)h(data.)15 b(Replication-copyi\
ng)7 b(is)j(thus)g(even)h(more)1025 16 y(attractive.)22 b(W)m(e)13 b(are)h
(currently)d(working)h(on)g(extending)g(the)g(con-)1025 66 y(current)i(collec\
tor)g(implementation)g(to)g(support)f(a)j(transactional)1025 116 y(persistent)
9 b(heap[13].)1066 166 y(An)j(area)i(which)e(we)g(have)h(not)f(yet)g(explored)
g(is)g(what)g(policies)1025 216 y(are)j(best)h(suited)e(for)h(use)g(with)f
(our)h(collector)m(.)30 b(For)15 b(example)h(in)1025 265 y(an)c(interactive)f
(system,)i(our)e(technique)g(would)g(allow)g(collection)1025 315 y(to)h(proce\
ed)h(while)g(the)g(system)g(was)h(waiting)e(for)g(input.)22 b(If)13 b(such)
1025 365 y(pauses)h(are)h(long)e(enough)g(or)h(frequent)f(enough)h(collection)
f(may)1025 415 y(become)j(essentially)e(free.)30 b(On)15 b(the)g(other)f(hand)
h(when)g(running)1025 465 y(compute)e(bound)f(jobs)h(it)f(may)i(make)g(no)f
(sense)h(to)f(pay)h(even)f(the)1025 514 y(small)f(cost)f(of)h(incremental)g
(collection)f(since)h(such)h(jobs)e(already)1025 564 y(introduce)e(lengthy)g
(pauses.)1025 704 y fi(Conclusions)1025 797 y fh(W)l(e)i(have)f(designed)f
(and)h(implemented)g(a)g(real-time)g(garbage)g(col-)1025 846 y(lector)d(using)
g(a)i(new)f(replication-based)f(invariant.)13 b(This)8 b(invariant)1025 896 y
(eliminates)j(the)h(need)g(for)f(a)h(read-barrier)n(,)h(and)f(therefore)g(ena\
bles)1025 946 y(real-time)c(garbage)h(collection)e(on)h(stock)h(hardware)g
(with)e(low)h(mu-)1025 996 y(tator)13 b(overhead.)26 b(W)m(e)15 b(have)f(exam\
ined)g(various)g(overhead)g(costs)1025 1046 y(in)d(an)i(implementation)f(that)
f(relies)i(on)f(mutator)g(cooperation)g(for)1025 1096 y(logging.)18 b(Our)12 b
(experimental)g(implementations)f(show)h(that)f(con-)1025 1145 y(trolled)5 b
(pause)i(times)g(of)g(50)f(milliseconds)g(can)h(be)g(readily)f(achieved)1025
1195 y(in)g(practice;)j(this)e(satis\256es)h(the)f(requirements)g(for)g(most)
h(interactive)1025 1245 y(applications.)1025 1364 y fd(Acknowledgments)1025
1441 y fh(Thanks)j(to)g(the)g(DEC)h(Systems)g(Research)g(Center)f(for)g(suppo\
rt)f(as)1025 1491 y(summer)d(interns)f(in)g(1990,)g(at)h(which)f(time)h(this)
e(idea)i(was)h(originally)1025 1541 y(conceived,)g(to)e(David)g(Pierce)i(and)
f(Nicholas)g(Haines)g(for)f(their)g(con-)1025 1591 y(tributions)h(to)i(the)g
(original)f(implementation,)h(and)h(to)f(John)h(Reppy)1025 1641 y(for)c(his)h
(suggestion)f(to)h(merge)h(the)f(forwarding)f(pointer)g(and)h(header)1025 1690
y(word.)24 b(Plenty)12 b(of)h(thanks)g(goes)h(to)e(the)i(facilities)e(staf)o
(f)i(at)f(CMU,)1025 1740 y(in)f(particular)f(Alessandro)i(Forin)f(and)g(Dale)
h(Moore,)h(for)e(provid-)1025 1790 y(ing)e(timely)g(assistance)i(adjusting)d
(the)i(clock)g(resolution.)16 b(Thanks)1025 1840 y(also)d(to)f(our)h(readers:)
21 b(Andrew)14 b(Myers,)g(Mark)f(Day)n(,)h(Greg)g(Mor-)1025 1890 y(risett,)i
(Nicholas)f(Haines,)i(Richard)e(Lethin,)h(John)f(Keen,)i(Amer)1025 1939 y(Diw\
an,)9 b(David)f(T)m(arditi,)g(Brian)g(Milnes,)h(Ali-Reza)f(Adl-T)m(abatabai)
1025 1989 y(and)i(David)g(Gif)n(ford.)1025 2122 y fi(Refer)o(ences)1043 2207 y
fb([1])21 b(Andrew)9 b(W)m(.)h(Appel,)f(John)g(R.)g(Ellis,)i(and)d(Kai)i(Li.)
k(Real-time)c(Con-)1107 2252 y(current)e(Garbage)e(Collection)h(on)g(Stock)f
(Multiprocessors.)k(In)d fa(SIG-)1107 2298 y(PLAN)16 b(Symposium)f(on)h(Pr)n
(ogramming)f(Language)f(Design)h(and)1107 2344 y(Implementation)p fb(,)10 b
(pages)d(11\26120,)h(1988.)1043 2406 y([2])21 b(H.)12 b(G.)f(Baker)m(.)18 b
(List)11 b(Processing)d(in)j(Real)g(Time)f(on)g(a)h(Serial)g(Com-)1107 2452 y
(puter)n(.)j fa(Communications)8 b(of)h(the)g(ACM)p fb(,)h(21\(4\):280\261294\
,)d(1978.)1043 2514 y([3])21 b(Hans-Juer)n(gen)15 b(Boehm,)h(Alan)g(J.)f(Deme\
rs,)i(and)e(Scott)g(Shenker)m(.)1107 2559 y(Mostly)i(Parallel)f(Garbage)f(Col\
lection.)32 b(In)16 b fa(SIGPLAN)g(Sympo-)1107 2605 y(sium)8 b(on)f(Pr)n(ogra\
mming)f(Language)f(Design)h(and)h(Implementation)p fb(,)1107 2651 y(pages)h
(157\261164,)f(1991.)p eop
%%Page: 10 10
 bop -56 -33 a fb([4])21 b(Rodney)5 b(A.)i(Brooks.)i(T)n(rading)d(Data)h(Spac\
e)e(for)i(Reduced)e(Time)i(and)8 12 y(Code)j(Space)g(in)i(Real-Time)f(Garbage)
f(Collection.)19 b(In)12 b fa(SIGPLAN)8 58 y(Symposium)c(on)g(LISP)h(and)g
(Functional)f(Pr)n(ogramming)p fb(,)g(1984.)-56 120 y([5])21 b(Stuart)8 b(K.)
f(Card,)h(Thomas)e(P)l(.)i(Moran,)f(and)g(Allen)g(Newell.)k fa(The)6 b(Psy-)8
166 y(chology)h(of)i(Human-Computer)d(Interaction)p fb(.)12 b(Lawrence)7 b
(Erlbaum)8 211 y(Associates,)g(Hillsdale,)j(NJ,)f(1983.)-56 274 y([6])21 b
(Eric)c(Cooper)n(,)j(Scott)d(Nettles,)i(and)d(Indira)i(Subramanian.)33 b(Im-)
8 319 y(proving)13 b(the)g(Performance)f(of)h(SML)h(Garbage)d(Collection)j
(using)8 365 y(Application-Speci\256c)d(V)n(irtual)i(Memory)g(Management.)21 b
(In)12 b fa(Pr)n(o-)8 411 y(ceedings)6 b(of)i(the)g(ACM)g(Confer)m(ence)f(on)
h(Lisp)f(and)g(Functional)g(Pr)n(o-)8 456 y(gramming)p fb(,)h(pages)g(43\2615\
2,)g(June)g(1992.)-56 519 y([7])21 b(E.)11 b(Dijkstra,)g(L.)f(Lamport,)h(A.)g
(Martin,)h(C.)e(Scholten,)g(and)f(E.)i(Stef-)8 564 y(fens.)h(On-the-\257y)c
(Garbage)f(Collection:An)i(Exercise)e(in)h(Coopera-)8 610 y(tion.)14 b fa(Com\
munications)8 b(of)i(the)f(ACM)p fb(,)g(21\(11\):966\261975,)f(Novem-)8 656 y
(ber)h(1978.)-56 718 y([8])21 b(D.)10 b(Doligez)g(and)f(X.)i(Leroy)l(.)16 b
(A)10 b(concurrent)f(generational)g(garbage)8 764 y(collector)i(for)g(a)g(mul\
ti-threaded)f(implementation)h(of)g(ml.)18 b(In)11 b fa(Pr)n(o-)8 809 y(ceedi\
ngs)e(of)i(the)g(1993)f(ACM)h(Symposium)f(on)g(Principles)g(of)h(Pr)n(o-)8 855
y(gramming)d(Languages)p fb(,)f(pages)g(113\261123,)g(January)h(1993.)-56 917
y([9])21 b(John)8 b(R.)i(Ellis,)g(Kai)g(Li,)g(and)f(Andrew)f(W)m(.)i(Appel.)k
(Real-time)c(Con-)8 963 y(current)d(Garbage)e(Collection)i(on)f(Stock)g(Multi\
processors.)i(T)m(echni-)8 1008 y(cal)g(Report)g(DEC-SRC-TR-25,)h(DEC)f(Syste\
ms)g(Research)e(Center)n(,)8 1054 y(February)i(1988.)-75 1116 y([10])21 b(Ant\
ony)10 b(L.)h(Hosking,)g(J.)f(Eliot)i(B.)f(Moss,)g(and)f(Darko)g(Stefanovic.)
8 1162 y(A)15 b(comparative)e(performance)g(evaluation)g(of)i(write)g(barrier)
h(im-)8 1208 y(plementations.)29 b(In)16 b fa(Pr)n(oceedings)d(of)j(the)f(199\
2)g(Confer)m(ence)f(on)8 1253 y(Object-Oriented)9 b(Pr)n(ogramming)g(Systems,)
h(Languages,)e(and)i(Ap-)8 1299 y(plications)p fb(,)f(1992.)-75 1361 y([11])
21 b(Lorenz)e(Huelsber)n(gen)g(and)g(James)g(R.)h(Larus.)42 b(A)20 b(concurre\
nt)8 1407 y(copying)h(garbage)g(collector)h(for)h(languages)d(that)i(distingu\
ish)8 1453 y(\(im\)mutable)17 b(data.)30 b(In)16 b fa(Pr)n(oceedings)d(of)j
(the)g(1993)e(ACM)i(Sym-)8 1498 y(posiym)9 b(on)g(Principles)f(and)h(Practice)
g(of)h(Parallel)f(Pr)n(ogramming)p fb(,)8 1544 y(1993.)k(T)m(o)c(appear)l(.)
-75 1606 y([12])21 b(David)14 b(A.)h(Moon.)27 b(Garbage)13 b(Collection)h(in)
h(a)f(Lar)o(ge)g(Lisp)g(Sys-)8 1652 y(tem.)26 b(In)13 b fa(Pr)n(oceedings)f
(of)h(the)h(1984)e(ACM)i(Symposium)e(on)h(Lisp)8 1698 y(and)8 b(Functional)f
(Pr)n(ogramming)p fb(,)h(pages)f(235\261246.)f(ACM,)k(August)8 1743 y(1984.)
-75 1805 y([13])21 b(Scott)12 b(M.)i(Nettles,)f(James)e(W)m(.)i(O'T)m(oole,)g
(and)f(David)g(K.)h(Gifford.)8 1851 y(Concurrent)18 b(garbage)e(collection)i
(of)h(persistent)f(heaps.)36 b(T)m(ech-)8 1897 y(nical)13 b(Report)g(MIT)m
(-LCS-TR-569)g(and)f(CMU-CS-93-137,)i(Mas-)8 1942 y(sachusetts)8 b(Institute)
i(of)h(T)m(echnology)d(and)h(Carnegie)g(Mellon)h(Uni-)8 1988 y(versity)m(,)16
b(1993.)24 b(Submitted)14 b(to)g(14th)f(Symposium)g(on)g(Operating)8 2034 y
(Systems)8 b(Principles.)-75 2096 y([14])21 b(Scott)f(M.)h(Nettles,)i(James)
18 b(W)m(.)i(O'T)n(oole,)j(David)c(Pierce,)k(and)8 2142 y(Nicholas)16 b(Haine\
s.)35 b(Replication-Based)16 b(Incremental)h(Copying)8 2187 y(Collection.)32 b
(In)17 b fa(Pr)n(oceedings)d(of)i(the)g(SIGPLAN)g(International)8 2233 y(W)m
(orkshop)11 b(on)i(Memory)f(Management)p fb(,)h(pages)f(357\261364.)g(ACM,)8
2279 y(Springer)o(-V)l(erlag,)d(September)e(1992.)k(Also)e(available)e(as)h
(Carnegie)8 2324 y(Mellon)h(University)g(T)n(echnical)e(Report)i(CMU-CS-93-13\
5.)-75 2387 y([15])21 b(K.)14 b(Nilsen.)26 b(Garbage)13 b(Collection)h(of)g
(Strings)g(and)f(Linked)g(Data)8 2432 y(Structures)f(in)g(Real-time.)22 b fa
(Softwar)n(e\261Practice)10 b(and)h(Experience)p fb(,)8 2478 y(18\(7\):613\
\261640,)d(July)g(1988.)-75 2540 y([16])21 b(S.)16 b(C.)g(North)g(and)f(J.H.)
h(Reppy)m(.)31 b(Concurrent)15 b(Garbage)g(Collec-)8 2586 y(tion)e(on)e(Stock)
h(Hardware.)21 b(In)13 b(Gilles)g(Kahn,)f(editor)o(,)i fa(Functional)8 2632 y
(Pr)n(ogramming)9 b(Languages)f(and)i(Computer)f(Ar)n(chitectur)m(e)i(\(LNCS)
8 2677 y(274\))p fb(,)e(pages)f(113\261133.)f(Springer)o(-V)l(erlag,)j(1987.)
1025 -33 y([17])20 b(James)15 b(W)m(.)i(O'T)n(oole.)32 b(Garbage)15 b(Collect\
ing)h(an)g(Object)g(Cache.)1107 12 y(T)n(echnical)8 b(Report)i(MIT/LCS/TM-485\
,)h(Massachusetts)d(Institute)1107 58 y(of)i(T)m(echnology)-5 b(,)10 b(April)
g(1993.)j(T)m(o)c(appear)m(.)1025 120 y([18])20 b(James)8 b(W)m(.)h(O'T)n(ool\
e)g(and)f(Scott)h(M.)h(Nettles.)j(Concurrent)8 b(Replica-)1107 166 y(tion)h
(Garbage)e(Collection.)13 b(T)m(echnical)7 b(Report)h(MIT)m(-LCS-TR-570)1107
211 y(and)h(CMU-CS-93-138,)g(Massachusetts)e(Institute)j(of)f(T)m(echnology)
1107 257 y(and)g(Carnegie)f(Mellon)h(University)n(,)g(1993.)1025 319 y([19])
20 b(James)9 b(W)m(.)h(O'T)n(oole)f(and)g(Scott)h(M.)h(Nettles.)16 b(Real-Tim\
e)9 b(Replica-)1107 365 y(tion)i(GC:)g(An)f(Implementation)g(Report.)17 b(T)m
(echnical)9 b(Report)i(MIT)m(-)1107 411 y(LCS-TR-568)j(and)f(CMU-CS-93-136,)i
(Massachusetts)c(Institute)1107 456 y(of)f(T)m(echnology)d(and)h(Carnegie)h
(Mellon)g(University)m(,)h(1993.)1025 519 y([20])20 b(Paul)6 b(R.)g(W)o(ilson\
.)i(Uniprocessor)t(Garbage)d(Collection)g(Techniques.)1107 564 y(In)k fa(Pr)n
(oceedings)c(of)j(the)g(1992)f(SIGPLAN)h(International)f(W)m(orkshop)1107 610
y(on)g(Memory)e(Management)p fb(,)g(pages)g(1\26142.)h(ACM,)h(Springer)o(-V)l
(erlag,)1107 656 y(September)i(1992.)p eop
%%Trailer
 end
%%EOF
