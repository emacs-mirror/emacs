%!PS-Adobe-2.0
%%Creator: dvips 5.58 Copyright 1986, 1994 Radical Eye Software
%%Title: r2tr401.dvi
%%CreationDate: Mon Jul 29 16:04:06 1996
%%Pages: 19
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Courier Times-Bold Times-Italic Helvetica
%%EndComments
%DVIPSCommandLine: dvips r2tr401.dvi
%DVIPSParameters: dpi=600, comments removed
%DVIPSSource:  TeX output 1996.07.29:1603
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600
(/home/user1/dswise/RCM/TR401/96tr401/r2tr401.dvi) @start
/Fa 1 113 df<00F007C003FC1FF0031E7878061EE03C061FC01C0C1F801E0C1F001E0C
3F001E183F001F183E001F003E001F007E001F007E003E007C003E007C003E00FC003E00
FC007C00F8007C00F8007801F800F001F800F001F801E001F803C003FC078003FE1F0003
E7FC0003E1F00007E0000007E0000007C0000007C000000FC000000FC000000F8000001F
800000FFF80000FFF800002025809922>112 D E /Fb 2 52 df<00380000780001F800
1FF800FEF800E0F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80001FC00FFFFF8FFFFF815267B
A521>49 D<00FF000003FFE0000F01F8001C007C0030007E003C003E007E003F007E003F
007E003F007E003F003C003F0000003E0000007E0000007C000000F8000001F0000007E0
0000FF800000FF00000001E0000000F80000007C0000003E0000003F0000001F0000001F
8000001F8038001F807C001F80FE001F80FE001F80FE001F00FC003F0078003E0070007C
003800F8000F01F00007FFE00000FF000019277DA521>51 D E /Fc
2 49 df<FFFFFFFFFEFFFFFFFFFEFFFFFFFFFE27037A8F34>0 D<00E001F003F803F803
F807F007F007F007E007E00FE00FC00FC00FC01F801F801F001F003F003E003E003E007C
007C007C007800F800F800F00010000D1E7D9F13>48 D E /Fd 8
117 df<0003F80000001FFF0000007E0FC00000F803E00001E000F00003C000780007C0
007C000F80003E000F80003E001F00001F001F00001F003F00001F803F00001F803F0000
1F807E00000FC07E00000FC07E00000FC07E00000FC07E00000FC07E00000FC0FE00000F
E0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0
FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE
00000FE0FE00000FE0FE00000FE0FE00000FE07E00000FC07E00000FC07E00000FC07E00
000FC07F00001FC03F00001F803F00001F803F00001F801F00001F001F80003F000F8000
3E000F80003E0007C0007C0003E000F80001F001F00000F803E000007E0FC000001FFF00
000003F80000233A7DB72A>48 D<0001C0000003C0000007C000001FC00000FFC000FFFF
C000FFFFC000FF1FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000007FE0007FFFFFF07FFFFFF07FFFFFF01C3879B72A>I<000FF00000007F
FE000001FFFF800003E03FE0000F000FF0000E0007F8001C0003FC00380001FE00300001
FE00700000FF00600000FF00FC0000FF00FF00007F80FF80007F80FF80007F80FF80007F
80FF80007F80FF80007F807F00007F801C00007F800000007F80000000FF00000000FF00
000000FF00000001FE00000001FC00000003FC00000003F800000007F000000007E00000
000FE00000001FC00000003F800000003F000000007C00000000F800000001F000000003
E000000007C00000000F800000000F000000001E000180003C000180007800018000F000
038001E000030003C000030007800003000E000007000FFFFFFF001FFFFFFF003FFFFFFF
007FFFFFFE00FFFFFFFE00FFFFFFFE00FFFFFFFE0021387CB72A>I<00003FC0000001FF
F0000007FFF800000FE03C00003F800E00007E003F0000FC007F0001F800FF0003F000FF
0003F000FF0007E000FF000FE0007E000FC0003C001FC00000001FC00000003F80000000
3F800000003F800000007F800000007F000000007F01FC00007F07FF8000FF1E07E000FF
3801F000FF7000F800FF6000FC00FFE0007E00FFC0003F00FFC0003F00FF80003F80FF80
003FC0FF80001FC0FF80001FC0FF00001FE0FF00001FE0FF00001FE0FF00001FE0FF0000
1FE07F00001FE07F00001FE07F00001FE07F00001FE07F00001FE03F80001FE03F80001F
C03F80001FC01F80001FC01F80003F801FC0003F800FC0003F0007E0007F0007E000FE00
03F000FC0001F801F80000FE07F000003FFFC000001FFF00000003FC0000233A7DB72A>
54 D<7FFFFFFFFFFFF8FFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFC0000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000FFFFFFFFFFFFFCFFFFFFFFFFFFFCFF
FFFFFFFFFFFC7FFFFFFFFFFFF836167B9F41>61 D<0000001F80000007FF80000007FF80
000007FF800000007F800000001F800000001F800000001F800000001F800000001F8000
00001F800000001F800000001F800000001F800000001F800000001F800000001F800000
001F800000001F800000001F800000001F800003F81F80001FFE1F80007E079F8000F801
DF8003F000FF8007E0007F800FC0003F800FC0003F801F80001F803F80001F803F00001F
807F00001F807F00001F807E00001F80FE00001F80FE00001F80FE00001F80FE00001F80
FE00001F80FE00001F80FE00001F80FE00001F80FE00001F80FE00001F807E00001F807F
00001F807F00001F803F00001F803F00001F801F80003F801F80003F800FC0007F8007E0
007F8003E000FFE001F803DFFE007C0F1FFE001FFE1FFE0007F01F80273B7DB92E>100
D<0007F800001FFF00007C0FC001F803E003F001F007E001F80FC000F81F80007C1F8000
7C3F00007E3F00003E7F00003E7F00003F7E00003FFE00003FFE00003FFE00003FFFFFFF
FFFFFFFFFFFE000000FE000000FE000000FE000000FE0000007E0000007E0000007F0000
007F0000003F0000033F8000031F8000070FC0000607C0000E07E0001C01F0003800F800
70007E03E0001FFF800003FC0020277EA525>I<00180000180000180000180000180000
380000380000380000780000780000780000F80001F80003F80007F8001FFFFEFFFFFEFF
FFFE01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80301F80301F80301F80301F80301
F80301F80301F80301F80300FC0700FC0600FC06007E0E003F1C000FF80003F018347EB2
20>116 D E /Fe 5 101 df<00000000006000000000000070000000000000F000000000
0001F0000000000001F0000000000003F0000000000003F0000000000007F00000000000
0FF000000000000FF000000000001FF000000000001FF8000000000033F8000000000073
F8000000000063F80000000000C3F80000000000C3F8000000000183F8000000000183F8
000000000303F8000000000603F8000000000603F8000000000C03FC000000000C03FC00
0000001801FC000000003801FC000000003001FC000000006001FC000000006001FC0000
0000C001FC00000001C001FC000000018001FC000000030001FC000000030001FE000000
060001FE000000060000FE0000000C0000FE000000180000FE0000001FFFFFFE0000003F
FFFFFE0000003FFFFFFE000000600000FE000000E00000FE000000C00000FE0000018000
00FE000001800000FF0000030000007F0000070000007F0000060000007F00000C000000
7F00000C0000007F0000180000007F0000380000007F0000700000007F0000700000007F
0001F80000007F8007FC000001FF80FFFFC0007FFFFFFFFFC0007FFFFFFFFF80007FFFFF
383C7DBB3E>65 D<0003FFFFFE0003FFFFFE0003FFFFFE000003FC00000003FC00000003
F800000007F800000007F800000007F000000007F00000000FF00000000FF00000000FE0
0000000FE00000001FE00000001FE00000001FC00000001FC00000003FC00000003FC000
00003F800000003F800000007F800000007F800000007F000000007F00000000FF000000
00FF00000000FE00000000FE00000001FE00000001FE00000001FC00000001FC00000003
FC00000003FC00000003F800000003F800000007F800000007F800000007F000000007F0
0000000FF00000000FF00000000FE00000000FE00000001FE00000001FE00000001FC000
00001FC00000003FC00000003FC00000003F800000007FC000007FFFFF8000FFFFFF8000
FFFFFF800027397EB824>73 D<0007FFFFFF00000007FFFFFF00000007FFFFFE00000000
07FC000000000007F8000000000007F000000000000FF000000000000FF000000000000F
E000000000000FE000000000001FE000000000001FE000000000001FC000000000001FC0
00000000003FC000000000003FC000000000003F8000000000003F8000000000007F8000
000000007F8000000000007F0000000000007F000000000000FF000000000000FF000000
000000FE000000000000FE000000000001FE000000000001FE000000000001FC00000000
0001FC000000000003FC000000000003FC000000000003F8000000000003F80000000000
07F8000000000007F8000000400007F0000000C00007F0000000C0000FF0000001C0000F
F000000180000FE000000380000FE000000380001FE000000300001FE000000700001FC0
00000600001FC000000E00003FC000001E00003FC000001C00003F8000003C00003F8000
007C00007F800000F800007F800003F800007F00000FF80000FF00007FF000FFFFFFFFFF
F000FFFFFFFFFFF000FFFFFFFFFFE00032397DB839>76 D<7FFFFFC003FFFFC07FFFFFC0
03FFFFC07FFFFF8003FFFF80007F8000001FF000007F00000007C000007F000000078000
00FF00000007000000FF00000007000000FE00000006000000FE00000006000001FE0000
000E000001FE0000000C000001FC0000000C000001FC0000000C000003FC0000001C0000
03FC00000018000003F800000018000003F800000018000007F800000038000007F80000
0030000007F000000030000007F00000003000000FF00000007000000FF0000000600000
0FE00000006000000FE00000006000001FE0000000E000001FE0000000C000001FC00000
00C000001FC0000000C000003FC0000001C000003FC00000018000003F80000001800000
3F800000018000007F800000038000007F800000030000007F000000030000007F000000
030000007F00000007000000FF00000006000000FE00000006000000FE0000000E000000
FE0000000C000000FE0000001C000000FE00000018000000FE00000038000000FE000000
700000007E000000700000007E000000E00000007E000001C00000003F00000380000000
3F000007000000001F80001E000000000FC0003C0000000007E000F80000000003F807E0
0000000001FFFFC000000000007FFE0000000000000FF000000000003A3B7BB839>85
D<000000007E0000003FFE0000003FFE0000003FFE00000000FE00000000FC00000000FC
00000001FC00000001FC00000001F800000001F800000003F800000003F800000003F000
000003F000000007F000000007F000000007E000000007E00000000FE00000000FE00000
FC0FC00003FF0FC0000F839FC0003F01DFC0007E00FF8000FC007F8001F8007F8003F000
3F8007F0003F0007E0003F000FC0007F001FC0007F001FC0007E003F80007E003F8000FE
007F8000FE007F0000FC007F0000FC007F0001FC00FF0001FC00FE0001F800FE0001F800
FE0003F800FE0003F800FC0003F00CFC0003F00CFC0007F01CFC0007F018FC0007E018FC
000FE0187C000FE0387C001FE0307E003FE0703E0073E0601F01E3E0E00F8381F1C003FF
00FF8000FC003E00273B7DB92B>100 D E /Ff 134[33 2[33 37
22 26 29 1[37 33 37 55 18 37 1[18 2[22 29 37 29 37 33
12[44 37 48 3[48 63 4[52 52 41 2[48 1[48 19[22 45[{}30
66.666664 /Times-Bold rf /Fg 135[50 1[50 55 33 39 44
1[55 50 55 83 28 55 1[28 55 1[33 44 55 44 55 50 9[100
2[66 2[78 61 2[94 3[39 2[61 66 2[66 10[50 50 3[50 50
2[25 33 45[{}35 100.000000 /Times-Bold rf /Fh 136[60
1[46 28 32 2[46 42 46 69 23 46 1[23 1[42 1[37 46 37 46
42 13[46 60 3[60 78 3[32 65 1[51 2[60 1[60 6[28 42 42
42 42 42 1[42 42 42 42 2[28 21 44[{}38 83.333336 /Times-Bold
rf /Fi 139[40 1[40 1[40 50[40 61[{}4 66.666664 /Courier
rf /Fj 206[25 49[{}1 50.000000 /Times-Roman rf /Fk 206[29
49[{}1 58.333336 /Times-Roman rf /Fl 134[42 1[60 1[42
23 32 28 42 42 42 42 65 23 2[23 42 1[28 37 42 37 42 37
27[51 22[21 28 45[{.167 SlantFont}23 83.333336 /Times-Roman
rf /Fm 130[35 35 35 1[35 1[35 35 35 35 35 35 1[35 35
35 35 35 35 1[35 35 35 35 35 35 35 35 35 3[35 1[35 6[35
35 35 1[35 1[35 35 35 2[35 35 1[35 35 35 35 35 35 2[35
35 35 35 3[35 35 35 35 35 35 35 35 35 35 35 35 35 35
35 35 1[35 4[35 33[{}64 58.333336 /Courier rf /Fn 135[42
1[42 46 23 42 2[46 46 46 69 18 42 1[18 1[46 23 46 1[42
46 46 9[78 55 2[55 60 3[60 69 46 1[42 23 60 65 1[55 60
60 55 55 10[46 3[46 4[28 45[{}37 83.333336 /Helvetica
rf /Fo 135[50 50 50 50 50 50 50 1[50 50 50 50 50 50 50
50 50 50 50 50 50 50 50 50 11[50 50 50 50 1[50 50 50
1[50 2[50 50 1[50 50 50 50 1[50 6[50 10[50 50 4[50 50
40[{}43 83.333336 /Courier rf /Fp 81[42 52[37 1[55 37
42 23 32 32 1[42 42 42 60 23 2[23 42 42 23 37 42 37 42
42 10[51 1[46 42 51 1[51 60 55 69 46 1[37 28 60 60 51
51 60 55 1[51 6[28 42 42 1[42 42 42 1[42 42 1[23 21 28
21 4[28 39[{}53 83.333336 /Times-Italic rf /Fq 4 121
df<6000000006F80000000FFC0000001F7E0000003F3F0000007E1F800000FC0FC00001
F807E00003F003F00007E001F8000FC000FC001F80007E003F00003F007E00001F80FC00
000FC1F8000007E3F0000003F7E0000001FFC0000000FF800000007F000000007F000000
00FF80000001FFC0000003F7E0000007E3F000000FC1F800001F80FC00003F007E00007E
003F0000FC001F8001F8000FC003F00007E007E00003F00FC00001F81F800000FC3F0000
007E7E0000003FFC0000001FF80000000F6000000006282874A841>2
D<000FE000007FFC0000FFFE0003FFFF8007FFFFC00FFFFFE01FFFFFF03FFFFFF83FFFFF
F87FFFFFFC7FFFFFFC7FFFFFFCFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFF
FEFFFFFFFEFFFFFFFE7FFFFFFC7FFFFFFC7FFFFFFC3FFFFFF83FFFFFF81FFFFFF00FFFFF
E007FFFFC003FFFF8000FFFE00007FFC00000FE0001F207BA42A>15
D<0000000006000000000F000000001F000000001F000000003E000000003E000000007C
000000007C00000000F800000000F800000001F000000001F000000003E000000003E000
000007C000000007C00000000F800000000F800000001F000000001F000000001E000000
003E000000003E000000007C000000007C00000000F800000000F800000001F000000001
F000000003E000000003E000000007C000000007C00000000F800000000F800000001F00
0000001F000000003E000000003E000000007C000000007C00000000F800000000F80000
0001F000000001F000000003E000000003E000000007C000000007C00000000F80000000
0F800000001F000000001F000000003E000000003E000000007C000000007C0000000078
00000000F800000000F800000001F000000001F000000003E000000003E000000007C000
000007C00000000F800000000F800000001F000000001F000000003E000000003E000000
007C000000007C00000000F800000000F800000000F0000000006000000000284E74BB00
>54 D<007E0001FFC007C1E00F00701E00383E001C7C000C7C001E7C007EF8007EF8007E
F8007EF8003CF80000F80000F800007C00007C00007C00003E00001E00000F0000078000
03C00000F00000FC0003FF000F87801F01E03E01F03E00F87C007C7C007CFC003EF8003E
F8001FF8001FF8001FF8001FF8001FF8001F7C001F7C003F3E003E3E003E1F007C0F807C
0780F801E1F000FFC0003F00000F000003C00001E00000F000007800007C00003E00003E
00003E00001F00001F00001F3C001F7E001F7E001F7E001F7E003E78003E30003E38007C
1C00780E00F00783E003FF80007E00184C7ABA25>120 D E /Fr
134[60 1[86 1[66 40 47 53 1[66 60 66 1[33 2[33 66 60
40 53 66 53 66 60 12[80 66 86 1[73 6[47 93 93 73 1[86
86 11[60 60 60 60 60 60 60 3[40 45[{}37 119.999947 /Times-Bold
rf /Fs 47[83 21[37 8[42 1[46 46 3[37 47[37 42 42 60 42
42 23 32 28 42 42 42 42 65 23 42 23 23 42 42 28 37 42
37 42 37 3[28 1[28 1[60 60 78 60 60 51 46 55 60 46 60
60 74 51 60 32 28 60 60 46 51 60 55 55 60 5[23 23 42
42 42 42 42 42 42 42 42 42 23 21 28 21 47 1[28 28 28
65 69 3[28 33[{}82 83.333336 /Times-Roman rf /Ft 80[37
53[33 33 48 33 33 18 26 22 1[33 33 33 52 18 33 1[18 33
33 22 29 33 29 33 29 8[48 1[48 48 41 37 44 1[37 48 48
59 41 48 1[22 48 48 37 41 48 44 1[48 5[18 1[33 33 33
33 33 33 33 33 33 33 1[17 22 17 2[22 22 22 39[{}61 66.666664
/Times-Roman rf /Fu 4 123 df<003000003800003000003000403008F0303CFC30FC
3F33F00FB7C003FF0000780003FF000FB7C03F33F0FC30FCF0303C403008003000003000
00380000300016157C9620>3 D<03E0000FF8001E1C00380600780700700F00F00F00F0
0F00F00600F00000F000007800003800001C00000E000007C0000FF0001E3800381C0078
0E00700F00F00780F00780F00780F00780F00780780700380F001C0E000E3C0007F80001
F000003800001C00000E00000F00000780000780300780780780780780780700700F0030
0E001C3C000FF80003E000112F7BA31D>120 D<00600000F00000F00000F00000F00000
F00000F00000F00000F0000060000060000060000060007C63E0FFFFF0FFFFF07C63E000
600000600000600000F00000F00000F00000F00000F00000F00000F00000F00000F00000
F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000600000
6000006000006000006000006000006000142F7CA31E>I<00600000F00000F00000F000
00F00000F00000F000006000006000006000FFFFF0FFFFF0FFFFF0006000006000006000
00F00000F00000F00000F00000F00000F00000600000000000600000F00000F00000F000
00F00000F00000F000006000006000006000FFFFF0FFFFF0FFFFF0006000006000006000
00F00000F00000F00000F00000F00000F000006000142F7CA31E>I
E /Fv 169[43 1[37 33 2[33 2[53 37 43 1[20 43 2[37 1[40
1[43 65[{}12 59.999973 /Times-Roman rf /Fw 47[75 33[42
52[37 1[54 37 37 21 29 25 37 37 37 37 58 21 37 1[21 37
37 25 33 37 33 37 33 3[25 1[25 2[54 3[46 42 50 1[42 54
54 66 46 1[29 25 54 1[42 46 54 50 50 54 5[21 21 4[37
37 37 37 37 1[21 19 25 19 2[25 25 40[{}58 75.000000 /Times-Roman
rf /Fx 138[42 25 29 33 1[42 37 42 62 21 1[25 21 1[37
1[33 42 33 42 37 12[50 42 54 10[58 2[54 54 1[54 6[25
58[{}25 75.000000 /Times-Bold rf /Fy 135[60 60 60 60
1[60 4[60 4[60 3[60 60 60 1[60 32[60 17[60 46[{}13 100.000000
/Courier rf /Fz 3 123 df<0000007FF8000000000007FFFF80000000001FFFFFE000
0000007FC00FF800000001FC0000FE00000003F000003F0000000FC000000FC000001F00
000003E000003E00000001F000007800000000780000F0000000003C0001E0000000001E
0003C0000000000F00038000000000070007800000000007800F000000000003C00E0000
00000001C01E000000000001E01C000000000000E03C000000000000F038000000000000
707800000000000078700000000000003870000000000000387000000000000038F00000
000000003CE00000000000001CE00000000000001CE00000000000001CE0000000000000
1CE00000000000001CE00000000000001CE00000000000001CE00000000000001CE00000
000000001CF00000000000003C7000000000000038700000000000003870000000000000
38780000000000007838000000000000703C000000000000F01C000000000000E01E0000
00000001E00E000000000001C00F000000000003C0078000000000078003800000000007
0003C0000000000F0001E0000000001E0000F0000000003C000078000000007800003E00
000001F000001F00000003E000000FC000000FC0000003F000003F00000001FC0000FE00
0000007FC00FF8000000001FFFFFE00000000007FFFF8000000000007FF80000003E3D7C
AE47>13 D<01F80007FE001F07003E03803C01C07800E07801E0F003E0F003E0F003E0F0
01C0F00000F00000F800007800007C00003C00001E00000F000003C00003F0000FFC001E
1E003C07807C07C07803C07801E0F001E0F000F0F000F0F000F0F000F0F000F07800F078
01E03C01E03E03E01E03C007878003FF0000FC00003C00000F000007800003C00003E000
01E00001F00000F00000F03800F07C00F07C00F07C00F07801E07001E03803C01C07C00E
0F8007FE0001F800143D7BAE1F>120 D<003800007C00007C00007C00007C00007C0000
7C00007C00003800003800003800003800203808FF39FEFFFFFEFFFFFEFF39FE00380000
3800003800003800003800007C00007C00007C00007C00007C00007C00007C0000380000
0000003800007C00007C00007C00007C00007C00007C00007C0000380000380000380000
3800003800FF39FEFFFFFEFFFFFEFF39FE203808003800003800003800003800007C0000
7C00007C00007C00007C00007C00007C00003800173D7CAE20>122
D E /FA 134[50 2[50 50 28 39 33 2[50 50 78 28 50 1[28
1[50 1[44 50 44 50 44 9[94 1[72 1[55 3[72 4[39 33 72
2[61 72 66 66 72 7[50 1[50 50 50 50 2[50 50 1[25 33 25
44[{}40 100.000000 /Times-Roman rf /FB 2 122 df<00007000000000F800000000
F800000000F800000000F800000000F800000000F800000000F800000000F80000200070
002078007000F0FC007001F8FF007007F87F80700FF03FC0701FE00FF0707F8003F870FE
0000FE73F800003F77E000000FFF80000003FE00000000F800000003FE0000000FFF8000
003F77E00000FE73F80003F870FE000FF0707F803FC0701FE07F80700FF0FF007007F8FC
007001F878007000F020007000200000F800000000F800000000F800000000F800000000
F800000000F800000000F800000000F800000000700000252B7AAD32>3
D<00038000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE0000007C0000007C0000007C0000007C0000007C0000007C0000007C0
000003800000038000000380000003800000038000000380003E0380F8FFC387FEFFFFFF
FEFFFFFFFEFFFFFFFEFFC387FE3E0380F8000380000003800000038000000380000007C0
000007C0000007C0000007C0000007C000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000000FE000000FE000000FE0000007C0000007C0000007C0000007C0
000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0
000007C0000007C0000007C0000007C00000038000000380000003800000038000000380
00000380001F5B7AC52C>121 D E /FC 136[104 72 72 40 56
48 1[72 72 72 112 40 2[40 72 72 48 64 72 64 1[64 11[104
88 1[96 1[80 7[104 4[96 14[72 2[72 72 2[48 36 44[{}30
144.000000 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 755 493 a FC(Uniprocessor)33 b(Performance)g(of)i(a)h(Hardware)
1181 736 y(Reference-Counting)31 b(Heap)2684 684 y FB(\003)-15
b(y)1066 980 y FC(T)-10 b(echnical)34 b(Report)g(401,)h(Revised)612
1259 y FA(David)24 b(S.)i(W)l(ise)1187 1223 y Fz(z)1187
1259 y FA(,)e(Brian)h(Heck)1692 1223 y Fz(z)1692 1259
y FA(,)g(Caleb)h(Hess)2194 1223 y Fz(z)2194 1259 y FA(,)e(W)l(illie)g
(Hunt)2713 1223 y Fz(z)2713 1259 y FA(,)g(and)h(Eric)g(Ost)3261
1223 y Fz(z)-5 b(x)1578 1414 y FA(Indiana)25 b(University)1123
1569 y(Bloomington,)d(Indiana)j(47405-4101)73 b(USA)1143
1724 y Fy(dswise@iuvax.cs.indiana.edu)1755 1930 y FA(July)24
b(1996)1811 2342 y Fx(Abstract)320 2509 y Fw(A)17 b(hardware)h
(implementation)h(of)e(a)h(self-managing)h(heap)f(has)g(been)g
(designed,)h(built,)f(and)g(tested.)24 b(On)18 b(every)g(pointer)g
(write,)208 2631 y(remote)24 b(reference-counting)h(transactions)g
(occur)f(in)g(real)g(time)f(at)h(of)o(f-processor)g(memory)-5
b(,)26 b(where)e(available)g(space)h(is)e(main-)208 2753
y(tained)13 b(without)g(any)h(processor)g(cycles.)23
b(A)13 b(processor)h(obtains)g(a)f(new)g(node)i(simply)e(by)g(reading)h
(its)f(address)h(from)f(a)g(distinguished)208 2875 y(location.)25
b(Hardware)19 b(support)h(for)f(of)o(f-line,)f(multiprocessing)i
(mark/sweep)g(collection)f(is)f(also)i(provided.)320
2996 y(Performance)c(statistics)e(are)i(presented)g(from)g(a)f(partial)
g(implementation)i(of)g(S)t Fv(C)t(H)t(E)t(M)t(E)d Fw(that)h(has)h
(been)h(built)e(on)h(it.)23 b(This)15 b(hard-)208 3118
y(ware)j(is)f(useful)i(immediately)f(for)g(languages)i(like)f(L)t
Fv(I)t(S)t(P)r Fw(,)e(and)i(also)f(for)i(S)t Fv(M)t(A)t(L)t(L)o(T)o(A)t
(L)t(K)15 b Fw(and)21 b(J)t Fv(A)l(V)l(A)e Fw(Although)g(this)f
(prototype)h(was)208 3240 y(\256tted)f(to)h(a)f(NeXT)h(uniprocessor)m
(,)h(the)f(design)h(is)e(motivated)i(by)f(similar)f(languages)j
(running)f(on)f(shared-heap)i(multiprocessors,)208 3362
y(the)e(tar)o(get)f(of)h(a)g(revised)g(design.)208 3533
y Fx(CR)f(categories)i(and)e(Subject)g(Descriptors:)208
3655 y Fw(E.2)i([Data)h(Storage)h(Representations]:)30
b(Linked)22 b(representations;)i(D.4.2)d([Storage)g(Management]:)31
b(Allocation/Deallocation)208 3777 y(strategies;)17 b(B.3.2)g([Memory)h
(Structures]:)24 b(Design)18 b(Styles\320primary)f(memory)-5
b(,)18 b(shared)g(memory;)h(C.1.2)e([Processor)g(Architec-)208
3899 y(tures]:)k(Multiple)13 b(Data)g(Stream)f(Architectures)h
(\(Multiprocessors\)\320Parallel)g(processors;)j(D.1.1)c([Programming)i
(T)-5 b(echniques]:)208 4020 y(Applicative)13 b(\(Functional\))g
(Programming)g(T)-5 b(echniques;)16 b(B.5.1)c([Register)o(-transfer)o
(-level)g(Implementation]:)22 b(Design\320Memory)208
4142 y(design.)208 4264 y Fx(General)d(T)-7 b(erm:)25
b Fw(Performance.)p 0 4439 1560 4 v 84 4492 a Fu(\003)120
4516 y Ft(Research)14 b(reported)g(herein)g(was)e(sponsored,)i(in)f
(part,)h(by)e(the)h(National)i(Science)g(Foundation)f(under)f(Grant)h
(Numbers)e(DCR)h(85-21497)g(and)g(DCR)g(90-027092.)87
4582 y Fu(y)140 4603 y Ft(c)120 4605 y Fz(\015)o Ft(1995,)21
b(1996)g(by)f(the)h(authors.)32 b(This)20 b(work)g(has)g(been)h
(submitted)h(for)e(publication;)26 b(upon)20 b(its)h(acceptance)j
(copyright)e(may)e(be)h(transferred)h(the)f(publisher)0
4710 y(without)f(further)g(notice,)h(and)e(this)h(version)g(may)e(no)h
(longer)h(be)f(accessible.)31 b(This)18 b(document)j(is)d(made)h
(available)k(by)18 b(the)i(authors)g(as)f(a)f(means)h(to)h(ensure)f
(timely)0 4815 y(dissemination)h(of)e(scholarly)h(and)f(technical)j
(work)c(on)h(a)g(non-commercial)i(basis.)k(Copyright)19
b(and)f(all)h(other)f(rights)h(are)f(maintained)i(by)e(the)g(authors)h
(or)e(by)h(other)0 4921 y(copyright)j(holders,)g(notwithstanding)i
(that)d(they)g(have)g(of)o(fered)h(their)f(work)g(electronically)l(.)33
b(It)19 b(is)g(understood)i(that)g(all)f(persons)g(copying)g(this)g
(information)i(will)0 5026 y(adhere)15 b(to)e(the)h(terms)f(and)h
(constraints)i(invoked)e(by)f(the)h(authors')h(copyright.)23
b(This)13 b(work)g(may)g(not)g(be)h(reposted)h(without)f(the)g
(explicit)i(permission)e(of)g(the)f(copyright)0 5131
y(holder)l(.)87 5197 y Fu(z)120 5221 y Ft(Computer)18
b(Science)h(Department)87 5287 y Fu(x)120 5310 y Ft(Center)f(for)f
(Innovative)j(Computer)e(Applications)1929 5589 y Fs(1)p
eop
%%Page: 2 2
2 1 bop 0 83 a Fr(1)119 b(Intr)n(oduction)0 301 y Fs(Recent)18
b(developments)f(in)h(both)g(architecture)e(and)i(programming)d
(languages)i([12)o(,)h(6])g(unite)g(traditionally)f(disjoint)h(themes)g
(of)h(ar)n(-)0 434 y(chitecture,)e(languages)g(and)h(operating)f
(systems.)27 b(Formerly)-5 b(,)16 b(for)i(instance,)g(the)h(heap)f
(manager)f(was)i(embedded)d(deep)i(in)g(the)h(run-)0
567 y(time)24 b(image)f(of)h(each)f(implementation)e(of)j(various)f
(programming)d(languages.)36 b(T)-6 b(oday')h(s)23 b(prevalence)f(of)h
(object-oriented)e(tech-)0 700 y(nology)h(makes)h(system-level)f(or)i
(even)e(distributed-system)g(management)f(both)i(ur)o(gent)e(and)i
(attainable.)36 b(Additional)22 b(forces)h(of)0 833 y(distributed)16
b(computing,)f(parallel)h(programming)e([19)o(,)k Fq(x)p
Fs(4],)f(and\320most)f(recently\320remote)e(computing)h([6)o(])i
(elevate)g(the)g(garbage)0 966 y(collector)i(from)g(a)i(capsule)f(deep)
f(within)h(a)h(single)f(language)e(or)i(program)e(to)j(be)f(a)g
(service)g(of)g(the)g(computing)e(environment.)125 1098
y(W)-7 b(e)23 b(report)e(here)h(the)h(design,)f(construction,)f(and)h
(testing)g(of)g(a)h(specialized)f(memory)f(that)h(provides)f
(system-level)h(manage-)0 1231 y(ment)16 b(in)g(real)h(time,)g
(providing)d(atomic)i(transactions)f(that)h(allow)h(multiprocessing)d
(access)j(and)f(collection)f(without)h(repeated)f(syn-)0
1364 y(chronization.)26 b(The)21 b(memory)e(system)h(is)i(installed)f
(on)f(a)h(NeXT)g(cube,)f(and)g(is)i(here)e(compared)f(experimentally)f
(to)j(conventional)0 1497 y(collection)c(on)h(that)g(machine:)25
b(both)17 b(stop/copy)f(and)i(mark/sweep.)25 b(It)18
b(has)g(been)g(used)g(to)g(support)e(a)j(purely)e(Applicative)g(File)h
(Sys-)0 1630 y(tem)i([20)o(])g(and)g(it)h(has)f(served)g(as)h(a)f(test)
h(for)f(rapid-prototyping)15 b(of)20 b(new)g(insights)g(into)g
(compile-time)f(management)f([37)o(].)125 1763 y(The)25
b(principal)g(strategy)h(is)h(on-line)e(reference)g(counting,)g
(implemented)g(purely)f(in)j(memory)d([34)o(].)45 b(In)26
b(a)h(multiprocessing)0 1895 y(implementation)21 b(all)j(transactions)f
(\(increments)f(and)h(decrements\))f(are)i(dispatched)e(asynchronously)
e(to)k(be)f(performed)e(locally)0 2028 y(in)e(memory)-5
b(,)17 b(away)h(from)g(processors.)26 b(A)19 b(hybrid)e(design,)h(it)i
(also)f(provides)e(support)h(for)g(mark/sweep)g(garbage)f(collection)h
(that)h(is)0 2161 y(both)g(fast)i(and)f(parallel,)f(but)h(of)o(f-line)e
(\(that)i(is,)h(with)f(all)h(mutators)f(stopped.\))125
2294 y(A)k(balanced)e(multiprocessor)g(computes)h(fast;)j(therefore,)c
(a)j(multiprocessing)c(heap-)p Fp(mutator)h Fs([17)o(])i(generates)f
(garbage)f(at)i(a)0 2427 y(tremendous)c(rate,)i(and)f(a)h(balanced)f
Fp(collector)g Fs(requires)g(parallelism)g(to)h(keep)f(apace.)32
b(Conventional)19 b(garbage)h(collection,)h(how-)0 2560
y(ever)m(,)h(depends)f(on)h(global)g(knowledge)e(\(\252Nothing)h
(points)h(here\272\);)g(thus,)h(any)f(multiprocessor)f(realization)g
(requires)h(much)f(syn-)0 2692 y(chronization,)d(which)h(is)i(not)f(a)h
(constraint)e(on)h(uniprocessors)e(where)i(garbage)e(collection)h(is)i
(thought)e(to)h(be)g(perfected)f([1)o(,)i(12)o(])125
2825 y(The)15 b(asynchronous,)e(atomic)j(transactions)f(of)g(reference)
f(counting)g([9)o(])i(make)f(it)i(the)e(heap)g(manager)g(of)g(choice)g
(for)g(a)h(multipro-)0 2958 y(cessor)j(or)f(multitasking)f(system,)i
(It)g(is)g(commonly)d(used,)j(therefore,)d(to)j(recover)e(available)h
(sectors)h(from)e(a)i(shared)f(disk,)g(where)g(a)0 3091
y(traversing)f(collector)h(is)i(only)e(rarely)g(used:)26
b(\()p Fp(e.g.)r Fs(U)t Ft(N)t(I)t(X)r Fs(')-5 b(s)18
b Fo(fsck)p Fs(.\))26 b(In)19 b(contrast,)f(garbage)f(collection)h([24)
n(])h(has)g(become)f(the)h(heap-)0 3224 y(management)f(algorithm)h(of)h
(choice)f(on)h(uniprocessors,)e(where)i(its)h(amortized)e(performance,)
e(measured)i(in)h(processor)n(-memory)0 3357 y(transactions.)25
b(undercuts)16 b(that)h(of)g(processor)n(-driven)d(reference)i
(counting.)24 b(This)17 b(paper)g(shows)g(that)h(moving)d(such)i
(counting)f(from)0 3489 y(processor)j(to)h(memory)f(also)h(inverts)g
(this)h(conventional)c(wisdom.)125 3622 y(Because)f(of)h(the)g(central)
f(role)g(played)g(by)g(heap)g(management,)f(it)j(has)f(now)f(become)g
(a)h(problem)e(worthy)h(of)g(hardware)f(support.)0 3755
y(Indeed,)i(others)i(have)f(implemented)f(such)h(hardware)g(for)g
(uniprocessing)f(or)h(proposed)f(it)j(for)e(multiprocessing)f([3)o(,)i
(17)o(,)g(2,)g(26)o(,)g(29)o(,)0 3888 y(31)o(].)39 b(Although)23
b(reference)f(counting)h(has)h(been)g(used)g(successfully)f(for)h
(managing)e(secondary)g(storage,)j(garbage)d(collection)i(is)0
4021 y(still)d(thought)c(to)j(be)f(far)g(more)g(suitable)g(for)g
(primary)f(storage,)h(where)g(hardware)e(support)h(will)j(be)e(the)g
(most)h(ef)o(fective.)25 b(As)20 b(shown)0 4154 y(here,)f(however)m(,)f
(hardware)h(is)i(quite)f(ef)o(fective)f(in)h(leveling)f(its)i(reputed)e
(disadvantages.)125 4286 y(The)e(remainder)f(of)i(the)g(paper)f(is)i
(in)f(six)h(parts.)26 b(The)17 b(second)g(section)h(reviews)g(the)g
(philosophy)d(behind)i(reference)f(counting)g(in)0 4419
y(hardware)e(and)h(the)h(third)f(presents)g(the)h(hardware)e(design.)25
b(Fourth)15 b(is)h(a)g(description)f(of)g(the)h(hardware)e(support)g
(of)h(of)o(f-line)f(garbage)0 4552 y(collection.)29 b(Next)21
b(a)g(brief)g(description)f(of)h(the)i(S)t Ft(C)t(H)t(E)t(M)t(E)h
Fs(software)c(and)h(test)h(problems.)28 b(The)21 b(sixth)g(section)g
(presents)g(the)g(results)0 4685 y(of)d(our)g(testing;)h(the)g(\256nal)
g(section)f(reviews)g(the)h(future,)e(including)g(some)i(features)e
(that)i(have)f(been)g(implemented)f(but,)h(as)h(yet,)g(not)0
4818 y(exercised.)1929 5589 y(2)p eop
%%Page: 3 3
3 2 bop 0 83 a Fr(2)119 b(Refer)n(ence)31 b(Counting)g(in)g(Hardwar)n
(e)0 301 y Fs(In)18 b(light)g(of)f(the)h(dominance)e(of)i(both)f(of)o
(f-line)f(and)h(on-line)g(garbage)g(collection)g(results)h([8)o(,)g(2,)
g(3,)g(27)o(,)g(21)o(,)h(28)o(])f(one)f(might)h(question)0
434 y(why)i Fp(r)m(efer)m(ence)g(counting)e Fs([9)o(])j(was)g(chosen)e
(here)g(as)i(a)g(primary)e(strategy)g(for)h(memory)e(management.)25
b(There)19 b(are)h(three)g(answers.)125 567 y(First,)h(the)g(same)g
(properties)f(of)g(reference)f(counting)g(that)i(make)g(it)g(the)g
(usual)g(strategy)f(for)g(managing)f(disk)i(sectors,)g(also)g(be-)0
700 y(come)i(particularly)e(important)h(in)h(multiprocessing.)34
b(The)23 b(three)f(transactions)h(\()p Fp(v)-6 b(.i.)p
Fs(\))35 b(that)23 b(here)g(implement)f(reference)f(counting)0
833 y(are)d(all)h(constant-constant-time)c(and)i Fp(non-global.)23
b Fs(That)18 b(is,)h(each)f(is)h(performed)c(locally)j(and)g
(asynchronously)c Fp(at)19 b Fs(memory)e(with-)0 966
y(out)24 b(interference)e(from)h(other)h(transactions;)h(each)f(is)i
(an)e(atomic)g(action.)38 b(The)24 b(various)f(users')i(processes)f
(are)g(free)g(to)g(continue)0 1098 y(without)19 b(synchronizing)f(with)
i(storage)g(management.)125 1231 y(Second,)13 b(reference-counting)d
(allows)k(the)g(heap')-5 b(s)14 b(address)g(space)g(to)g(be)g(much)f
(smaller)h(than)f(a)i(collected)e(one)g(and,)i(thereby)-5
b(,)13 b(in-)0 1364 y(creases)j(locality)-5 b(.)25 b(Nodes)16
b(are)g(recycled)f(in)h(real)g(time)g(and)g(existing)f(space)h(is)h
(used)f(more)f(completely\320even)f(to)i(100\045)f(capacity\320)0
1497 y(without)k(sacri\256cing)h(any)g(global)f(performance.)125
1630 y(Finally)-5 b(,)24 b(reference)f(counting)g(can,)i(indeed,)g
(handle)e(many)h(useful)g(data)g(structures,)h(speci\256cally)g
(including)d(several)j(cyclic)0 1763 y(ones.)36 b(Conventional)21
b(wisdom,)j(that)f(it)h(breaks)f(on)g(cycles,)h(arises)g(from)e
(overstatements)g(in)i(both)e(textbooks)g(and)h(research)f(ref-)0
1895 y(erences.)28 b(While)21 b(reference)e(counting)f(has)j(long)f
(been)g(known)f(to)i(be)g(unsuited)e(for)h(arbitrary)f(circular)h
(structures,)g(they)g(are)g(often)0 2028 y(overused;)c(many)g(examples)
f(are)i(better)f(reimplemented)e(without)i(any)g(cycles)h(at)g(all)g
([24)n(,)h Fq(x)p Fs(2.2.4].)24 b(Moreover)m(,)14 b(that)j
(\252wisdom\272)f(ig-)0 2161 y(nores)g(strategies)g(for)g
(circularities)g(that)g(sustain)h(reference)e(counting)f(in)j(useful)f
(situations)g([10)o(,)g(5,)h(16)o(,)f(37)o(].)26 b(Baker)16
b([3)o(,)h(4])f(wrongly)0 2294 y(implies)k(that)h(it)f(consumes)g(both)
f(address)h(space)g(and)g(processor)e(time,)j(neither)e(of)h(which)f
(is)j(used)d(here.)125 2427 y(The)25 b(prototype)e(provides)i(nodes)g
(that)h(are)f(either)h(atomic)f(or)g(binary)-5 b(,)26
b(as)g(the)g(skeletal)g(C++)g(declaration)e(below)h(illustrates.)0
2560 y(It)e(models)f(the)g Fn(cons)h Fs(nodes)f(of)i(S)t
Ft(C)t(H)t(E)t(M)t(E)h Fs(and)f(L)t Ft(I)t(S)t(P)r Fs(,)g(but)e(also)h
(suf)o(\256ces)f(for)g(aggregates)f(of)i(arbitrary)e(size)i(via)g
(naturally)e(corre-)0 2692 y(sponding)d(binary)g(trees)i([24)n(,)g
Fq(x)p Fs(2.3.2])e(or)m(,)h(better)m(,)f(complete)h(trees)h([24)n(,)g
Fq(x)p Fs(2.3.4.5].)k(The)c(latter)f(are)h(used)f(to)h(implement)e
(matrix)h(de-)0 2825 y(composition)14 b(in)j(Section)e(5.2,)h(below)-5
b(.)25 b(These)16 b(generalizations)e(are)i(needed)f(by)j(S)t
Ft(M)t(A)t(L)t(L)n(T)o(A)t(L)t(K)f Fs(and)h(C)t(+)t(+)r(-style)f
(languages,)e(whose)0 2958 y(ef)o(\256cient)k(implementations)e
(probably)h(require)g(a)i(four)n(-pointer)d(node,)h(halving)h(the)g
(logarithmic)f(access)i(into)g(complete)e(trees.)27 b
Fp(cf.)0 3091 y Fs(Section)20 b(6.)450 3173 y Fm(typedef)34
b(word)g(char[4];)1080 b(//A)35 b(32-bit)f(word)g(at)h(address)f(4k.)
450 3273 y(typedef)g(unsigned)g(int)g(bool;)244 b(const)34
b(bool)g(false=0,)g(true=1;)450 3372 y(enum)g(Type)h({atomic,)f
(binaryNode};)450 3472 y(typedef)g(struct)g(Node{)729
3571 y(union)g({)h(struct)f({struct)g(Node)g(*left,)g(*right;})g
(twoLinks;)1008 3671 y(double)1045 b(atom;)729 3771 y(})35
b(data;)729 3870 y(bool)f(mark,)h(liveLeft,)e(liveRight;)729
3970 y(Type)h(type;)729 4070 y(unsigned)g(int)g(RefCt;)450
4169 y(})h(RCMnode;)450 4369 y(const)f(leftRight)g(=)h(4;)104
b(//Bit)34 b(2)h(distinguishes)e(addresses)h(of)g(double)g(words)h
(from)f(words.)450 4468 y(inline)g(double)g(*selectLft\(word)f(*ptr\))h
({return)g(\(\(long\)ptr\))g(&)g(\(!)h(leftRight\);};)450
4568 y(inline)f(bool)139 b(isRight)69 b(\(word)34 b(*ptr\))g({return)g
(\()h(\(int\)ptr)69 b(&)139 b(leftRight\);};)125 4676
y Fp(Every)20 b Fs(write)h(of)f(a)h(pointer)f(to)h Fp(r)m(efer)m
(ence-counting)c(memory)k Fs(\(RCM\))g(becomes)f(a)h
Fl(read-modify-write)16 b Fs(there.)28 b(That)20 b(is,)i(a)f(new)0
4809 y(pointer)15 b(is)h(overwritten)e(at)i(a)h(memory)d(location)h
(only)f(by)i(removal)e(of)i(a)g(former)e(reference)g(in)i(that)g(same)g
(location)f(during)f(the)h(same)0 4941 y(memory)k(cycle.)29
b(Dynamic)19 b(RAM)j(provides)d(this)j(operation)d(at)i(little)h(cost)f
(beyond)e(a)i(conventional)d(write;)k(readily)e(available)g(on)0
5074 y(stock)g(RAM)h(chips,)f(it)h(is)g(lost)f(on)g(stock)g
Fn(SIMM)p Fs(s)i(where)e(lines)g(for)g(data-in)f(and)h(data-out)f(are)h
(wired)f(together)-5 b(.)125 5207 y(T)f(o)24 b(write)g(a)h(pointer)m(,)
f(the)g(address)g(and)f(data)i(are)f(dispatched)f(from)g(a)i(processor)
e(to)h(remote)g(memory)e(where)i(the)g(following)0 5340
y(algorithm)19 b(is)i(executed)e(uninterruptibly)d(\(as)21
b(a)g(remote)e(procedure)f(local)i(to)g Fo(destination)p
Fs(,)f(a)h(word)g(address\):)1929 5589 y(3)p eop
%%Page: 4 4
4 3 bop 450 39 a Fm(void)34 b(store\(RCMnode)g(*pointer,)f(word)i
(*destination\))e({)729 138 y(RCMnode)h(*leftDest)g(=)g
(selectLft\(destination\);)729 238 y(if)h(\(leftDest->type)d(==)j
(binaryNode\))973 337 y(DISPATCH)f
(incrementCount\(selectLft\(pointer\)\);)729 437 y(if)h
(\(isRight\(destination\)\){)868 537 y(if)g(\(leftDest->liveRight\))973
636 y(DISPATCH)f(decrementCount\(leftDest->data.right\);)c(//to)k
(*destination)868 736 y(\()105 b(leftDest->liveRight\))32
b(=)j(\(leftDest->type)e(==)h(binaryNode\);)868 836 y
(leftDest->data.right)172 b(=)35 b(pointer;)243 b(//*destination)33
b(=)i(pointer;)729 935 y(})g(else)f({)868 1035 y(if)h
(\(leftDest->liveLeft)d(\))973 1135 y(DISPATCH)i
(decrementCount\(leftDest->data.left)c(\);)35 b(//to)f(*destination)868
1234 y(\()105 b(leftDest->liveLeft)32 b(\))j(=)g(\(leftDest->type)e(==)
h(binaryNode\);)868 1334 y(leftDest->data.left)207 b(=)35
b(pointer;)243 b(//*destination)33 b(=)i(pointer;)729
1433 y(})450 1533 y(})0 1670 y Fs(This)13 b(code)g(bends)g(the)i(C)t(+)
t(+)h(language)c(a)i(bit,)g(re\257ecting)f Fp(ad)g(hoc)f
Fs(hardware\320not)f(a)j(general)e(processor;)i(for)f(instance,)h
Fo(DISPATCH)p Fs(s)0 1803 y(are)21 b(signalled)g(to)h(other)e
(circuitry)h(asynchronously)-5 b(.)26 b(The)21 b(four)g(steps)h(occur)e
(in)i(parallel,)f(subject)g(to)h(two)f(constraints:)29
b(the)21 b(incre-)0 1936 y(ment)15 b(is)i(dispatched)d(before)g(the)h
(decrement)1318 1906 y Fk(1)1349 1936 y Fs(,)i(and)e(the)g(former)f
(content)h(at)h(the)f(destination)g(is)h(read)f(before)f(it)j(is)f
(overwritten.)24 b(Both)0 2069 y(the)16 b(fetches)h(from)e
Fp(destination)g Fs(and)h(its)h(tags,)g(and)f(the)h(stores)f(occur)g
(there)g(during)e(the)j(same)f(memory)f(\(read-modify-write\))d(cycle.)
0 2202 y(The)19 b(sequentiality)f(of)h(these)h(three)f(steps)h(in)f
(C++)h(code)f(satis\256es)i(the)e(constraints)g(on)g(a)h(uniprocessor)m
(,)d(but)i(we)h(intend)e(them)h(to)h(be)0 2335 y(nearly)f(simultaneous)
g(in)i(hardware.)125 2468 y(Increments)h(and)h(decrements)g(to)h(a)g
(reference)e(count)h(at)i(a)f(given)f(address)g(from)g(several)h(dif)o
(ferent)d(RCM)k(modules)e(may)h(be)0 2600 y(arbitrarily)d(interleaved,)
h(as)h(long)f(as)i(transactions)e(from)g(the)g(same)h(RCM)h(module)e
(are)g(executed)g(there)g(in)h(the)g(order)e(they)i(were)0
2733 y(issued.)35 b(A)23 b(unique,)f(non-caching)d(path)k(between)f
(any)g(source-destination)e(pair)m(,)i(as)i(on)e(a)h(bus)g(or)f(a)i
(banyan)d(net)h([18)o(])h(meets)g(this)0 2866 y(constraint.)125
2999 y(At)d(the)h(destination)e(address,)g(both)h(increments)450
3124 y Fm(const)34 b(sticky)g(=)h(16777215;)313 b(//)34
b(2**24)h(-1)f(but)h(can)f(be)h(far)f(smaller---e.g.)f(255.)450
3224 y(void)h(incrementCount\(RCMnode)e(*ptr\){)i(if)h(\(ptr->RefCt)e
(<)i(Sticky\))f(ptr->RefCt++)f(;)i(})0 3373 y Fs(and)15
b(decrements)f(occur)g(as)i(atomic)f(transactions;)i(the)e
(\252sticky\272)g(count)g(provides)f(that)h(the)h(counter)d(can)j(be)f
(smaller)g(than)g(the)h(worst-)0 3506 y(case)21 b(requirement)d([7)o
(].)450 3637 y Fm(void)34 b(decrement\(RCMnode)f(*ptr\){)624
3737 y(if)i(\()g(\(ptr->RefCt)e(>=)i(Sticky\))f(||)g(\(bool\)\(--)g
(ptr->RefCt\))f(\))70 b({;})624 3836 y(else)35 b(FREE\(ptr\);)450
3936 y(})0 4073 y Fs(The)13 b(instruction)f Fo(FREE\(ptr\))h
Fs(above)f(indicates)h(return)g(of)g Fo(ptr)g Fs(to)h(the)f
(available-space)f(structure)h(on)g(board)f(RCM)j(\(at)e(memory)-5
b(.\))125 4206 y(The)21 b Fo(increment)g Fs(and)g Fo(decrement)g
Fs(operations)g(are)g(serialized)h(at)g(their)g(tar)o(get)f(address,)h
(but)f(either)h(can)g(be)g(handled)e(si-)0 4339 y(multaneously)g(with)i
(a)h(read)e(or)h(write)g(there,)g(because)f(read/write)g(uses)i
(circuits)f(distinct)g(from)f(increment/decrement.)28
b Fl(Each)22 b(of)0 4472 y(these)k(three)f(operations)f(requires)g
(only)h(bounded)e(time.)44 b Fs(A)26 b(node)f(typically)g(returns)f(to)
i(available)f(space)g(still)i(containing)d(live,)0 4605
y(yet-counted)18 b(pointers)h([33)o(].)125 4738 y(Figure)26
b(1)h(illustrates)g(the)g(hardware)f(con\256guration)e(of)j
(Reference-Counting)d(Memory)h(\(RCM\))j(as)f(implemented.)46
b(Every)0 4870 y(bank)17 b(of)h(RCM)i(has)e(both)g(data)g(memory)e(and)
i(reference-count)d(memory)h(at)j(the)f(same)h(address.)25
b(The)18 b(data)g(memory)f(handles)g(con-)0 5003 y(ventional)25
b(reads)h(and)f(writes)i(from)e(the)h(processor\(s\);)i(the)e(counting)
f(memory)f(handles)i(increments)f(and)g(decrements)g(as)i(they)p
0 5074 1560 4 v 90 5130 a Fj(1)120 5153 y Ft(It)18 b(is)g(necessary)i
(to)f(dispatch)h(increment)h(before)e(decrement)i(to)e(handle)h
(correctly)h(a)d(re\257exive)i(assignment)g Fi(ptr=ptr)p
Ft(,)d(where)i Fi(ptr)f Ft(is)g(the)h(only)g(reference)0
5271 y(to)e(its)h(referent.)1929 5589 y Fs(4)p eop
%%Page: 5 5
5 4 bop 1230 0 a
 11367084 18945146 7433338 26510049 19274055 46113013 startTexFig
 1230 0 a
%%BeginDocument: ../../TR401/Figures/fig2.layout.nc.eps
%ADO_ImageableArea: 30 30.96 582 761.04
userdict begin/dscInfo 5 dict dup begin
/Title(Canvas:fig2.layout.nc)def
/Creator(Canvas2.1: LaserWriter 8 8.2)def
/CreationDate(11:26 AM Tuesday, February 27, 1996)def
/For(dswise)def
/Pages 1 def
end def end
/md 189 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
/G/setgray ld
/:F/setrgbcolor ld
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
/currentpacking where {pop sc_oldpacking setpacking}if end
md begin
/mT[.24 0 0 -.24 29.999 761.009]def
initQDpatterns
/sD 16 dict def
/f0_1/Helvetica
:mre
/f0_18 f0_1 18 scf
/f3_1/Helvetica-BoldOblique
:mre
/f3_24 f3_1 24 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
initializepage
gS 0 0 2300 3042 rC
1 G
0 0 2300 3041 rC
809 614 143 612 rF
0 G
2 lw
810 615 141 610 rS
1 G
809 521 152 77 rF
0 G
810 522 150 75 rS
1 G
489 136 790 850 rC
828 525 95 70 rF
gS
1.697 1.946 scale
516.422 289.052 :T
-516.422 -289.052 :T
489.11 284.177 :M
0 G
f0_18 sf
(8 x 1M)S
gR
gS
1.697 1.946 scale
516.422 289.052 :T
-516.422 -289.052 :T
504.431 302.163 :M
0 G
f0_18 sf
(tag)S
gR
gR
1 G
gS 469 496 826 850 rC
816 885 115 70 rF
gS
1.737 1.946 scale
503.41 473.363 :T
-503.41 -473.363 :T
470.973 469.175 :M
0 G
f0_18 sf
(64 x 1M)S
gR
gS
1.737 1.946 scale
503.41 473.363 :T
-503.41 -473.363 :T
485.942 487.161 :M
0 G
f0_18 sf
(data)S
gR
gR
gS 0 0 2300 3041 rC
388 802 152 227 rF
0 G
2 lw
389 803 150 225 rS
6 lw
351 503 656 750 rS
:a
0 0<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC>fg bk
:b
594 371 58 695 rF
688 539 58 827 rF
:e
0 G
-2 -4 766 1301 2 4 762 539 @b
1 G
51 466 826 894 rC
398 859 115 106 rF
gS
1.737 1.964 scale
262.492 464.813 :T
-262.492 -464.813 :T
230.304 451.688 :M
0 G
f0_18 sf
(24 x 1M)S
gR
gS
1.737 1.964 scale
262.492 464.813 :T
-262.492 -464.813 :T
238.365 469.511 :M
0 G
f0_18 sf
(count/)S
gR
gS
1.737 1.964 scale
262.492 464.813 :T
-262.492 -464.813 :T
249.305 487.843 :M
0 G
f0_18 sf
(link)S
gR
gR
gS 423 920 736 850 rC
gS
1.623 1.946 scale
483.011 691.186 :T
-483.011 -691.186 :T
462.198 687.061 :M
0 G
f0_18 sf
(read/)S
gR
gS
1.623 1.946 scale
483.011 691.186 :T
-483.011 -691.186 :T
464.047 705.047 :M
0 G
f0_18 sf
(write)S
gR
gR
gS 228 1000 988 894 rC
gS
1.851 1.964 scale
385.372 736.617 :T
-385.372 -736.617 :T
333.372 723.617 :M
0 G
f0_18 sf
(data/address)S
gR
gS
1.851 1.964 scale
385.372 736.617 :T
-385.372 -736.617 :T
325.268 741.44 :M
0 G
f0_18 sf
(from Processor)S
gR
gS
1.851 1.964 scale
385.372 736.617 :T
-385.372 -736.617 :T
349.582 759.773 :M
0 G
f0_18 sf
(or Switch)S
gR
gR
0 G
gS 0 0 2300 3041 rC
-2 -4 578 1066 2 4 574 446 @b
195 0 704 833 rC
gS
1.575 1.946 scale
342.75 209.928 :T
-342.75 -209.928 :T
325.813 205.553 :M
f0_18 sf
(incr/)S
gR
gS
1.575 1.946 scale
342.75 209.928 :T
-342.75 -209.928 :T
325.178 223.539 :M
f0_18 sf
(decr)S
gR
gR
gS 179 0 898 751 rC
gS
1.798 1.964 scale
345.13 155.004 :T
-345.13 -155.004 :T
313.13 141.566 :M
f0_18 sf
(address)S
gR
gS
1.798 1.964 scale
345.13 155.004 :T
-345.13 -155.004 :T
317.024 159.389 :M
f0_18 sf
(to/from)S
gR
gS
1.798 1.964 scale
345.13 155.004 :T
-345.13 -155.004 :T
302.007 177.722 :M
f0_18 sf
(other RCM)S
gR
gR
gS 470 0 980 769 rC
gS
1.847 1.923 scale
515.325 187.082 :T
-515.325 -187.082 :T
456.325 193.957 :M
f3_24 sf
(Back-door)S
gR
gR
gS 507 999 976 820 rC
gS
1.845 1.923 scale
534.603 733.072 :T
-534.603 -733.072 :T
475.853 739.947 :M
f3_24 sf
(Processor)S
gR
endp
end
%%EndDocument

 endTexFig
 1115 2632 a Fs(Figure)19 b(1:)27 b(Layout)19 b(of)h
(Reference-Counting)d(Memory)-5 b(.)0 2899 y(arrive)17
b(as)i(a)f(result)g(of)f(earlier)h(writes)g(or)f(via)h
Fp(ad)g(hoc)f Fs(commands.)24 b(Each)18 b(of)f(the)h(two)g(memories)f
(has)h(its)h(own)e(bus)h(and)f(ports:)25 b(a)19 b(data)0
3032 y(port)j(to)i(the)f(various)f(processors,)h(and)f(also)i
(\(narrower\))c(ports)j(for)g(real-time)f(dispatch)g(and)h(receipt)g
(of)g(increments/decrements)0 3165 y(to)c(and)f(from)f(other)h(modules)
f(of)i(RCM.)g(Since)g(a)g(single)f(data)h(transaction)e(\(write\))h
(can)h(generate)e(two)h(dispatches,)h(the)f(dispatches)0
3298 y(must)23 b(be)f(handled)f(at)i(twice)g(the)f(speed)g(of)h(the)f
(data)h(transaction;)f(fortunately)-5 b(,)20 b(their)j(bandwidths)e
(are)h(less)i(than)e(half)g(that)g(of)h(the)0 3431 y(data.)j
(Processing)18 b(of)h(the)g(doubled)e(dispatches)h(from)g(RCM-pointer)g
(writes,)h(moreover)m(,)d(is)k(also)f(absorbed)e(by)i(interleaved)e
(trans-)0 3564 y(actions)j(that)g(do)f(not)g(involve)g
(reference-counts:)24 b Fp(e.g.)i Fs(RCM)21 b(reads,)e(RCM)i(writes)g
(or)e(overwrites)g(of)h(\252dead\272)e(data,)i(and)f(RAM)i(or)0
3696 y(idle-memory)d(cycles.)125 3829 y(Data)j(in)g(RCM)h(is)g(tagged)d
(as)j(either)e Fp(live)i Fs(or)e Fp(dead)i Fs([37)o(])f(at)g(memory)-5
b(.)27 b(Atomic)20 b(information)f(and)h(immediate)g(references,)f
(like)0 3962 y Fo(NULL)k Fs(and)j(L)t Ft(I)t(S)t(P)r
Fs(')-5 b(s)24 b Fo(shortInt)p Fs(s,)g(are)g(dead;)h(pointers)d(are)i
(tagged)e(live.)38 b(When)23 b(a)h(dead)f(\(atomic\))g(datum)g(is)h
(written)g(to)g(RCM,)0 4095 y(no)e(increment)g(is)i(dispatched,)d(and)i
(when)f(a)h(dead)f(datum)g(is)i(overwritten)d(there,)i(no)f(decrement)f
(is)j(issued.)35 b(Figure)22 b(2)h(illustrates)0 4228
y(how)e(each)h(node)e(appears)h(to)h(the)f(programmer)m(,)e(with)j
Fn(L)g Fs(tagging)e(a)i(live)g(datum)f(and)g Fn(D)h Fs(tagging)f(a)h
(dead)f(one.)30 b(Atomic)22 b(nodes)f(are)0 4361 y(distinguished)e
(from)g(binary)g(nodes)g(at)i(allocation,)e(where)g(their)h(types)g
(are)g(established)g(and)g(so)g(tagged.)125 4493 y(Each)d(bank)h(of)g
(RCM)h(memory)e(maintains)h(its)h(own)f(available)g(space.)26
b(Whenever)17 b(a)i(processor)e(needs)h(a)h Fn(NEW)g
Fs(node,)f(it)h(reads)0 4626 y(from)d(a)h(distinguished)e(memory)g
(location)g(there)i(to)f(obtain)g(the)h(address)f(of)g(the)h(new)g
(node.)24 b(Reading)16 b(from)g(one)g(location)g(allocates)0
4759 y(a)21 b(node)f(as)h(an)f(atom;)h(from)e(another)m(,)g(a)i(binary)
e(node)h(as)h(coded)f(above.)26 b(Other)21 b(distinguished)e(locations)
h(are)g(used)g(as)i(control)d(and)0 4892 y(data)f(registers)f(for)h
(the)f(RCM)i(device.)26 b(For)17 b(example,)g(writing)g(an)h(address)g
(to)g(either)f(of)g(two)h(distinguished)f(addresses)g(dispatches)0
5025 y(an)j(increment)f(or)m(,)g(respectively)-5 b(,)19
b(a)h(decrement)f(to)h(the)g(count)f(of)h(the)h(addressed)e(node.)125
5158 y(A)k(special)f(garbage-collection)d(mode,)j(during)f(which)h(the)
g(interpretation)f(of)h(reads)g(and)g(writes)h(to)g(RCM)h(is)f
Fp(completely)f Fs(re-)0 5290 y(de\256ned,)g(supports)f(a)i
(Deutsch-Schorr)n(-W)-7 b(aite)21 b(mark-phase)f([24)o(,)j(32)o(].)34
b(It)23 b(provides)e(multiprocessor)f(marking)h(in)i(place,)g(of)o
(f-line)1929 5589 y(5)p eop
%%Page: 6 6
6 5 bop 1057 0 a
 14095149 11367059 10064609 31772590 25523322 44205342 startTexFig
 1057 0 a
%%BeginDocument: ../../TR401/Figures/fig3.atAddr.nc.eps
%ADO_ImageableArea: 30 30.96 582 761.04
userdict begin/dscInfo 5 dict dup begin
/Title(Canvas:fig3.atAddr.nc)def
/Creator(Canvas2.1: LaserWriter 8 8.2)def
/CreationDate(11:27 AM Tuesday, February 27, 1996)def
/For(dswise)def
/Pages 1 def
end def end
/md 190 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
/G/setgray ld
/:F/setrgbcolor ld
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
/currentpacking where {pop sc_oldpacking setpacking}if end
md begin
/mT[.24 0 0 -.24 29.999 761.009]def
initQDpatterns
/sD 16 dict def
/f0_1/Helvetica
:mre
/f0_18 f0_1 18 scf
/f0_12 f0_1 12 scf
/f3_1/Helvetica-BoldOblique
:mre
/f3_14 f3_1 14 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
initializepage
gS 0 0 2300 3042 rC
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
6 lw
0 0 2300 3041 rC
986 1022 337 75 rS
:e
692 661 894 794 rC
gS
1.796 1.895 scale
629.749 558.373 :T
-629.749 -558.373 :T
586.311 563.123 :M
0 G
f0_18 sf
(count / link)S
gR
gR
1 G
gS 0 0 2300 3041 rC
1116 1077 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
2 lw
1117 1078 112 75 rS
:e
1 G
891 1077 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
892 1078 112 75 rS
:e
223 661 698 794 rC
gS
1.565 1.895 scale
361.535 558.373 :T
-361.535 -558.373 :T
343.723 563.123 :M
0 G
f0_18 sf
(tags)S
gR
gR
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
6 lw
gS 0 0 2300 3041 rC
517 1022 112 75 rS
:e
1 G
1003 1077 115 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
2 lw
1004 1078 113 75 rS
:e
1 G
1228 1077 115 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
1229 1078 113 75 rS
:e
1 G
778 1077 115 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
779 1078 113 75 rS
:e
1 G
554 1077 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
555 1078 112 75 rS
:e
1 G
1116 1077 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
1117 1078 112 75 rS
:e
0 G
6 lw
555 1078 899 75 rS
267 731 1474 780 rC
gS
1.944 1.875 scale
511.445 597.629 :T
-511.445 -597.629 :T
338.445 601.067 :M
f3_14 sf
(64-bit atomic value, such as a floating-point number)S
gR
gR
:e
0 G
gS 0 0 2300 3041 rC
84 -110 -70 557 1072 @k
-16 -16 565 997 16 16 549 892 @b
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
986 500 337 75 rS
:e
692 139 894 794 rC
gS
1.796 1.895 scale
629.749 282.881 :T
-629.749 -282.881 :T
586.311 287.631 :M
0 G
f0_18 sf
(count / link)S
gR
gR
1 G
gS 0 0 2300 3041 rC
514 497 118 81 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
517 500 112 75 rS
:e
223 130 698 794 rC
gS
1.565 1.895 scale
361.535 278.443 :T
-361.535 -278.443 :T
343.723 282.881 :M
0 G
f0_18 sf
(tags)S
gR
gR
gS 0 0 2300 3041 rC
778 555 115 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
2 lw
779 556 113 75 rS
:e
1 G
666 555 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
667 556 112 75 rS
:e
0 G
4 lw
555 556 449 75 rS
1 G
554 555 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
2 lw
555 556 112 75 rS
:e
1 G
891 555 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
892 556 112 75 rS
:e
1 G
1228 555 115 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
1229 556 113 75 rS
:e
1 G
1116 555 114 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
1117 556 112 75 rS
:e
1 G
1003 555 115 77 rF
:a
0 0<E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1>fg bk
:b
1004 556 113 75 rS
:e
0 G
1004 556 450 75 rS
6 lw
555 556 899 75 rS
20 21 783 593.5 @j
2 lw
18 19 783 593.5 @f
48 -110 -70 783 734 @k
-6 -6 786 690 6 6 780 600 @b
20 21 1233 593.5 @j
18 19 1233 593.5 @f
48 -110 -70 1233 734 @k
-6 -6 1236 690 6 6 1230 600 @b
84 -110 -70 1006 556 @k
-16 -16 1014 481 16 16 998 376 @b
779 822 75 38 rS
854 822 75 38 rS
20 21 821 846.5 @j
18 19 821 846.5 @f
24 -110 -70 821 929 @k
-2 -2 822 907 2 2 820 844 @b
20 21 891 846.5 @j
18 19 891 846.5 @f
24 -110 -70 891 929 @k
-2 -2 892 907 2 2 890 844 @b
535 423 510 774 rC
gS
1.2 1.867 scale
653.668 433.589 :T
-653.668 -433.589 :T
646.668 436.589 :M
f0_12 sf
(LL)S
gR
gR
0 G
2 lw
gS 0 0 2300 3041 rC
971 823 75 37 rS
1046 823 75 37 rS
1012.5 846.5 10.5 @i
1012.5 846.5 9.5 @e
24 -110 -70 1013 930 @k
-2 -2 1014 908 2 2 1012 844 @b
713 423 538 774 rC
gS
1.259 1.867 scale
774.875 433.776 :T
-774.875 -433.776 :T
767.125 436.589 :M
f0_12 sf
(LD)S
gR
gR
gS 0 0 2300 3041 rC
1154 823 75 37 rS
1229 823 75 37 rS
20 21 1266 846.5 @j
18 19 1266 846.5 @f
24 -110 -70 1266 930 @k
-2 -2 1267 908 2 2 1265 844 @b
896 423 538 774 rC
gS
1.259 1.867 scale
919.95 433.776 :T
-919.95 -433.776 :T
912.45 436.589 :M
f0_12 sf
(DL)S
gR
gR
gS 0 0 2300 3041 rC
1341 823 75 37 rS
1416 823 75 37 rS
1071 423 562 774 rC
gS
1.31 1.867 scale
1026.812 433.776 :T
-1026.812 -433.776 :T
1018.062 436.589 :M
f0_12 sf
(DD)S
gR
gR
gS 0 0 2300 3041 rC
1416 825 -2 2 1492 859 2 1416 823 @a
1044 825 -2 2 1121 857 2 1044 823 @a
1154 826 -2 2 1231 858 2 1154 824 @a
1341 826 -2 2 1418 858 2 1341 824 @a
endp
end
%%EndDocument

 endTexFig
 1327 1672 a Fs(Figure)20 b(2:)27 b(Memory)19 b(at)i(one)e(RCM)i(node.)
0 1939 y(\(from)f(the)h(processor\),)e(without)h(interprocessor)f
(synchronization,)f(and)j(with)g(very)f(few)h(cycles)g(per)g(node.)28
b(This)22 b(hardware)d(sup-)0 2072 y(port)k(for)f(hybrid)g(garbage)g
(collection)g(is)j(also)e(new)-5 b(.)36 b(State-of-the-art)22
b(storage)g(managers)g(used)i(in)f(Smalltalk)g(systems)h([22)o(,)g(1)m
(1)o(],)0 2205 y(as)g(well)g(as)g(many)e(secondary-storage)e(managers,)
i(also)i(are)f(hybrids)e(of)i(garbage)f(collection)g(and)h(reference)e
(counting,)h(but)h(this)0 2338 y(device)c(is)j(the)e(\256rst)h(to)f
(provide)e(hardware)h(support)g(for)g(both.)0 2692 y
Fr(3)119 b(Constraints)30 b(in)h(the)f(Pr)n(ototype)0
2911 y Fs(An)23 b(undercurrent)c(in)k(this)g(project)f(is)h(an)g(ef)o
(fort)e(to)h(develop)f(memory)g(hardware)g(without)h(hacking)f(the)i
(kernel,)f(and)g(without)g(re-)0 3044 y(building)g(a)h(programming)d
(environment;)i(the)i(former)d(constraint)i(was)h(met,)g(but)f(the)g
(latter)g(was)h(not.)36 b(At)24 b(such)f(a)h(low)f(level)h(the)0
3176 y(project)f(was)i(vulnerable)d(to)i(upheavals)f(from)g
(manufacturers')e(revisions)i(to)h(the)i(M)t Ft(A)t(C)t(H)h
Fs(system,)e(and)f(to)g(dif)o(\256culties)f(with)i(the)0
3309 y(chosen)20 b(language)e(implementation.)26 b(In)20
b(the)g(end,)g(we)h(developed)d(our)i(own)g(rudimentary)g(S)t
Ft(C)t(H)t(E)t(M)t(E)j Fs(environment)17 b(that)k(does)f(es-)0
3442 y(tablish)g(RCM)h(performance)c(with)j(sound)e(statistics,)k(but)d
(which)g(is)i(not)f(complete)e(because)h(of)h(its)h(stack)f(protocol)e
(that)i(precludes)0 3575 y(continuations.)25 b(Full)20
b(benchmarks)e(would)i(require)e(a)j(complete)e(environment)f(that)i
(is)h(not)f(available.)125 3708 y(The)14 b(project)h(had)f(three)h
(original)f(motivations:)24 b(exercise)15 b(of)f(rapid)h(hardware)f
(prototyping)e(from)i(another)g(project,)h(re\256nement)0
3841 y(of)21 b(our)g(digital)h(design)f(tools)h([23)n(],)g(and)g
(support)e(for)h(applicative)g(programming)d(research.)30
b(While)22 b(substantially)f(successful)h(on)0 3973 y(all)e(three)f
(goals,)g(the)h(three)f(did)g(erect)g(additional)f(constraints)h
(around)f(the)h(design.)26 b(Later)19 b(on,)g(the)h(RCM)g(became)f
(essential)h(to)g(the)0 4106 y(Applicative)f(File)i(System)f([20)o(],)g
(toward)f(which)h(the)g(ultimate)g(software)g(development)d(was)k
(directed.)125 4239 y(The)e(rapid)g(prototyping)e(ef)o(fort)i(dictated)
g(that)h(we)g(use)g(available)g(hardware)e(and)h(software)h(as)g(much)f
(as)i(possible.)26 b(Thus,)20 b(pro-)0 4372 y(totype)i(RCM)i(is)g
(implemented)d(as)j(a)f(\252device\272)f(resident)g(on)h(the)g(bus,)g
(running)e(at)i(bus)g(speed)g(rather)f(than)g(at)i(the)f(speed)f(of)h
(main)0 4505 y(memory)-5 b(,)18 b(in)i(order)f(to)h(avoid)g(hacking)e
(on)i(host)g(hardware.)125 4638 y(W)-7 b(e)22 b(chose)g(the)h(N)t
Ft(E)t(X)t(T)t Fs(B)t Ft(U)t(S)h Fs(because)d(we)h(had)f(familiarity)g
(with)h(Motorola)e(680x0)g(architecture)g(and)h(two)h(machines:)31
b(M)t Ft(A)t(C)t Fs(-)2 4770 y Ft(I)t(N)t(T)s(O)t(S)t(H)22
b Fs(and)d(NeXT)-6 b(,)19 b(that)g(use)h(it.)27 b(The)19
b(availability)g(of)g(NeXT')-5 b(s)22 b(N)t Ft(E)t(X)t(T)t
Fs(B)t Ft(U)t(S)g Fs(Interface)c(Chip)h(\()p Fn(NBIC)p
Fs(\))h(and)f(timely)g(delivery)f(of)h(it)0 4903 y(and)i(prototype)e
(boards)h(swung)h(us)h(to)f(NeXT)h(as)g(a)g(testbed.)30
b(Moreover)m(,)19 b(both)h(the)i(lab)f(and)g(the)g(manufacturer)e(were)
i(receptive)f(to)0 5036 y(new)g(ventures)f(on)h(the)g(new)g(product.)
125 5169 y(Standard)g(8-bit)h Fn(SIMM)p Fs(s)j(are)d(the)h(prototype)e
(memory)-5 b(,)20 b(and)h(so)h(initially)g(contained)e(one)h(million)h
(nodes,)f(each)g(of)h(ninety-six)0 5302 y(bits:)37 b(twelve)24
b Fn(SIMM)p Fs(s)i(\(Figure)e(1\).)40 b(The)24 b(user)h(sees)g(an)g
(address)f(space)h(of)f(only)g(eight)g(megabytes)g(\(Figure)f(2\).)40
b(The)24 b(remainder)1929 5589 y(6)p eop
%%Page: 7 7
7 6 bop 741 0 a
 19087270 14682517 15261368 10985553 34798551 25918013 startTexFig
 741 0 a
%%BeginDocument: ../Figures/fig4.photo.ps
/readstring {
  currentfile exch readhexstring pop
} bind def
/picstr 309 string def
gsave
232.68 393.2 translate
296.64 225.6 scale
270 rotate
0.5 0.5 translate  90 rotate  -0.5 -0.5 translate
%0.5 0.5 translate   -0.5 -0.5 translate
309 235 8
[ 309 0 0 -235 0 235 ]
{ picstr readstring }
image
6f72706e71726f717172717073717174726f737571727272727573717574
747374727477747273737574757475777573737573747474767876777674
747475767676747674757776757676777777767576767675757575777876
77787574777776787977787778797876797b7577797977797b797a7a7976
797c78777877787a7a7a7b7a7a7b7c787a7a7a7c7c7d7c7c7b7b7b7d7b7c
7e7c7c7c7e7d7a7f7d7c80817f80807e7f7d80807f81817f80807f828381
7f8280838380828480828684838483828384838485828485858583868482
848484848284828384848685848484838587858483838381808484838384
8482808384818184808183808181817f7f8180817f828181808181817f7f
827f7e7f7d7d7c7f7f7f7f7d7b7d7f7c7d7e7e7f7b7a7d7b7d7e7c7c7e7c
7b7e7d7d7d7e7d7ba06e70706e6f6f70736e70707071707072716e70726f
7273717173717374737373737274747372726f7473747471757471757372
747476767773747773707373757674717574727477747274777476767575
757575757571777875767774737476767875757777777777777878767575
7978777979777a7b75787a77777977787979787a7a787b79787a7a78797c
7b7a7c7b7a7a7b7c7c7c7c7b7b7b7b7c7e7b7d7f7f7f817f7e807c7e8080
80817f7e7f80807f80808081838281828181818081818283808183818381
7f8382838282848282828282828383848181838380848383828484848580
818581808382818484828382808383828282808082827f7e817f7e808180
7e81827f83818081817f7f7f807f7e7d81807d7f807e7b7e7c7b7e7e7e7c
7b7b7d7c7e7b7b807d7c7c7d7d7e7d7c79aa6f6f6b706f6c6f726c6f716d
6d716e6e70706f716f707070706e7070706f707072747271727272717271
72736f707270717274727374747676727373737073757271747471727475
737270737371717573717273737372747373727174737273767572747773
757575767675747375757579767676767976757976757777777978777977
777b7975777978797877797a7a777a797a7b79797b7d79777c7b797b7d7d
7c7f7d7e807b7c7f7d7d7e7c7d7e7e7f7c7d807e7f817d7e7f7e7f807f7d
81827f80817e7e80817e808080817f81808283808080818183828080817f
81818081828081837d7e81817f807f7f83808081817e80828081827f7e80
817d7c7e7f7e7f7d7f7f7f7c7d7e7c7c7f7f7d7d7c7d7e7d7c7c7d7b7c7d
7a7a7b7c7b7b7c7c7a7a78797c7b777a7d7d7c7c7d7b7a7d7a77a36f6e6b
6d6b6c6c6d6c6f6e6c6e6d6c6e706e706e6d6f6e6e706c6f70716f6e6f71
7373707172716f727470717070716f707171727170717274737472737170
6e7170727472747274747473727271737570727370727472737474727172
717373727272747573727473727373757172757573747274767574767676
737476757777767875757977747a7876787676777979787a78787b79797b
7b78777b7a79797b797a7d7e7d7c7c7c7b7a7b7a7b7d7c7c7c7e7c7f7f80
81807d80807c7d807f7e82807d807e7d7d7e80807d7e7f8080807e80817f
7f7f80807f7e7f7f807f7e7f7e80807f807f7e7e7e8080817f7f7e7e7f80
7f80807e7f7e7d7e7d7d7e7c7d7e7e7d7d7d7e7c7d7b7c7b7b7c7c7c7a7a
7c7e7a7b7c7a787b7c79797a797a7b7c7a7a7a79777c79747a7b79797c7c
7a7a7b7977a5686a6b6d6a6a6a6a696c6c6c6d6d6a6d706d6e6f6d6f7170
6e6d6e6f6f6e6f6f7172707070726e6f716f6f72706f717171716f707273
726e6f73727170717070716e6e7373707474737473727372747471727370
7272707173757473726e7274707474717174737371747372747374767472
747372747474747674717175757777757777727575757977767876787677
7979767677777a7b7a797a7c797978787a7a797b7b7b7a7c7b7b7a7b7a79
7b7d7c7b7d7d7e817e7f81807f7f7e7c7c7f7d81817e7e807e7e7e807f7f
7f7e807f7f7e80807f81827f7d807d7d807f7f7f808080807e80807f7d7d
807f7f7f7f7e7f807f7e7f7d7e807d7b7b7c7c7d7d7b7c7e7d7d7c7c7b7d
7d7a7a7c7d797c7b7b7a7b7a7a7a7978797a797b7975797b7a78797a7978
797877787877797a78787a7979749b6c696a6b6c6b6a69696a6d6a6a6d6a
6d6e6b6d6d6e6f706f6c6e6f6e6e6e6e6f71706f706f706e70706e70716f
6f70707071706f70717370706f717170717372706f6d70736e6f7171716f
71706f72727071716f70716e6e727271726d72726e717471717171747470
737373727174747471737573727573727473717374727477757577747576
777874767976757778757876757976777977787b797a79797b79787a7a78
7a7c7a7b7b787a807a787e7b7a7c7c7a80817e7e807e7d7d7c7c7c7f7e7d
7f7e7c7e7f7d7e7f807c7e807e7e7e7f7e7e7f80807e7e7e7f7f7d807f7e
817f7c7e81807c7e7d7c7e7e7c7e7b7c7f7e7d7c7a7d7e7c7b7a7a7d7d78
7a7c7c7a7c7c7b7d7e7a79797a7a7a7c7c7b7b797a797979787878797c78
7577787979777777777877767575767779777778787772996b6c696a6e69
686c6a6d6e68686c6a6c6c6b6c6c6c6d716f6c6d6c6e6e6d6f6e6c6e706e
6f6f6c6d6e6f6e71716e6e6f706f6d706c6d706f6f6f6f6e6f727371706d
7070706f726f70726e7070706f6f70706f6f7071706f707371706f71716d
70727071726f727471717370717372737372737473717174727473717274
7272767675767574757677757678767478797576777677777477767a7977
7977787b7a787a7c79777a787a7b7a7a7c7b797d7b7a7b7b7c7a7e7e7e7e
7e7c7e7b7b7c7e7e7e7e807c7d7e7d807e7f7d7c7d7d7d7c7c82807b7f80
7f7f7c7f7f7c7e817e7f807f7f7d7f7e7d7c7e7e7d7c7e7c7b7e7d7d7f7c
7d7e7e7b7e7d797d7b787c7b7a7a7e7d7c7a7a7978797a787a7c797b7a77
787a7a787977767879777777777775777677777575767575777876757779
75709c696968696b69696b6a6d6c6a696b69696b6a6b6c6d6b6d6d6d6e6d
6d6e6d6e6c6c6e6b6b6e6e6e6f6d6e6d706e6e706b706f6c6e706c6d6e6e
706e6e706f7072716e72716f6e716f6f72716f6f6f706f6f71706e707270
7071707371716f716f70706f71716e6f727171737071727072736f717474
717072757574707371727272747675747175767474757677757577787675
7677777575777778787677797a7a79797b7b797878797a7b7a7a787a7c7a
7c7a7c7c797a7c7e7d7b7d7d7c7b7c7d7e7c7d7e7d7d7e7b7f7f7e7f7c7d
7d7e7c7d81807e7e7e7f7e7e7e7e7d7d7d7e7f7e7b7d7e7b7d7e7d7d7b7d
7c7d7e7a7b7d7d7e7c7d7c7e7e7c7c7b7c79797b78787a7b7a7c797a7b78
787b7979777a7a7976797776787875757776737577757777747678757575
74767575767774767677749b6a66686b69676b6b696b6c6a686a6c6a6b6b
6b6c6f6d6c6b6b6d6d6b6b6c6e6b6c706b6a6e6e6e6e6e6d6f706d6d706e
6e6f6f6e706f6f6e6e6f6e71706d7071716f7272706e706f6e737071706e
6f706d72716e70717070706e70726f7070717070716f6f72707071717170
71706f71736f707174747170737473717370737370727574737375737374
747476757676777678767777787676777876777979777978797c7b787979
79787a7978777979787b7c7c7b7b7b7b7d7b7d7e7c7e7d797d7e7c7b7d7e
7d7e7d7e7e7e807c7b7e7c7e7f7c7a7d7d7f7d7b7e7e7b7e7b7d7e7f7d79
7b7d7e7e7c7b7d7c7b7b7d7e7c7d7d7b7e7b7b7e7d7d7a7c7b7c7a7a7b78
787a7a797a7a7a7a79787a7a797978797878787777777676767876757474
767777757676757575747575747776757675746f9e6868686b68696a6a69
6a6c6a6b6a6a6a686b6b6b6b6e6e6b6a6d6f6d6c6d6d6d6e6d6c6c6d6e6b
6c6f6f6d6f6d706f6d6d6e6f706e6d706f6d6e6d6e6f706e6f726f6e706e
6f72706f6f6e6f716e706f6d6f6e6e706d6d6f706e6e6f6d6d726f6e7173
6f7072717272707270706f6e73707072716f71726f707572707270717571
707274727375727375747472737576777676767776747879767778787778
7477777a7c78797a797979797a79797a7a78797f7c787c7c7d7c7b7c7d7c
7c7b7b7e7d79797c7d7d7e7b7c7d7e7f7f7c7d7b7b7c7c7c7c7e7e7d7b7b
7c7e7c7a7d807c7b7b7e7c7e7e7c7a7c7c7a797b7b7a7b7b7c7c7a7b7d7c
7b7c7b7a7b7b7a7a7c7a797a797979797a7a797978777877767778777576
757577777777767571757774747675727674727575737577747476747199
686869686766696b69696a696d6d6b6a6a6c6b6d6e6d6c6d6c6c6e6e6d6c
6f6e6d6e6e6c6d6d6b6b6f6f6c6e6f6d6d6c6d6d6d6f6e6d70716b6e6e6a
6d726e71706f6e6f706f6f706e6c6d6c70706f6f6f706f6d6f6f6d6d706e
6f6f6f6f716e6e6e6f706f7070727171706f6f6e70716f7473717070736f
707471717274747171717472717270737473737473727675757475757576
737677777777787977767977787978787c7a797a79787a7b7a7b7b787c7b
7a7b7c7c7c7c7c7c7c7c7c7c7d7e7a7b7d7c7d807d7b807e7b7f7e7a7d7c
7a7c7e7b7c7e7c7d7b7d7d7c7c7e7e7b7d7b7d7e7c7d7c7b7c7d7b797b79
777a7b7b7a7a797b7c7a7a7b7a797a7a79787b7b7a7b7b79797979797977
777a7976767a767676747676767676727472767773747572717473727375
747374737575736b9c6668686667686668686a67676b6b696b6d696c6f6a
696d6a696d6d6c6c6a6c6c6d6e6e6d6e6a6c6e6e6d6f706d6e706c6f6d6d
6f706d6f706c6e6d6d6c6e70706e6d6e6e6f6e6d6e6d6d6d6c6f726d7070
6e706f6f716f6c6f6e6e716e70716c6d6e70706f70707072706e70736d6e
6f717372707372706f72716f716f7171726f7276726f7170717472727575
7072777774747776747576767a7976777975777b78787977787b7a797a79
797b7a7b7a7b7b7a7a7b7b7a7c7d7a7c7c7b7a7b7b7b7d7b7a7c7c7c7f7d
7b7e7c7c7d7b7b7b7b7a7a7b7a7a7e7d7d7c7c7e7c7b7f7c7c7d7c7c7d7c
7d7b7b7b7b7e7c7a7a797a7a787b78787c79787c7a79797d78777876787a
77787b7976797a7875777777777676757775747873747874707376737374
757273736f72747273727370747473737098686766676865686966696b68
6a6b68696c6a6a6d69686d6b696c6f6d6c6c69696d6e6c6c6f69696d6c6d
71706e706f6d6d6c6b6e706c6d6f6f6f6c6f6e6b706e6e706f6e6e6e6b6c
6d6d6d6d6f6e6e706c6e716f6e726f6b6f6c6d70706f6e6e6d6c6f706d70
717172726d7071706e70726e6f737070717170727171706f6e7172737372
717272727273747472737374757674757877757475787876787776797976
787977797a7877787a797b7a797a7b7b7b7a7a7b7b7a7c7b7b797a7a7a7c
7c7c7b7b7d7d7d7b7b7c7c7c7c7d7a7b7b7b7a7a7a787b7f7f7d7c7e7d7b
7c7e7e7c7c7c7c7d7d7a7b7a7a7c7c7b7a7a7a7a7a7a78777a7976797a78
7a7977787a79747879747678777877777678767475777676767675757675
73767471737573727372737274727274737171706f71727171709e676867
6766676a6966696b696a6a696b6b6b6a6b6c6b6c6b6b6c706c6d6c6e696c
6e6c6c6c6c696c6c6b6d6e6f6d6d6b6a6b6b6d6e6e6e6e70706b6d706e6f
706d6e6e6f6d6d6e6d6c6e6d6b6f6d6d6e6d6b6e6e6e6e6c6c6f6c6f6e6d
6f6f6c716d6c6f6e7071716f71706e6e70716f707070717071706e6f7270
727271717273737273717274737475737172747674737475737677767676
767777787777797776777977787b79797979797a797b7b7a7b79787a7c7a
7a7b7c7c7b7b7b7a7b7b7b7d7d7c7e7c7b7b7a7d7c7e7e7b7d7c7c7c7a7c
7b7a7d7d7c807c7d7d7c7c7c7c7c7b7d7d7b7b7a797a7d7a7b7c7b797a7b
7a797a7a787a7a7a797b7a76787a79797878787976767b77747976757677
7676767776767675757576747272737373727073716f74726f7272706f71
747170716e97676767676869676969686a676969666a6c696b6c6a6a6d6c
6c6d6b696b6b6e6c6d6f6c6d6d6e6b6d6f6c6d6e6f6e6d6a6c6c6a6c6c6c
6c6c6c6f6d6b6c6c6e6f6c6b6e6f6e6e6e6c6d6d6c6d6e6f6b6c6f6c6b6b
6d6f6e6b6d6e706f6b6d706e71726d6d6f6f6f716e6d6f6e6f6f70717070
716f716f6f70707171737071727171727373727271747374737272727676
73747571757676757376777879787775787875787a7677787a79777a7779
7b7b7b7b7a77797b7a7c7d7b7b7b7b7c7d7b7a7c7c7b7b7c7d7b7c7b807d
7e807d7e7d7c7c7a7c7c7a7a7b7c7c7d7c7d7a7b7c7b7a7a7a7c797a7c7a
7a7a7b7a7b7b7979797a7b7b77797b797a79787c7b787a7a7977797a7777
787877777777777779787575757776747474757473727273757373747470
6f74726e74716d7270717571706f9a67696667696865696967686b686a68
6a696b6b6868696d6d6d6e6b6a6c6c6e6d6a6d6c6c6b6c6c6b6f6f6c6b6d
6e6b6c6c6c6d6d6b6a6c6d6a6d716c6c6e6d6e6e6a6b70706c6d6e6c6d6d
6f6f6f6c6d6e6d6d6a6c706f6c6e6d6e6e6e6c6f6f6d6f6d6f6e6f6e6c6e
6e6f6f6e706d6f6f6d716f6e6e6e706f707171706e717372707271717472
73747373737472747675747474767475787474777879797676777877777a
7876797979777a79787a7a7a7a7a797a7a7a7c7d797b7a7c7b7b7c7d7d79
797b7b7c7a797e7f7c7d7d7e7e7c7d7a7b7c7c7b797b7a7a7d7c7b7c7d7c
7b7b7a7a7a7a7b7c7a7a7a7b7a7a7b767979787c7a787a7a797679797679
79797a7a7a78787b78777876767575777778767577747575767475757272
7472707276737274716e71716d70706d7072707473706e94666866676866
66686b676969696b696a6a6b6b6a696a6b6a6c6d6c6b6c6d6d6c6b6c6c6b
6a6d6c6b6d6e6c6b6c6d6d6c6c6d6d6e6b6c6e6c6b6f706b6c6f6e6e6e6c
6a6e6d6c706e6b6e6e6e706e6d6e6e6c6f6e6d6f6e6e706e6d6f6c6d6f6d
6e6f6f6e706f6f6f6d6d6e706e6d6f6f716e706f6d6f6f706e70706e7171
7072726f7371737473727372737374747476777576767676757776767875
757878777878787976777a78797979777979797978797979787b7b7b7b78
7a7a7b7b7c7c7c7e7c787b7b7a7c7a7c7d7c7c7c7d7c7c7c7d7c7b7d7c7c
7c7b7b7a7c7a7a7f7d7a7d7b7a7b7b7b7a7a7c79797c7a7a7a7a77787b78
7a7a7878797978767776787a787879787879767576777573767776757577
777576747473727573737372717174727170706e6e706e6d6f7173707270
6f6f9a676865676767686968686967676a6a69696b6a6c6a6b6a6a6c6b6b
6c6c6c6c6d6c6a6e6d6a6c6b6a6c6d6c6d6c6c6e6d6d6d6b6c6e6d6c6e6d
6e6e6c6b6d6e6c6c6d6e6d6d6f6e6d6f6f6d6e706e6e6f6f6e71706d6d6f
6d6e6f6e706d6e6f706e6d716f6f6f7072706e6e70706f6e6d6f6f6e6e6e
6e6f6f6f6e6f727372726f71707271717373747472747575737677767475
757677767776757774757874757977787977787a79777879797878797779
777979797a7c7a7c7b7c7a7b7b7b7b7b7f7c787a7b797c7d7b7d7d7c7d7d
7a7b7b7d7c7b7d7e7c7c7c7b7c7d7b7a7c7b7a7b7a797d7c7979797a7979
7c7b787a7b7a78797a7a7b787a7a77777a77777a79747878777878787577
767476777776757268647175747774747572717273706e72716f6f6e6d72
706d707070706e71716e6b90656468686665686866686967676868686969
66696b696c6b696a686b6c6a6b6c6b6b6a6b6c6c696b6f6c6b6d6c6b6d6f
6b6c6c696e6e696c6d6d6c6d6e6c6c6d6a6c6d6d6f6e6e6e6d706b6b6f6e
6b6d6a6c716e6c6c706c6b6d6f6e6c6d6e70706e6d70706d6f7270707071
71706f706d6f6e6e716e6e70716c6f73726f72716e72726f717170717274
7273747374757272747476777777757674737878757678777a7876797b79
797a7a79797a7978787779787879787b7b7a7d7c797c7c7a7b7e7b797a7a
7a7b7c7c7d7d7c7b7d7c7c7d7d7c7b7c7d7b7c7e7b7a807a7c7e7b7a7a7a
7a7b79797b7c7a797d7a787a797a7a7878797c7a79797b77787978777979
75767876757a7775767474767774727f6c3c3c4c4d555d626b6e74747475
716f6f6e6f6f6e6d6f6f6d6f6f70706f6e6e706b91656464686866676567
676967686a686868686769686a6b696a6b6a6a6c6b6c6c6a6c6c6a6b6d69
6c6c6d6e6d6c6e6c6c6c6e6d6d6c6d6d6e6d6d6e6d6d6d6d6d706d6b6f6e
6c6d6e6c6d6e6d6d6c6b6c6a6c6d6d6e6d6a6c6f6e706e6d6e716d6b6e6c
6d6e6d6f6f6f706e706e706f6e716f6d70716f6e71706f6e6f6f6f6f716e
717271707072717072727170747571717172757575747874737676747777
7578767578777777787b7a7979797a797b79787b7a787b7a7b7e7a797d7b
7a7c7a7b7b7a7a7c7b7b797d7b7c7b7d7c7c7c7c7c7b7b7a7a7c7b7a7e7d
7a7c7c7a7c7a7b7a7c797a79797b7c797a7c797979787b78797977797b7a
797979767777787877777777777676777475747376747277814d212c2b28
292d333e444f575b606a73716f70706d6c6e6e6c6e6d6e6f706c6d6f6b97
6265636668656766666966656868686768696868686c6b686a6d696a6b6a
6d6d6c6c6c696f6d6a6b696c6c6c6c6b6b6a6a6b6a6c6d6b6b6f6d6b6d6c
6c6c6b6c6e6c6c6c6b6c6d6c6d6e6d6c6d6b6c6b6b6b6b6e6e6c6b6d6f6f
6f6d6d6d6f6c6c6c6c6c6e6d6e6e6e6b6d6e6f6e6e6d6f706e6e6f6f6f6e
70726f6f6f6d6f6e716f6f706f6f7174706f727371727371727371727773
7275737176747473727777767578767777787a7a7678777a7a7879787a7b
777a7b797b7a797a7b7a7a7a7a7a797a7b797b7a7a7a7b7c7c7e7c7b7c7c
7a7a7c7b7a7a7c7b787c7c797a7c787a7a797a7b78787b78797a79787978
7977777a7a77757978787877787775767777777877777675747577767274
726f7f702c212d2a2a242827262524272d303d4c545458646a6c6d6c6f6c
6c6d6b6e6f6c6b6d91656664646866676766676666676768666768676668
6a6b686a6c69696a69696d6d6b6c6b6b6b6c6a6b6b6c696a6a6a676a6d6b
6b6c6a6c6d6b6b6c6c6c6b6b6c6c6c6d6a6a6c6c6c6c6e6c6d6d6c6c6c6b
6c6f6d6c6e6f6d6c6e706e6b6f6c6b6c6c6a6d6d6d6e6e6d6a6b6a6e6e6d
6f6e6e6e6e6f6d6e6d6f706d71706d6f70716f7071706e6f717272747472
707174737474727673737574757374767674767676777776787778797979
77797679797a7a777979797a7a7a7a7b7a7a79797a7b7c7b787b797a7c78
787c7b7a7d7d797b7c7b797c7b7a7c7c7b797b7b7a7c7e78787e787b7c79
787b7877797a76777a7877767777777675747775757a7676757673747777
767675737576757272717282522326292d28262726282a25272829262629
282c36434b51515a62676d7070706f6c6593686965666767646769676668
69696868696a6866686b69686c6d68696b6b696b6a696d6c6a6b6c6b6b6b
6c68686b6a676b6b6b6d6c6a6d6d676b716e6b6b6d6d6e6d6c6c6d6d6c6f
6e6e6e6f6d6c6d6e6d6b6e6c6c6e6c6e6f6e6d706f6e6c6d6d6e6f6d6d6d
706f6e6e6c6b6c6e706d6d6e6f6f6d70706c6e6e6e7072716f7270707270
6e71726f6f74727473717274747375757473747676767473757877767875
747a787678797979787878777878797b79797a7c7a797c79797d7b797b7b
7c7a7b7d7b797b7c797a7b7a7b797b7b7b7c7b7a7b7a7b7c7b7b7d7a7a7c
7c7d79797b78797b7a78797977797a77777978767a797775777775787875
7778757576747575757375757674737371716f796e34282b282a29272b27
272925262927272827252624272929272f39434e5557616a6c6d91646567
646567656668696765676968686b6a696867696a67696a6a6a6b6a6b6b69
6b6c6b6b6b6a6b6c6c6a6b6a6d6c6b6d6a6c6d6b6d6d6c6a6b6e6c6d6e6a
6d6f6b6a6d6b6d6d6e6d6c6e6e6c6d6d6c6c6f6e6d706f6c70746b6e706c
6c716c6b6c6f6e6d6d6e6d6f6e6c6f6e6e6e6d6e6b6f716d70726e6f706e
6f72726e71706e7272707074737173747572737472747671737674737775
747776757777777678777677797576797a78797977797a79787b7a777b7a
797a7c7b7d7b7b7a7b7c79787e7a797d7c797a7d7a7a7b7b7a7a7b797a7a
7a7c7c7b7b7d7b7a7d7e7b787b7b797a7b7977797978797976767a777779
797777767776787876757676767575747575757475747474707172707e55
242c2c2b2b27292a28282828282724252725252826242729282829262829
2c34404d4d7a626265646565666665666864656867666a68696867686c69
67696b696b69696b6b6b6b6a6c6b6c6c6b696c6d6a6b6c6b6c6e6c6b6b6b
6d6d6c6d6e6b6a6b6d6c6c6b6c6c6a6c6e6d6d6d6c6c6d6c6e6d6d6e6d6d
6e6f6e6c706d6c6d6a6d706d6b6b6c716e6c6c6b6c6e6c6f6f6f6f6e6e6d
6f6f6f706f71717271716e6f70716f6d717172736f70736f727372717373
747373717676757476757676767777767776787675787776777a78777a77
797b7a7a7a79797b787a7b7b7d7d7b7d7c7a7c7a787a7a7c7a7c7d797b7d
7a7a7a7a787c7d7c797d7c7a7d7e7b7b7d7c7b7b7c7a7b7a797b7a797a78
7a7779777779797876767877777875777876747677757576737474757575
747374706f6f767a3f1f2e2a2a2928292926292929282825252a27262827
2425282828272726232a2c2526273c646462636766666867666766666765
646766676767676a6967696b6a6969696b6a6a6b696b6a6b6b6b6a6b6b6c
6b69676b6d6a696d6e6d6b6c6d6e6d6a6b6c6b6b6b6c6a6d6c6c6a6b6c6c
6c6d6d6d6d6d6f6e6d6d6f6e6c6d6d6d6d6a6d6e6d6e6d6d6e6d6d6c6c6f
6e6d706f6d6e726e6c706f6b7070716f7172716f70716f70706d7171716e
707471727272747571737571707473747575757575767777767976757677
7878787877797a7b7978797a7d79787b7c7a7a7d7b7a7c7b7a7b7a7a7b7b
7a797c7c797c7a7a7a797979797a7b7e7b7a7b7d7b7b7b7c7b7e7d797a7c
7b7c7b7b7b7c7b79787b79757979757a7b77757777777978767675747777
76747575767575767374747172706d79682c28312c282b29272928272829
272627252628272627272526272724242626252b2724253c656563686762
6669676567676466666365676669696868686a67676c6b666a6a686a6a67
686b696a6a6b6b6b6b696a696a6b6c696a6d6e69696c6c6b6d6b6a6d6f6d
6b6c6d6b6e6d6a6c6c6a6b6d6e6b6d716e6c6e6e6e6d6c6a6e6f6d6c6f6c
6e706f6d6d6e6d6d6f6f6b6e6f6c6d706e6d706f6c6f6f6b6f706e707170
706f71706f70707170707272747372727572727673727371737574757774
7578787676767777777579797676787b79797b7a79797a78797b7c7a7b7b
797c7c7a7b797b7c7b7a797b7e7b7a7e7e797b7c78787b7c7b7c7a7a7c7b
7a787c7a7a7c7b777b7c7c79787b797b7b77797b76767b7675787a797677
787878747474767675747473747675757874727571726e727746242e2d2a
292a2a292928262427272626262528282528242425262424232628242426
2325346562606668616469676566656566656567686668696a68686b6867
686968696a68696b666768686968696a6c69676b69686b6c696b6b6a6c6b
6b6d6b6d6c6a6d6d6b6c6a6b6b6b6d6c6d6a696c6a6a6c6d6d6e6d6c6c6d
6e6b6b6e6d6d6d6d6c6c706f6d6f6e6e6f6c6e6e6c6d6c6e6d6e6f6f6d6e
6d6d6e716e6e72706c70706e71726f7074716e7272717276707073727173
747374767374767674757877777778777a7976787877787a7878797b7a7a
787a79797a7b7c7a797a7a7b787c7c7b7c7b7a7c7c7c7d7c7b7d7e7e7b79
7a797a7c7c7b7c7b7c7a7a797b7d7b7a7b7b797978787979787978787978
777a77757678777677757777767476787474757474737374747573727274
716d777132222a2a292a2c292a2929272726262625262729232228252425
252423232529262326272431646462646465676765676864666866656869
666967686a696867696a68686968686969686a6a696a6c696a6e6c696b6a
6a6b6a6c6f6b6a6e6c6a6f6d6b6c6e6e6b6a6c6d6c6d6d6a6c6c6c696e6c
6c6e6a6c6d6f6d6c6d6d6d6e6c6f6f6e6d6c6c6c6b70706e6d6f6e70716b
6d706f6c6f6f706f6f6e6f6f706f6f72716e70707071716f7272716f7370
707473707472707476737676747476757676767677797876767977797875
78797a777979787b7a797a7a7a7a7e7c7a7c7a797b7c797c7f7f7c7d7d7e
7d7e7c7b7d7d7c7d7d7a7d7a7b7b7b7a7b7c7c7a7c7a7a7a797b7b797879
7a797a787877787878777a77767779767779757878777879767375767675
75747274717272716f70757c5126282a2c292a2d2a292b292828282a2727
28282a262629292626282525262627262726292636646364646566676566
696666696866696767686a67696c69686c6b696b69686a6a69686a69676b
6c6a6b6b6c6c6c6b6a6c6e6a6a6e6d6d716d696d6c6a6b6c6b6c6b6b6e6f
706d6e6d6b6b6b6e6c6e706d6d6e6e6f716e6c706c696f6f6c6c6d6d6d6b
6d706e706e717673706e6f70726f6e73706d70726e6d706f7072726e7270
73746e727372716f72727171707375737574757675757775767a77767776
777a7876777878797976787a797779797b79797a7a7c7b7b7b7c7b7b7d7c
7b7c7b7c7f7f7c7d7f7c7c7d7b7d7d7a7b7d7c7b7d7d7c7b7c7d7c7c7a7a
7a7a7a7a7d7a787b7b787979787a7a777678797979777778777677777978
7678777777767477747677757472727172716c7c6f32242a2a2c2c282a2a
292b28272928292a28282a2b292a2a292928282526262727262828262937
6563626565636467676565636567676567666569696a6968686a6a6a6969
6a696b6b696b6c6a6c6b6c6b6c6a6d6c6b6a6d6f6b6a6d6c6c6e6e6a6d6d
6e6c6a6a6c6e6c6e6e6e6a6d6b6c6b6b6e6e6c6e6e6e6e6c6d73706f6e6b
6c6e6f6c6c6b6c6e6f6d6d70716e70737170706c6d706f6d6e70706e7270
6e6e6f6f73726f717074726f707172706f74727272717374757573767675
757773767a77777874757879767676797b797779797979797a7c7a7a7a7b
7c7b7b7b7d7b7a7d7b7b7c7b797d7d7d7d7e7b7c7c7c7b7c7d7b7a7d7c7c
7c7b7a7d7c7b7a7a7b797b7b7b7d7b777b7b787a7a76797b7978787a7979
777776797675787976777978767775747673727674727374707170727d4b
222f2c29302c2a2a2a2a2928282728272827272827282928272727252525
242628262928262433656460646762636865666763636767646567686768
6868686967676969686b6b676b69686b6d686a6b6c6c6b6b6b6c6b6b6d6b
6b6a6a6e6c6e6d696c6e6b696c6c6c6d6d6e6d6e6b6d6f6c6c726e6c6e6c
6c6d6d6c6e6d6c6b6b6d6b6b6d6d6c6f6d6d706c6e71716f6e6e6e6f6f6f
6e6f6e6c6e716e6e716f6f706f706f716f71746f6f71716b6f7372707573
737473717575747475757673747677777775767677797976787b79787977
77797979797c7a787e7d797a7d7b797b7b7a7a7c7c7a7d7f807f7f7b7c7e
7e7a7e7e7c7c7c7c7c7b7b797c7c7a7a7a7c7a7c7b7a7d7c79797a7b7978
7879797978787a7b76777779767776777978757678767576757576737270
7373706e6e6e776c36252f2a2a292b282a2a2a2a29262628292827272728
26282727282727242527292a26282827243c626460626564626666656666
656768656665676867676969696a68676769696a6867696a6a69696c6a6a
6b6c696b6d6a6b6c6a696a6a6a6c6c6c6a6b6c6b6c6e6b6d6c6c6d6d6d6d
6d6f6b6d706c6d6e6d6c6f6e6d6f6d6b6a6a6c6b696b6b6b6d6c6a6c6b6c
70706d6e6d6e6c6c6e6f6f6e6f716f6f6f6e6f71706e6f6e7072706d6f70
70727070727272737271756f737471727676757572727776767679777577
7b7978777877797877777979797b7a79797c7a797b7c7c7a7b7b7e7b7a7b
7b7d7c7d7e7d7e7c7c797b7c7b7d7a7a7b7b7b7a7b7b7a7b7c7b797a7a77
787c7a7a7a7b7b78787c7977797877787676777676767878777877757776
76767575747575737272726e70706b7856292d2d2a2a2d282929292a292a
282829282928292527252527262828262625262a29272928272339616261
6565646464646665626467656767676568696665696b67696a6767676a67
666969696b67696c69696969696a6a6a6b6a67686b6b6a6b6b6b6c6d6c6c
6c6e6b6d6e6b6c6e6e6c6d6e6c6b6b6e6c6c6e6d6d6d6e6d6f6c67688287
7b7d7a7a7b7b7a837f6667696c6d6c6e6d6b6f706d6e6e6d6f716c6d7170
706f6f7071726e6f716f7174717072747371727571747472747274747472
727876747477767676777876777879797878787977797a787b7c7c7b7a7a
7a7b79787b7b7b7b7b7a7a7a7d7c7b7c7c7c7a7b7b7b7b7a7c7d7a7a7b7c
7a7b7b7a7c7a7a7a7978797b7a7a787a7a777a7b78787a77767777757778
7777767775757675767575767675717173726f726f6d6f76713f282b302b
2b2f302a28292c29282a2b27252928272828242627232426242628242626
262926282435606162646765646264656561656663646765666869686566
6967696967666967676769696b6b6868696a68676a6a6a696a6c69696b69
6c6e6b6c6b6b6b6c6c6d6d6b6e6e6b6c6b6e6c6d6d6c6b6b6d6f6c6e6f6c
6d6f6d6e6c775e5179786b686b6766676f664e6c826c6a6d6a6d6e6c6e6e
6c6c6d6f6f6f6e6f6e6e706d6f72706e71716e73716f7071727171737173
7572737573737475717579757576757476767477777775797a78797a7877
7979797b7b797a7b797a7b79797e7b7a7d7d7b7c7b7c7b7b7b7a7b7c7a7b
7c7a7a7e7c7a787a79797b7a7a7a79787979797a7a797a797b7c78787b78
777978767777777776777a767677777674767674767675737173726e706e
6b6e7b5e29292e30302c2b312a29292c2c28282b27262928272b28262928
262726272727272726272928272536606263636465656463676663646565
66686466696a676769686767696767686567686967696b68676969686767
686a686769696b6c69686b6b6c6b6b6b6a6d6c6a6b6f6d6b6b6c6d6c6d6c
6c6c6c6b6d6d6a6d6e6b6c6e6b6c865c093c42161a1f1c1716180f105a91
6d6b6a676b6b696d6d6c6c6e6e6e6d6f706d6d6f6e6f716e6e6f716e706f
6f7171717371727173747173747373757472727475767674767576767676
77747678777679797678797a79797a797c7a7a7a7a7b7c7b7c7a7c7c7b7c
7a7c7a7a7b7b797a7b7b7d7b7a7d7a777b7a797a787a7a7979797879797a
777878797a77767878777877757577787675767574747575757473747573
7373727272706d6d6c6a72784222292c2c2c2c2b2b2a29292a2c28272728
252728272727282527272627262a29272928292a27252938616261636261
636263656364656465686662656768666866686966686b67676a65676969
6667686669696768676a6a666567676b6a676768696a6d6a676a6b6a6a6c
6a6c6d6d6c6c6f6d696a6e6b686a6a6c6f6c6c6d6f6b6d885a103e3d181f
1e191111120d044b946b696a686c6b6a6e6b6b6e6e6c6e6c6d6f706d6e70
6f6d6e6e6d6f7172706e72706f7272707272747472737373747274727476
7774747677757574777778767877777877767979797a797a7a7b7a787c7b
79797b7b78787a7c7b7c7a797b797b7b7b7875737c7d7b7b777879777a78
7979797b7a77787979787876787a7a777777777876737577737376747576
73717374737473747472736f6d726f6a6d6d6b7969292d312b2d2c2a2a29
2b2a2b2a2729292728252726242526252325242426242729272728272826
23263b616160616263616362616265646464666461636764666665656765
6469666669656466696a6867686867676966696c6668686669686768696a
696b6b696a6a696b6b6a6a6b6e6b6c6e6c6a6b6d6c696a696a6f6b696c6e
6c6b85581f4c38162324191214130d09449374656c696c6a6a6d6c6b6c6e
6c6b6c6e6d6f6e6c706f6d6d706f6b6f73706e6e6f6d71706f7172727471
737474747372757473757575767876767574767875757779787879787877
7977787b79797a7b7b7a79797a7b78787b7a787a7a787a797a7a796a6176
7f7879787777777978777a79797a7877787879787a77777a787575787774
7375757576747275767474757273737273737272726d6e6f6b6c6c6f764c
1f3031292e2e2a2a2a292a2a28282928282a272828262726262725252524
2627252525272427262324346360605f6261616261616463646265646466
646565656463646a65646867666966656667686968666968686a6668696a
6a6969686766686c6b6a6a696a6c6a6a6b6b6c6a6c6b6a6c6d6b6a6c6a6a
6d6c6a6a6b6b6a6c6b6b6e7c5433783c0b1e1a161113131207398e776769
6b6a696b6b6b6b6c6c6b6d6c6d6d6d6f6c6e6e6e6e6f6d6d716f6d6f716e
6f726f707170707272727474727174747374767675757775767773767977
75767777787775787c77787777797979797a7c797a797a797a7b7a787c79
797c79787a7a6b5e757c7976767978787a79777a787a7a78797577787879
7778777678777577747374747577757675757574747573717473716f7272
6e6c6f6c6b6c786b2d232c2a29272a29282827272826262828282a26272a
2a2828262628282723272b242526272625262622346062606162605e5f60
616462636265646465646566656563646967646464676665676868696967
646868666a6666696a6767696867676a6a6b6a69686a69696c6b6a6a6b6b
64616a6c6b6a69696b6b6a6b6c6c6c6b6b6b6c6c7956467d2804140e0e0e
11130e0735907a646c6a69686b6a6c6c6c6b6c6c6c6d6d6e706c6c6f6f70
6d6e6f6f706e6f726e7071727271717072727073736f7274727272747375
737372747574757877757977777a7675777b787879787a7779797a797879
7b7978797c7a7b7c7a7a79797a7c7f6152737e7976777a79787878777a79
787979797879767679777677787775777774777572757674757675747371
70727272727171706f706e6d6c6a6d7d5521272d2a292829292828242729
24252927272626242729252526252625272425282726262726262727242c
616062616261616160616260626564636363636465656464646465656666
666565656766666867686766656868676b6967686769696a6a69696b6b68
6a6b686a6d6a6b6e6c5b536c6b6a6a696b6a6b6a696b6c6c6c6c6c6c6b74
4f5b7e1d050f0b0b0c0f0f100536857b68686b6a696b6c6c6c6c6d6c6d6d
6f6e6f6d6c6e6f6e6e6f6e6f71716e72716f707171717270717272717273
71717473727273747475737475747373777374797776787a787979797978
79797a797a797978787b7e77767b7a797a7b797a7b787c835e436e817778
7879797978797879797879777a7a777778797976767a7877777777767576
73747575757473737171737270727273736e6d706b6c6c736f39222d2e2e
2c2b29292929282a2a272927262827272829282624242626252628262526
27242526262626243460606164615e64665f606261606365636364636467
6563646764656666676866666667666667686766656769696969696a6867
696968676a6a696969696b6a6a6c6a6b6e7058436d73696a6b6d6a6c6a68
6a6d6d6b6c6c6c6e71556575190a140e0e0d0e1011092d8879616a68686b
6a6a6d6c6b6c6e6e6c6e6f706d6d6e6f6f6d71706d7071707170726f706e
6f7272727172707373717372717172737474747575757574737374757877
757778797a7a7877777978797a7a7978797779797978797a797a78787b79
787a806541617f7b75797876797877797a7a787a78777a77767a76787977
7879797778777476757476757574737674737374727072727073706f6e6d
6b71795229282d2e2b2b2c2a2a2b28292c2b282a2724292a272929262928
2929272729282825262826262728262825395f5f6064625e62625f616060
616664626462656663636465656765666765666768686767696867686565
68686868696a676967666968656669696869696b6b6b6b686c7072533b6c
726a6c6c6b6c6a6b6b6a6b6d6b6b6c6c6a6e666c671f060e0c0c0c101213
06298b7e666b69696a6a6a6c6c6b6c6d706d6c6e6e706e6b6d6f6c6f716d
6e71707071737171716f6e72737070727070747571727572747574737777
7578777175757475757878797978797a78787979777a7a78787c79767979
77797a7a7a7879797a797b7f65475e7b8176787a75777977787a7978797a
7777797879767776787a7877777876767774767774737474727475727073
7270716f6d6f706d6e6b727537262e282e2a282b2a2a2b2a262b2b272729
26282a272828252827272928272827282623242926272a262823375f5f5e
616160615f5e61616062646264635f636560616362646664646864656867
6567666666676766686766676566676769666567666768666968676a6968
6a6a696a6f7150366c76686b6d6d6b696a6b6a6a6b6c6a676b737047666f
3b0d060e0b0e1118171018547e776a696b6a6a696c6a6c6c6d706e6b6d6e
6e706b6c6e6c6f706d6e6e70716d6d6f6e706e6f7273716e72726f737570
707673737674747876747877737675757376787777777879797878777879
7a7a77797b7a777a787a7878797779777779767e825f4555787c777b7778
797678797979787978777877777777777878787876777775757574777574
73737372767470727070746f6e6e6e6c6e6c6e785a252d32282b2c2c2c28
2b2b28282928282b29282a2c262629272627222628272525272724252826
24272627212f605e5f60625f61625f61625e606362636561606361626263
636264666565676765666766666766646667666666676566666668686766
6869686869696a6b69696b686a6f6c44346a786d6c6c6f6b6a69686a6b6a
6d6b666a7c7028605f1c12090b0f0f141e1e1e1923728465696c6a68696b
6b6c696d6e6c6a6d6e6c6f6d6b6d6d6d71716f6e7170716d70716e6e716e
6f72706f7372707172737573747673737877747675757474737576787675
7776797977797979787a7978797a78797a7a7a7978787879787677787c83
5e3c51717b75787779797675777978767878787878757676777878767776
7776767777767775737276727373716e727070726e6f6f6f6c6b69787337
212f2e292a2b2c2c2a2a2b2b272728272929282a2a24262a292826262726
2728242529252528272526252424355d5c5f6060605c60615f6060606161
636563656160636260626461646664646664646866646566656664666565
6766686766666867676868686a6a686769696969696971653f2f64796b6a
6c6d6a6b68686a6a6a6c6a69697266426d42000807090e10172222241d25
6d84686c6d6b6b6c6b6d6d6a6e6f6c6c6d6d6d6d6e6d6c6e6d6f716f6e6f
6e6f6f72716f72727070716f6e716f707271737472737574727673747574
737476747275797775767677777777787977777a78787a77797b79777879
7877797977767a7e7e623f4b6e7b77747879787977777a79767879777576
7677757778777777777778757677777577757072737271707070716f6f6f
6e6f716e6c6975602628302c2c292c2c2a2a29282a282a28282726292826
2628242629252627252625262926262726272628282626355d5e5e5f605f
5d5e60605e5e605e5f606262626261646161636662626664636463656665
656767666664656567656767656765666767696a6767696b68676a6a6969
6972633b305b796b666d6c686a6b686a6a6a6a696a6c6e675b733802212b
0f07131d20262a22286c8469696e6c6b6a6b6c696b6f6c6c706c6a6e6e6c
6d6f6e6e726f6b6f6d6e6e6f716f70716e7174727071716e717571737472
737474757373747773737575777575787676787878777779777777777979
777878787a79777a7e7878787979787a7c825e3f4f677b7873757a777779
7b7979787979767677787776787979767777767676747675767576757271
73727071736f6d6f6e6c6c6e706b6e6f4b24292f2c2d2a2c2b2b2b2a2a2a
272c2b282727272827292823252725262827272528292726242827242526
272538595f5e60615f62605f5f5e5e605e60616061636563616265626365
636461646463656565666768666565666664656767646667676766696a68
67696a6867696c6a686772683d2e56756d69676b6d686968696b69676868
6a6b67657c4401346c3000132324262a2a255d8869676c6c6a68696b6a6b
6e6f6b6f6d6d6e6e6c6d6e6f6f70706c6e706d716f6f70706e6f71757371
7274726f7371717572747473757374767676757676777775757878757878
7879787a797677787777777878797977787e767879777778797b7f5d444f
62747a757577777776777879777778787777787777757778787577767775
7475747675757575757272717072716e6e6e6c6d6c6f6b726833242c2c2d
2d2b2a2b2d2a292d2b29282a2b2a2925282b282626272726282926272828
2726262528262629252725335a5c5e5f605e60615e5e605f5d5f5e5f6060
606264606263616364636063656363646464666665656563666663656765
63676666686666676764696a6868686a6b6868716337314e6c6c66676a6d
696a696a6a6a696a6a6a6966747c32093b673201061e27252725215f816a
686a6d6a6869696b6c6d6d6e6d6d6c6f6f6d6e6f6f6e6e6d6d706f6e6e6f
706f707070727273717274726f7373727573737372727476757576747775
767674747779747676767776777876757774787877787877787876777876
777878777d7d5e424f5c7379777776767677777777777674767776767875
75797675777876747775737474737475727474727171706e6f706d6c706d
6b6e774f2c33302f2b2b2b272a2c29272b28282a28272b29252728262726
2526242728262627262628262527252729262827315a5c5b5d5f5f5d5d5d
5d5c5f605f5f5f5f5d5f605e5f6260626461606262626462616364616365
626462636362656563666863676764656666646668656969686a6968725e
322f416e7665676968686967696a68696b6b696c6882780e062b2d1f3c40
201e1924211a5a8566696b68676969686a6b6a6b6e6e6c6c6c6e6e6d6e6c
6c6f6d6d6e6e6e6e6d6f706e6e6e6f6f7172707272707272737375727374
747274757474747776747676767574777775747374767574767775747478
787777767774767876767575797c7c5d444d556b7c757678767875747777
7878767577757476757578777576777774747675737072767371706f7272
716c6c6d6e6b696e6b667973251a322a2f363235302a292a28282a282929
27292826282423292626262326292728262525252525242425262627212e
5d5d5d5b5d5f5d5d5d5f5d5d5f605f60615c5e5f5c5f615f60615f5e6161
626764606262626260636463626263646362646765656564656665646666
6767676868696972572e353a69776969696a686a66686b6967696a696a6a
896b07030a00116e885d250a1c1f195c87696b6e6a6a6a69686c6c6b6c6d
6c6c6e6c6d6f6f6c6b6e6c6d6f6b6b6e6f6d6e706d6e706e6f7070707170
717372707175727372747473737375767775767774757674767777767776
7477767575777575787a7676797675767877767675767a7757484a506877
76767a747677777776797877777976757875757877767674747675747675
7173747272706e706e6f6e6b6b6d696a6b696985660708150f172322282a
2d3136312f2e282828272927272a26232924252c25242825262724252624
2426232425252822325c5c5e5e5e5c5d5f5e5d5f605e5d5f5f5f5d5f5f5c
60605e605f5f616160606563616261636360616463636364636565636465
6365656667646468686869666768676c724a2c3a3c5d746967686a6b6a68
696c6a6c68696a67698b5d02050a0111554b4c41191d1d19558c68676d6b
6b6b6a6a6b6c6d6e6a6b6c6c6b6d6c6e6e6a6e6d6e706c6d6d6f6d6d6c6c
6f6d7070706f72726f727374717372727673747673747477747675757873
757675767777777977747879777675777878777678777777767979737877
757c77594c4d4d6176787677777776787975777976777a78767775727778
76767774737575737274737271726e71726e6e716f6c6d6d6c6b6b6b8d56
040a140f0c0b09090c162026292a2c30302d2b2a27252827252624232d29
2524242424262725232527232628242826365d595a605f5b5d5c5a5c5d5d
5c5c5e5d5b5a5d5e5e5d5e5e5f60606063615e6363606063646262646364
6363616366646465636465636466666467666668686866656b6e4e2e3836
5a786966686a6968686969696b686867676c834e04040b040f33130a2c24
251f194e886b636c68676a696a6b6b6c6b6c6b6a6c6b6a6c6f6e6c6d6d6d
6e706d6d716c6b6f6d6b706f6e706f707170727073747171737574747474
757573727575747675767776777678767776757576777775777877777977
767878757878747677757c7b584d524d5c73787777777977797973777a76
777a7877777573777775777875757575737173747371716f7071716e6f70
6e6c6d6b6a696a87520211140e0f0d0b0b09080c0c0a0e111e232423282d
2b2f2c2525252428252526262524232727252327272727242526365b5b5c
5d5e5d5c5c5b5d5b5b5c5e5d5f5c5b5e5f5e5c5d5e5f605f5f625f5d6463
5f615f616060626362626261656663646564646666646366646667656667
6866666c66452d3c2f4f7d66646b69676968676869666a6965686b824401
060805081b13091b1f222315438a6f656b68676c68696d6e6c6c6d6b6b6d
6c696d6e6d6c6d6d6d6e6d6c6d6d6c6c6e6e6b6e6f6f70716f7070717273
73717071737374737275756f737574747674737677767677777776767577
767477797876777a77787876767776767675767e75574c564c5772777b75
727679777676787876777a76767877777675757777757675717374737471
71737070706f6f6e6c6f6d6a6b6d676d854b030d110c0f0e0c0c0a090c10
0907060a0b0c0c131d1e2825232d2c2c2d27272924222624242727232627
252725282336575a5d5a5c5c595b5c5d5e5b5d5d5c5f605e60605d5d5f5d
5d615e5d615f606361616360636461616263626262656663636664636567
6665636465656565666966686e673c313b2d4d776c656a676767686a6967
676b6868677282380006080607090706101d1f1e19408974656c696c6b6a
676b6b6d6c6d6d6d6d6c6a6c6e6e6c6e6f6d6d6d6c6c6c6c6e6d6d6e6d6e
6d7072706f72707072737470737273747171747371727573757674747775
747875757777767577787778777676787a77777877797976777978787c7a
69584d4e5c745e5383847679757776767776787976767673767673757874
73767472757374757171727172706e6f6d6b6d6e6b6c6b676d8a44011210
0c0e0f0c0b0c0a0d11090507090b0c0c0c09090c0e0f1b222625242c302a
2929272725252425242428282826365a5a5a5b5c5c5a595a5d5c5a5b5c5b
5c5d5c5f5e5b5f605c5d605f5e60605f6161606062636364636363646465
6465626467646465646466666465656567686867667067392f3830426f6f
6668666965676b6b676a6b68686a74802500090a0a0a1515030a1c1e1d13
438c71696b6a6b6b6b6a68696a6c6c6b6c6e6e6c6d6d6c6c6d6e6c6c6e6d
6b6d6d6c706e6e716d6d6f6f717172707171707273727372747274747373
7577747374747475757676777676757575767777787777767a7977777778
797977777a7b797b776c55394e627a47137899797b787778797777797776
77767775777674747474767372757574747373737272706e6f6e6c6d6c6c
6b6e676f883a0113140d11110d0a0c0b1116080408090c0a0b0d0b0a0c0a
0a0b0a0c0b0c121e1f2023262a2c2b2929242624232623315a5c5b5d5d5b
5d5b5a5b5a5b5a5c5c5b5b5b5d5b5b5f5e5c5c605f5d5e605e60615f5f61
626160616463646563636462636463636862626566636464656768686767
726334263632357274626865696b66686b69696b6a666782731702090a08
0a1b1d040c1a1e1e1934887868706b6c6c6a696c6a6a6d6c696a6c6c6a6c
6c6a6c6e6f6b6d6f6c6d6e6c6b6e6d6c6f6d6e716f6e7171707174737071
737573727171747472757674757674737476757677747575747374767776
78767678787875777776787776787f87857e7d63354f969d3d045a9d777a
7978787a7776787676787874757575737573717575716f75747473717273
726e6d6e6f6d6e6e6c6b6d6a6d88350016120f11120c0d0b0a1615080608
090b0b0a0c0c0c0b0b0b0c0b0c0a07050608040f232521222126272a2a27
27222f585a5a5b5d5a5a5b5a5b595a5a5b5c5c5b5a5c5d5c5d5e5d5d5f5f
5f5e5f5f5f5f605f6060625e5f5f6061625f626464616362626363636365
6664646668646365627a51275346174467646e68676769686767686a696b
6768887510010a0506070c09070e181e2016387f74686e6c6a6d6b6a6c6c
6a6d6d6c6b6b696b6a6b6b6d6d6f6b6c706c6d726e6b6e6e6d6d6f6f706f
6e6e70737070737370727573737772727574727573747577757377767778
777575787674787876797976777978757a7775787878767b86858b9b9277
69c4d455144a9b7d777b7679797a77777a79757876767575757675727474
71707374727374727171716e6c6e6d6b6d6d6b6b6b737f2c0315150f130f
0e0d0b0c17130706080a0c0d0b0b0b0b0c0a0a0d0c0b0b0707070801122e
28221c1a1d2221231f222c445759585a5a5b585a5a5a5a5a5a5c5b5a5a59
5d5d5a5e5d5d5e5f5d5e5f5f60606060605f606160606061616161625f61
6664646563636364646564655e5e85aaa89f70222888750f59663c6e6e66
6a676669696669696a686a8b691204080908080606040b171f250f328871
656c68696b6b676b6b6a6a6c6c6c6c6c6b6c6c6e6c6b6e6b6c6e6e6c6e6f
6e6f6d6d6e6f6c6e6e6f6f6e72736f717575727475737574747673737674
737376787471757777777776787875777774787977787878787978777779
7778797976777675756b79a479203c8f8177797876777878787a78767776
75777776757775747371747572747373726e7070706d6d6d6c6b6e6b6b6c
7381250219151414110f0e0d0d16140706080e0d0d0c0b0d0c0a0c0b0c0c
0b090706080605152d2a292e2d2a2c22140c101b345a5959595959595c5a
5959575c5d5958595a5c5c5b5e5d5d5e5e5e5d5e5f5e5e6062605f60625e
5f63626164626161616564646562636465666764675f4f9bf4fff0851f37
956b255d5e38676f66696865696a68696a69686f885c0b050a0709060903
001224161f132d8477666d696b6b68696b6a6b6d6b6b6e6c6b6f6e6b6e6d
6b6d6c6e6e6f6d6d6e6f6f6d6f706f6e716e6e73706f7271717576757475
74757476777675737478756f747875737878767777767775787977777678
7978797776777a777778747d8d8d849fb98675b1aa7a21148694777a7879
7a79777b78797a7775757775747875757674737474737274737171706f6e
6e6d6d6d6c6b6c6a6878761b031b171416100e0e0e0d18150707090d0d0c
0c0c0d0b0b0d0c0c0c0b0b0605070606172c29272a2929322b1209090b0f
5a5a595b5a59595a5a5b5957585c58585b5b5c5d5c5b5d5f5d5b5d5f5e5e
5f5e5e615e5d61625e60635f60645f606563616464626163656365686264
655385dcdfc07929499655246b4f2f6a71656768686a67676b6968666e8b
4a050b0908060500264f484d331207287f726b6a696b6a696a6b6b6d6b69
6c6f6d6a6f6c6c6e6d6a6e6e6d6e6d6c6d6e6e6d6e716f6e716f6e717272
707373727475747475737475747577737574777775737676757776767776
7775767879787778787a79777674747977777571829c9f9bb7dece9eb2bd
834d285d8d777b7a79797a79797979797976767875757674757675757574
737474737371706e706d6f6c6c6c686a6a677a7211071f1b1c15100e0e0d
11191207080a0d0e0d0d0d0b0b0e0c0b0c0c0b0a07080806031b2d272929
262a3228090b0f0c09575b5857595956575a5859575957565758585f5b5a
5c5e5e5d5c5b5e605c5c5e5e5e5e5f60615e60615e60605f606161616363
6362616463626364655e5d87b1be935f2553a6431e6f4327737565676868
6a6967686b686470823d020b0b05000b2c6e8d6462712c01297d78646b68
6a6a6b686b6d6c6b696c6c6b6b6a686c6c6c6b6b6b6e6f6b6a6b6e6c6d6f
6c6d71706f6e6f7073727170727372717272747373727673737676737577
757375777674767575777473777875767977797c76747676757678757691
8d8689858aae93606f7273554e7a7b77787876787a777878777476767676
777675777672757471727373727372706f706d6e6f6c6c696868687c670c
0b1c1918150f0e0e0e0f191205050b0d100f0c0e0c0c0c0b0b0c0d0b0807
090804061c28222724252a2b1b0921373033555a58555859535957565758
5857575755595957585d5c5a5d5d5a5c5e5d5d5e5c5b5e5e61615e5e6260
605f61615f6162606164626064625f6365645b5a95cdd099371a5f983a2b
69312a776d65676967686767676869666f76390f0c0808224461624b3a30
4d3d0921857865686967686769696a6a69686b6b6869696a6a6a6b6c6b6a
6c6c6b6c6b6a6b6c6f6e6b6e716f706d6c72717271717372727270737372
737671757672757675747375757875737576767374757575777776767877
75777775747471789a9779726e7e8d7a615d656d624f717d787775777875
75787775757574757676767776747473727171737271756f6f716e6b6f6d
6d6b696767697d62080d1f1012110f0d0e0e12170e05070a0d10100c0e0e
0b0c0c0b0b0d0c07060807030b1e2120221f202c220d1550696275595656
5658575557565557565858575858575857585b59585a5a595a5b5c5d5d5b
5d5b5e60615e5f605e5f5e5f615e5f615f60615e6062635f6263604f6fd8
f3fcb427166a8f273e76231a73756269676768666569656568756e301915
101a3555563d3830333826111f7a82616a68696767686769696969696a69
696a6a696a69686b6b6c6c6a6b6b696a6e6a6e6d6a6d6f6e6d6e6f6f7172
6f7271727071737371727371767470737572737473747675717675747776
7474757575767574757475777673737177899e73515e6d8d7d5b5759686c
5061857676767674767576777677757376747475757374757272706f7370
7074716f706e6d6d6b6d6b6a6b6a6a8258050d1916100f0d0b0b0d14160e
0406090c0e0d0d0c0b0b0c0c0c0b0c0b07070606060d1d2021211e20281c
0c3f75796d905556565757585856545558545959575a59565b5c5a5a5a59
5a5a585a5c5b5d5e5e5b5e5f5e5d60635d5c5e5d5e605f5e5f605f616060
61626160635e437aeffaecbe311a7d8920467f2903538969646b68696865
666866667a6e281615161a1d35463a343430251a0d16707d65686b686969
67686c69696a6968696b6b696c6b6a6a6b696d6c6b6c6c6a6a6e6b6c6e6b
6e6e6e6d6f6e6e6e6d72726e72727271737271737273716f737573727474
74737373757374757575777576777676767575767775757575777f928068
737c817e65516a6e5f4f58817b7676757876757777777774737675747574
73737272737072707072716f6e6f6d6b6d6b6b6c6a6a6b6a7c54040b1b13
11100e0b0c0e15170c05060a0e0e0d0c0d0b0c0c0b0a0c0b090807060907
0f1d1d1e1f1e211e10388186767693525558575356585651555753565958
565959595b58575b5a575b5b595c5c5b5e5c5a5e5d5c5c60605d5d5e5d5d
5f5d6061605f6160606263615f66634d64b5c4b888390e5e650e4e762200
438d6d646b68676965666764657e61271d1008303c40382a2e3026191a10
1a6c765f6764666a66666b676a6a67686a6a6a6a6c6b696b6a6b6a6d6a69
6e6c696c6e6b6d6f6c6f706f6b6f706b6f71707171727171727271727373
717170747771727373717575707474717174747474747475767674767776
7575757575787c97a19ca59d7d614d8e98604c4c797c7374787774737775
767874747773737474727573717372716f70716f706e6d6c6d6c69696d6b
68696d824601101a120f110f0c0c0e1d1a0b06070d110d0d0f0d0b0b0d0c
0a0b0c0806060607080e1c1f1a1d1e1f151b7998797e7a99555354565454
54545555575252575553575757565655575959575b5b595a5d5e5a5b5d5a
5b5e5b5a5f60595b5d5c5e5f5f5f6060616260616161646361677283867f
2c0736320f424c0d023b826d5d676567666566666468815a16181a11343c
271914183433101511156a7c626365646964676866686a67696a69686b6b
696a6a6a6b6b6b6a696b6c6a6a6c6c6d6e6a6c706d6d6d6e6d70716f7170
7174706e727371727373727172736f727271727472737371727673717576
72747573767776757574767670788b7e8da3a1ada990775fa0ad63584d6d
82757677787673757576787575767475757272756f70747072716f71706f
6e6d6b696a6a69676868656c813b0014150f110f0c0c0c0a181b0b06060c
0e0c0d0d0d0c0b0c0d0d0d0b080506050506101e1d1d1d20181051987c79
7b759b525555505556525652555952555453545655565656585657595859
595957595d5b595c5c5c5c5d5a5b605a5a5d5d5c5a5d5d5c5e5f5f5e6060
5f635d5775a7b49455182351350e41480b0138726f616465666665656761
6b884a061017130b0704062c3e404a2b0808156782606965696864666866
676867686a6968696a686a6a6b6a69696968696c6a6b6d6b6d6e6a6b706e
6e706d6c726f6d716f7173716f6f72716f7273737372736f727471727572
727472737574717475707576727476777573757472707e9288878f8c8f9e
aca68c8bb9784c5763847974767776757776787875747673747673717571
6d72716f726d6f6e6f716e6b6a68696a676668666d7f310011150f10100e
0c0b0c151a0903070d0f0d0d0c0c0c0c0d0c0b0d0b060407050706141f1a
1a1e1f121688aa817a7a7693525453515456535550515652525553535555
555656565856575a56575b58585c5b5a595c5d5a5e5d5b5d5d5c5d5e5c58
5c5e5b5e605f5f5f5e5d635153baeffad657023f97540b6a741a0024606d
626967676967656a656886440b15100a0a09061a546646434b1d01146383
676969696a6565686a64666969676967696a6869696b68666a6966686a69
6b6d6b6a6d6d6c6e6e6e706e6f6e7070707270716f707070717270727472
737471727573747474727375737572747373727574737575757674757573
767a7b818a918e9db8d5b66a7be5a537435e848078777777777776757875
7576757575737173716e73726d6f6f6e6e6e6e6b6d6f6a696b6a6969696e
7e2e0013150e0f100f090d0f181609040610130f0d0e0e0e0f0f0c0c0d0c
080708050709131e191b1d1a0a2fa3b795918d86a7505451535553525354
5454535252535453545655555758565759575658575759595b5b5b5b5b5b
5c5d5d5c5c5f5e5c5b5d5f5b5e625d5f61615e62525db8dde6d65e164b90
44127d742204185d706167666766666768626e8043191a130e0d15274241
32292f3b230510607c676b676b6a65666868686766676968676a69676a6a
68696a69686a6a6a6b6b6b6c6c6c6e6f6e6c6f716e6d6e6f6e7071707172
70707371717273737473726f717373747373717472737871727772737674
7474767473757674747675788b8e898da6adbebf8984b4974e2e488a8174
747679767679757476757575757372757270717171716f6e6f70706d6c6f
6d6b6d6b6b696866767c1f021213110f100f0a0d11181406050a10100f0d
0e0d0c0e100d0c0d0c07080805070a151b19181e150766bfa09ea09da1b7
4f52525256535354535554525352535556545656565756555958575a5a55
565857575c595a5d595a5e5c5b5c5d5b5d5e5c5e5e5e5d5d5f5f5f5e6059
5b81b2c59145195f8721218159230b086177636366686863666563707836
191f130c0e162c3936322b2c31180b0f5c81626768686864656866676764
676869676a67696a6969696b696b6a686c6b696c6c6b6d706d6e6e6c6e6f
6e6d71706e6f717070737270717070717471727470717473717474707375
7476737375747375747478747574747476747475757c757b888177759dd3
976178644644797f707576747476767675737574707374727274726f7170
6e73706b706f6d6e6f6b6c6f6c69686967767614031612100d0f0e0d0c11
1b1105050b100f0b0e0e0d0c0c0e0d0c0d0907070705050b121818161c0a
209db7969c9e9ca1c751524e535251535451525351515251525654535655
5656545856565a58555a5b56555c5b5a5d585a5e5c5a5c5b5b5e5d5e5e5d
5d5d5d605e5d5f5c5172bccbc88f2b1c6e7c1f25745b4141394f605f6262
676663636563736f28131d160c0d12213e34333528181c0c0e617b636765
65676564676465656765696b686868686b69696a69696c69686b69696c6a
6b6c6e6b6d6c6c6d6e6c6c70716f6f70717272716f73746e727470717371
717473707274727475747474737373747573777774737674747474737274
7b7584999697948a9e837b926c6658688075737675747575767472757571
7274727274737273726c71726b6e6f6d6d6c6b6d6c6a676769687c6b0e07
17110e110f0f0c0d131a1005060f100f0f0d0e100e0c0d0e0c0e0b060807
05090b1415161815054cbcab929b9b9ca0be52554e4f54504e50504f5251
525151524f535354535656545458545457545958565858595a5b57595d5b
5c5b595d5e585d5f5d5c5d5d605f5f5f5c468ef2f2e67f1a228778201a5b
63566869606666666a6863646461657a661b16241912121d252f27262c25
111d130e597b626664646462646665656567696967676b686669696a6968
686a6b6969696a69696c6b6a6d6c6e6c6b6c6e6d6e706e6d6e6f70717072
7073717071717273706f7272737374757373737375757573737576757676
74747674747375736c768b90939a9d9aa0a78e859468615d628177747776
7575737474737372716f737371717373736f70717071706f6d6d6b6d6b6a
69696864697f610909170f100e110f090e14161005060e0e0e100d0d110e
0e0e0d0d0d0906070705070d141616170e0a77c69e9ca09e9f9eca4f534f
4f52514c514e4d515151535552504f515653535556565854545855575759
595658595757595a5a5d5a595c5e58595e5c5d5b5b5d5d5e60554d9cf1f8
f792122f7e79312141514350443a687c65575a6f67646466805e101f261b
19161d120d10090a15141a160c4c7c6565666663636567676667666a6968
6b6d6b67696868696868686a6b69686a68696c6d6b6b6c6c6b6b6b6d6e6d
6c6d6d6d6c6f6e6f716f70726e71706f71706f726f717471737471727573
73777672747573767675747573747575736f6a798f8f9fa09aa5c9dc9c80
75606c62787972767574747574717373737272737275717172716f70726f
70726f6d6e6d6b6b6b69686a6769845d050d18121210100e0b0d141c0e04
050c0f0d0f0e0e0f0e0e0f0d0d0d0906070606080f141616140423a3b79a
a1a3a3a1a0c4514e4e4e4d4c4f4f504f4f4d4f5354525450505552535554
5553565652545555565857565957565b5958595a5a5b5c59595a5a5b585c
5d5c5d5d5648b0fceefa8914277d5d1c335d534c65721f235143242a6e7a
5f606a7f490b322716140e090b090d1a1d28341207084d81656666646664
6769686a6c6b6e6d6b7070706d6c6b6b6c6a6c6d6c6c6d6e6d6d6c6c6d6b
6b6d6b6c6d6c6e6e6c6c6d6d6d6e6c6b6e6e6e6f6d6f6e6f716f70706f70
7071707274707072717373727174707074737374737275736f75808e816b
85959b9a97aab07a7a7f616f5e6f7b737776737473747575737272747170
73737071717073726e6d716d6b6e6c6b6c6a69696866687f5904101d1112
11110e0e0f141e0e05070d0f0c0f0f0d0e0e0f0e0e110e06060606060810
13151610024bc1b19ba1a2a4a49ecc4d4f4c4e514b4c4f4c4f50504e5050
504f4f52524e54504f525151545351535755545555575658585a5a565759
5a59575c5a575a5b5a5c5d5c5e504eacfcfef26f0a2057611f2c59584c5b
552d272b32291948755e5f6a7d360b2a1910060a100d061f656975862600
074a836b6769626864656c69696d70716d6d6e6e6e6c69686a6c6b6b6c6a
6d737577746d6b6b6b6d6f6f70716d6f7371717372717373717070706f6f
6e6d6d6f6f706e6f716f6e707472716f7270707171727472727472737372
737572707885a1906282a3a2a09d9d90778182627260657c757675747474
72767374737173746f707271716f6f7074716e6f6c6c6c696a6a696a6b66
6564804c001018120f0f110f0c1015160d050810100c0f0e0f110c0e100f
0f0d070707060408111514160a0b7ac4a39da1a1a5a29fc74e4c494e514d
4c504e4e50504f504f4f515152544f50524e4d5352525352535554555551
555857575657575856595b565a5b58585c5a5a5c5b5e544f9bd2d9d76d0f
0b2c3f3d4249414b6142162f3e3f40234f75615e717c260d27131c361608
0e031c83856d92791b003e715f6061615f5e5b6060605d62656866656463
6163605f615f5d5f5b5e666b706c646460616465696e706d6f7372747676
77797b7b797371717372737372727272727171707171706f71706e717172
72727272757072777473727374787e8e77648aa1a8a7a390a091787e696e
61627e7575767474767373727372717473717272757071706c73716d6f70
6f6c6c6a6b6a6a6a69666a804401111b13100e13110c1015130b06080d0f
0e0f0f0e120e0f13100d0b06060706050811111315021ea8bf9c9fa2a1a2
a6a0cb4d4c4d504c4c4d4e4f4e504f4d4f4f4e4f5151514f5054534f4f51
525251535655565753595858585655585b57595c59595a58585a5a5a5b5a
5a5d5c5d799298610c13312b1c465a4f556b61280f1e2520023887675d70
7b1f0e360e217d4f000408073c462359934a19344b4a474e50535254575a
5a5c5d5e63656162605f62605f60605e5d5d5c5f63646462615e5c5c5f5e
626665646767676a6b6b6e7376746f6c6c6f717072747473797a76787875
757a787776747573727071717172707373747372727577788d8278959192
999691a7a276756a686a5f74787374757474727275717373727073737171
6f71706c70706e706c6c6f6b6b6b6a676768676b833f01121a1210121310
0e1019150806070d0e0f12100e111210130f0d0a06060705050a0e101210
004ac1b19da0a2a4a3a2a5c74c4d4d4b4d4d4a4b4d4e4e4e4c4e4d4d4b4c
504e4d4e5253504f4f514f50515252535554575756565756565759575859
5b5a57575b5b5b59595b56528db5a87238061b4e3c1c333d3d484b201c31
2b343b082d7b635d796d102f50061b895f060106062126135078514a5250
4f4f4e4e535352555a5a5b5b5f6262626463606160636460615f5e5d5f5f
60615f5c5f5c5d60625e6161616465636668686a6f6e716a68696b696767
68696e717475747574777c7d7d7b7c7e7978787774757271737273717272
7374727d878d978c8a95938e9a886e8b7c5f6259717a7473737474727476
71747372727373717270706f6e7070706f6c6b6e6a6a6a67646666627181
32001016100f10160c0a0e1c180504070f0f1113131214121214100c0b06
060705040a101010080987c89aa1a2a0a5a2a0a1d04a4e4c4c4d4b4b4b4b
4a4b494a4c4d4e4e4f4f4d4d4f515050504d50525152524f545554565554
5254565653575655565a5b585a5d5a5a59585b5452a1f0d67e29031a342f
274e5951698138071f201716072d78645e7e660a223d0e37896e10000905
28371d607f656a6c6d6e6f6f706e6a6b6c6e6b645d657071707575737774
75787574726f6d6968676362605f5d5e616461636263676565676a6d6e72
72726d6a6b6e6c6969696a6c6e6e6b70716f71747173747779797b7d7d7a
7a7a787675757271726f74797f7f838f8f8f9299917c7969839262433f72
856f7272737370757474737273727171707370706e6e71716d6d6e6d6e6b
6a6968686865636e862a001911141010140f0c0f1a130805061010111413
14141312120e0c0b06050606040b120f0f022ab0bb9ba3a3a4a3a2a1a0c8
484d4d4c4846484a4b4b4942494c49484c4c4e4e4c4e504e50514e4d5352
535253575453565656535354545355595653575c585a5b5859585b595960
7ba6b0802c051f372b2745564c55653621332c302c0216736a618a600401
0304337b7224000a07223b225b7f666b7370727879797b7f808284888175
787d7f8287888c8c8c90908e918d8a86837f7b7c79757473706e6e6d6b6b
6d6b686a69696d727475736f6d716f6b6a69696d716d6d6c6e7170716e6d
717270717373737677747b79767879787a776f7d8983807d8a8c8c8c908e
7ba6ad64766b56435c817472737575717375767371737472707070717070
6f71706f6e6e6c6e6b6b6a6769696865747c1f021817121211120f0e121c
140606080e0f101315151413130f0b0b0804060705050a12110c0058c4a8
9ca1a3a3a6a2a4a3c9474948494845474a4c4947474a4c474549494b4f4d
4d4e4f4e524f50504f515252555451535656555354565557585755565858
5a5a575a5b58595c5770beb46a22042231272b574f4e5c692320464c4a53
1e0a66736a91580709040d3a3b60380009091d41235589656e7572757979
7b7f7e818687898f8f8c7f7c7a7576787a7a7d7c7c80807f7f7c7a7e8483
858985868584827e7d7d7f807e7f81838382817871706e6c6a6a68696e6f
6b6d6d6d717271707171747672737471747173736f7274747b7e7c798190
89838b8c8d9290909288a2a05d6d697175536e767272727372747375746f
72757171746f71746f6f6d707070706e6d6b696a6a69686968727b1b0217
11141010130e0b1623120405090f11101316141412110e0c0a0805070706
070a0f11060c86ce9c9ea4a5a4a3a8a4a0ca4848484949494b4a4c4b4847
4a4b47494b474b4d4c4c4e4d4d5050504f4e514e52545152545452535552
555754565757555755585857575956565d5e71b5b869180a3742192c6b66
5c696c3a1c272a3426070d5e766f8a43122f2730493c4c2c000c061c3826
5586797b7d757778797c7f7f82848585888d8e8a89847d797977777b7c7c
80807c7b78797a7a797979797a7b7e7d7d7d7f858a8e93979b97979a8d83
82807f7a737275787674747474797a777678797876767774767674757571
747574767878777a7c77767d858e989a988f8e977d6777696e7f5968776f
717271707273706f7171717271717174736f71716e6f716d6d6d6a686a69
696966667c6a10071513111211120e0c1a28110505091313131717141511
0c0d0b090606060506090b0e0d0031b5bb99a3a4a4a2a6a5a0a6cf464947
494948494a4c4a4c48484a464847494a4b4b4c4c4d504f4e4f50514f5053
505254545452545653525554545653545655595757565759526394846b8b
630d0f453e222d3e3a434e391330403f4e430b0757747b81321a45504842
434b1f020f13202b2640838f7f87817b7b7c7d7f8282838687888a8f8e89
878481817b7171797c83837e7d7d7d7d7f817b7b7e7d7d7e7f7b7c7d8083
8686888b8e8e93908b8b8c8d898482838384848485888a8a8a878b8c8f8a
89877d7b7a7675787676767677787a78777279757781898e918f83789cc1
8a707660786461787170717371707472707171726f71706c6f7271717471
6f6f6c6a6c6b6b67686b676566816708081813121115120f0f1c210f0607
0913141418161513100c0c0b090806060607090d0e050160c1a99e9da2a5
a3a1a6a29eca464846484946484947484a494c4c47484749484a4c4b4d4b
4c4f4f4f4d4d4f5152535450535752545752525852515655535757575855
56575a52619191768d50040e282f273b524e50795a0914261b181b0d043e
747e7b2d1f42403e4041342e3b4a2c0e232a3a6e828285887f7d81838383
818385878a8a8b929487848785817c7578797e838181807e80828383807f
81838282838281848887878a8a9092908d88857f7c7b7c7b7d7d7d7d8282
8388898a8c9091979a9899938d8a8c8c847e7e7775797a79797e79767b79
8086949b98988899c78c6c99616f73577671707172717372707574737372
70706f7070716f706f716f6b6d6f6b6a6a696968696582670a0c19151113
14120e141b140b06080d1112151718140f0e0c0c0a070607060506090d0e
000c8ac89e9fa3a3a5a3a7a3a4a5c84847474749474646474746464d4746
4a4846494b484c4e4a4b4d4d4c4c4c4d50504e5250515351525352525553
525452525a57535758565856575d687f93854008133d34263045433c4c3a
2232342c381b0200317e8d6a212f4348413d4a3c28456b512e2f2537586e
7d8283868286898785858487888888898f959189868784817e7d7778787b
7d7d7e7f8184847f8184878784868686888c8c898b8d8e91908c8a88847e
7e7a7a7e7c7c7c7f7f7f8382858a8b8e918a898f8c8a8f979b98918c8e8d
86827e7c817f7d75727a7b89a6b5b2b4adb5a3a3d1845072597176707271
7274737176757372727373706e727072716e6f6f6d6d6f6f696b6a696a68
678161070d1e121212150f0e161a130906070d1115161819120f0d0c0b0a
070506070506090e0d0030b3bb9aa2a3a6a4a6a7a7a5a2cf494744464444
474843464a45464546464745494a494a4b4d4c4b4c4d4c4d504f4d4e514e
52524e51504f51525153554f535456575355555656575f7697a477280415
2e2f2541402c41522b1b434c4557350d0029809061172d373d403843372e
383539615e1b275962758687868a8a8b8a8a8684848989888a8b8e928a83
85847d7f807b7776726f797e7e8183807e83838387858584888b8b8d898a
8c8c8c8887878686827e7e7e7d7e80807e8081808083868990908a8d938c
8a8f8c88908d8d9699928e88908f76797e79867f7e94a29aa0b1ccf1ccd1
9d667b5a6b786f707271727170737174717173727070716f71726c6d716e
6c706d6a6e6c6969686688500315191412131311101716130908080b1318
151514100d0b0a09080805060705040a1008016dc9a49f9fa1a4a5a3a7a5
a3a8d04748434444434646444447424445444544474744454c4a494c494a
4e504a4c4e4c4e514e4e4f4f52514f535450505451525454585654555455
556079929a682110354b1f1c52573e567943090b1119150d0c001e738f4e
16393a31343935242f5c66423258372e4e5c687f7f8284868b8f8d888684
878a8886898b8e8d8585857f7f7f7c7979726b6f767f80827f7f83858586
838385888b8b8c8a8b8d8f8e8a89898885817c7c7b7b7e7f7f807f818180
84898c90918e8e918d8c918e8d8e8e8d8e8a8b8a8497a75d507d808d918e
8f969898a1c9e3b4ae895b7c66687671706f72726e717170737471727370
6e7071706f6e6e6f6d6d6d6b6b6b6a6967656b8641001418121513131214
18171006060a0d121615120e0b0b0b0807080706050505080a0d011798c7
9fa0a7a1a6a6a6a6a5a7a4d3434444474645454545484442454442444546
454444484b4b494a4b4c4e474c504b4f4e4c4d4c4a4d504e5053504e5452
5154545355575555525571968f754e180e55772a1c3637354b4c2023322b
302c0902001482963b123c4f484a44542e11283f605c3d26254e63606775
757e838a8e8c86848588888788888b8d948d8385827f807c7c79766e6867
748284817d80858384858485878a8986888c8a8c8a888b8c8b8985827f7f
827f7d81827b7f7e7d8086898b919090938f91918f92949496949195938e
98944f4e877e7f8e9a9ca0b8c2b3c4d4add2d4626274677472726e6f7171
7171727072727173726e7172706e6e71706c6d6d6a6c69676769656b863a
00131514101412141a1916110705090e101110110c090909070808070505
06090c0c060035bcbc94a3a4a6a5a7a3a8a6a4a9ce434442424444414043
434244464541434944464646454b4a474b494a4c474c504c4c4d4c4e4d4a
4c4e4e4e53504e535152545253545656554c4e7ac5c3763d0e0a274e2e35
50514e697629153b35342c160801066ba641103942414342413139473645
6c742206324c5f7774767b7e89938d8786858685878988888a9096878383
827f7d7b78766f6a665b6683827c80818183818282868685828185868684
828688868685837e808080807e7e7f7f7e7c7e84858487888a8e8d939791
928b878d8e8c8f8d8e9a8d646a85877f767f8a8a8c96898e8d597daa8459
3e6183716c6e6e6b6f716f6e70716f6f716e6e706f6c6f6d6d6e6e6a6a6b
696a686768636e843801181b131513121a231a181307060a0c10110c0a0b
0a08070606070504070c0b0a0b050063cba99ba1a5a3a7a4a4a5a8a3a0cd
43464041414141413f42443f404341424643444646454747444948484949
494b4b4c504d4f504d4f514d4e545150525053535152555253554f51739e
b391430f12353a2d364d4f535c612c191e2221210807010c6f913b1a4446
434c4d452743647450254331191c112e526174807f8d96918c8a8c8b8886
868987898c948f8684827f7e7b77767269655c52627180827f8284807e82
838683818184858381808282828381817b7c7e7f7f7f8180808381828687
878b8f8e8a7e7e848480756f7274707073777b8181858c8885817876817e
7a7f82837f625c6f59374875746a6c6e6e6b6f6f6c6f737070706d6e6f6f
6d6c6f6e6c6c6c68686b6b686967656c8532001d19161817142626171915
0705090e100d0a0908080606060604050c0d0d0b0b0a001494c4a49ca7a4
a6a4a8a6a8a5a5a5c743423e43433f43424043473f404342404143424545
424345444a494645484c4b494b4d4c4f504e4d504e4e524e4d5054525252
52515052554f5869737c7d3504122f40283644494a5c541d223931373815
04010a719a321b3d2f3740413e2d1e35364d684d2c3a391a00112e445b65
7078848c8d90938e898888898a8c8e9391837f817f7a7774716963605b54
53677f8982828382818485818284828284817e8281828283817a7d7f7e7f
8282808385848b93928780736e7369595d5f6164686a6c6c6a6c6f737372
8796877d7a77768da6a09eaf9ea276939e5a6a565b746c6f6d6e70706f6d
6e716f72726e7172706f6d6d6f6f6c6a686b6b686a6967666b7a3101191a
1416151c2f25101c1406060a0d0e0a090808060606050409150f090b0b0b
06003bc1b596a3a4a8a3a7a7a8a8aaa6a4d0414241414141424040424441
42444240424443474544464544474945484a4a4a4a4b4c4a4d504e4f4f4e
4e514f4c51525053545152535052525a7280826d24062b56261a435d5c61
716820102022201d150a04025c8b2f1e392e292d2b2e1c2f534c36556238
2a453b0c1021292f393e4e5a6871767b7a7c8386868b8b8b97978580827f
7a77746d66655f5b5a504f66868480817e81838483848383868582808082
8383827f817d7f807f7f8182888f8f7f766e64574440464b4c5453555f66
6768676b6c6a66647388848c8b7e7e8193b9bfc2c3907663b3ca61706855
74706c6c6f6e6f716d6c7272717070706f6f6e6d6e706f6d6e6b696a6a68
6968636f801f041e181917192b3a190b1f1406080b0d0b09080808070605
050e1b160a0a0c0a0c040370cfa29ba0a4a6a6a4a7a5a8a8a6aaca42413d
3d42403f40404049443d3f403f4244434340434745434448484849494b49
484a4b4a4f4e4d4c4e4d4d4e505150515250535753524d4e79989377601c
04416a260f23292a2c241d2f3a2d2b2a1a0b06031c697526284b494a4447
43190d274a6d59361d12364b38302b2624292e353f43494d51565862686b
71747885948b82837f7a76706a656260585655513b69a586797a7d80807f
80828184858481808384848380817e7e7e7e848f90786c6d56443735383c
3e434448505254606466686c6d6f7168667e8272818c878f81748c989c8d
818b6f628d6f7070596d6f6c6a6b6b6d6e6d6e6e6e6e6f6e6f706f6b6b6f
6e6e6d6b6b6a6b6867686763787818041b1c191c1c373c0d0a1b0f060a0b
0b0b0707070706060612281b07090b0b0b0c00199bc39e9ca6a6a5a2a6a4
a5a7a3a4a4d340413e3e3f3f3e3f3c3c444140403d3f4142434143434345
4243444748414b4b454949484b4c4a494e4c4a4c4e4c4f4f4f504f52554f
534453b6e8e19e380f0b25391b100a0a090a0707223c382b241b0e070029
96651f31414143454139353a352f59895a0e204b637067594d3e2f2e2d2e
2d2e33383a3c3e474a4e53555d6c71727d817d756a66645f5a575453523a
3b74858c8a8082807a787b7c7d807e7d7e7e818182807e7f7f848a7c6a6c
553b2f2e3432363835384444474d555a5e61656a6b6c7171707276727a80
797d90806d8187848384b1a868786f65715b66756c6b6e6a6a6f6c6b706e
6d6d6e6f6e6f6c6a6f6e6e6c6b6b6a696a6765676575720f071e1a1a1a2d
3f270912150a070909080908060705060a1922210c080c090b0b080046ba
b298a5a1a8a4a4a6a5a5aaa7a1aacd3e403e3d3e3a3e3e3a3c3c3c3e413f
4041414141434442464444424549434749454a49484a49474a4c48484d4c
4b4e4e4d53504f544f4f4a54a9cbddbc490c15362a120d0a0a0708080909
080c0f0c0f0e0a01137c60193c4d494544492f2e576a61202446221c5166
727a72726c5d55514539302b27221e1e282d313a3a3c3d3e4a56656f7270
67625e5b565250524c32263f6472747d898987848082827b7a7a797b7d7f
8184897e6b665c3d2d30312e2d2f30333b393b4444475155595e66696c71
7176727276766a6d807d7f947e6c838d8f898da38b6f877265845e5a766e
6b6e6e6c6e6c6b6e6e6f6f6e6f6e6d6d6c6d6e6e6b6a6a6b6b6b6a646568
7e670b0e1e1a1a1d3b3e140e151709040a0a0609070506091123381e0509
0b0a0b0b0d04097ec3a0a1a0a4a6a7a3a9a5a7a8a9a6a5d13d3f3d3d3d3b
3c3d3d3c3d3d3f3f3f3f403f41403f41434446444445454347464548494b
4d4a494b49484a4b49494e4f4e514e4e52515252515d75918d480915352e
0d100b0607080806080909090a0b0a03003588500e304043413f3f3a2325
233f70532915214b5f6b76807c7571726d665e59524b443a3634302c2f2f
2d2f35404c535e646764605d5a56504e53483528292c35404e5f6c71727a
7e828585828184897f7670655b442c2c312d2d312a2c3031353b3e41464b
4f53595f61666e6f747a7b7a7772726a6774797f8d745f717a828ca2bd92
7fa78e537d6756706b6b6f6e6d6d6c6c6d6d6d6e6d6d6f6f6d6f6f6f6c6b
6c6a696a69696768657d61080f26191c2a4d2e0c1118190a030b0c090808
050e1921393c0b040d0a0a0b0c0d0027b0bd9ca0a6a4a9a7a6a8a6a8a8a9
a6a9c93f3f3b3c3d383a3b3a3a3a3b3d3d3d3f413e3d3e40424040414240
434342444543444a49484a4745484a494a4b4b4c4b4c4e4e4e4e4f4c5577
8b917c64360a28572f100e08060606070606090a080a0908030040954511
31322b323230203047483958694522284c5966787b7e7e7e817a71727370
6c6864615b5956545550535a636e83897a7679736a625d52514d42311f28
2d3235393b3d40424c525d65686f716e6d6150452f2a302e2a2c292f2f2a
2f35373d4140434a4e54585d6165676c71757b7d81857a72706c72757575
857f7281888aa5ccdebeb8ab667e7455706c6a6e6b6b6d6c6b6d6f6e6d6e
6c706f6c6f706f6c6b6e6d6967696866686880530711221d1e3d47210a12
17180907090e0c0807101e2933421e030c0b0a0c0b0d080154c5b299a6a2
a6a7a5a8a9a5a6a7a7a5a6d23d3d393b3a383a3a38393a363d3a393d3e3d
3d3e3d413d40414240424542414643434646474844454847474a4c4a4a4a
494a4d4e4d4c4349a2ddce894e240e3c5b33161009070906050606080b0a
0a0907020949832f1a504a4441464a261b36515a4734302927455b616e78
7e8686847e7f827c797b7c777575777878787d7c7c818a9fa69f9d9b9892
8b817874685a47342d2527313637383739393a3b37343a3b352f2a2a2d2a
2a2c2a262b282c2f2e2f363c3e434746495153575b6163686f7273797e82
a1946d6f7f86857b7c8984767d7876737dab97676666817951676b676a69
686b6a6b6a6c6d6d6e6d6d6d6b6c6d6d6d6d6e6e6a666969656568804e01
10231c264c3a0f0e10151408070a0d0f0e13202c30414608040c0909090c
0c020e8ac79fa2a4a5a4a6a6a7a8a7a3a7a9a3abcc393a3a383835343836
393b383a3b39373b3d3b3d3c3b3d3f3f4041404342434342444242484743
464a45444c4a474949484a4c4f4d4c464979b8bc8d5b210e1e2c180f0d0b
080b09060608080a0a0a090600127387250f424d4347424228262a273c76
602a1c21435a606877898e8b8c8c8b8a848287888281898583868b8d8e93
9aa1a7adaba19fa09da09f9e9b99908174664e31202d3333343632363732
32332f2e2c2a292928272a27262a292b303132383b3e43464c4f5557565a
646769707476797e7f8d9371718085828682757a857d7776716e89766161
5e7279585d6a65666768696c6b696a6d6c6c6e6c6a6b6c6a6a706c686b69
656a67666466854200141b21354f2c0f0e10191207060b0e111b222c3339
4a2a03080a090a080909002eb1be9d9fa7a7a6a5a8a5a5a6a5a5a7a6a3d6
3838363838353634343636343837383837393b3e3c3a3e3e3b403f3e3f40
414340444241444644454a45434c49464a46474a4a4c4e4b4944577b9d85
511f0c23251809060606070909080808080a0a0a0802005a8f26183e3635
4247331b385c6323134c3b2420415a5d6470828b909a99929194918e8d8b
8e8f8c8f929593959fa2a9b0b0aca8a7a1a3a3a1a1a2a09d9995907f5b23
1d332c3132323234323330312d292b2b28282a2928282b2a2833363a3e3e
4046495057575a5f63676e707578797f7e77747e8a787a716d777b716e79
6d636e696e814e4b665d6a54496e726a67676a696a6c6b6a6c6e6c6c6c6a
6a6b6b6a6c6c6768696668686865687f3c00152022444a1e0f120f191205
040a14192429303b4e4c10040e0d090b090b06005cc8b29ba5a4a6a6a7a9
a6a5a6a7a7a8a5aace3b38353938333432313433313a38353b3a383a3c3b
3d3c3c3e3e3d3d3e3d42433e444443434544444845424745464947494a4b
484b434b8b9f9dc48e2d16284b2f1a3d1c0206060708080808080a090c08
0322716c1e273f414048443e161b2d4770542822231e4359586367737c90
a59c949aa09a9595989794989d9a9a9d9c9ca2adb0aeacaba8a5a6a7a6a4
a4a29e9e988a82692f192e2d292d2e2f2f31302f2e2f2a272928262a2927
282c2b2d36373d4042474c5455575b5e63676d7074797b7c847a6e6e7789
756d746d718277697369636c758675685960875f41386273686b676a6a6a
6b6c6b696e6d6d6c6b6b6a696b6a6a6a68676967686866678233011b2035
4e3212131112130e07021320222a2f3149603902060c090a080c0c001394
c99fa1a2a6a6a4a6a6a7a7a5a7a7a7a5a9d53736343434312f2f30323233
333637373b36363a3a3d3b3c3e3d3d3c3f3d40423d424343444543464646
464445464546494b47494b3642b3e5e4ed9d2b1b47823518694408050807
080708080a09090e08003f945f1e262a323d3c3725324f43315887531d1f
244355565f656e788c9e9b959f9e979b9e999a9aa1a09aa1a59f9da5a9a8
aeada5a7a8a4a9aaa4a1a3a09c95867f672b1929262829282c2d2b2b2c2b
2a292a272527262929292a2c3138383c3e42494d5355575c6165666b7073
77777a7f766662687973757b746e7d7f7b7a7b7a80859b8bab9473a86e6b
68516a6967676769676b69696b6b6c6b6c6a6c6a6b696a696b6c68696867
67656e7628032025414b1f140f0f15160a030e1f26272c343a526227030b
0806060e110a003ebeb49ba1a4a4a5a4a5a5a7a8a5a7a7a7a4b0cf353532
323031302f31302f33303234353833353a3a393a3a3b3f3d3b3f3d3c4042
404141424244464544474643454644454a48464a4441719eb5b4742f1857
772b24703b11050808080a070809080a0b0b0023875622383431353a3724
29617a682b2d413426264352545c626c7081999d98949a9ea29f999a9e9d
9ea1a5a2a2a5a4a5a8a7a6a7a4a2a4a7a6a4a3a19e9a998679682e192626
2429242b302b2b2f2d2b2a2a26262a29272a2b2b3033373d3d40474e5354
585f616568686d717479797d7f746d676f80858873719579758f787f948f
8999a186707acb8b5f7659616f68676768666868696a6a696c6f6c696a6a
6b6c696b6a6668656664626c7722011e2c4d3d1816110e13170b0b1a2429
2c333c415b5a18070e0c0a0c171401036cc5aa9fa3a4a7a6a4a8a8a6a6a8
a6a8a7a8a7d236363131312f303131312f30333233352f40423138383a39
383e3c3c403d3d3e3c4142404042404247444245424346454747454b4736
3e7e9192977227165c721a33803b0e070809090a07080908080a04054c86
3c1d3e4444454147350d1221396e662d1e26264049555a646b6978a1ab99
959da1a6a1a0a4a19ea1a4a0a0a6a5a4a4a4a4a3a3a0a0a3a4a3a2a5a19c
9a96897c6a3a111b21202622262e2b2a2c2d2e2c29292726282d2b2d3032
353a4040495252595c5b62696b6c6f7372787c7c7c80756d6d7a8485a185
62a8967996766a888a86a0b2836669c4c26375635c6d6a676869676a6868
696b6a6b6f6e696b6d696c6a696c6868666564616e721f061c263a391b13
1412131312191f262f2f394446634c0f0e0d0a0e1a1d09001995bea0a4a6
a3a9a8a5a7a8a6a8a5a6a7a7a6a9cd32342e312f2e2d302f2f302f313333
382f3c423138373937383d3b3b403e3f3e3b3f4140404140424543404342
404442494a40392f2040909e989458231b6c65124588340605070a0a0908
090908090a02055c9537183f4143433f3d2d3047323978893a1321293c47
515b616a6a7a98a6a5a4958ca3b3aa9f9fa49d9f9e9ba0a1a1a1a0a2a19e
a09da0a4a5a1a0a19e99968b7b673a13181c1c21232425272829292c2b2c
2a2925292e2d303635384042434d5455585e5c5f666b6e727675787e7e7b
8175696d737a79978e6e81857e8c857a7a7a7c878f867565adc665626a5a
686b64656867686a686a6a696b6d6a6b6a6c6b6a6767686767666662616e
6b110b21181f201c130f101517171e25292d363e474f693105120a0b1225
15000046c5af9ca4a3a5a4a5a7a9a3a5a9a4a4a6a7a7a5d430342f2f302d
2c2e2c2e2e2f303132323232333734383936373a3a393b393d3f3c3e3f3f
403f3f4341414246413e44423e37302b231948909eb590481331774d1366
782403040a07090707080a08090a04074f7b2a23404546484748272f5854
51544b372728273c4c5058636870788ea8b1a3878aa8b4a89d9c9b9a9899
9b9b9b9a9b9d9d9c9e9f9fa0a2a3a1a1a09c9b93897e68341719191a1a1e
202325262929292b2b2c2c2c2d3031353c393b4743424f4f53585e626465
6a6e747576767f7e7a7e7469697e6f5291886876787576798885888fa5b7
a18a6bb0dc72657356696f65686a65676d6a6a6a6a6d6b6a6c6e696b6c68
68666665676562617a56061222201d1d19120e0f16171b20252a303a474b
5b601a040c0b101e240b000882c89da0a2a5a4a5a7a6a5a5a4a5a4a6a3a6
a5afcd3230302e2d2c2e2b2a302d2b302f30303031353230373834393939
3b3a393c3f3b3a3c3e3f3e3c3f403f404244433c2d2b2c2b3126184c7f86
958b40133379471a777411000608070608070608090907001a6f711e1e31
31393b3d3a2c233033353430322d2726384e50595f6a6c758fa4aca09397
a9a6a5a39d9a9f99989c9a97999a9c9c9c9fa09fa0a3a3a2a49e9c9c9286
80713c16181513181b1c1f23222327282a2a2e2f2d2e3135383b3b3e4849
474f53585d62666b6c6e72787879797f817e7c71695c7e88256999637988
6c6e849099919aa1aca895768dce8653794e5362585b5e595560736e6a6b
6a6968696b696b6b6968676665656463637c510211271e1f1c17130d0f15
181c21252d313b465368520c02090d1623290a0027acb79b9ea3a3a6a3a4
a4a7a5a2a4a5a4a5a6a7a8d3332d2f312c2a2b2a2a2b2b2b2d2f2f323131
36323137383435373839383b3b3d3e393c3f3e3a3c3e3e3f404137312d25
302f232010044d897b7a84480f407d3b217f6f0e01070505080806070907
0909020c6e821e1a2a282b2f2b221a36514d474a362e282929314b525660
676c788c959faa9993a2b0a79b9f9f9c9c9a999b99989b9c9b9ea1a09ea0
a5a6a4a3a09d9c948b816f4316162938281e1a1c1c1b1f23222426292c2b
2d2e303636383e40454d5153575f62676d707073797c7b7d808282836c62
5b7288344164688d816d79868ca4a5a4a7a2a9bdb09bc4915b7e572b4042
41454038416c72696d696a6a67686b6b696769696566676364617c510516
241e1f1b17140e10181d1d202932343b4b576c4403040d0f172a23030045
bfab9aa2a1a5a6a4a4a6a5a3a6a5a6a6a8a6a3abca302d2c2e2b28292827
2a29282d2e2d2d2e3332333130353434343635333838393b3c3d3f3f3c3c
3d4341362d26273a312825120c0500439a8268713c144b7f2a27866a0c01
0b0605060805060a080709021a68671f2b3c3c4648484516173b3b3b3b38
2f2828262e4751555d66697483939ba49b8c9eada29a9e9a9897969b9b98
99999b9ea2a2a1a3a3a6a6a6a1a09e99938d856f452318264a63493c3432
322e2723202220202328272a3033363b42485058595e6263676c72717479
7b7b7c808080856d5b626a79665f5362886b6f7e74727f8283848284abba
937e6c62956a16293b363b372a2e697a716e6d6b6b696c696a6a67686867
666664615f7851040f26231e1b19120e12181f2120273239414e606f2e01
0810131d3415000378c99ea4a1a5a6a6a8a6a4a6a4a5a6a6a6a8a9a3a3cc
322d2f2e2f29262a25292a272d2f2c2d2f31313132323331333634323438
3637393b3b3c3f3f3e3f382c28292c3036230f0d060a151c64afa6885423
16567a203a945105040b07070806040808060906003a90520b31403f4745
463f242c32272933242225272628414e4f5b666a6e7e8e909da29695a1a4
9c9c979391939b97979997979da09fa1a2a3a7a6a2a1a09d99938c826d48
2f240f1e454d6665525d574a453d363432302c2c292932373a4955575c63
696a6a6e73747879797e817e8284807c6b5f5a6a7f827776747173757770
737d767477726f7f9174685d5b8f6a0e23342b2b2c2322607b6962626e6e
6a6b6a686b6866676765646560617b3c001322211b1a170f0f13181c1f22
29313a45526e6b17010612121e33160027a7ba9ca4a5a5a8a7a8a6a5a6a4
a5a3a5a5a6a7a3acd1302f2e2f2e272529242929272a2e2c2c302f303130
323234343536353738353938383c393d433b2b2c252c342c21120b090e13
1c2c4e94a2b4a0561b164f4f14478d3f000708060705061b3a2905060a00
248956102d3c42444142321f4a5e4c4b51301a23282d2437474b54636870
7d838ca1a6999ca4a69f9a969293929793949697969a9f9da1a2a3a5a8a4
a39f9b98948e856f4a2c2319181f213f5a5d5d5d5a5e5d5a595956534e47
4245484951555b5f6164686a6a727878797e8283818889857f6d5b556073
77727778757071786b718f8e8785868387795a72a8856442142e3a342e2d
2d3737343a2b2e6d8068686a696865656a63616661616b7a30031d221f1e
18130f1014191d1d202b37404855775d08020b0d131e2d0c0051c7ab9da5
a3a7a8a5a7a4a6a7a3a4a6a6a6a7a9a4add02e2e2c2c2a24262623262829
292c2c2c2c2c303130323031343335373733353934373b3b39332b242b35
2e21100d08071c2b2d39384774979e895617192c220e345a2b0208080304
0202316f6b180005093e7a42123e414346434a3f171f3a3b403d312a282a
28282f414c545d6570787b8c9c9e9fa0a2a1a19a96959593949393959794
979e9e9fa3a5a3a5a4a39e9996958d8675502d25191d201e1b2c404f6260
5a5d5c5c5c5d5f605f5c5e5c5d5e5d5b5d5c5d5e5c5d626a6a6a71757277
8385878b6e57486270737b64628d80767f74728e928f90938f92673771ad
a3661e103438373430313c230c140b12697d5d6969696764646664606563
5f69782d011e241e1f16140f0e151c191f242c37434b587c4e05080e1011
242e06017bcaa1a3a4a4a7a5a4a5a6a3a5a7a4a6a7a7a7a6a8a7d22e2e2c
2a29252423242626292a2c292a2c292f302e313130323233363634383835
3b3b2b272326302922190d040a1a1d2f403d3c3d3e64999174541b1f452a
13455a150006080505040020696e2c0100085895390b30303333342f2f31
413e3a40441f1627211d1f2d3d47525c636d737a8397a8a5a1a2a8a19693
939594939694939592959a9b9da2a6a8a8a5a2a19b97968d867b5d312120
20221e1f1e1b2941565e5c5a5d5e5d5b5c5c5c5a5c5b5d5d5d5c5e5d5b5c
5b5c605a5b5d60615f696f71786c5a43607c7679605a7a808588827f8383
7a7d837c82713c6d95827021082c2f2b292c272627323a2c2b58706a6667
6767666264656264625f697c29021f1f1d1b18120f0e14191621252c3641
4a5b7b4c04081310151d2b0713a1c29ba7a5a7a7a8a3a5a5a4a6a8a7a8a6
a9a7a9a7a8cd2a2b2a292923212323242326282928282a2b2e2c2d303130
30323133363134373936271e1d242920170c0a0c14243537383e3e3454a5
afc3ca8a2f132e6539196c7e260304070507050013667c31020200468d3a
122c2a272c2a2714295d625d64682f1a28221a1e28363f4c5864696f7682
9aa5a5a5a6a8a09a93929694949794969594979a999ca1a2a6a9a5a0a19c
98968d847b622f2120222221202120201b304c595f585b5b5a595959585b
5a575d5b5b5b5e5c5c5d5c5b595a5a5a5c59575b59595f5b4d606e7b756a
6f6b7881837b818586908a7c7f82775c6ba3af772b001f3731342f303643
352f30262d768063666567646364646265635f6876230421201a1b16100e
0f1516131f242833414b607b3f02080e11141c20043dc3b097a3a5a5a7a3
a4a6a2a4a9a5a6aaa8a6aaaba7a6d52a2926292623211f22222325272828
292b2b2d2c2b2e312d2d32303339323837281f1a1d1e1c150f0908122632
3e3f3d4245442e59d1e8e7e8ab301635632e20737b29090106070507010e
5a75430702206275241a40413d3f41452e06162f2f32332c2428231d1c2a
2d3b48525f676a727e96a1a5a5a0a1a09a95949594959796959696989a9c
9ca0a1a6a8a3a19e9997968e85795e34231f1d28242426262424232d4453
5c5c59585a5859595b5958595a585a5c5c5b5d5a57595b57555a5a555958
555d544f686867726f7588887e756972818e9d99827e8e9a7a5576979248
00102c2f2e2f2b333e29191d132577745f656665656466646264635e6a77
1c06251b1a19170f0e0f16150e23282d36404b6e783004080d0e151a1510
77c9a39ea4a1a9a3a4a7a5a3a7a9a5a6aaa5a5a7aca6a8cc24242124211c
1c19191a1c1d20211f212124272727262a292931313d3b2a302a18171915
100c0a080c1929373a3d443e3e443e343c7199a7a47d320c4657202a8171
2608020a070506030546714d0c002a8d7a1f1a3c403e3d3b3931393d373a
3e411b1627231d1c25313a47505b636a71758ea8a3a1a29d9a9895949596
959595979697979b9d9ca0a3a6a5a4a29c9a9b958f877c5d3e241c222826
2a2c2a2e2d292b303a4651586260595a57565e5c5a585959595857595856
585954535959565558565a544768746c81857c9d98766f696e8c8a7b786f
727b81674869907e5f0f07191315171615101c49462e4160696766646665
6464656263615f6e6f1807231e191915130c101a1306202d2e3741506d77
2c010d0d1216190b31a8c0a0a3a2a7a6a5a6a9a4a4a7a8a8a9a8a5a6a8a7
a7a7d312120f0f0f0d0e120d0c0b0a0e0e0c0e0d0e111413141717181d1d
2a2a201c1a1817100d090606050d1a1d1c20281d315f2f1813245e6f7680
6820104455103890661c0404080805070304366b5b150008667c1e2a3931
353a3f3a263d61615c6765261427231d1722323b43505960686d748a9c9f
a3a397969a94939393939596969899979b9e9da0a4a6a4a2a39f9b9c9890
897c603e201e2427262e352f33383637363538382c3746618bae743e5456
555554575455565854565554565756565654575b4a44788b858e806f8289
71747b8495777577706c787b7044509087792d000c0d08080809030b3233
2721356b7a646267666364646261615f6e721509271b1d1614140e111d12
011c2e2d3842506d7322060b0d1017120960bdab9d9da5a2a2a5a6a4a7a6
a4a5a6a3a7a9a6a7a7a2a5c6040505040405090b0b080503050503050503
040403030403040606060c1111130e0c0807070505050303040607020555
902100001566777c7a4319164c4a073f934d1308040a06060404012a6252
1007387a4717463e32333a414a250923322e3837231d2321211e22313940
4b5b5e646a7680919e9a9a999a9a99969091949594969896999d9c9d9fa3
a5a3a0a0a09d999590897e65401f1c2423282f3837393e4345484448462b
0f103b5dd0da463e53575554535450525450505454555355535452565552
608691928f7c7565636e7d868d81737a847e7d8888774e4658658a3e010e
0d090908070708080709001c72765f6366636265646261605d74670c0f23
1e1c1813120f131f1200182b2e39444e766a140b0e0b1414071c98c29f96
a2a1a2a1a3a3a5a6a4a3a6a4a2a4a6a2a6a6a3a4d10406050505050a0908
0606060706050708040407060507050508090b0e0d0e0b06060706080706
070807090906002eb1a01b001073b39db47a260f2253480a538f36010b06
070705050504122d270b09568e4217433b23303632262a4b4634363a3014
1524201f1b152c494248555c6067707c8c8f8f929395989597918e949593
939797999d9d9c9fa3a3a3a0a09d9c9c948a88806a42231e20272731373c
3f46494e51534d5156412411073a834527353f43434b515b5d5f5f5f6263
616063636666534b688a928c8e8d929175697472747e7c71747472737871
7e553a5a56744b04070d0809070706070b090b002a77695f626463626362
6162615c775c051220171915150e0f111a1201122b2d363f4979610f120c
0c14110542b5bb94a1a2a5a2a5a6a4a5a8a5a5a2a3a5a2a3a3a6a69fa4ca
090a08090a09090a080506070909090a0c0a090a0a0c0b0a0b0c0c0d0c08
0a07050708090a0b0a0a0c0d0e0d07057cbe5207005de8e5e8feb9201725
5948196e8f23000a0605050503050508060a0a0027864e153d3c2a2c3431
20205a6d5a56594018182425170d0714304754565862666e798282838c90
9195959593929496949596989a9c9d9fa1a2a4a4a1a19f9c9a958d837b6a
421f1c25282d343d3e454e555455575856565d512c17111419181414120e
346a626165696e6f6e7275747b85856c536d909d8f8d8d8f8e807176756f
767f7b7b787a7f6b678c57205b7d8a5005040f0b0809060808090c080030
786c5d6364636462626161605e78530514211a181714120f141f0f000c25
2d34384c765116130e0e120b0b70bea59f9ea5a4a3a1a6a5a3a5a6a6a4a2
a5a4a2a2a5a3a1a7d00c0d0c0d0d080b0c09060508090c0b0c0d0d0f0d0c
0f0e0d0e0c0a0b09060508080b0c0c0c0d0e0e0c0f100c0034b4951c0504
76f0eedffbba2c14416b4427828d1c000908040604040505060a07031555
733b203d4d473a36463c130c2b35303432211924261a0b08050526494e5d
68686a71797d7f898d8c9394939493939394959697989a9ea1a2a0a4a5a0
a2a09e9b958e837b6b4b221926292f363b43484f555a585c5d5d5b5c625a
381e10131a15081f3a3253594b5453585e5d6166676a706e6d675b7a9b8d
8a8a8b8c84787a827c848178838b88907f6a75613e57788b5f0805100c0c
0b09070b0c0d0d032b7a6b5c64636163635e60605e5c6f51041323181a15
141111161e0e02091b29353a49764e1a21120c12071b90baa39da2a5a8a3
a3a6a5a2a4a6a7a6a5a2a1a1a4a2a4a2a5c70e0e0d0d10090a0d0b070808
0b0c0c0d0f0e0f0e0d0f0c0c0c0a06070706090d0d0e0f0e0f0f10101012
11070a7cb4580e130942c3d4e2d7902b16467e4c348a8d18000b08070707
05060506080600166c7e302547453d3a373b352f483e393f482d0d15241e
1c0e08090210292e3a526f797477797e88878f928e929392909095939798
999b9e9ea1a4a5a3a1a39e9a9a968b857e6b512916262c2f343d454c515a
5c5d6063636263646463503215051840434b452d383d475053575b616865
636a706b6561798f8b88898a8884818581729fa8726e868b8b888aa27d5a
8ca37e3207080c100d0c0b0b090f0e0d053578685e63645f6363615f605d
5c784002181b1719171312101919090506162a3536487c4c162a1e0d0d05
3aaeb798a0a3a5a7a7a5a6a6a5a2a4a7a6a4a3a2a2a3a4a2a2a0cd0e0f0f
100e0c0c0e0d0d0b0b0d0f0e0f0e0f0d0e0d0c0c09080806060908101310
111211121313131314120540b08817081c0a3293bbd3ad5223173a653c45
a57f0f030c08060a0705060607080805004179382c524a3d424241292d5d
5c555b5f3f141824211e110b0c0115291b182342555c70818688868b8f8e
9093949192949296999d9b9ca0a2a4a7a5a19fa09a9a968d867e6d4e2d1b
222f2b343d464d535a5f5e6264676767676a6b6d663b2a3b4c4523263437
3f4d52565659605d61667373665e5e7491908d8d8a8f847080897688a282
6f7b838a9796ae9464a3e1a729050d0f0f100e0f0c0e0f110b0748776061
66636260636361615e617838001c1f171a161214161b160906091c293335
407b4b0f2824120a0c69cba999a4a6a6a7a7a9a8a3a8a7a3a4a6a3a4a6a6
a4a4a1a0a7c50d100f0f100a0a0c0d0e0e0d0d0f0e0c0e0d0c0a0a090a06
0707070c0e0e101210131514141515161415091f86a73d021a0d0e75d9cb
f1cc520c1526271a2d816e10071307070807050505070706063152492a2f
42464241434231181b2b2f2f2e2b1f1a211f1f0f0e0d0012291c191c1719
2439585c6686949192929093939192929495999b9c9ea2a4a9a7a29d9e9c
97958e85816d4c2f1d252a2e3742474f555c5f6064666868696a6a6b6b6f
715a41222329292e333b4a4f50575c5e5a60716d676061728a8076797575
727e7e73858d7f7a7b7f78687587756a5c46627f721f05100b0f0b0e0c0c
0e0e0f0a094f755b5c5f61615e616561625d5f7732001b1d1c191411141a
1c1307060f192630354b7238112523120028a1c3a39ea2a4a6a5a6a8a6a4
a5a8a3a3a5a2a3a6a5a5a5a2a0a5ce100f0f0f0f0d0a0a0b0c0d0f0c0d0a
090a09090907060706070a0b10111013111314131416141414160e0c55a5
5807101c120868ceebedda59080e13110601202f0f0b0d07050705040506
06070308385b3b121e24262725241f224851413e3934251018211f190e14
0e01112b1c191b191a1c191a1f21425e616d89a09d95939291939394979c
9c9fa4a2a19f9c9b9a96948c877f6d502c1a222a2f3842464e5a5e626165
6767696b6a666a767c6339232a2a272930353b43464c5459596362506e73
565b5b777b58637a6640386f887c7e817d7b7f7b686a70646e5d22507d4e
16030b0d0c0f0b0d0f0f0d0e070c4f735d5a5f605f5d62635e615d5f6d30
031b211b1a14111518171308050b14202d344d712e0e2424140254b9b49e
9da3a5a3a3a7a6a7a4a4a2a3a2a3a0a2a3a4a3a2a4a0a8c810100f11100e
0d0b0c090b0b0a09080907060707050508080a0d0e100f12131314131314
1514151516091b8a88170a13090d2c3e82dceac2610a081512150b030608
090c0806070705040607060606061d3917020b0c090b0c060a3f65555751
493219142420170a111104092a23151a1c1a171d1a1d1c15181c223d5f6d
7c9b9f9892919799979da3a5a2a2a09a9c9c97958d88806c5833131e2a30
363f464d575e616865676a6b696a6970866d2e2c312c2a272d34373e4548
4b57585967614d6e755d5d495069656b8f8446155a98796d7b877d7d9195
87837078631a61b76e0e0008090e0d0e0e0f0f110f090e5469595e5b5f5d
5e63635c605e5c70280320221d1a1616151916120a0508111e2a31507529
0c241f171571c4af9aa19da3a3a4a4a5a8a3a2a5a1a0a1a29fa1a3a2a0a4
a19fd013111112130f0b0908090908070707070605060709090d0f0f110f
12121318181415151513141615120b448f3800012047445d8087afc1c271
17091941380d070908090b09060508080405070706090814321801080a08
0809070c161c24272a2b261b1a1e2015070c0e08082a2c15191b1c171b1b
1b1d1b1b1b1a1a1919315964769ca09b9d989da0a1a2a2a09b9e9c99948d
857f735936161f2d2f3b3f494f5a5e636969696a6b6b686f7e7745282f31
2d29282f35373e46494d575a5d675e676b646955365b7b73757c6c2f357e
99796e7b848183919192a08a5d482d539c711903080a0e0e0c0e0d0f0f10
07175d65565d5c5c5c5d61615e5f5b676b1c0821221e1c17161e19161409
05090f1d2d2f586c1711261d132a9ec5a2a7a1a2a2a2a2a5a1a6a4a1a4a3
a09fa1a09fa1a0a1a19ea5cb13131213140f0e0706070607060606060607
0a0c0d10100f131311131415171816161617131416160823775503224351
7888664b688690a1731405173e4209090a090a0c0a050508070606060808
0709113220010708060707070a10121216161a1e1c17212014080b0f0608
2a28171c1a1a191a1a1c1b1b1b1c1a1d1d1b191a1728576b718fa1a9a8a3
a4a09e9c9c9998958b867f755f3316222c30394048535b6363676a6a6c6b
696c7979594131302f2b29292e32383c4243506659636659686c66674a2e
6293727a814e313b718e757a7e7e8181746c7388763f35426e78480f040e
0d100b0e0d0e0e110d061e6864555d5d5d5d605d5e5f5e596a6915062320
1b1c161b221915130b0709142031335c60101124180a4fbdb1a3a09f9fa1
9fa1a1a1a3a2a1a0a19f9ca09e9fa1a09fa19f9fcd131213121212110b06
060605060707080a0a0e110f111211131313121415151314131315131316
120548894c3159867151442e173f8a99b8861c020e110e0a080a080b0f0d
07060608050606080709061a381a01060705050606070a0b0d0d0d111817
181c201908070c06022e69593a33312c241d1618151819191c1b1b1b1d1d
1c181822446372849aa1a5a69d999897918c847c72683a141c2b2b384246
505c5e64686c696d6c6c797c695f423134302d2d2b3034373b4c4c577463
635e4f656d6a624b4d717979827e5f30457a847672767c7f797d74707770
503a3b8fb84503070b0e0d0c0a0e0c0f0f0e012c685c585d5e5b5e5f5e5d
5e5f5b6b66140a211f1d1b182224141416130f0b19282a33685908101d14
0771c3a1999c959c9d9e9d9d9ea3a09f9fa09c9d9f9d9ea09e9ea19da0c4
141313141312120f0a0505040608080c0e0d0d0f100f1013111012131211
1412111210101211121108487e68645544392a1f14062e8695a49127010d
0d0e050811100b0e0c07060606050507060609071a3c1f03040705060708
06070b0c0f0d0e161515181c190806090700217f897475716d6457474437
312f2d261c191a1a171919181817191d2b47596c80929d9797958d857e76
67461917292c3645494d565e63686a6c6c6d737e766e614031332f2a2c2d
313331357a7c5e6e675e5351626b65604b557266839385643563897a7974
6b6e737f81756e615e704f305d794c0b060d0a0d0b0c0d0e0f0f0d02296a
5a525a5a5c5c5c5d5e5d5c5b6964110c29211d1a1e272114151919191415
1e2d366e4f000b17071d91be959a9593969e999a9c9a9b9e9d9c9d9d9e9e
9d9e9e9d9e9d9e9bc61412101313120f100c070605040608090a0b0c0d0e
0d0e0f0f0f0f11110d0e110f0e100f0f110f100d233f3a2e241a1b1b1917
0e1d6d9fa48e400a090f0907050f110c0e0c050506050504050605070811
2d28050408070709080709090b0b0e0f13151417201303060705031c2524
3c47505a616a71787876706c62514945413c3b3837373937383a383c414f
65725e576b73757e816b4c22162c2e37444a505b6063676a6b73757a7b76
6d5f3c32372e2b2a2d31372b349fa267716c5b58546a6e5957575266847b
827a554a5a71716a71756c6e7d766e60423c66643936453407070d0c0a0d
0d0c0d0f0f0d05214e625e545c5c5d5d5e5f5b5a5c6d610c0e29201e1d20
251c12171a1e1e1e151125447939000c0a0038bda6969796949898999a9a
999c9b9a9d9c9b9d9c9b9d9e9e9f9f9ca1c212100f12121010100f0b0806
0707080808090a0b0b0d0b0c0e0f0c0c100f0c0e0f0c100f0d100d10130d
0b0c0f111112131414160a2686afa8530f05090a05050609080f0a070606
060405060606070708292c03050807090a09070a0b0a0c0b0d1113121720
1305060904031e15030b0c0d12161d26313d474e545c62656e6a6c6d6f6c
6b6b6c6d6c68635f5650452d1c232e3648555146291f2b3035454b4f5d60
6269686b7b7c797b77655f3c2c34322c2d2f333a2d39a1a370786d585461
786e59555755668375675a585d575e7b7263827c636b777e7467464b5049
716f2302090d0d0d0b0c0c0c0f100d0d101b363f363d4a566065625d5b5a
6d580a10241d1a232820171418201e1d201c1a275977240a15050a6fb89f
9599949a9a98989997959c9a999c9b989d9c9c9e9f9c9ca09e9ac4110e11
13131011110f0d0b0a0a09080808090a0a0a0d0b0b0c0d0b0b0c0e0d0d0e
0e0e0e0e0f0e0f120e0a060a0f11121313150d1272b1d5d9770e040e1614
0705050a0f09070806070606060607070509313003040a07090b0a090a0c
0c0d0c0e131310191d0f090c0b09071b1b1014110f0e0c0a0c0c0b0c1313
181f242d31313a3c3d414041413d3c372f2823212220201c1c1f201e201f
24272b35424c54575a5f666977827b777870655e3d2d2f2a2d2d30323825
46a7a2867d6c56506b7f625f5e5451656569825f435d63678081637b7f70
7a8b7d7d8664564e58a09e22000c0c0d0e0a080c0d0e0e0d0f160e0c0f0c
0b1626343f43434c516e4c081d271c152d371915121d2c2720211a16306f
6010131a0233a7ae9499a7a68b9399999a9a969699989999999c99999b9b
9e9d9d9ba4c310111314121011110f0c0c0c0a0c08090a09090a0a0b0a0a
0b0a0a0c0c0c0c0f0e0d0d0d0e0e0e11100e0a080b1214141716160a169e
f5dce78616061326180c06070f110507070607080706080a09060c2c2a04
040a080a0b0a0a090b0b0d0c0d131212181c0d090807080a1a1c141a1715
141412120f0e0d0c0c0d0c0b0c0f0f13151315181818191d1b1c1c191c19
1a1d1916201e1b1a18202a2835414b54555d5c60747f7f7a78766f63553f
312a2b2c2c303130264baba18a816a666773775b585e55536e736d896332
556e7a996d5f74748ea09272625d52554672c29018010a0a040d3646320d
060c0a0f1e1a16191713110f0d0e0d14192437281221241d1b3832111412
1c322d2a261f0c367f380417140b62be9681a2e2d7b5b2beb48b879d9799
9e9c999b9b9a989b9a9b9b9c9b9ec51212111412101213100f0e0d0e0d0c
0c0b0a0c0b0b0c0c0b0c0b0b0d0d0b0c0f0e0d0e0e0f0f0e11130e0b080b
11141418171511084ad4eabe7f220716170f060609100f07050505060707
07090a09050a2829060208080909090a0a09090c0d0d111011161a0d0807
0707061b1c13181a181817191a171918131214110e0c0c0c0d1213121413
13161716171616191716112549250c1818151f27283440464d555b5e6a7e
7c797a77767063523c2f2b2a272b2f30302355ab97867a6b7886837e5a50
5b585c6f7e847e6048616b7a8f7163777494ab8f776c624e533c6bcf991d
010f0d010e65908220000c0b0f1f241f20201f1d1a1d1c17151614100b13
20201d2337220f14112233292e2d220f48711e09160b168eb795828bd0f6
f8f4f7eebfabbbc599819c9b9ba29f999b9a9a9a9a9aa0bf131310141311
13121011110f0f0e0e100f0d0f0e0d0e100f0e0e0e0e100f0e1110121011
1413121315130e0a0b101214171816170e1086cfac7629060e160c09060c
191204060607070605060606070403202f0b030807090a08090c0a090d0c
0d12120f15180b0608080507161b131617181718161718181a1a191a1a1a
1312120d10131314141416151617141718181911225234161617171c242b
363e464c545268807b767c7975756f65553f3329242b2c2d312e2a4da398
7a7d73838f8a86655b656d727577877649556a6a648279686b6f77858071
6d75615446456d691a030d0b0317648b7f22030d0f101f1f1d2325232221
24262120221f1f100e26241f313b160e151e2b3b3c3836282e5745171419
0838a8a79aa29299cadadbdfe9faf9f1f9d2aeb7c3b08b919e9a9ea19c9d
9c9cc213151213151213131213130f110e0d11131012120e121211121112
111111141412141613161515151515120d0d0f101214161416140965cbaa
8633040c0f0d06070b1c15060606050606050505040604011d300a040909
080c09090b0b0c0d0b0d12141319170a0706060607151a15171816181918
181817161919191c1a1a1a18171413101112141716181918181a1a1b1f1b
161d1b1817191c212c313e4d52505f797f76777a7774746d645743352722
2d2a292e34274dab97787f797e8a8b816d657787858580867e5d4f626266
857b7290796c7061524b4c4f4e464a493e13030d0b00206783711805130a
1b35281f232422232325252425242524100b2325213935100d1424344044
433c3957551f1f1f170b62d5b793949ca5a4aeb1b5bed2d9dcddf7fcf3f9
e6bfb2bebe94869e9c9ba3c813141414131414131312110f11100f101310
13121013131110151513121315151315161516151516151514110f111112
14141416130656d7e3a646090812060705070a0b08080605040604040505
0404011d340d020807090908090b090c0c0b0d1012111612090707070705
131a14161817191a161819181e211c1b1c1a1a1e1d1b1c18151512101415
171a18191a191a1e1c1d1a161819171c21272d3b4a4d56787f74767a7771
75736b6456473722232d2b262d322c4f9e98868a827e8385846e697a7f7e
81807c82795c61695d7a767292826b6b5a493e3a3d4f443d453d0d030c09
0029657e690b08130c15302b282c2f231e1f242722222326270e0e22212f
3a210d111c262c304c54464f58322225251b153f84b4cdceb7aea9a2a9a7
aaaba9a9acc7dbd8e3f0f9f6f4f6cdadbac29d8ac1151414151413161313
14110e0f1111101311141312151411111514151413141512161613161615
14161413121113111116141316120633cbecb0520a0b0f120e0b04060506
060705060605070705070400173212010708080c0a0a0b0b0b0c0d0e1011
0f1711060606080604111811151618191a171517161d232321201d1b1f1e
1d1f1e1d1d18151615191b181b1d171a1b1b1d1c181718181821252a323c
50787d757577797773747069625547361f1d2c29242b3432549f8d688088
817c858b5e587b81847f807f806b5c6b634c738a77797d7a6f644b40363a
513e334f3d09030908002d6c7c610c07130f141b1c19252f273122192724
222328240d0f27273b3d150b11263a11144c34467438212c282320241a00
2b799a97bed7d5c8c8ac9d9da4a6a5a7a7afc6d4dce1e2f8faf3f8d5b5df
1314131415111415131413100f110d0e110f111412121411121412141413
16151315151418161215181412131515141214131314120553e0dca45d16
05142a230905060806060704050606070a090c08000d311b010707080b0b
0a0c0b0c0c0d0e12121115120805050606060d1410111616161616161613
1415181b1d1b1c1e1c1b1f1e1d1c1a1d1a18191a191b201a1b1b191e1e1a
171b1718202125272b6e8f7271757575777574706961574a301f24252624
28322d4ca7873958897d7c7e855f56757e8784827e746d5d535b51536a80
867a777d74625a42394b382f4e4207040d07003971795f090a100e17251e
121b151b2f33262423242425250d10272c4734080c14423f041b3c1a3a51
262a221b33282b220301010010407a97a1dae7d6cbbcb09895a4a4a6a5ab
aeb7ccd7dde4f2faf91415161314131412121514110f0f0d0d0f0e101111
121112131413131313151512141513161612181915151314171714141714
15140b38acb48356170c0e2b1c04060607050709050506050609080a0903
0b2e1e0105060709090b090a0b0c0b0b101111140c0606040505060c110f
1117151214151717141616151517181a1b1d1c1e1c1a1b1b1e1d1b1a1817
191f1d1d1d191b1f1b1d1917191c1c1f16458e7f71747674777472746e67
615b512e1e2223242328332e40a0833d587880878750577c797a7f7f8078
6b645f585c686a6d7f7965687469655d494a4b3a41552c03050c05023e82
803e060f120f1b211c191d1b16142329292e251f211f0d1529364921090b
1e532a002d50342b2023290e07393a2b18020507070605030010437daaae
bcdbcfcdbcaca3999ca2a7a6a2aeb3c8d2f2141717171415181311151511
11110e0e11100f1112121213131414141412141513141413151413161714
15141316191415181515180f124e8d8e591708100c0c0906090906070705
0606040404040405040b2d1d020706080709080706090e0b090f1010130b
040505050505090e0e0f1414131414141416151a191616171b1a191c1c1e
1e1b1b1f201d1e1d18171b1c1f211c191c1d1c1b191918180e247a82686e
7372747675716e6e69605852321b20222121253134449b894851777a868e
3c3781736a827f7a7c745e58615f667b7c817b6d82805d50463c47483f6c
712300050b06052550522f111211111d201e1f1f21201c18112026232c30
1a0c1b2331351e11122e4c0d12585223171f22240a0a3f45310c01060807
060707060805010d12346b98afb0c2d2d8cbb3a79d9da2a9a3add1141416
1715141616141515111414100f12110f1111111416131616141513151614
151715161614161815151413161816161918161813154891af8026030d0f
0a0a070a0c060706060605060705080d07020b2e200208090709060e2126
0f07080a0c0f11120f040505060505090e0f0f0f12141614141514151617
1817161a1e181a1c1d201f1c1d202020201e1a191a1e201e1c1e1e1c1c1b
1a1a0d0e618c696b6f6e72747374726e706960574937201c251f1e263237
41859159607a5f6a91493683786780827f7d75706e64626d7571717f818e
896d68553342473151612f06070c0a0c0b090d13110e0d152519191d1f20
2023221c1b15172432260e1a272119191618354327374f23101c1f242408
1e484e35050207080707060404060707070806070d0e244a7ca7b2c2bfca
d6bca8a29fd0181716151515161514131513131313110f10111010121215
151715151713141714151815171514181816171512171916171919171a18
143f94a67f37040708080405070a060606060605060607090e0903062d28
0306080707012a65694a05040c0a0f12140e0405060605050a100f0f1211
141914151815181817121a1b191c1c1c1c191c1d1b1e1e1f1f1e1e1d1a19
1c201e1e1e1e1d1d1c1c17073e8e7563706f707174737374716f67605a48
39281d201f1e27353d416380828d72396b95425e90666e81858682716662
56507f866d6f7677736a66664e1f45502b3c482407070b090a0a0a0b0c0c
0e0a0e2444381a1a1b1f222324241e19161b1f12182a23130e0a315d422e
3318171c181d24210c36644f2e0500080908070603050708080909090a0a
0a0a0a060d1a406293b5b7b3bcdbe9171a17151818171414151614131415
13111112100f151511181814141914141716171a17151615151918171412
171c181719171a1a1c093caea1834a09070a0a0c06050605050606060707
0706050506060521320704080706004094887718020c0d0e111409050706
0606050811100f1112121515161815171d1b141b1b191b1e1c1e1c1a1e1c
1d1f1e1f1d1d1f1f1a1a1e1f1f1e1d1d1b1b190c277d8361686d6c707470
717471716f69625a49392a1f201c181e27405f5459889a45237b91426383
5d5c6d6c686e736b52444a74826676736f8685715d442447522e435a2101
090a0a0a0a0b0b0d0d0c1108113b402f3d3928231c1e20211d1e1b0e0a1d
2624273033334e4216131b1a191b1e221914556f52280204080709070806
05060808080a09090b090909090b0a0b0f1319354f76aad5161717161b17
1315171615141516151515141312101315131719171817181617181a1a19
151517151818171513161917181a16181a150b57c9b3965709070d241605
050605050607050708070604060605032231090608080800428d85831b01
0c0f14111209060707050605080f0d0e1210111313131713141919191819
1b1c1a1a1c1a1b1c1c1d1e1c20202021201e191b1e1f1f1c1d1d1b11146a
886367686c6b6c75727073726d6b6861584a3724201f1610100a2f83653b
789b2f18808e45535030383b38313240745c3747646c6b857956707e7160
5446453d3e453f1a02070c090a0c09090d0d0b100f0c0b0c1d3c3d2e3538
3a382f3634332725353631243b4c31141a1b181a1b161c201d103b6a6065
200108060808080708070807080a090909090a09090b0c0a0c0e0e101110
0f163c191714181b16161816161714161614141616151412101212141514
161815161617191916191917181818191815151617181a191819190e3fb0
e1d468100410231905060806050608060608060606060804031b2c0d0509
0809003792897c23000c151215110b060806080704060e0d0d13130e1212
131612121817171a181c1a181919191a1b1d1c1c1d1d1c1f1e1e1d1a1a1d
1f1f1e1c1c160f4a8d686068666a6a6d7071727271706c6a6059543b231f
1b100d140e0c60834b699c3621748e4f4132161c17161a131651573a3652
72687980625a5a6060515b54313a3f381703090c090c0d0b0b0e0c0b0f0e
0d0d0d0c0e0e0f22313e423d414042403f46483b2117191c1b1918181917
181920131b6d6d5d641c010607070b070807080908080b07080908080908
080b0b0b0c0c0c0d0d0d0d0c191915171816171716171716181616171715
171613121512111713151916171716181817181a1a1a19181b1a18161616
1a1916181a1a151579eceb8f190b0d110f08070a07070708060808060606
060a06031d310f0307090b002c8b8681280011131212140b060607070707
070b0c0b1114101110141313121616191a181a1b171a1c1b1a1c1c1c1d1c
1c1e1e1f1d1b1a1a191b1e1d1d19082a8b7e5d6a6768696c6e7172717373
726f6b625c553b2821180e0e18150c4f654a719a47196b8f60371f191e1d
13111730543a343954715a5f74677c907c6f453c4a2e4366430c020a0807
080b0c0c0c0d0d0e0e0d0d0d0e0f0f0f12100f1415141a1919191b181a1c
1c1a191918181817181a1815315b76626a6815000a070b08080708090908
090a09080a09070a0a080b0b0b0d0c0a0d0d0d0e0d171a19161816151918
151617161513171715161615141713111716141717171818181919181816
191a16171915171714181a16171b180f1b68b3c89535060e110e080a0c0a
07080706070605070707080603172f1305070909001e848c8435000b1511
14140c04050607050709090a0b0e0f101311131312121615171718191917
1a1a181b1b191b1c1a1b1e1b1d1d1c1b1c18171d1c1a110d6490666a696a
686a6a6d6f707172706f70686362533c2a2216090c160a46743359808045
236588764822131a1f1715152a5351353566875758696585a99d91703d40
2c57b05e05020a09070a0a0b0b0f0c0c15160c0d0c0c0d0f0f1113121415
1418181717171b1a16181c19191a181819171a1b0b3698775a77680d0407
0a0a090707050a0a08080b0907090a08080a0a08090b0c0b0b0b0b0d0c0d
161716161a14151a19151517161513151513151714161414121416141614
131717161919171815171b16191915161717171a19171c1a150f4db0ae94
3f060a0a080506090806080705060505060606070602102c150407090700
1a85948e3a000e1112121708040705060607080a080c0f0d101110101211
101212151612161514151614171a17171917191a1a1b1c1d1f1d19171a20
1a093c877365696a67666b6c6b6c6d6f706f6d6d6966634f3a2f1f181f16
06187c734875756248295e8c8341111115131611202b484d3e2d56816865
6c6b7162595d583e3f2e4474490d040b0b09090b090c0c0c0818260e070a
0c0c0c0d0d11111212141614131517171717161819171916161819191c0c
2c7e453e8d5e040408060a07070907070807070909080908090908070907
080b090909090a0a0a161915191a18181916191717171617181616181816
1716131516141516141418181718171717171819171a1a17161517191819
191c1c140a59d1d8c16403090c0c0b060505060607060605060605070804
030c281c02060a0901126b958533030b120e15160a040705050908080a0a
0c13141515131717121f24141420242025221f2324242722222624252224
292829282b2c2b2925172e7b776869696a66666b6e6d6d6f6e6e6f6e6a6a
675d4f40331b1b542f0048835f918968765b3f58877f2d2c1a0713131522
3767613b3f3a4b6a7a6269665b4f40353f412f2d37270a080a0c0a0b0b09
0b0d0a0b1233160209080e0c0a0f10101011131313141615151715161817
1518161317181c1b024f7604349647000707080907070b0c0a08080a0908
090907090a0a08080708090b0909090907091a1b15181a181b1816181817
181819161816181816191816181816181515141716171716171816191916
1718161717151615181a191a110a76ecd1dc840e09161f0f0a0707060709
0706070708060b0a06020e25180606080b080a30514f250f121012121107
050705050807070c0b1018191d221f22282133392321364041443e3b4349
4a4d423e4243433b3b43453d3842454b482b2770856c6e6e6d6c6a6a6b70
706f706f706f6c6e6a645d5443331c22743d1a897b6b9c845c816643528c
652c693c010e14141d357269423b425d8d78575f5f5353492630452c2c2d
2206060b080a0a0c090a0c0b090f38240105060a0d0d0f0f101312131314
161715181b171617191818161518171f0e077555006a8928010709070807
07070a0907090b0b07080908070a0a080a08090a09090a0a0a09081b1c18
191d18171816171717181918181915171716191916191a18191614181615
171717171616191817171616171717171616171818160b38bce09a621508
171b0d070707080708080605070705080a06040c1e190707070a0d0b0808
0e121111131312120a05060705060808080b101c1f262c2b2a2f35373d30
2b4c4a4d5046404a5552564e44494c4541404b4e363144454d482b507e6b
696e6d6b6a6a69686e6f6c6f70716e6e6e6a65615a47361f1e785447aa90
78827f65767e4a3d876a2d6f5a1112160a19617b5a493b3e99a56f575f6b
616261403f48383c3a1903070908080a0b0b0a0d0b090d312e060809090a
0a0d0d0e111213131415151617171616161717171517151e380c21882c15
89731600070808080707080808080708090707090a070809070908090a0a
070a09090a0a1c1e1d1c1d1c191917191817191917191917181917181a17
171c19181716181818161514161515171617161617161617191a16161a17
1a11127ad6bb711f030f170d080808080808060607080705050808050b1f
1f060509090b0c0a080c0e0c0b0f0f111208040605060609090808132026
2a31302a393c3d402f2d525253554a4354585454504c4b4d4c414150503b
30404e4e424e7a7369696d6c69696a696a6a6d6f6d71716f6f6b69676257
45381e266b6e789e928f74736e8186584a7b6a325a4529281a082d73724e
423e3375ae6b525f6d6b625759694f39624c0e0406090a09090d0a0b0d0d
0a122d310f0c100d0b0c0d0d0c1011131213131916151615161616131515
110c465e0552820c3b9a5f0a01070605060505070609090809090809080a
090908080908070908070909090a091d1e1c1f1e1b1b181a1a1919181918
181817191b18161717181917181b17171919171613161a15161515151517
171718181a1918191718180f50b9b88e23010a130e080c0a090807060608
09070604050705081f2906030906090a0b0a0c0e0c090b0d101006050606
04060809080a1423272f352b2538423f423a384b4c52564945575b565353
514d535545424f5747314255484f7d7a6d6f6d6b6c6b696869696b6c6c6e
706f6d6e6d68676651423a1c1d658592908b8b79727882876e506c773438
3630331d053f937c472e37335c8e83535d6b5e55525365523e765805030a
070a0a0a0b0a0a0b0c0a0f273a1b0e15141211120e0e100f121314131515
161714121413121513020d7351067654016d91520d0109050506050c1b0e
0609070709090707080808090809090808080709090909081b1f1b1c1d19
1a1a1a1a1a1a181919161a1918171a181717191a18181b181a1b16171b17
161f201b1619191717191a171918181b1a181b120a80fbd6792807090e06
06070a08070607060708080405050503061b2f0c01070709090a0c0c0b0c
0b0c0f11110605060505060508090a131d2a363e32262f3f3d3f46484949
54584946565e565555514e555d493f4c5a4d39465b517085716f716e6e6b
6c6c69696b6b6c6e6d6c6f6d6c6c6967625a473e1e115da9958e947f6c70
7c6a8d8e485e882f1f2e372c21141d6d9372402d425463877a6b766c6568
6b6d575bb08b0d00080c0808090c0a090a0908111d3c2a0e1b1b18161816
17171415141311101314171310131210071d3a40722c1b80290f7b88550b
010907060506132b1f07070b080808080809080808080707070707070708
0809081c201d1c1f1c1b1b1b1d1b18181a1a171719191618181819161a18
191c17191b18181b1a181e231d1a1b1c1b1a1c1b191b1c191b1c1b1c170c
61e1ce70280a0b0c0c0a08040806060708060708040506060405142a1002
060709090b090c0d0b0b0f0e13120505060505070606080b151e293b4039
2b34403a404c51544a57614c495b5e5a535758505a645244505e4d3e4c59
6a837a70756e6d716d6b6b6a696a6c6d6e6d6d6d6d6e6b6a66625a4e3e22
146fb29a9091726a77886077a25c4e90371628392b20200e2e7c82513739
657a77776d6b67695b456c7461b1941f03090e0a090a0c0c0a0c0b09111c
3a2f1b232121211f1f20222120211e1816120d0e0e101109093256788686
5153771626807b490a04060905050717231c0c07090a0908070a08080909
0707070808080709080807061c1d1d1d1e1d1a1b1b1d1b181a1b18191a18
1a1a181a1b17191b181a1c191819191a181a1b181a1c1d1b1a1c1b1c1a1a
1e1e1a1c191b1d1912398ea48943080917130e0a08060706090906070605
050606050517290e03080808090a0b0b0c0c0a0b0e131106050605050506
06050a18212d3841382433453b455c5955575c61545960615f56585d5961
695c4c5b66533a476e847f747673706e6e6d6e6b6a6a6b6b6d6f6c6c6e6d
6b6c6a666659463c1f28739e9ba07c516a889a716c9a67458b3f111e4731
1d1c094a8c623b2d256095775c514c5657390b3b6e575c4114090b0a0b09
090b0c0d0c0a0d11163434212725272a2a26262a2c292e30302d26222112
07041c48738884878d878a7644576645310804090706050a1c2716090708
070907070908080a090808070809080707080808081c1c1c1c1b1c1c1a1c
1918171b1c19191918191a191619191a1c17181c1a1a1a1819191c1d181a
1b1d1c181c1c1b1b1a1e1d1a1d1d191b1c1524607f82480c091418080707
0605060808060606050606070504172c0e03080809090a090b0d0c0b0b0a
14150504060505050506050918242e363835242f45404662665559626059
5f6563645c5e5e5d676b63565c6b5f3f41818a777476756f6e706d6e6f6b
6a6d6d6c6d6d6c6e6f6a6869696752443c232876958f6f474b7797936f6e
9f6d3183590d114c4f211606337e744c3028678d735c4b4e4e4624042a5e
6c5c200c0c0a080a09080b0d0e100f0e12122b3b252d2e2c2e3130303031
3336393c403e444635271b438185878c8f8a867c78767363531e05070908
05080a202e14040707070807050607070909080807080807060807080809
191b1b1b1a191b1b1b1b1815181a1a1b1719191a1a1817181a1b17171a19
191919191a191a1b181a1c1c1b1f1b1b1e1d1c1d1b1d201a1d1c103888b0
ab6d0f03100f0c080807090607080706060505070605050f2f1702080909
0b0a090a0c0c0b0e0b1013060405060505050706071729343b3c3629314c
4647626e5f5f6462586569696b5f62686165726a565e7066495d83827676
7474717071706d6e6d6d6e6e6e6e6d6b6d6e6c6b6a686351464322237eb0
771a15619b9587796b8f8126607a0f04456323170711537769312a698d80
716f634c4a2401284c95aa3c000a0808080807090f13151616180f273d2c
3438383939393c3c3c404340444b494a504f51565b6675848a8781767170
706d7f8b2f00070c0506050e20271a060709070908070708080808070908
08080707080807070a1b1a1b1c1a17191c1b191a1817181c1a181d1c1919
1b191819181a191818191a181b1d19191d181c1d171b1f1c1c1f1d1e1e1a
1d201c1e180c52dbf2ffdb2e000e170a0b0a0d0a08090a07060706050606
0605092b1e0308080a0b080b0c0a0b0b0c0d101106060606040605070808
18273646413e353e4f454f696c63636d645b6b6c6f7066667166667b7358
5e7766617c82797e75787672727571706e6d6e72706c6d6e6b6e6e6f6d6a
675e524945292794ab4c09197bb6957f81697a992e3a90270139652d140b
15606453332d5c6d607a8e7e665e320d334179c359020807070707070a0f
16181a1a1d13254136393f424443414448484a504f505451545856595b62
63696d7680776d6f6f6e71848d29000a090806050e232516070b09080808
07090907070907080a080908080908090a081b1c191e1b1a1a1c1c1a1a1a
1a1b19191a1c1c1c181c1b191a191a1919191b1c18181c191a1d191c201b
191d1e1d1d1d1b1c1a1b1d1e1d1d142278dae2c8470213110c0808090b07
08080606070505070605040c281803080a090b0c0b0b0d0a0a0d0c111107
05060505060607060a182b35433f3b424b4b45556d6c64666f65626e6d71
70686f75686c7f755e64736f7386797b7b78777a727575717072706f6f70
706f6d6e6e6e6c6b69665b514a48283b9c8f41052b8aa3a1868a455cb250
139248003b7136150919554830222d6572576c7d6f603c17254c3536593a
060e17110b040b0e10121718191b1122443a3f42464b4c484a504f505555
555b5a595d5e5f646a71726f6e6e6d6d6d6463606b5f1b04060807060912
20280f060a09090a090707080807060808080607080807070809071c1b18
1e1c191d1b1a1b1a181a1d1a191a1a1b1c1a191a191a1a191718191a1b1a
18191a1a1a191b1f1c1b1d1d1d1c1c1d1c1c1d1d1d1e1f16116ccbd28e22
040814150d0407080706070505060505060505030c2f1702080808090b0a
0b0e0b0a0c0c0e0e080405050505050707081b323a3e3e3d44504b465d6c
70696b716268727075736c737c6d717d796465787b80807f7a7c79787777
7675737472717272707271706e6f6f6b6b6a645b5351523a4391864c0735
807c9a8d8d4e39ad931e5d790a1e764511100c4b44292727586d545e6b6c
58180021492c132026090a2129210e0817151215181a1b0e1f4640424948
4c504e4e5253545758595d5d5c6165696b6d7673706b666a665c50484039
280e07070709080513332d0b050906090a090a0a07080907070907050808
0807070809071c1a191c1b1a1d1e1b1b1c1a1a1b1c1b1c1b1b1b1b1b1918
1b1b17191a19191a1819181a1a1a1c1c1b1c1d1d1d1f1c1c1e1d1c1e201d
1e200b1d96f2fbda41000b17240e0709080607060506070507070604030b
291d040808080a0909090b0b0c0c0c0f0c06060606050505070408182f36
393b3e49524d445870736b6d72666a76767779707883747283806b667d85
857f7f7f7d7a797c7976767776757271757172727071706e6f6e6a666059
5a5b475885966f102e716e9d635370458aab4e459144026960140d1c4c4e
32274969583e464d544d1800113122131b1d07071c2a3221121918141619
1c1e12223a2b4555505054515557575a5c5c5d606062676d7271726d6a69
656c69574e44382e2a1d0d050708080e192136330a030b070604071a180f
0b0a0a0809070708080809080809081c1a191d1c1b1c1b1a1b1b1a191b1a
1c1c1b1b1d1a1a18181b1c1a191b1b1a1a1a1a1a1b1c1a1b1e1c1a1d1d1d
1e1e1c1d1e1d1e201e1d1e15155bcbfbe0600b091f180e06080906060806
0607070607060604062321040708090b0c0b0a0b0a0c0f0c110f05050706
0506070707071b3137373a3e495753394f77746d7273696d76797c7a7679
88756b848d756d7d8a837c807d7f7b7a7b79777777767674757573727573
737371706f6b6a646366604b5f7e8d7a20217c99953b1681686e996c4574
7a103d5a1c0b1e4960583b4e836f45425c453e2d02192e2c4b2d1001091b
29302e1f1a181617171c1b18222e111b374c5d5d575a5a585a5f5f5f6261
666e7574766e666b676665604e3d372b2019150d060708070c1b2c3f4721
0e0b0506050226441d1116120f0d0c0c0a0807080908080a1d1c191b1d1b
1b1c1a181c1b1a1a181a1b1c1a1b1b191918191a19181c1a181c1a1b1c1c
1d1d1b1c1c1d1d1d1d1d1e1c1f1f1d1e211e1d1e1c1140a1c6ae62110b17
150d08070b06070806050606040505060307252304050a08090b0c0d0d0c
0c0f0e1110060506050607050606081b3937343d3f4959523d5372746e72
756b6c777b7c817a758c7f647f96826a818886807f7e7f7d7c7b7c7c7a76
76787877767778767271747170726e696b69716f4e60797f8f2e1089ae88
1a1f857b60896e4d538a5914302d0f154d53503b2d5e6d4c55b2a1594b1e
2e3d297e5d0e000c2326312e271d161919191d1d151938190007192d4157
66675b595d61616569676f72717169696c615b574c4232261e1511110d06
06080806060e2a43332019120d0a001a6137101e1915161513120f0c0c0a
0708071d1c1b1c1c1e1c1d1c1b1d1d1d1d1a1b1b1c1b1b1b1b1b19191b17
1a1c191a1d1a1b1d1b1c1f1c1b1d1c1e1e1d1e1d1d1f1e1d1d1f1f211e1a
1055baaf88551507120d0b08090b08090a06060606050505050408222106
050a0e0f0e100d0f0e0c0e0f110e05050605060506070608203637393d3a
4b584c416173706f74756a6a787b7e837c788d836b7f9d88707c8c83847e
7e807e7d7f7d7d7b7a787a7977787879777275747272756d6e706d737256
69787c8634138aaa56093c818a625e724e526689311f270e14646f3c3132
5f542239a59f61736e514d406853130a0d1c2a2a2c2d26161718171b1e15
123623000604000921344a5e67656360676e6d726c676665666350414233
292318120c0c0d0b06060708080807040b13141d1815130813423219201f
201e1b1817171415120f0f0e191d1d1d1c1d1c1c1b1a1c1a1a1d1a1a1b18
191b1b1c1a171b1c161a1c181c1b191b1c1c1b1c1d1c1d1b1c1d1e1d1c1e
1f1f1d1e1d1e20201b102eb3ce8a6417050b090606060606080906050606
05060606060311250f030a11131515141614101215170e06050505040505
05060c1b33343b3d344a574b3f5e726f6d73766a6c777e817f7f7e8a8a70
80998d75858988818181837e7e7f7f7f7e7a7b7d7b797b7a7a7975737775
757674737672806d4c6e7d7b8f391c997f1c0a47777d8133636e50556f7f
4325150848613e3a333f2d1019393b2c507a552842653e10160e0e272e28
2c2c19171915171e16102e26050808060401000b273c3f54727876716e69
6361615d513d2b281e19130f0c0a0a0a070607080709090705070911150c
0c0e0b1126281a1b2024231e1e1f1a1919151415151a1b1a1d1e19191a1c
1c1a191b1d19191c191a1a1b1c1a191a1e18191b181c1b191d1b1b1d1f1e
1f1e1b1c201e1e1e1d21211c1e1f1c1d201a0c4fd5f1c98d2a000d181305
05060609090605060605060607050415220d0509090a0d0d0f1619181510
140f0906060506060607050a2233373637394a544a3d5f6d6b6c7671696f
7a808182817f8f8775829a907a84948786828284858180828482817e7f7e
7f7f7c7c7c777477797777787777798a6b3f737d7d8f433a9d5f0e0a3b6d
6e96342480764d35957a21120d39482f30161523302e342e2e5a71300632
553d0c0f1507162c282a331e0e1717151918121f2709070d0a0906060401
0206193f535e61666c61554e4935291e18120e0c0b0a080a0a0707080a0a
0b0c0b0a0b0b0a06070809030f302b1f1d20232724232422201e1a1a171a
1c1b1a1c1e1a1b1b1b1c181a1b1a1c1a1b1b1c1b1a1d1d19181c1a191a17
181c191a1b191c1f1f1e1d1c1c201f1d1f1d1e1f1b1e201b1d23131f6db6
d6b99330040d1b1b0a0707070a0a060607050605060504081e2009050707
0707050712161b15040a0a0807070606050607070b23383637343a4b5545
3b666c676c7772636f7f7d82837b80948974859e937d888e8d8789848781
838382858484807f7f81827f7e7d7c7c7c7b7b7b7d7a7c798b633e778077
87544a935f0c0c446d537e810c4ba07c2059af400004254f37231a364447
473d272356541c173441310908110b0816242a2f280f1219151716141b27
110a0d0c0c0c090907050404000718232e403c322a251d14100d0a070908
08090c0905070604090c0e100f1213100a0c1109000e2527272829272d2f
26292a292523222123191c1c1b1c1a1c201d1b1c1b1b1c1d1c1d1d1b1c1c
1c1c1a1c1c1b1b19191a1a1a1a1e191a201f201f1d1d1f1f1e201f1d201f
202320212310339e9e89896d26080d120c080607090e0a05050604050605
05060619230c070b0707090708121019180206090606050506060507050e
28323331353c505942376e6d656d7572656c817e838379808f887b879c92
81888a878d8788868482838184848284817f80828080807d7e807f7a7d7c
7e7b7a8559387b817b79605a936d100f6e7e41428d63136faf47149b951a
00154c3827335568452c2d2823191012262c352408050a08070911252928
1c1217191716121226180b0e0d0e0c0e0e0e0b0a0706050504040506080a
080906070906070706090d0d0804042640180a0b1111171c120d1d291f05
071c18111e303941463229282a272627293619191919181a1b1f1d191b1b
1b1d1a1a1b1c1b191b1b1c1a1b1b1b1b191a1c1c1a1a201d1b212220211e
1e1e202020221f201f1f221f2123192a85926f6e5c220a0f0a0c0808080b
100c040706050506050706030c2011050a08070807071211151b04050808
05060506060706060e2831332e283f4f5748356d71626c7671626f7d7f82
7b79878a807b879f907e888a8a888887888686838384838086848182817e
8082807f7f7e7e7c7b7d7d7c894f386d807b84725982811c24827d552155
973e247f8b173ab9750b0830302c34426c5c353127211c121522232d2606
060a070709070f2a2e261313191716120e221d0d0d0f0e0d0d100e0f100d
0c0b0b09080706070809090709090b0b0c0b0d130f0906011f6b8759423c
2f2c18070b1725251609142f26041328353f3d42473a332c272d391a1a19
1b17171c1b1b1c1c1a1c1d1918191c1d19191b1e1b1a1a191a18191c1c1a
1b1c1d1b1d1f1b1e201e1f1e1f1d21201e1c1e1f2020221f233c4a406589
4a09090d090908080a110a05070906070606060603092911030807070705
08140f111907060a070606060606050602102432332829414d50453d6c6e
5f69786862737b7b7e7771898e7577919995808b8f8b8c88848888858486
868484838683848381828182827f7e807e7c7c7d7d875c467679798b7758
6a76363d7d7d6416307b7b2f3088631c509b6a040a2c2f383c4e5542372b
23201b181d1d262309060908060a0604192a311c0f181718120e211f0c0e
0e0e0e0f100e0f110f0f13121012100d0e0f0e0f0f0f1110111111121412
08080800185f646259405468483017070f100705243620110d0f0b132838
3134352d2c3b1b1c1a1c19171a19191c1b191d1e1a191c1b1c1c1b1b1e1c
181a1b1c1b181a1d1a1b1c1b1d1d1b1c1e1f1d1f1e1d1e1d1f1d1c1f1f1f
22201e2337321874ca731101090a05060507090805070708060706060601
0c3514010a0b161f1a1a120311170708080707070606070907040d2a302f
262e444a5445387074606c756463787d7e7a707788887a7b919a8e8d8c91
8d8c8c89898786858688868584878583868585838485827f7e7e7c7e7d7a
8857567f7c788a73625f664d5175776e1729575c6e334c89701733a2711f
1a282b393e3c454f2f110f151915121b1b0e090708080807080b11272e11
11191511101b1b0c0c0f0d0d0e121010100e0f14120f1515121215131312
14151314141212171105070609150c0a0e11082357614343462400080a01
05212a1e1b1614110e0d141b1b1d2f1b1c1c1a19191b1b1b1c19191c1c1a
1a1c181a1c1b1c1d1e191b1b1b181c241c181e1b1d1e201d1e1e1d1d211e
1e1e1e1f1e1d201f1f1f201d233a373172a86e17060f090a060607080705
0707070707050708020a30170510101e2b2b271e090e1b08080a06060807
06070607030f263230252a444c5447386c75626c716766767b7f78707982
807b8195999389908f8e8e8c898987888685878586878786848486858583
8483817e7d7c7b7e7a88654c7579788175745e4868656e8d640a3c611a5e
803d579e5e00399f9f441715354f4040613f06020b0f130c1a1b090a0707
0708060809070e2a220b1615100c161d0e0c0d0f0e0f13120f13100f1210
11131312121414141215161312161313180f0708060a1b1d18201b110a04
050a20472e090c0d080527301a1f1f1d1e191816140f0b171b1c1c181a19
1c1c1b1a181b1a1b1b191b1a181a1b1b1d1a181b1c1d1b1d28201c1c1d1d
1d1e1d1c1d1c1c1e1d1e1e1d1e201f1f1e1f1f2020232f2a44686e461506
0a0c080806080707060708070705050706022c4b10030d0b0c0e11101a0f
0a160a07080607060606070607050b263032292a454b4d4b356679616a73
686c73797c796d76847d75869a84728b8e918b8b8b8b8786878785868785
8687878785878886838281817e7d7f7e7c7c877447618278767b8d682767
776f915305327228086d803554953d002c8aa672161c524d3743340b0709
0b130e1e1a04070907080807080a0904111e101317150e0d24150a0f120f
0e141510131515161213131311121313131416141414151415160f070708
09090d142323191b1d1a1209050b100f100c04235552382c241c1e202620
1812241d1d1b1c1b191b1c19191a1b191a1a191a1c1c1b191b1b1a1b1b1a
1c1f1a1c201f1d1d1d1b1d1c1d1d1c1d1c1b1d1f1b1f201e1e1d1f1e201f
20201b2f5d61622602090a08070707080605050707070606060402295228
070a0a090a0709140d08110c060806060505060506050610222b2c2b2c3d
474e4b2d567a616b71676f79797e7a6c79877f788c914138949f848b8789
878886868585858586888788878686878a85848480807f7f7e7f7a827c50
54887d767d937a20508569894a07425055130f637b3d518d2f001866ae8e
343548493f27110f181d1715231c0308090608070707090808090d0f1018
17100821220912171111141514131a1c1b18161713131513151815131714
16161516180d08080709090a08090a0c151d211b181b1f120b0e0e090635
584238496149332b201e1e441e1e1c1c1c1b1b1b181a1b1a1b1b1a1a1c18
1b1f1b1c1c1b1c1d1b1b1c1d1d1e1c1d1e191b1e1c1d201d1d1e1c1d201e
1f1f1f211c1f201e1f1f201b3259849e4200040a07070708080705070706
070608070605001125110d15120d0908130d07110b050a07060606050606
070d1922272f29273c4a4b4737566e61686d63707d797d7a717c8a7e7d88
51063bb69b898c8b88888a87868a86848786858589888687858785858581
81827e7d807b7c7e5b547d7f7779907f1d4c8764822a15521c544000075b
863255882d010540969b684a504f39222650421f161c1205080705070706
080907080908060c1514120818200e101310121213141219211a19191a17
16151516181615161514161517130e080808080b08090a0a0809080a0f13
1a251c161a15110f06060d0c296155413e291c29451f1e1d1b1b181b1a19
1a1b191b1d1a1b1c1a181b1b1b1b1b1b1d1e1b1c1d1d1e1c1c1b1a1c1d1b
1d21231f1e201f1f201f201f1e1e1f221f1e2223122e829fae4f00070807
04060706040607060706050607060603101e161a1f19120d080e0d070e0a
060808060607050507091219242c2e2a223c484d443f5d69626a6961727a
7a7d727381827f817912287a9e8e8d8c8c8a888887878785848584848686
8888858786858686848081807e7f7b7d7e695a7b7a7b7787711e52826971
1f2f4c0637660f00076c76216e933b0906406f7e94794e332525718c2e0e
20140908060607080708090908080a07090d141109151e0e11100f101213
1212161b1c1b1b1a19191a1717181516161613121415130a070609070909
0808090a0a0a0a0a0a0a0b0f131a1817191b17120d05030d132119183f46
1c1d1c1c1b191b1b181c1b181b1b1a1b1d1d1c1b1a1f1e1b1c1c1c1e1d1a
1e1e1b1c1c1a1c1c1a1d211f1e1f1f211f1d1e2123201f1e20221d231f0c
66cdce993104090f0c0a0506050406070606070606060606030b1d18222a
18110c080e0c080b0a0608060606050506050b0f1923292f28293a424c40
426369606a6c5d6f787c7f6c7386807c86763f6b958a8a88898b8a8a8988
8886878684878585868988858688848788848382808281817884775a7081
7e7a83752b497e8167174c460010664000063f5a3d408ca14c2834242f7e
8d744a05003b8731011c190d0807080507070706080807090b0909121207
1123100c15110f14161614131416191a1b1b1a1c1a191d17181815141713
17160a060a0a070b0a07090a09090909090a0b0b09090a0b0e131c1c1f20
1a151209050408336a1b1d1d1e1b1a1d1c181c1b161d1b191d1c1a1c1d1d
1e1f1d1c1d1e1e1d1c1f1e1f1e1f1c1e1e1c1f1e1c1e1f1d20221d1e2320
1f21211f2021241d0f6acdc4a644020b14120c0a07060607060606070605
070505030c1e1c2431160f0d090e0b090b0a0506070506060606060c1219
22292b2a28343e463c426c6a5e6a6a5f6f787a7d6b7088807b848c899086
908d8d8c8b8b898a88898989878886878684898987888685868784858582
8185817e817e5b677a80767b76553d61a053255f2507042b672401391f23
3d4a96916268531f2f5466765c2f134f300818100a090707060607080906
0808070a09080f140a06211c0712111113141714131416171a1b1c181a1b
181d1c181a1915171717170906100d080c0a090a0a0808070708080a0a0a
09090a0a09090b11191e201e1b201a0a0d391c1d1b1c1c1b1c1b1a1b1919
1c1d1a1c1c1a1a1d1d1c1b1b1c1c1b1d1d1d1e1e1c1f201d1e211f1e1e20
201f1e1f201d20211d1e2121212022202316236b87955f0a0614100b0708
070508070406080606060603050a1a20243117110f0b0b0e0b0b09060607
0506060606050e141c20272c272c32394238426b675f686a5e7279797d6e
71897f7a8b8f9993888c8f8e8b8d8d8b8889888787858686868787878787
8787878786868487838183837e84825f5e7e827e6876844a3a924537651a
0a0d00366b362821092b345490846079662e3f362c577164553813110804
0a0606070807070908070907060a080c150c0418280f0d10101110111310
11161414191a19171a3627111a1a1716151718150708140b080d0a090b0b
0a0a090907090b0808080b0a0a0b0a0a0c0b0a0c0e1326261a1b261f1e1b
1d1c1c1d191a1b1b1d1b1e1d1a1b1b1a1b1c1c1d1d1d1f1e1f1f1e1e1d1b
1c211e1d201d1e2121201f201f1f1d20231d20211f222120222017258bbc
bb941d010b0f0c060b0d070609080a080606050605030a17202a2c151212
0a0d0e0b0b080606060606050605070c1418222329272933353d3e3d6768
606b6964707977796d7287857f929196968a8b8d8b8d8d8d8b8b8c898787
8586868687878788878788888685858586848582828082865c5179857c6a
738f623b7d45375917090d070034795d13081d302c5b9367566f4354671f
042d88845b5a370500050705080706070907080907070809091012070924
1d10110f1414111311131a141218181a18183b33161d1c1a171717171106
090e09080b0a090a0b090b0b0a0b0a0a0c0906080706090a090b0b0b0c0b
090b0c10172820211f1f1f1d191c1a1a1d1d1c1d1b191c1e1d1a1e1f1e1e
1d1e2123222021231f1c21211e211f1e1f211d1f211c1f201d211e1e211f
21211e1f23142384d0dbb240070d0f09060a0f09080a0e120b0706060706
0508161e2525111316080b0e090a080707060506050406050e131b1f2828
2627333b4040405e67616c6b687279797d6a69898687909696978f8b8a8b
8e8e8c8c8d8d898889888885868887888687888788878685858584858382
8083846542728378767e7d78505a654937170f100d0800318b620e0c2930
244984846837498d682b236157425f6850370b0002060605070808080807
080908090c110c021530130b1012141213121316161717181a1a19181a1b
1b1d1d1c1c1b181105080a0a09090a0a0b0a090707080908090c0a090a0a
060707060809090b0d09090d0c090a2120211e1f1e191b1c1b1c1d1d1e1d
1d1e1d1f1e1d22201b1d1f1c1f1f1d1f23211e1f1f2122201f1f1e1e2122
1e1f212023201d211f1e211f1e231e0c2d8c97651e0a0d0b080906050806
060c0d0a07060506060505152318130f17150a0a0c0c0907060505050605
0506060c161b2026282427353e4446466464616968687778797e67698485
87918f93959288898a8c8b8b8c8c8c8a8b8c898987878686878987878787
878685878684828381818187693f5f8579767f66616a557e5d0c140f090b
0a0600498553312027211c396d8a75366e9d685e55202322314e5c4a4219
00020705060709080709090a080b0c0c040a31210a0f100f111211131313
1716191918171a1916191a1a1c1b191a0f03080908090b09080c0a080a09
060707070707080b0c090b080708060608090c0c0a0b0b0c2120211f1d1c
1e1c1d1d1b1b1f1d1e1f1e1d1c1c1d1d1d1a1c1e1c1d1d1d1d1d1d1f1d1b
1f221c1d1f1d20201f201e1e1e22201e211f1f211f1f201d132b88ac6e31
060a17180906060807050a090708060506050606112422080817130b0e0b
0a0a060506060706050505070c141a2027262629353f46434d6964626b61
657577797b696a837b8891949594908e8a898b8c8a8d8b8b8a8a8c8a8988
8987858587878786868887838585828483818183857638537e7a79865c35
677580510a1e0e090a09080230513f655a2e282b29334d724755947f8a7c
412c1c10070630584c3d1d0002070608070909080809090a0d0a0419340f
0b130f101210121213131515181817161817171615171a19160f04080a08
07090a070b0b090b0c090a0a090806070808090d0d0a0c0a0809090d0d08
09080b1e1f1e1e1f1b1b1c1a1e1e191e1f1d1c1a1c1c1c1b1c1d1c1d1f1b
1e1e1b1d1d1d1d1d1b1d201c1c20201d1f1e1e20201d1f1f1f1f1f202120
1e1f1f16287aa389410f09141c090809070608070707080606070605060f
282c070816100e140e0809070606040706050506070b16191d2325272836
424642486b66626b606870727a7c656e857d80988983808081818a8c898d
8d8c8c898a898a8a888b8b8687888788878686858482848384827f817f87
8142407c767b827038368e9a530920100a0e0b080237510c2a595159481e
28423c31326c967d828d775b332119060013404e360a0007060608080706
090a090d0b04053425031411101111121413151514161718161516171714
171b17130d070808080406070808090a09090a0a0b0c0c0a080a09080a0b
08080a0b0a0b0c0b090a07071a1c191d1d1b1c19191d1e1c1c1c1d1d1c1d
1d1d1a1c1e1a1c1e1d1d1d1b1d1d1d201e1c1f201e1c20211e1e1f1e201f
1f211f2123201f2021222120152a6a8777390a0a0a060907060605070809
0a070606060507030f2b25090d16110d120f090908060605050605050706
0e15181f2325292935404643486661616b626c73707b7c646f8f807a7973
6a656769686d7783888a8b8a8888888a8a898a89898b8889888888878686
8483858585837f7f828f533c717c78706f510e62b47e260c080a0b0b0a00
21571a131d325053322a4247321a235f625b747c8f89736944302a122346
4711020a0706070906070a090c0a09021b380c0915111111111315131614
131717171717161b19181b1d130a080a09070706080807070807080a0a09
0c0b0a0b0c0c0b0b0a0808060608080a0b0c0c0c0a1c1e1a191e1d1c1c1b
1e1b1a1e1f1d1d1d20201e1a1d201b1b1d1d1e1e1d1c1d1d201e1f1f1e1f
1f20201e1e1d21211e20221f20252020221e1f242112367b74643d160909
09070605070606070c0d08050705050602142e190510190e0e0d09070a07
0606060405060407050d1719212126282c3b3e44454f675b606e636a7674
7a7c6472938a60525e69707377726c70777c8288888887878a8888878989
898788888686868885868483848686838284905c3b7476715976690a348d
8f7228001215121702184e20101e1915293e485349463a0c2661453b403a
7599857a7b786649395f510e000608070909080c0a0c0d0a040a3826070e
1011110f1217161514121516181616171919171a1d170808090808070607
0807090808080709080b0c0a0b0d0b0a0c0a0b0c0a080906050709080b0e
1c1d1d1d191d1e1c1b1d1f1a1c2120211f2021211c1d1e1c1d201d1f201c
1d1f1e1f1f20221e1d21211f1f1d1e201f1c1e22211f212220221e1e251f
13478a784a351d0808080a06070707040609090a050406060a0217341402
0c130e0f0e060609060606060605050506070d161a1d2123262e373e4540
556659616d5e687676797d67719b754d5b6d7b8a9095957f7e8782808388
8787898c8886888786868785898a858687858485838484858482848e644c
677668427d89181b506ba5700d0613191804104a27101e1c1916162b3d39
585a0e2d9c582126173d525a8c86777a6e675e56373a1e0003080706080a
0b0d0a0803223c130b0e13131112151716151416191716181a1916171919
120b090a0b08070807060707070807080807080906080b0909090a0c0b0c
0d0b0b0909080808091e1d1c1f19191f1d191a211c1d1d1d1f201f1e1e1e
1e1c1c1d1d1c1d1f1a1d1f1d22211e21211c1d23201e202120241f1f2321
201f20211e1f21211d195588736750210905080707050707050508080806
040509120812361a01070e0c11130705070605070605070505060a11161a
1e1f282833373e4a435867596271606478797d7c6f7a7d49698081919397
9ca4806b7b83838384828586898987868685868685878784878884848784
83848382818384745d5e7962327b8c3c1b192a7dae650c061212050d4420
06211b1a181a282a2f4b4b28257572453a212b28224f5657666e7f785150
6c4d332400020906080a0e0809060a332808111312141312131515141719
171918171819191b181309090a0b0a070a08070807080806080907090908
060707070808080b090a0d0e0c0b0c0c0a0a1f1e1e1d1d1b1c1d1a1c1f1f
1c1f1b1c1f1e1d1d1b1d1f1d1d1c1c1c1e1e1f1f1f21201f1e201c1d221e
1f21202023232222212222202120202222191c687f5d695a270e07090906
0b0e090406070a07060606090f0c0a252407050e0e0f1609040705050505
05070506060a0f161d1e21292b304144454657695c5f72616674777c8275
7c4c1a7f968e9699989da69a757175777e81838382828788878784878683
868585848584858482838280818582807e6a5478684c7c6e594d1100247d
ab6b0c020d060b3e27061a1b1915162e342c384145305066464434393e2f
351d0912334e5f68755b556b5a37120006080a100c070b03174216091311
121312121516151617161919161818181a1a140b090a0b0b0a0b090a0b09
090a08070808080908080807070808090a080a0b0b0d0d0b0b0d0d201f1e
1f211e1b1f1b1a22211b211b1a1e1c1f1f1b1d211d1e1f1c1e1f1e212120
2123211e1f1f1e201f201f2122202124232020231f1e2221232412237078
66684a2e12040c0a0910160b050608090806050707090a0c1a240e070e0f
12130b0507050506050507060508090f15191c23292a313f44454158685e
666c616b76777a837e4f1e2c8c9087a2979b9da3a48e7c7b757572777e82
818486868a85858584868485848482848481837f7e82827f7e81695f6a6a
76945b4b7d1a001e4774a15d10040708392a081f1f2423273b4744444f59
504844312b2a36424e6244282005000c2b4a4f597b736050240106091210
0b0908073d38070e1311121213141717171818151416171a15191a130c0a
0b0c0b0a0a0b0b0c090a0e0a0a0a08080908070806070808080808090809
0a0a0a0a0d0c1d1f1e1e1f1c1c1e1b1c1e1c1c1f1d1c1e1d20211e1f201f
1d201e1f201d20221e1f2121201f1e22222120202220201f21222221211f
1f2021232416236e755f645a2f11080b0e0b141c0b040608080806060705
06080b19210d090e0e100f0c0907070605050505050505090f18191a2427
28333f4440485a605a666e636e7479838052120e66ab74759ea0999ea3aa
9a888a8881786e726e76878585858b898385858584868483838481837f81
82827e7d7e73646a6b7ca1601e6b5f11172e2973b06f0f020e40270b1f1f
29333a42576d533d3d4c3d25272215182f3e3d627863311e020112192a7d
9176685b35050515100a0c0a011f501a07141312141314141817181a2423
14151816191a100b0a0b0c0b0a0b0a0b0b0a0a0d0b0a0c0a0a0b0a080806
0608060608080708070708080a09091d211e1f201d1d1b1b1e1d1d1f1d1c
1e201b1d1e1d1f201e1d1f1d1c1e1e201f1f1f1e1e211f1e222120222221
1f1f20202220212121211f222221162f7b7967604e2d150c0b0d1019240b
01070807070605070606070c151c0d040e0f080908070606060404060506
060708111a1b1c212526364044444a5d5c5a666b646f6d6a684d1a0432a0
9d716d8c8d8c8e959d99949593908c857d6c666b76858280858a8a858585
848684848581818381818180827e60626e6c739e6a1d23575f3e12002363
9d7c140036250e211c1e173961524b311e18201b1611131213130e0f3c47
6498713a1b00000436858a6b6a6936060a0d080a090407443c0b0f131414
1312141317171a2a2e1b1616161a130d0907080c0b090a0b09080909090b
0a0a0b0b0b0a090b080709070608070607080708090807071d201c1e2122
1e1d1d1e1f1e20201d1e201b1b1f1d1e1e1d1f201c1c201b20231e211f1e
222122222120212220202020202121212223222121231f123e7d71716a56
4018060a111222210b030708080806050506080708131d14070d10080707
06050506050406060407070911181c1c212128373f43434e5b5c59666b61
68683b231c100861a4776b62747f7c7e7b7c8186888f919492928b7f6a62
697a807f80878c8a86858686848682838480808284857b625262655b6d75
563b2a4c6a510a00053177743a30170d2219152e535c412d1c1a211b130e
0e0f0d0d1211100b03205f608c853c160006597868756d7133010a090809
09001c532705121312131513141417161b1b1a18171719150c070707090b
07090b0b09070706070909080b0b0a0c0c0a080b0a070807070708070809
0808081f1e1c1c2323201e1d1d1d1e1d1f201e1f1e1c1f1f201e1e1f1e1d
1f221c1e221f211f202221222120211f201f21202020202221212223251e
1f211b3152505356575425090b0f1017180a070809080708070705060607
0f1f150a0d0e09070706070505060405050505060912161d1c202023393d
424046616056636f635f411710150428827862685b6b8d9a8f9085827d83
8388878b9496948e7d6c6870777c7c7e85908e8884868885848583818182
857f5d4f61665e4139626f4e365c8258180100094278761d04231c334a4c
57332b24181d1f14080d0f0f0d14131011100a0010406f936e3408144c58
706e74732a020809080907023f45070f140f121314131414161816161815
1718180d060808090908090a0a0a090908060607060709090a0b0b0a0c0c
0b0b0a0a090807070908070722201b1c212320201e1e1c201f1c1e1e1d1c
201f1e1f1f1d1e1e1b1f1f1e2022201d1e1e20201f1f2021201f20222120
2022212223202125211f2122232426272a27272410090b07070508060708
0807060706050807061218120c0b0e0c0a0706060607060605070705060b
111a1b1e221e233a3f403d41636657667554351711180f334d5c6a6f7368
6ab1b8adadadab938093908886898b9194948d81726f70767577828d8e8c
89878787878688868387886149697076613c52644d44424f958329000000
2b8271230a3552222278621c141b1c2417090f10100e12131110100e0c09
001044819344112d4436616a7772180309070808021f4d1a0a150f121414
1514161519141417171517160c050e08070a0809090a0b08090b0b0a0807
070606060a0b0a0c0c0b0b0b0b0a0909090809080625201a1c1f1d1e211f
1f1d1d1f1e1d1e1e1d20211e1d211f1d1e1d1f1e1c2021201e1e1e1e201d
1e2120222021221f20202221212221202121222221232221252323251b0e
09090706060705080807060606060507080515241005090a0e1007060504
06050505050505060b14191c1d211e29383a413c4160655e676133061741
2d3a604b4e908371626ab4c8acb6b3c2ab74829590928b86878b8e91948f
8676707a7a74818d8f8e95918a8885888a888688826c5265747c80525183
71403863766b51280d0a2e887c3c2d1d07146d75210c151c22150c10110c
0a121210110f0c0a0b131603265f865638531527685c814a000808060903
07453205121210141415151316161214181516161505092d0f010a080808
0808060506090b0b0a0a0a0708090a080909080a090a0c0c0c090a0b0a0a
211e1c1d1e1c1e211e1e1d1e1e201e1d201f1f221c1d201e1f1e1e20211d
21201f21221e20211e202220202022201f202020221f201f21211d222220
23221f232322242110070707080506060709070706060605060704132613
050a0b0e0e0707060404060505060506070b1219191e1d202d363a403b40
64685f55463c26365a57734c357e90837b635cabc5b6b2b7c3bf7b748685
8890918d8989888c91919087807e7b7b797d879398979a8f8b8a8a8c8888
80634c6d7a8b61263a628289684d546665633e07339b9d4f020a082f571f
161921271c1515130b091312110c0c253e2e19454c231d4b6a4b565a092f
635b711e020c070b0700324e0f0c12111314141514141413161616161916
070929180508070708090808080605080a0a090808090b0c080707060606
070808090b0c0c0b0b1b1c1d1d1f1d1c1d1d1e1d1e22221f1c1e1e1e201e
1f1e1e1f1e1d1e201e1f221f1e1f2020211f21231e1f2223212121212021
21202022211c21231f22231f2223201f2114060907060808070808070806
060706080705101a150a0a0c0b0c0807070506060505060404070c13191b
1c1f1f2d373d413d3c5d73574b5c56605f56736c40588084897e69548fca
b5b7b7bfc89776868284858689908e898887888d91908e87827774737276
8297989a998f8b8a8c928c62576e74704c381d2f5c6f937c3f5c82744a17
3c8a885316010f413a0b111b1b24311c11100d121106154b596d70544d4c
39465a64483e723800364f724e02090c0a09020f543e0a0f121012121315
1313151315171518170c090a0e0a0707060607080808090a08090a060606
05070909080a090706060605060a08090b0a1b1c1a1a1d1e1f1c1c1e1e1d
2022221b1e1f1c1f1e1f201d21201e1b1d1e1d20201d1e1f21211e1f221f
1f23201f212020201f1f23211e211f21242020252322252b2d2313070a09
0810170a060a040606050505060602091a170a0a0a090807070605050504
06050504070a1219191c1f1d2d3d3e423837676b495b735d665e5f894e48
747b89847e6e5688bbc1b7bdbec5a0858d8c8c89848486868b8e86858686
8d94918d8c877f776e6d6d70808c8a919794918e7f787a7f623252604811
1a5777816c667c6e513e5569776e30002f5b0f03150a18502b0e0e100d08
204a7158475f68575037113b5e6f4e4c4f030a4a625616020a0a09050142
6b200410100e1112151416141112151418160d0f100d0d0b0a0607060507
090b0b07090b080807070706050709090a0b090908070705070b0a1c1c18
1c1c1b1c1c1a1e1f1e1e20221c1f201c1f1e21201c1f211e1d1e1e1d201f
1d202022211d1e1f211f22211f1d2021201d1e201e1e201e1f24221d2223
2026363727180f0d0b0d13180d0809060706050505050808091c110c120a
090706070706060504060605060608131b171a1f1e2d3c3b3e363e625d54
626c615f5b707a3e62727b89837b696684b4c3bab9c0bfab989e97969692
918b888585898d8f89888d8f92919194918d877c706a686e7c858a919892
7d75857b442c385e643b00237e766c7368554d6c864f63974229470d0917
0b16442e0b0c07052351462c252f3d4f6970815c10105a754c4f21003548
5e3e00080c080700368145020c131210141614171615141314171b0c1217
131210100e0b090806060a0b06070a0809090a080708060606080a0b0b08
090b070a0a0a1d1a191c1b1c1c1b1a1f1e1b1f211e21211d1e211e1d1e1f
1d1e1f1d1f1e1f212220212122201d2021202021201f2022212121212120
21212120212020222320232827261d14120e0e120c080a09070805060505
0507070d1d11141a0d0d0c0706080705060505060505070b141b171c1d24
33373b3c3a434f625f6064626a79774f4e776f7b89867b637089aacab8bc
bdc2afa3a7a5a2a19f9d9c9b97928d8a8b93989593968e969d9c9a999892
8c83796f6b69798b8f857a807956594e465c66531d1a61946a5f6c4f507c
8e385f9375551008180e2041250a09021d4c483238393d2333617e707266
260945575d47021240535a0d010f0b060027815f0e081515141314161614
151513141518100f15131515141313100e0b090a09080607080a0a0a0a09
0b0b0a0709090b0b0708090a0b0a0d1f1b171d1d1a1b1d1c1e1d1c202120
20222020201c1d1d1e21211f201f1d1f1f1f2021222122201e21211f2022
21202021212022212023231f2122202125231e2022232a2314120d0c120d
0507070507050407050606040b19131216120f0f09090907050605050705
05070d11191c1d1e2136393e3e3c444d636064737993ae7c36577a6a7d88
867a667585a3c6bdb9bfc0afa7adaaabadaca6a7a6a6a8a399928e939a9c
9e949399999ea2a19ca1a19c958e8173706c6c7990855c57695c4e61826d
31174f88705a846241657b45628b88521910121c3021101007364a3d5a53
6c8d501d2a667b61686c1c11405a70240333425c2a000c0d0a01106a6b1b
0515181415121416131114141515131012131216161414141412100d0d0c
0d0a0a0b0907080a09090d0e0b0b0b0a0a0b08060607080a1d1d181d1f1a
1b1c1c1e1d1c21211f1f1e2122221f1f201e212321202220241f1c1f201f
1f20202023211f2122221e1e22201f1f1e1d22221e1e212020201d1f2321
1f33210a0b0b0d0f0f0a08050509050408070809070e160e090d0e110d0a
090907060604060505050809141c1b1d1e27323b3f3f3a415f69707f8e97
b9c67b3377796a858c867d64808e9bc7bcbbbfbfaca6ababafadabadaca9
a7a9a9a9a79a9191969da19f9b969199a1a4a8a3a2a3a19e9a948e4b3673
6d5d7579596671687b86461e41746f67876f3e4c7563687f826637232e30
2928281e14323b423d496f6a847a1e3f8a5961591713387c46012a34553c
00080c0b06014a7a23061317141614121712111413121415111215141313
1514131311100f0f0b0b0d0d0c0b0b09070706090a0a0b0c0a090a0a0906
0808061b1c1a1d1e1c1c1d1c1e201f1f211e1e1e1f21212121221f1f2121
1f202021221e1e1e1f201e1f22222120211e211f1e2321211f1e1f1f2120
1d202121211d1f292525391d060b090c110c0a0905060605040606060605
0b1a0f0a0a0b12100606080604040303040404060c141a181a212a323a42
3f343c5886a19da5a9c2b45d4f7e776b7f888b70678984a2cdb7b9bdbead
adb1b1afb2afb2b2b0acabababadaca59a9593999da3a296908e93a2a8a8
a7a4a5a2a5b46d2d524a213464756864818e736a6c52324e817a6b735141
7c6c5b898580663024373a3c3a151d3529292a15184f78672e5175616545
0d305f530b1926414e0a030b0908011a7043020e13111412121311111413
1113120f13151415161616141312100e0f0c0b0a0a0a0b0c0d16160a0706
0509090a0b0a0b0b0a0b0a081d1c1a1b1c1b1b1d1c1d1f1f1e211e1c1f1f
20201f1e201f1f201f1f1e1d1d1f1e1f1e1d22221d20211f20211e1e1e1f
2020202122221e201f21201c1f211b273b3b3a4017071b120f1008040604
0504030304040507060b181815141417120a0b0b0908080a0b0c0b0b1217
1f2125272c363b444b4a414b557b9a999ea4ad946565736b6c6d77765f63
8b83a7ccb9b6bebda7acb9b1b4b6b4b4b7b4b5b3b0aeb0b3b3ada4989796
9b9ea2a397918d9199a6ada9a4a8be7c16202b271f222322385766707987
8b603241788c5d5d605d766269868394640d04122229222a3410050b071d
1e0f4b6a45425a6c57183b5f522819223e4d1602080a0a07023c651a0613
1312121312111013131012130e121811131511121312120e0f0e0c0a0b09
08070706152a241c16100a050708090b0b090a0a0b1c1c1a1b1c1a1c1f1c
1d1e1e21211f1e1e1e1f1f1f201f1e1f221d20201d1f1e1d1e201e22231d
20221f1f201f1e21202020201f242221222021221e20211b243737425433
26332b28261f1a1a17161a1c1d1d1f222627272c2f2e2f2f2f2a26272626
242326272927252b323437383a3e4244474d4b4c4d4d4e5f7984888d7a66
544c48474945402e519292abd0bdbfc5c9a391aaaeb0b3afb2b4b2b4b7b3
b1b0b1b4b5b1aaa19a97979ba3a6a8a0918c8d93a1a6aec48e1201161210
100c0f0c080a21516961767a5b4a65845054767e7e5c62787e97771f0012
38442f16050807022f35000535644a2e6d761731564c4a251d3b4a160308
09090a04074352110c1612111513131213140f12151114171512120e0d0f
0f0d0e0d0e0c090c0a080804030417272d2f28271e150d08050707070709
1b1e1b1a1c1b1c1f1e1f211e1e22211f2020211e1f21211e1e2120202222
211f1f202021212120202321212120212222232121202122212221202120
222322222120334845443f3c3a393737353732353a3e3e3e404244424140
4141403d3a38333433322f2e2e302b272929292a26262825242525222422
201e224883a7a678381f18141415130f0039998cb1c3c0bfcbd8a07b9ca0
a5a5a5a9acaaafb3b1b0b2b1b0b2b5b2b1ab9f9899999ba0a5a9a5968a8d
8d9dc2940d01140d0d0b0a0808090b06080d1b2b3a6d815a5b813f3d948c
796b616e70a0891e024b6623040a08030c542f000d00226729448927345a
37543014424b17060b0708090a04094a430b111412131313131414131514
15151516150e0e0f0e0b0d0d0a0a0b0b0a090a0b0705050d19242c2f3638
312d281e160a0806051b1d1d1b1c1b1a1f1d20221d1c201e1f2021211e1f
1f201d1d1d21211f20231f2124201d2121211e201f1e222021211f23231f
212021212120212220202522222626261e1b1f1e1b19171718161a1c1719
1c1b181919181613131716120f0f0f0e0e0d0d0c0c0d0b0b090a0a0b0b0a
0a0c090a0b0a0909090a0a031d90d7caaa3a000d0d0b080c0400488c85a8
bab2b8c6cf9479959c999f9ea0a2a2a7a9a9acafb0afb0b3b3b5b4b1a8a3
9d9b9c9ba0a5a9a79d8d8a9e89450f00080b0b090a080b0a0a0b0a0a0e09
0a4b7c777371313d9793836c5664799f7d2e3f3c1b1d0c0500206e18000d
09033638477121385326503b1840351b0b08090709080b011b5727041414
1012131212131414141519151316100c0d0e0e0b0b0b0a0b0b0a09090a0a
0a0d10141d25282d2d333e4541392b241c0d1c1d1a1c1c1b1b1e201e201d
1f211c21211f22211d22211f201d1e21202020212122201e1f1f1f1e1e20
1e1f2020201d20222121201f2121212021211e22232124222011080c1110
0b09090a06020706050705040603050a0a0a11140d060607070707060506
0906050806060706060606060609070708060609020f9bd8cbca7207060f
0a09070202598985a6a9aab0b7c081709b9496979a999c9e9f9fa2a4a9aa
abacacb0b0afb2b3aea8a49f9d9f9da0a2a5a6a698625860421600040b09
0b0c0c090a0c0e13130f031e6b8a8a7d2f3e9f93816a58667c9489510d29
36140c002f690a020d050722345d671c344d164c4628402b1f0906080607
080908003150100b130f11121212121211141317161115110c0d0d0b0a0b
0a0a0a0a0a0a090908090f1011171a1f23242a333a3c3f404238371b1d1c
1c1c191b221f1c1d1d1e201b1d211f1e1f1e201e1f1e1c1e201f1f202120
20212021201f1e22212021221f1f201e2120202321202220222221202021
2224201c11070d100d0a0a05032844322c2929242529342204060b0e110b
0a0a07080908080807090808090808080707070707070806050606060900
109dddb8ccb634000b0e0608000b6b838ca7a3a5a7b9b262729991929593
95999a9a9b9f9c9ea4a2a5a6aaa8a9acacacaeaca3a0a2a0a0a1a0a0b5bb
4a0b4c677251220200050b090a0b060f2620181705044f71978c1c4eae9a
8c70475f87a5871d2735191301595e0019281c232b39604c13475d12403f
314b241a0b07080807090a07060947400b13121412111414121213141615
15100c100c0b0c0d09080a0a080b0b090a0a090a0d0d0e14181d2023292e
33393a3c3e4e1e201c1c1e191d231e1e1e1e1f1d1c1c1d1f1e1d1e1f1d1e
1d1e1e1f1f2020212020201e1f221e1b2322202021222120222320202321
2222222224232122212024211a100b1012130f0902096da58f8787868080
8cac710a00121613120c0a090c0e0d0e100a070c0b0a0a0b0b0a0a0a0a0b
0b0a09090908080a010ea1e2adb6cf8a18030c0c060019807894b0a0a8a4
bd9e5073968b8c9293939a9997999d9b9a9e9ea0a3a2a3a4a4a5a5a6aaa7
a2a1a09ea29fa1b0b14c000a174769696637070004090a03113b2b1c190c
06042850a4811767b0948e683b5a90a06a36220d1712706e071a332b4449
52653d1a48521546403040311e060608080607070809051d4e290c151310
12141111121416171412110d0b0e0d0d0b0a0a0a0b0b090a0a0a0a0a0c0b
0b0b0f1013161b21292b3335383d581f211c1b1d1b1d241f1f1f1d201d1c
1e1f1d201f1f20201f1e22201d202021242120211f2021201e1f1f1e1f20
22201f2122202022212121222222212322212220201c121016181b1e0e00
1997b79d9da0a2a09daec4931603242c342b1a05080b101311150d080b0a
0b0a0c0d0a0a0b0a0a0b0b0b0c0d0b0b0c050471e1b8abc5c4741704110e
002f896d94b1a1a8a8bb85477c8d8a8a8d909294949998979a9a9b9c9e9f
9ea0a09fa0a0a1a3a4a29fa09e9e9d9eafa8420013150d032e67665f4415
00050411452f1f1b0a040a28204cad6f31789e8a906c304590ae7922001a
47724c070d080d3e4d4e4b331f564a1741533b2836210b09090706050607
090b082a48160e13100f111210131214151212120f0c0f0d0e0e0d0c0c0c
0c0b0b0c0a08080b0a0b0d0c0b0e0d0e141b1d2531353f5a1e1e1c1b1c1d
1a211f1e1f1c1e1e1d201e1c20201d1f221d1c23221d1e1f1f232120201d
1f212021221f20221f20211f1f21201f202222201f202120202122232122
2011132e4d4c320b001a9fb59ea6a3a7aaa6b1cd9723074166635a2b0109
0e0f1212130e090b0c0b090b0b090b0b090a0b0c0b0c0e0a0b0e0b0027b7
c3a9b3ccba6b140707003e867193a29da0acb36e487e8d898a8b8d8f9193
9796959998979c9b9a9fa09e9d9e9e9da19f9f9f9e9d9d9d9ab2a030010f
160f0e0a0a154b6f6b471e00104832211e0d030347622260b96e47849d75
8570283a96ba48000e719719010d011f6d64403621305145253e4d2d283a
1b0b0c080807070506080b090a393e0e10130f141412131414141413100c
0f0e0c0f0d0b0b0c0b0c0c0b0a0a0a090909090a0a0b0e0b0c0d0f0f121b
2126501e201b1c1d1c1c1e1e1c1c1c1c1e1f201b1d1f1d1d1c1e1e1d1f1f
1f1e1f1e20221d1f201d1d1f21212123221f202221202221201f1f222321
20202221212023272121100c3d8b8f58120027a1ac9da4a4a4a9a7b2c8a0
2108698b8c8742000b120e1212140d090c0c0b090a0c0a0b0b0b0b0b0b0a
0b0d0b0c0c0b030888c7a6a7b4bea752020204497d74949f989caba15346
878b8489898a8c8d8f8f93969695939896959b9c9c9d9a9b9d9e9c9c9d9b
9999989bb08f1b01140f0e0b0c0d0b01143f65754614252f251b1002035b
a4552185a067719e7e5f8b762e44918e32015593190307034e7e4f462a20
39433d3645430e224c22090b09060806050508090c08144b280510111111
0f13141313110e0f100d0c0e0b0b0c0c0b0a0b0b090b0b09090b090a0b0b
09090b0c0e0f100e0f0f16291e1f1c1e1e1c1d211e1c1d1e1e201f1f1e1c
1f1e1d1d1c1d20201c1e1f1e1d1f201d1f22201d1f2021211f202120201f
21201f201f1f2123212023212122212329222318082d838a63140028acaa
9aa6a0a6a7a6a8c79f230d6899818753020a110f1214100f0a0b0b0b0a08
0a0d0b0a0a0b0b0b0b0b0b0a0b0d0c060054cfb89dacb0b8971c00075274
7a96989696a98e3c508684828586868b8a8b8d8f91919493949694989a99
9b999b9b999a9797999997969bb2760b0814140f0d0b0d0c0e10060f4364
5e3113201b0b010167bf8b3d39929065829e6c58857d49398da51d206f12
010124724435442e2d343b3534564f0724461b0b0d0b0906080405050a0a
0d07254a1707110f110e111412120f0e0f0d0c0d0c0a0b0d0a0c0a090b0b
0a09090b0b0c0c0b0a0b0b0d0a0d0f10100e1114171c1d1e1e1c1d1d1e1e
1e1e1d201e1e211e1c1e201f1d1e1f1f232020212021211e1f202223201f
2224222024202120211f2020201f2020201f20252220242323252424170e
267084571e0032aab09b9ca4a5a8a3aabf99230872987e80660805150d12
0f0e0d0c0b0a0b0b0a0a0b0b090a0b0a0c0d0a0b0b0d0d0c0b0023b3cda6
a7aaaab2570012566e8c95909098a86d2a61817d7d8281838789898b8c8e
8e919091939493979997979a9999989898979799959fb15f0308120f100c
0c0d0d0c0d1010070c506f251b1f07000759bbaf7f345fa4805c8e975855
867a4343a07e3024080009545223453431393a3e33375d4d072e501c0b0c
0c0b0906060506080a0d0e072f4f170311131215121215120d0c0d0d0e0c
0b0c09080d0b090c090a0d0b0a080a0b0d0c0b0d0c0b0d0e0d110e0e0e18
1a1f1d1e1d1e1c1c1e1c1d1c1e201d20201f1e1f20201f1e1f2022212020
22211d1d1d1e21201e2324212124211e22222022201f23212020201f2123
202122222324261a07325c65642a0024aab79f9ca1a7a3a5a6bd972b0359
998681690e04120d0c0c0a0b0b0d0d0a0b0c0b0c0a080b0b0b0c0b0b0b0b
0d0c0b0c07047bd7b3a5a2a3af8c130754708a988e9397a15e2360817a7d
7f817e828685878c8c8b8b8d8c8f908e9295959498999698989795959596
9aac64020b140e0f0d0c0d0d0d0d0a070e00195a351c2c2b010349aaaf9f
6d3c7dae7057968a43518a702853ac8b2800043d581b3b3a2d423b364038
3e614c03235320090c0a0b070807050607070a100e09374c260508141714
11120e0c0d0e0e0c0b0b0c0a0b0e0d0b0a0a0d0e0a080b0b090c0d0b0c0d
0b0b0b0c0e0f0f0e111b1f1d1e1d1f1d1f1e1e1e1a1f221d1d231f21201c
1e211e2024201f22221e1f211e1b1d20201d1f1f1d2020211f212020231e
1f26221e221f1e21232222212324242a1d063a58506835002daaafa09ca4
a49fa4a9b69a2d004c918a7a6915010e0b0b0b0a070b0c0d0b0c0c0b0c0a
0b0b0a0b0e0a0b0c0b0a0d0d0c0a0049d1bda3a39ba89f200d5d7c8c8e8d
8c9c9640266d7a7c7b7c7b7f7c818385878a88898b8b8a8c8d8e8f909393
949595979795949496a3a14a000d181010100e0e0d0c0817260e0a253c2e
242a413a1f3990a5918d5d53a795546d9c7225598a251a8cb86d0b14623f
2b4d343c4940403b37414d3b0d2648220b0a0e0c09080906070707070f17
0d093149431e02111712110c0e110b0b0d0d0c0c0b0a0d0c0a0b0c0d0a0c
0a0d0c0c0b0c0e0e0d0b0c0c0e100f0e0e15201d1c1d1d1c1e201c1f211b
1e201e1e20211f201d1e202022231f21232023222022221f1f1f1f1f1f1f
201f1e20212020231f1d212021202020212122232324232425200c2a5754
551d002ab1ac97a2a5a49ca0acb88229003b897f706c1d000a0c0a0b0a09
0a0c0b0b0c0d0c0c0c0c0b0a0a0d0a0c0e090d0e0c0e0c0022b0d0a9a59d
a2a532126b838d8f898e9e7b28316d76777a77797b7a7a7f7d8186868589
8988888b8b8b8c8e8e919193949394959396a397300012140e0e0e0e0e0e
0809547a43485a4d50564736476552709c8c89825373a476607b955f226b
630043ab9f5644553f4e4c474d4b484b4245482927172f5422070c0c0c0a
090707080806070f1211140c1951553c16060d130e0b0f0d0d0d0d0d090c
0c0c0a0a090a0c0d0d090b0d0c0c0c0d0d0d0d0f0d0d0d0c0f0e15211e1c
1e1d1c1f1e1b1f201b1e211c1f1e201c1d211f201f22201f211f1e24221e
24262121212021231e2124212121202023201f221f212221212022232121
2421203d34051b4f604c1b003fb3a5949da5a09ca1adb47f2a01226b8470
5f1e01100a0b0b0b0b0c0b0d0c0c0c0d0c0c0d0d0b0c0b0b0c0e090b0d0b
0b0c040576d0b6a39eaab24e2469858c8b8992995f1c40786f7475767779
7878787b7e7f828584878585868888898b8e8d8c8d909092928f92a3891d
0113110f0e0c0d0f11050d8aa98587847c7c7a8076242f7d9596918a946d
578e8c746d7b975220713c006ea5857a655659605d52514c4645584e2326
18334e25080a0c0a0a090706080705080c0d10141110192c4d4839260c06
03070b0b0a0a0a0a0a080a0c12150e080a0e0b0c0c0b0d0d0c0e0e0b0c0e
0e0d0e110e0d1e20191c201e1d1e1e1e1f1e20231f1f201f1e1d2022221f
22211f22201c21212022232324242322231e20252222211e232620212422
2024231f212123212023201f3e470c15525d4d1b003db4a18e9d9f9b9d9f
9fb2862903114c777c5f16010e0d0a0c0b0b0a0c0b0c0d0b0b0d0b0b0c0b
0d0d0b0c0d0d0e0d0c0e0f0b0039c5cca9a1acbd7e3759838284828f8b3d
185470727170727574757778777a7b7b81808282818485868688888a8c8a
8d9090918d94a3720f0114120e0f0e0c0e11020b7fad89898c8887848691
4f01378caf9c92988b657d887d71718b903a307d3625858e807f6f5b6062
5755544a4b543f24362539551c07100e0d0a0a0907080705050b11101410
0f18150e31594d3937302116171713151a1e21272b3237332107060c0b0b
0b0c0c0f0f0c0c100f0d0f0e0e11101e201a1c1d1d1d1c1c1f1f1c1f2020
211e1e22212023211f21222022231e1f2222222223232123212122222520
21221d22252223242222242520202221212021232224351a115958412a00
4cbc9d909d9f979d9b9da9862f02062871786a2000110c0b0b0c090b0d0b
0a0d0a0b0e0b0a0d0d0c0d0c0b0c0c0d0d0c0f100d021392e0baadb8c7aa
534e7e7a79818a6a1e265c6e6f6f6d727270727374777778797b7a7d7f7e
7e80838282858887878a8c8e908e919f5d040818100e0f0f0b0e0f030e7c
9f7d8686848586808b6a21333976ab98989b8276867e7c6c73947d305890
3d418c80847d6f64615d5e5b5258563c334c3742581a020e0c0b0c0a0907
090806040a1111110f0f121214151b2d43595f5c4f4e4d4f4d4c52616767
676666603c0703110f0f0d0e0d0d0c0d11100c0e0e0e12131f1d1e201d1e
1f1e1a1f201d1c1f1f1e1f1e23232222201f20202021211f1f2222232321
21222321212123232121252322222525232123232222252322212021251e
1c4c2d0d5555492e0050c59f929d999b9e9a9ba97b2e02011d61775f2600
0e110b0d0c0c0c0d0c0d0d0b0d0e0b0c0f0d0b0e0e0e0d0c0c0e0c0d0e0e
090044cccfb1bacfc0594c7571717878401a3a6b676b6e6c6e6e6e6f7071
737574787878797c7b7b7b7b7e7d7f818586878a8c8b8a939f48000f1810
0d0e0c0d0d10040963887f807b7d7f7e877c3f356f472b7aaf9d96938279
838374668291642d7c7d31688280837b746d6768655f65614d4c54404651
0e020e0a0b0b0a080708080605060c100f0f0f0f101012151e28313d555c
5c69757e7d7272757575736f6f7236020c120d0e0e0e0e0e0c0d0e0f100f
0e0f1321211f1e232020201e1f211e1d201f1d23222124242121201f1f1e
201f1e21232020222222212021211e202321202423222120252221232221
23252323262121281d1a6139125a4d4b3b0162c09f9a9b959b9b979da279
2501051a5c735025000b0c0d0c0e0a090c0d0b0c0b0c0c0d0d0d0b0c0e0d
0d0f0c0d0f0d0d0e0f0f010b8ad4b6b4cc8f4c5060606563532a1f476968
696d6c6c6d6b6b6f6e6e70737374747879767979757a7c797c8182848588
8688978f2a0013160e0e0e0d0c0f0e05075569596660605f5d665d162b72
5c3a3580ad8a86887c7c857b68737f825845885e3f7c80807d7a746f6e6f
6d6b665f59584e5f4605070d0a080b08090807070705050a0f0d0b0e0f0e
0e101118212831475558626c7a838176747778767170746b330a040c0e0f
0d0e0b1011100e100f1110131e201e20221e1f1f1d201c1c21201f1f2321
23262122212020201d1f201e2024221f1f2123222120211f1f24201e2220
22211e21212122222121222122262222241b1f6a4710505647360f5ac0a2
96968c959994969f712d06031e4e5a4f2d01070c0a0d0c0c090b0b0b0c0b
0b0d0d0c0c0c0c0f0d0b0e0c0c0e0d0c0d0e0f0900228ebeb291543e4f47
4856533d2d2c42696c686b6d6c6a696b6c6c6d6e70727171747572757572
737776777b7f7e808383818f8d1e00140f0f0d0e0b0c0d0d07043859383b
423b3c3b3c2b13386654592b2e99845358698c7373726b71787746618646
567875747877706a696d6f6e685f595a6841000a0e0a0b0b0a0a08080909
0606080c0e0b0c100e0e0d0e12161d2734465058606673827e7775757876
727070663f0902100f0d0f0c11110f0f101012110f1f20201e211d1f1d1d
1e1b1c20201f201f1e21252224231e1f211e1d202020212321201f202221
21201e21212020221f20211e1f2020212223212121232322252517177761
0b426044370f59bca196948d8f929292966e320604153a475735000a0d0a
0a12160e0b0d0c0c0d0e0d0c0c0d0c0c0e0e0c0e0c0b0d0d0d0d0e0c0d09
002564664a3b3b474f4c4f4e3d31364c6067686c6c696768696b6a6a6a6b
6e6f6f71707071706f6f70717377797a7d7d7c848677310307120d0e0c0c
0b0d0c0c0a0f2b393232312e3c320600336d53493b0e56913b13398d775e
816a696f776a4971724c61716e6d73786a5a656b696c6b6761755206060e
090b0b0a0b09090b080808070a0d0b0f12100f0f101011141e2934414c57
5e66767e7b767377767375706e704109050f11100d0d110f0f1010101114
20211e1f211f1c1d1d1d1d1c1d1f1c1d1f1c1f242224231f1f211f1c1e1c
1f202121211f21231e21211d1f1f1e211e1e20221f22212121242523221f
202423242a19177879162b5c4c4119359da292929292928f8f9270340903
12324d5d3701070e0a0a1120120c0e0d0d0b0e0f0e0d0e0e0d0d0f0d0f0e
0d0d0f0e0e0d0d0c0c0d09080b112b32385c655e4b403d41525e62656a6b
6966656868676868696c6d6c6b6f6f6e6f6d6b6d6e6e7073767778788380
585830000c110d0e0d0d0e0c0d0d06163b3733393a51450600326d55423c
1a15767d0d1978814e7477626d68755a5971595b646b676572705a525e64
666866687c7315000f0b0c0b0a090a090a09070807090b0d0e110f0e0f0f
101011141c2532414c565f63717c7a757176767575736e6d490b06110f12
1311110f11111013141f201b1f211f1e1f1d1e1f1e1e221e1f201e202222
23201f2222201e1e1e22201e212120202122232121221f1e21221f222422
2022212226222223212124252423191f84831a1b4d4b4824176381767b80
8a88848183693f0c05132d46543b04060f090a1118110c0d0c0d0c0c0f0d
0d0d0e0d0d0d0e0e0f0f110f0f100e0f0f0c0c0c0b070a272f2e48625b4d
44494e595e616667686869656767666666686a696b6b6b6b6b6c6a6a6b68
6a6c6b6e717374827938597315000c0d0c0d0d0f0b0f0b052a4e43474f54
705808013d72543d3e290b3b9e370460854e5f7463696467655b65645f5f
666a5f646f63464e5c565a5e647e6e15020a0a0b0c0a0a0a0a0c0a090707
090a0c0d0e0c0f110f0f0f1010141d26343f4a575d606f79777474767676
74726f744605051114110e161311141414191f201d1d20201f1f1f1e1e1f
1e1f1e1f22201f21201f201e1e221f20202023231e201f20212122232321
23242022232021241f20222021262122232225232227260e31918e2a0f46
4a4a2b0c4255433f4e565956565a5d421304132338423c0b03110b0b0f19
140d0d0c0f0d0c0f0e0d0f0d0c0e0e0c0e100e100f0f0f0f0f0e0e0d0c0b
050e292a2d394f5b514e53565c6266676768686968686665656665656a69
6a6d6b6a6c686768646467666a6b6d6b81731c448a5705030e0f090d0e0b
0e0a02416b565c606b8458070143755d3f38321b1a796c033c8960576862
65645d66605d63625f636b64627169534b4d50505355605f482c0906100a
0a0b090b0c0a09080708090b0d0f0e0e10100d11101012171e2a303e5153
5a626a7677726f7375767571706f4614080c1212141113131518201e221d
1d201f1e1f1d1e1f1e1e201f1e201e201f1e1f22201e201e1e232222231f
201f1e202220222222222320212521212422222021232322222424242322
2726123ba19633134949583206384a2c222e2a2d36343c4b4412040f1e33
3e4411020f0c090f16150f0c0c100e0d0e0e0d0e0f0e0f0e0f0e0e0e0f0f
0e100e11100e0d0e0b0319322d2b3a495455555959606563676966696765
686766646564636868686b6c696b6b6766646664626668666b7d61183e7a
7a3c0208140c0c0f0d0d08025685656d73789d59000b3c6f6042382b2e16
408321227f6d5f676463655e656861646a69676e6d6d6e716b5f5665614c
3e474f735e0f010f0d0a0c0a0b0c0c0a080908080b0c0d0f0d0f0f0f0f10
12121217202934444a525b5e6974736f6f727577737170724b1a07141812
15171314191c1e231e1c1f1e1e1d1e1f201e1c1f1f20201c20211e212221
2020201f2120212322211f1e2220212221222222201e232121212122201f
242421232623232625262514489e8b41104d58563e092a3a29252b262932
32313f4718000d1b2c3c431700130e0a0d1a160d0d0e0d0d0d0c0c0e0f0c
0e0f0d0e0f0f0c10100f0e0f0f10100d0d0a03263d33353c495354575c5c
5f63646568696a696a676565646163626265686a696969686a6864646560
5f636264774b0c4866696927020a0d0b0e0c0e08087393727f808fa75600
06446b574536292f20186f530f5f7c63696964686a6a6e6c696e73737371
6e6e6b6d7175756e5f362c49755b0d04100d0d0b0c0a0a0c0c0a09090a08
090f0e0e0f0f0e101010121110172127334149525760696f72706d717775
7374706953211116191b15151a1720
grestore
showpage
%%EndDocument

 endTexFig
 915 2092 a Fs(Figure)19 b(3:)27 b(Reference-Counting)17
b(Memory)i(installed)h(on)g Fn(NextBus)p Fs(.)0 2359
y(remains)15 b(hidden)g(except)g(to)i(engineers)d(who)i(can)g(access)g
(all)h(of)f(RCM)h(as)g(RAM)f(via)h(a)f(special)g(addressing)f(mode,)h
(which)f(was)i(used)0 2492 y(in)i(the)f Fn(Heap)k(on-a-bus)c
Fs(and)g Fn(RAM)k(on-a-bus)c Fs(tests,)i(below)-5 b(.)25
b(Figure)18 b(3)g(shows)h(the)f(two)h(wire-wrapped)d(boards)h(that)i
(implement)0 2625 y(RCM)i(on)f(either)g(end)g(of)f(the)i(bus,)e(with)i
(the)f Fn(SIMM)p Fs(s)i(visible)e(on)g(each:)27 b(nine)19
b(on)h(one)g(and)f(three)h(on)g(the)g(other)-5 b(.)125
2758 y(Some)22 b(constraints)g(turned)g(out)h(worse)f(than)h
(anticipated.)34 b(Figure)22 b(4)h(illustrates)g(the)g(physical)f
(location)g(of)h(RCM)h(within)f(the)0 2891 y(NeXT)d(computer)-5
b(.)26 b(Our)20 b(original)f(sketch)h(of)g(RCM-prototype)e(timing)i
(provided)d(a)k(240)e(nanosecond)f(cycle)i(time.)27 b(This)21
b(approxi-)0 3024 y(mated)e(the)g(understood)d(bus-contention)g(time)k
(for)e(read-modify-write)d(and)k(the)i(N)t Ft(E)t(X)t(T)t
Fs(B)t Ft(U)t(S)r Fs(.)27 b(After)19 b(allowance)f(for)h(a)g(subtlety)g
(of)0 3156 y(the)j(NBIC\320that)g(three)i(N)t Ft(E)t(X)t(T)t
Fs(B)t Ft(U)t(S)g Fs(cycles)e(are)g(needed)f(to)h(seize)h(a)f(second)f
(bus)h(\252within\272)f(each)h(device\320the)f(sketch)g(suddenly)0
3289 y(rose)e(to)h(960)f(ns.,)g(overwhelming)e(both)h(the)i(minimum)e
(needed)g(for)h(read-modify-write)c(on)k Fn(SIMM)p Fs(s)j
(\(row-address,)17 b(followed)h(by)0 3422 y(double-strobe)g(of)j
(column-address\))d(and)i(the)h(300)f(ns.)30 b(read-followed-by-write)
16 b(that)21 b(was)h(actually)e(implemented.)28 b(In)21
b(fact,)g(the)0 3555 y(timings)f(were)g(much)f(faster)h(because)g(of)g
(another)f(subtlety)-5 b(,)19 b(described)f(later)j(with)f(the)g
(results.)1117 3739 y
 13156352 10064609 12038062 33154007 25194414 43218616 startTexFig
 1117 3739 a
%%BeginDocument: ../../TR401/Figures/fig5.NuBus.nc.eps
%ADO_ImageableArea: 30 30.96 582 761.04
userdict begin/dscInfo 5 dict dup begin
/Title(Canvas:fig4.NuBus.nc)def
/Creator(Canvas2.1: LaserWriter 8 8.2)def
/CreationDate(11:28 AM Tuesday, February 27, 1996)def
/For(dswise)def
/Pages 1 def
end def end
/md 154 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
/G/setgray ld
/:F/setrgbcolor ld
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
/currentpacking where {pop sc_oldpacking setpacking}if end
md begin
/mT[.24 0 0 -.24 29.999 761.009]def
initQDpatterns
/sD 16 dict def
/f0_1/Helvetica
:mre
/f0_18 f0_1 18 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
initializepage
gS 0 0 2300 3042 rC
:a
0 0<888888888888888888888888888888888888888888888888>fg bk
:b
0 0 2300 3041 rC
774 598 40 387 rF
0 0<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC>fg bk
:b
1271 589 87 367 rF
0 0<FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000000000>fg bk
:b
643 439 827 67 rF
:e
1 G
1242 466 154 154 rF
0 G
4 lw
1244 468 150 150 rS
945 145 744 794 rC
gS
1.636 1.895 scale
800.316 285.922 :T
-800.316 -285.922 :T
779.754 290.797 :M
f0_18 sf
(NBIC)S
gR
gR
1 G
gS 0 0 2300 3041 rC
717 466 154 154 rF
0 G
4 lw
719 468 150 150 rS
420 145 744 794 rC
gS
1.636 1.895 scale
479.993 285.922 :T
-479.993 -285.922 :T
458.93 290.797 :M
f0_18 sf
(NBIC)S
gR
gR
gS 0 0 2300 3041 rC
1242 691 154 154 rF
0 G
4 lw
1244 693 150 150 rS
930 370 774 794 rC
gS
1.677 1.895 scale
780.892 405.169 :T
-780.892 -405.169 :T
755.329 409.544 :M
f0_18 sf
(68030)S
gR
gR
gS 0 0 2300 3041 rC
1242 916 154 154 rF
0 G
4 lw
1244 918 150 150 rS
947 601 730 794 rC
gS
1.615 1.895 scale
808.485 526.582 :T
-808.485 -526.582 :T
788.673 531.457 :M
f0_18 sf
(RAM)S
gR
gR
gS 0 0 2300 3041 rC
801 757 154 154 rF
0 G
4 lw
803 759 150 150 rS
509 436 736 794 rC
gS
1.623 1.895 scale
536.679 439.814 :T
-536.679 -439.814 :T
516.429 444.376 :M
f0_18 sf
(RCM)S
gR
gR
:a
0 0<F0F0F0F0F0F0F0F0F0F0F0F00F0F0F0F0F0F0F0F0F0F0F0F>fg bk
:b
gS 0 0 2300 3041 rC
-2 -12 978 910 2 12 966 758 @b
endp
end
%%EndDocument

 endTexFig
 1441 5246 a Fs(Figure)g(4:)27 b(RCM)21 b(on)h(N)t Ft(E)t(X)t(T)t
Fs(B)t Ft(U)t(S)r Fs(.)1929 5589 y(7)p eop
%%Page: 8 8
8 7 bop 125 83 a Fs(Software)22 b(has)i(lots)f(of)g(references)f(from)g
(the)i(recursion)d(stack)j(to)f(RCM,)h(each)f(one)g(of)g(which)g(might)
f(require)g Fp(ad)h(hoc)g Fs(an)g(in-)0 216 y(crement/decrement)15
b(to)k(sustain)f(counts)g(with)h(each)f(push/pop)e(of)i(the)h(stack.)26
b(T)-6 b(o)19 b(provide)d(an)j(alternative)e(as)i(fast)g(as)g(the)g
(stack,)f(we)0 349 y(expanded)e(a)j(portion)e(of)h(RCM\320originally)f
(a)i(RAM-like)f(register)g(\256le\320to)h(RAM)g(that)f(issues)i
(increments)d(and)h(decrements)f(but)0 482 y(that)e(is)i(otherwise)d
(isolated)i(from)e(the)h(heap.)25 b(The)15 b(enlar)o(ged)e(serial)j
(\256le,)g(called)g Fn(pacRAM)p Fs(,)g(for)e(\252)p Fn(p)p
Fs(ointers)h Fn(a)p Fs(lways)h Fn(c)p Fs(ounted\272)d(RAM,)0
614 y(is)23 b(simply)e(RAM)i(that)f(performs)e(the)i(specialized)f
(transactions)g Fo(write)g Fs(instruction,)g(but)g(that)h(is)h(never)e
(swept)h(into)g Fn(A)-6 b(V)g(AIL)p Fs(able)0 747 y(space.)27
b(The)20 b(tested)g(version)f(has)i(two)f(megabytes)f(of)h(pacRAM)g
(and)f(six)i(of)f(RCM)h(heap)f(\(3/4)f(megaNode\).)125
880 y(The)25 b(hardware)g(was)h(built)g(on)g(schedule)f(and)g(the)h
Fn(pacRAM)h Fs(design)e(modi\256cation)g(was)h(made)g(four)f(months)g
(later)-5 b(.)44 b(Minor)0 1013 y(wiring)21 b(changes)g(were)h(made)f
(later)i(\(one)e(wiring)g(error)m(,)g(one)g(counter)g(expanded,)e(and)j
(error)n(-traps)e(set\),)j(but)e(the)h(original)f(design)0
1146 y(remained)e(unchanged)e(except)j(for)f(the)h Fn(pacRAM)h
Fs(expansion.)0 1500 y Fr(4)119 b(In-place)31 b(Garbage)e(Collection)0
1718 y Fs(This)19 b(prototype)e(provides)h(several)h(new)g(features)f
(not)h(included)f(in)h(the)g(original)f(description)g([34)o(],)h
(including)e(hardware)h(support)0 1851 y(for)25 b(Deutsch-Schorr)n(-W)
-7 b(aite)23 b(collection)h([32)o(].)42 b(It)26 b(has)f(two)h(features)
e(that)h(render)f(this)i(algorithm)e(competitive)g(with)h(recopying)0
1984 y(collection)e(even)h(on)f(this)i(uniprocessor)d(but,)j(more)e
(importantly)f(it)j(provides)e(for)h(multiprocessing.)37
b(A)24 b(multiprocessing)e(envi-)0 2117 y(ronment)16
b(requires)h(that)h(shared)f(address)h(space)g(be)g(used)f(ef)o
(\256ciently)g(and)g(that)h(collection,)g(itself,)g(be)g(an)g(ef)o
(\256cient)f(\(asynchronous\))0 2250 y(parallel)24 b(program.)37
b(\(Allowing)23 b(addressable)g(memory)f(to)j(lie)g(idle)f(in)g(an)g
(unused)f(\252semispace\272)h(wastes)h(the)g(increased)e(latency)-5
b(,)0 2383 y(caused)21 b(by)h(the)g(lar)o(ger)m(,)f(unused)g(address)g
(space.\))32 b(Mark/sweep)21 b(lends)h(itself)h(to)f(an)g
(implementation)e(in)i(memory)e(hardware)g(that)0 2515
y(allows)h(memory)d(to)i(be)g(used)g(to)h(full)f(capacity)f(and)h(that)
g(allows)h(fully)e(asynchronous)f(collection.)125 2648
y(The)23 b(experiments)e(below)-5 b(,)23 b(however)m(,)f(can)h(only)g
(demonstrate)f(the)h(speed)g(of)g(uniprocessor)e(collection,)i(faster)h
(than)e(recopy-)0 2781 y(ing.)42 b(T)-6 b(wo)25 b(features)g
(contribute)e(to)i(this)h(performance.)39 b(First,)27
b(the)f(sweep)f(phase)g(is)h(performed)d(on)i(line)g(in)g(memory)f
(after)h(col-)0 2914 y(lection)d(has)g(completed;)g(the)h(sweeper)f
(runs)g(after)g(the)g(mutator)f(has)i(already)e(resumed,)h(linking)f
Fn(A)-6 b(V)g(AIL)p Fs(able)23 b(space)f(through)f(the)0
3047 y(count/link)e(\256elds.)28 b(Most)20 b(importantly)-5
b(,)18 b(RCM)k(performs)c(all)j(the)g(pointer)e(rotations)g(associated)
i(with)f(marking)f(as)i(atomic)f(opera-)0 3180 y(tions)h(at)h(memory)e
(\(so)h(that)h(multiprocessor)d(collection)i(is)h(possible)f(without)g
(any)f(processor)h(synchronization.\))27 b(It)21 b(\256ts)i(well)f(the)
0 3312 y(live/dead)d(tagging)g(described)g(above,)g(and)g(complements)g
(reference)f(counting)h(to)h(form)f(a)i(truly)e(hybrid)g(heap)g
(manager)-5 b(.)125 3445 y(When)25 b(garbage)g(collection)f(becomes)h
(necessary\320when)g(an)g Fn(A)-6 b(V)g(AIL)p Fs(able)27
b(space)f(list)h(is)g(exhausted)e(\(in)g(spite)i(of)e(reference)0
3578 y(counting\)\320all)19 b(mutators)h(must)i(synchronize)d(and)h
(enter)h(collection)f(together)-5 b(.)29 b(At)22 b(that)g(time,)f(all)h
(banks)e(of)h(RCM)i(are)e(switched)0 3711 y(to)e(\252)p
Fn(GC)g Fs(mode\272.)25 b(Arbitrarily)18 b(many)g(collectors)g(then)h
(traverse)f(all)i(active)e(nodes)g(without)h(any)f(synchronization,)e
(marking)h(them.)0 3844 y(After)h(marking,)e(all)j(collectors)e
(synchronize)f(and)h(leave)h Fn(GC)g Fs(mode,)f(whereupon)e(the)j
(mutators)f(may)h(resume)f(as)i(before.)25 b(The)17 b(act)0
3977 y(of)i(leaving)g Fn(GC)h Fs(mode)f(initiates)h(a)g(hardware)f
(sweeper)g(in)h(each)f(bank)g(of)h(RCM)g(that)g(reconstructs)f(the)h
Fn(A)-6 b(V)g(AIL)p Fs(able)20 b(space)g(locally)0 4109
y(in)g(time)h(overlapped)c(with)k(the)f(mutators.)125
4242 y(Not)f(only)f(does)h(RCM)i(admit)e(parallel)g(collection,)f(but)h
(also)h(it)g(recomputes)d(all)j(reference)e(counts)g(to)i(perfect)e
(accuracy)-5 b(.)25 b(Like)0 4375 y(recopying)e(collection,)i(it)g
(runs)g(in)g(just)h(the)f(time)g(necessary)f(for)g(traversing)g(and)h
(counting)e(active)i(pointers.)40 b(Each)24 b(mark)h(is)h(an)0
4508 y(increment)f(to)h(a)h(recomputed)d(reference)g(count,)j
(correcting)d(counts)i(in\257ated)g(by)f(cycles)i(or)m(,)g(with)f(more)
f(compact)g(counts,)i(un-)0 4641 y(sticking)17 b(shrunken)f
(\252sticky\272)i(counts)f([10)o(].)26 b(Thus,)18 b(garbage)e
(collection)h(improves)g(the)h(performance)d(of)i(reference)g
(counting,)f(just)0 4774 y(as)21 b(reference)d(counting)h
(symbiotically)g(postpones)f(the)j(need)e(for)h(collection.)125
4906 y(Aside)g(from)e(initiating)i(the)g(hardware)e(sweeper)h(as)i
Fn(GC)f Fs(mode)f(is)h(terminated,)f(that)h(mode)f(rede\256nes)g(the)g
(meaning)g(of)g(\252read\272)0 5039 y(and)h(\252write\272)g(so)h(that)g
(RCM)g(cannot)f(even)f(be)i(cached)e(as)i(write-through)d(memory)h
(while)h(in)h(that)f(mode.)27 b(There)20 b(are)g(actually)g
Fp(two)0 5172 y Fs(read)g(functions,)e(called)i Fp(\256rst)h(r)m(ead)h
Fs(and)d Fp(later)i(r)m(ead)p Fs(,)f(plus)g(a)g Fp(special)g(write)i
Fs(operation)c(that)i(rotates)g(the)h(node.)125 5305
y(\252First)j(read\272)f(is)i(an)e(atomic)h(operation)d(that)j
(responds)f(dif)o(ferently)e(when)i(a)h(node)f(is)h(read)g(the)f
(\256rst)i(time)f(after)f(entering)f Fn(GC)1929 5589
y Fs(8)p eop
%%Page: 9 9
9 8 bop 0 83 a Fs(mode.)41 b(On)25 b(the)g(second)g(and)f(later)i
(issues)g(of)f(\252\256rst)h(read\272)e(to)i(an)f(address,)g(it)h
(returns)f(only)f Fn(NIL)i Fs(but)f(increments)f(the)h(reference)0
216 y(count.)k(The)20 b(very)h(\256rst)g(time)h(such)e(a)i(read)f(is)h
(applied)e(to)h(a)g(node,)f(the)i(node)e(is)i(marked,)d(its)j
(reference)e(count)g(is)i(reset)f(to)h(one,)e(and)0 349
y(the)h(content)e(of)h(its)i(\256rst)f(live)g(\256eld)g(is)g(returned.)
26 b(If)21 b(no)f(\256elds)h(are)f(alive,)h(then)f(a)h
Fn(NIL)g Fs(is)h(returned.)k(T)-6 b(o)20 b(a)h(\(parallel\))f
(collector)m(,)f(such)0 482 y(a)i Fn(NIL)g Fs(means)e(that)i(there)e
(is)j(no)d(infrastructure)f(beneath)h(the)h(node)g(to)g(traverse.)125
614 y(If,)c(however)m(,)f(\252\256rst)i(read\272)f(returns)f(a)i(non-)p
Fn(NIL)e Fs(pointer)m(,)g(then)h(that)g(infrastructure)e(must)j(be)f
(traversed)f(recursively)-5 b(.)24 b(T)-6 b(o)16 b(avoid)f(a)0
747 y(separate)f(stack)h(and)f(its)h(bookkeeping,)d(a)j(\252special)f
(write\272)h(is)g(used)f(to)h(replace)f(that)g(pointer)g(with)g(the)h
(stack/pointer)m(,)e(with)i(a)g(rotation)0 880 y(of)22
b(the)g(node)f(implicit)h(at)g(memory)-5 b(.)31 b(On)22
b(one)f(or)h(two)g(later)g(visits,)h(another)e(live)h(pointer)f(can)h
(be)g(read/written)e(with)j(\252later)f(read,\272)0 1013
y(and)17 b(ultimately)f(the)h(stack)h(is)g(read)e(out)h(and)g(the)g
(last)h(live)g(pointer)e(written)h(back,)f(restoring)g(the)h(node)g(to)
g(its)h(original)e(con\256guration)0 1146 y([32)o(].)125
1279 y(The)25 b(ef)o(fect)h(of)g(these)g(special)g(reads)g(and)g(write)
h(is)g(to)f(allow)g(traversal)g(of)g(a)h(node)e(with)h(two)h(live)f
(pointers)f(in)i(six)f(memory)0 1411 y(cycles,)20 b(with)g(one)g(live)g
(pointer)f(in)i(four)e(memory)f(cycles,)i(and)g(with)h(both)e(pointers)
g(dead)h(\()p Fp(e.g.)26 b Fs(atomic\))20 b(in)g(just)h(one)e(cycle.)27
b(Each)0 1544 y(\(later\))21 b(shared)f(reference)g(to)h(a)h(node)e
(costs)i(an)g(additional)e(cycle,)h(but)g(no)g(synchronization)d
(beyond)h(that)j(implicit)f(in)g(the)h(path)e(to)0 1677
y(memory)-5 b(.)37 b(Collecting)24 b(a)h(node)e(in)i(less)g(than)f(six)
h(cycles)f(compares)f(favorably)f(with)j(recopying)d(performance)f
(\(although)h(RCM)0 1810 y(must)e(yet)g(spent)g(another)f(cycle)h
(initially)g(to)h(reallocate)e(it.\))125 1943 y(The)g(measurements)g
(below)h(show)g(that)g(this)h(hardware)d(collector)i(does,)f(indeed,)g
(beat)h(non-generational)d(stop-and-copy)-5 b(.)0 2297
y Fr(5)119 b(Description)31 b(of)f(Softwar)n(e)0 2515
y Fs(Multiprocessor)13 b(use)i(of)g(RCM)h(requires)e(that)h(caching)f
(not)h(interfere)f(with)h(the)g(order)f(that)h(writes)g(are)g
(dispatched)f(from)g(the)h(proces-)0 2648 y(sor)k(to)h(memory;)e
(write-through)e(caching)i(suf)o(\256ces)h(as)h(long)e(as)i(writes)g
(from)e(cache)h(occur)f(in)i(the)f(same)h(order)e(as)i(the)f(writes)h
(from)0 2781 y(the)15 b(processor)-5 b(.)24 b(Otherwise,)15
b(caching)e(must)i(be)f(disabled.)24 b(\(This)15 b(is)g(more)f(fodder)f
(for)g(the)i(debate)f(over)f(RISC)j(vs.)25 b(cache-coherency)0
2914 y(on)17 b(multiprocessors.\))23 b(This)18 b(protocol)d(suf)o
(\256ces)i(to)g(prevent)e(a)j(node)e(from)g(being)g(prematurely)e
(released)j(by)g(a)g(write)g(from)f(one)h(pro-)0 3047
y(cessor)i(while)g(a)h(pending)d(increment)g(is)j(asynchronously)c
(delayed)i(within)h(the)g(cache)f(of)h(another)-5 b(.)26
b(Therefore,)16 b(RCM)21 b(is)f(accessed)0 3180 y(as)f(a)f(private)g
(device)f(without)h(caching,)f(system)h(traps,)g(or)g(interrupt)f
(protocols.)24 b(T)m(ransparent)17 b(user)h(access)g(to)h(bus-resident)
d(mem-)0 3312 y(ory)j(is)j(a)e(surprising)f(exercise;)h(no)g(kernel)f
(hacking)f(was)j(necessary!)125 3445 y(The)15 b(M)t Ft(A)t(C)t(H)j
Fs(operating)12 b(system)i(allows)h(a)g(user)s(')-5 b(s)14
b(program)e(to)i(have)g(dynamically)e(loaded)h(kernel)h(servers.)24
b(These)14 b(provide)e(that)0 3578 y(a)21 b(bit)g(in)i(S)t
Ft(C)t(H)t(E)t(M)t(E)r Fs(')-5 b(s)21 b(process)f(control)g(block)f
(indicates)i(to)f(the)h(scheduler)e(that)i(the)g(state)g(of)f(the)h
(transparent-translation)c(register)0 3711 y(should)g(be)i(preserved)e
(across)h(each)g(context)g(swap.)26 b(That)19 b(provision)d(and)i(a)h
(newer)f(version)f(of)i(the)f(slot)h(driver)f(from)f(NeXT)i(allow)0
3844 y(user)i(software)f(the)h(privilege)e(of)h(transparent)g(access)h
(to)g(devices)f(on)h(the)h(N)t Ft(E)t(X)t(T)t Fs(B)t
Ft(U)t(S)r Fs(.)30 b(This,)20 b(of)h(course,)f(would)g(not)g(have)g
(been)g(a)0 3977 y(problem)14 b(for)i(non-virtual)e(systems)i(like)h
(the)f(68020)e(Macintosh,)i(but)g(it)h(would)e(not)h(have)f(been)h
(possible)f(on)h(some)i(U)t Ft(N)t(I)t(X)h Fs(systems.)125
4109 y(The)i(initial)h(goal)f(in)g(testing)h(RCM)h(hardware)d(is)i(not)
f(to)h(race)f(it)h(against)g(other)f(hardware)e(\(because)i(the)j(N)t
Ft(E)t(X)t(T)t Fs(B)t Ft(U)t(S)g Fs(delay)d(is)0 4242
y(unfair\),)k(but)g(to)h(compare)d(its)k(own)e(RAM-heap)f(speed)h(to)h
(its)g(RCM-heap)f(speed,)h(factoring)e(out)h(the)g(bus)g(delay)-5
b(.)42 b(Therefore,)24 b(a)0 4375 y(series)f(of)f(problems)f(was)i
(designed)e(and)h(re\256ned)g(to)g(provide)f(extrapolation)f(of)i(the)h
(performance)c(of)j(RCM)i(as)f(if)g(built)f(in)h(VLSI)0
4508 y(technology)15 b(and)i(installed)g(close)g(to)h(the)f(processor)f
(like)i(dynamic)d(RAM.)j(These)f(experiments)f(cannot)g(indicate)h(its)
h(multiproces-)0 4641 y(sor)23 b(performance)d(or)i(reveal)g
(contention)f(that)i(might)f(result)g(from)g(intensive)g
Fo(increment)p Fs(s)g(and)g Fo(decrement)p Fs(s,)h(because)f(the)0
4774 y(bus)e(cycles)g(are)g(long)g(enough)e(to)i(absorb)f(all)i
(RCM-internal)f(cycles.)125 4906 y(Figure)13 b(5)h(illustrates)g(the)g
(\256ve)g(versions)f(of)g(the)j(S)t Ft(C)t(H)t(E)t(M)t(E)h
Fs(implementation)12 b(that)h(we)i(built.)24 b(All)15
b(are)f(identical,)g(except)f(for)g(where)0 5039 y(the)22
b(recursion)e(stack)i(resides,)g(where)f(the)h(heap)f(of)g(binary)g
(nodes)g(resides,)h(and)f(how)g(it)i(is)f(managed.)30
b(The)22 b(memory)e(available)h(is)0 5172 y(either)i(cached)f(RAM,)i
(or)f(uncached)f(RCM)i(memory)e(on)h(the)i(N)t Ft(E)t(X)t(T)t
Fs(B)t Ft(U)t(S)r Fs(.)37 b(The)23 b(latter)h(is)g(slower)f(and)g(in)g
(no)g(cases)h(is)h(it)f(cached.)0 5305 y(The)e(host)h(is)h(a)f(NeXT)f
(cube)g(running)f(under)i(M)t Ft(A)t(C)t(H)j Fs(3.0)c(with)h(a)g(68030)
e(processor)g(and)h(16)g(megabytes)g(of)g(RAM,)h(exclusive)f(of)1929
5589 y(9)p eop
%%Page: 10 10
10 9 bop 486 145 a
 23113076 37890293 7696465 8420065 32233062 48218030 startTexFig
 486 145 a
%%BeginDocument: ../../TR401/Figures/fig6.5schemes.nc.eps
%ADO_ImageableArea: 30 30.96 582 761.04
userdict begin/dscInfo 5 dict dup begin
/Title(Canvas:fig6.5schemes.nc)def
/Creator(Canvas2.1: LaserWriter 8 8.2)def
/CreationDate(11:29 AM Tuesday, February 27, 1996)def
/For(dswise)def
/Pages 1 def
end def end
/md 173 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
/G/setgray ld
/:F/setrgbcolor ld
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
/currentpacking where {pop sc_oldpacking setpacking}if end
md begin
/mT[.24 0 0 -.24 29.999 761.009]def
initQDpatterns
/sD 16 dict def
/f0_1/Times-Roman
:mre
/f0_14 f0_1 14 scf
/f1_1/Helvetica
:mre
/f1_24 f1_1 24 scf
/f2_1/Helvetica-Bold
:mre
/f2_20 f2_1 20 scf
/f2_14 f2_1 14 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
initializepage
gS 0 0 2300 3042 rC
:a
0 0<FFFFFF000000000000000000FFFFFF000000000000000000>fg bk
:b
0 0 2300 3041 rC
1539 2537 38 50 rF
0 0<000000FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF>fg bk
:b
1539 2584 38 50 rF
0 0<000000181818242424424242818181000000000000000000>fg bk
:b
1539 2584 38 14 rF
:e
0 G
6 lw
1540 2538 35 94 rS
1014 1992 1286 1049 rC
gS
2.81 2.812 scale
609.249 917.154 :T
-609.249 -917.154 :T
562.312 920.904 :M
f0_14 sf
( Recursion stack)S
gR
gR
:a
0 0<B1B1B13030300303031B1B1BD8D8D8C0C0C00C0C0C8D8D8D>fg bk
:b
gS 0 0 2300 3041 rC
1535 2467 59 59 rF
:e
0 G
3 lw
1536.5 2468.5 56 56 rS
1082 1918 1218 1123 rC
gS
2.63 2.812 scale
648.032 890.233 :T
-648.032 -890.233 :T
612.61 894.592 :M
f0_14 sf
(  Static code)S
gR
gR
0 0<FEFEFEFDFDFDFBFBFBF7F7F7EFEFEFDFDFDFBFBFBF7F7F7F>fg bk
:b
gS 0 0 2300 3041 rC
1535 2410 59 41 rF
:e
1122 1849 1110 1171 rC
gS
2.445 2.812 scale
682.044 866.496 :T
-682.044 -866.496 :T
660.232 870.059 :M
0 G
f0_14 sf
(  Cache)S
gR
gR
0 0<818181424242242424181818181818242424424242818181>fg bk
:b
gS 0 0 2300 3041 rC
974 2558 66 29 rF
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
974.5 2558.5 65 28 rS
0 0<7D7D7DBBBBBBD7D7D7EFEFEFD7D7D7BBBBBB7D7D7DFEFEFE>fg bk
:b
1039 2557 69 31 rF
:e
0 G
6 lw
974 2558 132 29 rS
569 1943 1487 1098 rC
gS
2.778 2.904 scale
468.501 885.599 :T
-468.501 -885.599 :T
406.439 881.661 :M
f0_14 sf
(Vectors: various sizes)S
gR
gS
2.778 2.904 scale
468.501 885.599 :T
-468.501 -885.599 :T
406.439 896.47 :M
f0_14 sf
(\(Recopying collector\))S
gR
gR
0 0<FFFFFF818181BDBDBDBDBDBDBDBDBDBDBDBD818181FFFFFF>fg bk
:b
gS 0 0 2300 3041 rC
1043 2410 73 74 rF
0 0(\000\000\000~~~BBBBBBBBBBBB~~~\000\000\000)fg bk
:b
972 2410 74 74 rF
:e
0 G
6 lw
974 2412 140 70 rS
573 1831 1482 1210 rC
gS
2.776 2.904 scale
469.323 846.526 :T
-469.323 -846.526 :T
407.761 843.088 :M
f0_14 sf
(Two-semispace heap)S
gR
gS
2.776 2.904 scale
469.323 846.526 :T
-469.323 -846.526 :T
407.761 857.898 :M
f0_14 sf
(\(Recopying collector\))S
gR
gR
0 0(\000\000\000~~~BBBBBBBBBBBB~~~\000\000\000)fg bk
:b
gS 0 0 2300 3041 rC
443 2532 59 59 rF
:e
0 G
3 lw
444.5 2533.5 56 56 rS
0 1939 1478 1102 rC
gS
2.787 2.904 scale
255.369 884.221 :T
-255.369 -884.221 :T
190.869 880.283 :M
f0_14 sf
(Heap: counted with)S
gR
gS
2.787 2.904 scale
255.369 884.221 :T
-255.369 -884.221 :T
190.869 895.093 :M
f0_14 sf
(mark/\(sweep\) collector)S
gR
gR
:e
gS 0 1812 1478 1229 rC
gS
2.787 2.904 scale
255.369 840.295 :T
-255.369 -840.295 :T
190.869 836.545 :M
0 G
f0_14 sf
(Heap: uncounted with)S
gR
gS
2.787 2.904 scale
255.369 840.295 :T
-255.369 -840.295 :T
190.869 851.354 :M
0 G
f0_14 sf
(mark/\(sweep\) collector)S
gR
gR
:a
0 0<FFFFFF818181BDBDBDBDBDBDBDBDBDBDBDBD818181FFFFFF>fg bk
:b
gS 0 0 2300 3041 rC
443 2406 59 59 rF
:e
0 G
3 lw
444.5 2407.5 56 56 rS
1 G
849 262 259 118 rF
0 G
6 lw
852 265 253 112 rS
342 0 1255 945 rC
gS
2.62 2.885 scale
365.788 114.837 :T
-365.788 -114.837 :T
332.788 122.024 :M
f1_24 sf
(68030)S
gR
gR
0 0<FEFEFEFDFDFDFBFBFBF7F7F7EFEFEFDFDFDFBFBFBF7F7F7F>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 1120 379 3 30 1090 263 @b
0 0<FFFFFF000000000000000000FFFFFF000000000000000000>fg bk
:b
1230 235 59 102 rF
0 0<000000FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF>fg bk
:b
1230 334 59 101 rF
0 0<000000181818242424424242818181000000000000000000>fg bk
:b
1230 334 59 27 rF
:e
0 G
6 lw
1232 237 56 197 rS
:a
0 0<818181424242242424181818181818242424424242818181>fg bk
:b
1358 307 169 28 rF
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
1 lw
1358.5 307.5 168 27 rS
0 0<7D7D7DBBBBBBD7D7D7EFEFEFD7D7D7BBBBBB7D7D7DFEFEFE>fg bk
:b
1525 306 172 31 rF
:e
0 G
6 lw
1358 307 338 28 rS
:a
0 0<FFFFFF818181BDBDBDBDBDBDBDBDBDBDBDBD818181FFFFFF>fg bk
:b
1483 320 172 115 rF
0 0(\000\000\000~~~BBBBBBBBBBBB~~~\000\000\000)fg bk
:b
1314 320 172 115 rF
:e
0 G
1316 321 337 113 rS
:a
0 0<B1B1B13030300303031B1B1BD8D8D8C0C0C00C0C0C8D8D8D>fg bk
:b
1722 221 158 214 rF
:e
0 G
3 lw
1723.5 222.5 155 211 rS
:a
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
1203 195 704 267 rS
1118 336 -3 30 1205 306 3 1118 306 @a
:e
864 0 1355 889 rC
gS
2.703 2.904 scale
365.788 114.837 :T
-365.788 -114.837 :T
521.275 86.444 :M
0 G
f2_14 sf
(Main Memory)S
gR
gS
2.703 2.904 scale
365.788 114.837 :T
-365.788 -114.837 :T
543.103 101.253 :M
0 G
f2_14 sf
( \(RAM\))S
gR
gR
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
12 lw
gS 0 0 2300 3041 rC
374 237 436 239 rS
:e
0 0 1350 978 rC
gS
2.79 2.904 scale
208.595 121.096 :T
-208.595 -121.096 :T
142.283 117.096 :M
0 G
f2_14 sf
(Reference-counting)S
gR
gS
2.79 2.904 scale
208.595 121.096 :T
-208.595 -121.096 :T
157.335 131.905 :M
0 G
f2_14 sf
(Memory  \(RCM\))S
gR
gR
0 0<EAEAEA757575BABABA5D5D5DAEAEAE575757ABABABD5D5D5>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 614 238 3 30 584 137 @b
386 153 -3 30 1008 123 3 386 123 @a
-3 -30 1008 266 3 30 978 137 @b
:e
542 0 1422 755 rC
gS
2.746 2.857 scale
452.295 53.861 :T
-452.295 -53.861 :T
398.795 58.798 :M
0 G
f2_20 sf
(Stock RAM)S
gR
gR
0 0<FFFFFF818181BDBDBDBDBDBDBDBDBDBDBDBD818181FFFFFF>fg bk
:b
gS 0 0 2300 3041 rC
611 1688 172 116 rF
:e
0 G
6 lw
613 1690 169 112 rS
:a
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
374 1606 436 239 rS
1383 168 :M
psb
pse
gR
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
gS 0 0 2300 3042 rC
:e
0 G
np 893 1562 :M
724 1731 :L
738 1745 :L
907 1576 :L
893 1562 :L
3 lw
:K
eofill
1 G
-3 -3 727 1734 3 3 893 1562 @b
724 1734 -3 3 741 1745 3 724 1731 @a
-3 -3 741 1748 3 3 907 1576 @b
893 1565 -3 3 910 1576 3 893 1562 @a
907 1576 :M
0 0 2300 3041 rC
psb
pse
gR
:e
1 G
3 lw
gS 0 0 2300 3042 rC
0 G
np 724 1731 :M
710 1759 :L
738 1745 :L
724 1731 :L
:K
eofill
1 G
-3 -3 713 1762 3 3 724 1731 @b
-3 -3 713 1762 3 3 738 1745 @b
724 1734 -3 3 741 1745 3 724 1731 @a
0 G
0 0 2300 3041 rC
724 1731 :M
psb
0      systemdict begin setgray end
newpath
882.2808 1551.5478 moveto
876.8263 1557.0023
881.3154 1570.4698
892.2244 1581.3788
curveto
903.1335 1592.2879
916.6010 1596.7770
922.0555 1591.3226
curveto
927.5100 1585.8680
923.0208 1572.4005
912.1118 1561.4915
curveto
901.2028 1550.5825
887.7353 1546.0933
882.2808 1551.5478
curveto
closepath
fill
pse
psb
pse
:a
0 0<FFFFFF000000000000000000FFFFFF000000000000000000>fg bk
:b
408 1648 82 80 rF
0 0<000000FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF>fg bk
:b
408 1725 82 81 rF
0 0<000000181818242424424242818181000000000000000000>fg bk
:b
408 1725 82 23 rF
:e
0 G
6 lw
410 1650 78 154 rS
172 1061 1030 1171 rC
gS
2.318 2.812 scale
291.698 585.497 :T
-291.698 -585.497 :T
276.51 588.81 :M
f2_14 sf
(RCM)S
gR
gR
:a
0 0<818181424242242424181818181818242424424242818181>fg bk
:b
gS 0 0 2300 3041 rC
1231 1690 170 28 rF
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
1 lw
1231.5 1690.5 169 27 rS
0 0<7D7D7DBBBBBBD7D7D7EFEFEFD7D7D7BBBBBB7D7D7DFEFEFE>fg bk
:b
1399 1688 172 32 rF
:e
0 G
6 lw
1232 1690 337 28 rS
:a
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
1203 1563 704 268 rS
1118 1705 -3 30 1205 1675 3 1118 1675 @a
0 0<B1B1B13030300303031B1B1BD8D8D8C0C0C00C0C0C8D8D8D>fg bk
:b
1722 1590 158 214 rF
:e
0 G
3 lw
1723.5 1591.5 155 211 rS
770 1034 1355 1360 rC
gS
2.703 2.951 scale
531.624 580.719 :T
-531.624 -580.719 :T
486.499 561.469 :M
f2_14 sf
(Main Memory)S
gR
gS
2.703 2.951 scale
531.624 580.719 :T
-531.624 -580.719 :T
508.326 606.536 :M
f2_14 sf
( \(RAM\))S
gR
gR
0 0<EAEAEA757575BABABA5D5D5DAEAEAE575757ABABABD5D5D5>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 614 1607 3 30 584 1506 @b
386 1522 -3 30 1008 1492 3 386 1492 @a
-3 -30 1008 1635 3 30 978 1506 @b
:e
540 908 1441 1202 rC
gS
2.756 2.857 scale
453.285 528.097 :T
-453.285 -528.097 :T
397.285 533.035 :M
0 G
f2_20 sf
(Nailed RCM)S
gR
gR
:e
1 G
gS 0 0 2300 3041 rC
863 1631 259 118 rF
0 G
6 lw
866 1634 253 112 rS
356 1085 1255 1229 rC
gS
2.62 2.885 scale
370.819 589.101 :T
-370.819 -589.101 :T
338.131 596.601 :M
f1_24 sf
(68030)S
gR
gR
:a
0 0<FEFEFEFDFDFDFBFBFBF7F7F7EFEFEFDFDFDFBFBFBF7F7F7F>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 1134 1748 3 30 1104 1632 @b
0 0(\000\000\000~~~BBBBBBBBBBBB~~~\000\000\000)fg bk
:b
625 2096 172 116 rF
:e
0 G
6 lw
627 2098 169 112 rS
:a
0 0<999999CCCCCC666666333333999999CCCCCC666666333333>fg bk
:b
12 lw
374 2056 436 239 rS
:e
0 1689 1095 1171 rC
gS
2.589 2.812 scale
181.64 809.477 :T
-181.64 -809.477 :T
151.015 812.102 :M
0 G
f2_14 sf
(PACRAM)S
gR
gR
0 0<999999CCCCCC666666333333999999CCCCCC666666333333>fg bk
:b
gS 0 0 2300 3041 rC
-3 -18 608 2296 3 18 590 2054 @b
:e
191 1675 1030 1171 rC
gS
2.318 2.812 scale
299.894 803.812 :T
-299.894 -803.812 :T
284.707 807.124 :M
0 G
f2_14 sf
(RCM)S
gR
gR
0 0<FFFFFF000000000000000000FFFFFF000000000000000000>fg bk
:b
gS 0 0 2300 3041 rC
408 2072 82 80 rF
0 0<000000FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF>fg bk
:b
408 2149 82 81 rF
0 0<000000181818242424424242818181000000000000000000>fg bk
:b
408 2149 82 23 rF
:e
0 G
6 lw
410 2074 78 154 rS
:a
0 0<818181424242242424181818181818242424424242818181>fg bk
:b
1231 2140 170 28 rF
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
1 lw
1231.5 2140.5 169 27 rS
0 0<7D7D7DBBBBBBD7D7D7EFEFEFD7D7D7BBBBBB7D7D7DFEFEFE>fg bk
:b
1399 2138 172 32 rF
:e
0 G
6 lw
1232 2140 337 28 rS
:a
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
1203 2013 704 268 rS
1118 2155 -3 30 1205 2125 3 1118 2125 @a
0 0<B1B1B13030300303031B1B1BD8D8D8C0C0C00C0C0C8D8D8D>fg bk
:b
1722 2040 158 214 rF
:e
0 G
3 lw
1723.5 2041.5 155 211 rS
770 1466 1355 1360 rC
gS
2.703 2.951 scale
531.624 727.101 :T
-531.624 -727.101 :T
486.499 707.851 :M
f2_14 sf
(Main Memory)S
gR
gS
2.703 2.951 scale
531.624 727.101 :T
-531.624 -727.101 :T
508.326 752.917 :M
f2_14 sf
( \(RAM\))S
gR
gR
0 0<EAEAEA757575BABABA5D5D5DAEAEAE575757ABABABD5D5D5>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 614 2057 3 30 584 1956 @b
386 1972 -3 30 1008 1942 3 386 1942 @a
-3 -30 1008 2085 3 30 978 1956 @b
:e
566 1372 1345 1202 rC
gS
2.697 2.857 scale
454.609 691.18 :T
-454.609 -691.18 :T
411.922 695.43 :M
0 G
f2_20 sf
(Full RCM)S
gR
gR
:e
1 G
gS 0 0 2300 3041 rC
863 2081 259 118 rF
0 G
6 lw
866 2084 253 112 rS
356 1535 1255 1229 rC
gS
2.62 2.885 scale
370.819 745.098 :T
-370.819 -745.098 :T
338.131 752.598 :M
f1_24 sf
(68030)S
gR
gR
:a
0 0<FEFEFEFDFDFDFBFBFBF7F7F7EFEFEFDFDFDFBFBFBF7F7F7F>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 1134 2198 3 30 1104 2082 @b
0 0<FFFFFF000000000000000000FFFFFF000000000000000000>fg bk
:b
386 1224 60 67 rF
0 0<000000FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF>fg bk
:b
386 1288 60 66 rF
0 0<000000181818242424424242818181000000000000000000>fg bk
:b
386 1288 60 18 rF
:e
0 G
6 lw
388 1226 56 126 rS
:a
0 0<FFFFFF818181BDBDBDBDBDBDBDBDBDBDBDBD818181FFFFFF>fg bk
:b
625 1238 158 116 rF
0 0(\000\000\000~~~BBBBBBBBBBBB~~~\000\000\000)fg bk
:b
471 1238 157 116 rF
:e
0 G
472 1240 310 112 rS
:a
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
374 1156 436 239 rS
:e
93 621 1030 1171 rC
gS
2.318 2.812 scale
257.807 429.488 :T
-257.807 -429.488 :T
242.432 432.363 :M
0 G
f2_14 sf
(RAM)S
gR
gR
0 0<818181424242242424181818181818242424424242818181>fg bk
:b
gS 0 0 2300 3041 rC
1231 1240 170 28 rF
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
1 lw
1231.5 1240.5 169 27 rS
0 0<7D7D7DBBBBBBD7D7D7EFEFEFD7D7D7BBBBBB7D7D7DFEFEFE>fg bk
:b
1399 1238 172 32 rF
:e
0 G
6 lw
1232 1240 337 28 rS
:a
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
1203 1113 704 268 rS
1118 1255 -3 30 1205 1225 3 1118 1225 @a
0 0<B1B1B13030300303031B1B1BD8D8D8C0C0C00C0C0C8D8D8D>fg bk
:b
1722 1140 158 214 rF
:e
0 G
3 lw
1723.5 1141.5 155 211 rS
:a
0 0<EAEAEA757575BABABA5D5D5DAEAEAE575757ABABABD5D5D5>fg bk
:b
-3 -30 614 1157 3 30 584 1056 @b
386 1072 -3 30 1008 1042 3 386 1042 @a
-3 -30 1008 1185 3 30 978 1056 @b
:e
775 580 1355 1360 rC
gS
2.703 2.951 scale
533.349 427.57 :T
-533.349 -427.57 :T
488.349 407.633 :M
0 G
f2_14 sf
(Main Memory)S
gR
gS
2.703 2.951 scale
533.349 427.57 :T
-533.349 -427.57 :T
510.176 452.699 :M
0 G
f2_14 sf
( \(RAM\))S
gR
gR
:e
gS 532 472 1532 1202 rC
gS
2.797 2.857 scale
459.936 376.189 :T
-459.936 -376.189 :T
391.436 380.439 :M
0 G
f2_20 sf
(RAM on-a-bus)S
gR
gR
1 G
gS 0 0 2300 3041 rC
863 1181 259 118 rF
0 G
6 lw
866 1184 253 112 rS
356 635 1255 1229 rC
gS
2.62 2.885 scale
370.819 433.104 :T
-370.819 -433.104 :T
338.131 440.604 :M
f1_24 sf
(68030)S
gR
gR
:a
0 0<FEFEFEFDFDFDFBFBFBF7F7F7EFEFEFDFDFDFBFBFBF7F7F7F>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 1134 1298 3 30 1104 1182 @b
:e
0 G
6 lw
1242 721 56 127 rS
:a
0 0<FFFFFF000000000000000000FFFFFF000000000000000000>fg bk
:b
1240 719 59 67 rF
:e
0 G
3 lw
1241.5 720.5 56 64 rS
:a
0 0<000000FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF>fg bk
:b
1240 783 59 66 rF
:e
0 G
1241.5 784.5 56 63 rS
:a
0 0<000000181818242424424242818181000000000000000000>fg bk
:b
1240 783 59 19 rF
:e
0 G
1241.5 784.5 56 16 rS
:a
0 0<818181424242242424181818181818242424424242818181>fg bk
:b
1330 771 169 28 rF
0 0<8383830707070E0E0E1C1C1C383838707070E0E0E0C1C1C1>fg bk
:b
1 lw
1330.5 771.5 168 27 rS
0 0<7D7D7DBBBBBBD7D7D7EFEFEFD7D7D7BBBBBB7D7D7DFEFEFE>fg bk
:b
1497 770 172 31 rF
:e
0 G
6 lw
1330 771 338 28 rS
:a
0 0<B1B1B13030300303031B1B1BD8D8D8C0C0C00C0C0C8D8D8D>fg bk
:b
1722 671 158 214 rF
:e
0 G
3 lw
1723.5 672.5 155 211 rS
873 111 1355 1360 rC
gS
2.703 2.951 scale
569.73 267.963 :T
-569.73 -267.963 :T
524.605 248.713 :M
f2_14 sf
(Main Memory)S
gR
gS
2.703 2.951 scale
569.73 267.963 :T
-569.73 -267.963 :T
546.432 293.78 :M
f2_14 sf
( \(RAM\))S
gR
gR
0 0<7F7F7FBFBFBFDFDFDFEFEFEFF7F7F7FBFBFBFDFDFDFEFEFE>fg bk
:b
12 lw
gS 0 0 2300 3041 rC
374 687 436 239 rS
0 0<FFFFFF818181BDBDBDBDBDBDBDBDBDBDBDBD818181FFFFFF>fg bk
:b
625 770 158 115 rF
0 0(\000\000\000~~~BBBBBBBBBBBB~~~\000\000\000)fg bk
:b
471 770 157 115 rF
:e
0 G
6 lw
472 771 310 113 rS
93 152 1030 1171 rC
gS
2.318 2.812 scale
258.119 263.042 :T
-258.119 -263.042 :T
242.432 265.604 :M
f2_14 sf
(RAM)S
gR
gR
gS 0 0 2300 3041 rC
1203 645 704 267 rS
1118 786 -3 30 1205 756 3 1118 756 @a
0 0<EAEAEA757575BABABA5D5D5DAEAEAE575757ABABABD5D5D5>fg bk
:b
-3 -30 614 688 3 30 584 587 @b
386 603 -3 30 1008 573 3 386 573 @a
-3 -30 1008 716 3 30 978 587 @b
:e
1 G
863 712 259 118 rF
0 G
6 lw
866 715 253 112 rS
356 166 1255 1229 rC
gS
2.62 2.885 scale
371.131 270.834 :T
-371.131 -270.834 :T
338.131 278.021 :M
f1_24 sf
(68030)S
gR
gR
0 0<FEFEFEFDFDFDFBFBFBF7F7F7EFEFEFDFDFDFBFBFBF7F7F7F>fg bk
:b
gS 0 0 2300 3041 rC
-3 -30 1134 829 3 30 1104 713 @b
:e
531 3 1543 1202 rC
gS
2.801 2.857 scale
461.198 211.356 :T
-461.198 -211.356 :T
390.886 216.294 :M
0 G
f2_20 sf
(Heap on-a-bus)S
gR
endp
end
%%EndDocument

 endTexFig
 946 5177 a Fs(Figure)20 b(5:)27 b(Five)20 b(versions)g(of)i(S)t
Ft(C)t(H)t(E)t(M)t(E)h Fs(using)d(dif)o(ferent)e(memory)-5
b(.)1908 5589 y(10)p eop
%%Page: 11 11
11 10 bop 0 83 a Fs(RCM.)125 216 y Fh(Stock)20 b(RAM:)h
Fs(This)g(is)g(a)h(small)h(S)t Ft(C)t(H)t(E)t(M)t(E)g
Fs(compiler)c(that)i(has)g(its)h(stack,)e(heap,)g(and)g(code)g(all)h
(resident)f(in)h(the)g(NeXT')-5 b(s)21 b(stock)0 349
y(RAM.)k(Any)g(vectors)f(are)h(embedded)e(within)h(the)h(heap,)g
(composed)f(of)g(two)h(semispaces)g(of)g(three)f(megabytes)g(each.)40
b(It)26 b(uses)f(a)0 482 y(fast)f(stop-and-copy)c(garbage)h(collector)
-5 b(.)36 b(NeXT')-5 b(s)24 b(stock)f(read)g(cycle)g(is)h(520)e(ns.)i
(for)e(sixteen)i(bytes,)f(but)g(the)h(\256rst)g(four)e(become)0
614 y(available)d(within)h(160\261200)e(ns.)125 747 y
Fh(Heap)25 b(on-a-bus:)39 b Fs(In)25 b(order)g(to)i(establish)f(the)g
(slowdown)f(from)g(the)h(geography)d(of)j(RCM')-5 b(s)28
b(remote)d(location)g(on)h(the)g(bus,)0 880 y(the)20
b(compiler)e(was)i(altered)f(to)h(use)g(RCM)h(memory)d(for)h(its)h
(random-access)e(heap)h(only)-5 b(.)25 b(RCM)c(is)g(used)e(in)h(its)h
(engineering)c(mode,)0 1013 y(storing)c(all)h(binary)f
Fn(cons)g Fs(cells)i(in)e(two)h(three-megabyte)d(semispaces)j(there,)g
(with)g(all)g(specialized)f(RCM)i(transactions)e(suppressed.)0
1146 y(V)-9 b(ectors)22 b(remain)g(in)h(RAM,)g(and)f(remain)g(static)i
(in)f(all)g(these)g(tests.)35 b(The)23 b(purpose)e(of)h(this)i(version)
d(is)j(to)f(establish)g(the)g(impact)f(of)0 1279 y(the)c(slower)h
(memory)d(on)i(the)j(N)t Ft(E)t(X)t(T)t Fs(B)t Ft(U)t(S)r
Fs(.)27 b(Because)18 b(of)g(size)i(restrictions)d(in)i(RCM,)g(only)f
(three-megabyte)d(semispaces)k(are)f(used.)125 1411 y
Fh(RAM)h(on-a-bus:)26 b Fs(This)18 b(is)i(identical)e(to)h(Heap)f
(on-a-bus,)f(except)h(the)g(stack)h(is)g(also)g(moved)f(out)g(to)h
(RCM,)g(accessed)g(as)g(RAM)0 1544 y(but)f(coincident)g(with)h(pacRAM.)
f(W)-7 b(e)20 b(move)e(these)h(objects)f(out)h(in)g(two)f(steps)i(to)f
(separate)f(the)h(impact)f(of)h(heap)f(transactions)g(from)0
1677 y(that)i(of)g(stack)h(transactions.)125 1810 y Fh(Nailed)e(RCM:)i
Fs(As)f(an)g(intermediate)e(step)i(toward)f(reference-counting)e(S)t
Ft(C)t(H)t(E)t(M)t(E)r Fs(,)j(we)h(next)e(enabled)f(the)i(mark-sweep)e
(col-)0 1943 y(lector)26 b(on)g(RCM)i(without)e(yet)g(enabling)f
(reference)g(counting.)44 b(Since)27 b(mark/sweep)e(runs)h(in)h(place,)
h(only)e(one)g(\252semispace\272)g(is)0 2076 y(needed)21
b(in)h(RCM;)i(the)e(hardware)f(provides)g(a)h(six)h(megabyte)e(heap,)g
(but)h(we)h(twiddled)e(it)i(\(at)g(minor)e(cost)i(to)f(collection)f
(timings\))0 2208 y(to)26 b(be)g(only)g(three)g(megabytes.)43
b(New)27 b(nodes)e(are)h(allocated)g(in)g(RCM,)h(but)f(with)g(their)g
(reference)f(counts)g(initialized)h(too-high-)0 2341
y(by-one;)e(N)t(E)t(W)h(reads)d(from)g(the)g(\252wrong\272)f(register)
-5 b(.)33 b(The)22 b(excessive)g(count)g(has)g(the)h(ef)o(fect)e(of)h
(\252nailing)g(down\272)f(every)h(node,)f(so)0 2474 y(that)j(even)f
(though)f(the)i(reference-count)c(machinery)i(is)j(operating,)d(no)i
(count)e(ever)i(reaches)f(zero.)37 b(This)24 b(version)f(exercises)h
(the)0 2607 y(garbage-collection)12 b(machinery)-5 b(,)14
b(and)i(exhibits)f(the)h(impact)f(of)h(support)f(for)g(the)h
(mark-phase)d(and)j(the)g(on-line)e(hardware)h(sweeper)m(,)0
2740 y(all)21 b(performed)c(by)j(memory-resident)d(hardware.)125
2873 y Fh(Full)i(RCM:)g Fs(Finally)-5 b(,)18 b(the)j(S)t
Ft(C)t(H)t(E)t(M)t(E)h Fs(interpreter)17 b(maintains)h(accurate)g
(reference)f(counts.)26 b(The)18 b(dif)o(ference)f(between)h(this)h
(and)0 3005 y(\252Nailed)h(RCM\272)h(is)g(one)f(bit)g(of)g(object)g
(code,)f(so)i(NEW)f(reads)g(from)g(the)g(proper)e(register)-5
b(.)0 3360 y Fr(6)119 b(T)-11 b(ests)29 b(and)h(Results)0
3578 y Fs(W)-7 b(e)23 b(tested)f(two)f(programs)f(that)i(use)f(trees)h
(and)f(dags)h(heavily)-5 b(,)20 b(that)i(create)f(and)g(release)h(lots)
g(of)f(intermediate)f(results,)i(that)g(solve)0 3711
y(well)f(known)d(problems,)h(and)h(that)g(consume)f(tens)h(of)g
(minutes)g(of)g(run)f(time.)0 4006 y Fg(6.1)99 b(Performance)26
b(on)f(Balanced-T)-7 b(r)n(ee)27 b(Insertion)f(Pr)n(oblem)0
4195 y Fs(The)c(\256rst)g(problem)f(builds)g(familiar)g(binary-search)f
(trees.)32 b(A)25 b(S)t Ft(C)t(H)t(E)t(M)t(E)g Fs(function)20
b(inserts)i(a)g(key\261information)c(pair)k(into)g(an)g(ini-)0
4328 y(tially)e(empty)-5 b(,)18 b(A)-11 b(VL)21 b(or)e(balanced)g(tree)
h([25)n(,)h Fq(x)p Fs(6.2.3].)j(It)d(is)f(purely)f(functional,)f
(returning)f(the)j(resulting)f(tree)h(from)f(each)g(insertion)0
4460 y(without)i(requiring)e(side)j(ef)o(fects)f(to)g(its)i(ar)o
(guments.)28 b(The)22 b(\256rst)g(test)g(is)h(to)e(apply)g(it)h(in)g(a)
f(tail-recursion)f(to)i(insert)f(75,000)f(dif)o(ferent)0
4593 y(random)e(numbers)h(into)h(an)g(tree.)125 4726
y(Because)e(all)h(keys)g(and)f(information)e(are)j(immediate)e(data)i
(\(Keys)f(are)h Fn(small)j(ints)p Fs(\),)d(each)f(interior)f(node)h(in)
h(the)f(balanced)g(tree)0 4859 y(is)26 b(a)g(list)h(of)e(four)g
Fn(cons)p Fs(-boxes.)40 b(Since)26 b(each)f(box)g(occupies)f(eight)h
(bytes)h(\(Figure)e(3\),)i(the)g(space)f(required)f(for)h(the)g
(\256nal)h(tree)g(is)0 4992 y(2.4)21 b(megaBytes.)32
b(W)m(ith)23 b(an)f(average)e(depth)h(of)h(15.5,)f(however)m(,)g
(recopying)e(the)j(spine)g(of)g(each)g(tree)g(to)g(a)h(typical)e
(insertion)g(point)0 5125 y(reallocates)f(about)f(500)g(bytes\320more)g
(when)g(a)i(\252balancing)e(act\272)h(is)h(necessary)-5
b(.)26 b(The)20 b(results)g(appear)f(in)h(T)-6 b(able)20
b(1.)125 5257 y(Even)h(though)f(the)i(\256rst)h(four)d(systems,)j(that)
f(collect)g(garbage,)f(all)h(do)g(so)g(exactly)f(30)h(times,)h(the)f
(\256rst)g(recovers)f(less)i(because)1910 5589 y(1)m(1)p
eop
%%Page: 12 12
12 11 bop 539 3 2806 4 v 537 122 4 119 v 1059 122 V 1111
86 a Ff(Number)p 1395 122 V 1412 122 V 117 w(RAM)16 b(bytes)p
1834 122 V 101 w(RCM)g(bytes)p 2256 122 V 100 w(Collector)p
2618 122 V 117 w(Mutator)p 2972 122 V 2989 122 V 227
w(T)-6 b(otal)p 3343 122 V 537 240 V 589 204 a(System)p
1059 240 V 320 w(of)17 b(GCs)p 1395 240 V 1412 240 V
199 w(r)o(ecover)o(ed)p 1834 240 V 147 w(r)o(ecover)o(ed)p
2256 240 V 110 w Ft(\(seconds\))p 2618 240 V 101 w(\(seconds\))p
2972 240 V 2989 240 V 118 w(\(seconds\))p 3343 240 V
539 243 2806 4 v 539 260 V 537 378 4 119 v 589 343 a
Ff(Stock)g(RAM)p 1059 378 V 188 w Ft(30)p 1395 378 V
1412 378 V 310 w(47,597,608)p 1834 378 V 390 w(0)p 2256
378 V 212 w(520.1)p 2618 378 V 255 w(482)p 2972 378 V
2989 378 V 239 w(1002)p 3343 378 V 539 381 2806 4 v 537
500 4 119 v 589 464 a Ff(Heap)g(on-a-bus)p 1059 500 V
107 w Ft(30)p 1395 500 V 1412 500 V 476 w(1992)p 1834
500 V 124 w(47,602,796)p 2256 500 V 213 w(544.4)p 2618
500 V 255 w(516)p 2972 500 V 2989 500 V 239 w(1061)p
3343 500 V 539 503 2806 4 v 537 621 4 119 v 589 586 a
Ff(RAM)f(on-a-bus)p 1059 621 V 100 w Ft(30)p 1395 621
V 1412 621 V 476 w(1992)p 1834 621 V 124 w(47,602,796)p
2256 621 V 213 w(559.0)p 2618 621 V 255 w(683)p 2972
621 V 2989 621 V 239 w(1242)p 3343 621 V 539 625 2806
4 v 537 743 4 119 v 589 708 a Ff(Nailed)i(RCM)p 1059
743 V 162 w Ft(30)p 1395 743 V 1412 743 V 476 w(1992)p
1834 743 V 124 w(47,602,928)p 2256 743 V 213 w(190.3)p
2618 743 V 255 w(708)p 2972 743 V 2989 743 V 272 w(898)p
3343 743 V 539 746 2806 4 v 537 865 4 119 v 589 829 a
Ff(Full)f(RCM)p 1059 865 V 232 w Ft(0)p 1395 865 V 1412
865 V 609 w(0)p 1834 865 V 123 w(47,679,856)p 2256 865
V 330 w(0)p 2618 865 V 254 w(710)p 2972 865 V 2989 865
V 272 w(710)p 3343 865 V 539 868 2806 4 v 1033 1016 a
Fs(T)-6 b(able)20 b(1:)28 b(Experimental)18 b(results:)27
b(Balanced-T)m(ree)19 b(Insertion)0 1366 y(another)h(1992)h(bytes)g(of)
h(static)g(vectors)f(share)h(its)h(heap;)f(the)f(others)h(can)f(use)h
(that)g(space)g(to)g(allocate)f(and)g(to)h(recover)e(even)h(more)0
1499 y(nodes.)42 b(The)25 b(third,)h(\252Nailed)g(RCM\272)g(system)g
(collects)f(garbage)f(slightly)i(earlier)f(than)g(the)g(two)h
(\252on-a-bus\272)d(systems,)k(because)0 1631 y(three)18
b(nodes)g(are)h(pre-allocated)e(by)h(hardware;)g(therefore,)f(its)j
(recovery)d(counts)h(are)h(slightly)f(dif)o(ferent.)24
b(Full)c(RCM)g(counts)e(bytes)0 1764 y(recovered)i(in)j(real)f(time,)h
(up)f(to)h(the)f(last)i(transaction;)e(all)h(the)g(other)f(systems')g
(\256gures)g(are)h(slightly)f(lower)g(because)g(they)g(derive)0
1897 y(from)d(complete)g(collections,)g(not)h(including)f(the)h
(abandoned)d(space)k(yet)f(to)g(be)g(collected)g(at)g(termination.)125
2030 y(Both)15 b(the)h(mutator)f(and)g(collector)g(times)i(increase)e
(as)i(the)f(heap)f(and)g(stack)h(are)g(moved)f(out)g(to)h(the)i(N)t
Ft(E)t(X)t(T)t Fs(B)t Ft(U)t(S)r Fs(,)f(although)d(not)i(as)0
2163 y(much)g(as)i(had)f(been)f(feared.)25 b(Indeed,)16
b(moving)f(only)i(the)g(heap)f(to)i(the)f(bus)g(has)g(comparatively)e
(little)j(impact,)f(perhaps)f(because)h(the)0 2296 y(\(slow\))22
b(reads)g(there)f(balance)h(with)g(the)g(\()p Fn(NBIC)p
Fs(-buf)o(fered\))d(writes.)33 b(The)22 b(collector)m(,)f(likewise,)h
(exhibits)g(this)h(balance)e(even)g(when)0 2428 y(the)g(recursion)e
(stack)h(is)i(moved)d(there)h(\(because)f(it)i(does)g(little)g
(stacking\).)27 b(When)20 b(the)h(mutator)s(')-5 b(s)19
b(stack)i(is)h(moved)d(out)h(to)g(the)h(bus,)0 2561 y(however)m(,)d(we)
j(observe)f(a)h(marked)e(slowdown,)g(likely)h(because)g(of)g(heavier)g
(reading)f(from)h(stack)g(frames.)28 b(In)20 b(aggregate,)f(there)h(is)
0 2694 y(a)h(41\045)f(mutator)f(slowdown)g(as)i(both)e(heap)g(and)h
(stack)g(are)h(moved)d(out)i(to)g(RCM')-5 b(s)22 b(address)e(space.)125
2827 y(Nailed)c(RCM)i(performs)d(extremely)g(well,)j(recovering)c
(about)i(the)h(same)g(space)g(in)f(two-thirds)g(less)i(time)f(than)f
(RAM)i(on-a-bus)0 2960 y(needed.)26 b(The)20 b(balanced)f(tree)h(is)h
(an)f(ideal)h(structure)e(for)h(this)g(collector)m(,)f(because)h(so)h
(many)e(nodes)g(have)h(two)g(dead)g(pointers.)26 b(Full)0
3093 y(RCM)21 b(runs)d(even)h(faster)m(,)g(avoiding)f(all)i(garbage)d
(collection.)26 b(Its)20 b(mutator)e(time,)i(therefore,)d(is)k(its)f
(total)g(time;)f(and)g(its)i(time)e(of)g(710)0 3225 y(seconds)c
(extrapolates)g(\(if)h(RCM)h(were)f(local)f(memory\))f(to)i(501)f
(seconds)h(on)f(Stock)h(RAM,)g(which)f(would)h(halve)f(the)h
(performance,)0 3358 y(including)i(collections,)i(that)g(we)g(observed)
f(there.)0 3653 y Fg(6.2)99 b(Exact-arithmetic)26 b(Quadtr)n(ee-Matrix)
g(Inversion)0 3842 y Fs(The)21 b(second)e(test)j(program)d(is)j
(exact-arithmetic)d(matrix)h(inversion,)f(chosen)h(because)g(the)h
(problem)e(is)j(familiar)e(and)h(non-trivial,)0 3975
y(and)j(because)h(the)g(purely)e(applicative)h(algorithm)f([36)o(,)i
(15)o(]\320though)e(unfamiliar)n(\320)p Fl(must)31 b
Fs(perform)23 b Fl(in)i(place)31 b Fs(to)26 b(compete)d(with)0
4108 y(other)c(solutions.)27 b(The)19 b(results)i(appear)e(as)i(T)-6
b(able)20 b(2)g(and)g(Figure)f(6.)125 4241 y(The)13 b(problem)g(is)i
(to)f(compute)f(from)g(an)h(integer)f(matrix,)i Fe(A)p
Fs(,)g(both)f Fe(d)23 b Fd(=)g(det)14 b Fe(A)h Fs(and)e(\(when)g
Fe(d)24 b Fq(6)p Fd(=)e(0)p Fs(\))14 b(another)f(matrix)g
Fe(A)3550 4210 y Fc(0)3597 4241 y Fd(=)23 b Fe(dA)3790
4210 y Fc(\000)p Fb(1)3879 4241 y Fs(.)125 4373 y(The)i(quadtree)g
(representation)e(of)j(matrices)g([35)o(])g(of)o(fers)f(a)h(uniform)e
(representation)g(of)i(both)f(sparse)h(and)f(full)h(matrices)g(as)0
4506 y(directed,)20 b(acyclic)g(graphs)g(\()p Fp(dags)p
Fs(\).)27 b(Brie\257y)-5 b(,)21 b(a)g(matrix)f(is)i(either)e
(homogeneously)d(zero)k(\()p Fn(NIL)p Fs(\),)f(or)h(a)g(non-zero)d
Fd(1)h Fq(\002)g Fd(1)i Fs(scalar)g(\(that)0 4639 y(integer\),)d(or)g
(it)i(is)g(a)f(quadruple)e(of)h(four)g(equally-ordered)d(submatrices.)
26 b Fn(NIL)19 b Fs(is)h(used)f(to)g(pad)f(a)i(matrix)e(so)h(that)g
(its)h(order)e(seems)h(to)0 4772 y(be)d(a)h(power)f(of)g(two,)h(and)f
(to)h(\256ll)g(sparse)g(matrices)f(internally)-5 b(.)24
b(Its)17 b(properties)e(as)j(additive)d(identity)h(and)g
(multiplicative)f(annihilator)0 4905 y(uni\256es)20 b(the)g(algorithms)
f(for)h(sparse)g(and)g(dense)g(matrices.)125 5038 y(The)h(algorithm)f
(used)i(to)g(exercise)f(RCM)i(is)f(an)g(exact-arithmetic)e
Fe(LU)30 b Fs(decomposition)20 b(and)h(inversion)f(algorithm)g([36)o
(],)i(fol-)0 5170 y(lowed)g(by)g(a)h(back-multiply)d(\()p
Fe(AA)1033 5140 y Fc(0)1057 5170 y Fs(\))i(to)h(the)g(matrix)e(\()p
Fe(dI)7 b Fs(\).)34 b(Full)23 b(and)f(undulant-block)d(pivoting)i(are)i
(used.)33 b(That)23 b(is,)g(any)f Fd(2)3674 5140 y Fa(p)3734
5170 y Fq(\002)f Fd(2)3862 5140 y Fa(p)0 5303 y Fs(subtree)e
(\(submatrix\))f(might)i(be)g(eliminated)f(in)h(a)g(single)g
(elimination)f(step;)i(pivoting)d(attempts)i(to)g(eliminate)g(a)g(lar)o
(ge)f(block)g(with)1908 5589 y(12)p eop
%%Page: 13 13
13 12 bop 0 3 3107 4 v -2 122 4 119 v 520 122 V 572 86
a Ft(Load)p 805 122 V 821 122 V 165 w Ff(Number)p 1157
122 V 100 w(RAM)17 b(bytes)p 1579 122 V 100 w(RCM)f(bytes)p
2002 122 V 100 w(Collector)p 2363 122 V 2380 122 V 134
w(Mutator)p 2734 122 V 210 w(T)-6 b(otal)p 3088 122 V
3105 122 V -2 240 V 50 204 a(System)p 520 240 V 320 w
Ft(\(bytes\))p 805 240 V 821 240 V 156 w Ff(of)17 b(GCs)p
1157 240 V 144 w(r)o(ecover)o(ed)p 1579 240 V 148 w(r)o(ecover)o(ed)p
2002 240 V 110 w Ft(\(seconds\))p 2363 240 V 2380 240
V 117 w(\(seconds\))p 2734 240 V 101 w(\(seconds\))p
3088 240 V 3105 240 V 0 243 3107 4 v 0 260 V -2 378 4
119 v 50 343 a Ff(Stock)g(RAM)p 520 378 V 188 w Ft(0)p
805 378 V 821 378 V 470 w(9)p 1157 378 V 124 w(26,955,428)p
1579 378 V 390 w(0)p 2002 378 V 246 w(14.0)p 2363 378
V 2380 378 V 271 w(430)p 2734 378 V 255 w(444)p 3088
378 V 3105 378 V 0 381 3107 4 v -2 500 4 119 v 50 464
a Ff(Stock)g(RAM)p 520 500 V 188 w Ft(.8M)p 805 500 V
821 500 V 361 w(12)p 1157 500 V 124 w(26,399,800)p 1579
500 V 390 w(0)p 2002 500 V 215 w(1)n(15.5)p 2363 500
V 2380 500 V 271 w(435)p 2734 500 V 255 w(550)p 3088
500 V 3105 500 V 0 503 3107 4 v -2 621 4 119 v 50 586
a Ff(Stock)g(RAM)p 520 621 V 188 w Ft(1.6M)p 805 621
V 821 621 V 328 w(20)p 1157 621 V 124 w(27,934,824)p
1579 621 V 390 w(0)p 2002 621 V 213 w(355.5)p 2363 621
V 2380 621 V 271 w(440)p 2734 621 V 255 w(796)p 3088
621 V 3105 621 V 0 625 3107 4 v -2 743 4 119 v 50 708
a Ff(Stock)g(RAM)p 520 743 V 188 w Ft(2.4M)p 805 743
V 821 743 V 328 w(47)p 1157 743 V 129 w(28,1)n(1)n(1,692)p
1579 743 V 389 w(0)p 2002 743 V 179 w(1218.4)p 2363 743
V 2380 743 V 272 w(444)p 2734 743 V 222 w(1663)p 3088
743 V 3105 743 V 0 746 3107 4 v 0 763 V 0 780 V -2 898
4 119 v 50 862 a Ff(Heap)g(on-a-bus)p 520 898 V 107 w
Ft(0)p 805 898 V 821 898 V 470 w(9)p 1157 898 V 323 w(444)p
1579 898 V 125 w(27,023,120)p 2002 898 V 246 w(12.5)p
2363 898 V 2380 898 V 271 w(467)p 2734 898 V 255 w(480)p
3088 898 V 3105 898 V 0 901 3107 4 v -2 1020 4 119 v
50 984 a Ff(Heap)g(on-a-bus)p 520 1020 V 107 w Ft(.8M)p
805 1020 V 821 1020 V 361 w(12)p 1157 1020 V 323 w(448)p
1579 1020 V 125 w(26,510,892)p 2002 1020 V 215 w(1)n(12.6)p
2363 1020 V 2380 1020 V 271 w(472)p 2734 1020 V 255 w(585)p
3088 1020 V 3105 1020 V 0 1023 3107 4 v -2 1141 4 119
v 50 1106 a Ff(Heap)g(on-a-bus)p 520 1141 V 107 w Ft(1.6M)p
805 1141 V 821 1141 V 328 w(20)p 1157 1141 V 323 w(464)p
1579 1141 V 125 w(28,125,700)p 2002 1141 V 213 w(349.0)p
2363 1141 V 2380 1141 V 271 w(478)p 2734 1141 V 255 w(827)p
3088 1141 V 3105 1141 V 0 1144 3107 4 v -2 1263 4 119
v 50 1227 a Ff(Heap)g(on-a-bus)p 520 1263 V 107 w Ft(2.4M)p
805 1263 V 821 1263 V 328 w(46)p 1157 1263 V 323 w(520)p
1579 1263 V 125 w(27,925,732)p 2002 1263 V 182 w(1)n(175.0)p
2363 1263 V 2380 1263 V 271 w(483)p 2734 1263 V 222 w(1658)p
3088 1263 V 3105 1263 V 0 1266 3107 4 v 0 1283 V -2 1401
4 119 v 50 1366 a Ff(RAM)f(on-a-bus)p 520 1401 V 100
w Ft(0)p 805 1401 V 821 1401 V 470 w(9)p 1157 1401 V
323 w(444)p 1579 1401 V 125 w(27,023,120)p 2002 1401
V 246 w(13.0)p 2363 1401 V 2380 1401 V 271 w(644)p 2734
1401 V 255 w(657)p 3088 1401 V 3105 1401 V 0 1404 3107
4 v -2 1523 4 119 v 50 1487 a Ff(RAM)g(on-a-bus)p 520
1523 V 100 w Ft(.8M)p 805 1523 V 821 1523 V 361 w(12)p
1157 1523 V 323 w(448)p 1579 1523 V 125 w(26,510,892)p
2002 1523 V 215 w(1)n(13.2)p 2363 1523 V 2380 1523 V
271 w(621)p 2734 1523 V 255 w(734)p 3088 1523 V 3105
1523 V 0 1526 3107 4 v -2 1644 4 119 v 50 1609 a Ff(RAM)g(on-a-bus)p
520 1644 V 100 w Ft(1.6M)p 805 1644 V 821 1644 V 328
w(20)p 1157 1644 V 323 w(464)p 1579 1644 V 125 w(28,125,700)p
2002 1644 V 213 w(350.8)p 2363 1644 V 2380 1644 V 271
w(628)p 2734 1644 V 255 w(979)p 3088 1644 V 3105 1644
V 0 1648 3107 4 v -2 1766 4 119 v 50 1730 a Ff(RAM)g(on-a-bus)p
520 1766 V 100 w Ft(2.4M)p 805 1766 V 821 1766 V 328
w(46)p 1157 1766 V 323 w(520)p 1579 1766 V 125 w(27,925,732)p
2002 1766 V 182 w(1)n(178.9)p 2363 1766 V 2380 1766 V
271 w(634)p 2734 1766 V 222 w(1813)p 3088 1766 V 3105
1766 V 0 1769 3107 4 v 0 1786 V 0 1802 V -2 1921 4 119
v 50 1885 a Ff(Nailed)i(RCM)p 520 1921 V 162 w Ft(0)p
805 1921 V 821 1921 V 470 w(9)p 1157 1921 V 323 w(444)p
1579 1921 V 125 w(27,715,104)p 2002 1921 V 279 w(7.2)p
2363 1921 V 2380 1921 V 271 w(661)p 2734 1921 V 255 w(669)p
3088 1921 V 3105 1921 V 0 1924 3107 4 v -2 2042 4 119
v 50 2007 a Ff(Nailed)g(RCM)p 520 2042 V 162 w Ft(.8M)p
805 2042 V 821 2042 V 361 w(12)p 1157 2042 V 323 w(448)p
1579 2042 V 125 w(27,332,736)p 2002 2042 V 246 w(58.0)p
2363 2042 V 2380 2042 V 271 w(677)p 2734 2042 V 255 w(735)p
3088 2042 V 3105 2042 V 0 2046 3107 4 v -2 2164 4 119
v 50 2128 a Ff(Nailed)g(RCM)p 520 2164 V 162 w Ft(1.6M)p
805 2164 V 821 2164 V 328 w(19)p 1157 2164 V 323 w(460)p
1579 2164 V 125 w(28,138,384)p 2002 2164 V 213 w(164.8)p
2363 2164 V 2380 2164 V 271 w(695)p 2734 2164 V 255 w(860)p
3088 2164 V 3105 2164 V 0 2167 3107 4 v -2 2286 4 119
v 50 2250 a Ff(Nailed)g(RCM)p 520 2286 V 162 w Ft(2.4M)p
805 2286 V 821 2286 V 328 w(41)p 1157 2286 V 323 w(508)p
1579 2286 V 125 w(27,950,328)p 2002 2286 V 213 w(528.7)p
2363 2286 V 2380 2286 V 271 w(738)p 2734 2286 V 222 w(1267)p
3088 2286 V 3105 2286 V 0 2289 3107 4 v 0 2306 V -2 2424
4 119 v 50 2388 a Ff(Full)f(RCM)p 520 2424 V 232 w Ft(0)p
805 2424 V 821 2424 V 470 w(0)p 1157 2424 V 390 w(0)p
1579 2424 V 124 w(28,207,208)p 2002 2424 V 329 w(0)p
2363 2424 V 2380 2424 V 271 w(639)p 2734 2424 V 255 w(639)p
3088 2424 V 3105 2424 V 0 2427 3107 4 v -2 2545 4 119
v 50 2510 a Ff(Full)g(RCM)p 520 2545 V 232 w Ft(.8M)p
805 2545 V 821 2545 V 394 w(0)p 1157 2545 V 390 w(0)p
1579 2545 V 124 w(28,207,208)p 2002 2545 V 329 w(0)p
2363 2545 V 2380 2545 V 271 w(647)p 2734 2545 V 255 w(647)p
3088 2545 V 3105 2545 V 0 2549 3107 4 v -2 2667 4 119
v 50 2632 a Ff(Full)g(RCM)p 520 2667 V 232 w Ft(1.6M)p
805 2667 V 821 2667 V 361 w(0)p 1157 2667 V 390 w(0)p
1579 2667 V 124 w(28,207,208)p 2002 2667 V 329 w(0)p
2363 2667 V 2380 2667 V 271 w(655)p 2734 2667 V 255 w(655)p
3088 2667 V 3105 2667 V 0 2670 3107 4 v -2 2789 4 119
v 50 2753 a Ff(Full)g(RCM)p 520 2789 V 232 w Ft(2.4M)p
805 2789 V 821 2789 V 361 w(0)p 1157 2789 V 390 w(0)p
1579 2789 V 124 w(28,207,208)p 2002 2789 V 329 w(0)p
2363 2789 V 2380 2789 V 271 w(663)p 2734 2789 V 255 w(663)p
3088 2789 V 3105 2789 V 0 2792 3107 4 v 1012 2940 a Fs(T)-6
b(able)20 b(2:)27 b(Experimental)18 b(results:)28 b(Integer)19
b(Matrix-Inversion.)0 3207 y(a)i(small)f(determinant.)125
3340 y(One)d(matrix)f(has)i(been)e(selected)i(from)e(the)h
(Harwell-Boeing)f(data)h(set)h([13)o(])f(of)g(sparse)h(matrices.)25
b(W)-7 b(e)19 b(chose)e Fn(CAN62)h Fs(because)0 3472
y(it)f(is)h(small,)f(integer)m(,)f(and)g(non-singular)-5
b(.)23 b(Its)17 b(decomposition)d(consumes)i(many)f(nodes)h(without)g
(generating)e Fn(bignums)k Fs(that)e(would)0 3605 y(skew)f
(measurements)d(of)i(heap)g(use.)25 b(It)15 b(is)g(a)g
Fd(62)s Fq(\002)s Fd(62)d Fs(\(patterned\))g(symmetric)h(matrix)h(with)
h(140)e(nonzero)f(elements\320all)i(ones,)h(with)0 3738
y(determinant)h(1)m(17.)26 b(Inversion)16 b(of)i(this)h(matrix)e
(generates)h(massive)g(intermediate)f(structures)h(that)g(are)g
(completely)f(RCM-resident)0 3871 y(in)j(the)h(RCM)g(tests.)125
4004 y(For)26 b(all)i(the)f(garbage)e(generated,)h(this)i(particular)d
(problem)g(never)h(uses)h(much)f(heap)h(at)g(any)f(one)g(time)h(\(an)g
(average)e(of)i(63)0 4137 y(kiloBytes)f(measured)e(at)j(garbage)d
(collection\),)h(so)i(that)f(the)g(collection)e(load)i(is)h(atypically)
d(small.)45 b(Therefore,)25 b(we)h(loaded)f(the)0 4269
y(heap)e(with)i(static)g(linear)e(lists)j(of)e(length)f(0,)i(100,000,)d
(200,000,)h(300,000)e(\(8-byte)i(nodes\))g(to)h(constrain)f(the)h
(garbage)f(collector)0 4402 y(with)d(more)g(typical)f(loads,)h(in)h
(addition)d(to)j(all)g(the)f(traf)o(\256c)f(from)g(inversion.)125
4535 y(Each)f(of)g(these)h(tests)h(is)g(generated)d(by)i(a)g(single)g
(run,)f(but)g(we)h(have)g(reproduced)c(some)k(of)g(these)g(repeatedly)e
(and)h(consistently)-5 b(,)0 4668 y(with)21 b(the)h(total)f(time)g
(varying)f(by)h(no)f(more)h(than)g(\256ve)g(seconds.)29
b(W)m(ithin)21 b(the)h(accuracy)d(sought,)i(these)g(times)h(are)f(suf)o
(\256ciently)f(ac-)0 4801 y(curate)g(for)g(our)g(claims.)29
b(All)22 b(mutator)d(and)h(total)h(times)h(except)e(for)g(Stock)g(RAM)i
(can)e(have)g(3)h(seconds)f(subtracted)g(for)g(RCM)i(ini-)0
4934 y(tialization,)h(but)g(this)h(time)f(is)h(considered)e(a)h
(negligible)f(constant)g(and)h(is)h(included)e(this)h(data.)36
b(The)23 b(Full)g(RCM)h(tests)h(have)d(been)0 5066 y(repeated)d(nearly)
g(sixty)h(times)h(without)f(any)f(space)h(leaking)f(to)i(garbage)d
(collection.)125 5282 y Fq(\017)41 b Fs(The)24 b(number)g(and)g(ef)o
(fectiveness)g(of)g(garbage)g(collection)g(is)i(consistent)f(\(with)f
(one)h(anomaly\).)40 b(The)24 b(number)g(of)g(GCs)j(is)1908
5589 y(13)p eop
%%Page: 14 14
14 13 bop -34 520 a
 31330529 31969935 1381416 9472573 35851059 44468469 startTexFig
 -34 520 a
%%BeginDocument: ../../TR401/Figures/fig7.results.ps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/drawwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave fill grestore gsave setgray stroke grestore
} bind def [[] [4] [2] [2 2 4 4]] /dasharray exch def /elp {
    translate scale newpath 0 exch 0 exch 0 360 arc
} bind def /c {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
} bind def /frc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore
} bind def /ffrc {
    gsave /lg exch def 4 copy c gsave lg setgray translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore grestore
} bind def /ffrr {
    gsave /lg exch def 4 copy gsave rectfill grestore lg setgray rectstroke grestore
} bind def /ffrr3d {
    gsave /sgray exch def /egray exch def /lg exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy rectfill -1 -1 translate
    } for egray setgray 4 copy rectfill lg setgray rectstroke grestore
} bind def /fr3d {
    gsave /sgray exch def /egray exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy gsave rectfill grestore -1 -1 translate
    } for grestore
} bind def /l {
    moveto lineto stroke
} bind def /arrow {
    /t_y2 exch def /t_x2 exch def /t_y1 exch def /t_x1 exch def t_y2 t_y1 sub t_x2 t_x1 sub atan /t_deg exch def currentlinewidth 1 gt {
        /t_sc currentlinewidth def
    } {
        /t_sc 1 def
    } ifelse t_x2 t_y2 moveto t_deg rotate t_sc dup scale -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath 1 t_sc div dup scale t_deg neg rotate t_x1 t_y1 currentpoint fill
} bind def /pline {
    /yarray exch def /xarray exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for fill
} bind def /ffrpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave fill grestore lg setgray stroke
} bind def /frpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave lg setgray stroke grestore
} bind def /colorfrpline {
    /yarray exch def /xarray exch def gsave setrgbcolor newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for stroke grestore
} bind def /frpline3d {
    /sgray exch def /egray exch def /yarray exch def /xarray exch def newpath gsave 7 -7 translate sgray egray sgray sub 7 div egray {
        setgray xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
            dup xarray exch get exch yarray exch get lineto
        } for stroke -1 1 translate
    } for grestore
} bind def /arrowhead {
    gsave currentpoint 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 gt {
        dup scale
    } {
        pop
    } ifelse -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath fill grestore newpath
} bind def /rl^ {
    currentlinewidth currentpoint 5 3 roll rlineto currentpoint stroke moveto arrowhead
} bind def /rl2^ {
    /h exch def /w exch def currentpoint /prevy exch def /prevx exch def w h rl^ prevx w add prevy h add moveto w -1 mul h -1 mul currentlinewidth currentpoint 5 3 roll rmoveto currentpoint moveto arrowhead
} bind def /setup {
    setgray dasharray exch get 0 setdash setlinewidth setlinecap setlinejoin gsave
} bind def /setup1 {
    setgray dasharray exch get 0 setdash setlinewidth gsave
} bind def /setup2 {
    setgray dasharray exch get 0 setdash setlinewidth
} bind def /rshow {
    /st exch def /ang exch def gsave currentpoint translate ang rotate currentpoint -1 mul -1 mul exch translate st show grestore
} bind def /rcshow {
    /st exch def /ang exch def gsave currentpoint exch st stringwidth pop add exch translate ang rotate currentpoint exch st stringwidth pop add exch -1 mul -1 mul exch translate st show grestore
} bind def /sbox {
    /ingray exch def /lgray exch def gsave 4 copy 5 -5 translate lgray setgray rectfill grestore ingray setgray 4 copy rectfill gsave lgray setgray rectstroke grestore
} bind def
/definepattern {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patternpath {
    dup type /dicttype eq {
        begin FontDict /ctm get setmatrix
    } {
        exch begin FontDict /ctm get setmatrix concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patternfill {
    gsave clip patternpath grestore newpath
} bind def /setpat {
    patternarray exch get findfont
} bind def /patrect {
    gsave moveto dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath setpat gsave 1 setgray fill grestore patternfill grestore
} bind def /patcirc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc gsave 1 setgray fill grestore 0 setgray setpat patternfill grestore
} bind def /patpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patpline3D {
    gsave /yarray exch def /xarray exch def /patnum exch def /gr exch def xarray 0 get yarray 0 get moveto 1 1 3 {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave gr 0 eq {
        1 setgray
    } {
        0.8 setgray
    } ifelse fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setgray stroke grestore
} bind def /colorpatfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setrgbcolor stroke grestore
} bind def /drawpatwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave 1 setgray fill grestore gsave 0 setgray setpat patternfill grestore setgray stroke
} bind def 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /RightDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightRightDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LeftDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightLeftDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /Horiz true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /LightHoriz true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /Vert true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightVert true definepattern pop 30 30 [ 200 36 div 0 0 200 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch true definepattern pop 30 30 [ 400 36 div 0 0 400 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch2 true definepattern pop [/RightDiag /LightRightDiag /LeftDiag /LightLeftDiag /Vert /LightVert /Horiz /LightHoriz /Crosshatch /Crosshatch2] /patternarray exch def
0 0 545 676 rectclip
21 144 524 532 rectclip
21 144 524 532 rectclip
2 1 1 setup2
gsave
grestore
1 0 1 setup2
1 setgray
112 274 330 375 rectfill
gsave 0.666667 setgray 112 274 330 375 rectstroke grestore
gsave
112 274 330 375 rectclip
0 0 0 setup2
0 0 0 setup2
0 setgray
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
178 274 moveto
0 375 rlineto
244 274 moveto
0 375 rlineto
310 274 moveto
0 375 rlineto
376 274 moveto
0 375 rlineto
end
stroke
grestore
0.25 0 0 setup2
0.25 0 0 setup2
0.25 0 0 setup2
0 setgray
0 setgray
[178 633.375 56.708649 12.5 178 614.625 57.320999 12.5 178 595.875 58.162506 12.5 178 577.125 58.711227 12.5 178 558.375 60.518707 12.5 178 539.625 61.306091 12.5 178 520.875 62.249359 12.5 178 502.125 62.676895 12.5 178 483.375 79.70752 12.5 178 464.625 80.747986 12.5 178 445.875 81.570312 12.5 178 427.125 82.713715 12.5 178 408.375 81.707886 12.5 178 389.625 82.808899 12.5 178 370.875 83.623596 12.5 178 352.125 85.045105 12.5 178 333.375 81.708008 12.5 178 314.625 82.632019 12.5 178 295.875 83.951996 12.5 178 277.125 84.876007 12.5] rectfill
0 setgray
[178 633.375 56.708649 12.5 178 614.625 57.320999 12.5 178 595.875 58.162506 12.5 178 577.125 58.711227 12.5 178 558.375 60.518707 12.5 178 539.625 61.306091 12.5 178 520.875 62.249359 12.5 178 502.125 62.676895 12.5 178 483.375 79.70752 12.5 178 464.625 80.747986 12.5 178 445.875 81.570312 12.5 178 427.125 82.713715 12.5 178 408.375 81.707886 12.5 178 389.625 82.808899 12.5 178 370.875 83.623596 12.5 178 352.125 85.045105 12.5 178 333.375 81.708008 12.5 178 314.625 82.632019 12.5 178 295.875 83.951996 12.5 178 277.125 84.876007 12.5] rectstroke
0.25 0 0.5 setup2
0.25 0 0.5 setup2
0.25 0 0.5 setup2
0.5 setgray
0.5 setgray
[234.708649 633.375 1.767349 12.5 235.320999 614.625 15.278992 12.5 236.162506 595.875 44.533508 12.5 236.711227 577.125 143.512756 12.5 238.518707 558.375 1.547699 12.5 239.306091 539.625 14.620331 12.5 240.249359 520.875 43.113037 12.5 240.676895 502.125 135.217499 12.5 257.70752 483.375 1.498871 12.5 258.747955 464.625 14.582428 12.5 259.570312 445.875 42.800079 12.5 260.713715 427.125 135.24469 12.5 259.707886 408.375 0.950531 12.5 260.808899 389.625 7.637512 12.5 261.623596 370.875 21.870819 12.5 263.045105 352.125 68.893311 12.5 178 333.375 0 12.5 178 314.625 0 12.5 178 295.875 0 12.5 178 277.125 0 12.5] rectfill
0 setgray
[234.708649 633.375 1.767349 12.5 235.320999 614.625 15.278992 12.5 236.162506 595.875 44.533508 12.5 236.711227 577.125 143.512756 12.5 238.518707 558.375 1.547699 12.5 239.306091 539.625 14.620331 12.5 240.249359 520.875 43.113037 12.5 240.676895 502.125 135.217499 12.5 257.70752 483.375 1.498871 12.5 258.747955 464.625 14.582428 12.5 259.570312 445.875 42.800079 12.5 260.713715 427.125 135.24469 12.5 259.707886 408.375 0.950531 12.5 260.808899 389.625 7.637512 12.5 261.623596 370.875 21.870819 12.5 263.045105 352.125 68.893311 12.5 178 333.375 0 12.5 178 314.625 0 12.5 178 295.875 0 12.5 178 277.125 0 12.5] rectstroke
0.25 0 1 setup2
0.25 0 1 setup2
0.25 0 1 setup2
-1 setgray
0 setgray 3 12.5 11.880005 166.119995 633.375 patrect 166.119995 633.375 11.880005 12.5 0 setgray rectstroke
0 setgray 3 12.5 15.839996 162.160004 614.625 patrect 162.160004 614.625 15.839996 12.5 0 setgray rectstroke
0 setgray 3 12.5 25.080002 152.919998 595.875 patrect 152.919998 595.875 25.080002 12.5 0 setgray rectstroke
0 setgray 3 12.5 55.440002 122.559998 577.125 patrect 122.559998 577.125 55.440002 12.5 0 setgray rectstroke
0 setgray 3 12.5 11.880005 166.119995 558.375 patrect 166.119995 558.375 11.880005 12.5 0 setgray rectstroke
0 setgray 3 12.5 15.839996 162.160004 539.625 patrect 162.160004 539.625 15.839996 12.5 0 setgray rectstroke
0 setgray 3 12.5 25.080002 152.919998 520.875 patrect 152.919998 520.875 25.080002 12.5 0 setgray rectstroke
0 setgray 3 12.5 54.120003 123.879997 502.125 patrect 123.879997 502.125 54.120003 12.5 0 setgray rectstroke
0 setgray 3 12.5 11.880005 166.119995 483.375 patrect 166.119995 483.375 11.880005 12.5 0 setgray rectstroke
0 setgray 3 12.5 15.839996 162.160004 464.625 patrect 162.160004 464.625 15.839996 12.5 0 setgray rectstroke
0 setgray 3 12.5 25.080002 152.919998 445.875 patrect 152.919998 445.875 25.080002 12.5 0 setgray rectstroke
0 setgray 3 12.5 54.120003 123.879997 427.125 patrect 123.879997 427.125 54.120003 12.5 0 setgray rectstroke
0 setgray 3 12.5 11.880005 166.119995 408.375 patrect 166.119995 408.375 11.880005 12.5 0 setgray rectstroke
0 setgray 3 12.5 15.839996 162.160004 389.625 patrect 162.160004 389.625 15.839996 12.5 0 setgray rectstroke
0 setgray 3 12.5 25.080002 152.919998 370.875 patrect 152.919998 370.875 25.080002 12.5 0 setgray rectstroke
0 setgray 3 12.5 54.120003 123.879997 352.125 patrect 123.879997 352.125 54.120003 12.5 0 setgray rectstroke
0 setgray 3 12.5 0 178 333.375 patrect 178 333.375 0 12.5 0 setgray rectstroke
0 setgray 3 12.5 0 178 314.625 patrect 178 314.625 0 12.5 0 setgray rectstroke
0 setgray 3 12.5 0 178 295.875 patrect 178 295.875 0 12.5 0 setgray rectstroke
0 setgray 3 12.5 0 178 277.125 patrect 178 277.125 0 12.5 0 setgray rectstroke
0 setgray
[166.119995 633.375 11.880005 12.5 162.160004 614.625 15.839996 12.5 152.919998 595.875 25.080002 12.5 122.559998 577.125 55.440002 12.5 166.119995 558.375 11.880005 12.5 162.160004 539.625 15.839996 12.5 152.919998 520.875 25.080002 12.5 123.879997 502.125 54.120003 12.5 166.119995 483.375 11.880005 12.5 162.160004 464.625 15.839996 12.5 152.919998 445.875 25.080002 12.5 123.879997 427.125 54.120003 12.5 166.119995 408.375 11.880005 12.5 162.160004 389.625 15.839996 12.5 152.919998 370.875 25.080002 12.5 123.879997 352.125 54.120003 12.5 178 333.375 0 12.5 178 314.625 0 12.5 178 295.875 0 12.5 178 277.125 0 12.5] rectstroke
grestore
0 0 1 setup2
0 setgray
gsave 112 274 112 330 add 274 0 add l grestore
0 setgray
0 setlinewidth
/Helvetica 9 selectfont
0 0 1 setup2
gsave
94 252 35 22 rectclip
gsave
[1 0 0 -1 99 269] concat
/Helvetica findfont 9 scalefont [1 0 0 -1 0 0] makefont
1629
exch
defineuserobject
1629 execuserobject setfont
0 nxsetgray
2 9 moveto (50) show
grestore
grestore
0 0 1 setup2
gsave
167 252 21 22 rectclip
gsave
[1 0 0 -1 172 269] concat
1629 execuserobject setfont
0 nxsetgray
2 9 moveto (0) show
grestore
grestore
0 0 1 setup2
gsave
228 252 31 22 rectclip
gsave
[1 0 0 -1 233 269] concat
1629 execuserobject setfont
0 nxsetgray
2 9 moveto (500) show
grestore
grestore
0 0 1 setup2
gsave
292 252 36 22 rectclip
gsave
[1 0 0 -1 297 269] concat
1629 execuserobject setfont
0 nxsetgray
2 9 moveto (1000) show
grestore
grestore
0 0 1 setup2
gsave
358 252 36 22 rectclip
gsave
[1 0 0 -1 363 269] concat
1629 execuserobject setfont
0 nxsetgray
2 9 moveto (1500) show
grestore
grestore
0 0 1 setup2
gsave
424 252 36 22 rectclip
gsave
[1 0 0 -1 429 269] concat
1629 execuserobject setfont
0 nxsetgray
2 9 moveto (2000) show
grestore
grestore
0 setgray
0 setlinewidth
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
112 269 moveto
0 5 rlineto
178 269 moveto
0 5 rlineto
244 269 moveto
0 5 rlineto
310 269 moveto
0 5 rlineto
376 269 moveto
0 5 rlineto
442 269 moveto
0 5 rlineto
end
stroke
grestore
0 setgray
0 0 1 setup2
0 setgray
gsave 112 274 112 0 add 274 375 add l grestore
0 0 1 setup2
0 0 1 setup2
gsave
48 630 63 19 rectclip
gsave
[1 0 0 -1 53 644] concat
/Helvetica findfont 7 scalefont [1 0 0 -1 0 0] makefont
1630
exch
defineuserobject
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Stock RAM-0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
48 611 63 19 rectclip
gsave
[1 0 0 -1 53 625] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Stock RAM-1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
48 592 63 19 rectclip
gsave
[1 0 0 -1 53 606] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Stock RAM-2) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
48 573 63 19 rectclip
gsave
[1 0 0 -1 53 587] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Stock RAM-3) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 555 73 19 rectclip
gsave
[1 0 0 -1 43 569] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Heap on-a-bus-0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 536 73 19 rectclip
gsave
[1 0 0 -1 43 550] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Heap on-a-bus-1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 517 73 19 rectclip
gsave
[1 0 0 -1 43 531] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Heap on-a-bus-2) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 498 73 19 rectclip
gsave
[1 0 0 -1 43 512] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Heap on-a-bus-3) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 480 73 19 rectclip
gsave
[1 0 0 -1 43 494] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (RAM on-a-bus-0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 461 73 19 rectclip
gsave
[1 0 0 -1 43 475] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (RAM on-a-bus-1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 442 73 19 rectclip
gsave
[1 0 0 -1 43 456] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (RAM on-a-bus-2) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
38 423 73 19 rectclip
gsave
[1 0 0 -1 43 437] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (RAM on-a-bus-3) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
47 405 64 19 rectclip
gsave
[1 0 0 -1 52 419] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Nailed RCM-0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
47 386 64 19 rectclip
gsave
[1 0 0 -1 52 400] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Nailed RCM-1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
47 367 64 19 rectclip
gsave
[1 0 0 -1 52 381] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Nailed RCM-2) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
47 348 64 19 rectclip
gsave
[1 0 0 -1 52 362] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Nailed RCM-3) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
56 330 55 19 rectclip
gsave
[1 0 0 -1 61 344] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Full RCM-0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
56 311 55 19 rectclip
gsave
[1 0 0 -1 61 325] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Full RCM-1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
56 292 55 19 rectclip
gsave
[1 0 0 -1 61 306] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Full RCM-2) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
56 273 55 19 rectclip
gsave
[1 0 0 -1 61 287] concat
1630 execuserobject setfont
0 nxsetgray
2 7 moveto (Full RCM-3) show
grestore
grestore
0 setgray
2 1 1 setup2
gsave
91 184 413 65 rectclip
0.25 0 0 setup2
103 226 17 11 0 ffrr
0 0 1 setup2
0 0 1 setup2
gsave
120 218 134 24 rectclip
gsave
[1 0 0 -1 125 237] concat
/Helvetica findfont 11 scalefont [1 0 0 -1 0 0] makefont
82
exch
defineuserobject
82 execuserobject setfont
0 nxsetgray
2 11 moveto (Mutator time \(sec. x 10\)) show
grestore
grestore
0.25 0 0.5 setup2
249 226 17 11 0 ffrr
0 0 1 setup2
0 0 1 setup2
gsave
267 218 110 24 rectclip
gsave
[1 0 0 -1 272 237] concat
82 execuserobject setfont
0 nxsetgray
2 11 moveto (GC time \(sec x 10\)) show
grestore
grestore
0.25 0 -1 setup2
0 setgray 3 11 17 103 207 patrect 103 207 17 11 0 setgray rectstroke
0 0 1 setup2
0 0 1 setup2
gsave
120 199 173 24 rectclip
gsave
[1 0 0 -1 125 218] concat
82 execuserobject setfont
0 nxsetgray
2 11 moveto (Number of  Garbage Collections) show
grestore
grestore
grestore
2 1 1 setup2
2 1 1 setup2
gsave
0 0 545 676 rectclip
[1 0 0 -1 0 676] concat
0.333333 setgray
grestore
%%EndDocument

 endTexFig
 1432 4802 a Fs(Figure)20 b(6:)27 b(Experimental)18 b(results.)1908
5589 y(14)p eop
%%Page: 15 15
15 14 bop 208 83 a Fs(the)17 b(same)h(for)f(Stock)h(RAM,)g(Heap)f
(on-a-bus,)f(RAM)j(on-a-bus,)d(and)h(\(almost\))g(Nailed)h(RCM.)g(That)
g(Stock)f(RAM)i(does)e(one)208 216 y(more)i(collection)f(than)i(the)f
(others)h(for)f(2.4M)g(loading)f(can)i(be)f(explained)g(by)g(the)h
(fact)f(that)h(both)f(vectors)g(and)h(nodes)f(are)g(in)208
349 y(the)h(same)g(heap)g(and)f(they)h(are)g(separated)f(elsewhere.)125
548 y Fq(\017)41 b Fs(The)24 b(number)f(of)i(bytes)g(recovered)e(is)i
(consistent)g(with)g(expectations.)40 b(Again)24 b(Stock)h(RAM)h(has)f
(an)g(ef)o(fectively)e(smaller)208 681 y(heap)14 b(because)g(vectors)h
(are)g(included)e(there,)j(and)e(so)i(it)g(recovers)d(slightly)i(less)h
(space)f(except)g(where)f(squeezed)g(into)h(an)g(extra)208
814 y(collection.)28 b(When)20 b(the)h(heap)f(is)i(moved)e(out)g(to)h
(RCM,)h(the)f(count)f(of)h(RAM-bytes)f(recovered)f(becomes)h
(negligible\320due)208 946 y(only)14 b(to)h(abandoned)e
(vectors\320whose)h(growth)g(is)i(too)f(small)h(to)f(come)g(from)f(the)
h(inversion)f(algorithm.)24 b(Heap)15 b(on-a-bus)e(and)208
1079 y(RAM)24 b(on-a-bus)e(perform)g(identically)-5 b(,)23
b(as)i(they)e(should.)37 b(Nailed)24 b(RCM)h(performs)d(similarly)-5
b(,)24 b(recovering)e(slightly)h(more)208 1212 y(space.)125
1411 y Fq(\017)41 b Fs(The)23 b(garbage)g(collection)g(times)h(are)g
(essentially)g(the)g(same)h(for)e(the)h(\256rst)h(three)e(systems:)36
b(Stock)23 b(RAM,)i(Heap)f(on-a-bus,)208 1544 y(and)c(RAM)i(on-a-bus;)e
(they)g(grow)g(with)i(the)f(loading,)f(as)h(expected.)29
b(When)21 b(available)f(heap)g(becomes)g(cramped,)g(time)h(for)208
1677 y(stop-and-copy)12 b(collection)k(soars.)25 b(When)16
b(the)h(hardware)d(support)h(for)h(mark/sweep)f(collection)g(is)j
(enabled)d(that)h(time)h(drops)208 1810 y(precipitously)-5
b(.)125 2009 y Fq(\017)41 b Fs(The)22 b(mutator)g(time)g(does)h(not)f
(grow)g(much)g(\(8\045\))g(from)g(Stock)h(RAM)g(to)g(Heap)f(on-a-bus,)g
(but)g(it)h(grows)g(33\045)f(from)g(Heap)208 2142 y(on-a-bus)17
b(to)i(RAM)g(on-a-bus.)25 b(This)19 b(cost)g(re\257ects)g(not)g(only)f
(the)h(distance)g(from)e(the)i(processor)f(to)h(the)g(RCM)h(memory)-5
b(,)17 b(but)208 2275 y(also)23 b(the)g(loss)g(of)g(caching)e(for)h
(the)h(stack;)i(not)d(all)h(of)g(the)g(33\045)f(would)g(be)h(recovered)
e(even)h(if)h(RCM)h(were)f(resident)f(\(with)208 2408
y(RAM\))c(on)f(the)g(CPU)i(board.)25 b(Nevertheless,)17
b(the)h(total)f(times)h(for)f(Nailed)h(RCM)h(recover)d(much)h(of)g
(this)h(dif)o(ference)d(because)208 2540 y(of)k(its)j(more)d(ef)o
(\256cient)g(collector)-5 b(.)125 2740 y Fq(\017)41 b
Fs(Full)22 b(RCM)h(performs)d(very)i(nicely)-5 b(,)21
b(indeed.)31 b(Garbage)21 b(collection)g(is)i(eliminated)e(not)h(only)f
(for)h(the)g(single)g(run)f(measured)208 2873 y(here,)j(but)h(also)f
(for)g(at)h(least)g(59)g(successive)f(runs\320until)f(that)i
(repetitive)f(test)h(was)g(killed.)40 b(Therefore,)23
b(no)h(vectors)g(were)208 3005 y(recovered)12 b(either;)k(probably)c
(none)i(were)g(generated)f(after)i(startup.)24 b(Full)15
b(RCM)h(is)f(seen)g(to)g(recycle)f(the)g(appropriate)e(number)208
3138 y(of)20 b(bytes)g(at)h(run)e(time,)i(slightly)f(more)f(than)h(the)
g(garbage)f(collection)g(statistics)j(because)e(the)g(GC)i(tests)f(do)f
(not)g(account)f(for)208 3271 y(garbage)f(recoverable)g(at)j
(termination)d(of)i(the)g(program.)125 3470 y Fq(\017)41
b Fs(Full)19 b(RCM)h(has)f(no)f(GC)i(time,)f(and)f(so)h(its)h(mutator)e
(timings)g(are)h(its)h(total)f(times.)27 b(And)18 b(its)i(total)f(time)
g(is)g(far)g(less)h(than)e(all)i(the)208 3603 y(other)e(systems)h
(\(except)f(the)h(simplest)h(case\).)26 b(Compared)18
b(to)h(Stock)g(RAM,)g(Full)g(RCM)i(slows)e(down)f(because)h(the)g
(mutator)208 3736 y(cannot)25 b(cache)h(its)h(stack)g(and)e(must)i
(write)f(all)h(entries)f(through)h(N)t Ft(E)t(X)t(T)t
Fs(B)t Ft(U)t(S)r Fs(,)h(but)e(it)h(speeds)f(up)g(by)g(eliminating)f
(garbage)208 3869 y(collection.)125 4068 y Fq(\017)41
b Fs(Full)23 b(RCM)i(exhibits)e(the)h(\257at)g(performance)c(that)k
(one)f(expects)g(from)f(a)i(program)e(designed)g(for)h(real-time)g(and)
g(for)f(paral-)208 4201 y(lel)j(performance.)37 b(Our)24
b(test)h(jig)g(cannot)f(yet)g(verify)g(the)g(latter)h(performance,)d
(but)j(these)f(numbers)g(do)g(indicate)g(that)g(it)i(is)208
4334 y(available.)37 b(On)24 b(multiprocessor)e(systems)i(this)h
(architecture)d(requires)h(synchronization)e(only)i(just)h(before)f
(and)g(just)i(after)208 4467 y(garbage)16 b(collection,)h(if)h(one)f
(were)g(ever)g(necessary)-5 b(.)25 b(Except)17 b(for)g(that,)h(it)h
(interleaves)e(among)f(processors)h(just)h(like)g(conven-)208
4599 y(tional)h(RAM.)125 4799 y Fq(\017)41 b Fs(Full)16
b(RCM)h(\(as)f(well)g(as)h(Nailed)f(RCM\))g(actually)f(has)h(twice)h
(the)e(capacity)g(than)h(that)g(tested.)25 b(It)16 b(has)h(a)f(0.75)e
(megaNode)g(heap,)208 4931 y(of)j(which)h(only)f(0.375)g(was)i
(available)e(to)h(these)h(tests.)27 b(If)18 b(anything,)f(the)h(ef)o
(fort)e(in)j(tying)e(down)g(the)h(other)g(0.375)e(megaNode)208
5064 y(increased)k(the)i(collector)e(timings)i(somewhat,)f(but)g(only)g
(on)g(Nailed)g(RCM)i(because)e(Full)h(RCM)h(never)d(required)g(garbage)
208 5197 y(collection.)1908 5589 y(15)p eop
%%Page: 16 16
16 15 bop 0 83 a Fr(7)119 b(Conclusions)31 b(and)g(Futur)n(e)f(Dir)n
(ections)0 301 y Fs(W)-7 b(e)25 b(have)f(established)g(experimentally)d
(that)k(reference)d(counting)h(in)h(hardware)f(competes)g(with)h
(conventional,)f(uniprocessing)0 434 y(garbage)e(collection,)i(but)g
(we)g(yet)g(have)f(no)h(evidence)f(for)g(its)i(behavior)d(under)h
(multiprocessing,)f(which)i(is,)h(after)f(all,)h(the)f(moti-)0
567 y(vation)e(for)g(this)h(work.)30 b(Furthermore,)19
b(RCM)k(has)f(played)e(a)i(critical)g(role)f(in)h(a)g(collateral)f
(project)g(to)h(implement)e(an)i(Applicative)0 700 y(File)f(System)g
([20)o(].)29 b(This)21 b(system)f(provides)g(persistent)g(and)g(bulk)g
(storage)g(under)g(a)h(functional)e(discipline,)h(which)g(precludes)g
(the)0 833 y(programmer)s(')-5 b(s)21 b(use)j(of)f(side)h(ef)o(fects.)
37 b(RCM)24 b(allowed)f(management)f(of)h(both)g(disk)g(and)g(main)h
(memory)e(under)g(a)i(homogeneous)0 966 y(storage-management)13
b(strategy:)25 b(on-line)16 b(reference)f(counting)g(as)j(the)f
(primary)e(algorithm,)h(all)i(backed)d(up)i(by)f(an)h(expensive,)f(of)o
(f-)0 1098 y(line)k(garbage-collector)d(\(like)j Fo(Unix)p
Fs(')-5 b(s)20 b Fn(fsck)p Fs(\).)0 1394 y Fg(7.1)99
b(Parallel)24 b(heaps)0 1582 y Fs(If)18 b(parallel)f(processing)g(is)i
(to)f(become)e(cost-ef)o(fective,)g(then)i(it)h(must)f(apply)f(both)g
(to)h(lar)o(ge)f(computations,)f(where)h(the)h(overhead)e(of)0
1715 y(process-scheduling)f(can)k(be)f(amortized,)f(and)h(to)h(new)f
(problems)f(so)i(the)g(cost)g(for)f(software-support)d(can)j(be)h
(justi\256ed.)26 b(However)m(,)0 1848 y(exactly)21 b(this)h(class)h(of)
f(lar)o(ge,)e(parallel)i(programs)e(is)i(where)f(current)g
(garbage-collection)d(technology)h(fades)j([12)n(].)32
b(W)m(ith)22 b(storage)0 1981 y(management)11 b(essential)k(to)e
(modern)f(programming)e(languages,)k(like)f Fn(Smalltalk)p
Fs(,)k Fn(ML)p Fs(,)e Fn(Lisp)p Fs(,)g Fn(Haskell)p Fs(,)h(and)d
Fn(Java)p Fs(,)h(we)g(must)g(either)0 2114 y(abandon)19
b(languages)g(that)i(depend)e(on)h(automatic)g(storage)g(management)f
(and)h(cast)h(our)f(parallel)h(programs)d(in)j(the)g(likes)g(of)g
Fn(C)p Fs(,)g(or)0 2246 y(\256nd)e(strategies)g(for)g(managing)e
(dynamic)h(storage)h(on)f(massively)h(parallel)g(processors.)26
b(A)19 b(third,)g(most)g(distasteful,)g(alternative)g(is)0
2379 y(to)h(abandon)e(multiprocessing)h(for)g(the)h(innovative)f
(projects)g(that)h(exploit)g(these)g(languages.)125 2512
y(This)15 b(research)e(shows)i(that)g(simple)g(hardware)e
Fp(at)j Fs(memory)d(can)i(accelerate)f(both)g(reference-counting)c(and)
k(garbage)g(collection)0 2645 y(in)26 b(a)f(manner)f(consistent)h(with)
h(lar)o(ge-scale)e(parallelism.)42 b(The)25 b(cost)h(in)f(hardware)f
(redesign,)h(in)h(fact,)g(is)h(small;)h(processors)d(are)0
2778 y(unaf)o(fected,)17 b(the)i(processor)n(\261memory)c(path)k(is)h
(essentially)g(unchanged,)c(and)j(some)g(simple)g(circuitry)f(is)i
(needed)e(at)i(the)f(perimeter)0 2911 y(of)13 b(each)h(memory)e(bank,)h
(memory)f(that)i(still)h(remains)e(available)g(as)h(dynamic)e(RAM)i
(for)f(conventional)e(access.)26 b(The)13 b(lar)o(gest)g(impact)0
3043 y(is)21 b(on)f(the)g(choice)g(of)f(caching)g(strategy)-5
b(,)19 b(something)g(already)g(a)i(problem)d(under)h(parallelism.)0
3339 y Fg(7.2)99 b(Futur)n(e)27 b(W)-5 b(ork)0 3527 y
Fs(Advocates)18 b(and)h(implementors)f(of)h(functional)e(programming)f
(and)j(heap)g(memory)e(should)h(take)i(care)f(to)g(separate)g(their)g
(assump-)0 3660 y(tions)26 b(from)h(C)t(+)t(+)r(')-5
b(s,)29 b(from)c(ours,)i(and)f(from)f(an)h(ideal.)44
b(Many)26 b(presume)f(a)h(universal)f(continuation-passing)e(style,)28
b(that)e(makes)0 3793 y(it)i(easy)g(to)g(return)e(functions)g(as)i
(results)g(to)g(outer)e(environments.)47 b(That)27 b(presumption)e
(places)j(an)f(unusual)g(demand)f(on)h(heap-)0 3926 y(management,)14
b(especially)i(where)f(most)h(programs)e(do)i(not)g(need)f(it,)i(using)
e(the)h(stack)h(instead;)i(C)g(makes)c(no)h(such)g(demands.)24
b(Some)0 4059 y(compilers)14 b(of)g(applicative)f(languages)g(manage)h
(to)h(eliminate)f(heap-resident)e(continuations)h(except)h(where)f
(absolutely)h(necessary)-5 b(.)0 4191 y(Such)17 b(a)g(compilation)e
(would)h(be)h(necessary)f(for)g(a)i(fair)e(comparison)f(to)k(C)r(,)f
(and)e(is)i(suggested)e(by)h(our)f(experience)f(with)i(this)g(design.)
125 4324 y(The)e(present)h(implementation)e(is)j(a)f(board-level)e
(prototype)g(installed)i(as)h(an)f(I/O)g(device)f(on)h(a)g(bus,)h(but)f
(the)g(underlying)d(design)0 4457 y(supports)k(VLSI)h(implementation)e
([34)n(])i(like)g(ordinary)e(dynamic)h(RAM.)h(The)g(prototype)d(is)k
(now)f(installed)g(in)g(a)g(uniprocessor)m(,)e(but)0
4590 y(the)i(design)g(is)h(tar)o(geted)d(for)i(several)f(banks)h(of)g
(RCM)h(within)f(a)g(multiprocessor)-5 b(.)25 b(Moreover)m(,)16
b(the)i(software)f(now)h(available)f(is)i(only)0 4723
y(a)i(prototype)d(compiler)m(,)g(so)i(there)g(is)h(much)f(opportunity)d
(for)i(improvement)f(as)j(part)f(of)g(a)g(lar)o(ger)f(project.)125
4856 y(There)d(are)h(a)h(few)f(features)f(designed)g(into)h(RCM)i(that)
e(have)f(not)h(been)g(tested)g(yet.)26 b(One)17 b(is)h(on-line)e
(multiprocessor)g(reference-)0 4988 y(counting;)21 b(a)h(related)g(one)
f(is)i(of)o(f-line)d(multiprocessor)g(garbage-collection.)28
b(Another)21 b(is)i(an)e(unimplemented)f(facility)h(to)h(store)g(a)0
5121 y(dead)15 b(pointer)g(\(threads)g([37)n(]\))h(in)g(a)h(single)e
(cycle;)j(originally)c(intended)g(to)j(recover)d(circular)h
(structures,)h(it)g(has)h(since)f(demonstrated)0 5254
y(itself)21 b(useful)e(for)h(reducing)e(counts)i(in)g(other)f
(contexts,)h(as)h(well,)f(and)g(must)g(be)g(included)f(in)h(any)g
(sequel.)1908 5589 y(16)p eop
%%Page: 17 17
17 16 bop 125 83 a Fs(W)-7 b(e)23 b(foresee)f(many)g(RCMs)i(built)f(to)
g(a)g(standard)f Fn(SIMM)i Fs(interface)e(and)g(installed)h(on)f(a)h
(stock)g(multiprocessor)-5 b(.)33 b(The)22 b(biggest)0
216 y(dif)o(ference)g(from)h(the)i(one)f(described)f(here)g(is)j(that)e
Fn(A)-6 b(V)g(AIL)p Fs(able)26 b(space)e(will)h(be)f(constantly)g
(swept)g(by)g(hardware,)g(obviating)f(the)0 349 y(need)e(for)f(so)i
(lar)o(ge)e(a)i(count/link)d(\256eld.)31 b(therefore,)19
b(the)j(hidden)d(memory)h(\(Figure)g(1\))h(will)h(be)f(cut)h(in)f
(half.)30 b(Moreover)m(,)19 b(we)i(would)0 482 y(also)16
b(provide)e(four)n(-pointer)f(nodes,)j(motivated)f(by)g(a)i(need)e
(within)h(system)g(software)f(for)g(ef)o(\256cient,)h
(randomly-referenced)11 b(records)0 614 y(like)22 b(S)t
Ft(C)t(H)t(E)t(M)t(E)r Fs(')-5 b(s)22 b(lexical)e(frames.)125
847 y(This)15 b(research)e(shows)i(that)g(simple)g(hardware)e
Fp(at)j Fs(memory)d(can)i(accelerate)f(both)g(reference-counting)c(and)
k(garbage)g(collection)0 980 y(in)26 b(a)f(manner)f(consistent)h(with)h
(lar)o(ge-scale)e(parallelism.)42 b(The)25 b(cost)h(in)f(hardware)f
(redesign,)h(in)h(fact,)g(is)h(small;)h(processors)d(are)0
1112 y(unaf)o(fected,)g(the)g(processor)n(\261memory)e(path)i(is)i
(unchanged,)d(and)i(some)f(simple)h(circuitry)f(is)i(needed)d(at)j(the)
f(perimeter)e(of)i(each)0 1245 y(memory)15 b(bank.)24
b(And)16 b(that)h(memory)d(still)k(remains)e(available)g(as)h(dynamic)e
(RAM)i(for)e(conventional)f(access.)27 b(The)16 b(worst)g(dif)o
(\256culty)0 1378 y(arises)21 b(from)e(sharing)g(of)h(cached)f(data,)h
(a)h(problem)d(already)h(familiar)h(under)f(parallelism.)125
1511 y Fh(Acknowledgements:)36 b Fs(Thank)24 b(Y)-8 b(ou)24
b(to)j(M)t Ft(A)t(C)t(H)r Fs(')-5 b(s)27 b(designers,)e(for)f
(providing)f(preservation)g(of)i(transparent-translation)c(ta-)0
1644 y(bles,)i(to)g(NeXT)g(for)f(most)g(generously)f(providing)f(us)j
Fn(NBIC)p Fs(s)h(and)e(prototype)e(boards.)33 b(to)23
b(Bob)f(W)-7 b(ehrmiester)23 b(for)f(early)g(help)g(on)0
1777 y(hardware,)g(to)h(Peter)g(Beckman)f(for)g(preparing)f(the)i
(matrix)f(data,)i(and)e(to)h(Esen)g(T)m(una)f(for)h(loaning)e(us)j(a)f
(compiler)f([14)n(].)36 b(Thanks)0 1909 y(also)21 b(to)f(anonymous)d
(referees)j(for)f(helpful)g(comments.)0 2264 y Fr(Refer)n(ences)42
2482 y Fs([1])40 b(A.)20 b(W)-8 b(.)22 b(Appel.)d(Garbage)g(collection)
g(can)h(be)g(faster)g(than)g(stack)g(allocation.)f Fp(Inf.)h(Pr)m(oc.)g
(Lett.)h Fh(25)p Fs(,)e(4)h(\(June)g(1987\),)e(275\261279.)42
2681 y([2])40 b(A.)17 b(W)-8 b(.)17 b(Appel,)f(J.)h(R.)h(Ellis,)f(and)f
(K.)h(Li.)g(Real-time)f(concurrent)e(collection)h(on)h(stock)h
(multiprocessors.)d Fp(Pr)m(oc.)i(SIGPLAN)g('88)180 2814
y(Conf.)k(Pr)m(ogramming)e(Language)g(Design)i(and)f(Implementation,)f
(ACM)j(SIGPLAN)f(Notices)h Fh(23)p Fs(,)e(7)i(\(July)e(1988\),)g(1)m
(1\26120.)42 3014 y([3])40 b(H.)20 b(G.)h(Baker)m(,)e(Jr)-5
b(.)21 b(List)g(processing)e(in)h(real)g(time)h(on)f(a)g(serial)h
(computer)-5 b(.)18 b Fp(Comm.)j(ACM)h Fh(21)p Fs(,)d(4)i(\(April)e
(1978\),)g(280\261294.)42 3213 y([4])40 b(H.)21 b(G.)f(Baker)m(,)g(Jr)
-5 b(.)21 b(Preface)f(to)h(H.)g(G.)g(Baker)m(,)f(Jr)-5
b(.)21 b(\(ed.\))e Fp(Memory)i(Management.)d(Lectur)m(e)j(Notes)g(in)g
(Computer)f(Science)g Fh(986)p Fs(,)180 3346 y(Berlin,)g(Springer)f
(\(1995\),)e(v\261viii.)42 3545 y([5])40 b(D.)25 b(G.)g(Bobrow)-5
b(.)24 b(Managing)f(reentrant)h(structures)g(using)h(reference)e
(counts.)h Fp(ACM)i(T)-5 b(rans.)25 b(Pr)m(og.)g(Lang.)f(Sys./)h
Fh(2)p Fs(,)h(3)f(\(July)180 3678 y(1980\),)18 b(269\261273.)42
3877 y([6])40 b(M.)135 b(Campione)66 b(&)h(K.)h(W)-7
b(alrath.)67 b Fp(The)i Fs(J)t Ft(A)-5 b(V)g(A)71 b Fp(T)-5
b(utorial,)79 b Fs(Reading,)f(MA,)67 b(Addison-W)-7 b(esley)66
b(\(to)h(appear\).)180 4010 y Fo(http://java.sun.com/./tutorial/jav)o
(a/java)o(OO/ga)o(rbage)o(collec)o(tion.)o(html)p Fs(.)42
4209 y([7])40 b(D.)15 b(W)-8 b(.)15 b(Clark)g(and)f(C.)h(C.)h(Green.)e
(A)h(note)f(on)g(shared)g(structure)g(in)i(L)t Ft(I)t(S)t(P)r
Fs(.)f Fp(Inform.)f(Pr)m(oc.)h(Ltrs.)g Fh(7)p Fs(,)h(6)f(\(October)e
(1978\),)h(312\261314.)42 4408 y([8])40 b(J.)21 b(Cohen.)e(Garbage)g
(collection)g(of)h(linked)f(data)h(structures.)g Fp(Comput.)f(Surveys)h
Fh(13)p Fs(,)g(3)g(\(September)e(1981\),)h(341\261367.)42
4608 y([9])40 b(G.)20 b(E.)h(Collins.)f(A)h(method)d(for)i(overlapping)
d(and)j(erasure)f(of)h(lists.)i Fp(Comm.)e(ACM)i Fh(3)p
Fs(,)e(12)g(\(December)f(1960\),)f(655\261657.)0 4807
y([10])40 b(L.)31 b(P)-9 b(.)32 b(Deutsch)f(and)g(D.)h(G.)f(Bobrow)-5
b(.)30 b(An)i(ef)o(\256cient,)h(incremental,)f(real-time)f(garbage)f
(collector)-5 b(.)31 b Fp(Comm.)g(ACM)j Fh(19)p Fs(,)f(9)180
4940 y(\(September)18 b(1976\),)h(522\261526.)3 5139
y([1)m(1])40 b(L.)26 b(P)-9 b(.)27 b(Deutsch)e(and)h(A.)h(M.)f(Schif)o
(fman.)e(Ef)o(\256cient)h(implementation)f(of)i(the)i(S)t
Ft(M)t(A)t(L)t(L)n(T)o(A)t(L)t(K)t Fs(-)t(8)t(0)f(system.)f
Fp(Conf.)h(Rec.)f(1)-6 b(1th)180 5272 y(ACM)21 b(Symp.)e(on)h
(Principles)g(of)g(Pr)m(ogramming)f(Languages)f Fs(\(1984\),)g
(297\261302.)1908 5589 y(17)p eop
%%Page: 18 18
18 17 bop 0 83 a Fs([12])40 b(A.)17 b(Diwan,)g(D.)h(T)-6
b(arditi,)17 b(&)g(E.)g(Moss.)g(Memory-system)e(performance)f(of)j
(programs)e(with)i(intensive)g(heap)f(allocation.)g Fp(ACM)180
216 y(T)-5 b(rans.)21 b(Comput.)e(Sys.)h Fh(13)p Fs(,)g(3)g(\(August)f
(1995\),)f(244\261273.)0 415 y([13])40 b(I.)18 b(S.)h(Duf)o(f,)f(R.)h
(G.)g(Grimes,)g(and)f(J.)h(G.)g(Lewis.)f(Sparse)h(matrix)f(test)h
(problems.)e Fp(ACM)i(T)-5 b(rans.)19 b(Math.)g(Softwar)m(e)f
Fh(15)p Fs(,)g(1)h(\(March)180 548 y(1989\),)f(1\26114.)0
747 y([14])40 b(R.)19 b(K.)f(Dybvig.)e Fp(Thr)m(ee)i(Implementation)e
(Models)i(for)j Fs(S)t Ft(C)t(H)t(E)t(M)t(E)r Fs(,)e(Ph.D.)36
b(dissertation,)18 b(Univ)-5 b(.)17 b(of)g(North)h(Carolina)f(at)i
(Chapel)180 880 y(Hill)i(\(April)e(1987\).)0 1079 y([15])40
b(J.)18 b(Frens)f(&)g(D.)h(S.)g(W)m(ise.)f(Matrix)g(inversion)f(Using)h
(quadtrees)f(implemented)f(in)20 b(G)t Ft(O)t(F)t(E)t(R)r
Fs(.)e(T)-6 b(echnical)16 b(Rept.)h(433,)g(Computer)180
1212 y(Science)j(Dept.,)f(Indiana)g(Univ)-5 b(.)19 b(\(May)h(1995\).)0
1411 y([16])40 b(D.)23 b(P)-9 b(.)23 b(Friedman)e(and)h(D.)h(S.)g(W)m
(ise.)g(Reference)f(counting)f(can)h(manage)g(the)g(circular)g
(environments)e(of)i(mutual)g(recursion.)180 1544 y Fp(Inform.)d(Pr)m
(oc.)h(Ltrs.)h Fh(8)p Fs(,)g(1)f(\(January)e(1979\),)h(41\26144.)0
1743 y([17])40 b(D.)20 b(Gries.)h(An)f(exercise)g(in)g(proving)e
(programs)g(correct.)h Fp(Comm.)i(ACM)h Fh(20)p Fs(,)d(12)h(\(December)
f(1977\),)f(921\261930.)0 1943 y([18])40 b(A.)23 b(Gottlieb,)f(R.)h
(Girshman,)f(C.)h(P)-9 b(.)23 b(Kruskal,)f(K.)g(P)-9
b(.)23 b(McAulif)o(fe,)e(L.)i(Rudolph,)e(and)h(M.)g(Snir)-5
b(.)23 b(The)f(NYU)h(ultracomputer)n(\320)180 2076 y(Designing)d(an)i
(MIMD)f(shared)g(memory)f(parallel)i(computer)-5 b(.)20
b Fp(IEEE)h(T)-5 b(rans.)22 b(Computers)f Fh(C-32)p Fs(,)g(2)h
(\(February)e(1983\),)g(175-)180 2208 y(189.)0 2408 y([19])40
b(R.)21 b(H.)f(Halstead,)g(Jr)-5 b(.)23 b(M)t Ft(U)t(L)n(T)t(I)t(L)t(I)
t(S)t(P)r Fs(:)k(a)20 b(language)f(for)g(concurrent)f(symbolic)h
(computation.)e Fp(ACM)k(T)-5 b(rans.)21 b(Pr)m(og.)e(Lang.)g(Sys./)180
2540 y Fh(7)p Fs(,)h(4)g(\(October)f(1985\),)f(501\261538.)0
2740 y([20])40 b(B.)17 b(Heck)g(and)g(D.)g(S.)g(W)m(ise.)h
(Implementation)c(of)j(an)g(applicative)e(\256le)j(system.)f(In)f(Y)-11
b(.)18 b(Bekkers)f(and)f(J.)h(Cohen)g(\(eds.\),)f Fp(Memory)180
2873 y(Management.)i(Lectur)m(e)i(Notes)h(in)f(Computer)g(Science)f
Fh(637)p Fs(,)h(Berlin,)g(Springer)e(\(1992\),)g(248\261263.)0
3072 y([21])40 b(P)-9 b(.)24 b(Hudak)g(and)g(R.)h(M.)f(Keller)-5
b(.)25 b(Garbage)e(collection)g(and)h(task)h(deletion)e(in)i
(distributed)e(applicative)g(processing)g(systems.)180
3205 y Fp(Conf.)d(Rec.)g(1982)f(ACM)i(Symp.)e(on)h(Lisp)g(and)g
(Functional)e(Pr)m(ogramming)g Fs(\(1982\),)g(168\261178.)0
3404 y([22])40 b(D.)24 b(H.)g(H.)g(Ingalls.)e(The)k(S)t
Ft(M)t(A)t(L)t(L)n(T)o(A)t(L)t(K)t Fs(-)t(7)t(6)e(programming)c
(system:)34 b(design)23 b(and)g(implementation.)f Fp(Conf.)h(Rec.)g
(5th)h(ACM)180 3537 y(Symp.)19 b(on)h(Principles)g(of)g(Pr)m(ogramming)
f(Languages)f Fs(\(1978\),)g(9\26115.)0 3736 y([23])40
b(S.)25 b(D.)g(Johnson.)e(B.)i(Bose)g(&)g(S.)g(D.)g(Johnson.)e
(DDD-FM9001:)34 b(Derivation)23 b(of)h(a)h(veri\256ed)f
(microprocessor;)h(an)f(exercise)180 3869 y(in)i(integrating)d
(veri\256cation)i(with)g(formal)g(derivation.)e(In)j(G.)f(Milne)h(&)f
(L.)h(Pierre)f(\(eds.\),)h Fp(Pr)m(oc.)f(IFIP)g(Conf.)h(on)f(Corr)m
(ect)180 4002 y(Har)m(dwar)m(e)g(Design)h(and)f(V)-9
b(eri\256cation)24 b(Methods.)h(Lectur)m(e)g(Notes)i(in)f(Computer)f
(Science)g Fh(683)p Fs(,)h(Berlin,)h(Springer)d(\(1993\),)180
4134 y(191\261202.)0 4334 y([24])40 b(D.)21 b(E.)g(Knuth.)f
Fp(The)h(Art)h(of)f(Computer)g(Pr)m(ogramming)e Fh(I,)j
Fp(Fundamental)c(Algorithms)j Fs(\(2nd)e(ed.\),)i(Reading,)f(MA,)h
(Addison-)180 4467 y(W)-7 b(esley)21 b(\(1973\).)0 4666
y([25])40 b(D.)27 b(E.)g(Knuth.)f Fp(The)h(Art)h(of)f(Computer)g(Pr)m
(ogramming)e Fh(III,)j Fp(Sorting)f(and)f(Sear)m(ching)p
Fs(,)g(Reading,)i(MA,)f(Addison-W)-7 b(esley)i(,)180
4799 y(\(1973\).)0 4998 y([26])40 b(B.)19 b(Lang,)e(C.)i(Queinnec,)e
(J.)i(Piquer)-5 b(.)18 b(Garbage)f(collecting)g(the)h(world.)f
Fp(Conf.)h(Rec.)g(19th)f(ACM)i(Symp.)f(on)g(Principles)g(of)g(Pr)m(o-)
180 5131 y(gramming)h(Languages)f Fs(\(1992\),)g(39\26150.)1908
5589 y(18)p eop
%%Page: 19 19
19 18 bop 0 83 a Fs([27])40 b(H.)22 b(Lieberman)e(and)i(C.)h(Hewitt.)f
(A)h(real-time)e(garbage)f(collector)h(based)h(on)g(the)g(lifetime)g
(of)g(objects.)f Fp(Comm.)h(ACM)j Fh(26)p Fs(,)c(6)180
216 y(\(June)e(1983\),)g(419\261429.)0 415 y([28])40
b(D.)22 b(Moon.)e(Garbage)g(collection)h(in)g(a)h(lar)o(ge)h(L)t
Ft(I)t(S)t(P)h Fs(system.)e Fp(Conf.)f(Rec.)g(1984)f(ACM)j(Symp.)d(on)i
(Lisp)g(and)e(Functional)g(Pr)m(o-)180 548 y(gramming)f
Fs(\(1982\),)f(235\261246.)0 747 y([29])40 b(K.)15 b(Nilsen.)f
(Progress)g(in)h(hardware-assisted)d(real-time)i(garbage)f(collection.)
g(In)h(H.)h(G.)g(Baker)f(\(ed.\),)g Fp(Memory)h(Management.)180
880 y(Lectur)m(e)20 b(Notes)h(in)f(Computer)g(Science)g
Fh(986)p Fs(,)f(Berlin,)h(Springer)e(\(1995\),)g(355\261379.)0
1079 y([30])40 b(J.)18 b(Rees)h(and)e(W)-8 b(.)18 b(Clinger)f(\(Eds.\))
g(Revised)1432 1049 y Fb(3)1487 1079 y Fs(report)g(on)g(the)g
(algorithmic)f(language)i(S)t Ft(C)t(H)t(E)t(M)t(E)r
Fs(.)g Fp(ACM)h(SIGPLAN)e(Notices)h Fh(21)p Fs(,)180
1212 y(12)i(\(December)e(1986\),)g(37\26179.)0 1411 y([31])40
b(W)-8 b(.)19 b(Schmidt)e(&)h(K.)g(Nilsen.)g(Performance)d(of)j(a)g
(hardware-assisted)e(real-time)h(garbage)g(collector)-5
b(.)17 b Fp(ASPLOS-VI)f(Pr)m(oc.:)25 b(6th)180 1544 y(Intl.)13
b(Conf.)h(on)f(Ar)m(chitectural)g(Support)f(for)i(Pr)m(ogramming)e
(Languages)g(and)g(Operating)h(Systems,)i(ACM)g(SIGPLAN)e(Notices)180
1677 y Fh(29)p Fs(,)19 b(1)m(1)h(\(November)e(1994\),)g(76\26185.)0
1876 y([32])40 b(H.)25 b(Schorr)f(and)g(W)-8 b(.)27 b(M.)e(W)-7
b(aite.)26 b(An)f(ef)o(\256cient)f(machine-independent)c(procedure)j
(for)h(garbage)f(collection)h(in)h(various)f(list)180
2009 y(structures.)19 b Fp(Comm.)h(ACM)j Fh(10)p Fs(,)c(8)i(\(August)e
(1967\),)f(501\261506.)0 2208 y([33])40 b(J.)21 b(W)-7
b(eizenbaum.)19 b(Symmetric)g(list)i(processor)-5 b(.)19
b Fp(Comm.)h(ACM)j Fh(6)p Fs(,)d(9)g(\(December)f(1963\),)f
(524\261544.)0 2408 y([34])40 b(D.)19 b(S.)g(W)m(ise.)h(Design)e(for)h
(a)g(multiprocessing)e(heap)h(with)h(on-board)d(reference)h(counting.)g
(In)i(J.\261P)-9 b(.)18 b(Jouannaud)f(\(ed.\),)h Fp(Func-)180
2540 y(tional)27 b(Pr)m(ogramming)g(Languages)f(and)h(Computer)h(Ar)m
(chitectur)m(e,)i(Lectur)m(e)e(Notes)h(in)f(Computer)g(Science)g
Fh(201,)h Fs(Berlin,)180 2673 y(Springer)19 b(\(1985\),)e(289\261304.)0
2873 y([35])40 b(D.)19 b(S.)g(W)m(ise)g(and)g(J.)g(Franco.)e(Costs)j
(of)f(quadtree)e(representation)f(of)j(non-dense)d(matrices.)i
Fp(J.)h(Parallel)g(Distrib.)g(Comput.)f Fh(9)p Fs(,)180
3005 y(3)i(\(July)g(1990\),)e(282-296.)0 3205 y([36])40
b(D.)20 b(S.)g(W)m(ise.)g(Undulant)e(block)h(elimination)g(and)g
(integer)n(-preserving)d(matrix)j(inversion.)f(T)-6 b(echnical)19
b(Rept.)g(418,)g(Computer)180 3337 y(Science)h(Dept.,)f(Indiana)g(Univ)
-5 b(.)19 b(\(revised)g(August)h(1995\).)0 3537 y([37])40
b(D.)34 b(S.)g(W)m(ise)h(&)f(J.)g(W)-7 b(algenbach.)32
b(Static)j(and)e(dynamic)f(partitioning)g(of)h(pointers)g(as)i(links)f
(and)f(threads.)g Fp(Pr)m(oc.)g(1996)180 3670 y(Intl.)20
b(Conf.)g(on)f(Functional)g(Pr)m(ogramming,)f(ACM)j(SIGPLAN)f(Notices)g
Fh(31)g Fs(,)h(6)f(\(June)g(1996\),)e(42\26149.)1908
5589 y(19)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
