%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%DocumentNeedsFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%Creator: Frame 5.5
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.5, for use with Adobe Unix Frame 5.5 products
%
% This ps_prolog file is Copyright (c) 1986-1996 Adobe Systems, Incoporated.
% All rights reserved.  This ps_prolog file may be freely copied and 
% distributed in conjunction with documents created using FrameMaker, 
% FrameMaker+SGML, FrameReader, and FrameViewer as long as this 
% copyright notice is preserved.
/FMDocSave save def
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.5) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	2 copy exch = = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsetsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orghalftone
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
	/tintGray
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known systemdict /currentdistillerparams known and {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix defaultmatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 1] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/tintCMYK {
	1 tintGray sub FrameCurColors 0 4 getinterval aload pop 	
	4 index mul 5 1 roll										
	3 index mul 5 1 roll										
	2 index mul 5 1 roll										
	mul 4 1 roll												
}bind def
/tintRGB {
	1 tintGray sub FrameCurColors 4 3 getinterval aload pop 	
	1 exch sub 3 index mul 1 exch sub 4 1 roll					
	1 exch sub 2 index mul 1 exch sub 4 1 roll					
	1 exch sub mul 1 exch sub 3 1 roll							
}bind def
/combineColor {
	/tintGray 1 1 FrameCurGray sub FrameCurColors 7 get mul sub def
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			tintCMYK FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				tintGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					tintCMYK
					RealSetcmykcolor
				} {
					tintRGB
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ tintGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{tintGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop tintGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop tintGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop tintGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix defaultmatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix defaultmatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	fMLevel1 {
		FMPColor {
			orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
		}
		{
			orgxfer cvx settransfer
		} ifelse
		orgfreq organgle orgproc cvx setscreen
	} {
		orghalftone sethalftone
	}ifelse
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	dup 1 gt {/#copies exch def} {pop} ifelse
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	fMLevel1 not {
		/orghalftone currenthalftone def
	}if 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMENDDOCUMENT {
	FMDocSave restore	
} def
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature: *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	
	mark
	statusdict begin 
		/setpageparams where {
			pop
			paperwidth paperheight 0 1 
			{setpageparams} stopped 
		} { 
			true 
		} ifelse
		
		{
			
			/setpagedevice where {
				pop 
				1 dict dup begin
					/PageSize [ paperwidth paperheight ] def
				end 
				{setpagedevice} stopped
			} {
				true	
			} ifelse
		} {
			false		
		} ifelse 
	end
	{cleartomark true}{cleartomark false}ifelse
} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		8 1 roll
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
		8 -1 roll
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add dup 0 ne {div} {pop pop .5} ifelse fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	[FMsetsize 0 0 FMpointsize 0 0] makefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	/FMsetsize FMpointsize def
	F 
	} bind def
/QQ { 
	/FMsetsize exch def
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	2 copy 0.0 0.0 1.0 5 3 roll arc 
	round cvi 360 mod exch round cvi 360 mod eq {closepath} if 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.5) FMVERSION
1 1 0 0 612 792 0 1 37 FMDOCUMENT
%%IncludeFont: Helvetica-Bold
0 0 /Helvetica-Bold FMFONTDEFINE
%%IncludeFont: Helvetica
1 0 /Helvetica FMFONTDEFINE
%%IncludeFont: Times-Roman
2 0 /Times-Roman FMFONTDEFINE
%%IncludeFont: Helvetica-Oblique
3 0 /Helvetica-Oblique FMFONTDEFINE
%%IncludeFont: Times-Bold
4 0 /Times-Bold FMFONTDEFINE
%%IncludeFont: Times-Italic
5 0 /Times-Italic FMFONTDEFINE
%%IncludeFont: Palatino-Roman
6 0 /Palatino-Roman FMFONTDEFINE
%%IncludeFont: Courier
7 0 /Courier FMFONTDEFINE
%%IncludeFont: Courier-Oblique
8 0 /Courier-Oblique FMFONTDEFINE
%%IncludeFont: ZapfDingbats
9 1 /ZapfDingbats FMFONTDEFINE
%%IncludeFont: Courier-Bold
10 0 /Courier-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
J
0 18 Q
0 X
(The GC Interface in the EVM) 308.94 636 T
0 14.4 Q
(1) 549.99 643.2 T
1 12 Q
(Derek White and Ale) 380.66 590 T
(x Gar) 490.34 590 T
(thw) 520.16 590 T
(aite) 538.66 590 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "1" 2
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 36 540 243 R
7 X
V
2 8 Q
0 X
(\251) 72 237.67 T
(1998) 80.7 237.67 T
(Sun) 99.32 237.67 T
(Microsystems,) 114.39 237.67 T
(Inc.) 163.9 237.67 T
(All) 178.74 237.67 T
(rights) 191.58 237.67 T
(reserv) 212.43 237.67 T
(ed.) 231.85 237.67 T
(The) 244.02 237.67 T
(SML) 259.08 237.67 T
(T) 278.15 237.67 T
(echnical) 282.48 237.67 T
(Report) 311.76 237.67 T
(Series) 336.15 237.67 T
(is) 358.33 237.67 T
(published) 366.28 237.67 T
(by) 400.02 237.67 T
(Sun) 410.64 237.67 T
(Microsystems) 425.71 237.67 T
(Laboratories,) 473.21 237.67 T
(of) 518.27 237.67 T
(Sun) 527.55 237.67 T
(Microsystems, Inc. Printed in U.S.A.) 72 227.67 T
(Unlimited) 72 207.67 T
(cop) 106.35 207.67 T
(ying) 117.82 207.67 T
(without) 133.94 207.67 T
(fee) 160.28 207.67 T
(is) 171.95 207.67 T
(permitted) 179.18 207.67 T
(pro) 211.74 207.67 T
(vided) 222.29 207.67 T
(that) 241.96 207.67 T
(the) 255.86 207.67 T
(copies) 267.53 207.67 T
(are) 289.87 207.67 T
(not) 301.54 207.67 T
(made) 313.66 207.67 T
(nor) 332.88 207.67 T
(distrib) 345.44 207.67 T
(uted) 365.73 207.67 T
(for) 381.41 207.67 T
(direct) 392.63 207.67 T
(commercial) 412.74 207.67 T
(adv) 452.41 207.67 T
(antage,) 463.76 207.67 T
(and) 488.54 207.67 T
(credit) 501.99 207.67 T
(to) 522.1 207.67 T
(the) 530.22 207.67 T
(source) 72 197.67 T
(is) 94.98 197.67 T
(gi) 102.42 197.67 T
(v) 108.44 197.67 T
(en.) 112.32 197.67 T
(Otherwise,) 123.97 197.67 T
(no) 160.95 197.67 T
(part) 171.05 197.67 T
(of) 185.59 197.67 T
(this) 194.36 197.67 T
(w) 208.02 197.67 T
(ork) 213.71 197.67 T
(co) 226.48 197.67 T
(v) 233.91 197.67 T
(ered) 237.79 197.67 T
(by) 253.66 197.67 T
(cop) 263.76 197.67 T
(yright) 275.23 197.67 T
(hereon) 296.44 197.67 T
(may) 320.31 197.67 T
(be) 336.18 197.67 T
(reproduced) 345.84 197.67 T
(in) 383.92 197.67 T
(an) 392.24 197.67 T
(y) 399.68 197.67 T
(form) 405.78 197.67 T
(or) 423.43 197.67 T
(by) 432.19 197.67 T
(an) 442.29 197.67 T
(y) 449.72 197.67 T
(means) 455.82 197.67 T
(graphic,) 478.36 197.67 T
(electronic,) 506.46 197.67 T
(or) 72 187.67 T
(mechanical,) 80.57 187.67 T
(including) 120.92 187.67 T
(photocop) 153.05 187.67 T
(ying,) 182.75 187.67 T
(recording,) 200.88 187.67 T
(taping,) 235.45 187.67 T
(or) 259.36 187.67 T
(storage) 267.94 187.67 T
(in) 292.95 187.67 T
(an) 301.09 187.67 T
(information) 310.55 187.67 T
(retrie) 350.24 187.67 T
(v) 366.92 187.67 T
(al) 370.72 187.67 T
(system,) 378.41 187.67 T
(without) 404.54 187.67 T
(the) 430.9 187.67 T
(prior) 442.59 187.67 T
(written) 460.05 187.67 T
(permission) 484.62 187.67 T
(of) 521.65 187.67 T
(the) 530.22 187.67 T
(cop) 72 177.67 T
(yright o) 83.47 177.67 T
(wner) 108.38 177.67 T
(.) 123.94 177.67 T
(TRADEMARKS) 72 157.67 T
(Sun,) 72 147.67 T
(Sun) 88.75 147.67 T
(Microsystems,) 103.51 147.67 T
(the) 152.71 147.67 T
(Sun) 164.79 147.67 T
(logo,) 179.54 147.67 T
(Ja) 198.08 147.67 T
(v) 204.58 147.67 T
(a,) 208.38 147.67 T
(and) 216.24 147.67 T
(Solaris) 230.1 147.67 T
(are) 254.63 147.67 T
(trademarks) 266.7 147.67 T
(or) 304.56 147.67 T
(re) 313.53 147.67 T
(gistered) 319.62 147.67 T
(trademarks) 347.26 147.67 T
(of) 385.11 147.67 T
(Sun) 394.08 147.67 T
(Microsystems,) 408.84 147.67 T
(Inc.) 458.03 147.67 T
(in) 472.55 147.67 T
(the) 481.09 147.67 T
(U.S.) 493.17 147.67 T
(and) 509.7 147.67 T
(other) 523.56 147.67 T
(countries.) 72 137.67 T
(All) 105.37 137.67 T
(SP) 117.63 137.67 T
(ARC) 125.79 137.67 T
(trademarks) 144.27 137.67 T
(are) 181.85 137.67 T
(used) 193.66 137.67 T
(under) 210.36 137.67 T
(license) 230.62 137.67 T
(and) 254.87 137.67 T
(are) 268.46 137.67 T
(trademarks) 280.27 137.67 T
(or) 317.85 137.67 T
(re) 326.55 137.67 T
(gistered) 332.64 137.67 T
(trademarks) 360.01 137.67 T
(of) 397.59 137.67 T
(SP) 406.29 137.67 T
(ARC) 414.45 137.67 T
(International,) 432.94 137.67 T
(Inc.) 477.86 137.67 T
(in) 492.11 137.67 T
(the) 500.37 137.67 T
(U.S.) 512.19 137.67 T
(and) 528.45 137.67 T
(other countries. Products bearing SP) 72 127.67 T
(ARC trademarks are based upon an architecture de) 187.92 127.67 T
(v) 350.56 127.67 T
(eloped by Sun Microsystems, Inc.) 354.44 127.67 T
(F) 72 107.67 T
(or information re) 76.33 107.67 T
(g) 130.86 107.67 T
(arding the SML T) 134.82 107.67 T
(echnical Report Series, contact Jeanie T) 191.82 107.67 T
(reichel, Editor) 319.5 107.67 T
(-in-Chief <jeanie.treichel@eng.sun.com>.) 365.11 107.67 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "1" 3
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
0 226 358 379 449 85.15 50.64 85.5 75.36 FMBEGINEPSF
%%BeginDocument: /lab/java-topics/gc/Docs/memsys/sunlogolrg.blk.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (SunLogoLrg.blk.eps)
%%CreationDate: (6/3/97) ( 3:27 PM)
%%BoundingBox: 226 358 379 449
%%HiResBoundingBox: 226.2487 358.1433 378.7144 448.3935
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -306 828 -1.5 826 581 58 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Abbreviated Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F606061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 1 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0.55 0.35 0 0.1 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
375.8402 401.9691 m
375.8402 400.7894 374.9259 399.8695 373.7406 399.8695 c
372.5553 399.8695 371.6409 400.7894 371.6409 401.9691 c
371.6409 403.1488 372.5553 404.0688 373.7406 404.0688 c
374.9259 404.0688 375.8402 403.1488 375.8402 401.9691 c
f
1 D
371.9683 401.9691 m
371.9683 400.9644 372.7246 400.1686 373.7406 400.1686 c
374.7566 400.1686 375.5129 400.9644 375.5129 401.9691 c
375.5129 402.9738 374.7566 403.7697 373.7406 403.7697 c
372.7246 403.7697 371.9683 402.9738 371.9683 401.9691 c
f
0 D
373.2778 400.7556 m
372.9786 400.7556 L
372.9786 403.1827 L
373.9099 403.1827 L
374.4574 403.1827 374.7001 402.9456 374.7001 402.511 c
374.7001 402.082 374.4179 401.8901 374.0905 401.8337 c
374.813 400.7556 L
374.463 400.7556 L
373.7801 401.8337 L
373.2778 401.8337 L
373.2778 400.7556 l
f
1 D
373.6728 402.0876 m
374.0397 402.0876 374.401 402.099 374.401 402.511 c
374.401 402.8496 374.1188 402.9287 373.8252 402.9287 c
373.2778 402.9287 L
373.2778 402.0876 L
373.6728 402.0876 l
f
*U
*u
291.8516 432.1578 m
291.6592 422.3236 302.7147 417.6955 302.5218 409.0825 c
302.5218 406.7043 300.7223 400.5334 294.4229 400.6621 c
291.2733 400.7265 288.2523 402.8476 288.3166 408.3112 C
288.3166 412.1678 L
288.2523 412.4891 288.2523 412.8748 287.9954 413.1961 c
287.8026 413.389 287.4167 413.5175 287.0955 413.389 c
286.5168 413.0674 286.3883 412.4249 286.1312 411.9107 C
285.8098 410.2395 285.4244 408.5039 285.1028 406.8329 c
285.0388 406.7043 285.2316 406.7043 285.1028 406.7043 c
284.8459 405.483 284.653 404.1974 284.5886 402.9761 c
284.5245 402.2048 285.0388 401.562 285.6813 401.1763 c
288.0595 399.8909 291.0805 398.991 294.4229 398.9267 c
302.5861 398.7982 309.271 405.933 309.3998 412.8748 c
309.4635 418.4667 306.3143 421.6808 302.8434 425.8588 c
301.1079 428.0442 297.6368 431.0651 297.7656 435.0505 c
297.7656 438.2643 300.4009 441.8638 305.2214 441.7995 c
311.7137 441.671 310.6851 434.7934 310.8139 431.6436 c
310.8139 431.3222 310.8139 431.0008 311.0708 430.8722 c
311.3281 430.6152 311.7137 430.551 312.0351 430.6795 c
312.228 430.8722 312.3565 431.0008 312.4208 431.1937 C
314.0275 437.2358 L
314.2847 438.3285 314.799 439.4213 314.799 440.7068 c
314.799 441.0282 314.5417 441.3495 314.2203 441.6066 c
310.8139 443.4062 308.7568 443.6634 305.6072 443.7278 c
297.6368 443.8563 291.9162 438.2 291.8516 432.1578 c
f
311.2765 420.2022 m
311.2765 419.8811 311.5338 419.5593 311.9192 419.5593 c
312.755 419.5593 313.2048 421.2307 315.2616 423.9948 C
316.4184 425.7302 317.8969 427.0801 318.6683 427.0801 c
319.2465 427.0801 319.311 426.6301 319.311 426.2444 c
319.311 424.3161 311.9835 408.8897 311.9835 402.8476 c
311.9835 400.9836 312.755 399.1838 315.133 399.1838 c
320.7891 399.1838 326.8956 406.3187 331.2664 412.7463 c
331.4596 412.9391 331.5877 412.9391 331.5236 412.6177 c
330.6238 409.9824 329.3381 404.9688 329.3381 401.8833 c
329.3381 400.5979 329.5953 399.0552 331.6522 399.0552 c
336.6655 399.0552 343.1578 408.8897 343.1578 411.2037 c
343.1578 411.5892 343.0292 411.9749 342.5795 411.9749 c
341.808 411.9749 341.551 410.6894 340.7154 409.2753 c
339.1723 406.8329 336.6655 403.6188 335.4443 403.6188 c
334.9946 403.6188 334.9946 404.1331 334.9946 404.5186 c
334.9946 407.7969 342.8365 429.2012 342.8365 429.8439 c
342.8365 430.3581 342.772 430.6795 342.001 430.6795 c
341.4869 430.6795 340.6509 430.7438 339.4937 430.7438 c
337.3726 430.7438 337.244 430.4224 337.0512 430.0368 c
336.0228 428.0442 334.4803 421.6808 331.3949 416.0886 c
327.2174 408.8254 321.5605 403.1046 319.1825 403.1046 c
318.3466 403.1046 317.8324 403.7474 317.8324 404.7117 c
317.8324 407.9255 325.61 424.5733 325.61 428.6227 c
325.61 429.5868 325.0958 431.515 322.7817 431.515 c
316.5472 431.515 311.2765 421.3594 311.2765 420.2022 c
f
370.1072 431.4508 m
363.8724 431.4508 357.2518 421.5523 355.0021 418.2097 c
354.8737 417.8884 354.8093 418.0169 354.8737 418.274 c
355.9664 422.2593 357.2518 425.7945 357.2518 428.4298 c
357.2518 430.0368 356.4806 431.6436 354.4236 431.6436 c
350.0528 431.6436 343.6893 423.0306 343.6893 420.9095 c
343.6893 420.4594 343.8179 420.1382 344.1394 420.1382 c
344.9106 420.1382 345.5535 421.6166 346.7105 423.159 c
348.1891 424.9589 349.9887 427.2729 351.0814 427.2729 c
351.2741 427.2729 351.4669 427.1443 351.4669 426.5016 c
351.4669 423.8019 345.939 408.5683 343.6252 400.9836 c
343.3679 400.1479 343.8821 399.9551 346.3247 399.9551 c
348.0605 399.9551 348.8961 399.6981 349.2173 401.0478 c
350.6313 406.1259 353.2666 411.7821 356.1593 416.7314 c
358.7946 421.3594 364.4511 428.0442 367.6006 428.0442 c
368.3076 428.0442 368.7574 427.5298 368.7574 426.4372 c
368.7574 423.2235 360.5301 407.8613 360.787 402.012 c
360.8514 400.3408 361.4299 399.1195 363.5512 399.1195 c
368.436 399.1195 372.7425 405.933 374.7351 409.5325 c
375.0564 410.1109 375.5706 410.7537 375.1209 411.4607 c
374.9924 411.7179 374.7351 411.8462 374.4139 411.8462 c
374.2209 411.8462 374.028 411.6536 373.8997 411.4607 c
372.5499 409.0825 369.593 403.8757 367.6006 403.7474 c
367.215 403.7474 367.0219 404.1331 367.0219 404.4544 c
367.0219 406.7684 374.2209 421.7449 374.2209 426.8227 c
374.2209 430.2296 372.357 431.4508 370.1072 431.4508 c
f
*U
u
0 D
234.344 417.5004 m
232.4917 415.6484 229.4897 415.6491 227.6378 417.5011 c
225.7859 419.3528 225.7856 422.3578 227.6374 424.2098 c
238.6209 435.1918 L
241.5583 432.2544 L
230.4981 421.1942 L
231.3282 420.3639 L
231.3282 420.3639 L
242.3882 431.4244 L
245.3289 428.4849 L
234.344 417.5004 L
234.344 417.5004 L
f
242.897 424.3284 m
244.749 426.1804 247.7509 426.1801 249.6026 424.3281 c
251.4549 422.4761 251.4553 419.4712 249.6032 417.6191 c
238.6201 406.6372 L
235.6821 409.5744 L
246.7425 420.6346 L
245.9123 421.465 L
245.9123 421.465 L
234.8524 410.4047 L
231.9122 413.3442 L
242.897 424.3284 L
242.897 424.3284 L
f
257.1372 401.5398 m
258.9893 399.6878 258.9889 396.6859 257.1366 394.8336 c
255.2849 392.9819 252.2798 392.9815 250.4275 394.8332 c
239.4458 405.8168 L
242.3832 408.7541 L
253.4433 397.6941 L
254.2734 398.5241 L
254.2734 398.5241 L
243.2131 409.5845 L
246.1528 412.5246 L
257.1372 401.5398 L
257.1372 401.5398 L
f
250.3092 410.0929 m
248.457 411.9449 248.4575 414.9469 250.3096 416.7987 c
252.1615 418.6507 255.1663 418.651 257.0186 416.7991 c
268.0002 405.8159 L
265.0632 402.8782 L
254.0027 413.9385 L
253.1729 413.108 L
253.1729 413.108 L
264.233 402.0482 L
261.2937 399.108 L
250.3092 410.0929 L
250.3092 410.0929 L
f
264.5537 417.5051 m
262.702 415.6528 259.6999 415.6537 257.8479 417.5054 c
255.9959 419.3577 255.9955 422.3625 257.8479 424.2146 c
268.8309 435.1964 L
271.7684 432.259 L
260.7083 421.1986 L
261.5385 420.3686 L
261.5385 420.3686 L
272.5984 431.4288 L
275.5386 428.4895 L
264.5537 417.5051 L
264.5537 417.5051 L
f
273.1073 424.3332 m
274.9587 426.185 277.9607 426.1846 279.813 424.3326 c
281.6649 422.4807 281.6653 419.4756 279.8134 417.6237 c
268.8303 406.6416 L
265.8924 409.5794 L
276.9527 420.6393 L
276.1227 421.4695 L
276.1227 421.4695 L
265.0622 410.4093 L
262.1219 413.3486 L
273.1073 424.3332 L
273.1073 424.3332 L
f
257.1372 431.7452 m
258.9893 429.8935 258.9889 426.8914 257.1366 425.0394 c
255.2849 423.1873 252.2798 423.1869 250.4275 425.0387 c
239.4458 436.0222 L
242.3832 438.9598 L
253.4433 427.8997 L
254.2734 428.7297 L
254.2734 428.7297 L
243.2131 439.7898 L
246.1528 442.73 L
257.1372 431.7452 L
257.1372 431.7452 L
f
250.3092 440.2983 m
248.457 442.1503 248.4575 445.1523 250.3096 447.0044 c
252.1615 448.8563 255.1663 448.8567 257.0186 447.0046 c
268.0002 436.0213 L
265.0632 433.0839 L
254.0027 444.1441 L
253.1729 443.3141 L
253.1729 443.3141 L
264.233 432.2538 L
261.2937 429.3134 L
250.3092 440.2983 L
250.3092 440.2983 L
f
U
u
*u
295.7784 386.2405 m
295.7784 390.5114 L
295.7784 391.4352 295.5578 392.0242 294.6613 392.0242 c
293.6821 392.0242 292.7444 391.0202 292.7444 389.4135 c
292.7444 386.2405 L
291.5169 386.2405 L
291.5169 390.5248 L
291.5169 391.3548 291.3376 392.0242 290.3998 392.0242 c
289.3516 392.0242 288.4827 390.9398 288.4827 389.4135 c
288.4827 386.2405 L
287.2415 386.2405 L
287.2415 392.8946 L
288.4414 392.8946 L
288.4414 392.5063 288.4138 391.9038 288.331 391.5021 c
288.3586 391.4887 L
288.7585 392.426 289.6412 393.0284 290.7446 393.0284 c
292.1926 393.0284 292.5788 392.051 292.634 391.5155 c
292.9237 392.1448 293.6546 393.0284 294.9785 393.0284 c
296.275 393.0284 297.0196 392.3456 297.0196 390.8461 c
297.0196 386.2405 L
295.7784 386.2405 l
f
*U
*u
306.3925 386.1468 m
304.7513 386.1468 303.386 386.8965 303.386 389.3466 c
303.386 391.4887 304.5169 393.0016 306.8062 393.0016 c
307.3441 393.0016 307.882 392.9213 308.3646 392.7874 c
308.2268 391.7298 L
307.7992 391.8904 307.2889 392.0109 306.751 392.0109 c
305.3719 392.0109 304.6961 391.0202 304.6961 389.5073 c
304.6961 388.2086 305.1375 387.1776 306.6545 387.1776 c
307.2337 387.1776 307.8406 387.3116 308.2819 387.5392 c
308.3784 386.4948 l
307.9233 386.3208 307.1924 386.1468 306.3925 386.1468 c
f
*U
*u
313.6331 391.8368 m
312.1851 392.0778 311.4955 391.0469 311.4955 388.9182 c
311.4955 386.2405 L
310.2542 386.2405 L
310.2542 392.8946 L
311.4541 392.8946 L
311.4541 392.4794 311.4127 391.8636 311.3024 391.3147 c
311.33 391.3147 L
311.6196 392.2385 312.3229 393.1623 313.6883 393.015 C
313.6331 391.8368 l
f
*U
*u
317.8493 386.12 m
315.9875 386.12 314.7739 387.1643 314.7739 389.5073 c
314.7739 391.462 316.0427 393.015 318.1114 393.015 c
319.8629 393.015 321.2007 392.0778 321.2007 389.6813 c
321.2007 387.673 319.8767 386.12 317.8493 386.12 c
f
1 D
318.001 392.0109 m
317.008 392.0109 316.0702 391.2745 316.0702 389.6277 c
316.0702 388.0212 316.746 387.1375 318.001 387.1375 c
319.0216 387.1375 319.9043 387.914 319.9043 389.6143 c
319.9043 391.1273 319.2699 392.0109 318.001 392.0109 c
f
*U
*u
0 D
324.4126 386.12 m
323.9024 386.12 323.3921 386.1602 322.9645 386.2405 c
323.0059 387.3116 L
323.4334 387.1776 323.9851 387.0839 324.5091 387.0839 c
325.4194 387.0839 326.0401 387.4856 326.0401 388.1015 c
326.0401 389.5876 322.8542 388.6772 322.8542 391.0202 c
322.8542 392.1448 323.8058 393.015 325.5987 393.015 c
326.0124 393.015 326.4952 392.9615 326.9089 392.8812 c
326.8813 391.877 L
326.4538 392.0109 325.9573 392.0912 325.5022 392.0912 c
324.5919 392.0912 324.1368 391.7164 324.1368 391.1407 c
324.1368 389.6813 327.3364 390.4712 327.3364 388.2354 c
327.3364 387.0304 326.2331 386.12 324.4126 386.12 c
f
*U
*u
331.8125 385.5711 m
331.0126 383.5093 330.3644 382.8399 328.8473 382.8399 c
328.5853 382.8399 328.2267 382.88 327.9509 382.9202 c
328.0612 384.0046 L
328.3509 383.9109 328.6267 383.8707 328.9439 383.8707 c
329.7024 383.8707 330.1024 384.2055 330.585 385.4907 c
330.8746 386.2405 L
328.2819 392.8946 L
329.6887 392.8946 L
330.985 389.4403 L
331.2057 388.8379 331.3574 388.3157 331.5091 387.7936 c
331.5367 387.7936 L
331.6608 388.2622 331.9504 389.1056 332.2125 389.842 c
333.3158 392.8946 L
334.6673 392.8946 L
331.8125 385.5711 l
f
*U
*u
337.2176 386.12 m
336.7073 386.12 336.197 386.1602 335.7695 386.2405 c
335.8108 387.3116 L
336.2384 387.1776 336.79 387.0839 337.3141 387.0839 c
338.2243 387.0839 338.845 387.4856 338.845 388.1015 c
338.845 389.5876 335.6591 388.6772 335.6591 391.0202 c
335.6591 392.1448 336.6107 393.015 338.4036 393.015 c
338.8173 393.015 339.3001 392.9615 339.7138 392.8812 c
339.6862 391.877 L
339.2587 392.0109 338.7622 392.0912 338.307 392.0912 c
337.3968 392.0912 336.9418 391.7164 336.9418 391.1407 c
336.9418 389.6813 340.1414 390.4712 340.1414 388.2354 c
340.1414 387.0304 339.0381 386.12 337.2176 386.12 c
f
*U
*u
344.2831 386.1334 m
342.8764 386.1334 342.4489 386.6958 342.4489 388.1282 c
342.4489 391.9573 L
341.0421 391.9573 L
341.0421 392.8946 L
342.4489 392.8946 L
342.4489 395.05 L
343.6901 395.3848 L
343.6901 392.8946 L
345.6071 392.8946 L
345.6071 391.9573 L
343.6901 391.9573 L
343.6901 388.5567 L
343.6901 387.4588 343.897 387.1643 344.6693 387.1643 c
344.9865 387.1643 345.3313 387.2178 345.6071 387.2848 c
345.6071 386.2673 l
345.221 386.187 344.7245 386.1334 344.2831 386.1334 c
f
*U
*u
352.7554 389.6411 m
348.2732 389.6411 L
348.218 387.8605 348.9766 387.0974 350.4384 387.0974 c
351.1418 387.0974 351.8866 387.258 352.4382 387.5124 c
352.5485 386.535 L
351.8866 386.2673 351.0867 386.12 350.2315 386.12 c
348.1215 386.12 346.9906 387.1911 346.9906 389.534 c
346.9906 391.5289 348.1077 393.015 350.0523 393.015 c
351.9831 393.015 352.7968 391.7431 352.7968 390.2169 c
352.7968 390.0562 352.783 389.8687 352.7554 389.6411 c
f
1 D
349.9971 392.1314 m
349.1007 392.1314 348.4663 391.4754 348.3283 390.498 c
351.528 390.498 l
351.5555 391.4754 350.9625 392.1314 349.9971 392.1314 c
f
*U
*u
0 D
363.1781 386.2405 m
363.1781 390.5114 L
363.1781 391.4352 362.9574 392.0242 362.061 392.0242 c
361.0818 392.0242 360.144 391.0202 360.144 389.4135 c
360.144 386.2405 L
358.9165 386.2405 L
358.9165 390.5248 L
358.9165 391.3548 358.7372 392.0242 357.7994 392.0242 c
356.7512 392.0242 355.8824 390.9398 355.8824 389.4135 c
355.8824 386.2405 L
354.6412 386.2405 L
354.6412 392.8946 L
355.841 392.8946 L
355.841 392.5063 355.8135 391.9038 355.7307 391.5021 c
355.7583 391.4887 L
356.1582 392.426 357.0409 393.0284 358.1442 393.0284 c
359.5923 393.0284 359.9785 392.051 360.0337 391.5155 c
360.3233 392.1448 361.0542 393.0284 362.3782 393.0284 c
363.6746 393.0284 364.4193 392.3456 364.4193 390.8461 c
364.4193 386.2405 L
363.1781 386.2405 l
f
*U
*u
367.8298 386.12 m
367.3195 386.12 366.8093 386.1602 366.3817 386.2405 c
366.4231 387.3116 L
366.8506 387.1776 367.4023 387.0839 367.9264 387.0839 c
368.8366 387.0839 369.4572 387.4856 369.4572 388.1015 c
369.4572 389.5876 366.2714 388.6772 366.2714 391.0202 c
366.2714 392.1448 367.223 393.015 369.0159 393.015 c
369.4297 393.015 369.9124 392.9615 370.3261 392.8812 c
370.2985 391.877 L
369.8709 392.0109 369.3745 392.0912 368.9193 392.0912 c
368.0091 392.0912 367.554 391.7164 367.554 391.1407 c
367.554 389.6813 370.7536 390.4712 370.7536 388.2354 c
370.7536 387.0304 369.6503 386.12 367.8298 386.12 c
f
*U
u
300.507 393.9924 m
300.9621 393.9924 301.3345 394.3538 301.3345 394.7823 c
301.3345 395.2241 300.9621 395.5589 300.507 395.5589 c
300.0519 395.5589 299.6795 395.2107 299.6795 394.7823 c
299.6795 394.3405 300.0519 393.9924 300.507 393.9924 c
f
298.8833 392.9103 m
298.8833 391.9715 L
299.8864 391.9715 L
299.8864 386.2405 L
301.1276 386.2405 L
301.1276 392.8946 L
298.8833 392.9103 L
f
U
U
u
*u
375.4222 365.7233 m
375.4222 365.2389 L
374.7935 365.2389 L
374.7935 362.8555 L
374.2199 362.8555 L
374.2199 365.2389 L
373.5911 365.2389 L
373.5911 365.7233 L
375.4222 365.7233 l
f
*U
*u
378.7144 362.8555 m
378.107 362.8555 L
378.0942 363.6032 378.073 364.3468 378.0092 365.1157 c
378.0008 365.1157 L
377.3549 362.8555 L
376.9258 362.8555 L
376.3012 365.1157 L
376.2928 365.1157 L
376.229 364.3468 376.2078 363.6032 376.195 362.8555 c
375.6513 362.8555 L
375.6767 363.8114 375.7447 364.7716 375.838 365.7233 c
376.6836 365.7233 L
377.1977 363.8709 L
377.2063 363.8709 L
377.7372 365.7233 L
378.5275 365.7233 l
378.6209 364.7716 378.6889 363.8114 378.7144 362.8555 c
f
*U
U
*u
232.4463 365.703 m
232.4463 364.4486 L
230.8177 364.4486 L
230.8177 358.2753 L
229.3321 358.2753 L
229.3321 364.4486 L
227.7036 364.4486 L
227.7036 365.703 L
232.4463 365.703 l
f
*U
*u
234.7006 365.703 m
234.7006 362.776 L
237.2204 362.776 L
237.2204 365.703 L
238.706 365.703 L
238.706 358.2753 L
237.2204 358.2753 L
237.2204 361.6096 L
234.7006 361.6096 L
234.7006 358.2753 L
233.215 358.2753 L
233.215 365.703 L
234.7006 365.703 l
f
*U
*u
243.649 365.703 m
243.649 364.4707 L
241.3051 364.4707 L
241.3051 362.6439 L
243.2528 362.6439 L
243.2528 361.4775 L
241.3051 361.4775 L
241.3051 359.5299 L
243.6929 359.5299 L
243.6929 358.2753 L
239.8195 358.2753 L
239.8195 365.703 L
243.649 365.703 l
f
*U
*u
249.506 365.703 m
251.8829 360.9053 L
251.8829 365.703 L
253.1594 365.703 L
253.1594 358.2753 L
251.5307 358.2753 L
248.8347 363.7883 L
248.8347 358.2753 L
247.5583 358.2753 L
247.5583 365.703 L
249.506 365.703 l
f
*U
*u
258.1024 365.703 m
258.1024 364.4707 L
255.7586 364.4707 L
255.7586 362.6439 L
257.7063 362.6439 L
257.7063 361.4775 L
255.7586 361.4775 L
255.7586 359.5299 L
258.1464 359.5299 L
258.1464 358.2753 L
254.273 358.2753 L
254.273 365.703 L
258.1024 365.703 l
f
*U
*u
263.5432 365.703 m
263.5432 364.4486 L
261.9146 364.4486 L
261.9146 358.2753 L
260.4291 358.2753 L
260.4291 364.4486 L
258.8004 364.4486 L
258.8004 365.703 L
263.5432 365.703 l
f
*U
*u
266.8142 360.3771 m
268.0247 365.703 L
269.3451 365.703 L
270.5556 360.3771 L
270.5776 360.3771 L
270.9847 362.1708 271.3479 364.0085 271.579 365.703 c
272.9214 365.703 L
272.5363 363.2052 271.9641 360.6632 271.2048 358.2753 c
269.7082 358.2753 L
268.5859 363.1061 L
268.5639 363.1061 L
267.4194 358.2753 L
265.8568 358.2753 L
265.1306 360.7402 264.5804 363.2271 264.2282 365.703 c
265.8129 365.703 L
266.011 364.1955 266.3851 362.3579 266.7922 360.3771 C
266.8142 360.3771 l
f
*U
*u
279.3678 362.1818 m
279.3678 359.1007 277.7942 358.1654 276.2867 358.1654 c
274.438 358.1654 273.2936 359.3207 273.2936 361.8846 c
273.2936 364.4926 274.603 365.8021 276.3966 365.8021 c
278.2014 365.8021 279.3678 364.5917 279.3678 362.1818 c
f
1 D
274.8671 362.1818 m
274.8671 360.0801 275.4834 359.3867 276.3747 359.3867 c
277.156 359.3867 277.7942 360.036 277.7942 361.8736 c
277.7942 363.8654 277.1449 364.5806 276.2647 364.5806 c
275.5054 364.5806 274.8671 363.9204 274.8671 362.1818 c
f
*U
*u
0 D
282.7008 365.7361 m
284.5055 365.7361 285.3307 364.8887 285.3307 363.6233 c
285.3307 362.6989 284.7805 361.9177 283.7461 361.5326 c
285.6059 358.2753 L
283.8341 358.2753 L
282.3157 361.2905 L
281.9855 361.2905 L
281.9855 358.2753 L
280.5 358.2753 L
280.5 365.703 l
281.2812 365.7251 282.0075 365.7361 282.7008 365.7361 c
f
1 D
281.9855 362.4679 m
282.2276 362.4459 282.4367 362.4459 282.6347 362.4459 c
283.317 362.4459 283.7902 362.9081 283.7902 363.4803 c
283.7902 364.1405 283.4711 364.5586 282.5467 364.5586 c
282.3706 364.5586 282.1726 364.5477 281.9855 364.5367 C
281.9855 362.4679 l
f
*U
*u
0 D
288.0362 365.703 m
288.0362 362.5889 L
289.9729 365.703 L
291.6675 365.703 L
289.2466 362.3909 L
291.7995 358.2753 L
289.9509 358.2753 L
288.0362 361.6646 L
288.0362 358.2753 L
286.5507 358.2753 L
286.5507 365.703 L
288.0362 365.703 l
f
*U
*u
296.3365 365.703 m
296.3365 358.2753 L
294.851 358.2753 L
294.851 365.703 L
296.3365 365.703 l
f
*U
*u
301.4426 364.2835 m
301.0685 364.4707 300.5403 364.6467 300.0672 364.6467 c
299.4179 364.6467 299.0438 364.2506 299.0438 363.7773 c
299.0438 362.3579 302.1689 362.743 302.1689 360.3991 c
302.1689 359.1887 301.2886 358.1433 299.506 358.1433 c
298.7356 358.1433 298.0204 358.3854 297.3272 358.8696 c
297.7563 359.7279 L
298.1525 359.5408 298.7026 359.3317 299.3189 359.3317 c
300.1771 359.3317 300.5183 359.7169 300.5183 360.2011 c
300.5183 361.6096 297.5033 361.1254 297.5033 363.6013 c
297.5033 364.8557 298.4056 365.7911 299.8691 365.7911 c
300.6613 365.7911 301.3217 365.5381 301.8498 365.0979 C
301.4426 364.2835 l
f
*U
*u
329.2154 359.5628 m
328.6651 358.7046 327.9059 358.1763 326.9595 358.1763 c
325.3089 358.1763 324.1865 359.3428 324.1865 361.8296 c
324.1865 364.2506 325.397 365.7801 327.0696 365.7801 c
328.0049 365.7801 328.7202 365.2299 329.1053 364.4046 c
328.4451 363.8104 L
328.0379 364.2616 327.7078 364.4816 327.1687 364.4816 c
326.4094 364.4816 325.7711 363.5242 325.7711 362.0057 c
325.7711 360.124 326.4424 359.4858 327.3006 359.4858 c
327.7078 359.4858 328.1369 359.7389 328.5441 360.157 C
329.2154 359.5628 l
f
*U
*u
335.8686 362.1818 m
335.8686 359.1007 334.295 358.1654 332.7875 358.1654 c
330.9388 358.1654 329.7944 359.3207 329.7944 361.8846 c
329.7944 364.4926 331.1038 365.8021 332.8975 365.8021 c
334.7022 365.8021 335.8686 364.5917 335.8686 362.1818 c
f
1 D
331.3679 362.1818 m
331.3679 360.0801 331.9841 359.3867 332.8755 359.3867 c
333.6567 359.3867 334.295 360.036 334.295 361.8736 c
334.295 363.8654 333.6458 364.5806 332.7655 364.5806 c
332.0062 364.5806 331.3679 363.9204 331.3679 362.1818 c
f
*U
*u
0 D
344.6291 358.2753 m
343.0556 358.2753 L
343.0226 360.2121 342.9676 362.1378 342.8025 364.1295 c
342.7805 364.1295 L
341.1079 358.2753 L
339.9964 358.2753 L
338.3789 364.1295 L
338.3568 364.1295 L
338.1918 362.1378 338.1368 360.2121 338.1038 358.2753 c
336.6952 358.2753 L
336.7613 360.7512 336.9374 363.2382 337.1794 365.703 c
339.3692 365.703 L
340.7007 360.9053 L
340.7227 360.9053 L
342.0982 365.703 L
344.145 365.703 l
344.387 363.2382 344.5631 360.7512 344.6291 358.2753 c
f
*U
*u
347.767 365.7251 m
349.7587 365.7251 350.6831 364.7787 350.6831 363.4363 c
350.6831 361.9838 349.6596 360.8943 347.4919 360.8943 c
347.2828 360.8943 L
347.2828 358.2753 L
345.7973 358.2753 L
345.7973 365.703 l
346.5125 365.703 347.1398 365.7251 347.767 365.7251 c
f
1 D
347.2828 362.0277 m
347.6239 362.0277 L
348.5813 362.0277 349.0984 362.4349 349.0984 363.2712 c
349.0984 364.0855 348.6693 364.5477 347.5689 364.5477 c
347.2828 364.5477 L
347.2828 362.0277 l
f
*U
*u
0 D
353.0479 365.703 m
353.0479 361.0263 L
353.0479 359.7719 353.6421 359.3538 354.3463 359.3538 c
355.1057 359.3538 355.6228 359.8049 355.6228 360.9603 c
355.6228 365.703 L
357.0643 365.703 L
357.0643 361.0594 L
357.0643 358.8916 355.7879 358.1654 354.1814 358.1654 c
352.4867 358.1654 351.5624 358.9466 351.5624 360.9164 c
351.5624 365.703 L
353.0479 365.703 l
f
*U
*u
362.5438 365.703 m
362.5438 364.4486 L
360.9152 364.4486 L
360.9152 358.2753 L
359.4296 358.2753 L
359.4296 364.4486 L
357.801 364.4486 L
357.801 365.703 L
362.5438 365.703 l
f
*U
*u
367.1419 365.703 m
367.1419 364.4707 L
364.798 364.4707 L
364.798 362.6439 L
366.7458 362.6439 L
366.7458 361.4775 L
364.798 361.4775 L
364.798 359.5299 L
367.1859 359.5299 L
367.1859 358.2753 L
363.3125 358.2753 L
363.3125 365.703 L
367.1419 365.703 l
f
*U
*u
370.3858 365.7361 m
372.1906 365.7361 373.0158 364.8887 373.0158 363.6233 c
373.0158 362.6989 372.4656 361.9177 371.4313 361.5326 c
373.291 358.2753 L
371.5193 358.2753 L
370.0008 361.2905 L
369.6706 361.2905 L
369.6706 358.2753 L
368.1851 358.2753 L
368.1851 365.703 l
368.9663 365.7251 369.6926 365.7361 370.3858 365.7361 c
f
1 D
369.6706 362.4679 m
369.9127 362.4459 370.1218 362.4459 370.3198 362.4459 c
371.0021 362.4459 371.4753 362.9081 371.4753 363.4803 c
371.4753 364.1405 371.1561 364.5586 370.2318 364.5586 c
370.0558 364.5586 369.8577 364.5477 369.6706 364.5367 C
369.6706 362.4679 l
f
*U
*u
0 D
309.4514 365.703 m
309.4514 364.4486 L
307.8228 364.4486 L
307.8228 358.2753 L
306.3372 358.2753 L
306.3372 364.4486 L
304.7087 364.4486 L
304.7087 365.703 L
309.4514 365.703 l
f
*U
*u
311.7056 365.703 m
311.7056 362.776 L
314.2256 362.776 L
314.2256 365.703 L
315.7112 365.703 L
315.7112 358.2753 L
314.2256 358.2753 L
314.2256 361.6096 L
311.7056 361.6096 L
311.7056 358.2753 L
310.2201 358.2753 L
310.2201 365.703 L
311.7056 365.703 l
f
*U
*u
320.6541 365.703 m
320.6541 364.4707 L
318.3102 364.4707 L
318.3102 362.6439 L
320.2579 362.6439 L
320.2579 361.4775 L
318.3102 361.4775 L
318.3102 359.5299 L
320.6981 359.5299 L
320.6981 358.2753 L
316.8247 358.2753 L
316.8247 365.703 L
320.6541 365.703 l
f
*U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
85.5 63.67 171.21 83.15 R
7 X
V
118.5 47.25 223 81.5 R
V
2 9 Q
0 X
(M/S MTV29-01) 118.5 75.5 T
(901 San Antonio Road) 118.5 66.5 T
(P) 118.5 57.5 T
(alo Alto, CA 94303-4900) 123.37 57.5 T
0 18 Q
(The GC Interface in the EVM) 85 672 T
0 14.4 Q
(1) 326.06 679.2 T
1 12 Q
(Derek White and Ale) 85 634 T
(x Gar) 194.68 634 T
(thw) 224.5 634 T
(aite) 242.99 634 T
1 9 Q
(SML TR-98-67) 85 577 T
(December 1998) 229 577 T
0 11 Q
(Abstract:) 85 524.67 T
1 10 Q
(This) 85 502.33 T
(document) 108.25 502.33 T
(descr) 156.52 502.33 T
(ibes) 181.12 502.33 T
(ho) 203.82 502.33 T
(w) 214.79 502.33 T
(to) 226.38 502.33 T
(wr) 239.08 502.33 T
(ite) 249.78 502.33 T
(a) 264.7 502.33 T
(garbage) 274.62 502.33 T
(collector) 315.67 502.33 T
(\050GC\051) 357.27 502.33 T
(f) 383.29 502.33 T
(or) 385.77 502.33 T
(the) 399.02 502.33 T
(ExactVM.) 417.28 502.33 T
(It) 464.43 502.33 T
(assumes) 474.35 502.33 T
(that) 518.72 502.33 T
(the) 539.77 502.33 T
(reader) 85 490.33 T
(has) 119.19 490.33 T
(a) 140.6 490.33 T
(good) 151.45 490.33 T
(understanding) 178.99 490.33 T
(of) 247.65 490.33 T
(garbage) 261.28 490.33 T
(collection) 303.26 490.33 T
(issues) 350.23 490.33 T
(and) 383.86 490.33 T
(some) 405.83 490.33 T
(f) 435.57 490.33 T
(amiliar) 438.05 490.33 T
(ity) 467.64 490.33 T
(with) 482.93 490.33 T
(the) 506.01 490.33 T
(J) 525.2 490.33 T
(a) 530 490.33 T
(v) 535.36 490.33 T
(a) 540.11 490.33 T
1 8 Q
(\252) 545.67 494.33 T
1 10 Q
(language) 85 478.33 T
(.) 125.99 478.33 T
(The) 85 456.33 T
(ExactVM) 106.22 456.33 T
(is) 150.22 456.33 T
(par) 161.43 456.33 T
(t) 176.28 456.33 T
(of) 183.05 456.33 T
(a) 195.38 456.33 T
(research) 204.94 456.33 T
(project) 247.83 456.33 T
(at) 281.83 456.33 T
(Sun) 294.16 456.33 T
(Labs) 315.94 456.33 T
(.) 337.47 456.33 T
(The) 344.24 456.33 T
(interf) 365.46 456.33 T
(aces) 387.39 456.33 T
(descr) 412.5 456.33 T
(ibed) 437.1 456.33 T
(in) 459.99 456.33 T
(this) 471.76 456.33 T
(document) 491.32 456.33 T
(are) 539.22 456.33 T
(under) 85 444.33 T
(de) 115.28 444.33 T
(v) 126.1 444.33 T
(elopment) 130.85 444.33 T
(and) 176.69 444.33 T
(are) 198.08 444.33 T
(guar) 217.24 444.33 T
(anteed) 237.15 444.33 T
(to) 272.44 444.33 T
(change) 285.49 444.33 T
(.) 318.14 444.33 T
(In) 325.63 444.33 T
(f) 338.68 444.33 T
(act,) 341.16 444.33 T
(the) 361.99 444.33 T
(pur) 380.6 444.33 T
(pose) 395.35 444.33 T
(of) 421.74 444.33 T
(this) 434.8 444.33 T
(document) 455.07 444.33 T
(is) 503.69 444.33 T
(to) 515.62 444.33 T
(solicit) 528.67 444.33 T
(f) 85 432.33 T
(eedbac) 87.48 432.33 T
(k) 120.08 432.33 T
(to) 129.38 432.33 T
(impro) 142.02 432.33 T
(v) 166.88 432.33 T
(e) 171.62 432.33 T
(the) 181.49 432.33 T
(interf) 199.69 432.33 T
(aces) 221.62 432.33 T
(descr) 247.04 432.33 T
(ibed) 271.64 432.33 T
(herein.) 294.84 432.33 T
(As) 329.72 432.33 T
(a) 345.69 432.33 T
(result,) 355.55 432.33 T
(speci\336) 387.08 432.33 T
(c) 415.42 432.33 T
(product) 424.73 432.33 T
(plans) 462.38 432.33 T
(should) 490.58 432.33 T
(not) 524.34 432.33 T
(be) 542.55 432.33 T
(based on this document; e) 85 420.33 T
(v) 201.99 420.33 T
(er) 206.74 420.33 T
(ything is e) 215.93 420.33 T
(xpected to change) 260.65 420.33 T
(.) 342.22 420.33 T
1 8 Q
(1) 85 402.33 T
1 10 Q
(EVM,) 89.45 398.33 T
(the) 116.73 398.33 T
(J) 133.47 398.33 T
(a) 138.27 398.33 T
(v) 143.63 398.33 T
(a) 148.38 398.33 T
(vir) 156.77 398.33 T
(tual) 167.73 398.33 T
(machine) 186.68 398.33 T
(kno) 227.31 398.33 T
(wn) 243.28 398.33 T
(pre) 258.89 398.33 T
(viously) 273.04 398.33 T
(as) 306.44 398.33 T
(ExactVM,) 319.83 398.33 T
(is) 365.46 398.33 T
(embedded) 375.51 398.33 T
(in) 425.6 398.33 T
(Sun\325) 436.21 398.33 T
(s) 455.72 398.33 T
(J) 463.56 398.33 T
(a) 468.36 398.33 T
(v) 473.72 398.33 T
(a) 478.47 398.33 T
(2) 486.86 398.33 T
(SDK) 495.26 398.33 T
3 F
(Produc-) 518.66 398.33 T
(tion) 85 386.33 T
1 F
( Release f) 101.12 386.33 T
(or Solar) 145.84 386.33 T
(is\252, a) 181 386.33 T
(v) 209.14 386.33 T
(ailab) 213.89 386.33 T
(le at http://www) 234.81 386.33 T
(.sun.com/solar) 302.57 386.33 T
(is/ja) 367.74 386.33 T
(v) 385.32 386.33 T
(a/.) 390.07 386.33 T
442.93 49.5 555.64 94.5 R
7 X
V
4 8 Q
0 X
(email addr) 442.93 79.17 T
(ess:) 479.9 79.17 T
2 F
(derek.white@east.sun.com) 442.93 69.17 T
FMENDPAGE
%%EndPage: "1" 3
%%Page: "2" 4
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
0 226 358 379 449 85.15 50.64 85.5 75.36 FMBEGINEPSF
%%BeginDocument: /lab/java-topics/gc/Docs/memsys/sunlogolrg.blk.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (SunLogoLrg.blk.eps)
%%CreationDate: (6/3/97) ( 3:27 PM)
%%BoundingBox: 226 358 379 449
%%HiResBoundingBox: 226.2487 358.1433 378.7144 448.3935
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -306 828 -1.5 826 581 58 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Abbreviated Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F606061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 1 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0.55 0.35 0 0.1 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
375.8402 401.9691 m
375.8402 400.7894 374.9259 399.8695 373.7406 399.8695 c
372.5553 399.8695 371.6409 400.7894 371.6409 401.9691 c
371.6409 403.1488 372.5553 404.0688 373.7406 404.0688 c
374.9259 404.0688 375.8402 403.1488 375.8402 401.9691 c
f
1 D
371.9683 401.9691 m
371.9683 400.9644 372.7246 400.1686 373.7406 400.1686 c
374.7566 400.1686 375.5129 400.9644 375.5129 401.9691 c
375.5129 402.9738 374.7566 403.7697 373.7406 403.7697 c
372.7246 403.7697 371.9683 402.9738 371.9683 401.9691 c
f
0 D
373.2778 400.7556 m
372.9786 400.7556 L
372.9786 403.1827 L
373.9099 403.1827 L
374.4574 403.1827 374.7001 402.9456 374.7001 402.511 c
374.7001 402.082 374.4179 401.8901 374.0905 401.8337 c
374.813 400.7556 L
374.463 400.7556 L
373.7801 401.8337 L
373.2778 401.8337 L
373.2778 400.7556 l
f
1 D
373.6728 402.0876 m
374.0397 402.0876 374.401 402.099 374.401 402.511 c
374.401 402.8496 374.1188 402.9287 373.8252 402.9287 c
373.2778 402.9287 L
373.2778 402.0876 L
373.6728 402.0876 l
f
*U
*u
291.8516 432.1578 m
291.6592 422.3236 302.7147 417.6955 302.5218 409.0825 c
302.5218 406.7043 300.7223 400.5334 294.4229 400.6621 c
291.2733 400.7265 288.2523 402.8476 288.3166 408.3112 C
288.3166 412.1678 L
288.2523 412.4891 288.2523 412.8748 287.9954 413.1961 c
287.8026 413.389 287.4167 413.5175 287.0955 413.389 c
286.5168 413.0674 286.3883 412.4249 286.1312 411.9107 C
285.8098 410.2395 285.4244 408.5039 285.1028 406.8329 c
285.0388 406.7043 285.2316 406.7043 285.1028 406.7043 c
284.8459 405.483 284.653 404.1974 284.5886 402.9761 c
284.5245 402.2048 285.0388 401.562 285.6813 401.1763 c
288.0595 399.8909 291.0805 398.991 294.4229 398.9267 c
302.5861 398.7982 309.271 405.933 309.3998 412.8748 c
309.4635 418.4667 306.3143 421.6808 302.8434 425.8588 c
301.1079 428.0442 297.6368 431.0651 297.7656 435.0505 c
297.7656 438.2643 300.4009 441.8638 305.2214 441.7995 c
311.7137 441.671 310.6851 434.7934 310.8139 431.6436 c
310.8139 431.3222 310.8139 431.0008 311.0708 430.8722 c
311.3281 430.6152 311.7137 430.551 312.0351 430.6795 c
312.228 430.8722 312.3565 431.0008 312.4208 431.1937 C
314.0275 437.2358 L
314.2847 438.3285 314.799 439.4213 314.799 440.7068 c
314.799 441.0282 314.5417 441.3495 314.2203 441.6066 c
310.8139 443.4062 308.7568 443.6634 305.6072 443.7278 c
297.6368 443.8563 291.9162 438.2 291.8516 432.1578 c
f
311.2765 420.2022 m
311.2765 419.8811 311.5338 419.5593 311.9192 419.5593 c
312.755 419.5593 313.2048 421.2307 315.2616 423.9948 C
316.4184 425.7302 317.8969 427.0801 318.6683 427.0801 c
319.2465 427.0801 319.311 426.6301 319.311 426.2444 c
319.311 424.3161 311.9835 408.8897 311.9835 402.8476 c
311.9835 400.9836 312.755 399.1838 315.133 399.1838 c
320.7891 399.1838 326.8956 406.3187 331.2664 412.7463 c
331.4596 412.9391 331.5877 412.9391 331.5236 412.6177 c
330.6238 409.9824 329.3381 404.9688 329.3381 401.8833 c
329.3381 400.5979 329.5953 399.0552 331.6522 399.0552 c
336.6655 399.0552 343.1578 408.8897 343.1578 411.2037 c
343.1578 411.5892 343.0292 411.9749 342.5795 411.9749 c
341.808 411.9749 341.551 410.6894 340.7154 409.2753 c
339.1723 406.8329 336.6655 403.6188 335.4443 403.6188 c
334.9946 403.6188 334.9946 404.1331 334.9946 404.5186 c
334.9946 407.7969 342.8365 429.2012 342.8365 429.8439 c
342.8365 430.3581 342.772 430.6795 342.001 430.6795 c
341.4869 430.6795 340.6509 430.7438 339.4937 430.7438 c
337.3726 430.7438 337.244 430.4224 337.0512 430.0368 c
336.0228 428.0442 334.4803 421.6808 331.3949 416.0886 c
327.2174 408.8254 321.5605 403.1046 319.1825 403.1046 c
318.3466 403.1046 317.8324 403.7474 317.8324 404.7117 c
317.8324 407.9255 325.61 424.5733 325.61 428.6227 c
325.61 429.5868 325.0958 431.515 322.7817 431.515 c
316.5472 431.515 311.2765 421.3594 311.2765 420.2022 c
f
370.1072 431.4508 m
363.8724 431.4508 357.2518 421.5523 355.0021 418.2097 c
354.8737 417.8884 354.8093 418.0169 354.8737 418.274 c
355.9664 422.2593 357.2518 425.7945 357.2518 428.4298 c
357.2518 430.0368 356.4806 431.6436 354.4236 431.6436 c
350.0528 431.6436 343.6893 423.0306 343.6893 420.9095 c
343.6893 420.4594 343.8179 420.1382 344.1394 420.1382 c
344.9106 420.1382 345.5535 421.6166 346.7105 423.159 c
348.1891 424.9589 349.9887 427.2729 351.0814 427.2729 c
351.2741 427.2729 351.4669 427.1443 351.4669 426.5016 c
351.4669 423.8019 345.939 408.5683 343.6252 400.9836 c
343.3679 400.1479 343.8821 399.9551 346.3247 399.9551 c
348.0605 399.9551 348.8961 399.6981 349.2173 401.0478 c
350.6313 406.1259 353.2666 411.7821 356.1593 416.7314 c
358.7946 421.3594 364.4511 428.0442 367.6006 428.0442 c
368.3076 428.0442 368.7574 427.5298 368.7574 426.4372 c
368.7574 423.2235 360.5301 407.8613 360.787 402.012 c
360.8514 400.3408 361.4299 399.1195 363.5512 399.1195 c
368.436 399.1195 372.7425 405.933 374.7351 409.5325 c
375.0564 410.1109 375.5706 410.7537 375.1209 411.4607 c
374.9924 411.7179 374.7351 411.8462 374.4139 411.8462 c
374.2209 411.8462 374.028 411.6536 373.8997 411.4607 c
372.5499 409.0825 369.593 403.8757 367.6006 403.7474 c
367.215 403.7474 367.0219 404.1331 367.0219 404.4544 c
367.0219 406.7684 374.2209 421.7449 374.2209 426.8227 c
374.2209 430.2296 372.357 431.4508 370.1072 431.4508 c
f
*U
u
0 D
234.344 417.5004 m
232.4917 415.6484 229.4897 415.6491 227.6378 417.5011 c
225.7859 419.3528 225.7856 422.3578 227.6374 424.2098 c
238.6209 435.1918 L
241.5583 432.2544 L
230.4981 421.1942 L
231.3282 420.3639 L
231.3282 420.3639 L
242.3882 431.4244 L
245.3289 428.4849 L
234.344 417.5004 L
234.344 417.5004 L
f
242.897 424.3284 m
244.749 426.1804 247.7509 426.1801 249.6026 424.3281 c
251.4549 422.4761 251.4553 419.4712 249.6032 417.6191 c
238.6201 406.6372 L
235.6821 409.5744 L
246.7425 420.6346 L
245.9123 421.465 L
245.9123 421.465 L
234.8524 410.4047 L
231.9122 413.3442 L
242.897 424.3284 L
242.897 424.3284 L
f
257.1372 401.5398 m
258.9893 399.6878 258.9889 396.6859 257.1366 394.8336 c
255.2849 392.9819 252.2798 392.9815 250.4275 394.8332 c
239.4458 405.8168 L
242.3832 408.7541 L
253.4433 397.6941 L
254.2734 398.5241 L
254.2734 398.5241 L
243.2131 409.5845 L
246.1528 412.5246 L
257.1372 401.5398 L
257.1372 401.5398 L
f
250.3092 410.0929 m
248.457 411.9449 248.4575 414.9469 250.3096 416.7987 c
252.1615 418.6507 255.1663 418.651 257.0186 416.7991 c
268.0002 405.8159 L
265.0632 402.8782 L
254.0027 413.9385 L
253.1729 413.108 L
253.1729 413.108 L
264.233 402.0482 L
261.2937 399.108 L
250.3092 410.0929 L
250.3092 410.0929 L
f
264.5537 417.5051 m
262.702 415.6528 259.6999 415.6537 257.8479 417.5054 c
255.9959 419.3577 255.9955 422.3625 257.8479 424.2146 c
268.8309 435.1964 L
271.7684 432.259 L
260.7083 421.1986 L
261.5385 420.3686 L
261.5385 420.3686 L
272.5984 431.4288 L
275.5386 428.4895 L
264.5537 417.5051 L
264.5537 417.5051 L
f
273.1073 424.3332 m
274.9587 426.185 277.9607 426.1846 279.813 424.3326 c
281.6649 422.4807 281.6653 419.4756 279.8134 417.6237 c
268.8303 406.6416 L
265.8924 409.5794 L
276.9527 420.6393 L
276.1227 421.4695 L
276.1227 421.4695 L
265.0622 410.4093 L
262.1219 413.3486 L
273.1073 424.3332 L
273.1073 424.3332 L
f
257.1372 431.7452 m
258.9893 429.8935 258.9889 426.8914 257.1366 425.0394 c
255.2849 423.1873 252.2798 423.1869 250.4275 425.0387 c
239.4458 436.0222 L
242.3832 438.9598 L
253.4433 427.8997 L
254.2734 428.7297 L
254.2734 428.7297 L
243.2131 439.7898 L
246.1528 442.73 L
257.1372 431.7452 L
257.1372 431.7452 L
f
250.3092 440.2983 m
248.457 442.1503 248.4575 445.1523 250.3096 447.0044 c
252.1615 448.8563 255.1663 448.8567 257.0186 447.0046 c
268.0002 436.0213 L
265.0632 433.0839 L
254.0027 444.1441 L
253.1729 443.3141 L
253.1729 443.3141 L
264.233 432.2538 L
261.2937 429.3134 L
250.3092 440.2983 L
250.3092 440.2983 L
f
U
u
*u
295.7784 386.2405 m
295.7784 390.5114 L
295.7784 391.4352 295.5578 392.0242 294.6613 392.0242 c
293.6821 392.0242 292.7444 391.0202 292.7444 389.4135 c
292.7444 386.2405 L
291.5169 386.2405 L
291.5169 390.5248 L
291.5169 391.3548 291.3376 392.0242 290.3998 392.0242 c
289.3516 392.0242 288.4827 390.9398 288.4827 389.4135 c
288.4827 386.2405 L
287.2415 386.2405 L
287.2415 392.8946 L
288.4414 392.8946 L
288.4414 392.5063 288.4138 391.9038 288.331 391.5021 c
288.3586 391.4887 L
288.7585 392.426 289.6412 393.0284 290.7446 393.0284 c
292.1926 393.0284 292.5788 392.051 292.634 391.5155 c
292.9237 392.1448 293.6546 393.0284 294.9785 393.0284 c
296.275 393.0284 297.0196 392.3456 297.0196 390.8461 c
297.0196 386.2405 L
295.7784 386.2405 l
f
*U
*u
306.3925 386.1468 m
304.7513 386.1468 303.386 386.8965 303.386 389.3466 c
303.386 391.4887 304.5169 393.0016 306.8062 393.0016 c
307.3441 393.0016 307.882 392.9213 308.3646 392.7874 c
308.2268 391.7298 L
307.7992 391.8904 307.2889 392.0109 306.751 392.0109 c
305.3719 392.0109 304.6961 391.0202 304.6961 389.5073 c
304.6961 388.2086 305.1375 387.1776 306.6545 387.1776 c
307.2337 387.1776 307.8406 387.3116 308.2819 387.5392 c
308.3784 386.4948 l
307.9233 386.3208 307.1924 386.1468 306.3925 386.1468 c
f
*U
*u
313.6331 391.8368 m
312.1851 392.0778 311.4955 391.0469 311.4955 388.9182 c
311.4955 386.2405 L
310.2542 386.2405 L
310.2542 392.8946 L
311.4541 392.8946 L
311.4541 392.4794 311.4127 391.8636 311.3024 391.3147 c
311.33 391.3147 L
311.6196 392.2385 312.3229 393.1623 313.6883 393.015 C
313.6331 391.8368 l
f
*U
*u
317.8493 386.12 m
315.9875 386.12 314.7739 387.1643 314.7739 389.5073 c
314.7739 391.462 316.0427 393.015 318.1114 393.015 c
319.8629 393.015 321.2007 392.0778 321.2007 389.6813 c
321.2007 387.673 319.8767 386.12 317.8493 386.12 c
f
1 D
318.001 392.0109 m
317.008 392.0109 316.0702 391.2745 316.0702 389.6277 c
316.0702 388.0212 316.746 387.1375 318.001 387.1375 c
319.0216 387.1375 319.9043 387.914 319.9043 389.6143 c
319.9043 391.1273 319.2699 392.0109 318.001 392.0109 c
f
*U
*u
0 D
324.4126 386.12 m
323.9024 386.12 323.3921 386.1602 322.9645 386.2405 c
323.0059 387.3116 L
323.4334 387.1776 323.9851 387.0839 324.5091 387.0839 c
325.4194 387.0839 326.0401 387.4856 326.0401 388.1015 c
326.0401 389.5876 322.8542 388.6772 322.8542 391.0202 c
322.8542 392.1448 323.8058 393.015 325.5987 393.015 c
326.0124 393.015 326.4952 392.9615 326.9089 392.8812 c
326.8813 391.877 L
326.4538 392.0109 325.9573 392.0912 325.5022 392.0912 c
324.5919 392.0912 324.1368 391.7164 324.1368 391.1407 c
324.1368 389.6813 327.3364 390.4712 327.3364 388.2354 c
327.3364 387.0304 326.2331 386.12 324.4126 386.12 c
f
*U
*u
331.8125 385.5711 m
331.0126 383.5093 330.3644 382.8399 328.8473 382.8399 c
328.5853 382.8399 328.2267 382.88 327.9509 382.9202 c
328.0612 384.0046 L
328.3509 383.9109 328.6267 383.8707 328.9439 383.8707 c
329.7024 383.8707 330.1024 384.2055 330.585 385.4907 c
330.8746 386.2405 L
328.2819 392.8946 L
329.6887 392.8946 L
330.985 389.4403 L
331.2057 388.8379 331.3574 388.3157 331.5091 387.7936 c
331.5367 387.7936 L
331.6608 388.2622 331.9504 389.1056 332.2125 389.842 c
333.3158 392.8946 L
334.6673 392.8946 L
331.8125 385.5711 l
f
*U
*u
337.2176 386.12 m
336.7073 386.12 336.197 386.1602 335.7695 386.2405 c
335.8108 387.3116 L
336.2384 387.1776 336.79 387.0839 337.3141 387.0839 c
338.2243 387.0839 338.845 387.4856 338.845 388.1015 c
338.845 389.5876 335.6591 388.6772 335.6591 391.0202 c
335.6591 392.1448 336.6107 393.015 338.4036 393.015 c
338.8173 393.015 339.3001 392.9615 339.7138 392.8812 c
339.6862 391.877 L
339.2587 392.0109 338.7622 392.0912 338.307 392.0912 c
337.3968 392.0912 336.9418 391.7164 336.9418 391.1407 c
336.9418 389.6813 340.1414 390.4712 340.1414 388.2354 c
340.1414 387.0304 339.0381 386.12 337.2176 386.12 c
f
*U
*u
344.2831 386.1334 m
342.8764 386.1334 342.4489 386.6958 342.4489 388.1282 c
342.4489 391.9573 L
341.0421 391.9573 L
341.0421 392.8946 L
342.4489 392.8946 L
342.4489 395.05 L
343.6901 395.3848 L
343.6901 392.8946 L
345.6071 392.8946 L
345.6071 391.9573 L
343.6901 391.9573 L
343.6901 388.5567 L
343.6901 387.4588 343.897 387.1643 344.6693 387.1643 c
344.9865 387.1643 345.3313 387.2178 345.6071 387.2848 c
345.6071 386.2673 l
345.221 386.187 344.7245 386.1334 344.2831 386.1334 c
f
*U
*u
352.7554 389.6411 m
348.2732 389.6411 L
348.218 387.8605 348.9766 387.0974 350.4384 387.0974 c
351.1418 387.0974 351.8866 387.258 352.4382 387.5124 c
352.5485 386.535 L
351.8866 386.2673 351.0867 386.12 350.2315 386.12 c
348.1215 386.12 346.9906 387.1911 346.9906 389.534 c
346.9906 391.5289 348.1077 393.015 350.0523 393.015 c
351.9831 393.015 352.7968 391.7431 352.7968 390.2169 c
352.7968 390.0562 352.783 389.8687 352.7554 389.6411 c
f
1 D
349.9971 392.1314 m
349.1007 392.1314 348.4663 391.4754 348.3283 390.498 c
351.528 390.498 l
351.5555 391.4754 350.9625 392.1314 349.9971 392.1314 c
f
*U
*u
0 D
363.1781 386.2405 m
363.1781 390.5114 L
363.1781 391.4352 362.9574 392.0242 362.061 392.0242 c
361.0818 392.0242 360.144 391.0202 360.144 389.4135 c
360.144 386.2405 L
358.9165 386.2405 L
358.9165 390.5248 L
358.9165 391.3548 358.7372 392.0242 357.7994 392.0242 c
356.7512 392.0242 355.8824 390.9398 355.8824 389.4135 c
355.8824 386.2405 L
354.6412 386.2405 L
354.6412 392.8946 L
355.841 392.8946 L
355.841 392.5063 355.8135 391.9038 355.7307 391.5021 c
355.7583 391.4887 L
356.1582 392.426 357.0409 393.0284 358.1442 393.0284 c
359.5923 393.0284 359.9785 392.051 360.0337 391.5155 c
360.3233 392.1448 361.0542 393.0284 362.3782 393.0284 c
363.6746 393.0284 364.4193 392.3456 364.4193 390.8461 c
364.4193 386.2405 L
363.1781 386.2405 l
f
*U
*u
367.8298 386.12 m
367.3195 386.12 366.8093 386.1602 366.3817 386.2405 c
366.4231 387.3116 L
366.8506 387.1776 367.4023 387.0839 367.9264 387.0839 c
368.8366 387.0839 369.4572 387.4856 369.4572 388.1015 c
369.4572 389.5876 366.2714 388.6772 366.2714 391.0202 c
366.2714 392.1448 367.223 393.015 369.0159 393.015 c
369.4297 393.015 369.9124 392.9615 370.3261 392.8812 c
370.2985 391.877 L
369.8709 392.0109 369.3745 392.0912 368.9193 392.0912 c
368.0091 392.0912 367.554 391.7164 367.554 391.1407 c
367.554 389.6813 370.7536 390.4712 370.7536 388.2354 c
370.7536 387.0304 369.6503 386.12 367.8298 386.12 c
f
*U
u
300.507 393.9924 m
300.9621 393.9924 301.3345 394.3538 301.3345 394.7823 c
301.3345 395.2241 300.9621 395.5589 300.507 395.5589 c
300.0519 395.5589 299.6795 395.2107 299.6795 394.7823 c
299.6795 394.3405 300.0519 393.9924 300.507 393.9924 c
f
298.8833 392.9103 m
298.8833 391.9715 L
299.8864 391.9715 L
299.8864 386.2405 L
301.1276 386.2405 L
301.1276 392.8946 L
298.8833 392.9103 L
f
U
U
u
*u
375.4222 365.7233 m
375.4222 365.2389 L
374.7935 365.2389 L
374.7935 362.8555 L
374.2199 362.8555 L
374.2199 365.2389 L
373.5911 365.2389 L
373.5911 365.7233 L
375.4222 365.7233 l
f
*U
*u
378.7144 362.8555 m
378.107 362.8555 L
378.0942 363.6032 378.073 364.3468 378.0092 365.1157 c
378.0008 365.1157 L
377.3549 362.8555 L
376.9258 362.8555 L
376.3012 365.1157 L
376.2928 365.1157 L
376.229 364.3468 376.2078 363.6032 376.195 362.8555 c
375.6513 362.8555 L
375.6767 363.8114 375.7447 364.7716 375.838 365.7233 c
376.6836 365.7233 L
377.1977 363.8709 L
377.2063 363.8709 L
377.7372 365.7233 L
378.5275 365.7233 l
378.6209 364.7716 378.6889 363.8114 378.7144 362.8555 c
f
*U
U
*u
232.4463 365.703 m
232.4463 364.4486 L
230.8177 364.4486 L
230.8177 358.2753 L
229.3321 358.2753 L
229.3321 364.4486 L
227.7036 364.4486 L
227.7036 365.703 L
232.4463 365.703 l
f
*U
*u
234.7006 365.703 m
234.7006 362.776 L
237.2204 362.776 L
237.2204 365.703 L
238.706 365.703 L
238.706 358.2753 L
237.2204 358.2753 L
237.2204 361.6096 L
234.7006 361.6096 L
234.7006 358.2753 L
233.215 358.2753 L
233.215 365.703 L
234.7006 365.703 l
f
*U
*u
243.649 365.703 m
243.649 364.4707 L
241.3051 364.4707 L
241.3051 362.6439 L
243.2528 362.6439 L
243.2528 361.4775 L
241.3051 361.4775 L
241.3051 359.5299 L
243.6929 359.5299 L
243.6929 358.2753 L
239.8195 358.2753 L
239.8195 365.703 L
243.649 365.703 l
f
*U
*u
249.506 365.703 m
251.8829 360.9053 L
251.8829 365.703 L
253.1594 365.703 L
253.1594 358.2753 L
251.5307 358.2753 L
248.8347 363.7883 L
248.8347 358.2753 L
247.5583 358.2753 L
247.5583 365.703 L
249.506 365.703 l
f
*U
*u
258.1024 365.703 m
258.1024 364.4707 L
255.7586 364.4707 L
255.7586 362.6439 L
257.7063 362.6439 L
257.7063 361.4775 L
255.7586 361.4775 L
255.7586 359.5299 L
258.1464 359.5299 L
258.1464 358.2753 L
254.273 358.2753 L
254.273 365.703 L
258.1024 365.703 l
f
*U
*u
263.5432 365.703 m
263.5432 364.4486 L
261.9146 364.4486 L
261.9146 358.2753 L
260.4291 358.2753 L
260.4291 364.4486 L
258.8004 364.4486 L
258.8004 365.703 L
263.5432 365.703 l
f
*U
*u
266.8142 360.3771 m
268.0247 365.703 L
269.3451 365.703 L
270.5556 360.3771 L
270.5776 360.3771 L
270.9847 362.1708 271.3479 364.0085 271.579 365.703 c
272.9214 365.703 L
272.5363 363.2052 271.9641 360.6632 271.2048 358.2753 c
269.7082 358.2753 L
268.5859 363.1061 L
268.5639 363.1061 L
267.4194 358.2753 L
265.8568 358.2753 L
265.1306 360.7402 264.5804 363.2271 264.2282 365.703 c
265.8129 365.703 L
266.011 364.1955 266.3851 362.3579 266.7922 360.3771 C
266.8142 360.3771 l
f
*U
*u
279.3678 362.1818 m
279.3678 359.1007 277.7942 358.1654 276.2867 358.1654 c
274.438 358.1654 273.2936 359.3207 273.2936 361.8846 c
273.2936 364.4926 274.603 365.8021 276.3966 365.8021 c
278.2014 365.8021 279.3678 364.5917 279.3678 362.1818 c
f
1 D
274.8671 362.1818 m
274.8671 360.0801 275.4834 359.3867 276.3747 359.3867 c
277.156 359.3867 277.7942 360.036 277.7942 361.8736 c
277.7942 363.8654 277.1449 364.5806 276.2647 364.5806 c
275.5054 364.5806 274.8671 363.9204 274.8671 362.1818 c
f
*U
*u
0 D
282.7008 365.7361 m
284.5055 365.7361 285.3307 364.8887 285.3307 363.6233 c
285.3307 362.6989 284.7805 361.9177 283.7461 361.5326 c
285.6059 358.2753 L
283.8341 358.2753 L
282.3157 361.2905 L
281.9855 361.2905 L
281.9855 358.2753 L
280.5 358.2753 L
280.5 365.703 l
281.2812 365.7251 282.0075 365.7361 282.7008 365.7361 c
f
1 D
281.9855 362.4679 m
282.2276 362.4459 282.4367 362.4459 282.6347 362.4459 c
283.317 362.4459 283.7902 362.9081 283.7902 363.4803 c
283.7902 364.1405 283.4711 364.5586 282.5467 364.5586 c
282.3706 364.5586 282.1726 364.5477 281.9855 364.5367 C
281.9855 362.4679 l
f
*U
*u
0 D
288.0362 365.703 m
288.0362 362.5889 L
289.9729 365.703 L
291.6675 365.703 L
289.2466 362.3909 L
291.7995 358.2753 L
289.9509 358.2753 L
288.0362 361.6646 L
288.0362 358.2753 L
286.5507 358.2753 L
286.5507 365.703 L
288.0362 365.703 l
f
*U
*u
296.3365 365.703 m
296.3365 358.2753 L
294.851 358.2753 L
294.851 365.703 L
296.3365 365.703 l
f
*U
*u
301.4426 364.2835 m
301.0685 364.4707 300.5403 364.6467 300.0672 364.6467 c
299.4179 364.6467 299.0438 364.2506 299.0438 363.7773 c
299.0438 362.3579 302.1689 362.743 302.1689 360.3991 c
302.1689 359.1887 301.2886 358.1433 299.506 358.1433 c
298.7356 358.1433 298.0204 358.3854 297.3272 358.8696 c
297.7563 359.7279 L
298.1525 359.5408 298.7026 359.3317 299.3189 359.3317 c
300.1771 359.3317 300.5183 359.7169 300.5183 360.2011 c
300.5183 361.6096 297.5033 361.1254 297.5033 363.6013 c
297.5033 364.8557 298.4056 365.7911 299.8691 365.7911 c
300.6613 365.7911 301.3217 365.5381 301.8498 365.0979 C
301.4426 364.2835 l
f
*U
*u
329.2154 359.5628 m
328.6651 358.7046 327.9059 358.1763 326.9595 358.1763 c
325.3089 358.1763 324.1865 359.3428 324.1865 361.8296 c
324.1865 364.2506 325.397 365.7801 327.0696 365.7801 c
328.0049 365.7801 328.7202 365.2299 329.1053 364.4046 c
328.4451 363.8104 L
328.0379 364.2616 327.7078 364.4816 327.1687 364.4816 c
326.4094 364.4816 325.7711 363.5242 325.7711 362.0057 c
325.7711 360.124 326.4424 359.4858 327.3006 359.4858 c
327.7078 359.4858 328.1369 359.7389 328.5441 360.157 C
329.2154 359.5628 l
f
*U
*u
335.8686 362.1818 m
335.8686 359.1007 334.295 358.1654 332.7875 358.1654 c
330.9388 358.1654 329.7944 359.3207 329.7944 361.8846 c
329.7944 364.4926 331.1038 365.8021 332.8975 365.8021 c
334.7022 365.8021 335.8686 364.5917 335.8686 362.1818 c
f
1 D
331.3679 362.1818 m
331.3679 360.0801 331.9841 359.3867 332.8755 359.3867 c
333.6567 359.3867 334.295 360.036 334.295 361.8736 c
334.295 363.8654 333.6458 364.5806 332.7655 364.5806 c
332.0062 364.5806 331.3679 363.9204 331.3679 362.1818 c
f
*U
*u
0 D
344.6291 358.2753 m
343.0556 358.2753 L
343.0226 360.2121 342.9676 362.1378 342.8025 364.1295 c
342.7805 364.1295 L
341.1079 358.2753 L
339.9964 358.2753 L
338.3789 364.1295 L
338.3568 364.1295 L
338.1918 362.1378 338.1368 360.2121 338.1038 358.2753 c
336.6952 358.2753 L
336.7613 360.7512 336.9374 363.2382 337.1794 365.703 c
339.3692 365.703 L
340.7007 360.9053 L
340.7227 360.9053 L
342.0982 365.703 L
344.145 365.703 l
344.387 363.2382 344.5631 360.7512 344.6291 358.2753 c
f
*U
*u
347.767 365.7251 m
349.7587 365.7251 350.6831 364.7787 350.6831 363.4363 c
350.6831 361.9838 349.6596 360.8943 347.4919 360.8943 c
347.2828 360.8943 L
347.2828 358.2753 L
345.7973 358.2753 L
345.7973 365.703 l
346.5125 365.703 347.1398 365.7251 347.767 365.7251 c
f
1 D
347.2828 362.0277 m
347.6239 362.0277 L
348.5813 362.0277 349.0984 362.4349 349.0984 363.2712 c
349.0984 364.0855 348.6693 364.5477 347.5689 364.5477 c
347.2828 364.5477 L
347.2828 362.0277 l
f
*U
*u
0 D
353.0479 365.703 m
353.0479 361.0263 L
353.0479 359.7719 353.6421 359.3538 354.3463 359.3538 c
355.1057 359.3538 355.6228 359.8049 355.6228 360.9603 c
355.6228 365.703 L
357.0643 365.703 L
357.0643 361.0594 L
357.0643 358.8916 355.7879 358.1654 354.1814 358.1654 c
352.4867 358.1654 351.5624 358.9466 351.5624 360.9164 c
351.5624 365.703 L
353.0479 365.703 l
f
*U
*u
362.5438 365.703 m
362.5438 364.4486 L
360.9152 364.4486 L
360.9152 358.2753 L
359.4296 358.2753 L
359.4296 364.4486 L
357.801 364.4486 L
357.801 365.703 L
362.5438 365.703 l
f
*U
*u
367.1419 365.703 m
367.1419 364.4707 L
364.798 364.4707 L
364.798 362.6439 L
366.7458 362.6439 L
366.7458 361.4775 L
364.798 361.4775 L
364.798 359.5299 L
367.1859 359.5299 L
367.1859 358.2753 L
363.3125 358.2753 L
363.3125 365.703 L
367.1419 365.703 l
f
*U
*u
370.3858 365.7361 m
372.1906 365.7361 373.0158 364.8887 373.0158 363.6233 c
373.0158 362.6989 372.4656 361.9177 371.4313 361.5326 c
373.291 358.2753 L
371.5193 358.2753 L
370.0008 361.2905 L
369.6706 361.2905 L
369.6706 358.2753 L
368.1851 358.2753 L
368.1851 365.703 l
368.9663 365.7251 369.6926 365.7361 370.3858 365.7361 c
f
1 D
369.6706 362.4679 m
369.9127 362.4459 370.1218 362.4459 370.3198 362.4459 c
371.0021 362.4459 371.4753 362.9081 371.4753 363.4803 c
371.4753 364.1405 371.1561 364.5586 370.2318 364.5586 c
370.0558 364.5586 369.8577 364.5477 369.6706 364.5367 C
369.6706 362.4679 l
f
*U
*u
0 D
309.4514 365.703 m
309.4514 364.4486 L
307.8228 364.4486 L
307.8228 358.2753 L
306.3372 358.2753 L
306.3372 364.4486 L
304.7087 364.4486 L
304.7087 365.703 L
309.4514 365.703 l
f
*U
*u
311.7056 365.703 m
311.7056 362.776 L
314.2256 362.776 L
314.2256 365.703 L
315.7112 365.703 L
315.7112 358.2753 L
314.2256 358.2753 L
314.2256 361.6096 L
311.7056 361.6096 L
311.7056 358.2753 L
310.2201 358.2753 L
310.2201 365.703 L
311.7056 365.703 l
f
*U
*u
320.6541 365.703 m
320.6541 364.4707 L
318.3102 364.4707 L
318.3102 362.6439 L
320.2579 362.6439 L
320.2579 361.4775 L
318.3102 361.4775 L
318.3102 359.5299 L
320.6981 359.5299 L
320.6981 358.2753 L
316.8247 358.2753 L
316.8247 365.703 L
320.6541 365.703 l
f
*U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
85.5 63.67 171.21 83.15 R
7 X
V
118.5 47.25 223 81.5 R
V
2 9 Q
0 X
(M/S MTV29-01) 118.5 75.5 T
(901 San Antonio Road) 118.5 66.5 T
(P) 118.5 57.5 T
(alo Alto, CA 94303-4900) 123.37 57.5 T
FMENDPAGE
%%EndPage: "2" 4
%%Page: "1" 5
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 14 Q
0 X
(T) 256.4 710.67 T
(able of Contents) 263.83 710.67 T
2 12 Q
(1.) 72 688 T
(Introduction) 108 688 T
(..............................................................................................................) 168 688 T
(1) 498 688 T
(1.1) 108 672 T
(Or) 144 672 T
(g) 156.44 672 T
(anization of the EVM) 162.38 672 T
(.............................................................................) 267 672 T
(2) 498 672 T
(1.2) 108 656 T
(Ja) 144 656 T
(v) 153.76 656 T
(a Language Issues) 159.46 656 T
(...................................................................................) 249 656 T
(3) 498 656 T
(1.3) 108 640 T
(Implementation Issues) 144 640 T
(.................................................................................) 255 640 T
(5) 498 640 T
(2.) 72 620 T
(Collector Cookbook) 108 620 T
(.................................................................................................) 207 620 T
(9) 498 620 T
(2.1) 108 604 T
(Preliminary Information) 144 604 T
(...............................................................................) 261 604 T
(9) 498 604 T
(2.2) 108 588 T
(Core Collector Routines) 144 588 T
(.............................................................................) 261 588 T
(11) 492 588 T
(2.3) 108 572 T
(Read/Write Barriers) 144 572 T
(...................................................................................) 243 572 T
(20) 492 572 T
(2.4) 108 556 T
(Supporting Collector Routines) 144 556 T
(...................................................................) 291 556 T
(22) 492 556 T
(3.) 72 536 T
(Reference Section) 108 536 T
(..................................................................................................) 198 536 T
(25) 492 536 T
(3.1) 108 520 T
(Header Files) 144 520 T
(...............................................................................................) 207 520 T
(25) 492 520 T
(3.2) 108 504 T
(Collector Con\336guration) 144 504 T
(.............................................................................) 261 504 T
(25) 492 504 T
(3.3) 108 488 T
(Sizes and Casts) 144 488 T
(...........................................................................................) 219 488 T
(26) 492 488 T
(3.4) 108 472 T
(Object Header Information) 144 472 T
(........................................................................) 276 472 T
(27) 492 472 T
(3.5) 108 456 T
(Class Information) 144 456 T
(.......................................................................................) 231 456 T
(28) 492 456 T
(3.6) 108 440 T
(Marking Macros) 144 440 T
(.........................................................................................) 225 440 T
(29) 492 440 T
(3.7) 108 424 T
(Root-processing and Iteration Support) 144 424 T
(......................................................) 330 424 T
(30) 492 424 T
(3.8) 108 408 T
(Collection-related Support) 144 408 T
(.........................................................................) 273 408 T
(33) 492 408 T
(3.9) 108 392 T
(F) 144 392 T
(ast-allocation Support) 150.49 392 T
(..............................................................................) 258 392 T
(34) 492 392 T
(3.10) 108 376 T
(Locking Support) 144 376 T
(.........................................................................................) 225 376 T
(34) 492 376 T
(3.11) 108 360 T
(Miscellaneous Support) 144 360 T
(...............................................................................) 255 360 T
(35) 492 360 T
(3.12) 108 344 T
(Deb) 144 344 T
(ugging and V) 163.75 344 T
(eri\336cation) 227.75 344 T
(.......................................................................) 279 344 T
(36) 492 344 T
(3.13) 108 328 T
(Memory Allocation Support) 144 328 T
(......................................................................) 282 328 T
(37) 492 328 T
(4.) 72 308 T
(Open Issues and Future Directions) 108 308 T
(........................................................................) 276 308 T
(41) 492 308 T
(5.) 72 288 T
(More Information and Feedback) 108 288 T
(............................................................................) 264 288 T
(43) 492 288 T
(5.1) 108 272 T
(References and Further Reading) 144 272 T
(................................................................) 300 272 T
(43) 492 272 T
(5.2) 108 256 T
(Credits) 144 256 T
(........................................................................................................) 180 256 T
(43) 492 256 T
(5.3) 108 240 T
(Feedback) 144 240 T
(....................................................................................................) 192 240 T
(43) 492 240 T
FMENDPAGE
%%EndPage: "1" 5
%%Page: "2" 6
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
72 740.81 540 756 R
V
72 63 540 720 R
V
FMENDPAGE
%%EndPage: "2" 6
%%Page: "1" 7
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
4 18 Q
0 X
(The GC Interface in the EVM) 187.16 645.2 T
4 14.4 Q
(1) 417.64 652.4 T
5 14 Q
(Der) 211.14 603.87 T
(ek White and Ale) 232.39 603.87 T
(x Garthwaite) 327.36 603.87 T
2 10 Q
(Sun Microsystems Laboratories) 242.4 588.53 T
(901 San Antonio Road) 260.3 576.53 T
(P) 250.52 564.53 T
(alo Alto, California 94303) 255.93 564.53 T
4 14 Q
(1.  Intr) 259.26 446.87 T
(oduction) 300.62 446.87 T
2 12 Q
(This document describes ho) 72 418.2 T
(w to write a g) 206.02 418.2 T
(arbage collector \050GC\051 for the EVM. It assumes that the) 271.94 418.2 T
(reader) 72 402.87 T
(has) 104.56 402.87 T
(a) 123.15 402.87 T
(good) 131.06 402.87 T
(understanding) 157.65 402.87 T
(of) 228.23 402.87 T
(g) 240.81 402.87 T
(arbage) 246.75 402.87 T
(collection) 281.32 402.87 T
(issues) 331.23 402.87 T
(and) 362.49 402.87 T
(some) 382.4 402.87 T
(f) 410.32 402.87 T
(amiliarity) 414.2 402.87 T
(with) 463.45 402.87 T
(the) 487.38 402.87 T
(Ja) 504.63 402.87 T
(v) 514.39 402.87 T
(a) 520.09 402.87 T
2 8 Q
(TM) 525.41 406.87 T
2 12 Q
(programming language.) 72 388.87 T
(The) 72 362.87 T
(EVM) 93.65 362.87 T
(is) 123.31 362.87 T
(part) 134.31 362.87 T
(of) 155.97 362.87 T
(a) 168.96 362.87 T
(research) 177.28 362.87 T
(project) 220.25 362.87 T
(at) 256.57 362.87 T
(Sun) 268.22 362.87 T
(Labs.) 289.89 362.87 T
(The) 319.21 362.87 T
(interf) 340.87 362.87 T
(aces) 366.74 362.87 T
(described) 390.39 362.87 T
(in) 439.36 362.87 T
(this) 451.7 362.87 T
(document) 472.03 362.87 T
(are) 522.35 362.87 T
(under) 72 348.87 T
(de) 101.87 348.87 T
(v) 112.9 348.87 T
(elopment) 118.72 348.87 T
(and) 165.94 348.87 T
(are) 185.82 348.87 T
(guaranteed) 203.02 348.87 T
(to) 258.21 348.87 T
(change.) 270.1 348.87 T
(In) 309.63 348.87 T
(f) 322.18 348.87 T
(act,) 326.05 348.87 T
(the) 345.6 348.87 T
(purpose) 362.81 348.87 T
(of) 403.35 348.87 T
(this) 415.9 348.87 T
(document) 435.79 348.87 T
(is) 485.67 348.87 T
(to) 496.22 348.87 T
(solicit) 508.11 348.87 T
(feedback) 72 334.87 T
(to) 118.06 334.87 T
(impro) 130.14 334.87 T
(v) 158.63 334.87 T
(e) 164.45 334.87 T
(the) 172.53 334.87 T
(interf) 189.94 334.87 T
(aces) 215.81 334.87 T
(described) 239.22 334.87 T
(herein.) 287.95 334.87 T
(As) 323.69 334.87 T
(a) 339.77 334.87 T
(result,) 347.85 334.87 T
(speci\336c) 380.26 334.87 T
(product) 419.67 334.87 T
(plans) 459.08 334.87 T
(should) 487.16 334.87 T
(not) 521.91 334.87 T
(be based on this document; e) 72 320.87 T
(v) 210.68 320.87 T
(erything is e) 216.5 320.87 T
(xpected to change.) 275.65 320.87 T
(This) 72 294.87 T
(section) 96.31 294.87 T
(de\336nes) 133.29 294.87 T
(some) 170.26 294.87 T
(terms) 198.57 294.87 T
(used) 228.21 294.87 T
(in) 253.18 294.87 T
(the) 265.49 294.87 T
(document,) 283.13 294.87 T
(describes) 336.44 294.87 T
(ho) 384.07 294.87 T
(w) 395.77 294.87 T
(the) 407.41 294.87 T
(EVM) 425.05 294.87 T
(is) 454.69 294.87 T
(or) 465.67 294.87 T
(g) 475.45 294.87 T
(anized) 481.39 294.87 T
(with) 515.69 294.87 T
(respect) 72 280.87 T
(to) 108.92 280.87 T
(memory) 121.2 280.87 T
(management,) 164.13 280.87 T
(and) 231.39 280.87 T
(describes) 251.66 280.87 T
(ho) 299.25 280.87 T
(w) 310.95 280.87 T
(the) 322.55 280.87 T
(Ja) 340.16 280.87 T
(v) 349.91 280.87 T
(a) 355.61 280.87 T
(programming) 363.88 280.87 T
(language) 432.15 280.87 T
(and) 478.41 280.87 T
(the) 498.67 280.87 T
(Ja) 516.28 280.87 T
(v) 526.03 280.87 T
(a) 531.73 280.87 T
(virtual machine \050JVM\051 implementation af) 72 266.87 T
(fect the design of collectors.) 272.34 266.87 T
(A) 72 240.87 T
(Ja) 83.21 240.87 T
(v) 92.96 240.87 T
(a) 98.66 240.87 T
(virtual) 106.53 240.87 T
(machine) 140.4 240.87 T
(e) 183.6 240.87 T
(x) 188.75 240.87 T
(ecutes) 194.57 240.87 T
(abstract) 227.1 240.87 T
(instructions) 266.96 240.87 T
(in) 325.51 240.87 T
(one) 337.39 240.87 T
(or) 357.26 240.87 T
(more) 369.79 240.87 T
(threads) 396.99 240.87 T
(of) 434.19 240.87 T
(control.) 446.73 240.87 T
(There) 486.27 240.87 T
(may) 516.79 240.87 T
(be other threads running in the system, b) 72 226.87 T
(ut the) 267.07 226.87 T
(y are not rele) 293.89 226.87 T
(v) 356.57 226.87 T
(ant to this document. A JVM may) 362.27 226.87 T
(e) 72 212.87 T
(x) 77.15 212.87 T
(ecute bytecodes by interpreting them directly) 82.97 212.87 T
(, or by \336rst compiling the bytecodes into a nati) 299.15 212.87 T
(v) 522.84 212.87 T
(e) 528.66 212.87 T
(form and e) 72 198.87 T
(x) 123.8 198.87 T
(ecuting the nati) 129.62 198.87 T
(v) 203.32 198.87 T
(e code \050\322compiled code\323\051. Both forms of the code e) 209.14 198.87 T
(x) 456.89 198.87 T
(ecuted are) 462.71 198.87 T
(kno) 72 184.87 T
(wn as \322Ja) 89.7 184.87 T
(v) 135.44 184.87 T
(a code.) 141.14 184.87 T
(\323 Each thread has tw) 174.29 184.87 T
(o stacks: a \322Ja) 273.47 184.87 T
(v) 341.54 184.87 T
(a stack\323 to run bytecodes and a \322nati) 347.24 184.87 T
(v) 522.56 184.87 T
(e) 528.38 184.87 T
(stack\323 to run nati) 72 170.87 T
(v) 154.02 170.87 T
(e code. The JVM contains e) 159.84 170.87 T
(xplicit support for objects, which are dynamically) 293.63 170.87 T
(allocated out of a g) 72 156.87 T
(arbage collected heap \050\322Ja) 163.92 156.87 T
(v) 289.96 156.87 T
(a heap\323\051. The JVM also supports manipulating) 295.66 156.87 T
(v) 72 142.87 T
(ariables associated with classes \050\322Ja) 77.7 142.87 T
(v) 250.08 142.87 T
(a static v) 255.78 142.87 T
(ariables\323\051.) 298.14 142.87 T
72 92.67 540 112.67 C
0 0 0 1 0 0 0 1 K
72 100.67 204 100.67 2 L
0.25 H
2 Z
0 X
N
0 0 612 792 C
0 0 0 1 0 0 0 1 K
2 10 Q
0 X
(1.) 72 86 T
(EVM, the Ja) 84 86 T
(v) 134.07 86 T
(a virtual machine kno) 138.82 86 T
(wn pre) 225.5 86 T
(viously as ExactVM, is embedded in Sun\325) 252.74 86 T
(s Ja) 420.79 86 T
(v) 435.31 86 T
(a 2 SDK) 440.06 86 T
5 F
(Pr) 477 86 T
(oduction) 486.55 86 T
2 F
(Release for Solaris) 84 71.33 T
2 8 Q
(\252) 159.54 75.33 T
2 10 Q
(, a) 167.38 71.33 T
(v) 176.62 71.33 T
(ailable at http://www) 181.37 71.33 T
(.sun.com/solaris/ja) 265.16 71.33 T
(v) 339.96 71.33 T
(a/) 344.71 71.33 T
FMENDPAGE
%%EndPage: "1" 7
%%Page: "2" 8
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 2) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(The) 72 712 T
(EVM) 93.55 712 T
(is) 123.1 712 T
(a) 134 712 T
(Ja) 142.21 712 T
(v) 151.97 712 T
(a) 157.67 712 T
(runtime) 165.89 712 T
(en) 206.11 712 T
(vironment) 216.96 712 T
(\050JRE\051) 269.18 712 T
(optimized) 300.06 712 T
(for) 350.95 712 T
(Solaris) 367.83 712 T
(and) 404.06 712 T
(serv) 424.28 712 T
(er) 444.09 712 T
(applications.) 456.3 712 T
(P) 520.19 712 T
(ar-) 526.68 712 T
(ticular attention has been paid to scalability and reliability issues, including g) 72 698 T
(arbage collection.) 442.58 698 T
(The EVM has an interf) 72 684 T
(ace that mak) 182.52 684 T
(es it simple to implement and to use dif) 243.05 684 T
(ferent g) 432.08 684 T
(arbage collec-) 469.01 684 T
(tors. A collector for the EVM must be chosen at b) 72 670 T
(uild time, to allo) 311.39 670 T
(w the collector to supply mac-) 390.43 670 T
(ros and inline functions that the rest of the system can use.) 72 656 T
(The GC interf) 72 630 T
(ace has been used to implement mark and sweep, cop) 139.2 630 T
(ying, compacting, genera-) 395.69 630 T
(tional,) 72 616 T
(and) 105.13 616 T
(concurrent) 125.25 616 T
(g) 179.35 616 T
(arbage) 185.29 616 T
(collectors.) 220.07 616 T
(The) 272.51 616 T
(interf) 293.97 616 T
(ace) 319.84 616 T
(will) 338.61 616 T
(not) 360.08 616 T
(handle) 378.21 616 T
(simple) 412.99 616 T
(reference) 447.79 616 T
(counting) 495.21 616 T
(collectors due to limited information about Ja) 72 602 T
(v) 290.41 602 T
(a stacks, b) 296.11 602 T
(ut will support deferred reference count-) 345.53 602 T
(ing collectors. W) 72 588 T
(ork still needs to be done to support weak references with concurrent collectors) 153.36 588 T
(in a GC independent w) 72 574 T
(ay) 182.53 574 T
(.) 193.08 574 T
4 F
(1.1  Or) 72 545 T
(ganization of the EVM) 107.54 545 T
2 F
(A) 72 520 T
(Ja) 83.61 520 T
(v) 93.36 520 T
(a) 99.06 520 T
(runtime) 107.34 520 T
(en) 147.61 520 T
(vironment) 158.46 520 T
(consists) 210.74 520 T
(of) 251.68 520 T
(class) 264.63 520 T
(\336les,) 290.9 520 T
(shared) 316.85 520 T
(libraries) 351.11 520 T
(containing) 393.38 520 T
(the) 446.99 520 T
(nati) 464.6 520 T
(v) 482.3 520 T
(e) 488.11 520 T
(methods) 496.39 520 T
(for the class \336les, and a JVM shared library proper) 72 506 T
(. A JRE is the smallest set of e) 314.62 506 T
(x) 460.76 506 T
(ecutables and) 466.58 506 T
(\336les that constitute the standard Ja) 72 492 T
(v) 236.75 492 T
(a platform.) 242.45 492 T
(A) 72 466 T
(JVM) 83.38 466 T
(can) 110.1 466 T
(load) 129.47 466 T
(and) 152.85 466 T
(e) 172.9 466 T
(x) 178.04 466 T
(ecute) 183.87 466 T
(class) 211.9 466 T
(\336les,) 237.95 466 T
(and) 263.67 466 T
(nati) 283.71 466 T
(v) 301.41 466 T
(e) 307.23 466 T
(methods) 315.28 466 T
(can) 358.66 466 T
(call) 378.04 466 T
(JVM) 398.08 466 T
(code) 424.8 466 T
(via) 450.17 466 T
(the) 467.55 466 T
(Ja) 484.93 466 T
(v) 494.69 466 T
(a) 500.39 466 T
(nati) 508.43 466 T
(v) 526.14 466 T
(e) 531.96 466 T
(interf) 72 452 T
(ace \050JNI\051 [2] or the pri) 97.87 452 T
(v) 205.86 452 T
(ate JVM interf) 211.56 452 T
(ace. Nati) 281.42 452 T
(v) 323.77 452 T
(e methods ha) 329.59 452 T
(v) 392.68 452 T
(e no direct access to the Ja) 398.5 452 T
(v) 525.55 452 T
(a) 531.25 452 T
(heap.) 72 438 T
(F) 72 412 T
(or the purpose of describing the memory system and the collector interf) 78.49 412 T
(ace, we can further) 421.98 412 T
(di) 72 398 T
(vide the EVM into normal Ja) 81.04 398 T
(v) 220.45 398 T
(a e) 226.15 398 T
(x) 239.63 398 T
(ecution \050interpreter) 245.45 398 T
(, JIT) 337.27 398 T
(, class loading, JNI/JVM interf) 358.38 398 T
(aces,) 506.24 398 T
(etc.\051, and the memory system and collector:) 72 384 T
4 10 Q
(FIGURE 1. JVM Or) 246.81 67.67 T
(ganization) 334.48 67.67 T
72 63 540 720 C
0 0 0 1 0 0 0 1 K
72 82.33 540 354 C
121.5 79.28 507.6 354 R
7 X
V
121.5 82.33 507.6 354 C
0.2 0 0.2 0 0.8 1 0.8 1 K
186.67 279.75 237 297.9 R
0 X
V
186.67 279.75 237 297.9 R
V
0 0 0 1 0 0 0 1 K
186.67 279.75 237 297.9 R
1 H
2 Z
N
0.2 0 0.2 0 0.8 1 0.8 1 K
236.17 279.75 317.02 297.9 R
V
236.17 279.75 317.02 297.9 R
V
0 0 0 1 0 0 0 1 K
236.17 279.75 317.02 297.9 R
N
0.2 0 0 0 0.8 1 1 1 K
186.67 201.38 339.3 276.45 R
V
186.67 201.38 339.3 276.45 R
V
0 0 0 1 0 0 0 1 K
186.67 201.38 339.3 276.45 R
N
72 82.33 540 354 C
192.45 281.4 232.05 295.43 C
0 0 0 1 0 0 0 1 K
6 11.35 Q
0 X
(JNI) 204 284.99 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
342.6 276.45 342.6 198.08 2 L
1 H
0 Z
0 X
N
342.6 198.08 342.6 197.25 2 L
N
342.6 198.08 186.67 198.08 2 L
N
186.67 198.08 186.67 197.25 2 L
N
186.67 198.08 186.67 176.63 2 L
N
186.67 176.63 186.67 175.8 2 L
N
186.67 176.63 379.72 176.63 2 L
N
379.72 176.63 379.72 175.8 2 L
N
379.72 176.63 379.72 276.45 2 L
N
379.72 276.45 379.72 275.63 2 L
N
379.72 276.45 342.6 276.45 2 L
N
342.6 276.45 342.6 275.63 2 L
N
122.32 353.17 122.32 353.17 2 L
N
0 0.2 0.4 0 1 0.8 0.6 1 K
341.77 277.28 341.77 198.9 185.85 198.9 185.85 177.45 378.89 177.45 378.89 277.28 341.77 277.28
 341.77 277.28 341.77 277.28 341.77 277.28 10 Y
V
0 0 0 1 0 0 0 1 K
341.77 277.28 341.77 198.9 185.85 198.9 185.85 177.45 378.89 177.45 378.89 277.28 341.77 277.28 7 L
N
0 0 0.4 0 1 1 0.6 1 K
383.02 176.63 440.77 276.45 R
V
382.19 177.45 439.94 277.28 R
V
0 0 0 1 0 0 0 1 K
382.19 177.45 439.94 277.28 R
N
213.9 298.73 210.6 307.8 217.2 307.8 213.9 298.73 213.9 298.73 213.9 298.73 213.9 298.73 7 Y
V
213.9 321 213.9 301.2 2 L
N
72 82.33 540 354 C
237.82 280.58 317.85 294.6 C
0 0 0 1 0 0 0 1 K
6 11.35 Q
0 X
(JVM interface) 241.12 284.99 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
258.45 298.73 255.15 307.8 261.75 307.8 258.45 298.73 258.45 298.73 258.45 298.73 258.45 298.73 7 Y
0 X
V
258.45 321 258.45 301.2 2 L
1 H
0 Z
N
0 0 0 0 1 1 1 1 K
186.67 320.18 292.27 346.58 R
V
185.85 321 291.45 347.4 R
V
0 0 0 1 0 0 0 1 K
185.85 321 291.45 347.4 R
N
72 82.33 540 354 C
192.45 326.77 282.37 339.98 C
0 0 0 1 0 0 0 1 K
6 11.35 Q
0 X
(Native Methods) 194.1 330.36 T
72 82.33 540 354 C
121.5 327.6 178.42 340.8 C
0 0 0 1 0 0 0 1 K
1 11.35 Q
0 X
(shared libs) 121.5 331.11 T
72 82.33 540 354 C
216.37 203.03 286.5 269.85 C
0 0 0 1 0 0 0 1 K
6 11.35 Q
0 X
(JVM:) 237.82 260.24 T
(interpreter,) 221.32 247.87 T
(JIT,) 241.95 235.49 T
(classloader,) 218.85 223.12 T
(etc.) 242.77 210.74 T
72 82.33 540 354 C
142.95 234.38 175.95 246.75 C
0 0 0 1 0 0 0 1 K
1 11.35 Q
0 X
(jvm.so) 142.95 237.06 T
72 82.33 540 354 C
284.85 180.75 373.12 193.13 C
0 0 0 1 0 0 0 1 K
6 11.35 Q
0 X
(Memory System) 284.85 183.52 T
72 82.33 540 354 C
387.14 220.35 435.82 234.38 C
0 0 0 1 0 0 0 1 K
6 11.35 Q
0 X
(Collector) 387.14 224.77 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
444.89 163.43 453.14 162.6 2 L
1 H
0 Z
0 X
N
453.14 162.6 459.74 160.95 2 L
N
459.74 160.95 469.64 156.83 2 L
N
469.64 156.83 472.94 154.35 2 L
N
472.94 154.35 479.54 148.58 2 L
N
479.54 148.58 482.02 145.28 2 L
N
482.02 145.28 484.49 138.68 2 L
N
484.49 138.68 485.32 135.38 2 L
N
485.32 135.38 486.14 127.96 2 L
N
486.14 127.96 486.14 123.83 2 L
N
486.14 123.83 484.49 117.23 2 L
N
484.49 117.23 482.84 113.93 2 L
N
482.84 113.93 481.19 108.98 2 L
N
481.19 108.98 480.37 106.51 2 L
N
480.37 106.51 477.89 103.21 2 L
N
477.89 103.21 476.24 102.38 2 L
N
476.24 102.38 473.77 102.38 2 L
N
473.77 102.38 472.94 101.56 2 L
N
472.94 101.56 470.47 100.73 2 L
N
470.47 100.73 468.82 100.73 2 L
N
468.82 100.73 465.52 99.08 2 L
N
465.52 99.08 464.69 98.26 2 L
N
464.69 98.26 461.39 96.61 2 L
N
461.39 96.61 459.74 96.61 2 L
N
459.74 96.61 455.62 95.78 2 L
N
455.62 95.78 453.97 94.96 2 L
N
453.97 94.96 449.84 94.96 2 L
N
449.84 94.96 447.37 94.96 2 L
N
447.37 94.96 443.24 96.61 2 L
N
443.24 96.61 441.59 98.26 2 L
N
441.59 98.26 437.47 102.38 2 L
N
437.47 102.38 434.99 104.86 2 L
N
434.99 104.86 431.69 109.8 2 L
N
431.69 109.8 430.04 112.28 2 L
N
430.04 112.28 425.92 118.05 2 L
N
425.92 118.05 423.44 121.35 2 L
N
423.44 121.35 419.32 127.96 2 L
N
419.32 127.96 417.67 131.26 2 L
N
417.67 131.26 414.37 137.85 2 L
N
414.37 137.85 412.72 141.16 2 L
N
412.72 141.16 411.89 146.93 2 L
N
411.89 146.93 411.89 149.41 2 L
N
411.89 149.41 412.72 155.18 2 L
N
412.72 155.18 414.37 157.65 2 L
N
414.37 157.65 419.32 160.95 2 L
N
419.32 160.95 422.62 161.78 2 L
N
422.62 161.78 432.52 163.43 2 L
N
432.52 163.43 438.29 163.43 2 L
N
438.29 163.43 445.72 162.6 2 L
N
122.32 353.17 122.32 353.17 2 L
N
0 0 0 0.67 0.33 0.33 0.33 1 K
444.89 163.43 455.62 162.6 463.87 160.13 475.42 151.88 479.54 147.76 482.02 142.8 485.32 132.08
 484.49 121.35 481.19 112.28 477.89 105.68 474.59 103.21 470.47 102.38 466.34 100.73 457.27 96.61 450.67 95.78
 444.89 96.61 438.29 101.56 432.52 108.16 420.97 125.48 415.19 135.38 412.72 140.33 411.89 144.46 411.07 153.53
 416.02 160.13 420.14 162.6 426.74 163.43 444.89 163.43 444.89 163.43 444.89 163.43 444.89 163.43 30 Y
6 X
V
0 0 0 1 0 0 0 1 K
444.89 163.43 455.62 162.6 463.87 160.13 475.42 151.88 479.54 147.76 482.02 142.8 485.32 132.08
 484.49 121.35 481.19 112.28 477.89 105.68 474.59 103.21 470.47 102.38 466.34 100.73 457.27 96.61 450.67 95.78
 444.89 96.61 438.29 101.56 432.52 108.16 420.97 125.48 415.19 135.38 412.72 140.33 411.89 144.46 411.07 153.53
 416.02 160.13 420.14 162.6 426.74 163.43 444.89 163.43 27 L
0 X
N
72 82.33 540 354 C
446.54 167.55 475.42 179.93 C
0 0 0 1 0 0 0 1 K
1 11.35 Q
0 X
(Heap) 446.54 170.24 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
408.59 177.45 417.67 176.63 414.37 170.03 408.59 177.45 408.59 177.45 408.59 177.45 408.59 177.45 7 Y
0 X
V
433.34 163.43 424.27 164.25 427.57 170.85 433.34 163.43 433.34 163.43 433.34 163.43 433.34 163.43 7 Y
V
409.42 177.45 431.69 164.25 2 L
1 H
0 Z
N
0 0 0 0.53 0.47 0.47 0.47 1 K
231.22 119.71 246.9 156 R
6 X
V
230.4 120.53 246.07 156.83 R
V
0 0 0 1 0 0 0 1 K
230.4 120.53 246.07 156.83 R
0 X
N
72 82.33 540 354 C
186.67 134.55 223.8 156 C
0 0 0 1 0 0 0 1 K
1 9.08 Q
0 X
(Stacks/) 186.67 147.26 T
(threads) 186.67 136.54 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
260.1 156 256.8 165.08 263.4 165.08 260.1 156 260.1 156 260.1 156 260.1 156 7 Y
0 X
V
260.1 178.28 263.4 169.2 256.8 169.2 260.1 178.28 260.1 178.28 260.1 178.28 260.1 178.28 7 Y
V
260.1 176.63 260.1 158.48 2 L
1 H
0 Z
N
0 0 0 0.53 0.47 0.47 0.47 1 K
253.5 119.71 269.17 156 R
6 X
V
252.67 120.53 268.35 156.83 R
V
0 0 0 1 0 0 0 1 K
252.67 120.53 268.35 156.83 R
0 X
N
0 0 0 0.53 0.47 0.47 0.47 1 K
275.77 119.71 291.45 156 R
6 X
V
274.95 120.53 290.62 156.83 R
V
0 0 0 1 0 0 0 1 K
274.95 120.53 290.62 156.83 R
0 X
N
237.82 156 239.47 165.08 246.07 160.95 237.82 156 237.82 156 237.82 156 237.82 156 7 Y
V
253.5 178.28 251.85 169.2 245.25 173.33 253.5 178.28 253.5 178.28 253.5 178.28 253.5 178.28 7 Y
V
251.85 177.45 238.65 157.65 2 L
N
267.52 178.28 275.77 173.33 269.17 169.2 267.52 178.28 267.52 178.28 267.52 178.28 267.52 178.28 7 Y
V
283.2 156 274.95 160.95 281.55 165.08 283.2 156 283.2 156 283.2 156 283.2 156 7 Y
V
268.35 177.45 281.55 157.65 2 L
N
0 0.87 0.87 0.13 0.87 0 0 1 K
357.45 115.58 373.12 152.7 R
6 X
V
356.62 116.4 372.29 153.53 R
V
0 0 0 1 0 0 0 1 K
356.62 116.4 372.29 153.53 R
0 X
N
72 82.33 540 354 C
308.77 124.65 353.32 157.65 C
0 0 0 1 0 0 0 1 K
1 9.08 Q
0 X
(Static) 308.77 148.91 T
(\050class\051) 308.77 138.19 T
(variables) 308.77 127.46 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
364.05 152.7 360.74 161.78 367.35 161.78 364.05 152.7 364.05 152.7 364.05 152.7 364.05 152.7 7 Y
0 X
V
364.05 174.15 367.35 165.08 360.74 165.08 364.05 174.15 364.05 174.15 364.05 174.15 364.05 174.15 7 Y
V
364.05 172.5 364.05 155.18 2 L
1 H
0 Z
N
0 0.87 0.87 0.13 0.87 0 0 1 K
322.8 322.65 343.42 348.23 R
6 X
V
321.97 323.48 342.6 349.05 R
V
0 0 0 1 0 0 0 1 K
321.97 323.48 342.6 349.05 R
0 X
N
0 0.87 0.87 0.13 0.87 0 0 1 K
326.92 316.05 347.55 341.62 R
6 X
V
326.1 316.88 346.72 342.45 R
V
0 0 0 1 0 0 0 1 K
326.1 316.88 346.72 342.45 R
0 X
N
0 0.87 0.87 0.13 0.87 0 0 1 K
331.87 308.63 352.49 334.2 R
6 X
V
331.05 309.45 351.67 335.02 R
V
0 0 0 1 0 0 0 1 K
331.05 309.45 351.67 335.02 R
0 X
N
0 0.87 0.87 0.13 0.87 0 0 1 K
339.3 301.2 359.92 325.95 R
6 X
V
338.47 302.03 359.1 326.78 R
V
0 0 0 1 0 0 0 1 K
338.47 302.03 359.1 326.78 R
0 X
N
72 82.33 540 354 C
364.87 318.52 417.67 331.73 C
0 0 0 1 0 0 0 1 K
1 11.35 Q
0 X
(Class files) 364.87 322.04 T
72 82.33 540 354 C
121.5 82.33 506.77 354 C
340.95 302.03 340.95 292.95 333.52 296.25 340.95 302.03 340.95 302.03 340.95 302.03 340.95 302.03 7 Y
0 X
V
340.12 301.2 327.74 277.28 2 L
1 H
0 Z
N
290.62 336.67 299.7 339.98 299.7 333.38 290.62 336.67 290.62 336.67 290.62 336.67 290.62 336.67 7 Y
V
320.32 336.67 292.27 336.67 2 L
N
0 0 0 0 1 1 1 1 K
297.22 342.45 314.55 353.17 R
V
296.4 343.27 313.72 354 R
V
72 82.33 540 354 C
0 0 0 1 0 0 0 1 K
72 63 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "2" 8
%%Page: "3" 9
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 518.57 34.17 T
(age 3) 522.89 34.17 T
2 12 Q
(The memory system sits between the collector and the rest of the JVM. It pro) 72 712 T
(vides an internal) 442.76 712 T
(interf) 72 698 T
(ace to the JVM for object allocation and g) 97.87 698 T
(arbage collection \050) 299.77 698 T
7 10 Q
(gc.h) 389.08 698 T
2 12 Q
(\051, as well as access to) 413.08 698 T
(objects in the heap \050) 72 684 T
7 10 Q
(memsys.h) 168.65 684 T
2 12 Q
(\051. The memory system also has a pri) 216.65 684 T
(v) 390.32 684 T
(ate interf) 396.02 684 T
(ace \050) 438.89 684 T
7 10 Q
(gc/gcimpl.h) 461.87 684 T
2 12 Q
(\051) 527.87 684 T
(that) 72 670 T
(supports) 92.73 670 T
(all) 136.13 670 T
(collectors.) 150.86 670 T
(The) 203.24 670 T
(pri) 224.63 670 T
(v) 237.67 670 T
(ate) 243.37 670 T
(interf) 260.09 670 T
(ace) 285.96 670 T
(pro) 304.67 670 T
(vides) 320.49 670 T
(routines) 348.55 670 T
(to) 389.95 670 T
(iterate) 402.01 670 T
(o) 434.73 670 T
(v) 440.55 670 T
(er) 446.37 670 T
(all) 458.42 670 T
(\322roots\323) 473.15 670 T
(in) 510.54 670 T
(the) 522.61 670 T
(JVM, suspend and resume Ja) 72 656 T
(v) 211.4 656 T
(a threads, and handle most details related to locking, class unload-) 217.1 656 T
(ing, and weak references.) 72 642 T
(A collector has to implement only the details of a speci\336c GC algorithm. It does this by de\336ning) 72 616 T
(the) 72 602 T
7 10 Q
(specific) 89.66 602 T
8 F
(XXX) 137.66 602 T
2 12 Q
( functions in the abstract collector interf) 155.66 602 T
(ace, and optionally de\336ning read/write) 347.51 602 T
(barriers. The barriers ensure that no code can access or modify the heap without the collector) 72 588 T
(kno) 72 574 T
(wing about it. The abstract collector interf) 89.7 574 T
(ace is pri) 291.88 574 T
(v) 334.9 574 T
(ate to the memory system. F) 340.6 574 T
(or the most) 476.41 574 T
(part, the collector has access to the rest of the JVM only through the memory system. Object lay-) 72 560 T
(out and class information \050de\336ned in JVM headers\051 are notable e) 72 546 T
(xceptions to this.) 383.09 546 T
4 F
(1.2  J) 72 517 T
(a) 98.82 517 T
(v) 104.52 517 T
(a Language Issues) 110.4 517 T
2 F
(The Ja) 72 492 T
(v) 103.42 492 T
(a language speci\336es some language features that impact memory management.) 109.12 492 T
4 11 Q
(1.2.1  Object Issues) 72 465.67 T
2 12 Q
(The Ja) 72 440 T
(v) 103.42 440 T
(a programming language is mostly object-oriented. V) 109.12 440 T
(alues in the language can be refer-) 364.75 440 T
(ences to objects or the) 72 426 T
(y can be primiti) 178.46 426 T
(v) 253.82 426 T
(e v) 259.64 426 T
(alues \050) 273.67 426 T
7 10 Q
(boolean) 305.33 426 T
2 12 Q
(,) 347.33 426 T
7 10 Q
(byte) 353.33 426 T
2 12 Q
(,) 377.33 426 T
7 10 Q
(short) 383.33 426 T
2 12 Q
(,) 413.33 426 T
7 10 Q
(int) 419.33 426 T
2 12 Q
(,) 437.33 426 T
7 10 Q
(long) 443.33 426 T
2 12 Q
(,) 467.33 426 T
7 10 Q
(char) 473.33 426 T
2 12 Q
(,) 496.85 426 T
7 10 Q
(float) 502.85 426 T
2 12 Q
(,) 532.85 426 T
(or) 72 412 T
7 10 Q
(double) 85 412 T
2 12 Q
(\051. The language speci\336es the precision of these v) 121 412 T
(alues e) 354.31 412 T
(xplicitly \050often 32-bit or 64-bit) 387.12 412 T
(signed numbers\051, which precludes using tagging on most hardw) 72 398 T
(are. T) 378.18 398 T
(o deduce which v) 405.2 398 T
(alues are) 489.22 398 T
(references and which are primiti) 72 384 T
(v) 226.98 384 T
(es, the EVM uses the f) 232.8 384 T
(act that the Ja) 341.33 384 T
(v) 406.74 384 T
(a language is strongly) 412.44 384 T
(typed and that objects carry runtime type information.) 72 370 T
4 11 Q
(1.2.2  Finalization) 72 343.67 T
2 12 Q
(A) 72 318 T
(class) 83.22 318 T
(may) 109.1 318 T
(de\336ne) 132.31 318 T
(a) 164.19 318 T
7 10 Q
(finalize\050\051) 172.07 318 T
2 12 Q
(method.) 234.62 318 T
(If) 276.17 318 T
(an) 286.72 318 T
(object) 300.6 318 T
(has) 332.48 318 T
(a) 351.02 318 T
7 10 Q
(finalize\050\051) 358.9 318 T
2 12 Q
(method,) 421.46 318 T
(the) 463.01 318 T
(method) 480.22 318 T
(will) 518.78 318 T
(be) 72 304 T
(called) 85.91 304 T
(sometime) 117.15 304 T
(after) 166.4 304 T
(the) 190.97 304 T
(collector) 208.22 304 T
(has) 252.79 304 T
(determined) 271.38 304 T
(that) 327.95 304 T
(the) 348.53 304 T
(object) 365.78 304 T
(is) 397.69 304 T
(unreachable,) 408.28 304 T
(b) 471.84 304 T
(ut) 477.6 304 T
(before) 489.52 304 T
(the) 522.75 304 T
(object is collected. See section 12.6 in the Ja) 72 290 T
(v) 285.73 290 T
(a Language Speci\336cation \050JLS\051 [1] and section) 291.43 290 T
(2.16.7 in the Ja) 72 276 T
(v) 144.76 276 T
(a V) 150.46 276 T
(irtual Machine Speci\336cation \050JVM spec\051 [5] for more details. In JVMs based) 166.73 276 T
(on the Ja) 72 262 T
(v) 114.42 262 T
(a Platform 1.2 API [3], \336nalization is implemented using weak references.) 120.12 262 T
4 11 Q
(1.2.3  W) 72 235.67 T
(eak Refer) 109.79 235.67 T
(ences) 155.09 235.67 T
2 12 Q
(Ne) 72 210 T
(w to Ja) 85.69 210 T
(v) 119.45 210 T
(a Platform 1.2 are public weak reference classes de\336ned in the) 125.15 210 T
7 10 Q
(java.lang.ref) 427.73 210 T
2 12 Q
( pack-) 505.73 210 T
(age.) 72 196 T
(This) 94.44 196 T
(introductory) 118.56 196 T
(section) 180.68 196 T
(gi) 217.46 196 T
(v) 226.49 196 T
(es) 232.32 196 T
(an) 245.1 196 T
(o) 259.21 196 T
(v) 265.03 196 T
(ervie) 270.85 196 T
(w) 294.54 196 T
(of) 305.99 196 T
(the) 318.77 196 T
(language) 336.22 196 T
(feature.) 382.33 196 T
(\322Collecting) 421.42 196 T
(W) 479.54 196 T
(eak) 489.91 196 T
(Refer-) 509.35 196 T
(ences,) 72 182 T
(\323 page) 100.81 182 T
(14, pro) 134.8 182 T
(vides more information and e) 168.61 182 T
(xamples. The basic idea is that each weak) 309.74 182 T
(reference object has a special \336eld called the) 72 168 T
7 10 Q
(referent) 289.26 168 T
2 12 Q
(, which is a weak pointer to some object.) 337.26 168 T
(W) 72 154 T
(eak reference objects ha) 82.37 154 T
(v) 197.74 154 T
(e another \336eld that refers to the queue that the weak reference should) 203.56 154 T
(be placed on for further processing. When the memory system notices that there are no stronger) 72 140 T
(pointers to a weak reference object's referent, it places the weak reference object onto its queue.) 72 126 T
(V) 72 112 T
(arious) 79.33 112 T
(Ja) 111.44 112 T
(v) 121.2 112 T
(a) 126.9 112 T
(threads) 135.01 112 T
(are) 172.45 112 T
(w) 189.89 112 T
(aiting) 198.43 112 T
(on) 228.55 112 T
(the) 243.34 112 T
(queues) 260.79 112 T
(for) 296.9 112 T
(objects) 313.67 112 T
(to) 350.45 112 T
(process.) 362.58 112 T
(There) 404.35 112 T
(are) 435.12 112 T
(b) 452.55 112 T
(uilt-in) 458.31 112 T
(threads) 490.44 112 T
(to) 527.88 112 T
(handle) 72 98 T
(\336nalization) 106.96 98 T
(and) 163.93 98 T
7 10 Q
(SoftReference) 184.24 98 T
2 12 Q
(objects,) 265.21 98 T
(b) 305.17 98 T
(ut) 310.93 98 T
(users) 323.24 98 T
(may) 350.87 98 T
(de\336ne) 374.51 98 T
(their) 406.81 98 T
(o) 431.78 98 T
(wn) 437.48 98 T
(queue) 455.11 98 T
(and) 486.74 98 T
(thread) 507.04 98 T
(to handle weak reference objects.) 72 84 T
FMENDPAGE
%%EndPage: "3" 9
%%Page: "4" 10
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 4) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(There are se) 72 712 T
(v) 130.33 712 T
(eral prede\336ned references classes:) 136.15 712 T
7 10 Q
(Reference) 302.75 712 T
2 12 Q
( \050the abstract superclass of the follo) 356.75 712 T
(w-) 527.08 712 T
(ing classes\051,) 72 698 T
7 10 Q
(SoftReference) 133.66 698 T
2 12 Q
(,) 211.66 698 T
7 10 Q
(WeakReference) 217.66 698 T
2 12 Q
(, and) 295.66 698 T
7 10 Q
(PhantomReference) 321.98 698 T
2 12 Q
(. Note that in this docu-) 417.98 698 T
(ment, the term \322weak reference\323 is used to describe all subclasses of) 72 684 T
7 10 Q
(java.lang.ref.Reference) 72 670 T
2 12 Q
(. The term) 210 670 T
7 10 Q
(WeakReference) 262.66 670 T
2 12 Q
( refers to the speci\336c class) 340.66 670 T
7 10 Q
(java.lang.ref.WeakReference) 72 656 T
2 12 Q
(. There is also a pri) 234 656 T
(v) 325.68 656 T
(ate subclass of) 331.38 656 T
7 10 Q
(Reference) 404.36 656 T
2 12 Q
( called) 458.36 656 T
7 10 Q
(Final-) 493.02 656 T
(Reference) 72 642 T
2 12 Q
( which is used to implement \336nalization.) 126 642 T
(Note that weak references in other languages usually require the collector to break the weak link) 72 616 T
(to) 72 602 T
(the) 84.33 602 T
(dying) 101.98 602 T
(referent.) 132.31 602 T
(But) 175.61 602 T
(weak) 195.94 602 T
(references) 224.25 602 T
(in) 276.54 602 T
(the) 288.87 602 T
(Ja) 306.52 602 T
(v) 316.28 602 T
(a) 321.98 602 T
(language) 330.3 602 T
(often) 376.61 602 T
(preserv) 404.26 602 T
(e) 439.4 602 T
(the) 447.72 602 T
(weak) 465.37 602 T
(link.) 493.68 602 T
(The) 518.35 602 T
(referent of a) 72 588 T
7 10 Q
(PhantomReference) 133.63 588 T
2 12 Q
( or a) 229.63 588 T
7 10 Q
(FinalReference) 253.96 588 T
2 12 Q
( is not cleared until Ja) 337.96 588 T
(v) 442.7 588 T
(a code calls the) 448.4 588 T
7 10 Q
(clear\050\051) 72 574 T
2 12 Q
( method on it. This means that a referent may still be reachable after processing if the) 114 574 T
(weak reference object stays reachable, or if processing the weak reference object stores the refer-) 72 560 T
(ent some) 72 546 T
(where reachable. The b) 114.7 546 T
(uilt-in processing code for) 226.4 546 T
7 10 Q
(FinalReference) 355.72 546 T
2 12 Q
(s calls the) 439.72 546 T
7 10 Q
(clear\050\051) 490.04 546 T
2 12 Q
(method) 72 532 T
(and) 110.75 532 T
(drops) 130.83 532 T
(all) 160.24 532 T
(references) 174.99 532 T
(to) 227.03 532 T
(the) 239.12 532 T
(processed) 256.53 532 T
7 10 Q
(FinalReference) 306.6 532 T
2 12 Q
(.) 390.6 532 T
(The) 396.34 532 T
7 10 Q
(referent) 417.75 532 T
2 12 Q
(\336elds) 468.5 532 T
(of) 497.26 532 T
7 10 Q
(Soft-) 510 532 T
(Reference) 72 518 T
2 12 Q
(s and) 126 518 T
7 10 Q
(WeakReference) 154 518 T
2 12 Q
(s are cleared by the memory system before enqueuing the weak) 232 518 T
(reference object.) 72 504 T
(Some) 72 478 T
(weak) 101.99 478 T
(reference) 129.96 478 T
(objects) 177.25 478 T
(are) 213.9 478 T
(stronger) 231.2 478 T
(than) 273.18 478 T
(others.) 296.5 478 T
(This) 331.48 478 T
(means) 355.47 478 T
(that) 388.79 478 T
(if) 409.44 478 T
(there) 419.43 478 T
(are) 446.07 478 T
(both) 463.38 478 T
(\322stronger\323) 487.36 478 T
(weak reference objects and \322weak) 72 464 T
(er\323 weak reference objects that share the same dying referent,) 235.8 464 T
(only the strongest weak reference objects will be processed in a particular collection. All weak) 72 450 T
(reference objects of the same strength that share the same dying referent will be queued for pro-) 72 436 T
(cessing in the same GC. From strongest to weak) 72 422 T
(est, weak reference objects are ordered as fol-) 303.53 422 T
(lo) 72 408 T
(ws:) 81.04 408 T
(1.) 90 387.8 T
7 10 Q
(SoftReference) 108 387.8 T
2 12 Q
( and subclasses. These weak reference objects are not processed as) 186 387.8 T
(aggressi) 108 375 T
(v) 147.02 375 T
(ely as others, and are used to create caches that are cleared as a last resort. The) 152.84 375 T
(referent \336elds of these weak reference objects are cleared before the reference objects are) 108 362.2 T
(enqueued for processing.) 108 349.4 T
(2.) 90 333.6 T
7 10 Q
(WeakReference) 108 333.6 T
2 12 Q
( and subclasses. The referent \336elds of these weak reference objects are) 186 333.6 T
(cleared before the reference objects are enqueued for processing.) 108 320.8 T
(3.) 90 305 T
7 10 Q
(FinalReference) 108 305 T
2 12 Q
(. These weak reference objects are enqueued in a \336nalization queue.) 192 305 T
(Another Ja) 108 292.2 T
(v) 160.08 292.2 T
(a thread will call the) 165.78 292.2 T
7 10 Q
(finalize\050\051) 266.76 292.2 T
2 12 Q
( method on the referent of each) 326.76 292.2 T
7 10 Q
(FinalRef-) 479.71 292.2 T
(erence) 108 279.4 T
2 12 Q
( object in the queue.) 144 279.4 T
(4.) 90 263.6 T
7 10 Q
(PhantomReference) 108 263.6 T
2 12 Q
( and subclasses. These weak reference objects do not ha) 204 263.6 T
(v) 472.34 263.6 T
(e access to) 478.16 263.6 T
(the referent, b) 108 250.8 T
(ut since the) 174.73 250.8 T
(y are processed last, the) 229.21 250.8 T
(y can be used to trigger \322postmortem) 343.33 250.8 T
(\336nalization\323) 108 238 T
(actions.) 170.1 238 T
(Because) 209.87 238 T
(users) 252.63 238 T
(don't) 280.07 238 T
(ha) 306.33 238 T
(v) 317.42 238 T
(e) 323.24 238 T
(access) 331.35 238 T
(to) 364.77 238 T
(the) 376.88 238 T
7 10 Q
(PhantomReference) 394.32 238 T
2 12 Q
('s) 490.32 238 T
(referent) 499.92 238 T
(\336eld, users usually create subclasses of) 108 225.2 T
7 10 Q
(PhantomReference) 298.3 225.2 T
2 12 Q
( that contain interesting state.) 394.3 225.2 T
(The class) 72 200.6 T
7 10 Q
(Reference) 119.99 200.6 T
2 12 Q
( is both abstract and has package-pri) 173.99 200.6 T
(v) 348.31 200.6 T
(ate constructors, so there can be no) 354.01 200.6 T
(weak reference objects in the system other than those described abo) 72 186.6 T
(v) 397.07 186.6 T
(e.) 402.89 186.6 T
(It) 72 160.6 T
(may) 81.98 160.6 T
(tak) 105.29 160.6 T
(e) 119.83 160.6 T
(a) 127.81 160.6 T
(while) 135.78 160.6 T
(for) 165.09 160.6 T
(a) 181.73 160.6 T
(dying) 189.7 160.6 T
(referent) 219.68 160.6 T
(to) 259.64 160.6 T
(be) 271.62 160.6 T
(collected:) 285.59 160.6 T
(it) 334.9 160.6 T
(will) 344.21 160.6 T
(only) 365.53 160.6 T
(be) 389.51 160.6 T
(collected) 403.49 160.6 T
(in) 449.45 160.6 T
(the) 461.44 160.6 T
(GC) 478.75 160.6 T
(after) 498.06 160.6 T
(the) 522.69 160.6 T
(weak) 72 146.6 T
(est reference object that refers to the dying referent has been enqueued and processed by its) 97.2 146.6 T
(queue,) 72 132.6 T
(and) 106.45 132.6 T
(only) 126.57 132.6 T
(if) 150.7 132.6 T
(the) 160.83 132.6 T
(Ja) 178.29 132.6 T
(v) 188.04 132.6 T
(a) 193.74 132.6 T
(code) 201.87 132.6 T
(processing) 227.32 132.6 T
(the) 281.44 132.6 T
(queue) 298.9 132.6 T
(has) 330.35 132.6 T
(not) 349.14 132.6 T
(stored) 367.27 132.6 T
(the) 399.39 132.6 T
(pointer) 416.85 132.6 T
(to) 453.64 132.6 T
(the) 465.77 132.6 T
(dying) 483.23 132.6 T
(refer-) 513.36 132.6 T
(ent) 72 118.6 T
(some) 89.26 118.6 T
(where.) 114.3 118.6 T
(In) 149.21 118.6 T
(a) 161.81 118.6 T
(generational) 169.74 118.6 T
(collector) 231.66 118.6 T
(,) 273.17 118.6 T
(the) 278.77 118.6 T
(referent) 296.03 118.6 T
(and) 335.94 118.6 T
(all) 355.87 118.6 T
(weak) 370.47 118.6 T
(reference) 398.39 118.6 T
(objects) 445.62 118.6 T
(that) 482.22 118.6 T
(refer) 502.82 118.6 T
(to) 528.06 118.6 T
(it must reside in the same generation before the weak reference objects will be processed \050other-) 72 104.6 T
(wise, the cross generation references from the weak reference objects to the referent look lik) 72 90.6 T
(e) 515.4 90.6 T
FMENDPAGE
%%EndPage: "4" 10
%%Page: "5" 11
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 518.57 34.17 T
(age 5) 522.89 34.17 T
2 12 Q
(strong) 72 712 T
(references\051.) 104.72 712 T
(See) 163.73 712 T
(Ja) 183.77 712 T
(v) 193.53 712 T
(a) 199.23 712 T
(Softw) 207.27 712 T
(are\325) 235.82 712 T
(s) 253.81 712 T
(documentation) 261.19 712 T
([3]) 335.24 712 T
([6]) 351.95 712 T
(and) 368.66 712 T
(\322Collecting) 388.7 712 T
(W) 446.75 712 T
(eak) 457.12 712 T
(References,) 476.49 712 T
(\323) 531.96 712 T
(page) 72 698 T
(14, in the Cookbook section for more information.) 97.66 698 T
4 11 Q
(1.2.4  Class Unloading) 72 671.67 T
2 12 Q
(A) 72 646 T
(class) 83.27 646 T
(or) 109.21 646 T
(interf) 121.81 646 T
(ace) 147.68 646 T
(may) 166.27 646 T
(be) 189.55 646 T
(unloaded) 203.48 646 T
(if) 250.08 646 T
(and) 260.02 646 T
(only) 279.96 646 T
(if) 303.9 646 T
(its) 313.84 646 T
(class) 327.79 646 T
(loader) 353.73 646 T
(is) 386.32 646 T
(unreachable) 396.93 646 T
(\050the) 457.51 646 T
(de\336nition) 478.78 646 T
(of) 527.4 646 T
(unreachable is gi) 72 632 T
(v) 153.01 632 T
(en in section 12.6 in the JLS [1]\051. Classes loaded by the def) 158.83 632 T
(ault system loader) 444.01 632 T
(may not be unloaded. This rule implies that a JVM cannot unload a class if an) 72 618 T
(y instances \050direct) 445.78 618 T
(or indirect\051 of the class are reachable or if the object representing the class is reachable. In the) 72 604 T
(EVM,) 72 590 T
(class) 104.38 590 T
(unloading) 130.41 590 T
(is) 181.13 590 T
(only) 191.84 590 T
(possible) 215.89 590 T
(during) 257.93 590 T
(a) 291.98 590 T
(full) 300.02 590 T
(GC.) 319.4 590 T
(Generational) 341.78 590 T
(collectors) 406.47 590 T
(in) 455.83 590 T
(the) 467.88 590 T
(EVM) 485.26 590 T
(need) 514.63 590 T
(to treat classes as if the) 72 576 T
(y are part of the oldest generation. See section 12.8 in the JLS [1] and sec-) 182.8 576 T
(tion 2.16.8 in the JVM spec [5] for more details.) 72 562 T
4 F
(1.3  Implementation Issues) 72 533 T
2 F
(A collector needs to be designed with kno) 72 508 T
(wledge of certain implementation details of the EVM) 273.34 508 T
(and) 72 494 T
(its) 92.04 494 T
(memory) 106.09 494 T
(system.) 148.8 494 T
(The) 187.85 494 T
(memory) 209.22 494 T
(system) 251.92 494 T
(tak) 287.97 494 T
(es) 302.52 494 T
(care) 315.22 494 T
(of) 337.91 494 T
(man) 350.62 494 T
(y) 371.11 494 T
(issues) 379.82 494 T
(that) 411.2 494 T
(are) 431.91 494 T
(common) 449.27 494 T
(to) 493.98 494 T
(all) 506.03 494 T
(g) 520.74 494 T
(ar-) 526.68 494 T
(bage collectors, b) 72 480 T
(ut it requires some cooperation.) 156.07 480 T
4 11 Q
(1.3.1  Object Lay) 72 453.67 T
(out) 152.08 453.67 T
2 12 Q
(All) 72 428 T
(objects) 89.93 428 T
(be) 126.52 428 T
(gin) 137.67 428 T
(with) 155.6 428 T
(a) 179.53 428 T
(header) 187.46 428 T
(.) 218.78 428 T
(The) 224.37 428 T
(header) 245.63 428 T
(contains) 280.2 428 T
(a) 322.79 428 T
(pointer) 330.72 428 T
(to) 367.31 428 T
(class) 379.24 428 T
(information) 405.16 428 T
(and) 464.42 428 T
(a) 484.35 428 T
(w) 492.27 428 T
(ord) 500.81 428 T
(that) 519.4 428 T
(hold the object's hash code, lock \336elds, and bits that can hold age information \050for generational) 72 414 T
(collectors\051. The rest of an object contains zero or more 32-bit w) 72 400 T
(ords to hold object \336elds, or a) 377.81 400 T
(w) 72 386 T
(ord holding the array length follo) 80.54 386 T
(wed by array elements.) 239.89 386 T
7 10 Q
(long) 354.19 386 T
2 12 Q
( and) 378.19 386 T
7 10 Q
(double) 401.52 386 T
2 12 Q
( object \336elds and) 437.52 386 T
(array elements are not double w) 72 372 T
(ord aligned.) 225.5 372 T
4 10 Q
(FIGURE 2. An Example of a 3-\336eld Object's Lay) 201.47 237.33 T
(out) 410.39 237.33 T
2 12 Q
(An object's class information is stored in a) 72 210 T
7 10 Q
(NearClass) 278.81 210 T
2 12 Q
( structure. A) 332.81 210 T
7 10 Q
(NearClass) 395.46 210 T
2 12 Q
( stores the basic) 449.46 210 T
(information needed to call a virtual method or perform GC. This includes the object's method) 72 196 T
(table,) 72 182 T
(size,) 101.16 182 T
(and) 125.64 182 T
(\322instance) 145.8 182 T
(layout) 193.28 182 T
(map.) 226.11 182 T
(\323) 248.93 182 T
(The) 257.09 182 T
7 10 Q
(NearClass) 278.58 182 T
2 12 Q
(also) 335.41 182 T
(contains) 357.57 182 T
(a) 400.39 182 T
(pointer) 408.55 182 T
(to) 445.37 182 T
(a) 457.54 182 T
(more) 465.69 182 T
(complete) 493.18 182 T
(representation of a class called the) 72 168 T
7 10 Q
(Class) 239.95 168 T
2 12 Q
( structure. Neither the) 269.95 168 T
7 10 Q
(NearClass) 377.59 168 T
2 12 Q
( nor) 431.59 168 T
7 10 Q
(Class) 453.59 168 T
2 12 Q
( structures) 483.59 168 T
(are objects. Note that an object does not ha) 72 154 T
(v) 278.05 154 T
(e an ordinary reference to its) 283.87 154 T
7 10 Q
(java.lang.Class) 424.49 154 T
2 12 Q
(instance,) 72 140 T
(so) 117.18 140 T
(simply) 130.71 140 T
(scanning) 166.25 140 T
(an) 211.77 140 T
(object's) 225.96 140 T
(reference) 264.98 140 T
(\336elds) 312.46 140 T
(will) 341.33 140 T
(not) 362.86 140 T
(scan) 381.06 140 T
(its) 405.24 140 T
(class) 419.45 140 T
(\050an) 445.63 140 T
(additional) 463.82 140 T
(oper-) 514.68 140 T
(ation is required\051. See \322Object Header Information,) 72 126 T
(\323 page) 317.76 126 T
(27, for more details on header w) 351.74 126 T
(ords.) 507.25 126 T
(All objects are at least tw) 72 100 T
(o w) 193.52 100 T
(ords long, and are minimally aligned at a w) 211.07 100 T
(ord boundary \0504-byte) 419.26 100 T
(alignment\051. This means that a collector can count on the lo) 72 86 T
(w-order bits \050at least tw) 353.33 86 T
(o\051 of an object) 467.18 86 T
(pointer being zero, and can set those bits during g) 72 72 T
(arbage collection. A collector can use the) 310.57 72 T
72 63 540 720 C
0 0 0 1 0 0 0 1 K
140 258 472 342 C
176.8 261.6 435.2 338.4 R
7 X
V
176.8 261.6 435.2 338.4 C
0 0 0 0.05 0.95 0.95 0.95 1 K
179.2 312.8 267.2 331.2 R
0 X
V
0 0 0 0.2 0.8 0.8 0.8 1 K
179.2 304 207.2 319.2 R
V
179.2 304 207.2 319.2 R
V
0 0 0 1 0 0 0 1 K
179.2 304 207.2 319.2 R
1 H
2 Z
N
140 258 472 342 C
179.2 305.6 205.6 319.2 C
0 0 0 1 0 0 0 1 K
1 12.1 Q
0 X
(hash) 181.6 308.03 T
140 258 472 342 C
176.8 262.4 434.4 338.4 C
0 0 0 0.2 0.8 0.8 0.8 1 K
205.6 304 235.2 319.2 R
0 X
V
204.8 304.8 234.4 320 R
V
0 0 0 1 0 0 0 1 K
204.8 304.8 234.4 320 R
1 H
2 Z
N
140 258 472 342 C
205.6 305.6 233.6 319.2 C
0 0 0 1 0 0 0 1 K
1 12.1 Q
0 X
(age) 213.6 308.03 T
140 258 472 342 C
176.8 262.4 434.4 338.4 C
0 0 0 0.2 0.8 0.8 0.8 1 K
233.6 304 310.4 319.2 R
0 X
V
232.8 304.8 309.6 320 R
V
0 0 0 1 0 0 0 1 K
232.8 304.8 309.6 320 R
1 H
2 Z
N
140 258 472 342 C
233.6 305.6 308.8 319.2 C
0 0 0 1 0 0 0 1 K
1 12.1 Q
0 X
(\245lock_state) 246.4 308.03 T
140 258 472 342 C
176.8 262.4 434.4 338.4 C
0 0 0 0.2 0.8 0.8 0.8 1 K
179.2 317.6 310.4 332.8 R
0 X
V
178.4 318.4 309.6 333.6 R
V
0 0 0 1 0 0 0 1 K
178.4 318.4 309.6 333.6 R
1 H
2 Z
N
140 258 472 342 C
179.2 319.2 308.8 332.8 C
0 0 0 1 0 0 0 1 K
1 12.1 Q
0 X
(\245  nearClass ptr) 187.2 321.63 T
7 F
(00) 277.6 321.69 T
9 F
(\334) 296.8 321.9 T
140 258 472 342 C
176.8 262.4 434.4 338.4 C
0 0 0 0 1 1 1 1 K
179.2 291.2 310.4 305.6 R
0 X
V
178.4 292 309.6 306.4 R
V
0 0 0 1 0 0 0 1 K
178.4 292 309.6 306.4 R
1 H
2 Z
N
140 258 472 342 C
179.2 292.8 308.8 305.6 C
0 0 0 1 0 0 0 1 K
7 12.1 Q
0 X
(7EFF00) 261.6 295.29 T
140 258 472 342 C
176.8 262.4 434.4 338.4 C
0 0 0 0 1 1 1 1 K
179.2 276.8 310.4 292.8 R
0 X
V
178.4 277.6 309.6 293.6 R
V
0 0 0 1 0 0 0 1 K
178.4 277.6 309.6 293.6 R
1 H
2 Z
N
140 258 472 342 C
179.2 278.4 308.8 292.8 C
0 0 0 1 0 0 0 1 K
7 12.1 Q
0 X
(\245object ptr) 196 281.69 T
9 F
(\334) 296 281.9 T
140 258 472 342 C
176.8 262.4 434.4 338.4 C
0 0 0 0 1 1 1 1 K
179.2 263.2 310.4 278.4 R
0 X
V
178.4 264 309.6 279.2 R
V
0 0 0 1 0 0 0 1 K
178.4 264 309.6 279.2 R
1 H
2 Z
N
140 258 472 342 C
179.2 264.8 308.8 278.4 C
0 0 0 1 0 0 0 1 K
7 12.1 Q
0 X
(false) 269.6 268.09 T
140 258 472 342 C
334.4 309.6 432.8 322.4 C
0 0 0 1 0 0 0 1 K
1 12.1 Q
0 X
(header fields) 334.4 312.03 T
140 258 472 342 C
334.4 277.6 428.8 291.2 C
0 0 0 1 0 0 0 1 K
1 12.1 Q
0 X
(object) 334.4 280.83 T
(fields) 372 280.83 T
140 258 472 342 C
0 0 0 1 0 0 0 1 K
72 63 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "5" 11
%%Page: "6" 12
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 6) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
7 10 Q
0 X
(OBJECT_ALIGNMENT_MASK) 72 712 T
2 12 Q
( to get access to those bits. Similarly) 198 712 T
(, the) 372.55 712 T
7 10 Q
(NearClass) 396.22 712 T
2 12 Q
( is aligned, so a) 450.22 712 T
(collector can use lo) 72 698 T
(w-order bits of the) 164.68 698 T
7 10 Q
(nearClass) 256.66 698 T
2 12 Q
( pointer \336eld in an object's header to record) 310.66 698 T
(things lik) 72 684 T
(e mark bits or indirection bits during collection. A collector can use the) 116.89 684 T
7 10 Q
(HEADER_ALIGNMENT_MASK) 72 670 T
2 12 Q
( to get access to those bits.) 198 670 T
(There are prede\336ned macros that test, mask, and include some of these lo) 72 644 T
(w-order bits which are) 423.62 644 T
(described in \322Marking Macros,) 72 630 T
(\323 page) 221.12 630 T
(29.) 255.11 630 T
4 11 Q
(1.3.2  Roots and Memory Consistency) 72 603.67 T
2 12 Q
(The collector needs to kno) 72 578 T
(w the locations of all the pointers to objects in the system: in Ja) 199.01 578 T
(v) 503.09 578 T
(a) 508.79 578 T
(stacks, Ja) 72 564 T
(v) 117.08 564 T
(a static v) 122.78 564 T
(ariables, JVM internal global and local roots, etc. But recording where all) 165.14 564 T
(pointers are in the system at e) 72 550 T
(v) 214.34 550 T
(ery instant w) 220.16 550 T
(ould tak) 282.04 550 T
(e too much time and space. So the JVM) 320.92 550 T
(arranges) 72 536 T
(e) 115.24 536 T
(x) 120.39 536 T
(ecution) 126.21 536 T
(such) 164.13 536 T
(that) 188.72 536 T
(each) 209.31 536 T
(thread) 233.89 536 T
(will) 266.47 536 T
(kno) 287.73 536 T
(w) 305.43 536 T
(where) 316.69 536 T
(its) 348.6 536 T
(pointers) 362.53 536 T
(are) 403.79 536 T
(at) 421.04 536 T
(frequent) 432.29 536 T
(interv) 474.87 536 T
(als.) 502.57 536 T
(If) 521.49 536 T
(a) 532.08 536 T
(thread) 72 522 T
(is) 104.75 522 T
(at) 115.52 522 T
(a) 126.94 522 T
(point) 135.04 522 T
(where) 162.47 522 T
(all) 194.55 522 T
(pointers) 209.31 522 T
(in) 250.74 522 T
(the) 262.84 522 T
(thread's) 280.26 522 T
(stack) 319.84 522 T
(are) 347.26 522 T
(kno) 364.68 522 T
(wn,) 382.38 522 T
(it) 402.8 522 T
(is) 412.24 522 T
(called) 423.01 522 T
(\322consistent.) 454.42 522 T
(\323) 509.91 522 T
(Oth-) 518 522 T
(erwise,) 72 508 T
(it) 109.27 508 T
(is) 118.89 508 T
(called) 129.84 508 T
(\322inconsistent.) 161.44 508 T
(\323) 226.26 508 T
(A) 234.54 508 T
(thread's) 246.15 508 T
(stack) 285.91 508 T
(is) 313.52 508 T
(separated) 324.46 508 T
(into) 372.72 508 T
(a) 394.34 508 T
(nati) 402.62 508 T
(v) 420.32 508 T
(e) 426.14 508 T
(stack) 434.41 508 T
(pro) 462.02 508 T
(vided) 477.83 508 T
(by) 507.44 508 T
(the) 522.39 508 T
(OS) 72 494 T
(where) 90.05 494 T
(VM) 122.08 494 T
(code,) 144.12 494 T
(compiled) 172.49 494 T
(methods,) 219.86 494 T
(and) 266.24 494 T
(nati) 286.28 494 T
(v) 303.98 494 T
(e) 309.8 494 T
(methods) 317.84 494 T
(run,) 361.22 494 T
(and) 382.93 494 T
(a) 402.97 494 T
(Ja) 411.01 494 T
(v) 420.77 494 T
(a) 426.47 494 T
(stack) 434.51 494 T
(managed) 461.88 494 T
(by) 507.91 494 T
(the) 522.62 494 T
(JVM where interpreted methods run.) 72 480 T
(When some part of the JVM decides to do a g) 72 454 T
(arbage collection, the memory system suspends all) 291.9 454 T
(threads.) 72 440 T
(Then) 112.35 440 T
(it) 139.7 440 T
(resumes) 149.07 440 T
(all) 191.08 440 T
(inconsistent) 205.77 440 T
(threads) 265.8 440 T
(after) 303.15 440 T
(arranging) 327.83 440 T
(it) 376.5 440 T
(so) 385.87 440 T
(that) 399.23 440 T
(each) 419.92 440 T
(thread) 444.6 440 T
(will) 477.28 440 T
(suspend) 498.64 440 T
(itself when it becomes consistent. When all of the threads are stopped consistently) 72 426 T
(, the memory) 466.16 426 T
(system calls the collector to do actual collection. Inconsistent threads suspended themselv) 72 412 T
(es by) 503.1 412 T
(either polling a v) 72 398 T
(ariable and suspending e) 153.36 398 T
(xplicitly when the thread becomes consistent, or by the) 271.49 398 T
(memory system inserting trap instructions at the points where threads will become consistent.) 72 384 T
(The JVM code itself \050such as class loading\051 normally is consistent when it runs. Most JVM code) 72 358 T
(accesses) 72 344 T
(objects) 115.24 344 T
(using) 151.84 344 T
(the) 180.44 344 T
(lo) 197.71 344 T
(w) 206.74 344 T
(le) 218.01 344 T
(v) 226.37 344 T
(el) 232.19 344 T
(nati) 243.46 344 T
(v) 261.15 344 T
(e) 266.98 344 T
(interf) 274.9 344 T
(ace) 300.77 344 T
(\050LLNI\051.) 319.36 344 T
(The) 360.27 344 T
(LLNI) 381.53 344 T
(is) 411.46 344 T
(a) 422.06 344 T
(layer) 429.99 344 T
(o) 456.58 344 T
(v) 462.4 344 T
(er) 468.22 344 T
(the) 480.14 344 T
(memory) 497.4 344 T
(system that allo) 72 330 T
(ws the JVM to refer to objects using LLNI handles \050pointers to \322local roots\323) 147.04 330 T
(which) 72 316 T
(point) 103.89 316 T
(to) 131.13 316 T
(an) 143.03 316 T
(object\051,) 156.92 316 T
(and) 195.81 316 T
(pro) 215.7 316 T
(vides) 231.52 316 T
(man) 259.41 316 T
(y) 279.9 316 T
(accessor) 288.46 316 T
(operations.) 331.67 316 T
(When) 387.22 316 T
(an) 418.44 316 T
(LLNI) 432.34 316 T
(operation) 462.22 316 T
(needs) 510.11 316 T
(to dereference a handle, it becomes inconsistent temporarily) 72 302 T
(. The JVM code has to re) 359.82 302 T
(gister all) 480.61 302 T
(local roots so the memory system will kno) 72 288 T
(w where to \336nd direct pointers to objects.) 275.36 288 T
(Ja) 72 262 T
(v) 81.76 262 T
(a code \050either running in the interpreter loop or as compiled code\051 normally is inconsistent) 87.46 262 T
(when it is e) 72 248 T
(x) 126.82 248 T
(ecuted, so it can use pointers to objects without informing the memory system. But) 132.64 248 T
(Ja) 72 234 T
(v) 81.76 234 T
(a code must become consistent at frequent interv) 87.46 234 T
(als or threads that need to allocate objects) 321.44 234 T
(may be arbitrarily delayed. So the interpreter and JIT compiler generate \322stack maps\323 for e) 72 220 T
(v) 507.91 220 T
(ery) 513.73 220 T
(method call and backw) 72 206 T
(ard branch, which describe where the pointers are for a particular method) 182.86 206 T
(and program counter \050pc\051.) 72 192 T
(Nati) 72 166 T
(v) 92.36 166 T
(e methods almost al) 98.18 166 T
(w) 193.73 166 T
(ays run while consistent. The only JNI function that mak) 202.27 166 T
(es a thread) 474.79 166 T
(inconsistent is) 72 152 T
7 10 Q
(GetPrimitiveArrayCritical) 143.34 152 T
2 12 Q
(. The only JNI functions that are callable while a) 293.34 152 T
(thread is inconsistent are more calls to) 72 138 T
7 10 Q
(GetPrimitiveArrayCritical) 258.97 138 T
2 12 Q
( and) 408.97 138 T
7 10 Q
(ReleasePrimitive-) 432.3 138 T
(ArrayCritical) 72 124 T
2 12 Q
(.) 150 124 T
FMENDPAGE
%%EndPage: "6" 12
%%Page: "7" 13
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 518.57 34.17 T
(age 7) 522.89 34.17 T
4 11 Q
(1.3.3  Locking) 72 712.67 T
2 12 Q
(In) 72 687 T
(order) 84.74 687 T
(to) 112.81 687 T
(support) 124.89 687 T
(multiple) 163.63 687 T
(threads,) 206.38 687 T
(the) 246.79 687 T
(memory) 264.2 687 T
(system) 306.94 687 T
(uses) 343.02 687 T
(a) 366.43 687 T
(\322heap) 374.5 687 T
(lock\323) 405.23 687 T
(around) 433.96 687 T
(an) 470.03 687 T
(y) 481.18 687 T
(allocation) 489.93 687 T
(from) 72 673 T
(the) 98.16 673 T
(global) 115.65 673 T
(heap) 148.48 673 T
(and) 173.96 673 T
(around) 194.12 673 T
(GC) 230.27 673 T
(itself.) 249.77 673 T
(Local) 279.6 673 T
(allocation) 309.75 673 T
(b) 359.9 673 T
(uf) 365.67 673 T
(fers) 375.36 673 T
(\050LABs\051,) 396.18 673 T
(described) 438.67 673 T
(in) 487.48 673 T
(\322) 499.64 673 T
(Alloca-) 504.01 673 T
(tion,) 72 659 T
(\323) 92.83 659 T
(page) 101.08 659 T
(11,) 126.74 659 T
(reduce) 144.66 659 T
(contention) 179.57 659 T
(on) 233.16 659 T
(this) 248.08 659 T
(lock.) 268.34 659 T
(The) 294.93 659 T
(memory) 316.52 659 T
(system) 359.44 659 T
(also) 395.7 659 T
(depends) 417.95 659 T
(on) 460.2 659 T
(v) 475.12 659 T
(arious) 480.82 659 T
(JVM) 513.08 659 T
(data) 72 645 T
(structures) 94.73 645 T
(that) 144.13 645 T
(are) 164.88 645 T
(protected) 182.27 645 T
(by) 229.66 645 T
(locks,) 244.41 645 T
(such) 275.48 645 T
(as) 300.22 645 T
(the) 312.96 645 T
(table) 330.36 645 T
(of) 356.43 645 T
(all) 369.17 645 T
(classes) 383.91 645 T
(and) 419.98 645 T
(the) 440.05 645 T
(thread) 457.46 645 T
(queue.) 490.19 645 T
(So) 524.59 645 T
(the memory system tak) 72 631 T
(es care of acquiring and releasing these locks around g) 183.54 631 T
(arbage collection.) 445.74 631 T
(If a collector needs other locks around collection, the collector can create and re) 72 605 T
(gister them with) 455.7 605 T
(the memory system. The memory system tak) 72 591 T
(es care of acquiring and releasing these \322GC locks\323) 287.53 591 T
(in the correct order) 72 577 T
(. See \322Locking Support,) 162.97 577 T
(\323 page) 277.79 577 T
(34, for more information.) 311.77 577 T
4 11 Q
(1.3.4  Differ) 72 550.67 T
(ences Between EVM and JDK 1.x Classic) 127.4 550.67 T
2 12 Q
(Some readers may ha) 72 525 T
(v) 174.73 525 T
(e kno) 180.55 525 T
(wledge of the Ja) 206.58 525 T
(v) 284.65 525 T
(a De) 290.35 525 T
(v) 312.37 525 T
(elopment Kit \050JDK\051 1.x classic VM architec-) 318.19 525 T
(ture. The EVM has man) 72 511 T
(y similarities to the JDK classic VM architecture, b) 187.46 511 T
(ut some dif) 433.52 511 T
(ferences) 487.22 511 T
(are w) 72 497 T
(orth pointing out:) 98.2 497 T
10 F
(\245) 90 477 T
2 F
(Ja) 108 477 T
(v) 117.76 477 T
(a) 123.46 477 T
(code) 131.5 477 T
(runs) 156.87 477 T
(without) 180.25 477 T
(handles.) 219.64 477 T
(All) 262.01 477 T
(object-to-object) 280.07 477 T
(references) 358.77 477 T
(use) 410.78 477 T
(direct) 429.49 477 T
(pointers.) 459.53 477 T
(C) 503.91 477 T
(code) 514.63 477 T
(usually refers to objects via JNI or LLNI handles, ho) 108 463 T
(we) 360.98 463 T
(v) 374.68 463 T
(er) 380.5 463 T
(.) 389.16 463 T
10 F
(\245) 90 446 T
2 F
(The) 108 446 T
(Ja) 129.35 446 T
(v) 139.1 446 T
(a) 144.8 446 T
(heap) 152.82 446 T
(\050the) 178.16 446 T
(memory) 199.51 446 T
(managed) 242.19 446 T
(by) 288.2 446 T
(the) 302.89 446 T
(memory) 320.24 446 T
(system\051) 362.92 446 T
(contains) 402.94 446 T
(only) 445.62 446 T
(objects.) 469.65 446 T
(There) 509.33 446 T
(are) 108 432 T
(no) 125.63 432 T
(C) 140.6 432 T
(structures) 151.58 432 T
(in) 201.21 432 T
(the) 213.52 432 T
(Ja) 231.16 432 T
(v) 240.92 432 T
(a) 246.62 432 T
(heap.) 254.92 432 T
(This) 283.55 432 T
(means) 307.86 432 T
(that) 341.5 432 T
(the) 362.48 432 T
7 10 Q
(NearClass) 380.11 432 T
2 12 Q
(and) 437.09 432 T
7 10 Q
(Class) 457.39 432 T
2 12 Q
(structures) 490.37 432 T
(\050similar to) 108 418 T
7 10 Q
(ClassClass) 160.67 418 T
2 12 Q
( in JDK classic\051 are in the C heap, while the corresponding) 220.67 418 T
7 10 Q
(java.lang.Class) 108 404 T
2 12 Q
( instance is in the Ja) 198 404 T
(v) 294.08 404 T
(a heap.) 299.78 404 T
10 F
(\245) 90 387 T
2 F
(Array objects ha) 108 387 T
(v) 187.07 387 T
(e object headers lik) 192.89 387 T
(e other objects do. In particular) 285.74 387 T
(, the headers ha) 435.23 387 T
(v) 509.63 387 T
(e a) 515.45 387 T
(pointer to a) 108 373 T
7 10 Q
(NearClass) 165.66 373 T
2 12 Q
( that describes the \322) 219.66 373 T
(Array of) 313.34 373 T
5 F
(F) 357.32 373 T
(oo) 363.4 373 T
2 F
(\323 class, where) 375.4 373 T
5 F
(F) 445.37 373 T
(oo) 451.44 373 T
2 F
( is the class of) 463.44 373 T
(the array elements \050and there is not an) 108 359 T
(y information lurking at the end of the array\051.) 290.77 359 T
10 F
(\245) 90 342 T
2 F
(Object) 108 342 T
(locking) 142.8 342 T
(does) 181.62 342 T
(not) 206.42 342 T
(use) 224.57 342 T
(OS-le) 243.38 342 T
(v) 271.08 342 T
(el) 276.9 342 T
(monitors,) 288.37 342 T
(b) 336.86 342 T
(ut) 342.62 342 T
(an) 354.76 342 T
(optimized) 368.9 342 T
(light-weight) 419.72 342 T
(locking) 481.2 342 T
(pro-) 520.01 342 T
(tocol.) 108 328 T
10 F
(\245) 90 311 T
2 F
(Because) 108 311 T
(references) 150.8 311 T
(in) 202.91 311 T
(the) 215.06 311 T
(heap) 232.54 311 T
(and) 258.02 311 T
(much) 278.16 311 T
(of) 307.64 311 T
(the) 320.45 311 T
(VM) 337.93 311 T
(are) 360.08 311 T
(direct) 377.55 311 T
(references) 407.69 311 T
(and) 459.8 311 T
(because) 479.94 311 T
(g) 520.74 311 T
(ar-) 526.68 311 T
(bage collection may cause objects to be relocated, w) 108 297 T
(ork must be done to update these ref-) 359.48 297 T
(erences to the objects' ne) 108 283 T
(w locations.) 227.16 283 T
FMENDPAGE
%%EndPage: "7" 13
%%Page: "8" 14
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 8) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
FMENDPAGE
%%EndPage: "8" 14
%%Page: "9" 15
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 518.57 34.17 T
(age 9) 522.89 34.17 T
4 14 Q
(2.  Collector Cookbook) 237.17 710.67 T
2 12 Q
(A collector must support \336) 72 682 T
(v) 200.36 682 T
(e core routines, and se) 206.18 682 T
(v) 312.85 682 T
(eral supporting routines. In addition, it may) 318.67 682 T
(supply read and write barriers that the rest of the JVM must use. This section describes the basic) 72 668 T
(header \336les and types that a collector deals with, and the routines and barriers that a collector) 72 654 T
(should support. It also describes ho) 72 640 T
(w the collector must use major routines that the memory sys-) 241.02 640 T
(tem pro) 72 626 T
(vides.) 108.82 626 T
4 F
(2.1  Pr) 72 597 T
(eliminary Inf) 105.44 597 T
(ormation) 172.81 597 T
2 F
(Before) 72 572 T
(we) 107.36 572 T
(look) 124.06 572 T
(at) 148.11 572 T
(what) 159.48 572 T
(a) 185.51 572 T
(collector) 193.55 572 T
(should) 238.25 572 T
(pro) 272.96 572 T
(vide,) 288.78 572 T
(it) 315.15 572 T
(is) 324.53 572 T
(useful) 335.24 572 T
(to) 367.28 572 T
(e) 379.33 572 T
(xplain) 384.47 572 T
(where) 417.18 572 T
(the) 449.21 572 T
(de\336nitions) 466.58 572 T
(and) 519.96 572 T
(interf) 72 558 T
(aces can be found and what the types are that are used in these interf) 97.87 558 T
(aces.) 426.32 558 T
(Each macro or function de\336nition described in the Cookbook and Reference sections f) 72 532 T
(alls into) 486.47 532 T
(one of four cate) 72 518 T
(gories.) 147.46 518 T
10 F
(\245) 90 498 T
8 10 Q
([must define]) 108 498 T
2 12 Q
(. The collector must de\336ne the macro or function.) 186 498 T
10 F
(\245) 90 481 T
8 10 Q
([may define]) 108 481 T
2 12 Q
(. The collector may de\336ne the macro or function to enable optional or non-) 180 481 T
(def) 108 467 T
(ault beha) 123.2 467 T
(vior) 166.62 467 T
(.) 185.29 467 T
10 F
(\245) 90 450 T
8 10 Q
([must) 108 450 T
(use]) 143.55 450 T
2 12 Q
(.) 167.55 450 T
(The) 173.32 450 T
(collector) 194.76 450 T
(must) 239.52 450 T
(use) 265.63 450 T
(the) 284.4 450 T
(macro) 301.84 450 T
(or) 334.6 450 T
(call) 347.37 450 T
(the) 367.48 450 T
(function) 384.92 450 T
(to) 427.68 450 T
(implement) 439.8 450 T
(basic) 493.9 450 T
(col-) 521.34 450 T
(lector beha) 108 436 T
(vior) 160.74 436 T
(.) 179.41 436 T
10 F
(\245) 90 419 T
8 10 Q
([may use]) 108 419 T
2 12 Q
(. The collector may use the macro or call the function as needed.) 162 419 T
(All de\336nitions are in the) 72 393 T
8 10 Q
([may use]) 191.66 393 T
2 12 Q
( cate) 245.66 393 T
(gory unless otherwise noted.) 267.8 393 T
4 11 Q
(2.1.1  Code Or) 72 366.67 T
(ganization) 140.02 366.67 T
2 12 Q
(An) 72 341 T
(y headers \336les that are part of a collector should be placed in a subdirectory of) 86.48 341 T
7 10 Q
(src/share/) 465.06 341 T
(javavm/include/gc) 72 327 T
2 12 Q
( named for the collector that uses them. This directory name should also be) 174 327 T
(used for the source directory for the collector under) 72 313 T
7 10 Q
(src/share/javavm/runtime/gc) 322.26 313 T
2 12 Q
(. F) 484.26 313 T
(or e) 496.75 313 T
(xam-) 514.9 313 T
(ple, for the ReallySimpleHeap collector described belo) 72 299 T
(w) 335.32 299 T
(, the collector's header \336les and source) 343.2 299 T
(\336les w) 72 285 T
(ould be placed in the follo) 103.55 285 T
(wing tw) 228.9 285 T
(o directories:) 267.78 285 T
7 10 Q
(    src/share/javavm/include/gc/reallysimple) 72 266.33 T
(    src/share/javavm/runtime/gc/reallysimple) 72 254.33 T
2 12 Q
(The) 72 217 T
(or) 93.39 217 T
(g) 103.17 217 T
(anization) 109.11 217 T
(and) 155.83 217 T
(b) 175.88 217 T
(uild) 181.64 217 T
(process) 203.04 217 T
(for) 241.76 217 T
(the) 258.48 217 T
(EVM) 275.87 217 T
(as) 305.26 217 T
(a) 317.99 217 T
(whole) 326.04 217 T
(is) 358.1 217 T
(be) 368.83 217 T
(yond) 379.98 217 T
(the) 406.71 217 T
(scope) 424.1 217 T
(of) 454.15 217 T
(this) 466.88 217 T
(document.) 486.94 217 T
4 11 Q
(2.1.2  De\336nitions) 72 190.67 T
2 12 Q
(The) 72 165 T
(de\336nitions) 93.22 165 T
(used) 146.46 165 T
(by) 171.02 165 T
(a) 185.58 165 T
(collector) 193.47 165 T
(come) 238.02 165 T
(from) 266.57 165 T
(se) 292.46 165 T
(v) 302.16 165 T
(eral) 307.98 165 T
(header) 328.53 165 T
(\336les.) 363.07 165 T
(T) 388.64 165 T
(o) 395.01 165 T
(simplify) 403.57 165 T
(the) 446.14 165 T
(de) 463.37 165 T
(v) 474.4 165 T
(elopment) 480.22 165 T
(of) 527.44 165 T
(collectors, all of these header \336les ha) 72 151 T
(v) 249.38 151 T
(e been grouped together in a common) 255.2 151 T
7 10 Q
(gc/specific_gc.h) 439.5 151 T
2 12 Q
(header \336le. Collectors should include this header \336le along with an) 72 137 T
(y collector) 392.78 137 T
(-speci\336c header) 443.53 137 T
(\336les. See \322Header Files,) 72 123 T
(\323 page) 186.8 123 T
(25, for more details.) 220.79 123 T
(Note that the names of all the routines that the collector must de\336ne start with \322) 72 97 T
7 10 Q
(specific) 453.62 97 T
2 12 Q
(,) 501.62 97 T
(\323 and) 503.78 97 T
(the names of all the barrier macros end with \322) 72 83 T
7 10 Q
(_BARRIER) 291.61 83 T
2 12 Q
(.) 339.61 83 T
(\323) 341.77 83 T
FMENDPAGE
%%EndPage: "9" 15
%%Page: "10" 16
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 10) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
4 11 Q
0 X
(2.1.3  T) 72 712.67 T
(ypes) 106.02 712.67 T
2 12 Q
(There) 72 687 T
(are) 102.57 687 T
(a) 119.82 687 T
(lar) 127.73 687 T
(ge) 140.18 687 T
(number) 154.1 687 T
(of) 193.35 687 T
(types) 205.93 687 T
(de\336ned) 233.85 687 T
(by) 271.77 687 T
(the) 286.36 687 T
(whole) 303.62 687 T
(JVM.) 335.53 687 T
(F) 365.12 687 T
(ortunately) 371.62 687 T
(,) 419.49 687 T
(there) 425.08 687 T
(are) 451.66 687 T
(only) 468.9 687 T
(a) 492.83 687 T
(handful) 500.75 687 T
(that a collector needs to use.) 72 673 T
4 11 Q
(2.1.3.1  Primiti) 72 646.67 T
(v) 141.24 646.67 T
(e T) 146.63 646.67 T
(ypes) 160.79 646.67 T
2 12 Q
(The follo) 72 621 T
(wing primiti) 116.03 621 T
(v) 175.4 621 T
(e \050non-object\051 types are commonly used in the interf) 181.22 621 T
(aces for the collector:) 433.06 621 T
10 F
(\245) 90 601 T
10 10 Q
(bool_t) 108 601 T
2 12 Q
( - a simple boolean type with tw) 144 601 T
(o v) 298.2 601 T
(alues:) 312.9 601 T
7 10 Q
(TRUE) 343.9 601 T
2 12 Q
( or) 367.9 601 T
7 10 Q
(FALSE) 383.89 601 T
2 12 Q
( \0501 or 0\051.) 413.89 601 T
10 F
(\245) 90 584 T
10 10 Q
(java_int) 108 584 T
2 12 Q
( - the inte) 156 584 T
(gral type for Ja) 201.48 584 T
(v) 273.55 584 T
(a language inte) 279.25 584 T
(gers \050al) 351.72 584 T
(w) 387.25 584 T
(ays 32-bit\051.) 395.8 584 T
10 F
(\245) 90 567 T
10 10 Q
(uintptr_t) 108 567 T
2 12 Q
( - unsigned inte) 162 567 T
(gers big enough to hold pointer v) 236.15 567 T
(alues.) 395.17 567 T
4 11 Q
(2.1.3.2  Object T) 72 540.67 T
(ypes) 148.79 540.67 T
2 12 Q
(The) 72 515 T
(primary) 93.27 515 T
(type) 133.88 515 T
(used) 157.16 515 T
(for) 181.77 515 T
(representing) 198.37 515 T
(objects) 260.3 515 T
(is:) 296.91 515 T
4 10 Q
(ja) 310.87 515 T
(v) 318.95 515 T
(a_lang_Object) 323.85 515 T
2 12 Q
(.) 386.07 515 T
(It) 391.68 515 T
(de\336nes) 401.63 515 T
(the) 438.24 515 T
(basic) 455.51 515 T
(structure) 482.79 515 T
(of) 527.39 515 T
(the start of an) 72 501 T
(y object in the heap:) 137.47 501 T
7 10 Q
(    struct {) 72 482.33 T
(        ObjHeader h;) 72 470.33 T
(        word32 fields[1]; /* actually zero or more fields */) 72 458.33 T
(    }) 72 446.33 T
2 12 Q
(This) 72 421 T
(structure) 96.27 421 T
(is) 141.18 421 T
(described) 152.12 421 T
(in) 201.03 421 T
(\322Object) 213.3 421 T
(Layout,) 253.54 421 T
(\323) 289.7 421 T
(page) 297.96 421 T
(5) 323.61 421 T
(in) 332.55 421 T
(the) 344.81 421 T
(Introduction) 362.4 421 T
(section.) 424.66 421 T
(There) 464.59 421 T
(are) 495.5 421 T
(three) 513.08 421 T
(pointer) 72 407 T
(types) 108.95 407 T
(de\336ned) 137.23 407 T
(for) 175.51 407 T
(each) 192.46 407 T
(class) 217.39 407 T
(that) 243.67 407 T
(the) 264.62 407 T
(JVM) 282.24 407 T
(needs) 309.19 407 T
(intimate) 339.47 407 T
(kno) 381.76 407 T
(wledge) 399.46 407 T
(of,) 437.06 407 T
(b) 453.01 407 T
(ut) 458.77 407 T
(collectors) 471.06 407 T
(typ-) 520.67 407 T
(ically pass references to objects either as) 72 393 T
7 10 Q
(java_lang_Object*) 270.28 393 T
2 12 Q
( or) 372.28 393 T
7 10 Q
(Ijava_lang_Object) 388.27 393 T
2 12 Q
(.) 490.27 393 T
10 F
(\245) 90 373 T
10 10 Q
(java_lang_Object*) 108 373 T
2 12 Q
(is) 212.91 373 T
(a) 223.83 373 T
(direct) 232.07 373 T
(pointer) 262.31 373 T
(to) 299.22 373 T
(an) 311.47 373 T
(object,) 325.71 373 T
(and) 360.95 373 T
(should) 381.19 373 T
(only) 416.11 373 T
(be) 440.36 373 T
(used) 454.6 373 T
(by) 479.51 373 T
(the) 494.43 373 T
(mem-) 512 373 T
(ory system, the collector) 108 359 T
(, or in inconsistent re) 225.5 359 T
(gions of the JVM.) 326.32 359 T
10 F
(\245) 90 342 T
10 10 Q
(DEREFERENCED_Ijava_lang_Object) 108 342 T
2 12 Q
( is a v) 288 342 T
(olatile direct pointer to an object, and is usu-) 316.09 342 T
(ally only used to construct the follo) 108 328 T
(wing type:) 277.69 328 T
10 F
(\245) 90 311 T
10 10 Q
(Ijava_lang_Object) 108 311 T
2 12 Q
( is a handle to an object \050a pointer to a) 210 311 T
7 10 Q
(DEREFERENCED_Ijava_lang_Object) 108 297 T
2 12 Q
(\051. This type is used in the \322mutator\323 portions of the) 288 297 T
(JVM to protect the JVM from the GC mo) 108 283 T
(ving objects \050otherwise the C compiler might) 307.14 283 T
(create a cached temporary pointer some) 108 269 T
(where\051.) 298.63 269 T
10 F
(\245) 90 252 T
4 10 Q
(w) 108 252 T
(ord32) 115.12 252 T
2 12 Q
(-) 142.68 252 T
(a) 149.24 252 T
(union) 157.13 252 T
(of) 187.03 252 T
(one-w) 199.59 252 T
(ord) 229.45 252 T
(primiti) 248.01 252 T
(v) 280.39 252 T
(e) 286.21 252 T
(types) 294.1 252 T
(and) 321.99 252 T
7 10 Q
(DEREFERENCED_Ijava_lang_Object) 341.88 252 T
2 12 Q
(.) 521.88 252 T
(In) 527.44 252 T
(general, a collector uses this as an opaque type and should not e) 108 238 T
(xamine the contents.) 414.1 238 T
(In) 72 212 T
(addition,) 84.62 212 T
(macros) 129.57 212 T
(are) 166.85 212 T
(pro) 184.12 212 T
(vided) 199.94 212 T
(for) 229.23 212 T
(accessing) 245.84 212 T
(the) 294.45 212 T
(\336elds) 311.73 212 T
(of) 340.36 212 T
(an) 352.97 212 T
(object) 366.92 212 T
(and) 398.87 212 T
(for) 418.82 212 T
(querying) 435.43 212 T
(information) 480.71 212 T
(about its state. Collectors also need access to class information stored in a) 72 198 T
4 10 Q
(NearClass) 429.29 198 T
2 12 Q
(. Macros for) 473.17 198 T
(accessing this information are listed in \322Class Information,) 72 184 T
(\323 page) 353.8 184 T
(28.) 387.78 184 T
4 11 Q
(2.1.3.3  Function T) 72 157.67 T
(ypes) 159.2 157.67 T
2 12 Q
(In order to support the collection of information about objects in a heap, there are functions and) 72 132 T
(macros) 72 118 T
(that) 109.4 118 T
(allo) 130.15 118 T
(w) 147.85 118 T
(a) 159.26 118 T
(collector) 167.33 118 T
(to) 212.06 118 T
(iterate) 224.14 118 T
(o) 256.88 118 T
(v) 262.7 118 T
(er) 268.52 118 T
(the) 280.59 118 T
(objects) 298 118 T
(in) 334.74 118 T
(the) 346.82 118 T
(heap) 364.23 118 T
(applying) 389.63 118 T
(a) 434.38 118 T
(callback) 442.45 118 T
(function) 485.18 118 T
(to) 527.92 118 T
(each object in turn. The type of these callback functions is:) 72 104 T
10 10 Q
(ObjIterator) 357.95 104 T
2 12 Q
(. Its de\336nition is:) 423.29 104 T
FMENDPAGE
%%EndPage: "10" 16
%%Page: "11" 17
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 11) 518.89 34.17 T
7 10 Q
(    void \050*) 72 713.33 T
10 F
(ObjIterator) 138 713.33 T
7 F
(\051\050java_lang_Object *obj, void *data\051) 204 713.33 T
2 12 Q
(where) 72 688 T
(the) 103.88 688 T
7 10 Q
(data) 121.11 688 T
2 12 Q
(\336eld) 147.67 688 T
(is) 171.57 688 T
(used) 182.14 688 T
(to) 206.71 688 T
(store) 218.61 688 T
(the) 244.5 688 T
(inputs,) 261.73 688 T
(current) 296.63 688 T
(state,) 333.18 688 T
(and) 360.74 688 T
(results) 380.64 688 T
(of) 414.53 688 T
(the) 427.09 688 T
(process) 444.32 688 T
(of) 482.87 688 T
(applying) 495.43 688 T
(the callback function to all the objects in question.) 72 674 T
7 10 Q
(    void \050*) 72 655.33 T
10 F
(RefIterator) 138 655.33 T
7 F
(\051\050java_lang_Object **objp, void *data\051) 204 655.33 T
2 12 Q
(The) 72 630 T
7 10 Q
(RefIterator) 93.66 630 T
2 12 Q
( type is lik) 159.66 630 T
(e) 209.88 630 T
7 10 Q
(ObjIterator) 218.21 630 T
2 12 Q
(, b) 283.73 630 T
(ut it accepts pointers to a location that points to an) 295.49 630 T
(object.) 72 616 T
(This) 107.27 616 T
(allo) 131.54 616 T
(ws) 149.24 616 T
(the) 165.51 616 T
(callback) 183.11 616 T
(to) 226.04 616 T
(update) 238.31 616 T
(pointers) 273.24 616 T
(to) 314.84 616 T
(objects.) 327.12 616 T
(Another) 367.05 616 T
(name) 409.32 616 T
(for) 438.24 616 T
(this) 455.18 616 T
(type) 475.45 616 T
(is) 499.06 616 T
10 10 Q
(Root-) 510 616 T
(Callback) 72 602 T
2 12 Q
(.) 120 602 T
(Another callback type can be used for an) 72 576 T
(y function that accepts a) 268.09 576 T
7 10 Q
(void*) 387.73 576 T
2 12 Q
( and returns) 417.73 576 T
7 10 Q
(void) 477.38 576 T
2 12 Q
(:) 501.38 576 T
7 10 Q
(    void \050*) 72 557.33 T
10 F
(SimpleFct) 138 557.33 T
7 F
(\051\050void *data\051) 192 557.33 T
4 12 Q
(2.2  Cor) 72 529 T
(e Collector Routines) 112.78 529 T
2 F
(There are 16 routines that a collector must implement, b) 72 504 T
(ut only \336) 341.05 504 T
(v) 384.1 504 T
(e that must interact with the) 389.92 504 T
(memory system in comple) 72 490 T
(x w) 198.82 490 T
(ays. The collector must pro) 216.36 490 T
(vide support for initialization, alloca-) 347.16 490 T
(tion, collection, e) 72 476 T
(xpansion, and iteration. These functions are the core of the collector) 155.15 476 T
(.) 481.08 476 T
4 11 Q
(2.2.1  Initialization) 72 449.67 T
2 12 Q
(Early in the initialization of the VM \050before loading an) 72 424 T
(y classes\051, the memory system will call:) 335.45 424 T
8 10 Q
([must define]) 72 405.33 T
7 F
(    uintptr_t) 72 393.33 T
10 F
(specificInitHeap) 156 393.33 T
7 F
(\050uintptr_t minWords, uintptr_t maxWords\051) 252 393.33 T
2 12 Q
(The collector is responsible for doing whate) 72 368 T
(v) 283 368 T
(er initialization it needs, and allocating a heap lar) 288.82 368 T
(ge) 524.89 368 T
(enough to hold at least) 72 354 T
7 10 Q
(minWords) 183.66 354 T
2 12 Q
(. The collector must not e) 231.66 354 T
(xpand the heap lar) 354.13 354 T
(ger than) 442.22 354 T
7 10 Q
(maxWords) 484.21 354 T
2 12 Q
(of) 72 340 T
(object) 84.65 340 T
(space.) 116.62 340 T
7 10 Q
(minWords) 148.93 340 T
2 12 Q
(will) 199.58 340 T
(be) 220.9 340 T
(maxW) 234.88 340 T
(ords.) 265.91 340 T
(The) 292.23 340 T
(sizes) 313.54 340 T
(refer) 339.52 340 T
(to) 364.81 340 T
(the) 376.8 340 T
(number) 394.11 340 T
(of) 433.42 340 T
(w) 446.07 340 T
(ords) 454.61 340 T
(a) 477.93 340 T
(v) 483.01 340 T
(ailable) 488.71 340 T
(for) 523.36 340 T
(objects\321it doesn't limit the o) 72 326 T
(v) 213.32 326 T
(erhead that the collector might also need \050for semi-spaces, remem-) 219.14 326 T
(bered sets, mark bits, etc.\051.) 72 312 T
7 10 Q
(specificInitHeap\050\051) 203.64 312 T
2 12 Q
( must return the number of w) 311.64 312 T
(ords a) 451.5 312 T
(v) 480.25 312 T
(ailable for) 485.95 312 T
(objects or zero if initialization f) 72 298 T
(ailed. A collector will often use the) 223.52 298 T
7 10 Q
(MemoryArea) 395.5 298 T
2 12 Q
( utilities to allo-) 455.5 298 T
(cate address space for the heap. See \322MemoryArea,) 72 284 T
(\323 page) 318.73 284 T
(37, for more information.) 352.72 284 T
(If) 72 258 T
(a) 82.72 258 T
(collector) 90.78 258 T
(needs) 135.5 258 T
(its) 165.55 258 T
(o) 179.62 258 T
(wn) 185.32 258 T
(locks,) 202.72 258 T
(it) 233.78 258 T
(should) 243.18 258 T
(initialize) 277.92 258 T
(the) 322.65 258 T
(locks) 340.04 258 T
(here,) 368.1 258 T
(and) 394.49 258 T
(re) 414.54 258 T
(gister) 423.69 258 T
(the) 453.08 258 T
(locks) 470.48 258 T
(with) 498.54 258 T
(the) 522.61 258 T
(memory system. This allo) 72 244 T
(ws the memory system to obtain all locks in the proper order before a) 196.37 244 T
(g) 72 230 T
(arbage collection. See \322Locking Support,) 77.94 230 T
(\323 page) 275.06 230 T
(34, for more information.) 309.05 230 T
4 11 Q
(2.2.2  Allocation) 72 203.67 T
2 12 Q
(The memory system can allocate objects either by calling the collector for each allocation, or by) 72 178 T
(using a per) 72 164 T
(-thread cache if the collector supports it.) 124.42 164 T
8 10 Q
([must define]) 72 145.33 T
7 F
(    word32 *) 72 133.33 T
10 F
(specificAllocateWords) 150 133.33 T
7 F
(\050java_int numWords\051) 276 133.33 T
2 12 Q
(The collector should return a pointer to ne) 72 108 T
(w memory) 274 108 T
(. It does not need to clear the memory) 324.88 108 T
(. If) 505.73 108 T
(there is not enough room, the collector should initiate a GC by calling) 72 94 T
7 10 Q
(getLocksThenGC\050\051) 410.64 94 T
2 12 Q
(\050declared) 72 80 T
(in) 119.52 80 T
(gcimpl.h\051.) 131.73 80 T
(If) 183.95 80 T
(there) 194.82 80 T
(is) 221.68 80 T
(still) 232.57 80 T
(not) 253.46 80 T
(enough) 271.67 80 T
(space,) 309.88 80 T
(it) 342.41 80 T
(should) 351.96 80 T
(return) 386.85 80 T
(NULL.) 418.38 80 T
(The) 456.25 80 T
(memory) 477.79 80 T
(sys-) 520.67 80 T
FMENDPAGE
%%EndPage: "11" 17
%%Page: "12" 18
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 12) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(tem) 72 712 T
(is) 92.58 712 T
(responsible) 103.17 712 T
(for) 160.41 712 T
(grabbing) 176.99 712 T
(and) 222.23 712 T
(releasing) 242.14 712 T
(the) 288.04 712 T
(heap) 305.29 712 T
(lock,) 330.52 712 T
(calculating) 356.77 712 T
(the) 412.01 712 T
(object) 429.26 712 T
(size,) 461.17 712 T
(initializing) 485.41 712 T
(the object, dealing with heap e) 72 698 T
(xpansion, and out of memory signaling.) 218.46 698 T
4 11 Q
(2.2.2.1  \322F) 72 671.67 T
(ast\323 Allocator) 119.7 671.67 T
2 12 Q
(If the collector supports linear allocation \050allocation of v) 72 646 T
(arious size objects in contiguous mem-) 342.98 646 T
(ory\051, it can de\336ne the macro F) 72 632 T
(AST_ALLOCA) 216.08 632 T
(T) 292.08 632 T
(OR to true. The memory system will then use a) 299.2 632 T
(tw) 72 618 T
(o-le) 83.88 618 T
(v) 102.24 618 T
(el allocation cache. The collector must pro) 108.06 618 T
(vide a global cache of memory to the memory) 312.17 618 T
(system bounded by the v) 72 604 T
(ariables) 191.03 604 T
7 10 Q
(fastAllocaterFreePtr) 231.35 604 T
2 12 Q
( and) 351.35 604 T
7 10 Q
(fastAllocaterLimit) 374.68 604 T
2 12 Q
(. Essen-) 482.68 604 T
(tially) 72 590 T
(,) 95.89 590 T
(the) 101.73 590 T
(collector) 119.24 590 T
(pre-allocates) 164.07 590 T
(a) 228.22 590 T
(block) 236.39 590 T
(of) 265.9 590 T
(space) 278.74 590 T
(that) 308.23 590 T
(the) 329.07 590 T
(memory) 346.58 590 T
(system) 389.42 590 T
(may) 425.6 590 T
(di) 449.1 590 T
(vide) 458.14 590 T
(into) 481.65 590 T
(objects) 503.16 590 T
(on its o) 72 576 T
(wn. A thread can create a local allocation b) 107.04 576 T
(uf) 314.4 576 T
(fer \050LAB\051 by allocating out of the global) 324.1 576 T
(cache \050a) 72 562 T
(v) 111.4 562 T
(oiding calls to the collector) 117.16 562 T
(, b) 247.33 562 T
(ut still requiring the heap lock\051. Each thread can then allo-) 259.09 562 T
(cate objects out of its pri) 72 548 T
(v) 190.02 548 T
(ate LAB without synchronizing with other threads.) 195.72 548 T
(The collector needs to update) 72 522 T
7 10 Q
(fastAllocaterFreePtr) 216.3 522 T
2 12 Q
( and) 336.3 522 T
7 10 Q
(fastAllocaterLimit) 359.63 522 T
2 12 Q
( at the end of) 467.63 522 T
(each call to) 72 508 T
7 10 Q
(specificInitHeap\050\051) 129.65 508 T
2 12 Q
(,) 237.65 508 T
7 10 Q
(specificGC\050\051) 243.65 508 T
2 12 Q
(, and) 315.65 508 T
7 10 Q
(specificExpandHeap\050\051) 341.98 508 T
2 12 Q
(.) 461.98 508 T
7 10 Q
(fastAllo-) 467.98 508 T
(caterFreePtr) 72 494 T
2 12 Q
( should be set to point to the heap's \322freeLimit\323 v) 144 494 T
(ariable, so the memory system) 379.84 494 T
(and the heap are k) 72 480 T
(ept in sync.) 159.18 480 T
(During) 72 454 T
(normal) 108.82 454 T
(e) 145.65 454 T
(x) 150.8 454 T
(ecution,) 156.62 454 T
(a) 197.77 454 T
(thread's) 205.93 454 T
(LAB) 245.58 454 T
(is) 272.4 454 T
(an) 283.24 454 T
(unformatted) 297.39 454 T
(array) 358.88 454 T
(of) 386.36 454 T
(w) 399.18 454 T
(ords.) 407.72 454 T
(When) 434.22 454 T
(threads) 465.7 454 T
(are) 503.19 454 T
(sus-) 520.67 454 T
(pended for GC or object iteration, the memory system formats the unused portion of the LAB to) 72 440 T
(look lik) 72 426 T
(e an array of) 108.89 426 T
7 10 Q
(int) 172.19 426 T
2 12 Q
(, and the thread clears its pointer to the LAB. The collector will then) 190.19 426 T
(reclaim the unused LAB normally) 72 412 T
(.) 235.2 412 T
4 11 Q
(2.2.3  Collection) 72 385.67 T
2 12 Q
(A collector cleans up the g) 72 360 T
(arbage in close cooperation with the rest of the memory system. The) 200.24 360 T
(memory system does a lot of the w) 72 346 T
(ork before calling the collector's GC routine, and pro) 239.53 346 T
(vides) 493.13 346 T
(essential services to the collector) 72 332 T
(.) 229.31 332 T
(A collector can do a \322full\323 collection \050collect all objects in the heap\051, or a \322partial\323 collection.) 72 306 T
(Some collectors can only do full collections, b) 72 292 T
(ut generational collectors \050and others\051 may do par-) 294.41 292 T
(tial collections. Classes cannot be unloaded unless the collector does a full collection.) 72 278 T
4 F
(Note) 90 257.8 T
2 F
(:) 113.99 257.8 T
(Concurrent) 120.06 257.8 T
(collectors) 176.78 257.8 T
(may) 226.17 257.8 T
(do) 249.57 257.8 T
(most) 264.3 257.8 T
(collection) 290.37 257.8 T
(w) 340.43 257.8 T
(ork) 348.98 257.8 T
(as) 367.71 257.8 T
(part) 380.43 257.8 T
(of) 401.83 257.8 T
(allocation) 414.56 257.8 T
(and/or) 464.62 257.8 T
(read/) 498.01 257.8 T
(write) 90 245 T
(barriers.) 117.49 245 T
(The) 159.96 245 T
(collection) 181.44 245 T
(steps) 231.59 245 T
(described) 258.42 245 T
(belo) 307.23 245 T
(w) 327.59 245 T
(may) 339.08 245 T
(only) 362.57 245 T
(apply) 386.73 245 T
(to) 416.22 245 T
(the) 428.38 245 T
(non-concurrent) 445.87 245 T
(portion of collection \050or not at all\051.) 90 232.2 T
(Collections may be initiated by Ja) 72 207.6 T
(v) 234.76 207.6 T
(a code e) 240.46 207.6 T
(xplicitly \050using) 279.59 207.6 T
7 10 Q
(java.lang.Runtime.gc\050\051) 355.6 207.6 T
2 12 Q
(\051, by the) 487.6 207.6 T
(JVM) 72 193.6 T
(for) 98.94 193.6 T
(pro\336ling) 115.88 193.6 T
(or) 160.16 193.6 T
(deb) 173.1 193.6 T
(ugging,) 190.18 193.6 T
(or) 229.46 193.6 T
(more) 242.4 193.6 T
(commonly) 270 193.6 T
(by) 324.28 193.6 T
(the) 339.22 193.6 T
(collector) 356.83 193.6 T
(when) 401.76 193.6 T
(an) 430.7 193.6 T
(allocation) 444.96 193.6 T
(f) 495.23 193.6 T
(ails.) 499.11 193.6 T
(All) 521.72 193.6 T
(cases end up calling the memory system routine) 72 179.6 T
7 10 Q
(getLocksThenGC\050\051) 305.3 179.6 T
2 12 Q
(.) 401.3 179.6 T
4 11 Q
(2.2.3.1  Memory System's Responsibilities) 72 153.27 T
7 10 Q
(getLocksThenGC\050\051) 72 127.6 T
2 12 Q
( will:) 168 127.6 T
(1.) 90 107.4 T
(Get the heap lock.) 117 107.4 T
(2.) 90 91.6 T
(Start a GC thread to do the rest of collection:) 117 91.6 T
(3.) 90 75.8 T
(Get the re) 117 75.8 T
(gistered GC locks in order) 164.14 75.8 T
(.) 290.12 75.8 T
FMENDPAGE
%%EndPage: "12" 18
%%Page: "13" 19
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 13) 518.89 34.17 T
2 12 Q
(4.) 90 711.8 T
(Suspend all threads.) 117 711.8 T
(5.) 90 696 T
(Run the inconsistent threads until the) 117 696 T
(y are consistent and the) 295.15 696 T
(y suspend themselv) 407.62 696 T
(es.) 501.43 696 T
(6.) 90 680.2 T
(Release the \322early\323 GC locks.) 117 680.2 T
(7.) 90 664.4 T
(Call the collector's) 117 664.4 T
7 10 Q
(specificGC\050\051) 209.48 664.4 T
2 12 Q
(.) 281.48 664.4 T
(8.) 90 648.6 T
(Unload unreferenced classes \050if) 117 648.6 T
7 10 Q
(specificGC\050\051) 271.61 648.6 T
2 12 Q
( did a full GC\051.) 343.61 648.6 T
(9.) 90 632.8 T
(Call the collector's) 117 632.8 T
7 10 Q
(specificExpandHeap\050\051) 209.48 632.8 T
2 12 Q
( if collection did not free enough memory) 329.48 632.8 T
(.) 529.01 632.8 T
(10.) 90 617 T
(Resume the threads.) 117 617 T
(11.) 90 601.2 T
(Release the remaining \050\322late\323\051 GC locks.) 117 601.2 T
(12.) 90 585.4 T
(Hand disco) 117 585.4 T
(v) 171.14 585.4 T
(ered weak reference objects that ha) 176.96 585.4 T
(v) 345.65 585.4 T
(e dying referents to Ja) 351.47 585.4 T
(v) 457.2 585.4 T
(a code for pro-) 462.9 585.4 T
(cessing.) 117 572.6 T
4 11 Q
(2.2.3.2  Collector's Responsibilities) 72 547.67 T
8 10 Q
([must define]) 72 523.33 T
7 F
(    bool_t) 72 511.33 T
10 F
(specificGC) 138 511.33 T
7 F
(\050java_int wordsRequested, bool_t fullCollection\051) 198 511.33 T
2 12 Q
(The) 72 486 T
(collector) 93.26 486 T
(should) 137.84 486 T
(attempt) 172.44 486 T
(to) 211.04 486 T
(remo) 222.97 486 T
(v) 247.45 486 T
(e) 253.27 486 T
(at) 261.2 486 T
(least) 272.46 486 T
7 10 Q
(wordsRequested) 297.05 486 T
2 12 Q
(w) 383.65 486 T
(ords) 392.19 486 T
(of) 415.45 486 T
(g) 428.05 486 T
(arbage) 433.98 486 T
(from) 468.56 486 T
(the) 494.49 486 T
(heap.) 511.75 486 T
(The memory system may request a full collection or a partial collection, b) 72 472 T
(ut the collector can) 426.71 472 T
(ignore this ar) 72 458 T
(gument. The collector returns) 135.11 458 T
7 10 Q
(TRUE) 280.08 458 T
2 12 Q
( if it did a full collection and) 304.08 458 T
7 10 Q
(FALSE) 444.07 458 T
2 12 Q
( otherwise.) 474.07 458 T
(Most) 72 432 T
(collectors) 99.62 432 T
(w) 149.23 432 T
(ork) 157.77 432 T
(by) 176.72 432 T
(w) 191.67 432 T
(alking) 200.21 432 T
(the) 233.16 432 T
(object) 250.78 432 T
(graph) 283.06 432 T
(from) 313.33 432 T
(roots,) 339.61 432 T
(k) 369.56 432 T
(eeping) 375.44 432 T
(all) 410.38 432 T
(reachable) 425.33 432 T
(objects) 474.26 432 T
(ali) 511.2 432 T
(v) 522.9 432 T
(e,) 528.72 432 T
(and rec) 72 418 T
(ycling the space used by unreachable objects. The memory system pro) 106.8 418 T
(vides functions to) 444.89 418 T
(iterate o) 72 404 T
(v) 110.81 404 T
(er all roots\321Ja) 116.63 404 T
(v) 189.71 404 T
(a language local and global v) 195.41 404 T
(ariables, VM-re) 335.41 404 T
(gistered handles, and JNI) 411.2 404 T
(handles. A macro to iterate o) 72 390 T
(v) 210.46 390 T
(er all reference \336elds of a gi) 216.28 390 T
(v) 350.59 390 T
(en object is also pro) 356.41 390 T
(vided. The collec-) 452.22 390 T
(tor) 72 376 T
(is) 87.99 376 T
(free) 98.64 376 T
(to) 119.94 376 T
(use) 131.93 376 T
(some) 150.59 376 T
(lo) 178.57 376 T
(w-order) 187.61 376 T
(bits) 228.24 376 T
(in) 248.23 376 T
(the) 260.22 376 T
(header) 277.54 376 T
(of) 312.18 376 T
(each) 324.83 376 T
(object,) 349.46 376 T
(and) 384.45 376 T
(in) 404.43 376 T
(each) 416.42 376 T
(pointer) 441.05 376 T
(for) 477.7 376 T
(marking,) 494.35 376 T
(etc. \050see \322Marking Macros,) 72 362 T
(\323 page) 202.12 362 T
(29\051. In f) 236.1 362 T
(act, it may modify the pointers in the object graph in) 274.97 362 T
(an) 72 348 T
(y w) 83.15 348 T
(ay it pleases as long as it restores the graph at the end of the collection and as long as it is) 100.69 348 T
(able to reco) 72 334 T
(v) 127.8 334 T
(er the NearClass for a gi) 133.62 334 T
(v) 250.28 334 T
(en object during the collection.) 256.1 334 T
(T) 72 308 T
(o iterate o) 78.37 308 T
(v) 126.18 308 T
(er the roots, the collector must call:) 132 308 T
8 10 Q
([must use]) 72 289.33 T
7 F
(void) 72 277.33 T
10 F
(processStrongRoots) 102 277.33 T
7 F
(\050RootCallback globalRootCB, RootCallback localRootCB,) 210 277.33 T
(                        RootCallback stackRootCB,  RootCallback classRootCB,) 72 265.33 T
(                        bool_t allClasses, void *data\051) 72 253.33 T
2 12 Q
(The) 72 228 T
(collector) 93.25 228 T
(must) 137.84 228 T
(pro) 163.77 228 T
(vide) 179.59 228 T
(callback) 202.85 228 T
(functions) 245.43 228 T
(for) 292.69 228 T
(processing) 309.27 228 T
(each) 363.19 228 T
(VM) 387.77 228 T
(global) 409.7 228 T
(root,) 442.3 228 T
(VM) 467.22 228 T
(local) 489.15 228 T
(root,) 515.07 228 T
(Ja) 72 214 T
(v) 81.76 214 T
(a stack root, JNI handle, and root in classes that are acti) 87.46 214 T
(v) 354.1 214 T
(e on the stack or otherwise not) 359.92 214 T
(unloadable.) 72 200 T
(Often) 130.21 200 T
(the) 160.09 200 T
(same) 177.31 200 T
(callback) 204.52 200 T
(function) 247.06 200 T
(can) 289.61 200 T
(be) 308.83 200 T
(used) 322.71 200 T
(for) 347.26 200 T
(all) 363.81 200 T
(root) 378.36 200 T
(types.) 400.25 200 T
(The) 431.14 200 T
7 10 Q
(data) 452.35 200 T
2 12 Q
(parameter) 478.91 200 T
(is) 529.44 200 T
(passed) 72 186 T
(unchanged) 106.74 186 T
(to) 161.48 186 T
(the) 173.56 186 T
(callback) 190.97 186 T
(functions.) 233.71 186 T
(If) 284.12 186 T
(a) 294.86 186 T
(collector) 302.94 186 T
(is) 347.68 186 T
(only) 358.43 186 T
(doing) 382.52 186 T
(a) 412.6 186 T
(partial) 420.68 186 T
(collection,) 454.09 186 T
(then) 507.17 186 T
(it) 530.58 186 T
(must treat all classes as roots. The collector should use) 72 172 T
7 10 Q
(allClasses) 337.63 172 T
(TRUE) 400.63 172 T
2 12 Q
( in this case.) 424.63 172 T
4 10 Q
(RootCallbacks) 72 153.24 T
2 12 Q
(The signature of) 72 129.19 T
7 10 Q
(RootCallback) 153.65 129.19 T
2 12 Q
( is the same as) 225.65 129.19 T
7 10 Q
(RefIterator) 297.97 129.19 T
2 12 Q
(:) 363.97 129.19 T
7 10 Q
(void \050*) 72 110.52 T
10 F
(RootCallback) 114 110.52 T
7 F
(\051\050java_lang_Object **objp, void *data\051) 186 110.52 T
2 12 Q
(A root callback is responsible for processing the references in the object referred to by the object) 72 85.19 T
(pointer) 72 71.19 T
7 10 Q
(objp) 109 71.19 T
2 12 Q
(, and updating the object pointer if the collector mo) 133 71.19 T
(v) 379.45 71.19 T
(es the object. The memory sys-) 385.27 71.19 T
FMENDPAGE
%%EndPage: "13" 19
%%Page: "14" 20
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 14) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(tem pro) 72 712 T
(vides tw) 108.82 712 T
(o support routines to help the callback. The \336rst tak) 149.03 712 T
(es care of references in the) 396.22 712 T
(object's class:) 72 698 T
8 10 Q
([must use]) 72 679.33 T
7 F
(static void) 72 667.33 T
10 F
(scanNearClasses) 144 667.33 T
7 F
(\050java_lang_Object *obj, NearClass *ncls,) 234 667.33 T
(                            RootCallback classRootCB, void *data\051) 72 655.33 T
2 12 Q
(If the NearClass structure referenced by) 72 630 T
7 10 Q
(ncls) 266.59 630 T
2 12 Q
( is unmark) 290.59 630 T
(ed, this function will mark it and call the) 341.14 630 T
(classRootCB callback on references found in the) 72 616 T
7 10 Q
(Class) 308.95 616 T
2 12 Q
( structure referred to by) 338.95 616 T
7 10 Q
(ncls) 455.24 616 T
2 12 Q
(, including:) 479.24 616 T
10 F
(\245) 90 596 T
2 F
(V) 108 596 T
(arious objects referred to directly by the class structure \050class loader) 115.33 596 T
(, name string, etc\051.) 441.43 596 T
10 F
(\245) 90 579 T
2 F
(All static object v) 108 579 T
(ariables of the class.) 192.7 579 T
10 F
(\245) 90 562 T
2 F
(All of the class' constant pool references.) 108 562 T
(This function will also be called recursi) 72 536 T
(v) 261.67 536 T
(ely on all of the unmark) 267.49 536 T
(ed classes referred to by the) 382.36 536 T
(class, including:) 72 522 T
10 F
(\245) 90 502 T
2 F
(The superclass of the class.) 108 502 T
10 F
(\245) 90 485 T
2 F
(The class representing an \322array of\323 the class if it e) 108 485 T
(xists.) 353.08 485 T
10 F
(\245) 90 468 T
2 F
(If the class is an array class, the class representing the array's declared element class.) 108 468 T
(T) 72 442 T
(o process the references in the object itself, the collector should use the follo) 78.37 442 T
(wing macro pro-) 445.33 442 T
(vided by the memory system:) 72 428 T
8 10 Q
([must use]) 72 409.33 T
7 F
(macro) 72 397.33 T
10 F
(OBJ_REFS_DO) 108 397.33 T
7 F
(\050java_lang_Object *obj, NearClass *ncls, statements\051) 174 397.33 T
2 12 Q
(This macro creates an iteration v) 72 372 T
(ariable named) 228.66 372 T
7 10 Q
(refPtr) 299.3 372 T
2 12 Q
( \050of type) 335.3 372 T
7 10 Q
(java_lang_Object**) 378.96 372 T
2 12 Q
(\051 and e) 486.96 372 T
(x) 519.43 372 T
(e-) 525.25 372 T
(cutes) 72 358 T
5 F
(statements) 99.51 358 T
2 F
(once) 153.02 358 T
(for) 178.53 358 T
(each) 195.37 358 T
(reference) 220.21 358 T
(in) 267.69 358 T
(the) 279.87 358 T
(object,) 297.39 358 T
(with) 332.57 358 T
7 10 Q
(refPtr) 356.75 358 T
2 12 Q
(set) 395.6 358 T
(to) 411.78 358 T
(the) 423.97 358 T
(location) 441.48 358 T
(of) 483 358 T
(the) 495.85 358 T
(refer-) 513.36 358 T
(ence. As a side-ef) 72 344 T
(fect,) 157 344 T
7 10 Q
(OBJ_REFS_DO\050\051) 180.98 344 T
2 12 Q
( may disco) 258.98 344 T
(v) 310.8 344 T
(er that) 316.62 344 T
7 10 Q
(obj) 349.94 344 T
2 12 Q
( is a weak reference object that) 367.94 344 T
(needs to be treated specially \050described in detail belo) 72 330 T
(w\051.) 325.64 330 T
4 11 Q
(2.2.3.3  Collecting W) 72 303.67 T
(eak Refer) 168.45 303.67 T
(ences) 213.76 303.67 T
2 12 Q
(W) 72 278 T
(eak reference objects were described in \322W) 82.37 278 T
(eak References,) 289.98 278 T
(\323 page) 365.1 278 T
(3. W) 399.08 278 T
(eak reference objects) 421.45 278 T
(ha) 72 264 T
(v) 83.09 264 T
(e tw) 88.91 264 T
(o \336elds and an implicit state that are of interest to the memory system:) 109.12 264 T
10 F
(\245) 90 244 T
7 10 Q
(referent) 108 244 T
2 12 Q
(. The) 156 244 T
7 10 Q
(referent) 183.66 244 T
2 12 Q
( \336eld is treated specially by the memory system only during the) 231.66 244 T
(disco) 108 230 T
(v) 133.15 230 T
(ery phase and only if the state is) 138.97 230 T
7 10 Q
(ACTIVE) 296.28 230 T
2 12 Q
(.) 332.28 230 T
10 F
(\245) 90 213 T
7 10 Q
(next) 108 213 T
2 12 Q
(. This \336eld is used to link weak reference objects into memory system and then user) 132 213 T
(-) 534.37 213 T
(le) 108 199 T
(v) 116.36 199 T
(el queues. The) 122.18 199 T
7 10 Q
(next) 194.83 199 T
2 12 Q
( \336eld is al) 218.83 199 T
(w) 265.72 199 T
(ays) 274.26 199 T
7 10 Q
(null) 293.26 199 T
2 12 Q
( until the memory system be) 317.26 199 T
(gins processing) 453.41 199 T
(the weak reference object.) 108 185 T
10 F
(\245) 90 168 T
2 F
(There are se) 108 168 T
(v) 166.33 168 T
(eral implicit states,) 172.15 168 T
7 10 Q
(ACTIVE) 266.15 168 T
2 12 Q
(,) 302.15 168 T
7 10 Q
(PENDING) 308.15 168 T
2 12 Q
(,) 350.15 168 T
7 10 Q
(ENQUEUED) 356.15 168 T
2 12 Q
(, and) 404.15 168 T
7 10 Q
(INACTIVE) 430.48 168 T
2 12 Q
(, b) 478.48 168 T
(ut the) 490.24 168 T
(memory system is only concerned about reference objects in the) 108 154 T
7 10 Q
(ACTIVE) 419.27 154 T
2 12 Q
( state. This is) 455.27 154 T
(encoded as) 108 140 T
7 10 Q
(next) 163.98 140 T
2 12 Q
( =) 187.98 140 T
7 10 Q
(null) 200.75 140 T
2 12 Q
(.) 224.75 140 T
FMENDPAGE
%%EndPage: "14" 20
%%Page: "15" 21
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 15) 518.89 34.17 T
2 12 Q
(T) 72 712 T
(o implement weak references, the memory system and the collector collaborate in se) 78.37 712 T
(v) 483.65 712 T
(eral) 489.47 712 T
(phases:) 72 698 T
(1.) 90 677.8 T
4 F
(Disco) 108 677.8 T
(v) 135.88 677.8 T
(ery) 141.76 677.8 T
2 F
( phase. Disco) 158.41 677.8 T
(v) 222.55 677.8 T
(er weak reference objects and link them together into a) 228.37 677.8 T
7 10 Q
(discov-) 494.96 677.8 T
(eredRefs) 108 665 T
2 12 Q
( queue\321a list of potential weak reference objects to process. This is accom-) 156 665 T
(plished) 108 652.2 T
(by) 145.34 652.2 T
(in) 160.01 652.2 T
(v) 168.87 652.2 T
(oking) 174.63 652.2 T
(the) 204.64 652.2 T
7 10 Q
(startDiscoveringWeakRefs\050\051) 221.98 652.2 T
2 12 Q
(and) 380.65 652.2 T
(then) 400.65 652.2 T
(calling) 423.99 652.2 T
7 10 Q
(OBJ_REFS_DO\050\051) 459.33 652.2 T
2 12 Q
(to w) 108 639.4 T
(alk o) 128.88 639.4 T
(v) 152.36 639.4 T
(er the objects in the heap. At the end of the tra) 158.18 639.4 T
(v) 379.9 639.4 T
(ersal,) 385.72 639.4 T
7 10 Q
(stopDiscovering-) 414.37 639.4 T
(WeakRefs\050\051) 108 626.6 T
2 12 Q
( is in) 168 626.6 T
(v) 190.86 626.6 T
(ok) 196.62 626.6 T
(ed. The collector must call these in order to do the \322scanning\323 phase) 208.5 626.6 T
(of the collection algorithm.) 108 613.8 T
(2.) 90 598 T
4 F
(Pr) 108 598 T
(ocessing) 120.44 598 T
2 F
(phase.) 165.24 598 T
(Once) 198.35 598 T
(the) 226.47 598 T
(collector) 243.93 598 T
(has) 288.71 598 T
(determined) 307.49 598 T
(all) 364.28 598 T
(of) 379.07 598 T
(the) 391.86 598 T
(strongly) 409.32 598 T
(reachable) 451.45 598 T
(objects,) 500.21 598 T
(the memory system and collector process the) 108 585.2 T
7 10 Q
(discoveredRefs) 326.96 585.2 T
2 12 Q
( queue and create a) 410.96 585.2 T
7 10 Q
(temp-) 505.92 585.2 T
(PendingQ) 108 572.4 T
2 12 Q
( of weak reference objects that ha) 156 572.4 T
(v) 317.03 572.4 T
(e referents that are only weakly reachable.) 322.85 572.4 T
(Processing) 108 559.6 T
(actually) 162.54 559.6 T
(happens) 203.08 559.6 T
(once) 244.96 559.6 T
(for) 270.16 559.6 T
(each) 286.7 559.6 T
(strength) 311.23 559.6 T
(of) 352.44 559.6 T
(weak) 364.98 559.6 T
(reference) 392.85 559.6 T
(object.) 440.03 559.6 T
(Processing) 474.9 559.6 T
(is) 529.45 559.6 T
(done by) 108 546.8 T
7 10 Q
(processWeakRoots\050\051) 149.33 546.8 T
2 12 Q
(, which the collector must call.) 257.33 546.8 T
(3.) 90 531 T
4 F
(Updating) 108 531 T
2 F
( phase \050optional\051. If the disco) 156.01 531 T
(v) 296.47 531 T
(ery phase found weak reference objects in their) 302.29 531 T
(old locations, then the) 108 518.2 T
7 10 Q
(tempPendingQ) 217 518.2 T
2 12 Q
( refers to a list of objects at the old locations. The) 289 518.2 T
(memory system set the) 108 505.4 T
7 10 Q
(next) 221.33 505.4 T
2 12 Q
( \336elds b) 245.33 505.4 T
(ut the collector has not yet seen these \336elds. The) 283.09 505.4 T
(updating) 108 492.6 T
(phase) 152.86 492.6 T
(updates) 183.04 492.6 T
(all) 222.55 492.6 T
(of) 237.41 492.6 T
(the) 250.26 492.6 T
(links) 267.79 492.6 T
(to) 293.98 492.6 T
(refer) 306.17 492.6 T
(to) 331.67 492.6 T
(the) 343.87 492.6 T
(objects') 361.39 492.6 T
(ne) 400.4 492.6 T
(w) 411.43 492.6 T
(locations) 422.95 492.6 T
(using) 469.14 492.6 T
7 10 Q
(update-) 498 492.6 T
(TempPendingQ\050\051) 108 479.8 T
2 12 Q
(. The collector does not need to call) 192 479.8 T
7 10 Q
(updateTempPendingQ\050\051) 366.3 479.8 T
2 12 Q
( if it is a) 486.3 479.8 T
(non-mo) 108 467 T
(ving collector) 145.15 467 T
(, or if the collector calls) 211 467 T
7 10 Q
(OBJ_REFS_DO) 327.97 467 T
2 12 Q
( \050disco) 393.97 467 T
(v) 426.12 467 T
(ers weak reference) 431.94 467 T
(objects\051 on objects in their ne) 108 454.2 T
(w locations.) 249.35 454.2 T
(4.) 90 438.4 T
4 F
(Queuing) 108 438.4 T
2 F
( phase. At the end of the g) 152.02 438.4 T
(arbage collection, the elements of the) 277.93 438.4 T
7 10 Q
(tempPendingQ) 460.22 438.4 T
2 12 Q
(are pushed onto the queue rooted in the Ja) 108 425.6 T
(v) 309.72 425.6 T
(a static v) 315.42 425.6 T
(ariable) 357.78 425.6 T
7 10 Q
(java.lang.ref.Refer-) 393.43 425.6 T
(ence.pending) 108 412.8 T
2 12 Q
(. This queue is drained by Ja) 180 412.8 T
(v) 316.74 412.8 T
(a code that separates the weak reference) 322.44 412.8 T
(objects into other v) 108 400 T
(arious user) 200.03 400 T
(-le) 252.11 400 T
(v) 264.47 400 T
(el queues \050including the \336nalization queue\051. The reason) 270.29 400 T
(that a temporary queue is used in the pre) 108 387.2 T
(vious phases is that the processing and updating) 302.33 387.2 T
(phases do not ha) 108 374.4 T
(v) 187.42 374.4 T
(e to deal a potentially non-empty global queue. Queuing is done by) 193.24 374.4 T
7 10 Q
(queuePendingRefs\050\051) 108 361.6 T
2 12 Q
(, which the collector must call.) 216 361.6 T
(5.) 90 345.8 T
4 F
(Noti\336cation) 108 345.8 T
2 F
( phase. If an) 168 345.8 T
(y weak reference objects were added in the queuing phase, the) 226.46 345.8 T
(Ja) 108 333 T
(v) 117.76 333 T
(a code \050described abo) 123.46 333 T
(v) 227.57 333 T
(e\051 that processes the global queue is noti\336ed. Noti\336cation is) 233.39 333 T
(done by the memory system at the end of a collection \050in) 108 320.2 T
7 10 Q
(getLocksThenGC\050\051) 383.96 320.2 T
2 12 Q
(\051.) 479.96 320.2 T
4 11 Q
(2.2.3.4  W) 72 295.27 T
(eak Refer) 118.04 295.27 T
(ences Example) 163.34 295.27 T
2 12 Q
(This e) 72 269.6 T
(xample sho) 101.48 269.6 T
(ws the disco) 156.18 269.6 T
(v) 215.33 269.6 T
(ery) 221.15 269.6 T
(, processing, and queuing phases in more detail. Consider a) 235.69 269.6 T
(heap that consists of an object) 72 255.6 T
10 10 Q
(obj) 219.31 255.6 T
2 12 Q
( with a) 237.31 255.6 T
7 10 Q
(finalize\050\051) 272.98 255.6 T
2 12 Q
( method, and tw) 332.98 255.6 T
(o) 410.18 255.6 T
7 10 Q
(WeakReference) 419.18 255.6 T
2 12 Q
( objects) 497.18 255.6 T
(\050) 72 241.6 T
10 10 Q
(W1) 76 241.6 T
2 12 Q
( and) 88 241.6 T
10 10 Q
(W2) 111.32 241.6 T
2 12 Q
(\051 that weakly refer to) 123.32 241.6 T
10 10 Q
(obj) 226.96 241.6 T
2 12 Q
(. The JVM creates a) 244.96 241.6 T
7 10 Q
(FinalReference) 344.26 241.6 T
2 12 Q
( object) 428.26 241.6 T
10 10 Q
(F) 463.58 241.6 T
2 12 Q
( to handle the) 469.58 241.6 T
7 10 Q
(finalize\050\051) 72 227.6 T
2 12 Q
( method, and links it into a global list.) 132 227.6 T
5 F
(Initial state) 84.07 188 T
2 F
(. Assume that) 139.07 188 T
10 10 Q
(W1) 207.74 188 T
2 12 Q
( and) 219.74 188 T
10 10 Q
(W2) 243.06 188 T
2 12 Q
( are) 255.06 188 T
(rooted) 84.07 174 T
(by) 117.17 174 T
(Ja) 131.62 174 T
(v) 141.38 174 T
(a) 147.08 174 T
(static) 154.86 174 T
(v) 182.64 174 T
(ariables) 188.34 174 T
(and) 228.11 174 T
(there) 247.88 174 T
(are) 274.32 174 T
(no longer an) 84.07 160 T
(y strong references to) 143.87 160 T
10 10 Q
(obj) 250.5 160 T
2 12 Q
(. If) 268.5 160 T
(we only look at each weak reference) 84.07 146 T
(object's implicit state and its) 84.07 132 T
7 10 Q
(next) 223.23 132 T
2 12 Q
( and) 247.23 132 T
7 10 Q
(referent) 84.07 118 T
2 12 Q
( \336elds, the heap looks lik) 132.07 118 T
(e this) 251.95 118 T
(before a collection. All the weak reference) 84.07 104 T
(objects are) 84.07 90 T
7 10 Q
(ACTIVE) 138.71 90 T
2 12 Q
( \050\322) 174.71 90 T
7 10 Q
(ACT) 187.04 90 T
2 12 Q
(\323\051.) 205.04 90 T
295.74 78.4 542.74 203.6 C
295.74 107.4 423 200.6 C
304.74 116.6 399.99 200.6 R
7 X
V
304.74 116.6 399.99 200.6 C
0 0 0 0.25 0.75 0.75 0.75 1 K
305.49 145.85 326.49 173.6 R
0 X
V
305.49 145.85 326.49 173.6 R
V
0 0 0 0.85 0.15 0.15 0.15 1 K
305.49 145.85 326.49 173.6 R
1 H
2 Z
N
295.74 107.4 423 200.6 C
306.24 174.35 312.24 186.35 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(F) 306.99 175.96 T
295.74 107.4 423 200.6 C
304.74 117.35 399.24 200.6 C
0.2 0.1 0 0 0.8 0.9 1 1 K
339.99 118.85 366.99 136.1 R
0 X
V
339.24 119.6 366.24 136.85 R
V
0.4 0.28 0 0.6 0 0.12 0.4 1 K
339.24 119.6 366.24 136.85 R
1 H
2 Z
N
295.74 107.4 423 200.6 C
345.24 121.85 362.49 133.85 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(Obj) 345.99 123.46 T
295.74 107.4 423 200.6 C
304.74 117.35 399.24 200.6 C
339.24 137.6 328.74 139.1 330.99 142.1 332.49 145.85 339.24 137.6 339.24 137.6 339.24 137.6
 339.24 137.6 8 Y
0 X
V
339.24 137.6 328.74 139.1 330.99 142.1 332.49 145.85 339.24 137.6 5 L
1 H
0 Z
N
314.49 151.1 317.49 149.6 2 L
N
320.49 148.1 323.49 145.85 2 L
N
326.49 144.35 329.49 142.85 2 L
N
295.74 107.4 423 200.6 C
376.74 175.1 392.49 190.1 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 377.49 179.71 T
(2) 386.49 177.46 T
295.74 107.4 423 200.6 C
307.74 163.85 324.24 172.85 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(ACT) 307.74 164.7 T
295.74 107.4 423 200.6 C
342.24 185.6 357.99 200.6 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 342.24 190.96 T
(1) 351.24 188.71 T
295.74 107.4 423 200.6 C
304.74 117.35 399.24 200.6 C
0.2 0 0.2 0 0.8 1 0.8 1 K
376.74 148.85 397.74 176.6 R
0 X
V
375.99 149.6 396.99 177.35 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
375.99 149.6 396.99 177.35 R
1 H
0 Z
N
295.74 107.4 423 200.6 C
378.99 166.85 395.49 175.85 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(ACT) 378.99 167.7 T
295.74 107.4 423 200.6 C
304.74 117.35 399.24 200.6 C
366.24 138.35 371.49 147.35 373.74 144.35 375.99 141.35 366.24 138.35 366.24 138.35 366.24 138.35
 366.24 138.35 8 Y
0 X
V
366.24 138.35 371.49 147.35 373.74 144.35 375.99 141.35 366.24 138.35 5 L
1 H
0 Z
N
385.74 153.35 382.74 151.1 2 L
N
380.49 149.6 377.49 147.35 2 L
N
375.24 145.1 373.74 144.35 2 L
N
0 0 0 0.85 0.15 0.15 0.15 1 K
304.74 163.85 324.99 163.85 2 L
N
304.74 154.1 324.99 154.1 2 L
N
0.4 0 0.2 0.6 0 0.4 0.2 1 K
375.99 166.85 396.24 166.85 2 L
N
375.99 157.85 396.24 157.85 2 L
N
0.2 0 0.2 0 0.8 1 0.8 1 K
342.24 159.35 363.24 187.1 R
V
341.49 160.1 362.49 187.85 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
341.49 160.1 362.49 187.85 R
N
295.74 107.4 423 200.6 C
344.49 177.35 360.99 186.35 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(ACT) 344.49 178.2 T
295.74 107.4 423 200.6 C
304.74 117.35 399.24 200.6 C
0.4 0 0.2 0.6 0 0.4 0.2 1 K
341.49 177.35 361.74 177.35 2 L
1 H
0 Z
0 X
N
341.49 168.35 361.74 168.35 2 L
N
0 0 0 1 0 0 0 1 K
351.99 138.35 348.24 148.1 351.99 148.1 355.74 148.1 351.99 138.35 351.99 138.35 351.99 138.35
 351.99 138.35 8 Y
V
351.99 138.35 348.24 148.1 351.99 148.1 355.74 148.1 351.99 138.35 5 L
N
351.99 165.35 351.99 162.35 2 L
N
351.99 158.6 351.99 155.6 2 L
N
351.99 151.85 351.99 148.85 2 L
N
295.74 107.4 423 200.6 C
0 0 0 1 0 0 0 1 K
295.74 78.4 542.74 203.6 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "15" 21
%%Page: "16" 22
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 16) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
5 12 Q
0 X
(Disco) 84.07 709 T
(very) 111.94 709 T
2 F
(. While scanning from roots, the) 131.81 709 T
(collector e) 84.07 695 T
(v) 134.08 695 T
(entually calls) 139.9 695 T
7 10 Q
(OBJ_REFS_DO\050\051) 206.56 695 T
2 12 Q
(on each of the three weak reference) 84.07 681 T
(objects.) 84.07 667 T
7 10 Q
(OBJ_REFS_DO\050\051) 124.06 667 T
2 12 Q
( notices that the) 202.06 667 T
(weak references are) 84.07 653 T
7 10 Q
(ACTIVE) 182.33 653 T
2 12 Q
(, so the) 218.33 653 T
(y are) 252.48 653 T
(enqueued) 84.07 639 T
(and) 132.56 639 T
(the) 152.4 639 T
(collector) 169.57 639 T
(does) 214.07 639 T
(not) 238.57 639 T
(yet) 256.42 639 T
(see) 273.59 639 T
(the) 84.07 625 T
7 10 Q
(referent) 101.73 625 T
2 12 Q
( \336eld \050or) 149.73 625 T
10 10 Q
(obj) 194.06 625 T
2 12 Q
(\051. Since the) 212.06 625 T
(memory system sets the) 84.07 611 T
7 10 Q
(next) 202.06 611 T
2 12 Q
( \336elds of) 226.06 611 T
(these weak reference objects, their states) 84.07 597 T
(are no) 84.07 583 T
(w) 113.42 583 T
7 10 Q
(PENDING) 125.08 583 T
2 12 Q
( \050\322) 167.08 583 T
7 10 Q
(PEN) 179.4 583 T
2 12 Q
(\323\051.) 197.4 583 T
5 F
(Pr) 84.07 543 T
(ocessing \050part A\051) 95.53 543 T
2 F
(. First the) 178.18 543 T
7 10 Q
(WeakRefer-) 226.85 543 T
(ence) 84.07 529 T
2 12 Q
( objects are processed. The memory) 108.07 529 T
(system and collector notice that) 84.07 515 T
10 10 Q
(obj) 239.04 515 T
2 12 Q
( is not) 257.04 515 T
(strongly referenced, so) 84.07 501 T
10 10 Q
(W1) 196.7 501 T
2 12 Q
( and) 208.7 501 T
10 10 Q
(W2) 232.02 501 T
2 12 Q
( are) 244.02 501 T
(enqueued on the) 84.07 487 T
7 10 Q
(tempPendingQ) 165.71 487 T
2 12 Q
( and the) 237.71 487 T
7 10 Q
(referent) 84.07 473 T
2 12 Q
( \336elds are cleared.) 132.07 473 T
5 F
(Pr) 84.07 409.13 T
(ocessing \050part B\051) 95.53 409.13 T
2 F
(. Ne) 178.18 409.13 T
(xt, the) 197.99 409.13 T
7 10 Q
(FinalRef-) 230.99 409.13 T
(erence) 84.07 395.13 T
2 12 Q
( object is processed. Since) 120.07 395.13 T
10 10 Q
(obj) 249.38 395.13 T
2 12 Q
( is) 267.38 395.13 T
(still not strongly reachable,) 84.07 381.13 T
10 10 Q
(F) 217.72 381.13 T
2 12 Q
( is enqueued) 223.72 381.13 T
(and the memory system mak) 84.07 367.13 T
(es a collector) 221.93 367.13 T
(callback \050) 84.07 353.13 T
7 10 Q
(weakRefCB) 131.04 353.13 T
2 12 Q
(\051 on its) 185.04 353.13 T
7 10 Q
(referent) 221.38 353.13 T
2 12 Q
(\336eld. The collector will mark or cop) 84.07 339.13 T
(y) 257.58 339.13 T
10 10 Q
(obj) 266.58 339.13 T
2 12 Q
(and) 84.07 325.13 T
(update) 104.37 325.13 T
(the) 139.33 325.13 T
7 10 Q
(referent) 156.97 325.13 T
2 12 Q
(\336eld) 207.95 325.13 T
(if) 232.26 325.13 T
(necessary) 242.56 325.13 T
(.) 288.42 325.13 T
5 F
(Queuing & Noti\336cation) 84.07 265.77 T
2 F
(. At the end of the) 197.4 265.77 T
(collection, the weak reference objects are) 84.07 251.77 T
(remo) 84.07 237.77 T
(v) 108.54 237.77 T
(ed from the) 114.36 237.77 T
7 10 Q
(tempPendingQ) 172.68 237.77 T
2 12 Q
( and) 244.68 237.77 T
(placed in the) 84.07 223.77 T
7 10 Q
(java.lang.ref.Refer-) 148.38 223.77 T
(ence.pending) 84.07 209.77 T
2 12 Q
(queue.) 158.41 209.77 T
(The) 192.4 209.77 T
(memory) 213.41 209.77 T
(system) 255.75 209.77 T
(noti\336es Ja) 84.07 195.77 T
(v) 132.16 195.77 T
(a code that the) 137.86 195.77 T
7 10 Q
(pending) 210.51 195.77 T
2 12 Q
( queue) 252.51 195.77 T
(needs processing.) 84.07 181.77 T
4 10 Q
(FIGURE 3. W) 341.78 163.6 T
(eak Refer) 402.52 163.6 T
(ence Pr) 443.71 163.6 T
(ocessing) 475.46 163.6 T
5 12 Q
(Subsequent states) 84.07 120.27 T
2 F
(. After the collection completes and the mutator threads are resumed, Ja) 169.06 120.27 T
(v) 513.08 120.27 T
(a) 518.78 120.27 T
(code will e) 84.07 106.27 T
(v) 136.42 106.27 T
(entually process the) 142.24 106.27 T
7 10 Q
(pending) 240.56 106.27 T
2 12 Q
( queue. The) 282.56 106.27 T
7 10 Q
(FinalizerThread) 341.87 106.27 T
2 12 Q
( will process the) 431.87 106.27 T
7 10 Q
(FinalReference) 84.07 92.27 T
2 12 Q
( and clear its) 168.07 92.27 T
7 10 Q
(referent) 232.05 92.27 T
2 12 Q
( \336eld. A future collection will then notice that there) 280.05 92.27 T
(are no references to) 84.07 78.27 T
10 10 Q
(obj) 181.35 78.27 T
2 12 Q
(, so it may be reclaimed.) 199.35 78.27 T
295.74 576 542.74 720 C
306.92 625.99 531.57 717 C
306.92 633 524.42 717 R
7 X
V
306.92 633 524.42 717 C
0 0 0 0.25 0.75 0.75 0.75 1 K
307.67 662.25 328.67 690 R
0 X
V
307.67 662.25 328.67 690 R
V
0 0 0 0.85 0.15 0.15 0.15 1 K
307.67 662.25 328.67 690 R
1 H
2 Z
N
306.92 625.99 531.57 717 C
308.42 690.75 314.42 702.75 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(F) 309.17 692.36 T
306.92 625.99 531.57 717 C
306.92 633.75 523.67 717 C
0.2 0.1 0 0 0.8 0.9 1 1 K
342.17 635.25 369.17 652.5 R
0 X
V
341.42 636 368.42 653.25 R
V
0.4 0.28 0 0.6 0 0.12 0.4 1 K
341.42 636 368.42 653.25 R
1 H
2 Z
N
306.92 625.99 531.57 717 C
347.42 638.25 364.67 650.25 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(Obj) 348.17 639.86 T
306.92 625.99 531.57 717 C
306.92 633.75 523.67 717 C
341.42 654 330.92 655.5 333.17 658.5 334.67 662.25 341.42 654 341.42 654 341.42 654
 341.42 654 8 Y
0 X
V
341.42 654 330.92 655.5 333.17 658.5 334.67 662.25 341.42 654 5 L
1 H
0 Z
N
316.67 667.5 319.67 666 2 L
N
322.67 664.5 325.67 662.25 2 L
N
328.67 660.75 331.67 659.25 2 L
N
306.92 625.99 531.57 717 C
378.92 691.5 394.67 706.5 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 379.67 696.11 T
(2) 388.67 693.86 T
306.92 625.99 531.57 717 C
309.92 680.25 326.42 689.25 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 309.92 681.1 T
306.92 625.99 531.57 717 C
344.42 702 360.17 717 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 344.42 707.36 T
(1) 353.42 705.11 T
306.92 625.99 531.57 717 C
306.92 633.75 523.67 717 C
0.2 0 0.2 0 0.8 1 0.8 1 K
378.92 665.25 399.92 693 R
0 X
V
378.17 666 399.17 693.75 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
378.17 666 399.17 693.75 R
1 H
0 Z
N
306.92 625.99 531.57 717 C
381.17 683.25 397.67 692.25 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 381.17 684.1 T
306.92 625.99 531.57 717 C
306.92 633.75 523.67 717 C
368.42 654.75 373.67 663.75 375.92 660.75 378.17 657.75 368.42 654.75 368.42 654.75 368.42 654.75
 368.42 654.75 8 Y
0 X
V
368.42 654.75 373.67 663.75 375.92 660.75 378.17 657.75 368.42 654.75 5 L
1 H
0 Z
N
387.92 669.75 384.92 667.5 2 L
N
382.67 666 379.67 663.75 2 L
N
377.42 661.5 375.92 660.75 2 L
N
0 0 0 0.85 0.15 0.15 0.15 1 K
306.92 680.25 327.17 680.25 2 L
N
306.92 670.5 327.17 670.5 2 L
N
0.4 0 0.2 0.6 0 0.4 0.2 1 K
378.17 683.25 398.42 683.25 2 L
N
378.17 674.25 398.42 674.25 2 L
N
0.2 0 0.2 0 0.8 1 0.8 1 K
344.42 675.75 365.42 703.5 R
V
343.67 676.5 364.67 704.25 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
343.67 676.5 364.67 704.25 R
N
306.92 625.99 531.57 717 C
346.67 693.75 363.17 702.75 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 346.67 694.6 T
306.92 625.99 531.57 717 C
306.92 633.75 523.67 717 C
0.4 0 0.2 0.6 0 0.4 0.2 1 K
343.67 693.75 363.92 693.75 2 L
1 H
0 Z
0 X
N
343.67 684.75 363.92 684.75 2 L
N
0 0 0 1 0 0 0 1 K
354.17 654.75 350.42 664.5 354.17 664.5 357.92 664.5 354.17 654.75 354.17 654.75 354.17 654.75
 354.17 654.75 8 Y
V
354.17 654.75 350.42 664.5 354.17 664.5 357.92 664.5 354.17 654.75 5 L
N
354.17 681.75 354.17 678.75 2 L
N
354.17 675 354.17 672 2 L
N
354.17 668.25 354.17 665.25 2 L
N
306.92 625.99 531.57 717 C
444.92 667.5 519.17 685.5 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(discovere) 444.92 677.35 T
(d) 492.17 677.35 T
(Refs) 497.42 677.35 T
(tempPendingQ) 444.92 668.35 T
306.92 625.99 531.57 717 C
306.92 633.75 523.67 717 C
423.17 664.5 522.92 685.5 R
1 H
0 Z
0 X
N
423.17 676.5 521.42 676.5 2 L
N
441.17 666.75 441.17 686.25 2 L
N
401.42 693 411.92 693 410.42 689.25 408.92 686.25 401.42 693 401.42 693 401.42 693
 401.42 693 8 Y
V
401.42 693 411.92 693 410.42 689.25 408.92 686.25 401.42 693 5 L
N
410.42 689.25 431.42 681.75 2 L
N
365.42 702.75 374.42 697.5 371.42 695.25 368.42 693 365.42 702.75 365.42 702.75 365.42 702.75
 365.42 702.75 8 Y
V
365.42 702.75 374.42 697.5 371.42 695.25 368.42 693 365.42 702.75 5 L
N
371.42 695.25 384.92 677.25 2 L
N
327.17 690.75 336.92 693.75 336.92 690 336.92 686.25 327.17 690.75 327.17 690.75 327.17 690.75
 327.17 690.75 8 Y
V
327.17 690.75 336.92 693.75 336.92 690 336.92 686.25 327.17 690.75 5 L
N
336.92 690 354.17 689.25 2 L
N
306.92 625.99 531.57 717 C
0 0 0 1 0 0 0 1 K
295.74 576 542.74 720 C
0 0 612 792 C
295.74 443.99 542.74 576 C
303.36 472.99 535.13 573 C
299.61 483 528.36 578.25 R
7 X
V
303.36 483 528.36 573 C
303.36 472.99 535.13 573 C
303.36 484.5 526.86 573 C
0 0 0 0.25 0.75 0.75 0.75 1 K
309.36 513.75 330.36 541.5 R
0 X
V
309.36 513.75 330.36 541.5 R
V
0 0 0 0.85 0.15 0.15 0.15 1 K
309.36 513.75 330.36 541.5 R
1 H
2 Z
N
303.36 472.99 535.13 573 C
310.86 541.5 316.86 553.5 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(F) 310.86 543.86 T
303.36 472.99 535.13 573 C
303.36 484.5 526.86 573 C
0.2 0.1 0 0 0.8 0.9 1 1 K
344.61 486.75 371.61 504 R
0 X
V
344.61 486.75 371.61 504 R
V
0.4 0.28 0 0.6 0 0.12 0.4 1 K
344.61 486.75 371.61 504 R
1 H
2 Z
N
303.36 472.99 535.13 573 C
349.86 489 367.11 501 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(Obj) 349.86 491.36 T
303.36 472.99 535.13 573 C
303.36 484.5 526.86 573 C
344.61 504.75 334.11 506.25 336.36 509.25 337.86 513 344.61 504.75 344.61 504.75 344.61 504.75
 344.61 504.75 8 Y
0 X
V
344.61 504.75 334.11 506.25 336.36 509.25 337.86 513 344.61 504.75 5 L
1 H
0 Z
N
319.11 518.25 322.11 516.75 2 L
N
325.11 515.25 328.11 513.75 2 L
N
331.11 512.25 334.11 510 2 L
N
303.36 472.99 535.13 573 C
382.11 542.25 397.86 557.25 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 382.11 547.61 T
(2) 391.11 545.36 T
303.36 472.99 535.13 573 C
312.36 531 328.86 540 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 312.36 531.85 T
303.36 472.99 535.13 573 C
347.61 552.75 363.36 567.75 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 347.61 558.11 T
(1) 356.61 555.86 T
303.36 472.99 535.13 573 C
303.36 484.5 526.86 573 C
0.2 0 0.2 0 0.8 1 0.8 1 K
381.36 516.75 402.36 544.5 R
0 X
V
381.36 516.75 402.36 544.5 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
381.36 516.75 402.36 544.5 R
1 H
0 Z
N
0 0 0 0.85 0.15 0.15 0.15 1 K
309.36 531 329.61 531 2 L
N
309.36 521.25 329.61 521.25 2 L
N
0.4 0 0.2 0.6 0 0.4 0.2 1 K
381.36 534 401.61 534 2 L
N
381.36 525 401.61 525 2 L
N
0.2 0 0.2 0 0.8 1 0.8 1 K
346.86 527.25 367.86 555 R
V
346.86 527.25 367.86 555 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
346.86 527.25 367.86 555 R
N
303.36 472.99 535.13 573 C
349.86 544.5 366.36 553.5 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 349.86 545.35 T
303.36 472.99 535.13 573 C
303.36 484.5 526.86 573 C
0.4 0 0.2 0.6 0 0.4 0.2 1 K
346.86 544.5 367.11 544.5 2 L
1 H
0 Z
0 X
N
346.86 535.5 367.11 535.5 2 L
N
0 0 0 1 0 0 0 1 K
403.86 543.75 413.61 540.75 411.36 537.75 409.11 534.75 403.86 543.75 403.86 543.75 403.86 543.75
 403.86 543.75 8 Y
V
403.86 543.75 413.61 540.75 411.36 537.75 409.11 534.75 403.86 543.75 5 L
N
411.36 537.75 434.61 520.5 2 L
N
367.86 553.5 376.86 548.25 373.86 546 370.86 543.75 367.86 553.5 367.86 553.5 367.86 553.5
 367.86 553.5 8 Y
V
367.86 553.5 376.86 548.25 373.86 546 370.86 543.75 367.86 553.5 5 L
N
373.86 546 387.36 528 2 L
N
435.36 530.25 435.36 567.75 310.11 567.75 310.11 564 4 L
N
310.11 554.25 306.36 564 310.11 564 313.86 564 310.11 554.25 310.11 554.25 310.11 554.25
 310.11 554.25 8 Y
V
310.11 554.25 306.36 564 310.11 564 313.86 564 310.11 554.25 5 L
N
303.36 472.99 535.13 573 C
447.36 498.75 521.61 537 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(discovere) 447.36 528.85 T
(d) 494.61 528.85 T
(Refs) 499.86 528.85 T
(tempPendingQ) 447.36 516.1 T
(pending) 447.36 503.35 T
303.36 472.99 535.13 573 C
303.36 484.5 526.86 573 C
424.86 499.5 524.61 538.5 R
1 H
0 Z
0 X
N
425.61 526.5 523.86 526.5 2 L
N
443.61 501 443.61 538.5 2 L
N
424.11 513.75 522.36 513.75 2 L
N
303.36 472.99 535.13 573 C
383.61 534 400.11 543 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 383.61 534.85 T
303.36 472.99 535.13 573 C
0 0 0 1 0 0 0 1 K
295.74 443.99 542.74 576 C
0 0 612 792 C
295.74 294.27 542.74 443.99 C
295.74 323.27 542.74 440.99 C
297.36 332.99 536.6 438.74 R
7 X
V
297.36 332.99 536.6 438.74 C
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
0 0 0 0.25 0.75 0.75 0.75 1 K
307.86 374.24 328.86 401.99 R
0 X
V
307.86 374.24 328.86 401.99 R
V
0 0 0 0.85 0.15 0.15 0.15 1 K
307.86 374.24 328.86 401.99 R
1 H
2 Z
N
295.74 323.27 542.74 440.99 C
309.36 401.24 315.36 413.24 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(F) 309.36 403.6 T
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
0.2 0.1 0 0 0.8 0.9 1 1 K
343.11 346.49 370.11 363.74 R
0 X
V
343.11 346.49 370.11 363.74 R
V
0.4 0.28 0 0.6 0 0.12 0.4 1 K
343.11 346.49 370.11 363.74 R
1 H
2 Z
N
295.74 323.27 542.74 440.99 C
348.36 348.74 365.61 360.74 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(Obj) 348.36 351.1 T
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
343.11 364.49 332.61 365.99 334.86 368.99 336.36 372.74 343.11 364.49 343.11 364.49 343.11 364.49
 343.11 364.49 8 Y
0 X
V
343.11 364.49 332.61 365.99 334.86 368.99 336.36 372.74 343.11 364.49 5 L
1 H
0 Z
N
317.61 378.74 334.86 368.99 2 L
N
295.74 323.27 542.74 440.99 C
380.61 401.99 396.36 416.99 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 380.61 407.35 T
(2) 389.61 405.1 T
295.74 323.27 542.74 440.99 C
310.86 391.49 327.36 400.49 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 310.86 392.34 T
295.74 323.27 542.74 440.99 C
346.11 412.49 361.86 427.49 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 346.11 417.85 T
(1) 355.11 415.6 T
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
0.2 0 0.2 0 0.8 1 0.8 1 K
379.86 377.24 400.86 404.99 R
0 X
V
379.86 377.24 400.86 404.99 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
379.86 377.24 400.86 404.99 R
1 H
0 Z
N
0 0 0 0.85 0.15 0.15 0.15 1 K
307.86 391.49 328.11 391.49 2 L
N
307.86 381.74 328.11 381.74 2 L
N
0.4 0 0.2 0.6 0 0.4 0.2 1 K
379.86 393.74 400.11 393.74 2 L
N
379.86 384.74 400.11 384.74 2 L
N
0.2 0 0.2 0 0.8 1 0.8 1 K
345.36 387.74 366.36 415.49 R
V
345.36 387.74 366.36 415.49 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
345.36 387.74 366.36 415.49 R
N
295.74 323.27 542.74 440.99 C
348.36 404.24 364.86 413.24 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 348.36 405.09 T
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
0.4 0 0.2 0.6 0 0.4 0.2 1 K
345.36 404.24 365.61 404.24 2 L
1 H
0 Z
0 X
N
345.36 395.24 365.61 395.24 2 L
N
0 0 0 1 0 0 0 1 K
402.36 404.24 412.11 401.24 409.86 398.24 407.61 395.24 402.36 404.24 402.36 404.24 402.36 404.24
 402.36 404.24 8 Y
V
402.36 404.24 412.11 401.24 409.86 398.24 407.61 395.24 402.36 404.24 5 L
N
409.86 398.24 433.11 380.99 2 L
N
366.36 413.99 375.36 408.74 372.36 406.49 369.36 404.24 366.36 413.99 366.36 413.99 366.36 413.99
 366.36 413.99 8 Y
V
366.36 413.99 375.36 408.74 372.36 406.49 369.36 404.24 366.36 413.99 5 L
N
372.36 406.49 385.86 388.49 2 L
N
295.74 323.27 542.74 440.99 C
445.86 358.49 520.1 396.74 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(discovere) 445.86 388.59 T
(d) 493.11 388.59 T
(Refs) 498.36 388.59 T
(tempPendingQ) 445.86 375.84 T
(pending) 445.86 363.09 T
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
423.36 359.24 523.1 398.24 R
1 H
0 Z
0 X
N
424.11 386.24 522.35 386.24 2 L
N
442.11 360.74 442.11 398.24 2 L
N
422.61 373.49 520.85 373.49 2 L
N
295.74 323.27 542.74 440.99 C
382.11 393.74 398.61 402.74 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 382.11 394.59 T
295.74 323.27 542.74 440.99 C
298.11 334.49 535.1 437.99 C
345.36 401.99 337.86 401.99 2 L
1 H
0 Z
0 X
N
328.11 401.99 337.86 405.74 337.86 401.99 337.86 398.24 328.11 401.99 328.11 401.99 328.11 401.99
 328.11 401.99 8 Y
V
328.11 401.99 337.86 405.74 337.86 401.99 337.86 398.24 328.11 401.99 5 L
N
295.74 323.27 542.74 440.99 C
0 0 0 1 0 0 0 1 K
295.74 294.27 542.74 443.99 C
0 0 612 792 C
295.74 157.27 542.74 294.27 C
295.79 186.27 542.7 291.27 C
299.54 185.52 538.79 291.27 R
7 X
V
299.54 186.27 538.79 291.27 C
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
0 0 0 0.25 0.75 0.75 0.75 1 K
310.04 226.77 331.04 254.52 R
0 X
V
310.04 226.77 331.04 254.52 R
V
0 0 0 0.85 0.15 0.15 0.15 1 K
310.04 226.77 331.04 254.52 R
1 H
2 Z
N
295.79 186.27 542.7 291.27 C
311.54 253.77 317.54 265.77 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(F) 311.54 256.13 T
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
0.2 0.1 0 0 0.8 0.9 1 1 K
345.29 199.02 372.29 216.27 R
0 X
V
345.29 199.02 372.29 216.27 R
V
0.4 0.28 0 0.6 0 0.12 0.4 1 K
345.29 199.02 372.29 216.27 R
1 H
2 Z
N
295.79 186.27 542.7 291.27 C
350.54 201.27 367.79 213.27 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(Obj) 350.54 203.63 T
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
319.79 231.27 345.29 217.02 2 L
1 H
0 Z
0 X
N
295.79 186.27 542.7 291.27 C
382.79 254.52 398.54 269.52 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 382.79 259.88 T
(2) 391.79 257.63 T
295.79 186.27 542.7 291.27 C
313.04 244.02 329.54 253.02 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 313.04 244.87 T
295.79 186.27 542.7 291.27 C
348.29 265.02 364.04 280.02 C
0 0 0 1 0 0 0 1 K
2 8.25 Q
0 X
(W) 348.29 270.38 T
(1) 357.29 268.13 T
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
0.2 0 0.2 0 0.8 1 0.8 1 K
382.04 229.77 403.04 257.52 R
0 X
V
382.04 229.77 403.04 257.52 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
382.04 229.77 403.04 257.52 R
1 H
0 Z
N
0 0 0 0.85 0.15 0.15 0.15 1 K
310.04 244.02 330.29 244.02 2 L
N
310.04 234.27 330.29 234.27 2 L
N
0.4 0 0.2 0.6 0 0.4 0.2 1 K
382.04 246.27 402.29 246.27 2 L
N
382.04 237.27 402.29 237.27 2 L
N
0.2 0 0.2 0 0.8 1 0.8 1 K
347.54 240.27 368.54 268.02 R
V
347.54 240.27 368.54 268.02 R
V
0.4 0 0.2 0.6 0 0.4 0.2 1 K
347.54 240.27 368.54 268.02 R
N
295.79 186.27 542.7 291.27 C
350.54 256.77 367.04 265.77 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 350.54 257.62 T
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
0.4 0 0.2 0.6 0 0.4 0.2 1 K
347.54 256.77 367.79 256.77 2 L
1 H
0 Z
0 X
N
347.54 247.77 367.79 247.77 2 L
N
0 0 0 1 0 0 0 1 K
404.54 256.77 413.54 251.52 410.54 249.27 407.54 247.02 404.54 256.77 404.54 256.77 404.54 256.77
 404.54 256.77 8 Y
V
404.54 256.77 413.54 251.52 410.54 249.27 407.54 247.02 404.54 256.77 5 L
N
410.54 249.27 433.79 220.02 2 L
N
368.54 266.52 377.54 261.27 374.54 259.02 371.54 256.77 368.54 266.52 368.54 266.52 368.54 266.52
 368.54 266.52 8 Y
V
368.54 266.52 377.54 261.27 374.54 259.02 371.54 256.77 368.54 266.52 5 L
N
374.54 259.02 388.04 241.02 2 L
N
295.79 186.27 542.7 291.27 C
448.04 211.02 522.29 249.27 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(discovere) 448.04 241.12 T
(d) 495.29 241.12 T
(Refs) 500.54 241.12 T
(tempPendingQ) 448.04 228.37 T
(pending) 448.04 215.62 T
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
425.54 211.77 525.29 250.77 R
1 H
0 Z
0 X
N
426.29 238.77 524.54 238.77 2 L
N
444.29 213.27 444.29 250.77 2 L
N
424.79 226.02 523.04 226.02 2 L
N
295.79 186.27 542.7 291.27 C
384.29 246.27 400.79 255.27 C
0 0 0 1 0 0 0 1 K
7 8.25 Q
0 X
(PEN) 384.29 247.12 T
295.79 186.27 542.7 291.27 C
300.29 187.02 537.29 290.52 C
347.54 254.52 340.04 254.52 2 L
1 H
0 Z
0 X
N
330.29 254.52 340.04 258.27 340.04 254.52 340.04 250.77 330.29 254.52 330.29 254.52 330.29 254.52
 330.29 254.52 8 Y
V
330.29 254.52 340.04 258.27 340.04 254.52 340.04 250.77 330.29 254.52 5 L
N
295.79 186.27 542.7 291.27 C
0 0 0 1 0 0 0 1 K
295.74 157.27 542.74 294.27 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "16" 22
%%Page: "17" 23
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 17) 518.89 34.17 T
2 12 Q
(As) 72 686 T
(described) 88.02 686 T
(earlier) 136.69 686 T
(,) 166.86 686 T
(the) 172.54 686 T
7 10 Q
(OBJ_REFS_DO\050\051) 189.9 686 T
2 12 Q
(macro) 270.58 686 T
(will) 303.26 686 T
(treat) 324.62 686 T
(weak) 348.63 686 T
(reference) 376.64 686 T
(objects) 423.95 686 T
(specially) 460.63 686 T
(during) 505.98 686 T
(the \322disco) 72 672 T
(v) 120.14 672 T
(ery phase\323 \050controlled by) 125.96 672 T
7 10 Q
({start|stop}DiscoveringWeakRefs\050\051) 250.6 672 T
2 12 Q
(\051. In disco) 448.6 672 T
(v) 496.74 672 T
(ery) 502.56 672 T
(mode,) 72 658 T
7 10 Q
(obj) 104.66 658 T
2 12 Q
( will be link) 122.66 658 T
(ed into a) 180.22 658 T
7 10 Q
(discoveredRefs) 224.54 658 T
2 12 Q
( queue if it is a weak reference object that is) 308.54 658 T
7 10 Q
(ACTIVE) 72 644 T
2 12 Q
(.) 108 644 T
(The) 113.97 644 T
(macro) 135.59 644 T
(will) 168.54 644 T
(not) 190.18 644 T
(e) 208.48 644 T
(x) 213.63 644 T
(ecute) 219.45 644 T
5 F
(statements) 247.74 644 T
2 F
(on) 301.37 644 T
(the) 316.33 644 T
7 10 Q
(referent) 333.96 644 T
2 12 Q
(\336eld) 384.93 644 T
(of) 409.23 644 T
(a) 422.19 644 T
(disco) 430.48 644 T
(v) 455.64 644 T
(ered) 461.46 644 T
(weak) 485.07 644 T
(refer-) 513.36 644 T
(ence) 72 630 T
(object.) 96.96 630 T
(The) 132.26 630 T
(collector) 153.89 630 T
(should) 198.85 630 T
(start) 233.83 630 T
(the) 257.46 630 T
(disco) 275.1 630 T
(v) 300.25 630 T
(ery) 306.07 630 T
(phase) 324.37 630 T
(while) 354.67 630 T
(disco) 384.3 630 T
(v) 409.45 630 T
(ering) 415.27 630 T
(all) 442.91 630 T
(li) 457.88 630 T
(v) 464.25 630 T
(e) 470.07 630 T
(objects) 478.37 630 T
(start-) 515.34 630 T
(ing from strong roots \050the mark phase of a Mark & Sweep collector) 72 616 T
(, for e) 395.46 616 T
(xample\051, and stop the) 423.6 616 T
(disco) 72 602 T
(v) 97.15 602 T
(ery) 102.97 602 T
(phase) 120.91 602 T
(before) 150.85 602 T
(processing) 184.11 602 T
(weak) 238.05 602 T
(roots.) 265.99 602 T
(If) 295.6 602 T
(the) 306.21 602 T
(collector) 323.49 602 T
(mak) 368.09 602 T
(es) 388.64 602 T
(additional) 401.25 602 T
(iterations) 451.86 602 T
(o) 499.14 602 T
(v) 504.96 602 T
(er) 510.78 602 T
(the) 522.72 602 T
(object graph, it can use the \322non-disco) 72 588 T
(v) 256.12 588 T
(ering\323 v) 261.94 588 T
(ersion of the macro called) 300.74 588 T
7 10 Q
(OBJ_REFS_DO_IGNORING_WEAKNESS\050\051) 72 574 T
2 12 Q
(,) 258 574 T
(which) 263.89 574 T
(treats) 296.1 574 T
(all) 324.98 574 T
(\336elds) 339.86 574 T
(of) 368.75 574 T
(weak) 381.63 574 T
(reference) 409.84 574 T
(objects) 457.35 574 T
(as) 494.23 574 T
(strong) 507.11 574 T
(references.) 72 560 T
(After completing a pass through all objects reachable from strong roots, the collector should call) 72 534 T
7 10 Q
(stopDiscoveringWeakRefs\050\051) 72 520 T
2 12 Q
(, then process the weak roots by calling:) 222 520 T
8 10 Q
([must use]) 72 501.33 T
7 F
(void) 72 489.33 T
10 F
(processWeakRoots) 102 489.33 T
7 F
(\050WeakRootPredicate isDying,) 198 489.33 T
(                      RootCallback weakVMRootCB, RootCallback weakRefCB,) 72 477.33 T
(                      SimpleFct transitiveScannerCB, void *data\051) 72 465.33 T
2 12 Q
(This) 72 440 T
(function) 96.21 440 T
(will) 139.07 440 T
(process) 160.61 440 T
(all) 199.47 440 T
(weak) 214.34 440 T
(roots) 242.53 440 T
(in) 269.4 440 T
(the) 281.6 440 T
(JVM,) 299.14 440 T
(which) 329.01 440 T
(includes) 361.2 440 T
(the) 404.07 440 T
7 10 Q
(discoveredRefs) 421.6 440 T
2 12 Q
(queue) 508.47 440 T
(of weak reference objects disco) 72 426 T
(v) 223.09 426 T
(ered by) 228.91 426 T
7 10 Q
(OBJ_REFS_DO\050\051) 267.56 426 T
2 12 Q
( as well as certain JVM data structures) 345.56 426 T
(lik) 72 412 T
(e the string interning table. The collector needs to pass a predicate function as the) 84.55 412 T
7 10 Q
(isDying) 478.48 412 T
2 12 Q
(parameter) 72 398 T
(, which should return) 119.5 398 T
7 10 Q
(TRUE) 224.48 398 T
2 12 Q
( if the object passed is dying \050not mark) 248.48 398 T
(ed, or not in \322to) 435.01 398 T
(space,) 72 384 T
(\323) 100.81 384 T
(etc.\051) 108.82 384 T
(The) 132.49 384 T
(collector) 153.82 384 T
(also) 198.49 384 T
(needs) 220.5 384 T
(to) 250.51 384 T
(supply) 262.52 384 T
(se) 297.2 384 T
(v) 306.9 384 T
(eral) 312.72 384 T
(callbacks) 333.39 384 T
(as) 380.72 384 T
(described) 393.39 384 T
(belo) 442.06 384 T
(w) 462.42 384 T
(.) 470.31 384 T
(The) 475.98 384 T
(memory) 497.32 384 T
(system processes the weak roots as follo) 72 370 T
(ws:) 265.67 370 T
(1.) 90 349.8 T
(F) 108 349.8 T
(or each \322strength\323 of weak reference \050from strongest to weak) 114.49 349.8 T
(est: soft, weak, \336nal, phan-) 407.93 349.8 T
(tom\051 on the) 108 337 T
7 10 Q
(discoveredRefs) 166.33 337 T
2 12 Q
( queue disco) 250.33 337 T
(v) 310.14 337 T
(ered by) 315.96 337 T
7 10 Q
(OBJ_REFS_DO\050\051) 354.61 337 T
2 12 Q
( do:) 432.61 337 T
(1.1.) 108 321.2 T
(In) 129 321.2 T
(v) 138.52 321.2 T
(ok) 144.28 321.2 T
(e) 156.16 321.2 T
7 10 Q
(isDying\050\051) 164.48 321.2 T
2 12 Q
( on each) 218.48 321.2 T
7 10 Q
(referent) 261.47 321.2 T
2 12 Q
( \336eld of each reference object of that strength.) 309.47 321.2 T
10 F
(\245) 108 305.6 T
2 F
(If) 115.2 305.6 T
7 10 Q
(isDying\050\051) 126.19 305.6 T
2 12 Q
( returns f) 180.19 305.6 T
(alse, update the) 223.39 305.6 T
7 10 Q
(referent) 300.71 305.6 T
2 12 Q
( \336eld of the weak reference object by) 348.71 305.6 T
(calling the) 118.8 291.6 T
7 10 Q
(weakRefCB\050\051) 172.13 291.6 T
2 12 Q
( on the \336eld address. Then remo) 238.13 291.6 T
(v) 392.26 291.6 T
(e the reference object from) 398.08 291.6 T
(the) 118.8 277.6 T
7 10 Q
(discoveredRefs) 136.46 277.6 T
2 12 Q
( queue \050which return the reference to the) 220.46 277.6 T
7 10 Q
(ACTIVE) 418.39 277.6 T
2 12 Q
( state\051.) 454.39 277.6 T
10 F
(\245) 108 260.6 T
2 F
(If) 115.2 260.6 T
7 10 Q
(isDying\050\051) 126.19 260.6 T
2 12 Q
( returns true and if processing) 180.19 260.6 T
7 10 Q
(SoftReference) 326.16 260.6 T
2 12 Q
( objects \050and memory is) 404.16 260.6 T
(tight\051, or) 118.8 246.6 T
7 10 Q
(WeakReference) 163.8 246.6 T
2 12 Q
( objects, then clear the referent \336eld and link the weak refer-) 241.8 246.6 T
(ence) 118.8 232.6 T
(object) 143.49 232.6 T
(into) 175.51 232.6 T
(the) 196.89 232.6 T
7 10 Q
(tempPendingQ) 214.25 232.6 T
2 12 Q
(.) 286.25 232.6 T
(The) 291.95 232.6 T
7 10 Q
(tempPendingQ) 313.31 232.6 T
2 12 Q
(is) 388.01 232.6 T
(a) 398.72 232.6 T
(global) 406.75 232.6 T
(root) 439.45 232.6 T
(which) 461.48 232.6 T
(is) 493.51 232.6 T
(al) 504.21 232.6 T
(w) 512.76 232.6 T
(ays) 521.3 232.6 T
(NULL at the be) 118.8 218.6 T
(ginning of GC, b) 194.27 218.6 T
(ut subsequent calls to) 275.36 218.6 T
7 10 Q
(processStrongRoots\050\051) 381.36 218.6 T
2 12 Q
( or) 501.36 218.6 T
7 10 Q
(processRootsRound2\050\051) 118.8 204.6 T
2 12 Q
( will see it.) 238.8 204.6 T
(1.2.) 108 187.4 T
(If) 128.95 187.4 T
(processing) 139.89 187.4 T
7 10 Q
(FinalReference) 194.16 187.4 T
2 12 Q
(or) 281.11 187.4 T
7 10 Q
(PhantomReference) 294.05 187.4 T
2 12 Q
(objects,) 393 187.4 T
(then) 432.94 187.4 T
(in) 456.56 187.4 T
(a) 468.84 187.4 T
(second) 477.12 187.4 T
(pass,) 513.39 187.4 T
(scan and update the) 126 174.6 T
7 10 Q
(referent) 223.31 174.6 T
2 12 Q
( \336eld of each reference object by calling the) 271.31 174.6 T
7 10 Q
(weakRefCB\050\051) 126 161.8 T
2 12 Q
( on the \336eld address. Then link the weak reference object into the) 192 161.8 T
7 10 Q
(temp-) 508.6 161.8 T
(PendingQ) 126 149 T
2 12 Q
(. Note that the \336rst pass remo) 174 149 T
(v) 314.81 149 T
(ed all of the weak reference objects with non-) 320.63 149 T
(dying referents.) 126 136.2 T
(1.3. If the) 108 120.4 T
7 10 Q
(weakRefCB\050\051) 157.66 120.4 T
2 12 Q
( does not scan the transiti) 223.66 120.4 T
(v) 345.01 120.4 T
(e closure of the objects reachable from) 350.83 120.4 T
(the) 126 107.6 T
7 10 Q
(referent) 143.66 107.6 T
2 12 Q
( \336elds, then the caller must pro) 191.66 107.6 T
(vide a) 339.8 107.6 T
7 10 Q
(transitiveScannerCB) 371.8 107.6 T
2 12 Q
( to do this.) 485.8 107.6 T
(Otherwise, the collector can pass NULL as the) 126 94.8 T
7 10 Q
(transitiveScannerCB) 352.94 94.8 T
2 12 Q
( parameter) 466.94 94.8 T
(.) 517.26 94.8 T
(2.) 90 79 T
(F) 108 79 T
(or) 114.49 79 T
(each) 127.17 79 T
(internal) 151.84 79 T
(weak) 191.18 79 T
(data) 219.19 79 T
(structure) 241.87 79 T
(in) 286.54 79 T
(the) 298.56 79 T
(VM) 315.91 79 T
(\050note) 337.92 79 T
(that) 365.27 79 T
(these) 385.95 79 T
(are) 413.3 79 T
(weak) 430.63 79 T
(er) 455.83 79 T
(that) 467.84 79 T
(Ja) 488.53 79 T
(v) 498.28 79 T
(a) 503.98 79 T
(weak) 511.99 79 T
(references\051:) 108 66.2 T
FMENDPAGE
%%EndPage: "17" 23
%%Page: "18" 24
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 18) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(2.1.) 108 711.8 T
(In) 129 711.8 T
(v) 138.52 711.8 T
(ok) 144.28 711.8 T
(e) 156.16 711.8 T
7 10 Q
(isDying\050\051) 164.48 711.8 T
2 12 Q
( on each weak reference.) 218.48 711.8 T
(2.2.) 108 696 T
(In a second pass, in) 129 696 T
(v) 222.17 696 T
(ok) 227.93 696 T
(e) 239.81 696 T
7 10 Q
(weakVMRootCB\050\051) 248.14 696 T
2 12 Q
( on each weak reference that the memory) 332.14 696 T
(system w) 126 683.2 T
(ants to k) 170.88 683.2 T
(eep ali) 211.43 683.2 T
(v) 242.78 683.2 T
(e.) 248.6 683.2 T
(The) 72 658.6 T
(function) 93.22 658.6 T
7 10 Q
(processWeakRoots\050\051) 135.78 658.6 T
2 12 Q
(creates) 246.35 658.6 T
(a) 282.22 658.6 T
7 10 Q
(tempPendingQ) 290.11 658.6 T
2 12 Q
(of) 364.67 658.6 T
(weak) 377.23 658.6 T
(reference) 405.12 658.6 T
(objects) 452.31 658.6 T
(by) 488.87 658.6 T
(linking) 503.43 658.6 T
(the objects together using their) 72 644.6 T
7 10 Q
(next) 222.98 644.6 T
2 12 Q
( \336eld. But the collector has ne) 246.98 644.6 T
(v) 390.34 644.6 T
(er seen these \336elds. If the col-) 396.16 644.6 T
(lector called) 72 630.6 T
7 10 Q
(OBJ_REFS_DO\050\051) 133.98 630.6 T
2 12 Q
( on objects before the) 211.98 630.6 T
(y were mo) 315.11 630.6 T
(v) 365.58 630.6 T
(ed, or if all pointers in the heap) 371.4 630.6 T
(need to be \322re) 72 616.6 T
(v) 138.67 616.6 T
(ersed\323 or otherwise processed, then the collector must call) 144.49 616.6 T
7 10 Q
(updateTempPend-) 427.09 616.6 T
(ingQ\050\051) 72 602.6 T
2 12 Q
( passing a) 108 602.6 T
7 10 Q
(weakRefUpdaterCB\050\051) 158.33 602.6 T
2 12 Q
( callback.) 266.33 602.6 T
4 11 Q
(2.2.3.5  Bef) 72 576.27 T
(or) 123.36 576.27 T
(e and After Collection) 133.54 576.27 T
2 12 Q
(There) 72 550.6 T
(is) 102.52 550.6 T
(some) 113.06 550.6 T
(bookk) 140.92 550.6 T
(eeping) 170.8 550.6 T
(that) 205.33 550.6 T
(the) 225.86 550.6 T
(collector) 243.06 550.6 T
(must) 287.58 550.6 T
(do) 313.46 550.6 T
(before) 327.99 550.6 T
(and) 361.17 550.6 T
(after) 381.04 550.6 T
(a) 405.55 550.6 T
(collection.) 413.42 550.6 T
(Before) 466.28 550.6 T
(starting) 501.47 550.6 T
(an iteration o) 72 536.6 T
(v) 135.14 536.6 T
(er reachable objects \050for e) 140.96 536.6 T
(xample, a marking phase\051, the collector must call) 265.39 536.6 T
7 10 Q
(clearClassReferencedBits\050\051) 72 522.6 T
2 12 Q
( to mark each class structure as \322unreferenced,) 228 522.6 T
(\323 so that) 450.41 522.6 T
7 10 Q
(scan-) 493.4 522.6 T
(NearClasses\050\051) 72 508.6 T
2 12 Q
( can mark the referenced classes correctly) 150 508.6 T
(. The collector must also call) 349.8 508.6 T
7 10 Q
(start-) 491.45 508.6 T
(DiscoveringWeakRefs\050\051) 72 494.6 T
2 12 Q
( to tell the memory system \050) 198 494.6 T
7 10 Q
(OBJ_REFS_DO\050\051) 332.66 494.6 T
2 12 Q
( in particular\051 to be) 410.66 494.6 T
(gin) 502.46 494.6 T
(disco) 72 480.6 T
(v) 97.15 480.6 T
(ery phase mode.) 102.97 480.6 T
(After the collection has been completed \050and the object graph has been restored\051, the collector) 72 454.6 T
(needs to call) 72 440.6 T
7 10 Q
(queuePendingRefs\050\051) 134.99 440.6 T
2 12 Q
( to mer) 242.99 440.6 T
(ge the weak reference objects on the temporary pend-) 276.77 440.6 T
(ing) 72 426.6 T
(list) 90.24 426.6 T
(onto) 107.82 426.6 T
(the) 132.07 426.6 T
(Ja) 149.64 426.6 T
(v) 159.39 426.6 T
(a) 165.09 426.6 T
(static) 173.33 426.6 T
(v) 201.56 426.6 T
(ariable) 207.26 426.6 T
7 10 Q
(pendingQ) 242.82 426.6 T
2 12 Q
(.) 290.82 426.6 T
(This) 296.73 426.6 T
(global) 320.97 426.6 T
(queue) 353.88 426.6 T
(may) 385.44 426.6 T
(not) 409.01 426.6 T
(ha) 427.25 426.6 T
(v) 438.34 426.6 T
(e) 444.16 426.6 T
(been) 452.39 426.6 T
(empty) 477.95 426.6 T
(at) 510.86 426.6 T
(the) 522.43 426.6 T
(be) 72 412.6 T
(ginning) 83.15 412.6 T
(of) 122.71 412.6 T
(GC.) 135.6 412.6 T
(If) 158.16 412.6 T
(this) 169.05 412.6 T
(GC) 189.28 412.6 T
(added) 208.84 412.6 T
(items) 240.39 412.6 T
(to) 269.29 412.6 T
(the) 281.52 412.6 T
(global) 299.08 412.6 T
(queue,) 331.97 412.6 T
(the) 366.52 412.6 T
(memory) 384.08 412.6 T
(system) 426.97 412.6 T
(will) 463.2 412.6 T
(notify) 484.76 412.6 T
(Ja) 516.32 412.6 T
(v) 526.08 412.6 T
(a) 531.78 412.6 T
(code to tak) 72 398.6 T
(e care of the queue.) 124.54 398.6 T
(If the collector has mo) 72 372.6 T
(v) 179.8 372.6 T
(ed an) 185.62 372.6 T
(y objects, it needs to increment) 211.09 372.6 T
7 10 Q
(gcMoveCount) 363.41 372.6 T
2 12 Q
(.) 429.41 372.6 T
4 11 Q
(2.2.3.6  Example Collector: ReallySimpleHeap) 72 346.27 T
2 12 Q
(ReallySimpleHeap) 72 320.6 T
(is) 165.53 320.6 T
(a) 176.41 320.6 T
(mark/sweep) 184.61 320.6 T
(collector\321a) 245.46 320.6 T
(simpli\336ed) 307.65 320.6 T
(v) 358.53 320.6 T
(ersion) 364.35 320.6 T
(of) 396.55 320.6 T
(the) 409.42 320.6 T
(\322simpleheap\323) 426.95 320.6 T
(collector) 495.14 320.6 T
(in the EVM. Here is the code for collection \050b) 72 306.6 T
(ut not allocation or free lists\051. Note that this is a) 292.38 306.6 T
(non-mo) 72 292.6 T
(ving collector:) 109.15 292.6 T
7 10 Q
(void) 72 273.93 T
10 F
(scanObjectCB) 102 273.93 T
7 F
(\050java_lang_Object **root, void* data\051 {) 174 273.93 T
(    java_lang_Object *obj = *root;) 72 261.93 T
(    NearClass *ncls = getNearClass\050obj\051;) 72 249.93 T
(    if \050hasLiveMark\050ncls\051\051 return;                  /* Already done.  */) 72 225.93 T
(    setNearClass\050obj, setLiveMark\050ncls\051\051;           /* Mark it.       */) 72 213.93 T
(    scanNearClasses\050obj, ncls, scanObjectCB, data\051;) 72 201.93 T
(    OBJ_REFS_DO\050obj, ncls, if \050*refPtr\051 scanObjectCB\050refPtr, data\051\051;) 72 189.93 T
(    /* note that "refPtr" is defined by OBJ_REFS_DO macro */) 72 177.93 T
(}) 72 165.93 T
(bool_t) 72 141.93 T
10 F
(isDyingCB) 114 141.93 T
7 F
(\050java_lang_Object *obj, void *data\051 {) 168 141.93 T
(    return !hasLiveMarkObj\050obj\051;) 72 129.93 T
(}) 72 117.93 T
FMENDPAGE
%%EndPage: "18" 24
%%Page: "19" 25
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 19) 518.89 34.17 T
7 10 Q
(void) 72 713.33 T
10 F
(mark) 102 713.33 T
7 F
(\050\051 {) 126 713.33 T
(    clearClassReferencedBits\050\051;) 72 701.33 T
(    startDiscoveringWeakRefs\050\051;) 72 689.33 T
(    processStrongRoots\050scanObjectCB, scanObjectCB, scanObjectCB, scanObjectCB,) 72 677.33 T
(                       FALSE,     /* Don't scan all classes        */) 72 665.33 T
(                       NULL\051;     /* No data needed                */) 72 653.33 T
(    stopDiscoveringWeakRefs\050\051;) 72 641.33 T
(    processWeakRoots\050isDyingCB, scanObjectCB, scanObjectCB,) 72 629.33 T
(                     NULL,      /* scanObjectCB did transitive closure */) 72 617.33 T
(                     NULL\051;     /* No data needed                      */) 72 605.33 T
(}) 72 593.33 T
(void) 72 569.33 T
10 F
(freeDeadObjectCB) 102 569.33 T
7 F
(\050java_lang_Object *obj, void *data\051 {) 198 569.33 T
(    if \050isDyingCB\050obj, NULL\051\051) 72 557.33 T
(        myFreeObject\050obj, ...\051; /* link onto free list */) 72 545.33 T
(}) 72 533.33 T
(void) 72 509.33 T
10 F
(sweep) 102 509.33 T
7 F
(\050\051 {) 132 509.33 T
(    /* walk over heap, putting unmarked objects onto a free list. */) 72 497.33 T
(    specificObjectsDo\050freeDeadObjectCB, NULL\051;) 72 485.33 T
(}) 72 473.33 T
(bool_t) 72 449.33 T
10 F
(specificGC) 114 449.33 T
7 F
(\050java_int wordsRequested, bool_t fullCollection\051 {) 174 449.33 T
(    mark\050\051;) 72 437.33 T
(    sweep\050\051;) 72 425.33 T
(    queuePendingRefs\050\051; /* Tell Java code about weak reference objects */) 72 413.33 T
(    /* NOTE: This collector does not support FAST_ALLOCATION. */) 72 401.33 T
(    return TRUE; /* It was a full GC, so sweep classes. */) 72 389.33 T
(}) 72 377.33 T
2 12 Q
(The) 72 352 T
(use) 93.44 352 T
(of) 112.21 352 T
(recursion) 124.99 352 T
(in) 172.42 352 T
7 10 Q
(scanObjectCB) 184.54 352 T
2 12 Q
(abo) 259.32 352 T
(v) 276.46 352 T
(e) 282.29 352 T
(w) 290.39 352 T
(ould) 298.94 352 T
(result) 323.05 352 T
(in) 352.49 352 T
(poor) 364.61 352 T
(performance) 389.39 352 T
(and) 452.8 352 T
(stack) 472.91 352 T
(use,) 500.35 352 T
(b) 522.12 352 T
(ut) 527.88 352 T
(mak) 72 338 T
(es the e) 92.54 338 T
(xample simpler) 128.35 338 T
(.) 202.02 338 T
4 11 Q
(2.2.4  Expansion) 72 311.67 T
2 12 Q
(A collector typically e) 72 286 T
(xpands the heap when ask) 178.8 286 T
(ed to by the memory system \050see the description) 303.98 286 T
(of) 72 272 T
7 10 Q
(getLocksThenGC\050\051) 85 272 T
2 12 Q
( abo) 181 272 T
(v) 201.14 272 T
(e\051. Some collectors also call their) 206.96 272 T
7 10 Q
(specificExpandHeap\050\051) 369.94 272 T
2 12 Q
( as a w) 489.94 272 T
(ay) 522.8 272 T
(to) 72 258 T
(allocate) 83.99 258 T
(the) 123.97 258 T
(initial) 141.29 258 T
(heap) 171.96 258 T
(in) 197.27 258 T
7 10 Q
(specificInitHeap\050\051) 209.26 258 T
2 12 Q
(.) 317.27 258 T
(Either) 322.92 258 T
(w) 354.91 258 T
(ay) 363.45 258 T
(,) 374 258 T
(the) 379.66 258 T
(collector) 396.98 258 T
(can) 441.62 258 T
(count) 460.94 258 T
(on) 490.26 258 T
(ha) 504.92 258 T
(ving) 516.01 258 T
(the heap lock and that all threads are suspended.) 72 244 T
8 10 Q
([must define]) 72 225.33 T
7 F
(    uintptr_t) 72 213.33 T
10 F
(specificExpandHeap) 156 213.33 T
7 F
(\050uintptr_t minWords,) 264 213.33 T
(                                 uintptr_t suggestedWords\051) 72 201.33 T
2 12 Q
(The) 72 176 T
(collector) 93.19 176 T
(should) 137.72 176 T
(attempt) 172.26 176 T
(to) 210.79 176 T
(e) 222.66 176 T
(xpand) 227.81 176 T
(the) 259.67 176 T
(heap) 276.87 176 T
(by) 302.06 176 T
(at) 316.6 176 T
(least) 327.8 176 T
7 10 Q
(minWords) 352.33 176 T
2 12 Q
(up) 402.86 176 T
(to) 417.4 176 T
7 10 Q
(suggestedWords) 429.27 176 T
2 12 Q
(.) 513.27 176 T
(The) 518.8 176 T
(memory system currently uses an aggressi) 72 162 T
(v) 274.67 162 T
(e heap e) 280.49 162 T
(xpansion strate) 319.62 162 T
(gy) 391.76 162 T
(, and suggests doubling the) 402.98 162 T
(heap size at each e) 72 148 T
(xpansion. The result should be 0 if the e) 161.11 148 T
(xpansion f) 353.24 148 T
(ailed, otherwise the actual) 403.45 148 T
(number of w) 72 134 T
(ords added to the heap. The sizes refer to the number of w) 133.2 134 T
(ords a) 412.01 134 T
(v) 440.76 134 T
(ailable for objects.) 446.46 134 T
FMENDPAGE
%%EndPage: "19" 25
%%Page: "20" 26
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 20) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
4 11 Q
0 X
(2.2.5  Iteration) 72 712.67 T
2 12 Q
(The memory system pro) 72 687 T
(vides a function) 188.81 687 T
7 10 Q
(allObjectsDo\050\051) 268.46 687 T
2 12 Q
( that iterates o) 352.46 687 T
(v) 419.94 687 T
(er all objects in the) 425.76 687 T
(heap.) 72 673 T
(The) 100.52 673 T
(memory) 122.04 673 T
(system) 164.89 673 T
(will) 201.09 673 T
(suspend) 222.62 673 T
(all) 264.15 673 T
(threads,) 279.01 673 T
(update) 319.53 673 T
(the) 354.38 673 T
(threads') 371.9 673 T
(LABs,) 411.58 673 T
(then) 446.11 673 T
(call) 469.63 673 T
(the) 489.82 673 T
(collec-) 507.35 673 T
(tor's heap iterator:) 72 659 T
8 10 Q
([must define]) 72 640.33 T
7 F
(    void) 72 628.33 T
10 F
(specificObjectsDo) 126 628.33 T
7 F
(\050ObjIterator fct, void *data\051) 228 628.33 T
2 12 Q
(The collector must call) 72 603 T
7 10 Q
(fct) 185.32 603 T
2 12 Q
( e) 203.32 603 T
(xactly once for each object in the heap, passing it a reference to the) 211.46 603 T
(object and) 72 589 T
7 10 Q
(data) 124.66 589 T
2 12 Q
(. The collector is allo) 148.66 589 T
(wed to call) 250.01 589 T
7 10 Q
(fct) 305.66 589 T
2 12 Q
( with objects that w) 323.66 589 T
(ould be \322dead\323 if a GC) 417.54 589 T
(w) 72 575 T
(as done before the call to speci\336cObjectsDo.) 80.54 575 T
4 F
(2.3  Read/Write Barriers) 72 546 T
2 F
(A collector may also implement barrier macros, which gi) 72 521 T
(v) 345.98 521 T
(e the collector hooks into the JVM to) 351.8 521 T
(monitor v) 72 507 T
(arious acti) 118.7 507 T
(vities. Barriers don't actually do a read, write, or allocate; the) 168.06 507 T
(y just do an) 460.98 507 T
(y) 516.47 507 T
(necessary bookk) 72 493 T
(eeping. There are barriers for Ja) 151.52 493 T
(v) 304.55 493 T
(a heap and Ja) 310.25 493 T
(v) 374.32 493 T
(a static v) 380.02 493 T
(ariable access, b) 422.38 493 T
(ut not) 500.44 493 T
(for Ja) 72 479 T
(v) 98.75 479 T
(a stack access \050because of type-indeterminate bytecodes lik) 104.45 479 T
(e \322dup\323\051.) 389.24 479 T
(A collector must de\336ne all of the follo) 72 453 T
(wing macros, b) 255.35 453 T
(ut it may lea) 328.76 453 T
(v) 388.19 453 T
(e the macro bodies empty for) 394.01 453 T
(all unnecessary operations. There are se) 72 439 T
(v) 262.97 439 T
(eral general rules for barriers:) 268.79 439 T
10 F
(\245) 90 419 T
2 F
(Read barrier macros must be an e) 108 419 T
(xpression returning a v) 268.44 419 T
(alue, though this v) 378.46 419 T
(alue will be) 466.82 419 T
(ignored. This allo) 108 405 T
(ws callers to use read barriers in comma-e) 192.7 405 T
(xpressions.) 394.79 405 T
10 F
(\245) 90 388 T
2 F
(Write) 108 388 T
(barrier) 138.16 388 T
(macros) 172.98 388 T
(tak) 210.47 388 T
(e) 225.02 388 T
(the) 233.18 388 T
(object) 250.68 388 T
(being) 282.85 388 T
(modi\336ed) 312.35 388 T
(\050heap) 357.86 388 T
(barrier) 387.35 388 T
(only\051,) 422.17 388 T
(the) 453.34 388 T
(address) 470.84 388 T
(of) 509.66 388 T
(the) 522.5 388 T
(\336eld/v) 108 374 T
(ariable to be modi\336ed, and the ne) 138.37 374 T
(w v) 298.38 374 T
(alue. Write barriers are called before the ne) 315.74 374 T
(w) 523.36 374 T
(v) 108 360 T
(alue is written so the barrier can see the old v) 113.7 360 T
(alue and the ne) 330.68 360 T
(w v) 402.7 360 T
(alue.) 420.06 360 T
10 F
(\245) 90 343 T
2 F
(All barrier macros can only be called when the caller is inconsistent.) 108 343 T
8 10 Q
([must define]) 72 327.33 T
7 F
(    bool_t) 72 315.33 T
10 F
(READ_HEAP_BARRIER) 138 315.33 T
7 F
(\050java_lang_Object *obj,) 240 315.33 T
(                             java_lang_Object **refAddr\051) 72 303.33 T
(    void) 72 291.33 T
10 F
(WRITE_HEAP_BARRIER) 132 291.33 T
7 F
(\050java_lang_Object *obj,) 240 291.33 T
(                             java_lang_Object **refAddr,) 72 279.33 T
(                             java_lang_Object *rr\051) 72 267.33 T
(    bool_t) 72 255.33 T
10 F
(READ_STATIC_BARRIER) 138 255.33 T
7 F
(\050java_lang_Object **refAddr\051) 252 255.33 T
(    void) 72 243.33 T
10 F
(WRITE_STATIC_BARRIER) 132 243.33 T
7 F
(\050java_lang_Object **refAddr,) 252 243.33 T
(                               java_lang_Object *rr\051) 72 231.33 T
2 12 Q
(The read/write barriers are enforced by the con) 72 206 T
(v) 297.1 206 T
(ention in the VM of only accessing objects) 302.92 206 T
(through the) 72 192 T
7 10 Q
(memsys) 130 192 T
2 12 Q
( interf) 166 192 T
(ace or the LLNI interf) 194.87 192 T
(ace \050which uses) 300.71 192 T
7 10 Q
(memsys) 379.68 192 T
2 12 Q
(\051. The) 415.68 192 T
7 10 Q
(memsys) 447.34 192 T
2 12 Q
( interf) 483.34 192 T
(ace) 512.21 192 T
(pro) 72 178 T
(vides a v) 87.82 178 T
(ariety of object class and hash code accessors, object \336eld accessors, array element) 130.18 178 T
(accessors,) 72 164 T
(and) 123.05 164 T
(static) 143.11 164 T
(\336eld) 171.18 164 T
(accessors.) 195.26 164 T
(The) 246.3 164 T
(only) 267.7 164 T
(code) 291.77 164 T
(which) 317.17 164 T
(is) 349.23 164 T
(allo) 359.97 164 T
(wed) 377.67 164 T
(to) 400.4 164 T
(directly) 412.47 164 T
(manipulate) 451.87 164 T
(object) 507.93 164 T
(state is the memsys interf) 72 150 T
(ace and the collector itself.) 193.87 150 T
(If a collector does not need an) 72 124 T
(y read or write barriers, or it can do its bookk) 216.44 124 T
(eeping in batches, it) 433.94 124 T
(should de\336ne the macros) 72 110 T
7 10 Q
(canBatchReadBarrier) 194.65 110 T
2 12 Q
( and/or) 308.65 110 T
7 10 Q
(canBatchWriteBarrier) 345.31 110 T
2 12 Q
( to) 465.31 110 T
7 10 Q
(TRUE) 480.65 110 T
2 12 Q
(. If a) 504.65 110 T
(collector) 72 96 T
(can) 116.72 96 T
(do) 136.12 96 T
(its) 150.85 96 T
(bookk) 164.93 96 T
(eeping) 194.81 96 T
(in) 229.54 96 T
(batches,) 241.61 96 T
(then) 283.33 96 T
(it) 306.73 96 T
(should) 316.14 96 T
(also) 350.88 96 T
(de\336ne) 372.95 96 T
(one) 405.01 96 T
(or) 425.08 96 T
(both) 437.81 96 T
(of) 461.88 96 T
(these) 474.61 96 T
(macros:) 502.01 96 T
FMENDPAGE
%%EndPage: "20" 26
%%Page: "21" 27
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 21) 518.89 34.17 T
8 10 Q
([must define]) 72 713.33 T
7 F
(    void) 72 701.33 T
10 F
(BATCH_HEAP_READ_BARRIER) 132 701.33 T
7 F
(\050java_lang_Object **startAddr,) 270 701.33 T
(                                  java_int numWords\051) 72 689.33 T
(    void) 72 677.33 T
10 F
(BATCH_HEAP_WRITE_BARRIER) 126 677.33 T
7 F
(\050java_lang_Object **startAddr,) 270 677.33 T
(                                  java_int numWords\051) 72 665.33 T
2 12 Q
(If) 72 640 T
(supported,) 82.58 640 T
(these) 135.49 640 T
(macros) 162.74 640 T
(will) 199.98 640 T
(be) 221.24 640 T
(called) 235.16 640 T
(before) 266.4 640 T
(cop) 299.64 640 T
(ying) 316.84 640 T
(object) 340.77 640 T
(arrays) 372.68 640 T
(\050in) 404.58 640 T
7 10 Q
(JVM_ArrayCopy\050\051) 420.5 640 T
2 12 Q
(\051,) 510.5 640 T
(and) 520.09 640 T
(before) 72 626 T
(cloning) 105.46 626 T
(objects) 144.27 626 T
(with) 181.07 626 T
(reference) 205.22 626 T
(\336elds) 252.66 626 T
(\050in) 281.47 626 T
7 10 Q
(inconsistentClone\050\051) 297.61 626 T
2 12 Q
(\051.) 411.61 626 T
7 10 Q
(startAddr) 421.42 626 T
2 12 Q
(points) 478.23 626 T
(to) 510.38 626 T
(the) 522.53 626 T
(\336rst w) 72 612 T
(ord to be read or written. Unlik) 102.22 612 T
(e the other write barriers,) 251.74 612 T
7 10 Q
(BATCH_HEAP_WRITE_BARRIER) 375.7 612 T
2 12 Q
(does not get to see the ne) 72 598 T
(w v) 192.35 598 T
(alues.) 209.71 598 T
(Note that there is no f) 90 577.8 T
(ast w) 194.2 577.8 T
(ay to get e) 219.07 577.8 T
(xact information about where pointers are located) 268.55 577.8 T
(when cloning objects, so batch barriers are best suited for collectors that use ine) 90 565 T
(xact) 473.08 565 T
(remembered sets \050which remember the object accessed rather than the w) 90 552.2 T
(ord accessed\051.) 437.77 552.2 T
(There are other barriers that gi) 72 527.6 T
(v) 217.98 527.6 T
(e the collector hooks into the JVM.) 223.8 527.6 T
8 10 Q
([must define]) 72 508.93 T
7 F
(    void) 72 496.93 T
10 F
(NEW_INSTANCE_BARRIER) 156 496.93 T
7 F
(\050ExecEnv* ee, java_lang_Object *refAddr\051) 276 496.93 T
(    void) 72 484.93 T
10 F
(FAST_NEW_INSTANCE_BARRIER) 126 484.93 T
7 F
(\050ExecEnv* ee, java_lang_Object *refAddr\051) 276 484.93 T
2 12 Q
(The ne) 72 459.6 T
(w instance hooks are called after e) 104.69 459.6 T
(v) 269.66 459.6 T
(ery object has been allocated and initialized. The) 275.48 459.6 T
(object's class information will be set. The barrier is called within the same inconsistent re) 72 445.6 T
(gion as) 500.26 445.6 T
(the allocation. This barrier allo) 72 431.6 T
(ws a collector to do an) 220.01 431.6 T
(y per) 328.14 431.6 T
(-object bookk) 352.22 431.6 T
(eeping. The) 418.43 431.6 T
7 10 Q
(FAST_NEW_INSTANCE_BARRIER) 72 417.6 T
2 12 Q
( is only called during an allocation out of a thread's LAB, so the) 222 417.6 T
(collector may mak) 72 403.6 T
(e certain assumptions \050such as the LAB is al) 161.2 403.6 T
(w) 373.72 403.6 T
(ays in the youngest generation\051.) 382.26 403.6 T
(Finally) 72 377.6 T
(, the handle barrier detects writes to global roots by being called e) 105.23 377.6 T
(v) 421.2 377.6 T
(ery time an LLNI han-) 427.02 377.6 T
(dle is updated. It is called before the write tak) 72 363.6 T
(es place.) 291.17 363.6 T
8 10 Q
([must define]) 72 344.93 T
7 F
(    void) 72 332.93 T
10 F
(WRITE_HANDLE_BARRIER) 126 332.93 T
7 F
(\050ExecEnv* ee, Ijava_lang_Object refAddr,) 246 332.93 T
(                              java_lang_Object *rr\051) 72 320.93 T
4 11 Q
(2.3.1  Example Barriers) 72 295.27 T
2 12 Q
(ReallySimpleHeap) 72 269.6 T
(doesn't) 165.64 269.6 T
(require) 202.11 269.6 T
(an) 239.08 269.6 T
(y) 250.23 269.6 T
(barriers,) 259.21 269.6 T
(so) 301.83 269.6 T
(the) 315.48 269.6 T
(follo) 333.13 269.6 T
(wing) 355.5 269.6 T
(e) 382.48 269.6 T
(xample) 387.62 269.6 T
(comes) 425.93 269.6 T
(from) 459.57 269.6 T
(the) 485.88 269.6 T
(EVM's) 503.53 269.6 T
(generational heap. The generational heap uses card tables for remembered sets, so it de\336nes the) 72 255.6 T
(follo) 72 241.6 T
(wing barriers:) 94.37 241.6 T
7 10 Q
(#define READ_HEAP_BARRIER\050obj, refAddr\051 TRUE) 72 222.93 T
(#define WRITE_HEAP_BARRIER\050obj, refAddr, rr\051 \134) 72 210.93 T
(    setCTEModPtr\050\050word32*\051\050refAddr\051\051) 72 198.93 T
(#define canBatchReadBarrier  TRUE) 72 174.93 T
(#define canBatchWriteBarrier TRUE) 72 162.93 T
(#define BATCH_HEAP_READ_BARRIER\050startAddr, len\051) 72 138.93 T
(#define BATCH_HEAP_WRITE_BARRIER\050startAddr, len\051 \134) 72 126.93 T
(    setCTEModRange\050\050word32*\051\050startAddr\051, \050len\051\051) 72 114.93 T
2 12 Q
(Note) 72 89.6 T
(that) 98.31 89.6 T
7 10 Q
(setCTEModPtr\050\051) 119.29 89.6 T
2 12 Q
(is) 206.26 89.6 T
(a) 217.25 89.6 T
(static) 225.55 89.6 T
(inline) 253.86 89.6 T
(function) 284.18 89.6 T
(in) 327.15 89.6 T
(the) 339.47 89.6 T
(generational) 357.11 89.6 T
(collector) 419.4 89.6 T
(.) 460.73 89.6 T
(This) 466.71 89.6 T
(combines) 491.02 89.6 T
(the better type-checking and deb) 72 75.6 T
(ugging of function calls with the ef) 228.38 75.6 T
(\336cienc) 396.73 75.6 T
(y of macros.) 428.54 75.6 T
FMENDPAGE
%%EndPage: "21" 27
%%Page: "22" 28
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 22) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
4 12 Q
0 X
(2.4  Supporting Collector Routines) 72 712 T
2 F
(In addition to the core routines, there are also a number of support routines that must be de\336ned.) 72 687 T
(These pro) 72 673 T
(vide support for information about the state of the collector) 119.47 673 T
(, v) 403.28 673 T
(eri\336cation, descriptions,) 415.1 673 T
(and a fe) 72 659 T
(w object-speci\336c functions.) 109.68 659 T
4 11 Q
(2.4.1  State of the Collector) 72 632.67 T
2 12 Q
(There are se) 72 607 T
(v) 130.33 607 T
(eral functions that need to be de\336ned in order for the VM to kno) 136.15 607 T
(w ho) 444.13 607 T
(w much mem-) 467.5 607 T
(ory is a) 72 593 T
(v) 107.09 593 T
(ailable for allocation and ho) 112.79 593 T
(w much is in use:) 247.13 593 T
8 10 Q
([must define]) 72 574.33 T
7 F
(    uintptr_t) 72 562.33 T
10 F
(specificTotalObjectWords) 156 562.33 T
7 F
(\050\051) 300 562.33 T
(    uintptr_t) 72 550.33 T
10 F
(specificTotalHeapWords) 156 550.33 T
7 F
(\050\051) 288 550.33 T
2 12 Q
(These) 72 525 T
(tw) 103.29 525 T
(o) 115.17 525 T
(functions) 123.81 525 T
(report) 171.11 525 T
(ho) 202.4 525 T
(w) 214.1 525 T
(much) 225.4 525 T
(memory) 254.7 525 T
(has) 297.33 525 T
(been) 315.97 525 T
(used.) 341.26 525 T
(The) 368.89 525 T
(\336rst) 390.19 525 T
(reports) 411.5 525 T
(the) 447.46 525 T
(total) 464.76 525 T
(amount) 488.73 525 T
(of) 527.37 525 T
(memory in w) 72 511 T
(ords that is a) 135.88 511 T
(v) 196.63 511 T
(ailable for allocating objects. The second reports the amount of mem-) 202.33 511 T
(ory) 72 497 T
(in) 90.67 497 T
(w) 102.69 497 T
(ords) 111.23 497 T
(used) 134.57 497 T
(by) 159.25 497 T
(the) 173.93 497 T
(collector) 191.27 497 T
(including) 235.94 497 T
(memory) 283.95 497 T
(for) 326.63 497 T
(supporting) 343.3 497 T
(data) 397.31 497 T
(structures) 419.98 497 T
(including) 469.32 497 T
(\322to\323) 517.33 497 T
(space, card tables or remembered sets, and similar structures.) 72 483 T
7 10 Q
(specificTotalHeapWords\050\051) 368.59 483 T
2 12 Q
( is) 512.59 483 T
(used by deb) 72 469 T
(ugging and heap analysis tools, and does not need to track e) 129.08 469 T
(v) 416.08 469 T
(ery single byte.) 421.9 469 T
8 10 Q
([must define]) 72 450.33 T
7 F
(    uintptr_t) 72 438.33 T
10 F
(specificMaxAllocation) 156 438.33 T
7 F
(\050\051) 282 438.33 T
2 12 Q
(This function reports the size of the lar) 72 413 T
(gest a) 258.08 413 T
(v) 285.5 413 T
(ailable chunk of free memory in the heap in w) 291.2 413 T
(ords.) 512.7 413 T
(The memory system calls this after a collection to determine if the allocation request that trig-) 72 399 T
(gered) 72 385 T
(the) 101.54 385 T
(collection) 119.09 385 T
(will) 169.3 385 T
(succeed.) 190.86 385 T
(This) 234.72 385 T
(function) 258.94 385 T
(is) 301.82 385 T
(allo) 312.71 385 T
(wed) 330.41 385 T
(to) 353.29 385 T
(return) 365.51 385 T
(a) 397.05 385 T
(conserv) 405.27 385 T
(ati) 442.29 385 T
(v) 453.99 385 T
(e) 459.81 385 T
(estimate) 468.02 385 T
(at) 510.9 385 T
(the) 522.45 385 T
(cost of e) 72 371 T
(xpanding the heap earlier than needed on occasion.) 112.48 371 T
8 10 Q
([must define]) 72 352.33 T
7 F
(    uintptr_t) 72 340.33 T
10 F
(specificFreeHeapWords) 156 340.33 T
7 F
(\050\051) 282 340.33 T
2 12 Q
(This function returns the approximate number of w) 72 315 T
(ords free in the heap at a point in time. The) 317.51 315 T
(result is approximate because the collector must calculate this quantity without locking the heap.) 72 301 T
4 11 Q
(2.4.2  Collector V) 72 274.67 T
(eri\336cation) 152.46 274.67 T
2 12 Q
(An important part of deb) 72 249 T
(ugging the beha) 191.08 249 T
(vior of the VM is the ability to v) 267.49 249 T
(erify that the collector) 423.31 249 T
(and the heap it manages are in good shape. T) 72 235 T
(o support this process, three functions must be) 286.99 235 T
(de\336ned. While these functions do not return an) 72 221 T
(ything, the) 297.12 221 T
(y may abort if there are an) 348.28 221 T
(y discrepan-) 474.72 221 T
(cies.) 72 207 T
8 10 Q
([must define]) 72 188.33 T
7 F
(    void) 72 176.33 T
10 F
(specificVerifyHeap) 126 176.33 T
7 F
(\050\051) 234 176.33 T
2 12 Q
(This function w) 72 151 T
(alks o) 147.88 151 T
(v) 176.03 151 T
(er the heap and mak) 181.85 151 T
(es sure that an) 278.36 151 T
(y collector) 346.5 151 T
(-speci\336c in) 397.25 151 T
(v) 449.76 151 T
(ariants hold for) 455.46 151 T
(the heap. It can be v) 72 137 T
(ery slo) 168.46 137 T
(w since it is only used for deb) 200.48 137 T
(ugging purposes, and it may abort the) 343.9 137 T
(VM.) 72 123 T
FMENDPAGE
%%EndPage: "22" 28
%%Page: "23" 29
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 23) 518.89 34.17 T
8 10 Q
([must define]) 72 713.33 T
7 F
(    void) 72 701.33 T
10 F
(specificVerifyReference) 126 701.33 T
7 F
(\050java_lang_Object *obj\051) 264 701.33 T
2 12 Q
(This function does an) 72 676 T
(y collector) 175.48 676 T
(-speci\336c checks to mak) 226.22 676 T
(e sure that a reference is v) 338.41 676 T
(alid. This can) 463.39 676 T
(range from v) 72 662 T
(erifying that the pointer points into the heap that the collector is managing to v) 133.8 662 T
(erify-) 510.92 662 T
(ing) 72 648 T
(bits) 90.09 648 T
(in) 110.18 648 T
(the) 122.27 648 T
(objects) 139.68 648 T
(header) 176.43 648 T
(and) 211.16 648 T
(class,) 231.24 648 T
(etc.) 260.33 648 T
(It) 280.07 648 T
(assumes) 290.15 648 T
(that) 332.9 648 T
7 10 Q
(obj) 353.65 648 T
2 12 Q
(is) 374.41 648 T
(not) 385.16 648 T
(null) 403.25 648 T
(and) 424.67 648 T
(is) 444.76 648 T
(properly) 455.51 648 T
(aligned.) 498.92 648 T
8 10 Q
([must define]) 72 629.33 T
7 F
(    void) 72 617.33 T
10 F
(specificVerifyIsFree) 126 617.33 T
7 F
(\050word32 *from, word32 *to\051) 246 617.33 T
2 12 Q
(This function v) 72 592 T
(eri\336es that w) 145.15 592 T
(ords in the range) 207.02 592 T
7 10 Q
([from, to\051) 290.34 592 T
2 12 Q
( are free and is typically called by the) 350.34 592 T
(collector itself in deb) 72 578 T
(ug mode before allocating w) 173.41 578 T
(ords.) 310.6 578 T
4 11 Q
(2.4.3  Descripti) 72 551.67 T
(v) 142.16 551.67 T
(e Functions) 147.55 551.67 T
2 12 Q
(There are tw) 72 526 T
(o functions that pro) 132.52 526 T
(vide some le) 226 526 T
(v) 286.36 526 T
(el of description of a gi) 292.18 526 T
(v) 403.52 526 T
(en collector) 409.34 526 T
(. These func-) 465 526 T
(tions are:) 72 512 T
8 10 Q
([must define]) 72 493.33 T
7 F
(    char*) 72 481.33 T
10 F
(specificDescribeMemSys) 132 481.33 T
7 F
(\050\051) 264 481.33 T
(    char*) 72 469.33 T
10 F
(specificName) 132 469.33 T
7 F
(\050\051) 204 469.33 T
2 12 Q
(The \336rst function,) 72 444 T
7 10 Q
(specificDescribeMemSys\050\051) 161.33 444 T
2 12 Q
(, returns a description of the speci\336c memory) 305.33 444 T
(system.) 72 430 T
(This) 111.16 430 T
(description) 135.32 430 T
(may) 191.48 430 T
(consist) 214.97 430 T
(of) 251.13 430 T
(one) 263.95 430 T
(or) 284.1 430 T
(more) 296.92 430 T
(lines,) 324.41 430 T
(each) 352.9 430 T
(terminated) 377.71 430 T
(with) 431.86 430 T
(a) 456.02 430 T
(ne) 464.18 430 T
(wline) 475.21 430 T
(charac-) 504.7 430 T
(ter) 72 416 T
(. The second,) 84 416 T
7 10 Q
(specificName\050\051) 150.98 416 T
2 12 Q
(, returns a simple name for the collector) 234.98 416 T
(. The name should not) 425.62 416 T
(contain a ne) 72 402 T
(wline character) 129.68 402 T
(.) 202.66 402 T
4 11 Q
(2.4.4  Object-speci\336c Functions) 72 375.67 T
2 12 Q
(Some) 72 350 T
(collectors) 102.13 350 T
(mak) 151.58 350 T
(e) 172.12 350 T
(use) 180.24 350 T
(of) 199.03 350 T
(the) 211.82 350 T
(headers) 229.28 350 T
(of) 268.72 350 T
(objects) 281.51 350 T
(during) 318.3 350 T
(a) 352.43 350 T
(collection.) 360.55 350 T
(F) 413.67 350 T
(or) 420.16 350 T
(e) 432.95 350 T
(xample,) 438.1 350 T
(some) 479.22 350 T
(collec-) 507.35 350 T
(tors) 72 336 T
(mo) 92.92 336 T
(v) 108.08 336 T
(e) 113.9 336 T
(an) 122.15 336 T
(object's) 136.4 336 T
(class) 175.48 336 T
(\336eld) 201.73 336 T
(to) 225.98 336 T
(the) 238.24 336 T
(side) 255.83 336 T
(in) 278.08 336 T
(order) 290.34 336 T
(to) 318.58 336 T
(link) 330.84 336 T
(related) 352.43 336 T
(objects) 388.01 336 T
(together) 424.93 336 T
(.) 463.59 336 T
(Because) 469.51 336 T
(other) 512.42 336 T
(parts of the VM may need to access the class information of an object while a collection is in) 72 322 T
(progress, tw) 72 308 T
(o functions must be pro) 130.54 308 T
(vided:) 243.68 308 T
8 10 Q
([must define]) 72 289.33 T
7 F
(    NearClass*) 72 277.33 T
10 F
(specificGetNearClass) 162 277.33 T
7 F
(\050java_lang_Object *obj\051) 282 277.33 T
(    bool_t) 72 265.33 T
10 F
(specificIsObjectInGCNow) 162 265.33 T
7 F
(\050java_lang_Object *obj\051) 300 265.33 T
2 12 Q
(The \336rst function will return the actual class of an object e) 72 240 T
(v) 351.98 240 T
(en if that class information has been) 357.8 240 T
(temporarily) 72 226 T
(replaced) 130.6 226 T
(or) 173.84 226 T
(obliterated) 186.44 226 T
(in) 240.37 226 T
(the) 252.31 226 T
(object's) 269.58 226 T
(header) 308.33 226 T
(.) 339.65 226 T
(So,) 345.26 226 T
(unlik) 363.53 226 T
(e) 388.08 226 T
(IBM) 396.02 226 T
(punch) 421.29 226 T
(cards,) 453.22 226 T
(objects) 484.14 226 T
(can) 520.74 226 T
(be) 72 212 T
(mark) 86.3 212 T
(ed,) 110.84 212 T
(mangled,) 128.14 212 T
(folded,) 175.45 212 T
(mutilated,) 212.08 212 T
(or) 263.39 212 T
(spindled) 276.36 212 T
(as) 320 212 T
(long) 332.97 212 T
(as) 357.28 212 T
(we) 370.25 212 T
(can) 387.22 212 T
(use) 406.85 212 T
(this) 425.82 212 T
(function) 446.13 212 T
(to) 489.1 212 T
(reco) 501.41 212 T
(v) 521.88 212 T
(er) 527.7 212 T
(the information we need. The second function will return) 72 198 T
7 10 Q
(TRUE) 349.28 198 T
2 12 Q
( if and only if the object is in an) 373.28 198 T
(area that is currently being collected. In both cases, the caller is e) 72 184 T
(xpected to check an) 384.41 184 T
(y general) 479.2 184 T
(properties, and, in particular) 72 170 T
(, handle the case where the ar) 207.16 170 T
(gument is NULL.) 348.55 170 T
FMENDPAGE
%%EndPage: "23" 29
%%Page: "24" 30
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 24) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
FMENDPAGE
%%EndPage: "24" 30
%%Page: "25" 31
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 25) 518.89 34.17 T
4 14 Q
(3.  Refer) 243.92 710.67 T
(ence Section) 294.59 710.67 T
2 12 Q
(This section describes man) 72 682 T
(y of the macros and routines supplied by the memory system and the) 201.47 682 T
(JVM that the collector can use \050or rede\336ne\051. All de\336nitions in the Reference section ha) 72 668 T
(v) 488.68 668 T
(e) 494.5 668 T
8 10 Q
([may) 502.82 668 T
(use]) 72 654 T
2 12 Q
( status unless described otherwise.) 96 654 T
4 F
(3.1  Header Files) 72 625 T
2 F
(The header \336les used by collectors are subject to change, b) 72 600 T
(ut this is where de\336nitions currently) 354.02 600 T
(li) 72 586 T
(v) 78.37 586 T
(e:) 84.19 586 T
(All of these \336les are included by) 72 220 T
7 10 Q
(gc/specific_gc.h) 230.98 220 T
2 12 Q
(, which should be used by all collectors.) 326.98 220 T
4 F
(3.2  Collector Con\336guration) 72 191 T
2 F
(The) 72 166 T
(collector) 93.3 166 T
(needs) 137.92 166 T
(to) 167.88 166 T
(set) 179.86 166 T
(a) 195.82 166 T
(couple) 203.79 166 T
(of) 238.42 166 T
(macro) 251.05 166 T
(de\336nitions,) 283.68 166 T
(and) 339.99 166 T
(may) 359.95 166 T
(change) 383.26 166 T
(some) 419.88 166 T
(def) 447.85 166 T
(ault) 463.05 166 T
(de\336nitions.) 483.69 166 T
(The) 72 152 T
(de\336nitions) 93.43 152 T
(belo) 146.88 152 T
(w) 167.24 152 T
(are) 178.68 152 T
(usually) 196.1 152 T
(controlled) 233.54 152 T
(by) 284.97 152 T
(a) 299.74 152 T
(single) 307.84 152 T
(en) 339.28 152 T
(vironment) 350.13 152 T
(v) 402.23 152 T
(ariable) 407.93 152 T
7 10 Q
(GCCONFIG) 443.36 152 T
2 12 Q
(,) 491.36 152 T
(which) 497.13 152 T
(is) 529.22 152 T
(read by the mak) 72 138 T
(e\336les) 148.86 138 T
7 10 Q
(JVM.gmk) 177.19 138 T
2 12 Q
( and) 219.19 138 T
7 10 Q
(garbage.gmk) 242.52 138 T
2 12 Q
(.) 308.52 138 T
8 10 Q
([may define]) 72 119.33 T
7 F
(macro int) 72 107.33 T
10 F
(EXACT_STACKS) 132 107.33 T
7 F
(  /* default is true \0501\051 */) 204 107.33 T
2 12 Q
(The) 72 82 T
(memory) 93.61 82 T
(system) 136.55 82 T
(usually) 172.83 82 T
(relies) 210.44 82 T
(on) 239.38 82 T
(a) 254.33 82 T
(stack) 262.6 82 T
(map) 290.2 82 T
(computer) 313.82 82 T
(to) 362.08 82 T
(be) 374.37 82 T
(able) 388.64 82 T
(to) 411.58 82 T
(decode) 423.86 82 T
(both) 460.79 82 T
(interpreted) 485.07 82 T
(and compiled Ja) 72 68 T
(v) 149.75 68 T
(a stacks. When de) 155.45 68 T
(v) 241.79 68 T
(eloping ne) 247.61 68 T
(w JIT compilers it may be useful to scan Ja) 297.64 68 T
(v) 505.03 68 T
(a) 510.73 68 T
4 10 Q
(T) 205.43 552.33 T
(ABLE 1. Header \336les used by collectors) 211.2 552.33 T
(De\336ned by) 84.07 532.33 T
(File) 157.07 532.33 T
(Contents) 298.07 532.33 T
2 F
(collector) 84.07 516.33 T
7 F
(gc/abstractcollector.h) 157.07 516.33 T
2 F
(prototypes of functions that collectors pro) 298.07 516.33 T
(vide) 465.39 516.33 T
(collector) 84.07 500.33 T
7 F
(gc/barriers.h) 157.07 500.33 T
2 F
(collector can de\336ne barriers here) 298.07 500.33 T
(memory) 84.07 484.33 T
(system) 119.02 484.33 T
7 F
(gc.h) 157.07 484.33 T
2 F
(public gc interf) 298.07 484.33 T
(ace) 359.07 484.33 T
(memory) 84.07 468.33 T
(system) 119.02 468.33 T
7 F
(gc/gcimpl.h) 157.07 468.33 T
2 F
(most support routines) 298.07 468.33 T
(memory) 84.07 452.33 T
(system) 119.02 452.33 T
7 F
(gc/references.h) 157.07 452.33 T
2 F
(support for processing references) 298.07 452.33 T
(memory) 84.07 436.33 T
(system) 119.02 436.33 T
7 F
(gc/memarea.h) 157.07 436.33 T
2 F
(mapped memory utilities) 298.07 436.33 T
(collector &) 84.07 420.33 T
(memory system) 84.07 408.33 T
7 F
(memsysconfig.h) 157.07 420.33 T
2 F
(collector) 298.07 420.33 T
(may) 335.27 420.33 T
(set) 354.7 420.33 T
(some) 368.02 420.33 T
(of) 391.35 420.33 T
(the) 401.89 420.33 T
(de\336nitions) 416.32 420.33 T
(in) 460.77 420.33 T
(this) 470.76 420.33 T
(\336le, and may use the others) 298.07 408.33 T
(JVM) 84.07 392.33 T
7 F
(classunloading.h) 157.07 392.33 T
2 F
(class scanning) 298.07 392.33 T
(JVM) 84.07 376.33 T
7 F
(common_exceptions.h) 157.07 376.33 T
2 F
(e) 298.07 376.33 T
(xception-thro) 302.36 376.33 T
(wing functions) 355.98 376.33 T
(JVM) 84.07 360.33 T
7 F
(llni.h) 157.07 360.33 T
2 F
(LLNI interf) 298.07 360.33 T
(ace) 344.89 360.33 T
7 F
(NearClass) 360.71 360.33 T
2 F
(JVM) 84.07 344.33 T
7 F
(memsys.h) 157.07 344.33 T
2 F
(accessor functions for object headers and \336elds) 298.07 344.33 T
(JVM) 84.07 328.33 T
7 F
(monitor.h) 157.07 328.33 T
2 F
(locks) 298.07 328.33 T
(JVM) 84.07 312.33 T
7 F
(oobj.h) 157.07 312.33 T
(NearClass) 298.07 312.33 T
2 F
( and) 352.07 312.33 T
7 F
(Class) 371.51 312.33 T
2 F
(JVM) 84.07 296.33 T
7 F
(sys_api.h) 157.07 296.33 T
2 F
(sysAssert, sysMalloc, etc.) 298.07 296.33 T
(JVM) 84.07 280.33 T
7 F
(threads.h) 157.07 280.33 T
2 F
(threads-related functions) 298.07 280.33 T
(JVM) 84.07 264.33 T
7 F
(typedefs.h) 157.07 264.33 T
2 F
(object layout) 298.07 264.33 T
(JVM) 84.07 248.33 T
7 F
(util.h) 157.07 248.33 T
2 F
(assertions, i/o, and cop) 298.07 248.33 T
(y utilities) 389.35 248.33 T
79.75 561.75 79.75 242.25 2 L
V
0.5 H
0 Z
N
152.74 546.25 152.74 241.75 2 L
V
N
293.74 546.25 293.74 241.75 2 L
V
N
491.74 561.75 491.74 242.25 2 L
V
N
79.5 562 491.99 562 2 L
V
N
79.5 546 491.99 546 2 L
V
N
79.5 526 491.99 526 2 L
V
N
79.5 510 491.99 510 2 L
V
N
79.5 494 491.99 494 2 L
V
N
79.5 478 491.99 478 2 L
V
N
79.5 462 491.99 462 2 L
V
N
79.5 446 491.99 446 2 L
V
N
79.5 430 491.99 430 2 L
V
N
79.5 402 491.99 402 2 L
V
N
79.5 386 491.99 386 2 L
V
N
79.5 370 491.99 370 2 L
V
N
79.5 354 491.99 354 2 L
V
N
79.5 338 491.99 338 2 L
V
N
79.5 322 491.99 322 2 L
V
N
79.5 306 491.99 306 2 L
V
N
79.5 290 491.99 290 2 L
V
N
79.5 274 491.99 274 2 L
V
N
79.5 258 491.99 258 2 L
V
N
79.5 242 491.99 242 2 L
V
N
FMENDPAGE
%%EndPage: "25" 31
%%Page: "26" 32
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 26) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(stacks conserv) 72 712 T
(ati) 141.35 712 T
(v) 153.05 712 T
(ely) 158.87 712 T
(. The collector can de\336ne) 172.75 712 T
7 10 Q
(EXACT_STACKS) 297.38 712 T
2 12 Q
( to be f) 369.38 712 T
(alse \0500\051. In that case,) 402.92 712 T
7 10 Q
(pro-) 505.22 712 T
(cessStrongRoots\050\051) 72 698 T
2 12 Q
( will call the collector's) 174 698 T
7 10 Q
(stackRootCB\050\051) 288.48 698 T
2 12 Q
( callback on all v) 366.48 698 T
(alues in the Ja) 448.16 698 T
(v) 515.58 698 T
(a) 521.28 698 T
(stack, and the collector must deduce probable object references. Such a collector must be of the) 72 684 T
(non-mo) 72 670 T
(ving v) 109.15 670 T
(ariety) 139.19 670 T
(.) 165.73 670 T
(Note) 72 644 T
(that) 98.16 644 T
(the) 118.99 644 T
(memory) 136.49 644 T
(system) 179.32 644 T
(al) 215.48 644 T
(w) 224.03 644 T
(ays) 232.57 644 T
(kno) 251.4 644 T
(ws) 269.1 644 T
(the) 285.26 644 T
(e) 302.76 644 T
(xact) 307.91 644 T
(location) 330.73 644 T
(of) 372.23 644 T
(references) 385.06 644 T
(in) 437.18 644 T
(the) 449.35 644 T
(JVM) 466.85 644 T
(C) 493.68 644 T
(frames) 504.52 644 T
(and in nati) 72 630 T
(v) 122.36 630 T
(e method frames, due to the LLNI and JNI interf) 128.18 630 T
(aces.) 361.34 630 T
8 10 Q
([must define]) 72 599.33 T
7 F
(macro int) 72 587.33 T
10 F
(HEAP_CHOICE) 132 587.33 T
2 12 Q
(The JVM is compiled with) 72 562 T
7 10 Q
(HEAP_CHOICE) 203.66 562 T
2 12 Q
( set to a unique inte) 269.66 562 T
(ger constant representing the collec-) 363.14 562 T
(tor to use. The collector needs to choose a constant which will represent it, and ensure that) 72 548 T
7 10 Q
(HEAP_CHOICE) 72 534 T
2 12 Q
( gets set to that v) 138 534 T
(alue. See) 218.7 534 T
7 10 Q
(memsysconfig.h) 265.02 534 T
2 12 Q
( for e) 349.02 534 T
(xisting heap choice v) 374.16 534 T
(alues.) 475.51 534 T
8 10 Q
([must define]) 72 503.33 T
7 F
(macro int) 72 491.33 T
10 F
(BARRIER_CHOICE) 132 491.33 T
2 12 Q
(The collector needs to compile the JVM with) 72 466 T
7 10 Q
(BARRIER_CHOICE) 291.97 466 T
2 12 Q
( set to a unique inte) 375.97 466 T
(ger constant) 469.45 466 T
(representing) 72 452 T
(the) 134.26 452 T
(barrier) 151.86 452 T
(required) 186.78 452 T
(by) 229.7 452 T
(the) 244.64 452 T
(collector) 262.25 452 T
(,) 303.76 452 T
(or) 309.7 452 T
7 10 Q
(NO_BARRIER) 322.63 452 T
2 12 Q
(if) 385.57 452 T
(the) 395.84 452 T
(collector) 413.45 452 T
(doesn't) 458.38 452 T
(require) 494.81 452 T
(a) 531.73 452 T
(barrier) 72 438 T
(. See) 103.32 438 T
7 10 Q
(memsysconfig.h) 129.65 438 T
2 12 Q
( for e) 213.65 438 T
(xisting barrier choice v) 238.79 438 T
(alues.) 349.46 438 T
8 10 Q
([may define]) 72 407.33 T
7 F
(macro long) 72 395.33 T
10 F
(DEFAULTHEAPSIZE) 138 395.33 T
2 12 Q
(The collector may change the def) 72 370 T
(ault v) 232.16 370 T
(alue for the initial heap size. Ov) 258.86 370 T
(erridden by) 412.32 370 T
7 10 Q
(args->min-) 470.3 370 T
(HeapSize) 72 356 T
2 12 Q
( \050) 120 356 T
7 10 Q
(-ms) 127 356 T
2 12 Q
( on the command line\051.) 145 356 T
8 10 Q
([may define]) 72 325.33 T
7 F
(macro long) 72 313.33 T
10 F
(MINHEAPSIZE) 138 313.33 T
2 12 Q
(The collector may change the lo) 72 288 T
(wer bound on) 226 288 T
7 10 Q
(args->minHeapSize) 294.98 288 T
2 12 Q
(.) 396.98 288 T
8 10 Q
([may define]) 72 257.33 T
7 F
(macro long) 72 245.33 T
10 F
(MAXHEAPSIZE) 138 245.33 T
2 12 Q
(The collector may change the def) 72 220 T
(ault v) 232.16 220 T
(alue for the maximum heap size. Ov) 258.86 220 T
(erridden by) 432.98 220 T
7 10 Q
(args-) 490.97 220 T
(>maxHeapSize) 72 206 T
2 12 Q
( \050) 144 206 T
7 10 Q
(-mx) 151 206 T
2 12 Q
( on the command line\051.) 169 206 T
4 F
(3.3  Sizes and Casts) 72 177 T
7 10 Q
(macro java_lang_Object*) 72 153.33 T
10 F
(asObject) 240 153.33 T
7 F
(\050any obj\051) 288 153.33 T
(macro java_lang_Object**) 72 141.33 T
10 F
(asObjectPtr) 222 141.33 T
7 F
(\050any objp\051) 288 141.33 T
(macro NearClass*) 72 129.33 T
10 F
(asNearClass) 222 129.33 T
7 F
(\050any ncls\051) 288 129.33 T
2 12 Q
(These macros are meant to serv) 72 104 T
(e as casts to the appropriate type. The) 223.44 104 T
(y are used by the masking) 403.88 104 T
(macros \050belo) 72 90 T
(w\051.) 134.02 90 T
FMENDPAGE
%%EndPage: "26" 32
%%Page: "27" 33
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 27) 518.89 34.17 T
7 10 Q
(macro int) 72 701.33 T
10 F
(JAVA_INT_BITSIZE) 132 701.33 T
2 12 Q
(This macro simply de\336nes the number of bits in a v) 72 676 T
(alue of type) 319.02 676 T
7 10 Q
(java_int) 378.67 676 T
2 12 Q
(, which is al) 426.67 676 T
(w) 484.55 676 T
(ays 32.) 493.09 676 T
7 10 Q
(java_int) 72 657.33 T
10 F
(objectSize) 126 657.33 T
7 F
(\050java_lang_Object *obj\051) 186 657.33 T
2 12 Q
(Return size in w) 72 632 T
(ords of an object \050including arrays\051.) 150.2 632 T
7 10 Q
(java_int) 72 613.33 T
10 F
(objectSizeGivenNearClass) 126 613.33 T
7 F
(\050java_lang_Object *obj, NearClass *ncls\051) 270 613.33 T
2 12 Q
(Lik) 72 588 T
(e) 88.55 588 T
7 10 Q
(objectSize\050\051) 96.81 588 T
2 12 Q
(b) 171.74 588 T
(ut) 177.5 588 T
(also) 189.77 588 T
(tak) 212.04 588 T
(es) 226.58 588 T
(near) 239.51 588 T
(class) 263.1 588 T
(to) 289.36 588 T
(be) 301.63 588 T
(more) 315.89 588 T
(ef) 343.48 588 T
(\336cient) 352.51 588 T
(and) 385.44 588 T
(will) 405.7 588 T
(w) 427.3 588 T
(ork) 435.85 588 T
(e) 454.78 588 T
(v) 459.81 588 T
(en) 465.63 588 T
(if) 479.89 588 T
(near) 490.15 588 T
(class) 513.74 588 T
(in object header is mark) 72 574 T
(ed.) 187.19 574 T
4 F
(3.4  Object Header Inf) 72 545 T
(ormation) 186.68 545 T
2 F
(Macros and functions that access the information stored in an object's header) 72 520 T
(.) 440.42 520 T
7 10 Q
(NearClass *) 72 501.33 T
10 F
(getNearClass) 138 501.33 T
7 F
(\050java_lang_Object *obj\051) 210 501.33 T
(NearClass *) 72 489.33 T
10 F
(setNearClass) 138 489.33 T
7 F
(\050java_lang_Object *obj, NearClass *ncls\051) 210 489.33 T
2 12 Q
(These functions return or set the) 72 464 T
7 10 Q
(NearClass) 229.97 464 T
2 12 Q
( \336eld stored in the object's header) 283.97 464 T
(. Neither of these) 444.11 464 T
(functions strip of) 72 450 T
(f an) 153.7 450 T
(y of the lo) 171.84 450 T
(w-order bits in the header that the collector may ha) 220.54 450 T
(v) 465.24 450 T
(e set. If the) 471.06 450 T
(collector uses an) 72 436 T
(y bits from the near class pointer) 151.8 436 T
(, the collector can use the) 308.63 436 T
7 10 Q
(clearAllMarks) 433.6 436 T
2 12 Q
(macro de\336ned belo) 72 422 T
(w to easily strip them of) 163.68 422 T
(f.) 279.71 422 T
7 10 Q
(NearClass *) 72 403.33 T
10 F
(getNearClassFromObject) 138 403.33 T
7 F
(\050java_lang_Object *obj\051) 270 403.33 T
2 12 Q
(Some collectors mangle or otherwise obfuscate the) 72 378 T
7 10 Q
(NearClass) 319.62 378 T
2 12 Q
( \336eld in an object while a collec-) 373.62 378 T
(tion) 72 364 T
(is) 93.56 364 T
(ongoing.) 104.44 364 T
(This) 149.66 364 T
(is) 173.88 364 T
(a) 184.76 364 T
(hea) 192.98 364 T
(vier) 209.39 364 T
(-duty) 227.81 364 T
(function) 256.03 364 T
(that) 298.9 364 T
(can) 319.79 364 T
(be) 339.33 364 T
(used) 353.54 364 T
(to) 378.42 364 T
(reco) 390.64 364 T
(v) 411.11 364 T
(er) 416.93 364 T
(the) 429.13 364 T
7 10 Q
(NearClass) 446.68 364 T
2 12 Q
(\336eld) 503.56 364 T
(in) 527.78 364 T
(these cases. This function calls the collector's) 72 350 T
7 10 Q
(specificGetNearClass\050\051) 292.79 350 T
2 12 Q
( function.) 424.79 350 T
7 10 Q
(typedef uint32_t BitField;) 72 331.33 T
(typedef union multiUseWord_s {) 72 319.33 T
(    BitField  allBits;) 72 307.33 T
(    word32   *forwardingPtr;     /* Used by some GC algorithms. */) 72 295.33 T
(}) 72 283.33 T
10 F
(multiUseWord) 84 283.33 T
7 F
(;) 156 283.33 T
2 12 Q
(The second w) 72 258 T
(ord in an object's header is a) 138.53 258 T
7 10 Q
(multiUseWord) 277.66 258 T
2 12 Q
( that contains the hash code, age \050gc\051,) 349.66 258 T
(and locking bits encoded in a) 72 244 T
7 10 Q
(BitField) 215.32 244 T
2 12 Q
(. The locking protocol may sw) 263.32 244 T
(ap out the hash code and) 409.85 244 T
(age bits if the object is in the middle of a locking operation \050lock, unlock, w) 72 230 T
(ait, etc\051.) 436.18 230 T
8 10 Q
([may define]) 72 211.33 T
7 F
(macro int) 72 199.33 T
10 F
(HASH_BITS) 132 199.33 T
7 F
( /* 25 */) 186 199.33 T
(macro int) 72 187.33 T
10 F
(AGE_BITS) 132 187.33 T
7 F
(  /*  5 */) 180 187.33 T
2 12 Q
(A collector may change the number of bits in the) 72 162 T
7 10 Q
(BitField) 309.96 162 T
2 12 Q
( allocated to hash code and age infor-) 357.96 162 T
(mation.) 72 148 T
7 10 Q
(int) 72 129.33 T
10 F
(getLockState) 96 129.33 T
7 F
(\050BitField allBits\051) 168 129.33 T
(int) 72 117.33 T
10 F
(getAge) 96 117.33 T
7 F
(\050BitField allBits\051) 132 117.33 T
(int) 72 105.33 T
10 F
(getHash) 96 105.33 T
7 F
(\050BitField allBits\051) 138 105.33 T
2 12 Q
(These are lo) 72 80 T
(w-le) 130.34 80 T
(v) 151.37 80 T
(el macros that decode a) 157.19 80 T
7 10 Q
(BitField) 272.82 80 T
2 12 Q
(.) 320.82 80 T
FMENDPAGE
%%EndPage: "27" 33
%%Page: "28" 34
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 28) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
7 10 Q
0 X
(int) 72 713.33 T
10 F
(getHashCode) 102 713.33 T
7 F
(\050ExecEnv *ee, Ijava_lang_Object obj\051) 168 713.33 T
(void) 72 701.33 T
10 F
(setHashCode) 102 701.33 T
7 F
(\050ExecEnv *ee, Ijava_lang_Object obj, int ii\051) 168 701.33 T
2 12 Q
(Gets) 72 676 T
(or) 96.89 676 T
(sets) 109.78 676 T
(an) 130.68 676 T
(object's) 144.9 676 T
(hash) 183.95 676 T
(code.) 208.84 676 T
(These) 237.39 676 T
(functions) 268.94 676 T
(go) 316.5 676 T
(through) 331.39 676 T
(the) 371.62 676 T
(locking) 389.18 676 T
(code's) 428.07 676 T
(synchronization) 460.45 676 T
(process to get access to the real bits. Unlik) 72 662 T
(e the other functions listed here, these functions must) 276.18 662 T
(be called while the caller is consistent \050because it may block\051. This precludes calling them from) 72 648 T
(most collector functions.) 72 634 T
7 10 Q
(BitField) 72 615.33 T
10 F
(getHeaderWord) 132 615.33 T
7 F
(    \050java_lang_Object *obj\051) 210 615.33 T
(void) 72 603.33 T
10 F
(setHeaderWord) 132 603.33 T
7 F
(    \050java_lang_Object *obj, BitField ii\051) 210 603.33 T
2 12 Q
(These lo) 72 566 T
(w-le) 112.69 566 T
(v) 133.72 566 T
(el routines get or set the ra) 139.54 566 T
(w header w) 266.66 566 T
(ord that contains the hash code, age bits, and) 321.85 566 T
(lock) 72 552 T
(bits.) 95.66 552 T
(Note) 119 552 T
(that) 145.33 552 T
(if) 166.33 552 T
(the) 176.66 552 T
(object) 194.32 552 T
(is) 226.65 552 T
(lock) 237.65 552 T
(ed,) 258.19 552 T
(the) 275.52 552 T
(hash) 293.18 552 T
(code) 318.18 552 T
(and) 343.83 552 T
(age) 364.16 552 T
(bits) 383.82 552 T
(may) 404.15 552 T
(be) 427.82 552 T
(sw) 442.14 552 T
(apped) 455.36 552 T
(out.) 487.01 552 T
(These) 508.35 552 T
(routines should be called only in single-threaded mode \050such as during g) 72 538 T
(arbage collection\051.) 420.23 538 T
7 10 Q
(BitField *) 72 519.33 T
10 F
(otherBitsPtrNoSync) 132 519.33 T
7 F
(\050java_lang_Object *obj\051) 240 519.33 T
2 12 Q
(This function gi) 72 482 T
(v) 148.37 482 T
(es non-synchronized access to the bits in the) 154.19 482 T
7 10 Q
(multiUseWord) 370.15 482 T
2 12 Q
(. This function can) 442.15 482 T
(only be called in single-threaded mode \050such as during g) 72 468 T
(arbage collection\051. It will attempt to) 343.56 468 T
(return a pointer to the location that currently contains the) 72 454 T
7 10 Q
(multiUseWord) 348.62 454 T
2 12 Q
( of the object. There are) 420.62 454 T
(three cases depending on the lock state of the object:) 72 440 T
10 F
(\245) 90 420 T
7 10 Q
(lsNeutral) 108 420 T
2 12 Q
(: the) 162 420 T
7 10 Q
(multiUseWord) 186 420 T
2 12 Q
( is in the object) 258 420 T
10 F
(\245) 90 403 T
7 10 Q
(lsWaiters) 108 403 T
2 12 Q
(,) 162 403 T
7 10 Q
(lsLocked) 168 403 T
2 12 Q
(: the) 216 403 T
7 10 Q
(multiUseWord) 240 403 T
2 12 Q
( is in the \336rst lock record) 312 403 T
10 F
(\245) 90 386 T
7 10 Q
(lsBusy) 108 386 T
2 12 Q
(: the) 144 386 T
7 10 Q
(multiUseWord) 168 386 T
2 12 Q
( is inaccessible \050return NULL\051.) 240 386 T
7 10 Q
(int) 72 370.33 T
10 F
(incAgeNoSync) 96 370.33 T
7 F
(\050java_lang_Object *obj\051) 168 370.33 T
2 12 Q
(Return the current age of the object and update the age in the object to be one greater \050if it is not) 72 333 T
(already pe) 72 319 T
(gged at MAX_A) 121.46 319 T
(GE\051. The age returned will be in the interv) 201.64 319 T
(al [0, MAX_A) 405.62 319 T
(GE]. If lock) 475.46 319 T
(state is) 72 305 T
7 10 Q
(lsBusy) 108 305 T
2 12 Q
(, the real age can't be found, so returns 1.) 143.22 305 T
7 10 Q
(void) 72 286.33 T
10 F
(setAgeNoSync) 102 286.33 T
7 F
(\050java_lang_Object *obj, int i\051) 174 286.33 T
2 12 Q
(Set the age of the object if the lock state is not) 72 261 T
7 10 Q
(lsBusy) 296.64 261 T
2 12 Q
(.) 331.86 261 T
4 F
(3.5  Class Inf) 72 232 T
(ormation) 138.37 232 T
2 F
(Class) 72 207 T
(information) 100.98 207 T
(is) 160.61 207 T
(represented) 171.59 207 T
(in) 229.87 207 T
(se) 242.18 207 T
(v) 251.88 207 T
(eral) 257.7 207 T
(forms,) 278.66 207 T
(b) 312.62 207 T
(ut) 318.39 207 T
(the) 330.69 207 T
(primary) 348.33 207 T
(w) 389.3 207 T
(ay) 397.84 207 T
(in) 412.14 207 T
(which) 424.45 207 T
(collectors) 456.75 207 T
(access) 506.38 207 T
(class information about an object is through the function) 72 193 T
7 10 Q
(getNearClass) 346.31 193 T
2 12 Q
(, described in \322Object) 418.31 193 T
(Header Information,) 72 179 T
(\323 page) 169.13 179 T
(27.) 203.11 179 T
FMENDPAGE
%%EndPage: "28" 34
%%Page: "29" 35
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 29) 518.89 34.17 T
2 12 Q
(Gi) 72 712 T
(v) 83.7 712 T
(en a) 89.52 712 T
7 10 Q
(NearClass) 112.18 712 T
2 12 Q
( pointer) 166.18 712 T
(, there are se) 202.69 712 T
(v) 263.03 712 T
(eral macros that may be used to get speci\336c class infor-) 268.85 712 T
(mation:) 72 698 T
(The) 72 344 T
7 10 Q
(ncFarClass) 93.66 344 T
2 12 Q
( macro may be used to access additional class-related information. Here are the) 153.66 344 T
(more commonly used macros on) 72 330 T
7 10 Q
(Class) 231.65 330 T
2 12 Q
( pointers:) 261.65 330 T
4 F
(3.6  Marking Macr) 72 183 T
(os) 169.1 183 T
2 F
(As described in \322Object Layout,) 72 158 T
(\323 page) 226.13 158 T
(5, a collector can use se) 260.11 158 T
(v) 373.78 158 T
(eral \050at least tw) 379.6 158 T
(o\051 bits in an) 453.12 158 T
(object's header) 72 144 T
(. As a con) 142.48 144 T
(v) 189.98 144 T
(enience, the memory system prede\336nes macros that use the tw) 195.8 144 T
(o lo) 494.96 144 T
(w-) 513 144 T
(order bits as a \322li) 72 130 T
(v) 153.68 130 T
(e\323 mark and an \322indirection\323 mark. A collector is free to use these bits \050during) 159.5 130 T
(collection\051 for an) 72 116 T
(y purpose, ho) 154.46 116 T
(we) 219.16 116 T
(v) 232.85 116 T
(er) 238.67 116 T
(.) 247.33 116 T
4 10 Q
(T) 228.2 678.33 T
(ABLE 2. NearClass accessor macr) 233.97 678.33 T
(os) 380.15 678.33 T
(NearClass macr) 84.07 658.33 T
(o) 152.48 658.33 T
(T) 243.07 658.33 T
(ype) 248.99 658.33 T
(Description) 336.07 658.33 T
7 F
(ncFarClass\050ncls\051) 84.07 642.33 T
(Class *) 243.07 642.33 T
2 F
(the Class associated with a NearClass) 336.07 642.33 T
7 F
(ncFlags\050ncls\051) 84.07 626.33 T
(uint32_t) 243.07 626.33 T
2 F
(Flags used for purposes lik) 336.07 626.33 T
(e class unloading) 443.73 626.33 T
(and GC) 336.07 614.33 T
7 F
(ncSizeInfo\050ncls\051) 84.07 598.33 T
(int32_t) 243.07 598.33 T
2 F
(if this \336eld is:) 336.07 598.33 T
(> 0, it is the size of an object of this class in) 336.07 582.33 T
(w) 336.07 570.33 T
(ords) 343.18 570.33 T
(<= 0, the class is an array type and the v) 336.07 554.33 T
(alue) 496.78 554.33 T
(is -log2\050number of bytes per element\051) 336.07 542.33 T
7 F
(ncMap0\050ncls\051) 84.07 526.33 T
(uint32_t *) 243.07 526.33 T
2 F
(A map of the location of references in an) 336.07 526.33 T
(object of this NearClass) 336.07 514.33 T
7 F
(ncMap2\050ncls\051) 84.07 498.33 T
(uint32_t *) 243.07 498.33 T
2 F
(A map of the location of weak references in) 336.07 498.33 T
(an object of this NearClass) 336.07 486.33 T
7 F
(ncOK\050ncls\051) 84.07 470.33 T
(void *) 243.07 470.33 T
2 F
(When) 336.07 470.33 T
7 F
(DEBUG) 362.45 470.33 T
2 F
( is de\336ned, this can be used to) 392.45 470.33 T
(test if it is equal to a \336x) 336.07 458.33 T
(ed pattern) 430.08 458.33 T
(\050) 336.07 446.33 T
7 F
(nearClassOKBits) 339.39 446.33 T
2 F
(\051) 429.39 446.33 T
7 F
(ncIntfMethodTable\050ncls\051) 84.07 430.33 T
(imethodtable *) 243.07 430.33 T
2 F
(The method table for interf) 336.07 430.33 T
(aces) 444.27 430.33 T
7 F
(ncInterpMethodTable\050ncls\051) 84.07 414.33 T
(Method **) 243.07 414.33 T
2 F
(The table of method blocks for the interpreter) 336.07 414.33 T
7 F
(ncComMethodTable\050ncls\051) 84.07 398.33 T
(void *) 243.07 398.33 T
2 F
(The table of compiled method blocks) 336.07 398.33 T
4 F
(T) 204.75 310.33 T
(ABLE 3. Class accessor macr) 210.52 310.33 T
(os) 335.6 310.33 T
(Class macr) 84.07 290.33 T
(o) 131.38 290.33 T
(T) 195.07 290.33 T
(ype) 200.99 290.33 T
(Description) 270.07 290.33 T
7 F
(cbNearClass\050cls\051) 84.07 274.33 T
(NearClass *) 195.07 274.33 T
2 F
(the NearClass associated with a Class) 270.07 274.33 T
7 F
(cbName\050cls\051) 84.07 258.33 T
(char *) 195.07 258.33 T
2 F
(the name of the class \050e.g., "ja) 270.07 258.33 T
(v) 390.3 258.33 T
(a/lang/) 395.05 258.33 T
(Object"\051) 270.07 246.33 T
7 F
(cbHasRefs\050cls\051) 84.07 230.33 T
(bool_t) 195.07 230.33 T
2 F
(TR) 270.07 230.33 T
(UE if) 282.45 230.33 T
(f an instantiation contains references) 304.14 230.33 T
7 F
(cbSuperClass\050cls\051) 84.07 214.33 T
(Class *) 195.07 214.33 T
2 F
(the superclass associated with the Class) 270.07 214.33 T
79.75 687.75 79.75 392.25 2 L
V
0.5 H
0 Z
N
238.74 672.25 238.74 391.75 2 L
V
N
331.74 672.25 331.74 391.75 2 L
V
N
523.74 687.75 523.74 392.25 2 L
V
N
79.5 688 523.99 688 2 L
V
N
79.5 672 523.99 672 2 L
V
N
79.5 652 523.99 652 2 L
V
N
79.5 636 523.99 636 2 L
V
N
79.5 608 523.99 608 2 L
V
N
79.5 536 523.99 536 2 L
V
N
79.5 508 523.99 508 2 L
V
N
79.5 480 523.99 480 2 L
V
N
79.5 440 523.99 440 2 L
V
N
79.5 424 523.99 424 2 L
V
N
79.5 408 523.99 408 2 L
V
N
79.5 392 523.99 392 2 L
V
N
79.75 319.75 79.75 208.25 2 L
V
N
190.74 304.25 190.74 207.75 2 L
V
N
265.74 304.25 265.74 207.75 2 L
V
N
455.74 319.75 455.74 208.25 2 L
V
N
79.5 320 455.99 320 2 L
V
N
79.5 304 455.99 304 2 L
V
N
79.5 284 455.99 284 2 L
V
N
79.5 268 455.99 268 2 L
V
N
79.5 240 455.99 240 2 L
V
N
79.5 224 455.99 224 2 L
V
N
79.5 208 455.99 208 2 L
V
N
FMENDPAGE
%%EndPage: "29" 35
%%Page: "30" 36
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 30) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
7 10 Q
0 X
(macro int) 72 713.33 T
10 F
(OBJECT_ALIGNMENT_MASK) 132 713.33 T
7 F
(macro int) 72 701.33 T
10 F
(HEADER_ALIGNMENT_MASK) 132 701.33 T
2 12 Q
(The) 72 676 T
(\336rst) 93.2 676 T
(mask) 114.4 676 T
(go) 142.27 676 T
(v) 154.09 676 T
(erns) 159.91 676 T
(ho) 182.44 676 T
(w) 194.14 676 T
(objects) 205.34 676 T
(should) 241.87 676 T
(be) 276.41 676 T
(aligned) 290.28 676 T
(while) 328.14 676 T
(the) 357.34 676 T
(second) 374.54 676 T
(go) 410.4 676 T
(v) 422.22 676 T
(erns) 428.04 676 T
(ho) 450.57 676 T
(w) 462.27 676 T
7 10 Q
(NearClass) 473.47 676 T
2 12 Q
(es) 527.47 676 T
(\050which are pointed to by object headers\051 should be aligned. Objects and) 72 662 T
7 10 Q
(NearClass) 418.93 662 T
2 12 Q
(es are mini-) 472.93 662 T
(mally aligned on w) 72 644.8 T
(ord boundaries, so the masks are at least) 164.21 644.8 T
7 10 Q
(0x3) 360.5 644.8 T
2 12 Q
( and should ha) 378.5 644.8 T
(v) 447.92 644.8 T
(e a v) 453.74 644.8 T
(alue \0502) 476.1 644.8 T
5 9.6 Q
(n) 509.09 649.6 T
2 12 Q
( - 1\051) 513.89 644.8 T
(for some) 72 630.8 T
5 F
(n) 117.32 630.8 T
2 F
(.) 123.32 630.8 T
7 10 Q
(macro NearClass*) 72 612.13 T
10 F
(clearAllMarks) 174 612.13 T
7 F
(\050NearClass* ncls\051) 252 612.13 T
(macro bool_t) 72 600.13 T
10 F
(hasAnyMark) 192 600.13 T
7 F
(\050NearClass* ncls\051) 252 600.13 T
2 12 Q
(Catch-all macros that mask or query all of the non-reference bits from a class reference so that it) 72 574.8 T
(may safely be used to access the referred-to class structure.) 72 560.8 T
7 10 Q
(macro int) 72 542.13 T
10 F
(LIVE_MARK) 132 542.13 T
7 F
(macro int) 72 530.13 T
10 F
(INDIRECTION_MARK) 132 530.13 T
2 12 Q
(These macros de\336ne bits that are used to indicate that an object is li) 72 504.8 T
(v) 395.99 504.8 T
(e and/or has been mo) 401.81 504.8 T
(v) 503.6 504.8 T
(ed, or) 509.42 504.8 T
(that a pointer is a member of an indirection list \050during a collection\051.) 72 490.8 T
7 10 Q
(macro NearClass*) 72 472.13 T
10 F
(clearLiveMark) 216 472.13 T
7 F
(\050NearClass* ncls\051) 294 472.13 T
(macro bool_t) 72 460.13 T
10 F
(hasLiveMark) 228 460.13 T
7 F
(\050NearClass* ncls\051) 294 460.13 T
(macro NearClass*) 72 448.13 T
10 F
(setLiveMark) 228 448.13 T
7 F
(\050NearClass* ncls\051) 294 448.13 T
(macro NearClass*) 72 424.13 T
10 F
(clearIndirectionMark) 174 424.13 T
7 F
(\050java_lang_Object* ptr\051) 294 424.13 T
(macro bool_t) 72 412.13 T
10 F
(hasIndirectionMark) 186 412.13 T
7 F
(\050java_lang_Object* ptr\051) 294 412.13 T
(macro NearClass*) 72 400.13 T
10 F
(setIndirectionMark) 186 400.13 T
7 F
(\050java_lang_Object* ptr\051) 294 400.13 T
2 12 Q
(Gi) 72 374.8 T
(v) 83.7 374.8 T
(en a pointer v) 89.52 374.8 T
(alue, these three macros mask, query) 154.87 374.8 T
(, and \322add\323 the) 331.04 374.8 T
7 10 Q
(LIVE_MARK) 406.02 374.8 T
2 12 Q
( or) 460.02 374.8 T
7 10 Q
(INDIRECTION_MARK) 72 360.8 T
2 12 Q
(on) 170.88 360.8 T
(this) 185.75 360.8 T
(v) 205.97 360.8 T
(alue.) 211.67 360.8 T
(Note) 237.54 360.8 T
(that) 263.74 360.8 T
(these) 284.62 360.8 T
(don't) 312.16 360.8 T
(read) 338.53 360.8 T
(or) 362.06 360.8 T
(write) 374.93 360.8 T
(the) 402.47 360.8 T
(heap) 420.01 360.8 T
(at) 445.55 360.8 T
(all\321the) 457.09 360.8 T
(y) 495.57 360.8 T
(simply) 504.45 360.8 T
(return ne) 72 346.8 T
(w v) 114.68 346.8 T
(alues based on pointer v) 132.05 346.8 T
(alues.) 247.73 346.8 T
7 10 Q
(macro bool_t) 72 328.13 T
10 F
(hasLiveMarkObj) 150 328.13 T
7 F
(\050java_lang_Object* obj\051) 234 328.13 T
2 12 Q
(This macro tests if an object has been mark) 72 302.8 T
(ed li) 279.84 302.8 T
(v) 300.54 302.8 T
(e by looking at its header) 306.36 302.8 T
(.) 426.68 302.8 T
4 F
(3.7  Root-pr) 72 273.8 T
(ocessing and Iteration Support) 133.44 273.8 T
8 10 Q
([must use]) 72 250.13 T
7 F
(void) 72 238.13 T
10 F
(processStrongRoots) 102 238.13 T
7 F
(\050RootCallback globalRootCB, RootCallback localRootCB,) 210 238.13 T
(                        RootCallback stackRootCB,  RootCallback classRootCB,) 72 226.13 T
(                        bool_t allClasses, void *data\051) 72 214.13 T
2 12 Q
(This function processes strong roots in the follo) 72 188.8 T
(wing f) 300.68 188.8 T
(ashion. It) 331.56 188.8 T
10 F
(\245) 90 168.8 T
2 F
(in) 108 168.8 T
(v) 116.86 168.8 T
(ok) 122.62 168.8 T
(es globalRootCB on locations of all strong global roots,) 134.5 168.8 T
10 F
(\245) 90 151.8 T
2 F
(in) 108 151.8 T
(v) 116.86 151.8 T
(ok) 122.62 151.8 T
(es localRootCB on locations of all local roots in an) 134.5 151.8 T
(y thread,) 379.31 151.8 T
10 F
(\245) 90 134.8 T
2 F
(in) 108 134.8 T
(v) 116.86 134.8 T
(ok) 122.62 134.8 T
(es) 134.5 134.8 T
(stackRootCB) 146.97 134.8 T
(on) 213.45 134.8 T
(all) 227.93 134.8 T
(reference-holding) 242.4 134.8 T
(locations) 330.17 134.8 T
(in) 375.98 134.8 T
(thread) 387.79 134.8 T
(stacks.) 420.25 134.8 T
(If) 455.06 134.8 T
7 10 Q
(EXACT_STACKS) 465.52 134.8 T
2 12 Q
(is de\336ned to be true, we get e) 108 120.8 T
(xactly the reference-holding locations; otherwise we get a) 248.46 120.8 T
(conserv) 108 106.8 T
(ati) 145.02 106.8 T
(v) 156.72 106.8 T
(e approximation.) 162.54 106.8 T
10 F
(\245) 90 89.8 T
2 F
(If) 108 89.8 T
7 10 Q
(allClasses) 118.99 89.8 T
2 12 Q
( is) 178.99 89.8 T
7 10 Q
(TRUE) 193 89.8 T
2 12 Q
(, in) 217 89.8 T
(v) 231.85 89.8 T
(ok) 237.61 89.8 T
(es classRootCB on locations of all object references in all) 249.49 89.8 T
(classes in the system. Otherwise, it in) 108 75.8 T
(v) 287.51 75.8 T
(ok) 293.27 75.8 T
(es classRootCB on all object references in) 305.15 75.8 T
FMENDPAGE
%%EndPage: "30" 36
%%Page: "31" 37
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 31) 518.89 34.17 T
2 12 Q
(classes that are reachable from Ja) 108 712 T
(v) 268.03 712 T
(a stack frames \050the classes of the methods of each) 273.73 712 T
(frame\051, and all other non-unloadable classes.) 108 698 T
(See \322Collection,) 72 672 T
(\323 page) 149.82 672 T
(12, for more information.) 183.8 672 T
8 10 Q
([must use]) 72 653.33 T
7 F
(typedef bool_t \050*) 72 641.33 T
10 F
(WeakRootPredicate) 174 641.33 T
7 F
(\051\050java_lang_Object *weakRootObj,) 276 641.33 T
(                                    void *data\051) 72 629.33 T
(void) 72 617.33 T
10 F
(processWeakRoots) 102 617.33 T
7 F
(\050WeakRootPredicate isDying,) 198 617.33 T
(                      RootCallback weakVMRootCB, RootCallback weakRefCB,) 72 605.33 T
(                      SimpleFct transitiveScannerCB, void *data\051) 72 593.33 T
2 12 Q
(This function processes weak roots. See \322Collecting W) 72 568 T
(eak References,) 335.66 568 T
(\323 page) 410.78 568 T
(14, for more infor-) 444.77 568 T
(mation.) 72 554 T
7 10 Q
(void) 72 535.33 T
10 F
(processRootsRound2) 102 535.33 T
7 F
(\050RootCallback globalRootCB, RootCallback localRootCB,) 210 535.33 T
(                        RootCallback stackRootCB,  RootCallback classRootCB,) 72 523.33 T
(                        void *data\051) 72 511.33 T
2 12 Q
(This function iterates o) 72 486 T
(v) 182.81 486 T
(er all weak and strong roots and all references in classes that ha) 188.63 486 T
(v) 492.97 486 T
(e been) 498.79 486 T
(mark) 72 472 T
(ed. This function is used for g) 96.54 472 T
(arbage collection algorithms that require multiple passes o) 240.13 472 T
(v) 520.25 472 T
(er) 526.07 472 T
(roots) 72 458 T
(\050such) 98.89 458 T
(as) 127.77 458 T
(the) 140.65 458 T
(\322updating) 158.2 458 T
(roots\323) 208.42 458 T
(phase) 240.63 458 T
(of) 270.85 458 T
(the) 283.73 458 T
(generational) 301.28 458 T
(mark-compact) 363.48 458 T
(collector\051.) 435.68 458 T
(The) 487.56 458 T
(initial) 509.1 458 T
(pass o) 72 444 T
(v) 101.48 444 T
(er the roots should be done with) 107.3 444 T
7 10 Q
(processStrongRoots\050\051) 264.29 444 T
2 12 Q
( and) 384.29 444 T
7 10 Q
(processWeakRoots\050\051) 407.62 444 T
2 12 Q
(.) 515.62 444 T
(Subsequent passes should be done with this function.) 72 430 T
8 10 Q
([must use]) 72 411.33 T
7 F
(void) 72 399.33 T
10 F
(startDiscoveringWeakRefs) 102 399.33 T
7 F
(\050\051) 246 399.33 T
2 12 Q
(Call this before starting \322mark phase\323 \050i.e., calling) 72 374 T
7 10 Q
(processStrongRoots\050\051) 316.96 374 T
2 12 Q
(, etc\051.) 436.96 374 T
8 10 Q
([must use]) 72 355.33 T
7 F
(void) 72 343.33 T
10 F
(stopDiscoveringWeakRefs) 102 343.33 T
7 F
(\050\051) 240 343.33 T
2 12 Q
(Call this after \336nished \322marking\323 strong roots, b) 72 318 T
(ut before calling) 303.74 318 T
7 10 Q
(processWeakRoots\050\051) 385.39 318 T
2 12 Q
(.) 493.39 318 T
7 10 Q
(void) 72 299.33 T
10 F
(updateTempPendingQ) 102 299.33 T
7 F
(\050RootCallback weakRefUpdaterCB, void *data\051) 210 299.33 T
2 12 Q
(Call this after calling) 72 274 T
7 10 Q
(processWeakRefs\050\051) 175.99 274 T
2 12 Q
( IFF weak reference objects were disco) 277.99 274 T
(v) 465.74 274 T
(ered by) 471.56 274 T
7 10 Q
(OBJ_REFS_DO\050\051) 72 260 T
2 12 Q
(in) 152.55 260 T
(their) 164.44 260 T
(OLD) 188.99 260 T
(locations.) 216.21 260 T
(The) 265.09 260 T
7 10 Q
(tempPendingQ) 286.3 260 T
2 12 Q
(w) 360.86 260 T
(as) 369.4 260 T
(created) 381.95 260 T
(based) 419.15 260 T
(on) 449.02 260 T
(those) 463.58 260 T
(addresses) 491.46 260 T
(so) 72 246 T
(the) 85.6 246 T
7 10 Q
(next) 103.19 246 T
2 12 Q
(\336elds) 130.12 246 T
(need) 159.06 246 T
(to) 184.65 246 T
(be) 196.91 246 T
(updated) 211.17 246 T
(to) 252.1 246 T
(point) 264.36 246 T
(to) 291.97 246 T
(the) 304.23 246 T
(ne) 321.83 246 T
(w) 332.86 246 T
(locations) 344.45 246 T
(\050or) 390.72 246 T
(otherwise) 407.64 246 T
(processed) 457.23 246 T
(by) 507.47 246 T
(the) 522.4 246 T
(gc) 72 232 T
(so) 86.06 232 T
(it) 99.45 232 T
(can) 108.85 232 T
(update) 128.23 232 T
(them) 162.95 232 T
(later\051.) 189.68 232 T
(The) 220.72 232 T
7 10 Q
(weakRefUpdaterCB) 242.11 232 T
2 12 Q
(can) 340.84 232 T
(often) 360.22 232 T
(by) 387.61 232 T
(the) 402.33 232 T
(same) 419.72 232 T
(function) 447.11 232 T
(as) 489.83 232 T
(the) 502.55 232 T
(one) 519.95 232 T
(passed as) 72 218 T
7 10 Q
(weakRefCB) 119.99 218 T
2 12 Q
( to) 173.99 218 T
7 10 Q
(processWeakRoots\050\051) 189.32 218 T
2 12 Q
(. If weak reference objects are disco) 297.32 218 T
(v) 470.06 218 T
(ered by) 475.88 218 T
7 10 Q
(OBJ_REFS_DO\050\051) 72 204 T
2 12 Q
( in their NEW locations, do NO) 150 204 T
(T call this function.) 301.84 204 T
8 10 Q
([must use]) 72 185.33 T
7 F
(void) 72 173.33 T
10 F
(queuePendingRefs) 102 173.33 T
7 F
(\050\051) 198 173.33 T
2 12 Q
(Cop) 72 148 T
(y ne) 91.88 148 T
(wly found pending weak reference objects to the real pendingQ. Call in your) 111.91 148 T
7 10 Q
(speci-) 483.17 148 T
(ficGC\050\051) 72 134 T
2 12 Q
( function after all object references ha) 114 134 T
(v) 295.69 134 T
(e been \336x) 301.51 134 T
(ed up.) 347.99 134 T
FMENDPAGE
%%EndPage: "31" 37
%%Page: "32" 38
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 32) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
8 10 Q
0 X
([must use]) 72 713.33 T
7 F
(macro) 72 701.33 T
10 F
(OBJ_REFS_DO) 108 701.33 T
7 F
(\050java_lang_Object *obj, NearClass *ncls, statements\051) 174 701.33 T
2 12 Q
(This macro creates an iteration v) 72 676 T
(ariable named) 228.66 676 T
7 10 Q
(refPtr) 299.3 676 T
2 12 Q
( \050of type) 335.3 676 T
7 10 Q
(java_lang_Object**) 378.96 676 T
2 12 Q
(\051 and e) 486.96 676 T
(x) 519.43 676 T
(e-) 525.25 676 T
(cutes) 72 662 T
5 F
(statements) 99.66 662 T
2 F
( once for each reference in the object, with) 150.32 662 T
7 10 Q
(refPtr) 358.25 662 T
2 12 Q
( bound to the location of the) 394.25 662 T
(reference) 72 648 T
(in) 119.16 648 T
(the) 131.02 648 T
(object.) 148.22 648 T
(The) 183.07 648 T
7 10 Q
(ncls) 204.26 648 T
2 12 Q
(parameter) 230.79 648 T
(pro) 281.3 648 T
(vides) 297.11 648 T
(the) 324.98 648 T
(requisite) 342.17 648 T
(class) 386.03 648 T
(information) 411.89 648 T
(to) 471.08 648 T
(identify) 482.94 648 T
(the) 522.81 648 T
(references in the object. See \322Collecting W) 72 634 T
(eak References,) 278.65 634 T
(\323 page) 353.77 634 T
(14, for a description of ho) 387.76 634 T
(w) 512.1 634 T
7 10 Q
(OBJ_REFS_DO\050\051) 72 620 T
2 12 Q
( may also \322disco) 150 620 T
(v) 229.48 620 T
(er\323 weak references.) 235.3 620 T
7 10 Q
(macro) 72 601.33 T
10 F
(OBJ_REFS_DO_IGNORING_WEAKNESS) 108 601.33 T
7 F
(\050java_lang_Object *obj,) 282 601.33 T
(                                    NearClass *ncls,) 72 589.33 T
(                                    statements\051) 72 577.33 T
2 12 Q
(Lik) 72 552 T
(e) 88.55 552 T
7 10 Q
(OBJ_REFS_DO\050\051) 96.88 552 T
2 12 Q
(, b) 174.88 552 T
(ut it ne) 186.64 552 T
(v) 219.67 552 T
(er does weak reference disco) 225.49 552 T
(v) 363.91 552 T
(ery) 369.73 552 T
(.) 384.28 552 T
8 10 Q
([must use]) 72 533.33 T
7 F
(void) 72 521.33 T
10 F
(scanNearClasses) 102 521.33 T
7 F
(\050java_lang_Object *obj, NearClass *ncls,) 192 521.33 T
(                     RootCallback classRootCB, void *data\051) 72 509.33 T
2 12 Q
(Scan the class structure of an object and, it if is an instance of ja) 72 484 T
(v) 379.37 484 T
(a.lang.Class, also scan the class) 385.07 484 T
(structure that it represents.) 72 470 T
7 10 Q
(void) 72 451.33 T
10 F
(scanRootClasses) 102 451.33 T
7 F
(\050RootCallback classRootCB, void *data, bool_t scanAll\051) 192 451.33 T
2 12 Q
(Scan) 72 426 T
(the) 97.93 426 T
(root) 115.19 426 T
(classes,) 137.12 426 T
(in) 176.04 426 T
(v) 184.89 426 T
(oking) 190.65 426 T
7 10 Q
(classRootCB) 220.59 426 T
2 12 Q
(on) 289.18 426 T
(e) 303.78 426 T
(v) 308.81 426 T
(ery) 314.63 426 T
(object) 332.55 426 T
(reference) 364.48 426 T
(in) 411.7 426 T
(these) 423.64 426 T
(classes) 450.89 426 T
(\050the) 486.82 426 T
(object) 508.07 426 T
(references are found in static v) 72 412 T
(ariables, constant pools, and other internal \336elds of classes\051, mark-) 219.31 412 T
(ing the classes as we encounter them. It is e) 72 398 T
(xpected \050b) 281.11 398 T
(ut not required\051 that) 331.19 398 T
7 10 Q
(classRootCB) 429.84 398 T
2 12 Q
( calls) 495.84 398 T
(back) 72 384 T
(into) 97.33 384 T
(the) 118.67 384 T
(class) 136.01 384 T
(scanning) 162.01 384 T
(code) 207.34 384 T
(using) 232.67 384 T
(the) 261.34 384 T
7 10 Q
(scanNearClasses) 278.68 384 T
2 12 Q
(macro) 371.35 384 T
(to) 404.01 384 T
(cause) 416.02 384 T
(other) 445.34 384 T
(non-root) 472.68 384 T
(near) 516.68 384 T
(classes to ha) 72 370 T
(v) 131.75 370 T
(e their \322Referenced\323 bit set and be scanned. An) 137.57 370 T
(y class that we can't unload is con-) 364.98 370 T
(sidered a root and must be scanned. Normally) 72 356 T
(, these are only the stick) 291.18 356 T
(y classes, b) 406.98 356 T
(ut at times all) 461.06 356 T
(classes are treated this w) 72 342 T
(ay \050e.g., when the v) 190.51 342 T
(eri\336er or pro\336ler is acti) 284.64 342 T
(v) 395.65 342 T
(e\051. If) 401.47 342 T
7 10 Q
(scanAll) 427.79 342 T
2 12 Q
( is true, scan) 469.79 342 T
(e) 72 328 T
(v) 77.03 328 T
(ery class, re) 82.85 328 T
(g) 139.64 328 T
(ardless of whether it is a root or not in the abo) 145.58 328 T
(v) 366.37 328 T
(e sense. This is used in a genera-) 372.19 328 T
(tional) 72 314 T
(memory) 101.94 314 T
(system) 144.54 314 T
(where,) 180.49 314 T
(if) 215.41 314 T
(we) 225.35 314 T
(are) 241.95 314 T
(not) 259.2 314 T
(doing) 277.15 314 T
(a) 307.09 314 T
(full) 315.02 314 T
(GC,) 334.3 314 T
(we) 356.57 314 T
(must) 373.17 314 T
(scan) 399.12 314 T
(all) 423.05 314 T
(classes) 437.65 314 T
(\050if) 473.58 314 T
(we) 487.52 314 T
(did) 504.11 314 T
(not) 522.06 314 T
(scan) 72 300 T
(a) 95.95 300 T
(speci\336c) 103.9 300 T
(class,) 143.18 300 T
(the) 172.14 300 T
(objects) 189.43 300 T
(it) 226.05 300 T
(points) 235.34 300 T
(to) 267.31 300 T
(could) 279.27 300 T
(become) 308.56 300 T
(g) 348.5 300 T
(arbage) 354.44 300 T
(while) 389.05 300 T
(the) 418.33 300 T
(class) 435.62 300 T
(survi) 461.57 300 T
(v) 485.27 300 T
(es\051.) 491.09 300 T
(Note:) 510.71 300 T
(this) 72 286 T
(function) 91.9 286 T
(only) 134.46 286 T
(scans) 158.36 286 T
(classes) 186.91 286 T
(which) 222.8 286 T
(ha) 254.69 286 T
(v) 265.77 286 T
(e) 271.59 286 T
(a) 279.48 286 T
(clear) 287.37 286 T
(\322Referenced\323) 313.25 286 T
(bit) 381.1 286 T
(\050if) 396.34 286 T
(the) 410.23 286 T
(\322Referenced\323) 427.45 286 T
(bit) 495.31 286 T
(is) 510.54 286 T
(set,) 521.11 286 T
(it is tak) 72 272 T
(en as an indication that the class has already been processed\051. If you need to scan all) 107.22 272 T
(classes, call) 72 258 T
7 10 Q
(clearClassReferencedBits\050\051) 131.65 258 T
2 12 Q
( \336rst.) 287.65 258 T
8 10 Q
([must use]) 72 239.33 T
7 F
(void) 72 227.33 T
10 F
(clearClassReferencedBits) 102 227.33 T
7 F
(\050\051) 246 227.33 T
2 12 Q
(Clear the \322Referenced\323 status in all classes \050the bit is actually in the) 72 202 T
7 10 Q
(NearClass) 400.27 202 T
2 12 Q
(\051.) 454.27 202 T
7 10 Q
(void) 72 183.33 T
10 F
(scanObjectRefsInMarkedClasses) 102 183.33 T
7 F
(\050RootCallback classRootCB, void *data\051) 276 183.33 T
2 12 Q
(Process all object references in classes that ha) 72 158 T
(v) 292.03 158 T
(e been mark) 297.85 158 T
(ed. This function is useful for GC) 356.38 158 T
(algorithms that emplo) 72 144 T
(y a separate pointer updating phase after marking li) 177.22 144 T
(v) 423.53 144 T
(e objects.) 429.35 144 T
7 10 Q
(void) 72 125.33 T
10 F
(objToRefIterator) 102 125.33 T
7 F
(\050java_lang_Object *obj, RefIterator fct, void *data\051) 198 125.33 T
2 12 Q
(This) 72 100 T
(function) 95.9 100 T
(in) 138.45 100 T
(v) 147.31 100 T
(ok) 153.07 100 T
(es) 164.95 100 T
7 10 Q
(fct) 177.51 100 T
2 12 Q
(on) 198.07 100 T
(all) 212.63 100 T
(non-null) 227.19 100 T
(reference) 270.42 100 T
(\336elds) 317.61 100 T
(of) 346.17 100 T
7 10 Q
(obj) 358.73 100 T
2 12 Q
(.) 376.73 100 T
(It) 382.29 100 T
(is) 392.18 100 T
(a) 402.74 100 T
(\322functional\323) 410.63 100 T
(v) 472.51 100 T
(ersion) 478.33 100 T
(of) 510.22 100 T
(the) 522.78 100 T
7 10 Q
(OBJ_REFS_DO\050\051) 72 86 T
2 12 Q
( macro. The callback) 150 86 T
7 10 Q
(fct) 253.63 86 T
2 12 Q
(, is passed tw) 271.63 86 T
(o ar) 335.51 86 T
(guments: the location of the reference) 353.62 86 T
(and a pointer to the data.) 72 72 T
FMENDPAGE
%%EndPage: "32" 38
%%Page: "33" 39
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 33) 518.89 34.17 T
7 10 Q
(void) 72 713.33 T
10 F
(referencesDo) 102 713.33 T
7 F
(\050RefIterator fct, void *data, java_int stackSize\051) 174 713.33 T
2 12 Q
(This function in) 72 688 T
(v) 148.19 688 T
(ok) 153.95 688 T
(es) 165.83 688 T
7 10 Q
(fct) 178.82 688 T
2 12 Q
( on all non-null references in the system. It does this by using) 196.82 688 T
7 10 Q
(fct) 494.8 688 T
2 12 Q
( to) 512.8 688 T
(process all the roots and then w) 72 674 T
(alking o) 223.19 674 T
(v) 262.01 674 T
(er all the objects in the heap, applying) 267.83 674 T
7 10 Q
(fct) 453.47 674 T
2 12 Q
( to the refer-) 471.47 674 T
(ences) 72 660 T
(in) 101.61 660 T
(each) 113.89 660 T
(object) 138.83 660 T
(in) 171.11 660 T
(turn.) 183.4 660 T
(If) 208.69 660 T
(called) 219.63 660 T
(while) 251.24 660 T
(threads) 280.86 660 T
(are) 318.47 660 T
(running,) 336.08 660 T
(this) 379.36 660 T
(function) 399.65 660 T
(stops) 442.6 660 T
(the) 470.23 660 T
(w) 487.85 660 T
(orld) 496.39 660 T
(con-) 518.67 660 T
(sistently) 72 646 T
(\050as) 114.93 646 T
(if) 131.84 646 T
(during) 142.09 646 T
(a) 176.35 646 T
(GC\051) 184.6 646 T
(and) 208.18 646 T
(iterates) 228.43 646 T
(o) 266.01 646 T
(v) 271.83 646 T
(er) 277.65 646 T
(the) 289.89 646 T
(heap) 307.48 646 T
(in) 333.05 646 T
(a) 345.31 646 T
(ne) 353.56 646 T
(w) 364.59 646 T
(thread.) 376.17 646 T
7 10 Q
(stackSize) 412.08 646 T
2 12 Q
(can) 469 646 T
(be) 488.58 646 T
(used) 502.83 646 T
(to) 527.74 646 T
(specify the number of bytes to allocate for the thread's stack, or zero may be passed to get a) 72 632 T
(def) 72 618 T
(ault size.) 87.2 618 T
7 10 Q
(void) 72 599.33 T
10 F
(scanObjectsDo) 102 599.33 T
7 F
(\050ObjIterator liveFct, void *liveData,) 180 599.33 T
(                   ObjIterator deadFct, void *deadData,) 72 587.33 T
(                   int depth, java_lang_Object **objList,) 72 575.33 T
(                   int objListLength, java_int stackSize\051) 72 563.33 T
2 12 Q
(This) 72 538 T
(function) 96.01 538 T
(applies) 138.67 538 T
(a) 175.34 538 T
(pair) 183.34 538 T
(of) 204.67 538 T
(functions) 217.34 538 T
(to) 264.67 538 T
(all) 276.68 538 T
(objects) 291.35 538 T
(in) 328.02 538 T
(the) 340.02 538 T
(heap) 357.36 538 T
(based) 382.69 538 T
(on) 412.68 538 T
(whether) 427.35 538 T
(the) 468.67 538 T
(objects) 486.01 538 T
(are) 522.68 538 T
(ali) 72 524 T
(v) 83.7 524 T
(e or dead. If called while threads are running, this function stops the w) 89.52 524 T
(orld consistently \050as if) 427.67 524 T
(during a GC\051, cleans up LABs \050if in use\051, and iterates o) 72 510 T
(v) 337.44 510 T
(er the heap in a ne) 343.26 510 T
(w thread. Note that if) 430.6 510 T
(the w) 72 496 T
(orld is already stopped, it is assumed that LAB's are already cleaned up.) 98.21 496 T
7 10 Q
(stackSize) 446.64 496 T
2 12 Q
( can be) 500.64 496 T
(used) 72 482 T
(to) 96.84 482 T
(specify) 109.03 482 T
(the) 146.53 482 T
(number) 164.04 482 T
(of) 203.55 482 T
(bytes) 216.39 482 T
(to) 244.57 482 T
(allocate) 256.75 482 T
(for) 296.92 482 T
(the) 313.76 482 T
(thread's) 331.27 482 T
(stack,) 370.93 482 T
(or) 401.44 482 T
(zero) 414.28 482 T
(may) 437.78 482 T
(be) 461.29 482 T
(passed) 475.47 482 T
(to) 510.31 482 T
(get) 522.49 482 T
(a def) 72 468 T
(ault size. The function w) 95.53 468 T
(orks in tw) 214.39 468 T
(o phases:) 262.27 468 T
(1.) 90 447.8 T
(Mark all the objects using li) 108 447.8 T
(v) 242.03 447.8 T
(emarks on the objects' NearClass \336elds.) 247.85 447.8 T
(2.) 90 432 T
(Iterate o) 108 432 T
(v) 147.47 432 T
(er the objects, applying the appropriate callback function depending on whether) 153.29 432 T
(the objects are ali) 108 419.2 T
(v) 192.01 419.2 T
(e or dead, and clearing the li) 197.83 419.2 T
(v) 333.83 419.2 T
(emarks as objects are processed.) 339.65 419.2 T
(The) 72 394.6 T
7 10 Q
(depth) 93.33 394.6 T
2 12 Q
(,) 123.33 394.6 T
7 10 Q
(objList) 129 394.6 T
2 12 Q
(,) 171 394.6 T
(and) 176.67 394.6 T
7 10 Q
(objListLength) 196.67 394.6 T
2 12 Q
(parameters) 277.34 394.6 T
(are) 332.66 394.6 T
(used) 349.98 394.6 T
(to) 374.65 394.6 T
(bound) 386.66 394.6 T
(the) 419.33 394.6 T
(amount) 436.66 394.6 T
(of) 475.33 394.6 T
(stack) 488 394.6 T
(used) 515.33 394.6 T
(during the marking phase. The depth parameter bounds the number of recursi) 72 380.6 T
(v) 442.96 380.6 T
(e calls that will be) 448.78 380.6 T
(made at an) 72 366.6 T
(y gi) 123.8 366.6 T
(v) 141.84 366.6 T
(en time. If the depth limit is reached on a particular object, that object is pushed) 147.66 366.6 T
(onto) 72 352.6 T
(the) 96.2 352.6 T
(object) 113.72 352.6 T
(list,) 145.91 352.6 T
7 10 Q
(objList) 166.45 352.6 T
2 12 Q
(,) 208.45 352.6 T
(so) 214.31 352.6 T
(that) 227.84 352.6 T
(it) 248.7 352.6 T
(and) 258.24 352.6 T
(similar) 278.43 352.6 T
(objects) 314.62 352.6 T
(can) 351.48 352.6 T
(be) 371 352.6 T
(processed) 385.19 352.6 T
(later) 435.37 352.6 T
(.) 456.03 352.6 T
(If) 461.89 352.6 T
(the) 472.75 352.6 T
(object) 490.27 352.6 T
(list) 522.46 352.6 T
(o) 72 338.6 T
(v) 77.82 338.6 T
(er\337o) 83.64 338.6 T
(ws,) 105.34 338.6 T
(the) 124.44 338.6 T
(marking) 141.88 338.6 T
(function) 184.65 338.6 T
(switches) 227.41 338.6 T
(to) 271.52 338.6 T
(purely) 283.62 338.6 T
(recursi) 317.06 338.6 T
(v) 349.41 338.6 T
(e) 355.23 338.6 T
(marking) 363.33 338.6 T
(until) 406.1 338.6 T
(there) 430.88 338.6 T
(is) 457.64 338.6 T
(ag) 468.42 338.6 T
(ain) 479.68 338.6 T
(room) 497.12 338.6 T
(on) 525.23 338.6 T
(the object list.) 72 324.6 T
4 F
(3.8  Collection-r) 72 295.6 T
(elated Support) 154.1 295.6 T
8 10 Q
([must use]) 72 271.93 T
7 F
(void) 72 259.93 T
10 F
(getLocksThenGC) 102 259.93 T
7 F
(\050java_int wordsReq, bool_t fullCollection,) 186 259.93 T
(                    java_int stackSize, bool_t hasHeapLck\051) 72 247.93 T
2 12 Q
(This function acquires all re) 72 222.6 T
(gistered locks, and the heap lock if) 206.46 222.6 T
7 10 Q
(hasHeapLck) 376.43 222.6 T
2 12 Q
( is) 436.43 222.6 T
7 10 Q
(FALSE) 450.43 222.6 T
2 12 Q
(, stops the) 480.43 222.6 T
(other threads in a consistent state, then in) 72 208.6 T
(v) 269.5 208.6 T
(ok) 275.26 208.6 T
(es) 287.14 208.6 T
7 10 Q
(specificGC\050\051) 300.13 208.6 T
2 12 Q
( to perform a collection, seeking) 372.13 208.6 T
7 10 Q
(wordsReq) 72 194.6 T
2 12 Q
( free memory) 120 194.6 T
(. If necessary) 183.86 194.6 T
(, it also e) 246.72 194.6 T
(xpands the heap by in) 289.87 194.6 T
(v) 394.04 194.6 T
(oking) 399.8 194.6 T
7 10 Q
(specificExpand-) 430.14 194.6 T
(Heap\050\051) 72 180.6 T
2 12 Q
(. The speci\336c GC routines should not do this. If) 108 180.6 T
7 10 Q
(fullCollection) 339.32 180.6 T
2 12 Q
( is) 423.32 180.6 T
7 10 Q
(TRUE) 437.33 180.6 T
2 12 Q
(, it does a com-) 461.33 180.6 T
(plete) 72 166.6 T
(collection) 98.2 166.6 T
(of) 148.41 166.6 T
(the) 161.28 166.6 T
(heap.) 178.82 166.6 T
7 10 Q
(stackSize) 207.35 166.6 T
2 12 Q
(can) 264.22 166.6 T
(be) 283.76 166.6 T
(used) 297.96 166.6 T
(to) 322.83 166.6 T
(specify) 335.04 166.6 T
(the) 372.57 166.6 T
(number) 390.11 166.6 T
(of) 429.65 166.6 T
(bytes) 442.52 166.6 T
(to) 470.73 166.6 T
(allocate) 482.94 166.6 T
(for) 523.13 166.6 T
(the gc thread's stack, or zero may be passed to get a def) 72 152.6 T
(ault size.) 337.63 152.6 T
7 10 Q
(extern uintptr_t) 72 133.93 T
10 F
(maxHeapWords) 180 133.93 T
2 12 Q
(This v) 72 108.6 T
(ariable k) 102.04 108.6 T
(eeps track of the maximum number of w) 143.57 108.6 T
(ords the heap is allo) 338.41 108.6 T
(wed to consume. It is) 434.1 108.6 T
(set in) 72 94.6 T
7 10 Q
(initHeap\050\051) 100.67 94.6 T
2 12 Q
(.) 160.67 94.6 T
FMENDPAGE
%%EndPage: "33" 39
%%Page: "34" 40
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 34) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
7 10 Q
0 X
(void) 72 713.33 T
10 F
(setRootCategory) 102 713.33 T
7 F
(\050char *catName, ExecEnv *someEE\051) 192 713.33 T
2 12 Q
(F) 72 688 T
(or collecting statistics. Call this function to re) 78.49 688 T
(gister which cate) 296.98 688 T
(gory of roots is currently being) 378.11 688 T
(reported by the) 72 674 T
7 10 Q
(processStrongRoots\050\051) 147.65 674 T
2 12 Q
( and) 267.65 674 T
7 10 Q
(processWeakRoots\050\051) 290.98 674 T
2 12 Q
( functions. The cate) 398.98 674 T
(gory) 493.44 674 T
(remains in ef) 72 660 T
(fect until the ne) 134.35 660 T
(xt call. Usually used only by generational collectors \050to cate) 209.16 660 T
(gorize) 496.93 660 T
(younger and older incoming pointers\051 and the memory system itself.) 72 646 T
4 F
(3.9  F) 72 617 T
(ast-allocation Support) 100.03 617 T
2 F
(Support for thread local allocation b) 72 592 T
(uf) 245.4 592 T
(fers\050LABs\051. See \322) 255.1 592 T
(Allocation,) 340.44 592 T
(\323 page) 393.26 592 T
(11, for more informa-) 427.25 592 T
(tion.) 72 578 T
8 10 Q
([may define]) 72 559.33 T
7 F
(macro int) 72 547.33 T
10 F
(FAST_ALLOCATOR) 132 547.33 T
2 12 Q
(A) 72 522 T
(collector) 83.56 522 T
(can) 128.44 522 T
(de\336ne) 147.99 522 T
(this) 180.21 522 T
(true) 200.44 522 T
(\0501\051) 222 522 T
(if) 238.88 522 T
(your) 249.11 522 T
(memory) 274 522 T
(system) 316.89 522 T
(con\336guration) 353.12 522 T
(uses) 420.01 522 T
(a) 443.57 522 T
(contiguous) 451.79 522 T
(alloca-) 507.35 522 T
(tor) 72 508 T
(in) 88.23 508 T
(the) 100.46 508 T
(youngest) 118.02 508 T
(generation) 164.24 508 T
(and) 217.79 508 T
(is) 238.01 508 T
(able) 248.91 508 T
(to) 271.8 508 T
(hand) 284.03 508 T
(o) 310.25 508 T
(v) 316.07 508 T
(er) 321.89 508 T
(the) 334.11 508 T
(allocation) 351.67 508 T
(to) 401.89 508 T
(the) 414.12 508 T
(f) 431.68 508 T
(ast) 435.56 508 T
(contiguous) 451.79 508 T
(alloca-) 507.35 508 T
(tor in gcimpl.c. Otherwise de\336ne as f) 72 494 T
(alse \0500\051.) 249.85 494 T
8 10 Q
([may define]) 72 475.33 T
7 F
(macro int) 72 463.33 T
10 F
(MAX_LOCAL_BUFFER_SIZE) 132 463.33 T
7 F
(  /* 1000 for example */) 258 463.33 T
(macro int) 72 451.33 T
10 F
(MIN_LOCAL_BUFFER_SIZE) 132 451.33 T
7 F
(  /* 10 for example */) 258 451.33 T
(macro int) 72 439.33 T
10 F
(BIG_FOR_LOCAL_BUFFER) 132 439.33 T
7 F
(   /* Must be >= MIN_LOCAL_BUFFER_SIZE. */) 252 439.33 T
2 12 Q
(Collector can set these limits on ho) 72 414 T
(w lar) 240.36 414 T
(ge and small each LAB can be, and the size of an object) 264.47 414 T
(that is considered too big to allocate in a LAB. The limits are w) 72 400 T
(ord-based.) 377.18 400 T
7 10 Q
(macro) 72 381.33 T
10 F
(ifFastAllocator) 108 381.33 T
7 F
(\050statements\051) 198 381.33 T
2 12 Q
(Conditionally compile) 72 356 T
5 F
(statements) 182.68 356 T
2 F
( if) 233.34 356 T
7 10 Q
(FAST_ALLOCATOR) 246.67 356 T
2 12 Q
( is de\336ned to be true.) 330.67 356 T
7 10 Q
(extern word32  *) 72 337.33 T
10 F
(fastAllocaterLimit) 168 337.33 T
7 F
(extern word32 **) 72 325.33 T
10 F
(fastAllocaterFreePtr) 168 325.33 T
2 12 Q
(If the allocator in) 72 300 T
7 10 Q
(specificAllocateWords\050\051) 157.98 300 T
2 12 Q
( uses allocation from a contiguous space, and if) 295.98 300 T
7 10 Q
(FAST_ALLOCATER) 72 286 T
2 12 Q
(is) 158.88 286 T
7 10 Q
(TRUE) 169.77 286 T
2 12 Q
(,) 193.77 286 T
(then) 199.66 286 T
(these) 223.21 286 T
(tw) 250.75 286 T
(o) 262.63 286 T
(v) 271.52 286 T
(ariables) 277.21 286 T
(are) 317.42 286 T
(used) 334.96 286 T
(to) 359.84 286 T
(speed) 372.06 286 T
(up) 402.27 286 T
(allocation) 417.15 286 T
(by) 467.36 286 T
(caching) 482.25 286 T
(the) 522.45 286 T
(area from which a thread allocates. The function) 72 272 T
7 10 Q
(specificAllocateWords\050\051) 307.6 272 T
2 12 Q
( will then be called) 445.6 272 T
(only upon running out of space according to these cached pointers. Note that if) 72 258 T
7 10 Q
(fastAllocater-) 453.6 258 T
(Limit == NULL) 72 244 T
2 12 Q
(,) 150 244 T
7 10 Q
(specificAllocateWords\050\051) 156 244 T
2 12 Q
( will be called for e) 294 244 T
(v) 386.68 244 T
(ery allocation.) 392.5 244 T
4 F
(3.10  Locking Support) 72 215 T
7 10 Q
(void) 72 191.33 T
10 F
(registerGCMutex) 102 191.33 T
7 F
(\050sys_mutex_t *mut, bool_t early, int rank\051) 192 191.33 T
(void) 72 179.33 T
10 F
(registerGCRecursiveMutex) 102 179.33 T
7 F
(\050RecursiveMutex *rmut, bool_t early, int rank\051) 246 179.33 T
2 12 Q
(These functions re) 72 154 T
(gister locks that GC must claim before starting. Locks are gi) 160.46 154 T
(v) 449.8 154 T
(en an inte) 455.62 154 T
(ger) 502.09 154 T
7 10 Q
(rank) 72 140 T
2 12 Q
(;) 96 140 T
(the) 102.15 140 T
(GC) 119.63 140 T
(will) 139.12 140 T
(acquire) 160.61 140 T
(locks) 198.74 140 T
(in) 226.89 140 T
(order) 239.04 140 T
(of) 267.18 140 T
(ascending) 279.99 140 T
(rank) 330.8 140 T
(\050where) 354.94 140 T
7 10 Q
(RANK_LEAF) 391.07 140 T
2 12 Q
(is) 447.89 140 T
(maximal\051.) 458.71 140 T
(Since) 510.52 140 T
(all locks in the JVM must ha) 72 126 T
(v) 209.76 126 T
(e a total order) 215.58 126 T
(, it is be) 281.41 126 T
(yond the scope of this document to describe) 319.24 126 T
(ho) 72 112 T
(w) 83.7 112 T
(to) 94.93 112 T
(choose) 106.84 112 T
(a) 142.74 112 T
(rank) 150.63 112 T
(other) 174.53 112 T
(than) 201.76 112 T
7 10 Q
(RANK_LEAF) 224.99 112 T
2 12 Q
(.) 278.04 112 T
(Note) 283.61 112 T
(that) 309.5 112 T
(while) 330.07 112 T
(some) 359.31 112 T
(code) 387.21 112 T
(holds) 412.44 112 T
(a) 441.01 112 T
7 10 Q
(RANK_LEAF) 448.91 112 T
2 12 Q
(,) 501.95 112 T
(it) 507.52 112 T
(may) 516.77 112 T
(not acquire an) 72 98 T
(y other locks \050) 139.8 98 T
7 10 Q
(getLocksThenGC\050\051) 208.79 98 T
2 12 Q
( is the only e) 304.79 98 T
(xception to this\051. No tw) 365.94 98 T
(o GC locks) 479.48 98 T
(in) 72 84 T
(the) 84.18 84 T
(system) 101.69 84 T
(can) 137.87 84 T
(ha) 157.38 84 T
(v) 168.46 84 T
(e) 174.28 84 T
(the) 182.46 84 T
(same) 199.97 84 T
(rank) 227.47 84 T
(\050e) 251.64 84 T
(xcept) 260.79 84 T
(for) 289.63 84 T
(leaf) 306.46 84 T
(locks\051.) 327.3 84 T
(Locks) 362.47 84 T
(that) 394.65 84 T
(are) 415.49 84 T
(re) 432.99 84 T
(gistered) 442.13 84 T
(with) 482.97 84 T
7 10 Q
(early) 507.15 84 T
FMENDPAGE
%%EndPage: "34" 40
%%Page: "35" 41
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 35) 518.89 34.17 T
7 10 Q
(TRUE) 72 712 T
2 12 Q
(are) 98.8 712 T
(released) 116.25 712 T
(once) 158.37 712 T
(all) 183.83 712 T
(threads) 198.63 712 T
(are) 236.09 712 T
(stopped;) 253.54 712 T
(locks) 297.01 712 T
(re) 325.14 712 T
(gistered) 334.29 712 T
(with) 375.08 712 T
7 10 Q
(early) 399.22 712 T
(FALSE) 432.02 712 T
2 12 Q
(are) 464.82 712 T
(held) 482.27 712 T
(for) 505.74 712 T
(the) 522.53 712 T
(duration of collection.) 72 698 T
(\322Early) 72 672 T
(release\323) 105.86 672 T
(GC) 147.05 672 T
(locks) 166.26 672 T
(are) 194.14 672 T
(acquired) 211.34 672 T
(before) 255.2 672 T
(suspending) 288.39 672 T
(threads) 344.93 672 T
(and) 382.14 672 T
(are) 402.01 672 T
(released) 419.2 672 T
(after) 461.06 672 T
(the) 485.59 672 T
(threads) 502.8 672 T
(are suspended. \322Late release\323 GC locks are acquired at the same time, b) 72 658 T
(ut are held for the dura-) 416.99 658 T
(tion of the collection. A collector needs to use an early release lock if it may try to reacquire a) 72 644 T
(non-recursi) 72 630 T
(v) 126.35 630 T
(e lock while collection is in progress, or if the collector w) 132.17 630 T
(ants to grab the lock from) 408.67 630 T
(all threads, b) 72 616 T
(ut is willing to let non-JVM threads ha) 133.42 616 T
(v) 318.84 616 T
(e access to the lock while collection is in) 324.66 616 T
(progress \050the \322malloc lock\323 is a possible e) 72 602 T
(xample\051.) 274.12 602 T
7 10 Q
(void) 72 583.33 T
10 F
(initAndRegisterMutex) 102 583.33 T
7 F
(\050sys_mutex_t *mut, const char *name, int rank\051;) 222 583.33 T
(void) 72 571.33 T
10 F
(initAndRegisterRecursiveMutex) 102 571.33 T
7 F
(\050RecursiveMutex *rmut,) 276 571.33 T
(                                   const char *name,int rank\051;) 72 559.33 T
2 12 Q
(These functions initialize and re) 72 534 T
(gister locks generically) 225.79 534 T
(. This must be done before re) 336.32 534 T
(gistering a) 476.45 534 T
(lock as a GC mute) 72 520 T
(x.) 160.48 520 T
7 10 Q
(bool_t) 72 501.33 T
10 F
(sysMutexLocked) 114 501.33 T
7 F
(\050sys_mutex_t *rm\051) 198 501.33 T
(void) 72 489.33 T
10 F
(sysMutexLock) 114 489.33 T
7 F
(  \050sys_mutex_t *rm\051) 186 489.33 T
(void) 72 477.33 T
10 F
(sysMutexUnlock) 114 477.33 T
7 F
(\050sys_mutex_t *rm\051) 198 477.33 T
2 12 Q
(Do the ob) 72 452 T
(vious things with non-recursi) 119.15 452 T
(v) 259.18 452 T
(e mute) 265 452 T
(x) 297.14 452 T
(es. Note that a) 302.96 452 T
7 10 Q
(sys_mutex_t) 374.62 452 T
2 12 Q
( is simply a Solaris) 440.62 452 T
(mute) 72 438 T
(x.) 95.82 438 T
7 10 Q
(bool_t) 72 419.33 T
10 F
(recursiveMutexLocked) 114 419.33 T
7 F
(\050RecursiveMutex *rm\051) 234 419.33 T
(void) 72 407.33 T
10 F
(recursiveMutexLock) 114 407.33 T
7 F
(  \050RecursiveMutex *rm\051) 222 407.33 T
(void) 72 395.33 T
10 F
(recursiveMutexUnlock) 114 395.33 T
7 F
(\050RecursiveMutex *rm\051) 234 395.33 T
2 12 Q
(Do the ob) 72 370 T
(vious things with recursi) 119.15 370 T
(v) 237.18 370 T
(e mute) 243 370 T
(x) 275.15 370 T
(es.) 280.97 370 T
4 F
(3.11  Miscellaneous Support) 72 341 T
7 10 Q
(bool_t) 72 317.33 T
10 F
(heapInitialized) 114 317.33 T
7 F
(\050\051) 204 317.33 T
2 12 Q
(This function returns) 72 292 T
7 10 Q
(TRUE) 175.66 292 T
2 12 Q
( if the heap has been initialized.) 199.66 292 T
5 F
([must use]) 354.96 292 T
7 10 Q
(extern volatile unsigned) 72 273.33 T
10 F
(gcMoveCount) 222 273.33 T
2 12 Q
(This counter must be incremented when the collector mo) 72 248 T
(v) 345.11 248 T
(es objects. This counter allo) 350.93 248 T
(ws other) 484.94 248 T
(code in the JVM to perform \322optimistic reads\323 of object v) 72 234 T
(alues\321the code can:) 349.66 234 T
(1.) 90 213.8 T
(Check the v) 108 213.8 T
(alue of) 165.02 213.8 T
7 10 Q
(gcMoveCount) 201.01 213.8 T
2 12 Q
(.) 267.01 213.8 T
(2.) 90 198 T
(Dereference an object pointer) 108 198 T
5 F
(while consistent) 253.27 198 T
2 F
(.) 330.28 198 T
(3.) 90 182.2 T
(Read a \336eld in the object.) 108 182.2 T
(4.) 90 166.4 T
(Compare the current v) 108 166.4 T
(alue) 215.34 166.4 T
7 10 Q
(gcMoveCount) 238.33 166.4 T
2 12 Q
( with the sa) 304.33 166.4 T
(v) 359.09 166.4 T
(ed v) 364.91 166.4 T
(alue. If) 384.94 166.4 T
7 10 Q
(gcMoveCount) 421.92 166.4 T
2 12 Q
( has) 487.92 166.4 T
(changed, then a GC could ha) 108 153.6 T
(v) 246.4 153.6 T
(e occurred between steps 2 and 3, so go back to step 1.) 252.22 153.6 T
(This is more ef) 72 129 T
(\336cient than temporarily becoming inconsistent. This idiom is used by man) 144.02 129 T
(y idem-) 500.17 129 T
(potent LLNI operations.) 72 115 T
FMENDPAGE
%%EndPage: "35" 41
%%Page: "36" 42
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 36) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
7 10 Q
0 X
(extern int) 72 713.33 T
10 F
(minPercentFreeAfterGC) 138 713.33 T
2 12 Q
(The) 72 688 T
(user) 93.5 688 T
(needs) 116.34 688 T
(some) 146.51 688 T
(w) 174.68 688 T
(ay) 183.23 688 T
(to) 197.4 688 T
(indicate) 209.58 688 T
(which) 250.41 688 T
(is) 282.58 688 T
(more) 293.43 688 T
(important) 320.93 688 T
(in) 370.44 688 T
(the) 382.62 688 T
(current) 400.13 688 T
(en) 436.96 688 T
(vironment,) 447.81 688 T
(time) 502.98 688 T
(or) 527.16 688 T
(space. No doubt this will e) 72 674 T
(v) 199.69 674 T
(olv) 205.45 674 T
(e, b) 220.61 674 T
(ut here is what we will pro) 237.7 674 T
(vide for no) 365.5 674 T
(w) 417.85 674 T
(. The heap is e) 425.74 674 T
(xpanded) 495.2 674 T
(if a \050full\051 collection results in less than this fraction free. The def) 72 660 T
(ault v) 382.15 660 T
(alue is 40.) 408.85 660 T
7 10 Q
(extern bool_t) 72 641.33 T
10 F
(workStoppedConsistently) 156 641.33 T
2 12 Q
(This v) 72 616 T
(ariable is used to indicate that a thread has forced the VM to suspend all threads at consis-) 102.04 616 T
(tent points \050so the system is consistent\051.) 72 602 T
7 10 Q
(extern int) 72 583.33 T
10 F
(verbosegc) 138 583.33 T
2 12 Q
(When > 0, collector may print diagnostics to) 72 558 T
7 10 Q
(stderr) 289.08 558 T
2 12 Q
(. Lar) 324.42 558 T
(ger v) 346.86 558 T
(alues allo) 370.88 558 T
(w more v) 416.24 558 T
(erbose output.) 461.39 558 T
(Set to the number of times the \337ag) 72 544 T
7 10 Q
(-verbosegc) 240.66 544 T
2 12 Q
( appears in the command line.) 300.66 544 T
4 F
(3.12  Deb) 72 515 T
(ugging and V) 119.42 515 T
(eri\336cation) 186.91 515 T
7 10 Q
(void) 72 491.33 T
10 F
(sysAssert) 102 491.33 T
7 F
(\050int expression\051) 156 491.33 T
(void) 72 479.33 T
10 F
(sysVerify) 102 479.33 T
7 F
(\050int expression\051) 156 479.33 T
2 12 Q
(Lik) 72 454 T
(e the C library) 88.55 454 T
7 10 Q
(assert\050\051) 160.54 454 T
2 12 Q
( macro, these macros will print a diagnostic message and terminate) 208.54 454 T
(the) 72 440 T
(program) 89.4 440 T
(when) 132.79 440 T
(the) 161.52 440 T
7 10 Q
(expression) 178.92 440 T
2 12 Q
(is) 241.66 440 T
(zero.) 252.4 440 T
7 10 Q
(sysAssert\050\051) 278.79 440 T
2 12 Q
(is) 347.53 440 T
(only) 358.27 440 T
(enabled) 382.34 440 T
(when) 422.4 440 T
(the) 451.12 440 T
(system) 468.53 440 T
(is) 504.6 440 T
(com-) 515.34 440 T
(piled with the) 72 426 T
7 10 Q
(DEBUG) 141 426 T
2 12 Q
( \337ag de\336ned.) 171 426 T
7 10 Q
(sysVerify\050\051) 236.33 426 T
2 12 Q
( is al) 302.33 426 T
(w) 324.88 426 T
(ays enabled.) 333.42 426 T
7 10 Q
(extern int) 72 407.33 T
10 F
(verifyheap) 138 407.33 T
2 12 Q
(If non-zero, the memory system will call) 72 382 T
7 10 Q
(verifyHeap\050\051) 270.64 382 T
2 12 Q
( before and after GC. Set by the com-) 342.64 382 T
(mand line \337ag) 72 368 T
7 10 Q
(-verifyheap) 143.66 368 T
2 12 Q
(.) 209.66 368 T
7 10 Q
(void) 72 349.33 T
10 F
(verifyHeap) 102 349.33 T
7 F
(\050char *prefixMsg\051) 162 349.33 T
2 12 Q
(This function performs global heap v) 72 324 T
(eri\336cation. It may be slo) 250.13 324 T
(w) 366.82 324 T
(, b) 374.7 324 T
(ut is v) 386.46 324 T
(ery useful for deb) 415.62 324 T
(ugging.) 500.35 324 T
7 10 Q
(prefixMsg) 72 310 T
2 12 Q
(is) 128.74 310 T
(printed) 139.47 310 T
(out) 176.2 310 T
(as) 194.27 310 T
(part) 207.01 310 T
(of) 228.4 310 T
(a) 241.13 310 T
(message) 249.19 310 T
(to) 292.58 310 T
7 10 Q
(stderr) 304.65 310 T
2 12 Q
(indicating) 343.39 310 T
(that) 394.12 310 T
(the) 414.86 310 T
(heap) 432.26 310 T
(is) 457.65 310 T
(being) 468.39 310 T
(v) 497.79 310 T
(eri\336ed.) 503.61 310 T
(The function terminates the program if v) 72 296 T
(eri\336cation f) 267.12 296 T
(ails.) 322.66 296 T
7 10 Q
(macro int) 72 277.33 T
10 F
(DEAD_MARKER) 132 277.33 T
2 12 Q
(This macro is used to mark w) 72 252 T
(ords in free areas when in deb) 213.86 252 T
(ugging modes. Its current v) 357.58 252 T
(alue is) 488.93 252 T
(0xDEADBEEF) 72 238 T
(.) 145.7 238 T
7 10 Q
(void) 72 219.33 T
10 F
(bashWords) 102 219.33 T
7 F
(\050word32 *start, uintptr_t numWords\051) 156 219.33 T
2 12 Q
(This) 72 194 T
(function) 96 194 T
(stores) 138.67 194 T
(a) 169.33 194 T
(dead) 177.32 194 T
(mark) 202.65 194 T
(er) 227.19 194 T
(\050) 239.18 194 T
7 10 Q
(DEAD_MARKER) 243.18 194 T
2 12 Q
(\051) 309.18 194 T
(in) 315.84 194 T
(range) 327.84 194 T
(of) 357.16 194 T
(w) 369.83 194 T
(ords.) 378.37 194 T
(It) 404.7 194 T
(can) 414.7 194 T
(be) 434.02 194 T
(used) 448.02 194 T
(by) 472.68 194 T
(a) 487.35 194 T
(collector) 495.34 194 T
(in deb) 72 180 T
(ug mode to o) 101.42 180 T
(v) 164.24 180 T
(erwrite dead objects.) 170.06 180 T
7 10 Q
(bool_t) 72 161.33 T
10 F
(untouchedSinceBashed) 114 161.33 T
7 F
(\050word32 *deadChunk, uintptr_t numWords\051) 234 161.33 T
2 12 Q
(This) 72 136 T
(function) 95.89 136 T
(v) 138.43 136 T
(eri\336es) 144.25 136 T
(that) 176.13 136 T
(speci\336ed) 196.68 136 T
(w) 241.89 136 T
(ords) 250.44 136 T
(contain) 273.65 136 T
7 10 Q
(DEAD_MARKER) 311.53 136 T
2 12 Q
(.) 377.53 136 T
(A) 383.08 136 T
(collector) 394.29 136 T
(can) 438.83 136 T
(use) 458.04 136 T
(this) 476.58 136 T
(in) 496.48 136 T
(deb) 508.36 136 T
(ug) 525.45 136 T
(mode at allocations to ensure that rec) 72 122 T
(ycled memory w) 250.45 122 T
(asn't written to accidentally) 330.98 122 T
(.) 462.01 122 T
FMENDPAGE
%%EndPage: "36" 42
%%Page: "37" 43
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 37) 518.89 34.17 T
4 12 Q
(3.13  Memory Allocation Support) 72 712 T
2 F
(Underneath an) 72 687 T
(y collector are f) 142.13 687 T
(acilities to allocate chunks of memory from the operating system.) 217.64 687 T
(The) 72 673 T
(collectors) 93.21 673 T
(implementing) 142.42 673 T
(the) 211.64 673 T
(GC) 228.86 673 T
(interf) 248.08 673 T
(ace) 273.95 673 T
(may) 292.48 673 T
(mak) 315.7 673 T
(e) 336.24 673 T
(use) 344.12 673 T
(of) 362.67 673 T
(services) 375.22 673 T
(pro) 416.42 673 T
(vided) 432.23 673 T
(by) 461.45 673 T
(tw) 476 673 T
(o) 487.88 673 T
(dif) 496.43 673 T
(ferent) 509.46 673 T
(sets of routines: the MemoryArea and the sys_api routines. The \336rst set pro) 72 659 T
(vides routines for) 433.44 659 T
(mapping and unmapping areas of memory and represents an abstraction of the second. The latter) 72 645 T
(set pro) 72 631 T
(vides the lo) 104.15 631 T
(west-le) 159.18 631 T
(v) 193.54 631 T
(el services.) 199.36 631 T
4 11 Q
(3.13.1  MemoryAr) 72 604.67 T
(ea) 157.94 604.67 T
2 12 Q
(A memory area is an aligned, contiguous re) 72 579 T
(gion) 281.11 579 T
7 10 Q
([start, start + byteSize\051) 305.45 579 T
2 12 Q
( of memory) 455.45 579 T
(.) 510.66 579 T
7 10 Q
(start) 72 565 T
2 12 Q
( and) 102 565 T
7 10 Q
(byteSize) 125.33 565 T
2 12 Q
( are multiples of the OS page size. A memory area is further di) 173.33 565 T
(vided into) 474.3 565 T
(subre) 72 551 T
(gions that are \322committed\323 or \322uncommitted.) 97.81 551 T
(\323 Uncommitted re) 314.28 551 T
(gions consume fe) 400.75 551 T
(wer) 484.44 551 T
(resources \050such as sw) 72 537 T
(ap space\051 than committed re) 175.51 537 T
(gions. Here is the type of a memory area) 310.63 537 T
(\050de\336ned in) 72 523 T
7 10 Q
(gc/memarea.h) 126.66 523 T
2 12 Q
(\051:) 198.66 523 T
7 10 Q
(    typedef struct {) 72 504.33 T
(        char     *start;) 72 492.33 T
(        uintptr_t byteSize;) 72 480.33 T
(    }) 72 468.33 T
10 F
(MemoryArea) 108 468.33 T
7 F
(;) 168 468.33 T
2 12 Q
(The) 72 443 T
(main) 93.36 443 T
(idea) 120.07 443 T
(behind) 142.76 443 T
(memory) 178.13 443 T
(areas) 220.82 443 T
(is) 248.17 443 T
(to) 258.88 443 T
(abstract) 270.92 443 T
(a) 310.94 443 T
(w) 316.09 443 T
(ay) 324.63 443 T
(from) 338.66 443 T
(the) 364.69 443 T
(more) 382.06 443 T
(complicated) 409.42 443 T
(interf) 470.78 443 T
(aces) 496.65 443 T
(pro-) 520.01 443 T
(vided by operating system libraries supporting functions lik) 72 429 T
(e) 358.2 429 T
7 10 Q
(mmap\050\051) 366.53 429 T
2 12 Q
(.) 402.53 429 T
7 10 Q
(MemoryArea*) 72 410.33 T
10 F
(MemoryArea_create) 144 410.33 T
7 F
(\050uintptr_t byteSize, int align\051) 246 410.33 T
2 12 Q
(This function creates and returns a ne) 72 385 T
(w memory area with the gi) 251.65 385 T
(v) 380.33 385 T
(en) 386.15 385 T
7 10 Q
(byteSize) 400.48 385 T
2 12 Q
(. The e) 448.48 385 T
(xact size of) 481.28 385 T
(the) 72 371 T
(area) 89.3 371 T
(is) 111.91 371 T
(obtained) 122.55 371 T
(by) 166.52 371 T
(rounding) 181.15 371 T
(up) 227.12 371 T
7 10 Q
(byteSize) 241.75 371 T
2 12 Q
(to) 292.39 371 T
(be) 304.36 371 T
(a) 318.32 371 T
(multiple) 326.29 371 T
(of) 368.93 371 T
(the) 381.56 371 T
(OS) 398.86 371 T
(page) 416.83 371 T
(size.) 442.12 371 T
(The) 466.42 371 T
(entire) 487.71 371 T
(ne) 517.67 371 T
(w) 528.7 371 T
(memory area is uncommitted. On success, the function returns a non-NULL result. The area is) 72 357 T
(guaranteed to be aligned on an) 72 343 T
7 10 Q
(align) 221.96 343 T
2 12 Q
( byte boundary) 251.96 343 T
(.) 323.17 343 T
7 10 Q
(void) 72 324.33 T
10 F
(MemoryArea_destroy) 102 324.33 T
7 F
(\050MemoryArea* ma\051) 210 324.33 T
2 12 Q
(This function deallocates all the memory represented by) 72 299 T
7 10 Q
(ma) 344.62 299 T
2 12 Q
(, including) 356.62 299 T
7 10 Q
(ma) 410.95 299 T
2 12 Q
( itself.) 422.95 299 T
7 10 Q
(bool_t) 72 280.33 T
10 F
(MemoryArea_resize) 114 280.33 T
7 F
(\050MemoryArea* ma, uintptr_t newByteSize\051) 216 280.33 T
2 12 Q
(This function resizes) 72 255 T
7 10 Q
(ma) 174.98 255 T
2 12 Q
( so that at least) 186.98 255 T
7 10 Q
(newByteSize) 261.31 255 T
2 12 Q
( bytes are a) 327.31 255 T
(v) 381.38 255 T
(ailable. Let \322alignedNe) 387.08 255 T
(wByte-) 498.42 255 T
(Size\323 be the smallest multiple of the OS page size at least as lar) 72 241 T
(ge as) 376.74 241 T
7 10 Q
(newByteSize) 404.06 241 T
2 12 Q
(. If the opera-) 470.06 241 T
(tion) 72 227 T
(completes) 93.34 227 T
(successfully) 144.66 227 T
(,) 202.54 227 T
(it) 208.21 227 T
(returns) 217.54 227 T
7 10 Q
(TRUE) 253.53 227 T
2 12 Q
(and) 280.2 227 T
(sets) 300.2 227 T
(the) 320.86 227 T
(e) 338.19 227 T
(xtent) 343.34 227 T
(of) 370.01 227 T
7 10 Q
(ma) 382.67 227 T
2 12 Q
(to) 397.33 227 T
7 10 Q
([ma->start,) 409.33 227 T
(ma->start) 480.67 227 T
(+) 72 213 T
(alignedNewByteSize\051) 82.96 213 T
2 12 Q
(.) 196.96 213 T
(There) 202.43 213 T
(are) 232.9 213 T
(three) 250.03 213 T
(cases,) 276.49 213 T
(depending) 307.29 213 T
(on) 359.76 213 T
(whether) 374.24 213 T
(\322alignedNe) 415.37 213 T
(wByteSize\323) 469.72 213 T
(is) 529.52 213 T
(smaller) 72 199 T
(, equal, or greater than the current) 106.85 199 T
7 10 Q
(ma->byteSize) 272.46 199 T
2 12 Q
(.) 344.46 199 T
10 F
(\245) 90 179 T
2 F
(If it is equal, the call returns) 108 179 T
7 10 Q
(TRUE) 245.98 179 T
2 12 Q
( and tak) 269.98 179 T
(es no action.) 307.85 179 T
10 F
(\245) 90 162 T
2 F
(If the ne) 108 162 T
(w size is smaller) 147.68 162 T
(, releases resources associated with freed memory) 226.86 162 T
(, and returns) 465.67 162 T
7 10 Q
(TRUE) 108 148 T
2 12 Q
(. The committed/uncommitted re) 132 148 T
(gions remaining within the e) 289.81 148 T
(xtent of) 426.96 148 T
7 10 Q
(ma) 466.96 148 T
2 12 Q
( are other-) 478.96 148 T
(wise unaf) 108 134 T
(fected.) 154.02 134 T
10 F
(\245) 90 117 T
2 F
(If the requested size is greater than the ne) 108 117 T
(w size, successfully added memory forms an) 306.97 117 T
(uncommitted re) 108 103 T
(gion. The pre) 183.48 103 T
(viously committed/uncommitted re) 247.5 103 T
(gions are otherwise unaf-) 415.99 103 T
(fected.) 108 89 T
FMENDPAGE
%%EndPage: "37" 43
%%Page: "38" 44
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 38) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
2 12 Q
0 X
(If) 72 712 T
(it) 82.91 712 T
(impossible) 92.5 712 T
(to) 147.42 712 T
(gro) 159.67 712 T
(w) 175.37 712 T
(the) 186.95 712 T
(memory) 204.52 712 T
(area) 247.43 712 T
(\050e.g.,) 270.33 712 T
(because) 297.57 712 T
(the) 338.46 712 T
(memory) 356.05 712 T
(at) 398.96 712 T
(the) 410.54 712 T
(high) 428.11 712 T
(end) 452.37 712 T
(of) 472.61 712 T
(the) 485.52 712 T
(current) 503.1 712 T
(re) 72 698 T
(gion is una) 81.14 698 T
(v) 133.57 698 T
(ailable\051, returns) 139.27 698 T
7 10 Q
(FALSE) 217.58 698 T
2 12 Q
(.) 247.58 698 T
7 10 Q
(bool_t) 72 679.33 T
10 F
(MemoryArea_commitRegion) 114 679.33 T
7 F
(\050MemoryArea* ma, char *start,) 252 679.33 T
(                               uintptr_t byteSize\051) 72 667.33 T
2 12 Q
(This) 72 642 T
(function) 95.91 642 T
(requires) 138.49 642 T
(that) 179.72 642 T
(the) 200.29 642 T
7 10 Q
(start) 217.54 642 T
2 12 Q
(and) 250.11 642 T
7 10 Q
(byteSize) 270.02 642 T
2 12 Q
(are) 320.6 642 T
(multiples) 337.82 642 T
(of) 385.08 642 T
(the) 397.65 642 T
(OS) 414.89 642 T
(page) 432.8 642 T
(size,) 458.04 642 T
(and) 482.28 642 T
(that) 502.18 642 T
(the) 522.76 642 T
(re) 72 628 T
(gion) 81.14 628 T
7 10 Q
([start, start+byteSize\051) 105.48 628 T
2 12 Q
( is a subre) 243.48 628 T
(gion of) 291.62 628 T
7 10 Q
(ma) 328.96 628 T
2 12 Q
(. It returns) 340.96 628 T
7 10 Q
(TRUE) 393.61 628 T
2 12 Q
( if it can successfully) 417.61 628 T
(ensure that the subre) 72 614 T
(gion is committed. Otherwise, it returns) 170.8 614 T
7 10 Q
(FALSE) 364.79 614 T
2 12 Q
(. Committed memory is mem-) 394.79 614 T
(ory that has been allocated sw) 72 600 T
(ap space.) 216.18 600 T
7 10 Q
(void) 72 581.33 T
10 F
(MemoryArea_decommitRegion) 102 581.33 T
7 F
(\050MemoryArea* ma, char *start,) 252 581.33 T
(                              uintptr_t byteSize\051) 72 569.33 T
2 12 Q
(This function requires that the start and byteSize are multiples of the OS page size, and that the) 72 544 T
(re) 72 530 T
(gion [start, start+byteSizee\051 is a subre) 81.14 530 T
(gion of ma. It attempts to decommit the subre) 262.37 530 T
(gion. On) 481.18 530 T
(some systems, this may ha) 72 516 T
(v) 199.43 516 T
(e no ef) 205.25 516 T
(fect.) 237.6 516 T
7 10 Q
(char *) 72 497.33 T
10 F
(MemoryArea_limit) 108 497.33 T
7 F
(\050MemoryArea *ma\051) 204 497.33 T
2 12 Q
(This) 72 472 T
(function) 96.12 472 T
(returns) 138.91 472 T
(the) 175.02 472 T
7 10 Q
(char) 192.48 472 T
(*) 222.05 472 T
2 12 Q
(one) 230.84 472 T
(past) 250.96 472 T
(the) 273.08 472 T
(end) 290.54 472 T
(of) 310.65 472 T
(the) 323.44 472 T
(re) 340.89 472 T
(gion) 350.04 472 T
(controlled) 374.16 472 T
(by) 425.61 472 T
7 10 Q
(ma) 440.4 472 T
2 12 Q
(.) 452.4 472 T
(This) 458.19 472 T
(address) 482.31 472 T
(is) 521.09 472 T
(a) 531.88 472 T
(multiple of the OS page size.) 72 458 T
4 11 Q
(3.13.2  sys_api) 72 431.67 T
2 12 Q
(This is the layer that de\336nes the lo) 72 406 T
(west-le) 236.69 406 T
(v) 271.04 406 T
(el memory-related functions. There are functions for) 276.86 406 T
(byte-le) 72 392 T
(v) 105.02 392 T
(el allocation and page-le) 110.84 392 T
(v) 228.18 392 T
(el allocation.) 234 392 T
7 10 Q
(void*) 72 373.33 T
10 F
(sysMalloc) 108 373.33 T
7 F
(\050size_t size\051) 162 373.33 T
(void*) 72 361.33 T
10 F
(sysCalloc) 108 361.33 T
7 F
(\050size_t nelem, size_t elsize\051) 162 361.33 T
(void*) 72 349.33 T
10 F
(sysRealloc) 108 349.33 T
7 F
(\050void *ptr, size_t size\051) 168 349.33 T
(void) 72 337.33 T
10 F
(sysFree) 108 337.33 T
7 F
(\050void *ptr\051) 150 337.33 T
2 12 Q
(These functions are equi) 72 312 T
(v) 189.34 312 T
(alent to the standard C storage allocation functions, b) 195.04 312 T
(ut could be imple-) 450.43 312 T
(mented dif) 72 298 T
(ferently) 123.36 298 T
(.) 159.9 298 T
7 10 Q
(extern size_t) 72 279.33 T
10 F
(sysPageSize) 156 279.33 T
2 12 Q
(This v) 72 254 T
(ariable contains the size of an OS page.) 102.04 254 T
7 10 Q
(void *) 72 235.33 T
10 F
(sysMapMem) 120 235.33 T
7 F
(\050size_t requestedSize\051) 174 235.33 T
2 12 Q
(This) 72 210 T
(function) 95.91 210 T
(attempts) 138.49 210 T
(to) 181.74 210 T
(allocate) 193.65 210 T
(a) 233.55 210 T
(re) 241.46 210 T
(gion) 250.6 210 T
(of) 274.51 210 T
(address) 287.09 210 T
(space) 325.65 210 T
(of) 354.89 210 T
(size) 367.46 210 T
(at) 388.7 210 T
(least) 399.94 210 T
7 10 Q
(requestedSize) 424.52 210 T
2 12 Q
(,) 502.52 210 T
(which) 508.09 210 T
(must be a multiple of the OS page size. The allocated memory is uncommitted; that is, it has no) 72 196 T
(backing sw) 72 182 T
(ap space. If successful, returns address of mapped re) 126.2 182 T
(gion, else returns 0.) 377.94 182 T
7 10 Q
(int) 72 163.33 T
10 F
(sysUnmapMem) 120 163.33 T
7 F
(\050void * requestedAddr, size_t requestedSize\051) 186 163.33 T
2 12 Q
(This function attempts to deallocate \050unmap\051 the block of memory starting at) 72 138 T
7 10 Q
(requestedAddr) 444.62 138 T
2 12 Q
(whose size is) 72 124 T
7 10 Q
(requestedSize) 138.32 124 T
2 12 Q
(. If successful, returns 0, else returns -1.) 216.32 124 T
FMENDPAGE
%%EndPage: "38" 44
%%Page: "39" 45
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 39) 518.89 34.17 T
7 10 Q
(void *) 72 713.33 T
10 F
(sysCommitMem) 120 713.33 T
7 F
(\050void * requestedAddr, size_t requestedSize\051) 192 713.33 T
2 12 Q
(This function attempts to commit \050allocate sw) 72 688 T
(ap space for\051 a re) 292.54 688 T
(gion of memory starting at) 374.98 688 T
7 10 Q
(requestedAddr) 72 674 T
2 12 Q
(of) 152.73 674 T
(size) 165.45 674 T
(at) 186.84 674 T
(least) 198.23 674 T
7 10 Q
(requestedSize) 222.95 674 T
2 12 Q
(,) 300.95 674 T
(both) 306.68 674 T
(of) 330.74 674 T
(which) 343.47 674 T
(must) 375.52 674 T
(be) 401.59 674 T
(a) 415.65 674 T
(multiple) 423.7 674 T
(of) 466.44 674 T
(the) 479.16 674 T
(OS) 496.55 674 T
(page) 514.62 674 T
(size. If successful, returns) 72 660 T
7 10 Q
(requestedAddr) 199.3 660 T
2 12 Q
(, else returns 0.) 276.82 660 T
7 10 Q
(int) 72 641.33 T
10 F
(sysUncommitMem) 120 641.33 T
7 F
(\050void * requestedAddr, size_t requestedSize\051) 204 641.33 T
2 12 Q
(This function attempts to uncommit \050deallocate sw) 72 616 T
(ap space for\051 a re) 315.86 616 T
(gion of memory starting at) 398.3 616 T
7 10 Q
(requestedAddr) 72 602 T
2 12 Q
( whose size is) 150 602 T
7 10 Q
(requestedSize) 219.32 602 T
2 12 Q
(, both of which must be a multiple of the OS page) 297.32 602 T
(size. If successful, returns 0, else returns -1.) 72 588 T
FMENDPAGE
%%EndPage: "39" 45
%%Page: "40" 46
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 40) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
FMENDPAGE
%%EndPage: "40" 46
%%Page: "41" 47
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 41) 518.89 34.17 T
4 14 Q
(4.  Open Issues and Futur) 193.66 710.67 T
(e Dir) 347.44 710.67 T
(ections) 377.12 710.67 T
2 12 Q
(As described in the Introduction, the memory system interf) 72 682 T
(ace will change \050due in part to reader) 355.51 682 T
(feedback\051. Here is a list of kno) 72 668 T
(wn problems and future enhancements.) 219.32 668 T
10 F
(\245) 90 634 T
2 F
(Currently) 108 634 T
(, the JIT compiler has direct kno) 153.22 634 T
(wledge of the write barriers that it must gener-) 308.56 634 T
(ate. In f) 108 620 T
(act, it doesn't support read barriers yet. Each collector has to implement a barrier) 144.86 620 T
(-) 531.7 620 T
(generating function using undocumented routines in the JIT compiler) 108 606 T
(. There is a need to) 439.97 606 T
(design and document a more \337e) 108 592 T
(xible system.) 260.8 592 T
10 F
(\245) 90 561 T
2 F
(W) 108 561 T
(e) 118.37 561 T
(ha) 126.36 561 T
(v) 137.45 561 T
(e) 143.27 561 T
(implemented) 151.26 561 T
(only) 216.59 561 T
(one) 240.59 561 T
(concurrent) 260.58 561 T
(collector\321a) 314.56 561 T
(\322Bak) 376.54 561 T
(er) 401.08 561 T
(-style\323) 410.16 561 T
(concurrent) 444.82 561 T
(cop) 498.79 561 T
(ying) 516 561 T
(collector) 108 547 T
(. The GC interf) 149.33 547 T
(ace may or may not accommodate other concurrent collectors. In) 222.53 547 T
(addition, we ha) 108 533 T
(v) 181.42 533 T
(en't yet implemented support for weak references in our concurrent col-) 187.24 533 T
(lector) 108 519 T
(. W) 134.66 519 T
(e need to design a \337e) 151.03 519 T
(xible, concurrent system for dealing with weak references.) 251.83 519 T
10 F
(\245) 90 488 T
2 F
(W) 108 488 T
(e w) 118.37 488 T
(ould lik) 135.24 488 T
(e to add support for parallel GC\321se) 172.13 488 T
(v) 346.46 488 T
(eral processors w) 352.28 488 T
(orking on GC at the) 435.47 488 T
(same time.) 108 474 T
10 F
(\245) 90 443 T
2 F
(W) 108 443 T
(e) 118.37 443 T
(may) 126.38 443 T
(add) 149.73 443 T
(generational) 169.74 443 T
(support) 231.75 443 T
(to) 270.43 443 T
(the) 282.45 443 T
(\322abstract) 299.8 443 T
(collector\323) 345.14 443 T
(interf) 395.14 443 T
(ace.) 421.01 443 T
(W) 442.68 443 T
(e) 453.05 443 T
(currently) 461.06 443 T
(ha) 507.07 443 T
(v) 518.15 443 T
(e) 523.97 443 T
(a) 531.99 443 T
(\337e) 108 429 T
(xible generational frame) 119.82 429 T
(w) 236.82 429 T
(ork that is b) 245.36 429 T
(uilt on top of the \322abstract collector\323 interf) 302.12 429 T
(ace.) 506.96 429 T
(W) 108 415 T
(e w) 118.37 415 T
(ould lik) 135.24 415 T
(e to be able to handle \322multi-area\323 allocation and collection for cases lik) 172.13 415 T
(e) 519.26 415 T
(heaps-by-size \050lar) 108 401 T
(ge object areas\051, heaps-by-type, as well as heaps-by-age \050generational) 193.42 401 T
(collection\051. F) 108 387 T
(or our o) 171.82 387 T
(wn internal use, we should also document the e) 209.51 387 T
(xisting generational) 436.3 387 T
(frame) 108 373 T
(w) 135.68 373 T
(ork.) 144.23 373 T
10 F
(\245) 90 342 T
2 F
(W) 108 342 T
(e ha) 118.37 342 T
(v) 137.78 342 T
(e recently been e) 143.6 342 T
(xperimenting with using compare-and-sw) 224.39 342 T
(ap in place \050or in addi-) 424.57 342 T
(tion) 108 328 T
(to\051) 129.56 328 T
(LABs) 145.77 328 T
(in) 177.33 328 T
(the) 189.55 328 T
(youngest) 207.1 328 T
(generation.) 253.32 328 T
(This) 309.85 328 T
(choice) 334.07 328 T
(also) 368.28 328 T
(af) 390.5 328 T
(fects) 399.52 328 T
(whether) 425.06 328 T
(we) 466.6 328 T
(use) 483.48 328 T
(the) 502.36 328 T
(f) 519.91 328 T
(ast) 523.78 328 T
(allocator) 108 314 T
(. W) 149.33 314 T
(e should document these choices and their consequences.) 165.7 314 T
10 F
(\245) 90 283 T
2 F
(64-bit) 108 283 T
(support) 139.39 283 T
(has) 178.11 283 T
(not) 196.83 283 T
(been) 214.89 283 T
(fully) 240.27 283 T
(implemented.) 265.66 283 T
(In) 334.05 283 T
(this) 346.77 283 T
(document,) 366.83 283 T
(a) 419.88 283 T
(\322w) 427.93 283 T
(ord\323) 441.81 283 T
(can) 465.85 283 T
(be) 485.23 283 T
(counted) 499.28 283 T
(on to be 32 bits on a 32-bit system. It is not clear what it means on 64-bit system.) 108 269 T
FMENDPAGE
%%EndPage: "41" 47
%%Page: "42" 48
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 42) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
FMENDPAGE
%%EndPage: "42" 48
%%Page: "43" 49
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 43) 518.89 34.17 T
4 14 Q
(5.  Mor) 199.54 710.67 T
(e Inf) 243.22 710.67 T
(ormation and F) 270.48 710.67 T
(eedback) 363.46 710.67 T
4 12 Q
(5.1  Refer) 72 682 T
(ences and Further Reading) 121.43 682 T
2 F
(1.) 72 659.8 T
(Gosling, J., Jo) 85.75 659.8 T
(y) 153.96 659.8 T
(, B., Steel, G.,) 159.18 659.8 T
5 F
(The J) 229.85 659.8 T
(ava) 255.76 659.8 T
5 9.6 Q
(TM) 273.09 664.6 T
5 12 Q
( Langua) 286.42 659.8 T
(g) 325.98 659.8 T
(e Speci\336cation) 331.86 659.8 T
2 F
(. Addison-W) 402.17 659.8 T
(esle) 463.21 659.8 T
(y) 481.69 659.8 T
(, 1996.) 486.91 659.8 T
7 10 Q
(http://java.sun.com/docs/books/jls/) 85.75 647.13 T
2 12 Q
(2.) 72 627.8 T
5 F
(J) 85.75 627.8 T
(ava Native Interface Speci\336cation) 90.65 627.8 T
2 F
(. Sun Microsystems, 1997.) 253.62 627.8 T
7 10 Q
(http://java.sun.com/products/jdk/1.2/docs/guide/jni/) 85.75 615.13 T
2 12 Q
(3.) 72 592.6 T
5 F
(J) 85.75 592.6 T
(ava) 90.65 592.6 T
5 9.6 Q
(TM) 107.98 597.4 T
5 12 Q
( Platform 1.2 API Speci\336cation) 121.32 592.6 T
2 F
(. Sun Microsystems, 1998.) 271.64 592.6 T
7 10 Q
(http://java.sun.com/products/jdk/1.2/docs/api/) 85.75 579.93 T
2 12 Q
(4.) 72 560.6 T
(Jones, R., Lins, R.,) 85.75 560.6 T
5 F
(Garba) 179.75 560.6 T
(g) 210.96 560.6 T
(e Collection: Algorithms for A) 216.85 560.6 T
(utomatic Dynamic Memory Mana) 362.61 560.6 T
(g) 524.79 560.6 T
(e-) 530.67 560.6 T
(ment) 85.75 546.6 T
2 F
(. W) 109.07 546.6 T
(ile) 125.92 546.6 T
(y) 137.74 546.6 T
(, 1996.) 142.96 546.6 T
(5.) 72 523.4 T
(Lindholm, T) 85.75 523.4 T
(., Y) 145.53 523.4 T
(ellin, F) 161.99 523.4 T
(.,) 195.04 523.4 T
5 F
( The J) 201.04 523.4 T
(ava) 229.95 523.4 T
5 9.6 Q
(TM) 247.28 528.2 T
5 12 Q
( V) 260.61 523.4 T
(irtual Mac) 270.05 523.4 T
(hine Speci\336cation) 320.88 523.4 T
2 F
(. Addison-W) 406.53 523.4 T
(esle) 467.56 523.4 T
(y) 486.04 523.4 T
(, 1996.) 491.26 523.4 T
7 10 Q
(http://java.sun.com/docs/books/vmspec/) 85.75 510.73 T
2 12 Q
(6.) 72 491.4 T
(P) 85.75 491.4 T
(a) 92.24 491.4 T
(wlan, M.,) 97.39 491.4 T
5 F
(Refer) 146.38 491.4 T
(ence Objects and Garba) 171.93 491.4 T
(g) 288.78 491.4 T
(e Collection) 294.66 491.4 T
2 F
(. Ja) 353 491.4 T
(v) 368.75 491.4 T
(a De) 374.45 491.4 T
(v) 396.47 491.4 T
(eloper Connection technical) 402.29 491.4 T
(article, Sun Microsystems, 1998.) 85.75 477.4 T
7 10 Q
(http://developer.java.sun.com/developer/technicalArticles/) 85.75 464.73 T
2 12 Q
(7.) 72 445.4 T
(W) 85.75 445.4 T
(ilson,) 96.59 445.4 T
(P) 125.73 445.4 T
(.,) 131.07 445.4 T
5 F
(Unipr) 139.87 445.4 T
(ocessor) 167.99 445.4 T
(garba) 207.45 445.4 T
(g) 236 445.4 T
(e) 241.88 445.4 T
(collection) 250 445.4 T
(tec) 300.13 445.4 T
(hniques.) 313.94 445.4 T
2 F
(T) 357.07 445.4 T
(echnical) 363.56 445.4 T
(report,) 406.34 445.4 T
(Uni) 440.79 445.4 T
(v) 458.49 445.4 T
(ersity) 464.31 445.4 T
(of) 493.77 445.4 T
(T) 506.57 445.4 T
(e) 513.06 445.4 T
(xas,) 518.21 445.4 T
(January 1994. Expanded v) 85.75 431.4 T
(ersion of the IWMM92 paper) 212.87 431.4 T
(.) 353.51 431.4 T
7 10 Q
(ftp://ftp.cs.utexas.edu/pub/garbage/bigsurv.ps) 85.75 417.4 T
2 12 Q
(.) 361.74 417.4 T
(8.) 72 397.4 T
(Jones, R.,) 85.75 397.4 T
5 F
(Ric) 135.41 397.4 T
(har) 151.23 397.4 T
(d J) 167.45 397.4 T
(ones' Garba) 181.48 397.4 T
(g) 240.26 397.4 T
(e Collection P) 246.14 397.4 T
(a) 313.84 397.4 T
(g) 319.72 397.4 T
(e) 325.6 397.4 T
2 F
(.) 330.93 397.4 T
7 10 Q
(http://stork.ukc.ac.uk/computer_science/Html/Jones/gc.html) 85.75 383.4 T
2 12 Q
(.) 433.74 383.4 T
(9.) 72 363.4 T
(Chase, D.,) 85.75 363.4 T
5 F
(GC F) 138.74 363.4 T
(A) 164.36 363.4 T
(Q) 171.21 363.4 T
2 F
(.) 179.87 363.4 T
7 10 Q
(http://www.iecc.com/gclist/GC-faq.html) 85.75 350.73 T
2 12 Q
(Finally) 72 325.4 T
(, this document \050) 105.23 325.4 T
5 F
(The GC Interface in the EVM) 185.89 325.4 T
2 F
(\051 will be online) 327.54 325.4 T
7 10 Q
(http://www.sunlabs.com/technical-reports) 72 311.4 T
2 12 Q
(.) 312 311.4 T
4 F
(5.2  Cr) 72 282.4 T
(edits) 106.78 282.4 T
2 F
(The design of the memory system interf) 72 257.4 T
(ace is a product of the Ja) 263.86 257.4 T
(v) 382.25 257.4 T
(a T) 387.95 257.4 T
(opics Group at Sun Micro-) 402.65 257.4 T
(systems) 72 243.4 T
(Laboratories) 112.83 243.4 T
(at) 176.31 243.4 T
(Burlington,) 187.8 243.4 T
(MA,) 245.64 243.4 T
(which) 270.8 243.4 T
(includes) 302.95 243.4 T
(Ole) 345.78 243.4 T
(Agesen,) 365.93 243.4 T
(Cork) 407.75 243.4 T
(y) 431.57 243.4 T
(Cartwright) 440.4 243.4 T
(\050V) 495.22 243.4 T
(isiting) 507.16 243.4 T
(Professor\051,) 72 229.4 T
(Da) 127.23 229.4 T
(v) 140.98 229.4 T
(e) 146.8 229.4 T
(Detlefs,) 155.04 229.4 T
(Christine) 195.6 229.4 T
(Flood,) 242.51 229.4 T
(Ale) 276.43 229.4 T
(x) 293.58 229.4 T
(Garthw) 302.48 229.4 T
(aite,) 338.35 229.4 T
(Ste) 361.59 229.4 T
(v) 376.62 229.4 T
(e) 382.44 229.4 T
(Heller) 390.68 229.4 T
(,) 420.19 229.4 T
(T) 426.1 229.4 T
(on) 432.47 229.4 T
(y) 444.29 229.4 T
(Printezis) 453.2 229.4 T
(\050intern\051,) 498.1 229.4 T
(Guy Steele, and Derek White.) 72 215.4 T
(Thanks to the Ja) 72 189.4 T
(v) 150.08 189.4 T
(a T) 155.78 189.4 T
(opics Group, Glenn Skinner) 170.48 189.4 T
(, Mario W) 304.66 189.4 T
(olczk) 353.35 189.4 T
(o, Bernd Mathisk) 379.22 189.4 T
(e, and Eliot) 462.77 189.4 T
(Moss for re) 72 175.4 T
(vie) 127.02 175.4 T
(wing this document.) 141.38 175.4 T
4 F
(5.3  F) 72 146.4 T
(eedback) 100.03 146.4 T
2 F
(Comments on the memory system design should be sent to) 72 121.4 T
7 10 Q
(java-topics@east.sun.com) 357.34 121.4 T
2 12 Q
(.) 501.34 121.4 T
(Comments on this document can be sent to) 72 107.4 T
7 10 Q
(derek.white@east.sun.com) 281.33 107.4 T
2 12 Q
(.) 425.33 107.4 T
FMENDPAGE
%%EndPage: "43" 49
%%Page: "44" 50
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
72 28.2 540 39.5 R
7 X
V
2 8 Q
0 X
(P) 72 34.17 T
(age 44) 76.33 34.17 T
72 740.81 540 756 R
7 X
V
72 63 540 720 R
V
FMENDPAGE
%%EndPage: "44" 50
%%Page: "45" 51
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
2 8 Q
0 X
(P) 514.57 34.17 T
(age 45) 518.89 34.17 T
4 14 Q
(6.  About the A) 241.6 710.67 T
(uthors) 331.51 710.67 T
4 12 Q
(Der) 72 682 T
(ek) 91.1 682 T
(White) 105.71 682 T
2 F
(is) 139.65 682 T
(a) 150.26 682 T
(Staf) 158.2 682 T
(f) 177.23 682 T
(Engineer) 183.83 682 T
(at) 229.76 682 T
(Sun) 241.03 682 T
(Microsystems) 262.31 682 T
(Laboratories) 332.25 682 T
(in) 395.51 682 T
(Burlington,) 407.45 682 T
(Massachusetts.) 465.07 682 T
(He is a member of the Ja) 72 668 T
(v) 191.06 668 T
(a T) 196.76 668 T
(opics Group, which has de) 211.46 668 T
(v) 338.81 668 T
(eloped a JVM as an infrastructure for) 344.63 668 T
(de) 72 654 T
(v) 83.03 654 T
(eloping soft real time and scalable g) 88.85 654 T
(arbage collection for the Ja) 262.09 654 T
(v) 391.81 654 T
(a language. The group has) 397.51 654 T
(also) 72 640 T
(studied) 93.89 640 T
(and) 131.11 640 T
(optimized) 150.99 640 T
(JVM) 201.55 640 T
(performance) 228.1 640 T
(as) 291.3 640 T
(a) 303.85 640 T
(whole.) 311.73 640 T
(Other) 346.61 640 T
(interests) 376.49 640 T
(include) 419.04 640 T
(performance) 456.92 640 T
(and) 520.12 640 T
(heap analysis tools, and incremental de) 72 626 T
(v) 259.67 626 T
(elopment en) 265.49 626 T
(vironments. Prior to joining Sun, Derek) 324 626 T
(w) 72 612 T
(ork) 80.54 612 T
(ed for eight years at Apple Computer) 96.42 612 T
(, Inc., where he w) 274.57 612 T
(as responsible for the Object P) 360.08 612 T
(ascal) 506.88 612 T
(compiler) 72 598 T
(, represented Apple on the ANSI P) 114.18 598 T
(ascal committee, and w) 280.97 598 T
(ork) 393.49 598 T
(ed on the Dylan program-) 409.37 598 T
(ming language runtime and de) 72 584 T
(v) 217.68 584 T
(elopment en) 223.5 584 T
(vironment.) 282.01 584 T
4 F
(Alex Garthwaite) 72 558 T
2 F
( recently joined Sun Microsystems Laboratories in Burlington, Massachusetts,) 156.98 558 T
(where) 72 544 T
(he) 103.84 544 T
(w) 117.7 544 T
(orks) 126.24 544 T
(with) 149.43 544 T
(the) 173.3 544 T
(Ja) 190.49 544 T
(v) 200.25 544 T
(a) 205.95 544 T
(T) 213.8 544 T
(opics) 220.17 544 T
(Group.) 248.03 544 T
(His) 284.22 544 T
(research) 303.42 544 T
(interests) 345.92 544 T
(include) 388.44 544 T
(programming) 426.3 544 T
(language) 494.15 544 T
(implementation) 72 530 T
(and) 149.81 530 T
(runtime) 169.61 530 T
(system) 209.41 530 T
(design,) 245.21 530 T
(automatic) 282.02 530 T
(memory) 331.82 530 T
(management,) 374.28 530 T
(and) 441.07 530 T
(synchronization) 460.87 530 T
(techniques.) 72 516 T
(Ale) 72 490 T
(x) 89.15 490 T
(is) 97.74 490 T
(also) 108.34 490 T
(a) 130.27 490 T
(graduate) 138.19 490 T
(student) 182.1 490 T
(at) 219.37 490 T
(the) 230.63 490 T
(Uni) 247.89 490 T
(v) 265.59 490 T
(ersity) 271.41 490 T
(of) 300.67 490 T
(Pennsylv) 313.26 490 T
(ania) 356.96 490 T
(w) 379.55 490 T
(orking) 388.09 490 T
(with) 422.02 490 T
(Scott) 445.95 490 T
(Nettles.) 473.22 490 T
(He) 512.81 490 T
(is) 529.4 490 T
(currently) 72 476 T
(w) 118.02 476 T
(orking) 126.57 476 T
(on) 160.6 476 T
(a) 175.3 476 T
(proposal) 183.33 476 T
(for) 227.36 476 T
(his) 244.06 476 T
(doctoral) 260.77 476 T
(thesis) 302.79 476 T
(which) 332.83 476 T
(in) 364.86 476 T
(v) 373.72 476 T
(estig) 379.54 476 T
(ates) 402.14 476 T
(ho) 423.51 476 T
(w) 435.21 476 T
(runtime) 446.57 476 T
(services) 486.61 476 T
(in) 527.96 476 T
(a Ja) 72 462 T
(v) 90.08 462 T
(a VM may be safely implemented in Ja) 95.78 462 T
(v) 283.85 462 T
(a.) 289.55 462 T
FMENDPAGE
%%EndPage: "45" 51
%%Trailer
FMENDDOCUMENT
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 51
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
%%+ Times-Roman
%%+ Helvetica-Oblique
%%+ Times-Bold
%%+ Times-Italic
%%+ Palatino-Roman
%%+ Courier
%%+ Courier-Oblique
%%+ ZapfDingbats
%%+ Courier-Bold
%%DocumentNeedsFonts: Helvetica-Bold
%%+ Helvetica
%%+ Times-Roman
%%+ Helvetica-Oblique
%%+ Times-Bold
%%+ Times-Italic
%%+ Palatino-Roman
%%+ Courier
%%+ Courier-Oblique
%%+ ZapfDingbats
%%+ Courier-Bold
%%DocumentSuppliedFonts:
%%EOF
