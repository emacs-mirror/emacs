%!PS-Adobe-2.0
%%Creator: dvips 5.516 Copyright 1986, 1993 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Wed Jun 12 11:56:05 1996
%%Pages: 54
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -D600 -Z main.dvi -o main.ps
%DVIPSSource:  TeX output 1996.06.12:1156
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600
(/u/ng/Research/Techreport/main.dvi) @start /Fa 33 122
df<1538157815F0EC03E0EC07C0EC0F80EC1F00143E5C5CA2495A495A13075C495A131F
91C7FC5B137EA25BA2485AA2485AA3485AA2485AA3121F5BA348C8FCA45A127EA512FE5A
AB5AA37EA5127CA4127E123EA37EA36C7EA212077F12037F6C7E120013787FA2131C1D5A
75C323>40 D<EB01C0806D7E1478147C80141E141F801580140715C0A2EC03E0A3EC01F0
A315F8A21400A415FCAF140115F8A5140315F0A4140715E0A3140F15C0A3EC1F80A21500
5CA2147EA2147C14FC5C13015C13035C495A130F5C49C7FC5B133E5B5B485A5B1203485A
48C8FC121E5A12F85A1E5A7FC323>I<EA0780EA0FE0EA1FF0123FA5121FEA0F701200A2
13F013E0A2120113C0120313801207EA0F00120E121E5A5A5A5A5A0C1C7A8919>44
D<121EEA3F80EA7FC012FFA41380EA7F00123C0A0A788919>46 D<15381578EC01F81407
141F903803FFF0137FEBFFCFEBFC0F1300141F15E0A5143F15C0A5147F1580A514FF1500
A55B5CA513035CA513075CA5130F5CA3131F497EB612FCA31E3D78BC2D>49
D<13F0EA01FC1203EA07FEA313FCA2EA03F8EA01E0C7FCB3121EEA3F80EA7FC012FFA413
80EA7F00123C0F2778A619>58 D<DCFFC01338030F01F01378037F01FC13F0913A01FF80
3F01913A07FC000781DA1FE0EB03C3DA7FC0EB01E74AC812FF4948ED7FE0D907FC153F49
5A4948151F495A4948150F494816C018074890C9FC485AA2485A000F1880491603121FA2
48481607A295C7FC485AA412FF5BA75BA2181C183C1838A27F007F1778187018F0003F5F
6D150160001F16036C6C4B5A95C7FC6C6C5D6C6C151E6C6C5D6C6C15F86D6C495A6D6CEB
07C0D91FF0EB1F80D907FE01FEC8FC0101B512F86D6C13E0DA07FEC9FC3D4276BF42>67
D<013FB77E18F018FC903B007FF80007FF6E4801007FF03FE04B6E7E180785727E727E14
7F4B6E7EA2F17F80A302FF17C05DA54918E092C9FCA41AC05B4A16FFA41A8013074A5DA2
1A00A24E5A130F4A5E180761180F61011F4C5A5C4E5A4E5A4EC7FC4D5A013F4B5A4A4A5A
EF1FF0EF3FC0017FEDFF8001FFDA0FFEC8FCB812F817C04CC9FC433E7EBD45>I<011FB5
12FE5BA29039003FFC006E5AA25DA5143F5DA5147F5DA514FF5DA55B92C7FCA55B5CA513
075CA5130F5CA5131F5CA3133F497E007FB512F8A2B6FC273E7EBD21>73
D<923803FF80031F13F092B512FE913903FE01FF913A0FF0003FC0DA3FC06D7E4AC7EA07
F0D901FE6E7E49486E7E49488149486E7E494881494816804948ED3FC013FF91C9FC4848
17E00003171F5B000718F05B120FA2485A19F8123F5BA2127FA219F04848163FA5F07FE0
A449EEFFC0A219806D5D1900A24D5A127F4D5A606C6C150F4D5A001F5F6D4B5A000F4C5A
6D4BC7FC00074B5A6C6C4A5A6C6C4A5A6C6C4A5A6D6CEB3FC0D93FE0EBFF8090270FF807
FEC8FC0103B512F8010014C0DA0FFCC9FC3D4276BF47>79 D<EC7FC0903803FFF8010F13
FE90383F807F90397E003F8001FF6D7E6F7E14804813006F7E7E5B133890C7120FA25EA2
EC07FF91B5FC0107139F90383FF01FD9FF805B3801FE00EA07F8485A4848133F5B48485C
007FED81C090C7FC157FA248ED038015FF6C5BEC03BFD98007EB07003A3FC00F3F8F3A1F
E03E1FFE260FFFF85B00039038E00FF03A007F8007C02A2A7CA82D>97
D<EB3F80EA1FFFA3C6FC137FA291C9FCA55B5BA512015BA4EC03FC0003EB1FFFD9F87F13
C09039F9F80FF09039FFC003F84A6C7E49C77E485A49147F5BEE3F80A3120F5B17C0A316
7F001F16805BA4EEFF00123F5B4B5AA24B5A5E007F14074B5A6D5C4B5AD87DE0EB7F80D8
7CF001FEC7FC39F87C07FC39F03FFFF0D8E00F13C0260001FEC8FC2A4077BE33>I<EC1F
F0ECFFFE0103EBFF8090390FE00FC090393F8007E090387F000F01FEEB1FF0485A4848EB
3FE0120749131F484814C0001FEC07004990C7FC123FA2485AA412FF90C9FCA96CEC0380
15076D1400003F5C6D131E001F5C6C6C5B6C6C5B3903FC07E06CB512806C6C48C7FCEB0F
F0242A7AA828>I<EE03F8ED01FFA3ED000F1607A217F0A4160FA217E0A4161FA217C0A4
91381FE03FECFFF8010301FE138090390FF01FBF90393FC007FF90387F000113FE48487F
4848EC7F00485A120F5B001F5D485A5E485AA3150112FF90C75BA41503A25EA37E1507A2
6C6C495A151F6C6C133F6C6C137F6C6C48487E3B03F80FCFFFC06CB5128F39007FFE0FD9
0FF0EBE0002D407ABE33>I<EC3FE0903801FFF8010713FE90380FE07F90393F801F8090
397F000FC001FE14E048481307485A484814F0000F14035B121F5B123FA24848130790B6
FCA3D8FF80C8FC90C9FCA87EED01C015036C6C148015076C6CEB0F006D131E000F5CD807
F813F83903FE03F0C6B512C0013F90C7FCEB07F8242A7BA828>I<ED07F0ED3FFCEDFFFE
913801FC3F913807F0FF4A4813804A5AEC3F81027F140015004A137C4A90C7FCA213015C
A513035CA50007B512F8A3260007F0C8FCA3130F5CA5131F5CA5133F5CA5137F91C9FCA5
5B5BA4EA03FF007F13FEB5FCA229407DBF1C>I<177C913907F803FE91393FFE0FFF91B5
EA9F3F903901FC0FF8903907F007F090380FE003D91FC0EBF80CDA80011300133FA2D97F
007FA21503495C5BA34B5A137E4B5A017F5C6D495A6D6C48C7FC90383FC0FE903877FFF8
01715B9038E07F8091C9FC485AA37FA27F90B512F8EDFF806C15E016F88212033A07E000
0FFED81FC0130148486D7E48C87E127E00FE815AA25E167E16FE5E6C1401007F4A5A6C6C
EB0FE06C6CEB3FC0270FF801FFC7FC0003B512FCC66C13F0010F90C8FC303D7FA82D>I<
147FEB3FFFA313017FA25CA513015CA513035CA4ED07F80107EB1FFFDAF07F13C09138F1
F01F9139F3C00FE0ECF7809139FE0007F0495AA25C5CA24A130F131F4A14E0A4161F133F
4A14C0A4163F137F91C71380A4167F5B491500A300015D486C491380B5D8F87F13FCA32E
3F7DBE33>I<1478EB01FE130314FFA25B14FE130314FCEB00F01400ACEB03F8EA01FF14
F0A2EA001F130FA314E0A5131F14C0A5133F1480A5137F1400A55B5BA4EA03FF007F13F0
A2B5FC183E7DBD1A>I<ED0780ED1FE0153F16F0157FA216E0153F16C0ED0F0092C7FCAC
ED7F80EC3FFF1600A2140180A35DA41401A25DA41403A25DA41407A25DA4140FA25DA414
1FA25DA4143F5DA4001E137FD87F8090C7FCA200FF13FEA2EB81FCEB01F8495A387C0FE0
383FFF806C48C8FCEA03F8245187BD1C>I<143FEB1FFF5BA213017FA214FEA5130114FC
A5130314F8A5130714F0A5130F14E0A5131F14C0A5133F1480A5137F1400A55B5BA4EA03
FF007F13F8A2B5FC183F7DBE1A>108 D<902707F007F8EB03FCD803FFD91FFF90380FFF
80DAE07FD9C03F13E09126E1F01FEBF80F3E001FE3C00FE1E007F090260FE780EBE3C091
3CEE0007F70003F802FC14FE14DC02F85C4A5CA24A5C011F020F14074A4A14F0A5013F02
1F140F4A4A14E0A5017F023F141F91C74914C0A549027F143F4992C71380A300014B147F
486C496DEBFFC0B5D8F87FD9FC3F13FEA347287DA74C>I<903907F007F8D803FFEB1FFF
DAE07F13C09138E1F01F3B001FE3C00FE090380FE7809139EE0007F014FC14DC14F85CA2
4A130F131F4A14E0A4161F133F4A14C0A4163F137F91C71380A4167F5B491500A300015D
486C491380B5D8F87F13FCA32E287DA733>I<EC0FF0ECFFFE01036D7E90390FF01FC090
391F8007E049486C7E01FC6D7E48486D7EA24848147E485A000F157F5B121FA2485AA200
7F1680A2170048C85AA54B5AA25EA24B5A7E4B5A5E6C140F6C6C495A6D495A6C6C017EC7
FC6C6C485A3903FC07F8C6B512E0013F1380D90FF8C8FC292A7BA82D>I<027F13FF9026
7FFF0713C0DAFE1F13F092387E03FC903A03FFF001FE6D496C7E6D0180EB7F804990C712
3F4A15C05CEF1FE0A313034A140F18F0A3171F010716E05CA3173F18C0130F4A147F1880
17FF18004C5A011F14035F6E495A4C5A6E495A6EEB7F8090273FDF01FFC7FC91388FFFFC
028313F09138807F8092C9FC137FA291CAFCA45BA25BA31201487EB512F8A3343A81A733
>I<91391FE003C0DAFFF813800103EBFE0790380FF81F90393FC0078F90397F80039FD9
FF0013DF4848903801FF0048487F485A485AA2485A123F495CA2485AA2150112FF90C75B
A41503A25EA37E6D1307150F003F4A5A6D133F6C6C137F000F14F73907F001EF3903FC0F
CF6CB5EA0FE038007FFCEB0FF090C7FC151F5EA5153F5EA4157F4B7E023F13FEA32A3A7A
A730>I<903807F03FD803FFEBFFC002E113F0ECE3C73A001FE78FF890380FEE0F14FE02
FC13F014F816E09138F0038092C7FC5C131FA25CA4133F5CA5137F91C8FCA55B5BA31201
487EB512FEA325287EA724>I<9138FF81C0010713E3011F13FFD97F00138001FC133F48
48131F49130F485A150748481400A27FA27F6D90C7FC13FF14F86C13FF15C06C14F06C6C
7F7F01077F9038007FFE1407140100381300157EA2003C143EA2157E007C147C127E5D12
7F4A5A90388007E039FFE01FC000F9B5C7FC00E013FC38C01FE0222A7DA824>I<EB0380
A4130791C7FCA25BA25B5B133E137E13FE12011203120FB612C0A3D801FCC7FCA312035B
A512075BA5120F5BA41407001F130E13C0A4141E141C1380EBC03C143814786D5A380FE1
E06CB45A00015BD8007EC7FC1A3978B723>I<01FE147F00FFEC7FFF4914FEA200071403
00031401A34914FCA4150312074914F8A41507120F4914F0A4150F121F4914E0A2151FA3
153F49EB7FC0A215FF9038C001DF000F903807BFE09039F01F3FFF3807FFFC000113F826
003FC01380282977A733>I<B500C3B53803FFFCA204FE14F8290FFE003FE00013C0D807
F86D48EB7F000003173E183C150F18386D5E0001141F705B153F4D5A15776D4B5A0000EC
E7F04DC7FCEC01C3170E9038FF0383017F5D91380703F85FEC0E01021E5CD93F9C14F002
BC6D5A02B813FDDAF8005B4A13FF5F6D5A94C8FC5C4A137E167C6DC7FC1678010E14383E
2878A642>119 D<48B539C07FFFC0A33C000FFE003FF8006D48EB1FE001031580010102
3EC7FC6E133C01005C027F5B6F5A91383F81C0EDC380DA1FC7C8FC15EFEC0FFE6E5A5D14
0381A24A7E140FEC1E7F023C7FEC383F02707FECE01F010180903803C00F49486C7ED90F
007F491303017E80D801FE80D807FF497EB5D8803F13F8A332277FA630>I<90B539E007
FFF05E18E0902707FE000313006D48EB01FC705A5F01014A5A5F16036E5C0100140794C7
FC160E805E805E1678ED8070023F13F05EED81C015C191381FC38015C793C8FC15EF15EE
EC0FFCA25DA26E5AA25DA26E5A5DA24AC9FC5C140E141E141C5C121C003F5B4813F0485B
495A130348485A4848CAFCEA783EEA7FFCEA3FF0EA0FC0343A80A630>I
E /Fb 22 121 df<14FCEB01F8EB03F0EB07E0130FEB1FC01480133FEB7F00137E13FE48
5AA212035B12075BA2120F5BA2121F5BA2123FA35B127FA690C7FC5AB3A27E7FA6123F7F
A3121FA27F120FA27F1207A27F12037F1201A26C7E137E137FEB3F80131F14C0EB0FE013
07EB03F0EB01F8EB00FC165A79C323>40 D<12FC127E7E6C7E7F6C7E12077F6C7E12017F
6C7EA27F7F1480133FA214C0131FA214E0130FA214F0A3130714F8A6130314FCB3A214F8
1307A614F0130FA314E0A2131F14C0A2133F1480A2137F14005B5BA2485A5B1203485A5B
120F485A5B48C7FC127E5A165A7BC323>I<EA7F80A8120FEA1F00A2121E123EA2123C12
7C1278A212F80913798719>44 D<ED0180ED03C01507A21680150FA216005DA2151E153E
A2153C157CA2157815F8A25D1401A25D1403A25D1407A25D140FA24AC7FCA2141E143EA2
143C147CA2147814F8A25C1301A25C1303A25C1307A25C130FA291C8FC5BA2131E133EA2
5BA2137813F8A25B1201A25B1203A25B1207A25B120FA290C9FC5AA2121E123EA2123C12
7CA2127812F8A25A1260225B7BC32D>47 D<ED7FF80207B512C0021F14F8027F14FE49B6
FC5B010F15FC49EBC00F90393FFE0001D97FF8EB003CD9FFE0140C484914005C4890C9FC
485A5B120F5B121F5B123F5BA2485AA412FF5BAB7F127FA46C7EA27F121F7F120F7F1207
7F6C7E6C7F6E14026C6D140ED97FF8143ED93FFE14FE903A1FFFC007FF6D90B6FC13036D
15FE6D6C14F8021F14E0020714809139007FF80030437BC03A>67
D<B612F8EDFF8016E016F88216FF902680003F7F03077F03007F707E707EEE0FFC160783
1603707E188082177F18C0A2173F18E0A3171F18F0AC18E0173FA318C0177FA2EFFF80A2
4C13005E5F16074C5A4C5AEE7FF04C5A03035B033F5B90B7C7FC5E16F816E0168003F8C8
FC343F78BE42>I<EAFF80B3B3B3A9093F78BE19>73 D<4AB47E020F13F0027F13FE91B6
FC010315C04981011F010013F8D93FFCEB3FFCD97FF0EB0FFE02C0130349486D7E4890C8
13804848ED7FC049153F000717E04848ED1FF0A24848ED0FF8A2491507003F17FCA24915
03007F17FEA349150100FF17FFAC6D5D007F17FEA46D1507003F17FCA26D150F001F17F8
6D151F000F17F06D153F000717E06D157F6C6CEDFFC06C6D4913806C6D4913006E5B6D6C
495AD93FFCEB3FFC6DB4EBFFF8010790B512E06D5D010092C7FC6E5B020F13F002011380
38437BC043>79 D<B612F815FF16C016F016FC82903980003FFF03071380030113C0ED00
7FEE3FE0161F17F0160FA217F81607A5160F17F0A2161F17E0163FEE7FC0ED01FF030713
80033F130090B65A5E16F016C093C7FC15F80180C9FCB3A82D3F79BE3A>I<B612F015FF
16C016F016FC82903980003FFF03031380030013C0EE7FE0163FEE1FF0160F17F8A21607
A4160FA217F0161FEE3FE0167FEEFFC003031380033F130090B65A5E16F016C093C7FC15
FC90388003FE14018180826F7E153F82151F82150F826F7EA26F7E150182811780EE7FC0
A2EE3FE0A2EE1FF0160F17F8EE07FCA2EE03FE2F3F78BE3B>82 D<EB07FC90387FFF8048
B512E00007804880819038F807FE9038C001FF90C7FC000C15800008147FC8FCED3FC0A7
EC3FFF0107B5FC137F48B6FC120748EBF83F381FFE00EA3FE0EA7F8048C7FC5AA3157F7E
15FF387FC003EBF00F6CB6FCA26C14BF6CEBFE3F000313F8C60180C7FC222B7DA92C>97
D<49B47E010F13F0013F13FC4913FF90B612805A481300D807FCEB1F004848130748487F
4990C7FC485AA2485AA448C9FCAA6C7EA36C7EA26C6C14406DEB01C06C6C13036C6C131F
01FF13FF6C90B5FC7E6C6C14806DEBFE00010F13F001011380222B7DA928>99
D<EB01FE90380FFFC0013F7F90B512F8488048804813039038FC00FFD80FF07F4848EB3F
80151F484814C049130F127F90C7FCED07E090B6FCB7FCA548C9FCA37E7EA27FA26C7EA2
6C7E6D14406C6CEB01C0D807FE130F3903FF807F6C90B5FC7E6D1480011FEBFE00010713
F001001380232B7EA928>101 D<EC3FE0ECFFFC13035B5B5B90383FE03C90387F800491
C7FC5B5BA21201ACB6FCA6D801FEC7FCB3B01E407FBF1C>I<EAFF80A9C7FCAEEA7F80B3
B3A4093F7BBE15>105 D<00FEEB7F80903803FFF0010F13FC497F017F7F90B6FC26FFFC
071380EBF801EBE000ED7FC05B49133FA390C7FCB3A922297AA82F>110
D<14FF010713E0011F13F8017F13FE90B6FC48158048018113C03A07FC003FE04848EB1F
F049130F4848EB07F84848EB03FCA2491301007F15FEA290C8FC4815FFA96D5B007F15FE
A36C6CEB03FCA26C6CEB07F86D130F6C6CEB1FF06C6CEB3FE09038FF81FF6C90B512C0C6
15006D5B6D5B010713E0010090C7FC282B7EA92D>I<EC7F8039FF03FFF0010F7F013F7F
90B57E81D9FC071380D9F00113C0EBC00049EB7FE090C7123F151F16F0150FA216F81507
A9150F16F0A2151FA2ED3FE07FED7FC06D13FFD9F0031380D9FC0F130090B55A5D013F5B
6D5B010713C0010090C7FC91C8FCB1253B7AA82F>I<00FE133EEB01FE1307130F131F13
3F137FEBFFE0B5120013FC5B5B5B5BA25BA390C7FCB3A517297AA81F>114
D<EA01FCACB612E0A6D801FCC7FCB3A86D132015E03800FF03ECFFF0A27F6D13C06D1300
EB0FF01C357EB321>116 D<B4EC3FC0B3AC157FA215FF6D5A007F1307EBE01F90B6FC6C
143F6C13FE6C13F000010180C7FC22297AA72F>I<D87F80EB01FE003F5D6C6C495A6C6C
13076D495A6C6C495A6C6C5C00014A5A6C6C49C7FC017F5B90383F81FEECC1FC90381FE3
F890380FE7F06DB45A7F6D5B6D5B92C8FC147E14FF497F81497F903807E7F090380FE3F8
EB1FC190383F80FC4A7E49137F01FE6D7E48486D7E4848800007140F496D7E48486D7E48
486D7E003F8148486D7E48C8EA7F80292880A72A>120 D E /Fc
2 55 df<EB0FFCEB3FFF90B512C0000314F04880488048804880A2481580A3B712C0AA6C
1580A36C1500A26C5C6C5C6C5C6C5CC614C0013F90C7FCEB0FFC22227BA72D>15
D<1718173C177CA217F8A2EE01F0A2EE03E0A2EE07C0160F1780EE1F00A2163EA25EA25E
A24B5AA24B5AA24B5AA24B5AA24BC7FCA2153E157E157C5DA24A5AA24A5AA24A5AA24A5A
A24AC8FCA2143EA25CA25C13015C495AA2495AA2495AA249C9FCA2133EA25BA25BA2485A
A2485AA2485A120F5B48CAFCA2123EA25AA25AA25A12602E5474C000>54
D E /Fd 23 123 df<141E147F14FF5BEB03FEEB07FCEB0FF0EB1FE0EB3FC0EB7F80EBFF
00485A5B12035B485A120F5BA2485AA2123F5BA2127F90C7FCA412FEAD127FA47F123FA2
7F121FA26C7EA27F12076C7E7F12017F6C7EEB7F80EB3FC0EB1FE0EB0FF0EB07FCEB03FE
EB01FF7F147F141E184771BE30>40 D<127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C
7EEB7F80133F14C0131FEB0FE014F01307A2EB03F8A214FC1301A214FE1300A4147FAD14
FEA4130114FCA2130314F8A2EB07F0A2130F14E0EB1FC0133F1480137FEBFF00485A485A
485A485AEA3FE0485A485A90C7FC5A1278184778BE30>I<EA03E0EA0FF0EA1FF813FCEA
3FFEA213FFA27EA27E1203EA007FA2137E13FEEA01FC1203EA07F8EA3FF0127FEAFFE0EA
7F801300123C1019708B30>44 D<91387F803C903903FFF03E49EBFC7E011F13FE49EBFF
FE5B9038FFE07F48EB801F3903FE000F484813075B48481303A2484813015B123F491300
A2127F90C8FC167C16005A5AAC7E7EA2167C6D14FE123FA27F121F6D13016C6C14FCA26C
6CEB03F86D13076C6CEB0FF03901FF801F6C9038E07FE06DB512C06D14806D1400010713
FC6D13F09038007FC0273A7CB830>67 D<003FB512E04814FCB67E6F7E6C816C813A03F8
007FF0ED1FF8150F6F7E6F7E15016F7EA2EE7F80A2163F17C0161FA4EE0FE0AC161F17C0
A3163F1780A2167F17005E4B5A15034B5A150F4B5AED7FF0003FB65A485DB75A93C7FC6C
14FC6C14E02B387FB730>I<007FB6FCB71280A46C1500260007F0C7FCB3B3A8007FB6FC
B71280A46C1500213879B730>73 D<003FB57E4814F0B612FC15FF6C816C812603F8017F
9138003FF0151F6F7E15071503821501A515035E1507150F4B5A153F4AB45A90B65A5E93
C7FC5D8182D9F8007FED3FE0151F150F821507A817F8EEF1FCA53A3FFF8003FB4801C0EB
FFF8B56C7E17F06C496C13E06C49EB7FC0C9EA1F002E397FB730>82
D<EB1FFC90B57E000314E04880488081391FF80FFE9038F001FF806F7E6C48133F82D803
80131FC8FCA391B5FC130F137F48B6FC12075A48EBC01F383FFC00EA7FE0138048C7FC5A
A46C143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0A2000714F76C14C3C60200
13C0D93FF090C7FC2B2A7CA830>97 D<EA3FFC487E12FFA2127F123F1200AAEC03FE9138
1FFF80027F13E091B57E90B612FC82ECFE079138F001FF4A6C13804A137F4AEB3FC091C7
121F4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F806E13FFDAF003
13009138FC0FFE91B55A5E495CD97E7F13C0D93C1F90C7FC90380003FC2C3980B730>I<
ECFFC0010713F8011F13FE017F7F90B612805A48018013C03907FC007F485A485A49EB3F
80485A49EB0E00007F91C7FC90C9FCA25A5AA87E7EA27F003FEC07C06DEB0FE06C7E6D13
1F6C6C14C0D807FE133F9039FFC0FF806C90B5FCC615006D5B011F13F801075B01011380
232A7AA830>I<49B4FC010713E0011F13F8017F7F90B57E488048018113803A07FC007F
C04848133FD81FE0EB1FE0150F484814F0491307127F90C7FCED03F85A5AB7FCA516F048
C9FC7E7EA27F003FEC01F06DEB03F86C7E6C7E6D1307D807FEEB1FF03A03FFC07FE06C90
B5FC6C15C0013F14806DEBFE00010713F8010013C0252A7CA830>101
D<15FF020713C0021F13E04A13F04A13F891B5FC49138F903803FE0F9138FC07F0EB07F8
9138F001C092C7FCA7003FB612C04815E0B7FCA36C15C0260007F0C7FCB3A9003FB512FE
4880B71280A26C15006C5C25397DB830>I<EB01E0497E497E497EA46D5A6D5A6D5A90C9
FCA8381FFFF8487F5AA27E7EEA0001B3A9003FB612C04815E0B7FCA27E6C15C023397AB8
30>105 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E6C010F13
872607FE07EB03F801FC13FE9039F803FC01A201F013F8A301E013F0B3A23C7FFE0FFF07
FF80B548018F13C0A46C486C01071380322881A730>109 D<EC01FE3A3FFC0FFF80267F
FE3F13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8039138E001FE14C0EC8000A291C7
FCA25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C496C13F82F2880
A730>I<49B4FC010F13E0013F13F8497F90B57E0003ECFF8014013A07FC007FC04848EB
3FE0D81FE0EB0FF0A24848EB07F8491303007F15FC90C71201A300FEEC00FEA86C14016C
15FCA26D1303003F15F86D13076D130F6C6CEB1FF06C6CEB3FE06D137F3A07FF01FFC06C
90B512806C15006C6C13FC6D5B010F13E0010190C7FC272A7CA830>I<EC03FE3A3FFC1F
FF80267FFE7F13E000FF90B57E90B612FC6C816CEBFE07C69038F001FF4A6C13804A137F
4AEB3FC091C7121F4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F80
6E13FFDAF00313009138FC0FFE91B55A5E495C6E13C0021F90C7FCEC03FC91C9FCAD383F
FFF8487FB57EA26C5B6C5B2C3C80A730>I<49B413F8010FEBC1FC013F13F14913FD48B6
FC5A481381390FFC007F49131F4848130F491307485A491303127F90C7FC15015A5AA77E
7E15037FA26C6C1307150F6C6C131F6C6C133F01FC137F3907FF01FF6C90B5FC6C14FD6C
14F9013F13F1010F13C1903803FE0190C7FCAD92B512F84A14FCA46E14F82E3C7DA730>
I<ED07F83A3FFF803FFF486DB51280B512C302CF14C06C13DF6C9038FFFC3FD8001F13E0
9238801F809238000F004A90C7FC5C5C5CA25CA45CAF003FB512FC4880B7FCA26C5C6C5C
2A287EA730>I<EB0780497E131FA9003FB612E04815F0B7FCA36C15E026001FC0C7FCB2
16F8ED01FCA5ECE003010FEB07F814F09138FC1FF06DB512E06D14C016806D1400903800
7FFCEC1FF026337EB130>116 D<D83FFCEB3FFC486C497E00FF14FFA2007F147F003F14
3F00001400B3A41501A2150315076D130F903A7FC07FFFF891B612FC6D15FE7F6D4913FC
6D9038F87FF8010001C0C7FC2F2880A630>I<3A3FFF81FFFC4801C37FB580A26C5D6C01
815BC648C66CC7FC137FEC80FE90383F81FC90381FC3F8EB0FE3ECE7F06DB45A6D5B7F6D
5B92C8FC147E147F5C497F81903803F7E0EB07E790380FE3F0ECC1F890381F81FC90383F
80FE90387F007E017E137F01FE6D7E48486D7E267FFF80B5FCB500C1148014E3A214C16C
0180140029277DA630>120 D<001FB612FC4815FE5AA316FC90C7EA0FF8ED1FF0ED3FE0
ED7FC0EDFF80003E491300C7485A4A5A4A5A4A5A4A5A4A5A4A5A4990C7FC495A495A495A
495A495A495A4948133E4890C7127F485A485A485A485A485A48B7FCB8FCA46C15FE2827
7DA630>122 D E /Fe 2 51 df<130E131E137EEA01FE12FFA2EAFE7E1200B3AF13FF00
7F13FFA3182C7BAB23>49 D<EB7F803801FFF0000713FC380F81FF393E007F80003CEB3F
C048131F15E000FE130F6C14F0A31407A2003C130FC7FCA215E0141F15C0143F1580EC7F
0014FE5C495A495A495A495A49C7FC133E5B4913705B485A484813E0485A48C7FC48B5FC
5A5AB612C0A31C2C7DAB23>I E /Ff 52 123 df<DC07F0EB0F80DC3FFEEB3FE093B5EB
FFF8923B03F80F81F87C923A07E007C3F0923B0FC01FC7E1FC92261F803F13E3F0CFC315
3F040013DF4B029F13F894390E1FC0E04B9039003F80005DA3187F020193C7FC5DA36002
035D5DA20107B91280A21A0090290007F00001FCC7FCA31703020F5D5DA31707021F5D5D
A3170F023F5D5DA4027F141F6092C7FCA3173F4A5D5CA3177F010193C8FC5CA317FE495A
A34C5A5C13075F4A1303001E02F05B397F0FC3F85F00FF01C713070287495AD91F075C00
FE4A48C9FCD8F83EEBC03E3A787C03E0FC3A7FF801FFF8261FF00013E0D807C0EB3F8046
5383BF38>11 D<933803FF80041F13E093B512F8923901FC00FEDB07F0131EDB0FC0131F
187F4B4813FF153F93C7FC4B14FEA203FE14781800A314015DA414035DA30107B712F0A2
18E0903A0007F0000F171F18C0140F5D173F1880A2141F177F4B1400A35F023F5C5DA216
015F147F15001603EFF81CA25C4A0107133CEFF038A3010116784A157018F0040313E017
F14948903801FFC0701380EF3E0094C7FC5C1307A25CA2121E387F0FC0A200FF5BA249CA
FC12FEEAF83EEA787CEA7FF8EA1FF0EA07C0385383BF33>I<EE07F893393FFF0FF093B5
128F923A03F807CFE0923907E003EF92390FC00FFF4B484813C0153F16005D1980EF073F
03FE1300187F1900A214014B5C60A3020314014B5CA30107B7FC60A2903A0007F0000317
0760140F5D170F60A2141F4B131F60A3023F143F4B5CA3177F027F92C7FC92C7FCA25FEF
FE07A25C4A01015BEFFC0EA30101161E4A151C183C0400133818784948EC7FF0715AEF0F
8094C8FC5C1307A25CA2EA1E0F007F5BA200FF5B131F91CBFC12FEEAF83EEA787CEA7FF8
EA1FF0EA07C03C5383BF35>I<ED0380150FED1F00153E5D5D4A5A4A5A4A5A4A5A4AC7FC
5C143E5C14FC495A5C1303495AA2495A5C131F91C8FC5BA2137EA25BA2485AA3485AA212
075BA2120F5BA3121F5BA3123F90C9FCA35A127EA5127C12FCA95AA47EA2127CA5123C12
3EA2121EA2121F7E7F12076C7EA26C7E1200215A73C325>40 D<EC038015C0A2EC01E015
F0140015F81578157CA2153C153EA4151FAF153FA7157EA415FE15FCA3140115F8A31403
15F0A3EC07E0A3EC0FC0A2141F1580A2EC3F00A2147EA2147C14FC5C13015C1303495A5C
130F5C49C7FC5B133E5B5B485AA2485A485A485A48C8FC123C5A5A5A205A7FC325>I<00
7FB5FCA214FEA2B5FCA21806799621>45 D<15031507150F151F151E153E157EEC01FEEC
03FC1407141FEB01FF90380FFBF8EB1FC3EB0E07130015F0A2140FA215E0A2141FA215C0
A2143FA21580A2147FA21500A25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CEB7FE0B612F0A215E0203D77BC2E>49 D<15FE913803FFC0020F13F091383F
03F891387C00FC4A137ED901E0137F49487F1780495A49C7FCEB0E0CD91E1E14C0131CEB
3C0E133813781370021E137FD9F01C148013E0143C023813FF000101781400EBC0709138
F001FEEBC1E09039E3C003FC6CB448485A02005B013C495A90C7485A4B5A4BC7FC15FC4A
5AEC03E0EC0FC04AC8FC147E14F8EB03E0495A011FC9FC133E49141849143CD801E01438
1203491478485A48C85A000E1401D81FE0495A48B413079138F00FC0D87C7FB5FCD8780F
5CD8700391C7FCD8F0015B486C6C5A6E5AEC07C02A3F79BC2E>I<131EEB3F80137FEBFF
C05AA214806C13005B133C90C7FCB3120FEA3FC0127FA212FFA35B6CC7FC123C122777A6
1C>58 D<171C173C177CA217FCA216011603A21607A24C7EA2161DA216391679167116E1
A2ED01C1A2ED038115071601150EA2031C7FA24B7EA25D15F05D4A5AA24A5AA24AC7FC5C
140E5C021FB6FC4A81A20270C7127FA25C13015C495AA249C8FCA2130E131E131C133C5B
01F882487ED807FEEC01FFB500E0017FEBFF80A25C39417BC044>65
D<49B712C018F818FE903B0003FC0001FF9438007F804BEC3FC019E0181F14074B15F018
0FA2140F5D181FA2021F16E04B143F19C0A2023FED7F804B14FF4D13004D5A027F4A5A92
C7485AEF3FE0EFFF8091B648C7FC17F817FF4AC77F0101ED1FE04A6E7EA2717E0103824A
1403A30107825CA3010F5E4A1407A260011F150F5C4D5A60013F153F4A4A5A4D5A017F4A
90C7FC4C5A91C7EA0FF849EC3FF0B812C094C8FC16F83C3E7BBD40>I<9339FF8001C003
0F13E0033F9038F803809239FF807E07913A03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA
7F806DB4FC4AC77E495AD903F86E5A495A130F4948157E4948157C495A13FF91C9FC4848
167812035B1207491670120FA2485A95C7FC485AA3127F5BA312FF5BA490CCFCA2170FA2
170EA2171E171C173C173817786C16706D15F04C5A003F5E6D1403001F4B5A6D4AC8FC00
0F151E6C6C5C6C6C14F86C6C495A6C6CEB07C090397FC03F8090261FFFFEC9FC010713F0
010013803A4272BF41>I<49B712C018F818FE903B0003FE0003FF9438007F804BEC1FC0
F00FE0F007F014074BEC03F8F001FCA2140F4BEC00FEA3141F4B15FFA3143F5DA3027F5D
5DA219FE14FF92C81203A34917FC4A1507A219F813034A150F19F0A20107EE1FE05CF03F
C0A2010FEE7F804A16006060011F4B5A4A4A5A4D5AA2013F4B5A4AEC3FC04DC7FC017F15
FEEE03FC4AEB0FF001FFEC7FE0B8128004FCC8FC16E0403E7BBD45>I<49B812F8A39026
0003FEC7121F18074B14031801F000F014075DA3140F5D19E0A2141F4B1338A2EF780102
3F027013C04B91C7FCA217F0027F5CED80011603160F91B65AA3ED001F49EC07805CA301
0392C8FC5CF003804C13070107020E14005C93C75A180E010F161E4A151C183CA2011F5E
5C60A2013F15014A4A5A1707017F150F4D5A4A147F01FF913807FF80B9FCA295C7FC3D3E
7BBD3E>I<49B812F0A390260003FEC7123F180F4B1403A2F001E014075DA3140F5D19C0
A2141F5D1770EFF003023F02E013804B91C7FCA21601027F5CED8003A2160702FFEB1F80
92B5FCA349D9003FC8FC4A7F82A20103140E5CA2161E0107141C5CA293C9FC130F5CA313
1F5CA3133F5CA2137FA25C497EB612E0A33C3E7BBD3B>I<DCFF8013E0030713F0033F90
38FC01C09239FFC03E03913A03FC000F07DA0FF0EB078F4A48903803DF80DA7F80EB01FF
4AC8FC495A4948ED7F00495A495A4948814948153E495A13FF91C9FC4848163C12035B12
07491638120FA2485A95C7FC485AA3127F5BA312FF5BA34BB512FE90C7FCA292C71380A2
95C7FCA25EA25FA216037E6D5DA2003F15077F001F5E6D140F6C6C141F0007153F6C6CEC
7BF0D801FE14F16C6CEB03E090393FE01F806DB5EA0060010701F890C8FC9038007FC03B
4273BF46>I<49B6FC5BA2D9000313005D5DA314075DA3140F5DA3141F5DA3143F5DA314
7F5DA314FF92C7FCA35B5CA313035CA313075CA3130F5CA3131F5CA3133F5CA2137FA25C
497EB67EA3283E7BBD23>73 D<49B612C0A25FD9000390C8FC5D5DA314075DA3140F5DA3
141F5DA3143F5DA3147F5DA314FF92C9FCA35B5CA313035C18C0EF01E0010716C05C1703
1880130F4A140718005F131F4A141EA2173E013F5D4A14FC1601017F4A5A16074A131F01
FFECFFF0B8FCA25F333E7BBD39>76 D<49B5933807FFFC496062D90003F0FC00505ADBBF
805E1A771AEF1407033F923801CFE0A2F1039F020FEE071F020E606F6C140E1A3F021E16
1C021C04385BA2F1707F143C023804E090C7FCF001C0629126780FE0495A02705FF00700
F00E0114F002E0031C5BA2F03803010116704A6C6C5D18E019070103ED01C00280DA0380
5BA2943807000F13070200020E5C5FDB03F8141F495D010E4B5CA24D133F131E011CDAF9
C05CEEFB80197F013C6DB4C7FC013895C8FC5E01784A5C13F8486C4A5CD807FE4C7EB500
F04948B512FE16E01500563E7BBD52>I<902601FFFE020FB5FC496D5CA2D900016D0100
13C04AEE3F00193E70141C193CEC07BFDB3FE01438151F1978020F7FDA0E0F15708219F0
EC1E07021C6D5CA203031401023C7FDA38015DA2701303EC7800027002805BA2047F1307
02F014C04A013F91C7FCA2715A0101141F4AECF00EA2040F131E010315F84A151C1607EF
FC3C0107140391C7143817FE040113784915FF010E16708218F0131E011C6F5AA2173F13
3C01385E171F137813F8486C6F5AEA07FEB500F01407A295C8FC483E7BBD44>I<EEFFC0
030713F8033F13FE9238FF80FF913A03FC003F80DA07F06D7EDA1FC06D7E4A486D7E4AC7
6C7E02FE6E7E495A49486E7E495A495A494881013F825C137F49C913805B1201485AA212
074916FF120FA25B121F190048485DA448484B5AA34D5AA25B4D5A12FF60171F60007F16
3F604D5AA24DC7FC4C5A6C7E4C5A4C5A001F4B5A6D4A5A000F5E6DEC7F8000074BC8FC6C
6CEB01FC6C6CEB07F86CB4EB0FE090397FC07F8090261FFFFEC9FC010713F80100138039
4273BF46>I<49B77E18F018FC903B0003FE0003FEEF00FF4BEC7F80F03FC0181F020716
E05DA219F0140F5DA3021FED3FE05DA219C0023F157F4B1580A2F0FF00027F5D4B13014D
5A4D5A02FFEC0FE092C7EA3FC04CB4C7FC92B55A4915F017804ACAFCA213035CA313075C
A3130F5CA3131F5CA3133F5CA2137FA25C497EB67EA33C3E7BBD3E>I<49B612FCEFFFC0
18F0903B0003FE000FF8EF01FE4B6D7EF07F80183F020716C05D19E0A2140F5DA3021FED
7FC05DA2F0FF80023F16005D4D5A4D5A027F4A5A4B495A4D5AEF7F8002FFD903FEC7FC92
B512F817C0A2499038000FF04AEB03F883707E010314005C83A213075CA25E130F5C5F16
03131F5CA3013F020714404A16E05F017F160119C04A01031303496C02FE1380B6D88001
13079438FF0F009338007FFECA6C5AEF07F03B407BBD42>82 D<92390FF001C0ED7FFE4A
B5EA0380913907F80FC791390FC003EF91391F8001FF4AC71300027E805C495A4948143E
A2495AA2010F153C5CA3011F1538A38094C7FC80A214FC6DB4FC15F015FE6DEBFFC06D14
F06D14FC6D80143F020F7F020180EC001F150303007F167F163FA2161FA212075A5F120E
A2001E153F94C7FCA2163E003E157E167C003F15FC4B5A486C5C4B5A6D495AD87DE0EB1F
80D8F8F849C8FC017F13FE39F03FFFF8D8E00F13E048C690C9FC32427ABF33>I<48B9FC
A25A903AFE001FF00101F89138E0007FD807E0163E49013F141E5B48C75BA2001E147FA2
001C4B131C123C003814FFA2007892C7FC12704A153C00F01738485CC716001403A25DA2
1407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA292C9FCA25BA25CA2
1303A25CEB0FFE003FB67E5AA2383D71BC41>I<001FB500F090B512F0485DA226003FF0
C7380FFC004AEC03F04A5D715A017F1503A24A5DA201FF150795C7FC91C8FCA2485E170E
5BA20003161E171C5BA20007163C17385BA2000F167817705BA2001F16F05F5BA2003F15
01A2495DA2007F1503A2495DA2160794C8FC48C8FC5E160E161E6C151C163C5E5E5E6C6C
13014B5A001F4A5A6C6C011FC9FC6D133E6C6C13F83903FC07F0C6B512C0013F90CAFCEB
07F83C406FBD44>I<B500FE91387FFFE094B5FC19C00003018091380FFC0049C8EA07F0
00015F606095C7FC170EA25F173C17386D5DA26C5E16015F4C5AA24CC8FC5E160E5E805E
137F5E5EA24B5AA24B5A150793C9FCECC00EA2013F5B153C15385DA25D14C15DECC38014
E302E7CAFCEB1FEF14EE14FCA25CA25CA25C5C130F5CA291CBFC130E3B406DBD44>I<14
7E49B47E010713C790391FC3FFC0EB3F8149C6FC01FE137F48481480485AA2485A000F15
005B001F5CA248485BA21401127F01805BA2140312FF01005BA2140716384814F0A2020F
1378167015E0007E131F023F13F0027F13E06CEBFFE1D901F713C0391F83E7E33A0FFF83
FF800003010113003900F8007C252977A72E>97 D<EB1FE0EA0FFF5CA2EA003FA25CA213
7FA291C7FCA25BA25BA21201A25BA21203A25B143F0007EBFFC001FB13E09038FFC3F0EC
01F8390FFE00FC5B4913FE49137E485AA249137F15FF123FA25BA2007F5B15FE1300A214
034814FC5AA2EC07F8A24814F0140F15E0141F15C0007CEB3F80007E14005C003E13FE38
3F01F8381F87F06CB45A00031380D800FCC7FC204077BE2A>I<EC1FE0ECFFF8010313FE
903807F03F90381FC00F90393F80078090387F001F01FE137F485A485A000715005B000F
147E484890C7FCA2485AA3127F5BA312FF90C9FCA55A1503007E5C5D007F141E6C5C5D6C
6C485A9038C007E0390FE03F802603FFFEC7FC6C13F838003FC0212977A72A>I<EE7F80
ED3FFF1700A21500A25EA21501A25EA21503A25EA21507A25EA2150FA25E147E903801FF
9F010713DF90391FC3FFC0EB3F8149C6FC01FE137F48485C485AA2485A000F92C7FC5B00
1F5CA248485BA21401127F01805BA2140312FF01005BA2140716384814F0A2020F137816
7015E0007E131F023F13F0027F5B6CEBFFE1D901F75B391F83E7E33A0FFF83FF80000301
0190C7FC3900F8007C294077BE2E>I<EC3F80903801FFE0010713F890381FE0FC90383F
807C9038FE003E4848131E485A12074848133E49133C121F4848137C15F8EC03F0397F80
1FE090389FFF80B5EAFE0014F001C0C7FC90C8FCA35AA61506150E151E007E143C15786C
14F0EC03E0391F800FC0390FC07F003807FFFC000113F038007F801F2976A72A>I<167C
4BB4FC0307138092380FC7C0ED1F87161FED3F3FA2157FA203FE1380EE0E0093C7FCA214
015DA414035DA414070107B512FCA390260007F0C7FC140F5DA4141F5DA4143F5DA4147F
92C8FCA45C5CA413015CA413035CA4495AA45C130FA2001E5B127F5CEAFF1F91C9FCA2EA
FE3E12F8EA787CEA7FF8EA3FE0EA0F802A5383BF1C>I<EC01F8EC0FFE91383FFF1C9138
7E0FFF49487E49487E49487ED90FE013FEEB1FC0A2EB3F80017F14FC1400491303A24848
14F8A2150712034914F0A2150F12074914E0A2151FA24914C0A2153F1203ED7F806D13FF
120114036C6C481300EB7E1FEB3FFE6D5A903807E0FE90C7FC1401A25DA21403A25D001C
1307007F5C48130F5D4A5A4A5A4849C7FC38FC01FE387FFFF8001F13E0000390C8FC283B
7CA72A>I<EB03FCEA01FF5CA2EA0007A25CA3130F5CA3131F5CA3133F5CA3137F91C8FC
EC03F8EC1FFE9039FF7FFF809039FEFC1FC09038FFF00F02C013E04813801400A25B485A
A25B151F000715C05BA2153F000F15805BA2157F001F15005B5D5D003F01011307018013
FCA20203130F007FECF80E1300161EEDF01C48153C4815781670913801F1F048ECFFE06E
13800070EC3E0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC
48138038078FC0EA0F0F121E001C13E0123C1238EB1FC01278EA703F148012F0137F0000
1300A25B5BA212015B12035BA21207EBF038A2120FEBE0781470121FEBC0F014E013C114
C0EA0F83EBC7803807FF006C5AEA00F8163E79BC1C>I<ED0380ED0FE0A2151FA316C0ED
070092C7FCADEC07C0EC1FF0EC7FFCECF87C903801E07E14C00103137FEB07801400495B
010E5B131E131CEB3C01A201005BA21403A25DA21407A25DA2140FA25DA2141FA25DA214
3FA25DA2147FA292C7FCA25CA25CA213015CA2EA1C03007F5BEAFF075C495A495A48485A
D8F87FC8FCEA7FFCEA3FF0EA0FC0235083BC1C>I<EB07F8EA03FF14F0A2EA000FA214E0
A2131FA214C0A2133FA21480A2137FA21400A25BA25BA21201A25BA21203A25BA21207A2
5BA2120FA25BA2121FA25BA2123FA25BA2127F13871307A212FF5BEAFE0EA2131E131CA2
EA7E3C5B6C5A6C5AEA07C0154079BE17>108 D<D801F0D93FC0137FD803FC903AFFF003
FFC02607FF03D9F80F13F03D0F3F0FC0FC1F83F83C1E1F9F00FE3E01001C01BED97E787F
003C01F8EB7FF0003816E05C494814C0007849148012704A1400D8F07F4A13034C5C0000
90C7FCA2490101140761495CA200010203140F61495C181F000302075D063F13E0494A14
80A20007020FEC7F81F101C0495C1903000F021F027E13801907494AEC0F00190EF03E3E
494AEB3FFCF01FF06CC7000EC7EA07E0432979A74A>I<D801F0EB3F803A03FC01FFE026
07FF0713F83A0F3F0FC1FC391E1F9F00001C01BC7F003C13F85C1238495A00785B12705C
D8F07F13015E00001300A24913035E5BA2000114075E5B150F00035D031F13704914C0A2
0007023F13F0EE80E05B1681000FED01C0160349EC07801700ED1F1F4914FEED0FF86CC7
EA03E02C2979A733>I<EC1FC0ECFFF801037F90380FF07F90381FC03F90393F801F80D9
7F0013C001FE130F484814E0485A12075B000F15F0485AA2485AA2ED1FE0127F5BA2153F
00FF15C090C7FCA2ED7F80A21600485C5D007E495AA2007F495A4A5A6C495A6C6C485A6D
485A260FE0FEC7FC6CB45A000113F038003F80242977A72E>I<903903E001F8903907F8
07FE903A0FFE0FFF80903A1E7E3E0FC090383C3F7C01389038F007E015E001789038C003
F01370EC7F8001F0010013F813E0160700015BA2C75AA20101140F17F05CA20103141F17
E05CA20107EC3FC0A24A1480167F010F1500A24A13FE4B5AEB1FF04B5A6E485A4B5A9039
3FFC1F80DADFFFC7FCEC8FFCEC83E0D97F80C8FCA291C9FCA25BA25BA21201A25BA21203
A2387FFFF0B5FCA22D3A80A72E>I<023F1330903901FF80F0010713E190390FC1F7E090
383F80FF90387F007F13FE4848EB3FC0485AA2485A000F15805B121F157F48481400A300
7F5C495BA300FF130101005BA31403485CA314075D007E130F141F007F133F6C495A381F
80FFEBC3EF380FFFDF0003EB1FC0EA00FC1300143F5DA3147F92C7FCA35C5CA213011303
90B512F85AA2243A77A72A>I<01F013FC3903FC03FF2607FF0F13C0390F3F1F03261E1F
BC13E0001CEBF80FECF01F003C13E01238EB3FC0007815C00070903880070092C7FCEAF0
7FA2000090C8FCA25BA25BA21201A25BA21203A25BA21207A25BA2120FA25BA35BA26CC9
FC232979A726>I<EC7F80903801FFE0010713F890380FC0FC90383F803CEC001E017E13
3E49137E15FEA2000114FCA215706D13007F14F014FEECFF806C14C015E07F011F13F013
07EB007F141F140F000C1307123F387F80031407D8FF0013E0A300FCEB0FC000F0EB1F80
0078EB3F00007C5B383F01FC6CB45A000713E0C690C7FC1F297AA725>I<EB01C0EB07E0
A2130FA4131F5CA3133F5CA3137F91C7FCA2007FB51280B6FC1500C648C7FCA212015BA3
12035BA312075BA3120F5BA3121F5BA3003F131C1380143C1438127FEB00785C5C130149
5A6C485A49C7FCEA1FFE6C5AEA03F0193A78B81E>I<137C48B4143C486D137E26078FC0
13FE380F07E0000E1401001E5DEA1C0F123C00381403D8781F5C007013C0A2D8F03F1307
02805B1200137FEC000F5E5B5B151F00015D5BA2153F0003ED81C05BA2157F16031780A2
EDFF0700014914005ED9FC07130E3A00FE0FBF1E90397FFE1FFC90391FFC0FF8903907F0
03E02A2979A731>I<017CEB03C048B4EB07E0489038800FF039078FC01F380F07E0000E
15F8001E140FD81C0F1307003CEC03F01238D8781F1301007013C01500EAF03F4A13E012
00137FEC000116C05B5B1503000115805B150716001203495B150E151E151C153C153815
7800015C6D485A0000495A6D485AD93FFFC7FC6D5AEB03F0252979A72A>I<017C16F048
B491387801F8486D9038FC03FC27078FC0011307380F07E0000E020314FE001EEDF803D8
1C0F1501003CEE00FC00381407D8781F4A137C007013C0183CD8F03F130F028049133812
00137FDA001F14781870495C5B033F14F0000117E0495CA217010003027F14C049140017
031880170718005F00014A130E6D151E4A6D5A2700FE03DF5B903A7F079FE0F0903A3FFF
07FFE090260FFE035B902703F8007FC7FC372979A73C>I<903907E003E090391FF80FF8
90397FFC1FFE9039F87E3C1F3901E03F78D803C0EBF07F9039801FE0FF1207D80F005B00
0E133F001E15FE001CEC80381600003C137FA2C790C7FCA25C5CA313015CA313034A1338
A3D81C071478007F157000FF4913F016E0010F130100FEEC03C090391FF80780D8F83DEB
0F00903878FC3E397FF07FFC6C486C5A390F800FC028297BA72A>I<137C48B4143C4801
C0137ED8078F14FE380F07E0000E1401001E15FCEA1C0F123C00381403D8781F14F80070
13C0A2D8F03F1307028013F01200137FEC000F16E05B5B151F000115C05BA2153F000315
805BA2157F1600A35D0001495AA2EBFC073800FE0F90387FFFFCEB1FFDEB07F1EB00035D
A21407000E5CEA3F80007F495A5D141F4848485A92C7FC007C137E00705B387801F8383E
07F0381FFFC06C90C8FCEA03F8273B79A72C>I<D901F01370D907FC13F0496C13E0011F
130190393FFF03C049EB878015FFD9FC0F13009038F001FE9038E0003C000114386C4813
7890C75A4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E4913075B495B48
5A4848131E4848133E01FC5B390FFF81FC48EBFFF8EA3E0FD83C075B486C5B00705CD8F0
0190C7FC38E0007C24297BA725>I E /Fg 13 117 df<17FCEE03FE1607161F163F16FF
1507151F4AB5FC141F0107B6FCB8FCA6ECFE3F14E0EBF800C8FCB3B3B3B3AC003FBA12FC
A9467172F063>49 D<923807FFF892B612C0020F15F8023F15FF49B812E04917F8010F83
013F17FF498490B5D8E00F15E04849C7814801F0023F804801C0020F8048496E8091C86C
804801E080486D6E15806E6F14C0487F6E6F14E06E811BF0B6FC6F6E14F8A3841BFCA36C
91C8FCA36C5B6C5B6C5B6C5B6C5BC66CC9FC90CA15F8A2601BF0A2601BE0A24E14C01B80
601B0095B55AA24D5C624D5C4D5C624D5C4D91C7FC4D13FC614D5B94B55A4C14804C91C8
FC4C5B18F84C5B4C5B4C13804C90C9FC4C5A4B13F84B49EC07FC4B5B4B5B4B90C8FC4B48
ED0FF84B5A4B5A4A13E04A5B4A49151F4A90C9FC4A5ADA3FF817F04A48163F4A5A494916
7F4990C9EA03FF92B9FC5B4919E05B5B5B90BBFC5A5A5A481AC05A5A5ABCFCA41B80A44E
7176F063>I<93B5FC031F14F892B77E020316F0020F16FC023F16FF91B97E4918E049DA
803F80499026F80007804901C00101804990C880D93FFC6F7F728049B4FC90B500C06E80
81486E8381A2486E83A284A3814B5CA37E4B5F7E5D6D616D495C6D1380D907FEC85DD900
F05D91C992C7FC6295B5FC624D5C4D5C624D5C4D5C053F49C8FC94B55A043F14F0033FB6
12C04B92C9FC18FCA2F0FFC019F86F15FE92C7003F6D7E050714E0050114F8716C13FE72
7F7280877280877280A2728087A287A2721580A2EB7FC03801FFF0000701FC19C0487F48
7F4880A24880A2B67EA41C80A34E15005D7E635D6C4D5C92C8FC4A606C01F84B5C6C495D
02C0606C6D4B5C6C01F84B5C6C01FF4AB6C7FC6C02E001075C6D01FF013F14F8011F91B7
5A6D18C0010395C8FC010017FC023F16F002071680DA007F02F8C9FC030391CAFC527378
F063>I<F107FC4F7E191F193F197FA219FF606060A260606060A295B5FC5F5F5FA25F5F
5F5FA2EFFFDF4C139F4C131FEE07FEA2EE0FFCEE1FF8EE3FF0EE7FE0A2EEFFC04B13804B
13004B5A4B5AA24B5A4B5A4B5A4B5AA24A5B4A90C7FC4A5A4A5AA24A5A4A5A4A5A4A5AA2
495B4990C8FC495A495AA2495A495A495A495AA2485B4890C9FC485A485AA2485A485A48
5A485A90BDFCA9CB6C49C7FCB30303BAFCA958717BF063>I<0170181C01FE18FED9FFC0
160702F8163FDAFF80EC03FF03FE49B5FC92B85A62A26262626297C7FC61616161611980
96C8FC18FC18F018C095C9FC17F8178002C101F0CAFC02C0CCFCAEEEFFFE030FEBFFF003
7F14FE02C1B77E02C716E002DF16F891B812FEDC801F7F9226F8000714C003C001018092
C88002FC6F7F4A6F7F02E0834A814A831B8091C97E017E19C090CAFC1BE0A27214F0A31B
F8A41BFCA348B4FC000713C04813F0487F487F5A80A2B5FC80A21BF8A35C1BF0606C4918
E0A25C6C4918C002C05D91C91580D81FF819006D5E6C6C4C5B6C6C606E92B55A6C6D4A5C
6C01F002075C6C01FC4A5C6DB4023F5C6DD9F003B6C7FC6D90B712FC6D5F010317E00100
1780023F03FCC8FC020F15E0020192C9FCDA001F13C04E7376F063>I<94380FFFC04CB5
12FC041FECFF8093B712E0030382030F16FC033F8292B9FC4A4AC66C7F020702E0130F4A
91C700037F4A01FC82027F49140F91B5484A7F4902C05C494A5C93C8B5FC494983495E49
5B495BA2495B90B5FCA2485C725C5A4B6F5B48725B735B7390C7FC484AED03FC96C9FC5A
A45AA292CDFC933801FFF048030FEBFF80043F14F093B612FC4B15FF4B16C04B82B6260F
FC018092271FF0003F13FCDB3FC0010F7F4B486D7F93C76C8003FE6E804B6E805D874B6F
7FA24B83875D8587A24B1880A51CC06C91C9FCA77EA57E811C807EA37E1C00A26C606F5F
7E637E6F5F6D94B55A6D7F6F4A5C6D616D6D4A5C6D6D4A91C7FC6D6D6C011F5B6D6E495B
6DDAF803B55A6E90B712E0021F5F6E5F02034CC8FC020016F8031F15C003034AC9FCDB00
3F13C0527378F063>I<96261FFFF8163E060FB600C0157F4DB700FC15FF051F04FF5C94
B900E05B040306F85B041F06FE5B047F9538FF803F4BBB6C5A0307DCC00102F0B5FC031F
03F0C7001F13F94B92C8000390B6FC92B600F8ED007F4A03C0161F4A92CA7E020F02FC17
034A4A834A02E0834A4A8491B648844992CC7E494A85494A85494A854C85495C49884C86
495C90B68793CEFC488A5D5A8B485CA2488A5DA25A8BA2485CA2F701FE9CC7FC5AA35DA3
B6FCB07EA381A37EA320FE6C6EF301FFA37EA2817E676C6E1CFEA27E6F1B076C1FFC701A
0F7F6D6EF21FF8826DF53FF06D8070F27FE06D6E1AFF6D6E4F13C06D6E4F13806D6F606E
6E4E13006E6E4E5A6E02F84E5A6E02FEF0FFF802036E4D5B6E03E004075B6E03F8041F5B
033F02FF93B55A6F03F0020749C7FC0307DBFFC090B55A030193B712F06F6C61041F1980
04034EC8FC040018F8051F17C005014CC9FCDD000F15E0DE001F01FCCAFC787A75F78F>
67 D<030FB5FC0203B612F8021F15FF91B812E0010317F84917FE011F717E499026FC00
1F8003C0010380496D010014F890B56F7F6F141F727F486E8272808487A27280A26C5C72
806D5BA26D5B6D5BD907FEC9FCEB00F091CAFCA54DB6FC0407B7FC4BB8FC153F4AB9FC14
0F027F158049B6EAE00001074AC7FC011F14F049148090B548C8FC4814F8485C485C485C
485C92C9FC485BA2485BA2B5FC5CA460A36E5D7E606EED0FDF6C6D151F6C6EDA3F9F7F6F
02FFECFF806C6E49011FECFF806C02F890260FFE0F15C06C02FFEB7FFC6C92B5487E6C6C
EEE003011F4C7E010793C7FC010103FC143FD9001F02E0020314809126007FFECCFC5A50
7BCE60>97 D<93381FFFE00303B6FC033F15E092B712F8020716FE021F707E4A17E091B5
D8FE0180499126E0003F7F0107028001077F4991C76C7F4901FC6E7F49496E148049496F
13C08590B54817E0484A81481AF085484A17F885481AFC92C9FC5A7313FE5AA25C5AA21B
FF85A2B5FCA291BBFCA51BFE4ACCFCA67EA3807EA37E817E1BFEF201FF6C807E6F5E6C6E
EE07FE7E6FEE0FFC6D6D161F6D6DEE3FF86D6D6CED7FF06D6E913801FFE06D02F0020713
C06D02FE023F138001009126FFE003B512006E91B65A021F5F020717F0020117C06E6C93
C7FC030F15FC030115C0DB000701F8C8FC50507BCE5B>101 D<ECFFFEB6FCA9C67E131F
7FB3AC953803FFF0063FEBFF804DB612E0050715F8051F15FE057F8194B87E4CD9F80780
4CD9800180DC07FCC7FC4C486E7FEE1FE04C48824C488094C88016FE6F48815E4C83A25E
A25EA25EA493C9FCB3B3A5B8D8F001B812E0A9637879F76E>104
D<DAFFFEEC3FFFB60207B512F8053F14FF4CB712E0040716F8041F16FE4C8293B912C092
B6D8807F809426F8000F80C66C03C0010380011F92C76C806D02FC6E6C7F4C6F7F5E4C6F
14804C6F14C05E93C96C14E01DF086A27414F8A21DFCA2861DFEA4871DFFAF98B512FEA4
1DFCA2621DF8A2621DF0A25014E01DC0705D1D80705D704B1400704B5B705F704AB55A04
FF4A5C05C0495C05F0011F5C05FE90B6C7FC70B75A041F16F87016E004031680DC007F02
FCC8FC051F14E0050101F8C9FC94CCFCB3A5B812F0A9606F7ACD6E>112
D<902601FFF8EB03FFB6021F13E0057F13FC4CB57E4CECFF804C15C04C15E093261FFE3F
13F0EE3FF093267FC07F13F8C66C1580011F4A48B512FC6D5CEDF9FC5E15FB5EEDFFE072
13F8A24C6D13F0A27213E04C6D13C006031300F0007893CAFCA65DB3B3B812FCA9464E7A
CD52>114 D<EDFF80A75CA55CA45CA25CA25CA25CA25C91B5FCA25B5B5B131F5B90B912
C0120FBAFCA7D800070280C8FCB3B3A2F00FF8AE181F6D6E14F0A2183F6D6E14E0187F6D
6EEBFFC0705A6ED9FE0713806E90B612006E5D6E5D6E5D02015D6E6C14C0030F91C7FC03
0013F83D6E7CEC4D>116 D E /Fh 4 84 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00
0A0A798919>58 D<EE3FF00303B5FC031F14C092397FC03FE0913A01FE0007F8DA07F86D
7EDA0FE0EB00FEDA3FC0804AC8EA7F8002FEED3FC0D903FC151F494816E0495A011FEE0F
F05C494816F8495A01FF16074890C9FCA2484817FCA2485A120F49160F121FA25B123F19
F84848161FA44848EE3FF0A3F07FE0A349EEFFC0A24D1380A219004D5AA24D5A4D5A6C7E
4D5A4D5A003F5F6D4B5A001F4CC7FC4C5A6C6C4A5A6D4A5A0007ED1FE06C6C4A5A6CB4EC
FF806C90268003FEC8FC90393FF01FF8010FB512E0010391C9FC9038007FF03E427BBF45
>79 D<49B77E18F818FFD90001D9000113C09438003FE04BEC0FF0727E8502036F7E5DA2
8514075DA3020F4B5A5DA24E5A021F5E4B141F614E5A023F4B5A4B4AC7FCEF03FEEF0FF8
027FEC7FE092B6128005FCC8FC5F9139FF8001FE92C7127F717E717E49824A140FA28413
035CA2171F13075CA2173F130F5CA3011F037F5B4AEE0380A2013F1707053F14004A5E49
6C161EB600E090381FF83E050F5B71B45ACA000113E09438003F8041407DBD45>82
D<DB07FC131C92383FFF8092B5EAE038913A03F803F078913A0FE000F8F8DA1F80133D4A
C7EA1FF0027E140F5C494814074A15E0130349481403A2010F16C05CA3011F1680A38094
C7FC808014FE90380FFFC015FC6DEBFFC016F86D14FE6D806D81023F800207801400030F
7F1500163F707E160F1607A2160312075A5F120EA2001E15075FA24C5A123E003F4B5AA2
6D4AC7FC007F157E6D5C6D495A6D495AD8FCFCEB0FE03AF83F803F8027F01FFFFEC8FCD8
E00713F839C0007FC036427BBF38>I E /Fi 41 122 df<DA07F8EB0FF0DA7FFEEBFFFE
49B500837F903C07F80FCFF00F80903C0FE003FFC003C090261F8007EB000F4948484849
7E017E5C13FE495C1201496D486D5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003
F0001F1807B3AA486C496C497E267FFFE0B500C1B51280A3413B7FBA45>14
D<121C127FEAFF80A213C0A3127F121D1201A412031380A2120713005A120E121E5A5AA2
12300A19798817>44 D<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909
798817>I<EB03F8EB1FFF017F13C09038FE0FE03901F803F048486C7E48486C7E484813
7EA248487FA2003F1580A290C7121F4815C0A64815E0B36C15C0A56C6CEB3F80A3001F15
00A26C6C137EA26C6C5B6C6C485A6C6C485A3900FE0FE090387FFFC0011F90C7FCEB03F8
233A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0
A31C3879B72A>I<EB07F8EB3FFF4913C03901F80FF03903E007F839078003FC48486C7E
A2D81FE07F13F080A46C485AEA07C0C75BA34A5A5D14074A5AEC1FC0EC7F80D91FFEC7FC
5CECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487E
A416C049137F007F1580007EC7FC0078ECFF006C495A121F390F8003F83907F80FF00001
B512C06C6C90C7FCEB0FF8233A7DB72A>51 D<157815F8A214011403A21407A2140F141F
A2143F147B147314F3EB01E314C31303EB07831403130F131E131C133C1378137013F0EA
01E013C012031380EA07005A120E121E5A123812785AB712F8A3C73803F800AB4A7E0103
B512F8A325397EB82A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800F90387E
001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127FEB00
20EB03FF010F13C0484813F090383C03F8496C7E90387000FE49137E49137FED3F80A249
14C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C
6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>54
D<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F4848
7FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F003F147FA26C7E000F14FF9038
E001DF3807F0033903F8079F6CB5121F26007FFE13C0EB1FF8EB0080EC003F1680A31600
5D000F147E487E486C5BA24A5A4A5A49485A6C48485A001E495A260FC07FC7FC3807FFFC
000113F038003FC0233A7DB72A>57 D<1538157CA315FEA34A7EA34A7FA34A7F153FA202
0F7FEC0E1FA2021E7FEC1C0FA2023C7FEC3807A202787FEC7003A202F07FECE001A20101
804A7EA20103814A137FA201078191C7123F91B6FC4981A2010EC7121F011E81011C140F
A2013C8101381407A201788101701403A201F08116011201486C81D80FFE02071380B500
C090B512FEA3373C7DBB3E>65 D<B712C016F816FE000190398001FF806C90C7EA3FE0EE
0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4
EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8
C7FC16F816C036397DB83F>68 D<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F
80EAFFC0A44A5A13806C48485A12786C495A6C495A260FC0FFC7FC3807FFFC000113F038
007F80233B7DB82B>74 D<B591380FFFFE8080C6030013E06EEC3F806EEC1F00170EEBEF
F8EBE7FCA2EBE3FEEBE1FFA201E07F6E7EA26E7EA26E7E6E7EA26E7E6E7EA26E7E6E1380
A2ED7FC0ED3FE0A2ED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F138EA2EE7FCEEE3FEEA2
EE1FFEA2160F1607A216031601A21600486C157E487ED80FFE153EB500E0141EA2170E37
397DB83E>78 D<EC03FF021F13E091B512FC903901FE01FE903A07F8007F80D90FE0EB1F
C0D93F80EB07F049C76C7E01FE6E7E0001824914004848157F0007178049153F000F17C0
49151F001F17E0A24848ED0FF0A3007F17F8491507A300FF17FCAC6C6CED0FF8A4003F17
F06D151F001F17E0A26D153F000F17C0000717806D157F6C6CEDFF0000015E6D14016C6C
4A5A6D6C495A6D6C495A6D6C495AD907F8EB7F80902703FE01FFC7FC0100B512FC021F13
E0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0F
E0EE07F0EE03F817FC17FE1601A217FFA717FEA2160317FC17F8EE07F0EE0FE0EE3FC092
3801FF8091B5EAFE0016F816C091C9FCB3A4487FB6FCA330397DB839>I<B612FEEDFFE0
16F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A
4C5A4C5AEEFF80DB07FEC8FC91B512F816E08291380007F8ED01FE6F7E707EA2707EA270
7EA683A5F00380A217F8160F1807486DD907FC1300B601035B933801FE1E933800FFFECA
EA3FFCEF07F0393B7DB83D>82 D<003FB812E0A3D9E003EB003F90260001FE1307007EEE
03F0007C160100781600A300701770A400F01778481738A4C71600B3B0913807FF80011F
B612E0A335397DB83C>84 D<EB3FE0EBFFFC000313FF390FC03F80EC0FE0486C6C7E1403
6E7EA281380FC0000003C7FCC8FCA414FF130FEB7FF03801FF00EA07FCEA0FF0485A485A
485AA200FF151C90C7FCA21401A3387F8003EC077C3A3FC00E7E383A1FF07C3FF8260FFF
F813F000039038E01FE03A007F800F8026277DA52A>97 D<EA03F012FFA3120F1203B0EC
0FE0EC7FFC01F1B5FC9039F7E03F809039FF801FC09039FE000FE049EB07F049EB03F8A2
49EB01FCA216FE1500A216FFAA16FE1501A216FCA26DEB03F87FED07F06DEB0FE09039EF
801FC09039C7E07F809039C1FFFE009038807FF8C7EA1FC0283B7EB92E>I<EB03FC9038
1FFF80017F13E03901FE01F8EA03F83907F003FCEA0FE0A2EA1FC0123F90388001F8007F
EB0060150090C8FCA25AAA6C7EA3003F140E7F001F141E6D131C6C6C133C6C6C13786C6C
13F03901FF03E039007FFFC0011F1300EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F
150FB0EB07F8EB1FFF017F13CF3901FE03EF3903F800FF4848137F4848133F4848131FA2
4848130FA2127FA290C7FC5AAA7EA27F123F151F6C7E153F6C6C137F6C6C13FF3A03F801
EFF03A01FC07CFFF6CB5128F90383FFE0FD907F013C0283B7DB92E>I<EB07F8EB1FFF01
7F13C03901FC0FE03903F807F03907F003F8380FE001D81FC013FC1400484813FE157E12
7F90C7127FA25AA290B6FCA390C8FCA57EA27FA2003F14077F001F140F6C6C130E6C6C13
1E6D133CD801FC13783900FF01F090387FFFE0011F1380903803FC0020277EA525>I<14
7F903801FF80010713E0EB0FC790383F8FF0140F137E13FCA2EC03C04848C7FCADB512FC
A3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03E090390FF00FF890393FFC1F
FC90B5EA7C7C3A03F81FF0FC3A07F00FE07C3A0FE007F078D9C0031300001F80EB800100
3F80A7001F5CEBC003000F5CEBE0076C6C485A6D485A90B5C7FC380E3FFCEB0FF090C9FC
A4120F7F90B512C06C14F86C14FE6CECFF80000715C03A1F80007FE048C7EA0FF0007E14
03007CEC01F812FC481400A46C1401A2007EEC03F06CEC07E06C6CEB0FC0D80FE0EB3F80
3A07FC01FF000001B512FC6C6C13F0010790C7FC26387EA52A>I<EA03F012FFA3120F12
03B0EC0FF0EC3FFC91B5FC9039F1E03F809039F3801FC09038F7000F13FE496D7EA25BA3
5BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380C8
FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0FF8
A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E38FF03F0A3EB07E0
00FE13C0387C0F80383FFF00EA1FFCEA03F0154984B719>I<EA03F012FFA3120F1203B1
913803FFFCA36E13C06E130015FC4A5A15E04A5A4A5A021FC7FC143E5C5CEBF1FC13F3EB
F7FEEBFF3F01FE7FEBFC1F496C7E01F07F14076E7E6E7E811400157E157F811680ED1FC0
486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0
A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF891B53801FFFE903BF1E03F83
C07F3D0FF3801FC7003F802803F7000FCE131F01FE14DC49D907F8EB0FC0A2495CA3495C
B3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFC91
B5FC9039F1E03F803A0FF3801FC03903F7000F13FE496D7EA25BA35BB3A3486C497EB500
C1B51280A329257EA42E>I<EB03FE90380FFF80013F13E09038FE03F83901F800FC4848
137E48487F4848EB1F80001F15C049130F003F15E0A248C7EA07F0A44815F8A96C15F0A2
6D130F003F15E0A26C6CEB1FC0000F15806D133F6C6CEB7F006C6C13FE3900FE03F89038
7FFFF0011F13C0D903FEC7FC25277EA52A>I<3903F00FE000FFEB7FFC01F1B5FC9039F7
E07F803A07FF801FC03A03FE000FE04914F049EB07F815034914FCA2ED01FEA3ED00FFAA
ED01FEA3ED03FCA26DEB07F87FED0FF06DEB1FE09039FF803FC09039F7E07F809039F1FF
FE009038F07FF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<3807E03F00FFEBFFC0
01E113E09038E3CFF0380FE78F3803EF0F13EE13EC9038FC07E09038F8018091C7FCA35B
B3A2487EB512F0A31C257EA421>114 D<EBFF03000313E7000F13FFEA1F80383E003F48
7F805AA280A27E7E6C90C7FCEA7FC013FE383FFFC06C13F06C13FC00037FC67F010F1380
EB007F143F00E0EB1FC0140FA26C1307A37E15806C130F6C131F6C1400EBC07E38F3FFFC
00E113F038C07F801A277DA521>I<1338A51378A313F8A21201A212031207121FB6FCA3
D801F8C7FCB2EC01C0A81403D800FC1380A2EBFE0790387F0F00EB3FFEEB0FFCEB03F01A
347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA2151FA200
01143F6D13776DEBF7F83B00FE03E7FF8090387FFFC7011F1307D903FCEBE00029267EA4
2E>I<B538807FFEA33A0FF8001FF06C48EB0FE00003EC07C06D148000011500A26D5B00
00140EA2017E5BA2017F133C6D1338A26D6C5AA36D6C5AA214E101075BA2903803F380A2
14F76DB4C7FCA36D5AA2147CA3143827257EA32C>I<B53A1FFFE07FFEA3260FF8009038
001FF86C48017EEB07E018C00003EE0380153E6D15070001027F1400A26D5D00009138FF
800E15EF6DECC01ED97E01141C15C7017FECE03C90263F03831338A2D91F836D5AEC8701
A2D90FC76D5AECCE00A2D907EEEBFDC002FC137DA20103EC7F804A133FA2010192C7FC4A
7FA20100141E4A130E37257EA33C>I<B538807FFEA33A0FF8001FF06C48EB0FE00003EC
07C06D148000011500A26C6C130EA26D131E017E131CA26D5BA2157890381F8070A2ECC0
F0010F5BA2903807E1C0A214F301035BA26DB4C7FCA36D5AA2147CA31438A214781470A2
5CA21301007C5BEAFE035C130749C8FCEAFC1EEA783CEA3FF86C5AEA0FC027357EA32C>
121 D E /Fj 34 122 df<BA12FCB3A23E147DB74F>45 D[<F30FFE517E517FA2517FA2
98B57EA35080A25080A35080A25080A35080A25081A35081A297B77EA34F82A24F82A24F
82A34F82A24F8287A24F486C81A2DF7FFC8287A24F486C81A24E01F08287A24E496C81A2
4E01C08287A24E496C81A24E90C78188A24E486E81A24E486E81A26106FF6F81A24D496E
81A2614D7081A24D496E81A2614D7081A24D90C96C80A24D488689A24D487081A24D4886
89A24C497081A24C498689A24C497081A24C498695BCFCA24C88A24C89A34C89A293BF7E
05F8CB120FA24B497281A24B497281A34B497281A24B497281A294CDFC4B7580A24B4874
81A25E037F7581A24B487481A24A498A8BA24A497481A24A498A708649B67EB900F8040F
BB12E0A991C7001F09F0C71207>163 145 120 272 180 65 D[<BF12C0F6FF801FFCF7
FF8020F020FC20FF21C021F08DC7000303C0C9000715FE0B00810C1F8178810C03817881
788179808E8B7980A27981A28F8BA28F8BA28FAB6BA267A26BA2555DA25592C7FCA2555C
6A679CB65A545D545D545D5492C8FC545C0C7F5C53B612F00B0F15C00B7F92C9FC95BB12
FC20E09DCAFC1FF0F7FF8020F820FF21E006C0C9000115F8E3001F14FE0C036E7E0C0015
E079807914FC798079807981798179818F7981A27A808F8C8FA27A1580A3A112C08CA3A1
12E0ABA112C068A3A1128068A2A11200686B9DB6FC555DA2555D67555D555D555D9CB75A
5493C7FC0C075D0C3F5D0B03B75AC312E06A9FC8FC21FC21F021C056C9FC20F055CAFC1F
80>147 142 120 269 169 I[<98B500F0171F97B700C0EE3F80071F04FC16FF4EB96C5C
061F06E05C95BA00FC5C050307FF5C051F08C05B057F745B4CBC00F85B04079326FE0003
DAFE01B5FC041F0480D9001F6D5A047F03F8C80003148793B70080DB007F13EF030303FC
CA001F90B6FC4B03F01707031F03C017014B92CCFC4B02FC193F92B64885020303E0854A
4B854A4B854A92CD7E4A4A864A4A874D8791B64887495D494B87498B5F4992CF7E498B5E
498B495C8E90B65A8E5A5E488DA25E5A8E485DA3488DA25E5AA27C13009FC8FCA25AA293
D4FCA4B7FCB27EA482A27EA56C22FF70531380A27EA2827EA27E7065A112007E826C69A2
6D6E66220F6D806D69701D1F6D696D6F1C3F71525A7F6D6F525A6D6F636E6E515B71656E
6E636E6E5190C7FC6E6F505A6E6FF27FFC6E03F0505A02006F4F5B6F02FE07075B6F6E4F
5B6F03C0063F5B030703F095B5C8FC6F03FE05035B03006F6C041F5B7003F8047F13F004
1FDBFF800207B55A040704FF49B65A040194B8C9FC706C1AFC051F1AF005031AC0050097
CAFC061F18F8060118C0DE001F4CCBFC070016E0080002F8CCFC>145
146 115 271 172 I[<C212F0A48DA6C7000303F0C97E1D01F5001F0C07801E01787E8B
1F0F8B8B8B797FA2207F203FA2201FA2200F8DA28CA48CA322808CA2F41FF8A57A13C0A4
9EC7FC1C3FA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCAA9538F00007F2007F1B
1F1B07878787A21C7FA21C3FA41C1FAA99CCFCB3AEBDFCA992C8120F>130
141 120 268 149 70 D[<98B500F0171F97B700C04C7E071F04FC16FF4EB96C5C061F06
E05C95BA00FC5C050307FF5C051F08C05B057F745B4CBC00F85B04079326FE0003DAFE01
B5FC041F0480D9001F6D5A047F03F8C80003148793B70080DB007F13EF030303FCCA001F
90B6FC4B03F01707031F03C017014B92CCFC4B02FC193F92B64885020303E0854A4B854A
4B854A92CD7E4A4A864A4A874D8791B64887495D494B87498B5F4992CF7E498B5E498B49
5C8E90B65A8E5A5E488DA25E5A8E485DA3488DA25E5AA27C90C8FC9FCAFCA25AA293D6FC
A4B7FCB27EA3820A07B600C00207B512809DB9FC7EA56C81A36C98C9001F0380C7FCA282
7EA27E82A27E827E827FA26D807F826D817F836D817F6D816E80836E806E806E6F616E15
E06E8102006F616F02FE96B7FC6F6E7E6F03E05F030703F817076F03FE5F0300DBFFC016
3F7003FC93B8FC041FDBFFC00207149F0407DCFF8090B61207040194B7487E706CF2F800
051F50133F050308C0130F050097C71203061F06FC1400060106E0153FDE001F94C9000F
C8FC070004F093C9FC080002FCCEFC>161 146 115 271 187 I[<B6030FB512F092B9FC
A9C7000103F8C8FCB3B3B3B3B3B3AEBC12F0A992C8120F>76 142
121 269 90 73 D[<B6030FB6FC92BAFCA9C7000303F0CEFCB3B3B3B3A3F83FF0A5F87F
E0A620FFA321C0A267A467A367218067A267A267A2679CB5FC210066666666661E7F9BB6
FC1D03650B3F5C9AB6FC1C0799B7FCC1FCA568A5>124 142 120
269 143 76 D[<97387FFFFC073FB612F80603B87E063F17F84DBAFC050F19E0057F19FC
4CBCFC04071BC0041F9226F8003F15F0047F92C7000115FC93B600F8DA003F80030303C0
03076E7E4B92C9000181031F02FC706C14F04B4A71804B02E0050F804AB6487114FF4A4B
71814A92CB6C814A4A72814A4A73804A4A73804A4A73804D8591B6487380498C494B7381
4992CD6C81A2494A7481498D4C87498D4C87498DA290B6487580A2488E4C87482380A248
4B7515C0A34823E0A24C874823F0A44823F8A393CF7E4823FCA7B720FEB36C23FCA37063
A46C23F8A46C6F5115F0A46C23E0A270636C23C0A36C6F511580A26C230070636C6AA26D
6E515CA26D6E98B65AA26D6E505D6D6971616D696D6F4F5D71616D9EC7FC6D6F4F5C6E6E
4F5C6E6E4F5C6E6E96B65A6E676E6E6C05035D6E6F4D5D6E6F4D92C8FC6E6F4D5C6F02FC
057F5C031F6E94B612F06F6E6C03035D030303E0030F15806F03FC037F92C9FC6F6CDAFF
800103B612FC041F03F8013F15F0040792B912C0040198CAFC706C19FC051F19F0050319
80DD003F05F8CBFC060717C0DE003F03F8CCFCDF007F01FCCDFC>151
146 115 271 178 79 D[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020F820FE7A7E21E0C7
000303E0C8000382E2001F810B0115FE776C800C1F8178810C038178818A8E79808E8B8E
8B2380A223C0A28B23E0A523F0AB23E0A423C0A2672380A32300555CA2555CA29CB65A54
5D6A0C075D545D5492C7FC0C7F5C0B03B65A0B1F15F00A03B75A95BC12809EC8FC20FC20
E020800DFCC9FC1FC00CFCCAFC53CBFC06F0D0FCB3B3B0BC12C0A992C8123F>140
142 120 269 162 I[<BE7EF5FF801EFCF6FFC01FF81FFF20E020F820FE7A7EC7000303
E0C8000F16E0E2003F810B0715FC0B00810C3F8078810C07817881788178818E8B79808E
A27981A28FA27981A48FAB6BA3555DA36BA0C9FC676A676A9CB65A6A545D545D0C0F5D54
92CAFC0C7F14FC53B65A0B0715E00B7F5D0A1FB7CBFC95BB12FC20E020800DFCCCFC1FE0
8B1FFC1FFF06E0C86C15C00A0F15F00A03810A00817714FF0B1F81778177818977818D89
8D8A8D8A8DA37881A78EA98EA8A114FC7CEC01FEA1EB03FFA28A8EA2A15B7881A114FE78
180F7881A1EB1FFC7881BC6C6F6FEB3FF8796F137F799239F001FFF079DBFC0713E07992
B612C01F01796C17800E1FEEFE000E035E4AC8003FDF007F15F0D4000715C0E7000749C7
FC>168 144 120 269 178 82 D[<000FC312FCA6488EA404E0C7003F92C7120103FCC8
F0000F03E01C010380767E4AC91A1F02F81E074A8A4A8A4A8A4849797EA291CA87498CA2
498CA3498CA448487A1380A5498CA848487A13C0A6CC99C7FCB3B3B3B3A8031FBD12FEA9
96C9123F>146 140 119 267 165 84 D<93387FFFFE033FB612F80203B87E020F17E002
7F17FC91BAFC010319C04985499126E0003F14F84901F8C7000780496D020180496D6E6C
7F6F6F8090B66F80706E804872807083857380A2888588A26C5D866D91C981A26D5B6D5B
6D5B010313E00100138091CBFCA60603B7FC050FB8FC0403B9FC167F0307BAFC153F4ABB
FC020FEEC07F023FEDE00091B648C7FC010315F0491580011F4AC8FC4914F84914E090B6
5A4892C9FC485C485C485CA2485C485CA25A5DA2B6FC5DA497B6FCA361816C60A26C6E5D
616C6EED1FEF6FDB3FCF806C6E037F15F06C6E912601FF8F14FF6C6E6C0107010FEDFFC0
6C03E090381FFE076C9227FC01FFFC17E06D91B6487E011F4D7E6DEFC00001034D7FD900
7F4BC7121F020F03F0020715C0020003C0EC003F030301FCCDFC6B5F79DD73>97
D[<ED0FF8017FB5FCB7FCAAEA003F1307A27FB3B196380FFFF04EB67E061F15F895B712
FE0503EEFFC0050F17F0053F17FC94BAFC04F9DAE0038104FB49C7003F8093B500F0020F
14F006C002038095C86C8005FC6F804D043F7F05E0854D70804D708094CA7E4C864C7180
A28B888BA27680A22080A320C0A28920E0A520F0B020E0A520C09AB6FCA22080A22000A2
6467A2525CA267704D5C82714C5C525C714C5C7196C7FC05F84C5B714BB55ADCDFFE4B5C
93268FFF80020F5C040701E0023F5C4B6C01FC91B61280709026FF800F92C8FC4B6C6C90
B712FC4B6D5F4B010F17E04B010394C9FC4B010016FC4B023F15E092C800074ACAFC90CB
6C1380>116 144 121 270 132 I<94383FFFFC0407B612F8047FEDFF800303B812E003
0F17FC037F834ABA7E4A85020F854A9126FE000380027F02E0D9007F7F91B6008091B57E
494AC75A4902F883494A5C495C494A4A80495C5B93C8FC90B6FC485CA2485C735C485C73
5C5A735C484A705B745B080F138048DF03FEC7FC97C9FCA2485CA5B6FCB07EA281A37EA3
6C80A37E6FF07F806CF3FFC0817E6F5F6C1C806C6F5E1D006D6E5E6D6E4C5A6D6E161F6D
6E4C5A6D6E4C5A6D02FF4C5A6D6F14036D03E0020F5B6E02FC027F5B6E9126FFC007B55A
020F92B648C7FC6E600201606E6C17E0031F178003034CC8FCDB007F15F0040F1580DC00
3F01E0C9FC5A5F78DD6A>I[<F507FC093FB5FC087FB6FCAAF2001F1B03A287B3B194381F
FFE00407B512FE047FECFFE00303B712F8030F16FE037FEEFF814AB912E14A18F9020FDB
001F13FD023F02F0010190B6FC4A02C0EB003F91B6C8120F4902FC1503494A814902E081
494A163F4985494A824991CA7E90B55A87485C5AA2485CA25A5D5AA35AA25D5AA5B6FCB0
7EA57E81A27EA37E817EA27E816C62636C6E5F7F6F5F6D6E5E6D6E4BB6FC6D606D02F04B
816D6E151F6D6E4BEDFFC06D02FF4AB912F0023F02C0010F13FB6E02FC90B512F3020791
B712C36E18830200EFFE03033F16F8030716E003001600041F14F8DC007F90C70380C7FC
>116 144 120 270 132 I<94383FFFE0040FB6FC93B712F0030716FE031F707E92B912
E04A18F8020784021FDAFC0114FF4A9126C0003F8091B6C7000F804902FC020380494A02
0080494A6F7F494A81494A6F7F494A8393C97E49727F90B548198086484A19C05A7414E0
485CA2487314F05D5AA27513F85AA3485CA27513FCA3B6FCA392BBFCA51DF8A203E0CDFC
A67EA4817EA47E817EF407F86C80F40FFC7E6F181F7E6C6EF03FF8A26D6EEF7FF06D6E17
FF704C13E06D6E4C13C06D6E5E6D6E041F13806D02FF4C13006D03C0EDFFFE6D03F00203
5B023F02FC021F5B6E9126FFE001B55A020792B75A6E1980020096C7FC033F17FC030717
F003011780DB003F03FCC8FC040315E0DC000F01FCC9FC5E5F79DD6D>I[<95383FFFC005
0FB512F894B7FC040716C0041F8293B812F84B83030783031FDAFC077F4BECC00F4B49C6
48148092B55A4A02F04914C04A5C4A4A4914E04A5C5C94C7FC5C5E5C5E91B56F14C0A273
1480495C731400735B735B070013F0F23FC097C8FCB3A3BA12FCAAD8000102FCCBFCB3B3
B3B2007FB9FCA99138800007>83 144 120 271 73 I<F57FE093260FFFFE923807FFF8
4BB600F0021F13FE031F03FF91B6FC92B8D8E00315800203DDF80715C0020FEFFE1F023F
DDFFBF15E04A95B7FC91B6D8803FDBF83F13F001039126F8000315C04902E00100150049
0280023F495B4991C86C6D7F49496F1480A249496F02C014E090B5736C13C04B6F814875
6C13809A3803FE00489838F800784B6F93C7FC4887A44887AA6C63A46C636F5D6C63A26C
636F5D6D626D6D4B5CA26D6D4B91C9FC6D6E4A5B6D02E091B55A6D02F801035C6D9126FF
803F14E04992B75A496150CAFCD90FF317F8D91FE017E0031F93CBFC013F010115F0DB00
0F49CCFC93CFFC137FA413FF80A280A280806E7E15F06D90B812F8F2FFF01BFF1CE06D1A
FC1CFF6D1BC0896D1BF8896D876D876D886D886E870103BDFC010F88133F90BE7E5A4802
E0C9001F814891CB7E4801FC060780484918004849193F884849737F88A2B55A88A66E61
6C65A26C6D4F5B6E616C656E616C6D4F5B6C6D6C4DB55A6C6E4D5C6C02F0050F5C6C02FC
053F91C7FC6DD9FF804BB55A6D02F8031F5C010FDAFFE00107B612F0010392B912C00100
98C8FC023F19FC020F19F002011980DA001F05F8C9FC030094CAFC040115806C8879DD77
>I[<ED0FF8017FB5FCB7FCAAEA003F1307A27FB3B197B5FC070F14F8077F14FF4EB712C0
060716F0061F82067F8295B87E4D49C680050701E0013F804D90C76C80DD1FFC6E80DD3F
F0804D4883604DC86C80EEF9FEDCFBFC845F16FF4D815F8A5F5FA294C9FCA35EA45EB3B3
AEB900F0017FB812F8A9912680001F9438C0000F>117 143 119
270 132 I[<EC3FE0903801FFFC497F010F6D7E498049804980A290B67E4881A34881A9
6C5DA36C5D6D5CA26D5C6D5C6D5C010349C8FC6D5B9038003FE091CAFCB2ED0FF8013FB5
FC007FB6FCAAEA003F1307A27FB3B3B3AEB912C0A991C7123F>50
144 119 271 66 I[<ED0FF8017FB5FCB7FCAAEA003F1307A27FB3B297261FFFF0EB3FF0
99B6FCA9080092C8FC093F13F01DC0515B50B5C9FC5013FC505B505B083F5B50138097B5
CAFC4F5B07075B4F13F04F5B4F5B96B55A4E49CBFC4E5B4E5B061F5B4E13C04E5B95B5CC
FC05035B4D7F4D804D80057F8094B6FC04F98104FB8193B77EA28686878717F84D814D6C
804D6C80DD001F804C7F4C824C6D804C6D81728184887380738085887380738073818589
7381748074808689748074807481868A7481758098B612FCB900C0013F92B512C0A991C7
003F9438E0000F>114 143 121 270 125 107 D[<ED0FF8017FB5FCB7FCAAEA003F1307
A27FB3B3B3B3B3B3AAB912E0A991C7121F>51 143 119 270 66
I<DB1FF092B56C94383FFFE0017FB5030F02FC0403B6FCB7037FDAFF80031F15E04EB700
E0037F15F8060704F84AB712FE061F700207824E704A8395B9023F834D02006F49D9C03F
804D01E0011F6E9027FFF80007804D01806D6E4801E06D80DD0FFCC76C6E4890C76C80D8
003F4B484E5A0107DB3FE06E9126F80FF86E804D484E5A6D4B486E6E48486F7FDCF1FEC8
EE7F804D97C9FC04F3734885DCF7F8725A4D6F4B82DCFFE061A1814D614D61A394CA5DA2
4C62A54C97CAFCB3B3ADB900F0013FB800FC010FB9FCA9912680001F9426E000079438F8
0001B85D77DCC7>I<DB1FF092B5FC017FB5030F14F8B7037F14FF4EB712C0060716F006
1F82067F8295B87E4D49C680050701E0013F804D90C76C80DD1FFC6E80D8003FDB3FF080
01074B4883606D4BC86C80EEF1FEDCF3FC845F16F74D81EEFFE08A5F5FA294C9FCA35EA4
5EB3B3AEB900F0017FB812F8A9912680001F9438C0000F755D77DC84>I<94380FFFF004
03B612C0043F15FC4BB87E030F17F0033F17FC92BAFC020319C0020F9126FC003F14F04A
02C00103804A91C88091B500FC033F13FF4902F0030F80494A6F80494A6F80494A6F8049
91CA8049874B834949717F90B586481D804B83481DC0A2484A7114E0A2481DF0A2481DF8
A24B83481DFCA4481DFEA5B61BFFAF6C1DFEA56C1DFC6F5FA26C1DF8A36C1DF06F5F6C1D
E0A26C1DC06F5F6C1D806F5F6C1D006D6D94B55A6D63705D6D6E4B5C6D6E4B5C6D02F803
1F5C6D6E4B5C6D02FF92B65A6D6C02E001074AC7FC6E02FC013F5C020F91B812F06E6102
0119806E6C4DC8FC031F17F8030317C0DB007F4BC9FC040715E0DC001F01F8CAFC685F79
DD77>I<DB0FF8913807FFF0017FB54AB612C0B7020F15F8067F15FF4DB812C0050717F0
051F17FC057F17FF04F9BA12C004FBDAE0078193B548C78106F0021F80D8003F04806E80
01074BC80003804D6F806D03F06F814D70804D854D708094CA7E4C864C838B7680A27680
A3761580A220C0A288A220E0A48920F0B020E09AB6FCA420C0A2642080A2642000A2525C
A2676467704D5C705F7161525C7193B65A714B92C7FC716005FC03075C714B5C716C4A5C
06E0027F5C06F80103B6128004FD9026FF801F92C8FCDCFC7F90B712FC715F050F17E005
0394C9FC050016FC063F15E006074ACAFCDE007F138096CDFCB3ABB912F0A9913880001F
748579DC84>I<DB3FE0903801FFE0017FB5020F13FEB7023F6D7E95B612E04D15F84D81
050F814D814D01871480DEF80714C094387FE00F4D484814E0D8003F02E1138001074B48
4814F016E36D5DEEE7F85F16EF5F16FF4D6D14E0A25F7314C094C76C1480731400735B73
5B4CED3FF097C8FCA35EA65EB3B3A8B912FEA991C7120F545D79DC62>114
D<92260FFFFE147C0203B638F001FE021FEDFE0791B8129F010317FF130F5B017F9038FC
000F90B50080EB007F4801FCC8121F4801F01507484915014A814849167F4890CA123F19
1F5A49170F127FA3190712FF7FA280806E705A02F893C8FC14FEECFFC015FC6CECFFE0EE
FF8017FC6CEEFFE018FC6CEFFF8019E06C18F8856C18FF6C856C856C19F06D84011F846D
8413036D84D9003F1880140F020118C0EC003F030117E0ED0007DC001F15F01700181F06
0714F81801D83F8082486C173F00FF84857F85A26D83A36D19F0A27FA26D4D13E07F1BC0
806E4C13806E5E6E4C130002FC5E6E4C5ADAFFC002035B03F0021F5B9226FF8003B55A93
B75A1A80D9FC7F94C7FCD9F81F16FCD9E00716F0D98001168090C7003F02FCC8FC007C02
0191C9FC4D5F78DD5E>I[<4BB47EA75DA65DA35DA35DA35DA25DA292B5FC5CA25C5C5C5C
5C5C91B6FC5B1307131F017F92B612FC0007BAFCBBFCA8C76C0280C9FCB3B3A9F2FFC0B1
616E188083A24F130080715B6E5F71130F6E6E495A6E6E495A6E9138FF81FF95B55A6E5F
033F5E6F5E030793C7FC030115FC6F6C14F0040F14C09326007FFEC8FC>74
132 124 258 92 I<DB0FFCF007FE017FB5053FB5FCB7047FB6FCAAD8003FF0001F0107
1903A26D85B3B3AE63A463A363A26D61A263636D6E93B6FC505A6E050381505A6E6DDB1F
F815E06E6E4A48EDFFF86E02E049B45A05FE010F5B020391B75A6E606E5F033F16F8030F
16E003011680DB003F4AC7FC040002E004E0C7FC755E77DC84>I<D8FFFE91267FFF8091
2601FFE0EBFFC090B894B6FCA9D800034ACA000791C7FC0A0013F06D6E61A26D6F4C5BA2
836E4F5B836E4F90C8FCA26E6E4C5AA26E6E4C5AA26E6E4C5AA2836E4F5A836E4F5AA26E
6F4A5BA26F6E4A5BA26F6E4A90C9FCA26F6E4A5AA2846F4D5A846F4D5AA26F6E4A5AA26F
6E4A5AA26F6F485BA219C0704B5B19E0704B90CAFCA2706E485AA2706E485AA2706E485A
A2706E485AA219FF704B5AA2705EA2715DA27192CBFCA2715CA3715CA2715CA2715CA271
5CA2715CA2725BA37290CCFCA2725AF007F8725D7BDB7D>I<D8FFFC49B5D91FFFDAFFFE
913B07FFC001FF8090B892B694B6FCA9D8000702F8C8000102F0C9000791C7FC706F9638
007FF0896D575A70707F6D6A70706D5EA26D565B716F7F6E9EC8FC71725D636E555A714B
806E687172151F98B6FC6E555A714A816E687172157F626E555A714A6D7F6E68714B6C6D
5C1A0F6E545B7249486C7F6F9CC9FC724A6C6E5B1A3F6F535A7249486C806F66724A6C6E
131F1AFF6F6E505A4F496C806F6606FC4A6C6E137F616F02FE505A4F90C76C7F6F6606FF
496E6D5A190F6F038F4E5BDF9FFC6E13FF709ACAFCDFFFF86E1487A2704B6EEC8FFE20CF
7064506E14FF70645080A270645080706497C97EA270644F8270644F82A27198CBFC4F82
71624F82A271624F8271624F82A27149705B71627148CBEA3FC0A15D7BDBAC>I<D8FFFE
91267FFFC0912601FFE0EBFFC090B894B6FCA9D800034ACA000791C7FC0A0013F06D6E61
A26D6F4C5BA26E6E4C5BA2836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E4C5AA2
6E6E4C5AA2725C6E62846F4D5B846F4D90C9FCA26F6E4A5AA26F6E4A5AA26F6E4A5AA26F
6E4A5AA2846F4D5A856F4C5BA2706E485BA2706E4890CAFCA2706E485AA2706E485AA219
FC704B5A19FE704B5AA27091B55AA2705EA2715DA27192CBFCA3715CA2715CA2715CA271
5CA2715CA2715CA3725BA27290CCFCA2725AA261A24E5AA24E5AA218FF61A2017F4B5B38
03FFE0486D4A5B487F486D4A90CDFC487F486D4A5AA24D5AB67E4D5AA24D5A17FF4C5B60
4B485B6C5D041F90CEFC4A495A6C49495A903AFDF801FFF8271FFFF0075B6CD9E03F5B91
B65A6C93CFFC6C5DC615F86D14E0011F1480010749D0FC010013E072857BDB7D>121
D E /Fk 55 122 df<DBFFF8EB3FF0021F9039FE03FFFC027FD9FF8F7F49B9FC0107D9C0
3F01F113804948C66C1381D91FF8494913C0D93FE0EB7FFE495A01FF15FC5C484C6C1380
91C7003F6D1300197E041F91C7FC160FA9BAFCA50001902780000FFCC8FCB3AC007FD9FE
03B512FCA542407EBF3D>11 D<EDFFF8020F13FF027F8049B67E01079038C01FE04948C6
6C7ED91FF8497ED93FE0133F4948497E13FF5C5A91C7FCA2705A705A705A705A93C8FCA5
EE03FCB8FCA50001903880001F160FB3AB007FD9FE03B512F0A534407EBF3A>I<B612E0
A91B097F9823>45 D<EA07C0EA1FF0EA3FF8EA7FFCA2EAFFFEA5EA7FFCA2EA3FF8EA1FF0
EA07C00F0F798E1D>I<ECFFE0010713FC011F13FF017F14C0D9FFE07F489038803FF03A
03FE000FF848486D7EA248486D7E001F81A348486D1380A3007F16C0A500FF16E0B3A200
7F16C0A5003F16806D5BA2001F1600A2000F5D6D13076C6C495A6C6C495A6C6D485A6C90
38E0FFE06DB55A011F91C7FC010713FC010013E02B3D7CBB34>48
D<140F5C147F495A130F48B5FCB6FCA313F7EAFE071200B3B3A8007FB612F8A5253C79BB
34>I<903807FF80013F13F890B512FE00036E7E4881260FF80F7F261FC0037F486CC67F
486C6D7E6D8000FF143F6D80811780A281A26C5A6C5A6C5AEA0780C85A1700A24B5AA25E
157F5E4B5A4A5B5E4A5B4A48C7FC4A5A4A5A5DEC3FC04A5A9139FF000F80EB01FC495A49
48EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4293C7BBB34>
I<903801FFE0010F13FE013F6D7E90B612E04801017F3A03FC007FF8D807F0806D6D7E48
7E6D80486C7FA3148014005DA26C485C6C5A6C485CC8127F5E4B5A4A5B4A5B020F90C7FC
903807FFFE15F815FEEDFFC0D900037F9138007FF86F7E826F7E1780A26F13C0A2D807C0
15E0EA1FF0487E487EA2487EA317C0A25D6C4815805B494913006C485C6C6C495A3A0FFE
01FFF86CB65A6C5DC61580011F01FCC7FC010313E02B3D7CBB34>I<ED01F815031507A2
150F151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0EB03E0
1307EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB812F8A5
C8387FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90B6FC5E
5E5E5E93C7FC5D5D5D15E0158002FCC8FC0180C9FCA8903881FFC0018F13FC019F13FF90
B67E020113E0D9F8007F01E06D7E49133F49806CC77FC8121F82A31780A2EA0F80487E48
7E487E487EA31700A349495A6C5A495C6CC7127F6D495A261FE0015B260FFC075B6CB65A
6C92C7FCC614FC013F13F0010790C8FC293D7BBB34>I<EC07FF023F13C049B512F00107
8049EB03FC90383FF80090397FE001FE9038FFC0034849487E48495AA2485A120FA2485A
6F5A003F6E5A6F5A92C8FC485AA21402EC3FFE00FF496C7E01F9B512E001FB809138E03F
F89039FF800FFC4A6C7E825B6F13804915C0A317E05BA4127FA5123FA26D15C0121FA200
0F4A13806D150012076C6C495A6C6D485A6C9038E07FF86DB55A6D5C6D1480010749C7FC
010013F02B3D7CBB34>I<ECFFF0010713FE011F6D7E017F14E09039FFC07FF03A01FE00
1FF848486D7E48486D7E1503485A8281121F7FA27F7F6D6C5A02E05B14F86E485A6C9038
FF0FF8EDDFF06CECFFE05E6C5D7E6C816D14F06D808290B67E48813807FE7F48486C1480
261FF80F14C0EBF0034848C6FC007F6E13E049131F150748487F1500167FA2163FA217C0
7F127FEE7F807F6C6CECFF006C6C495A01FE13073A0FFFC03FFC6C90B512F000015D6C6C
1480011F49C7FC010113E02B3D7CBB34>56 D<903801FFE0010F13FC013F13FF90B612C0
4801E07F489038003FF048486D7E000F6E7E485A6F7E123F48488081178012FFA217C0A5
17E0A4007F5CA4003F5C6C7E5D6C7E00075C3903FF80FB6C13FF6C6C13F36D13C3010F01
8313C090380008031400A24B1380EA03F0487E486C1500487E4B5AA25E151F4B5A495C6C
48EBFFE049485B2607FC0F5B6CB6C7FC6C14FC6C14F06D13C0D90FFEC8FC2B3D7CBB34>
I<EA07C0EA1FF0EA3FF8EA7FFCA2EAFFFEA5EA7FFCA2EA3FF8EA1FF0EA07C0C7FCAAEA07
C0EA1FF0EA3FF8EA7FFCA2EAFFFEA5EA7FFCA2EA3FF8EA1FF0EA07C00F2879A71D>I<16
FCA24B7EA24B7EA34B7FA24B7FA34B7FA24B7FA34B7F157D03FD7F15F915F8020180EDF0
7F0203804B7E02078115C082020F814B7E021F811500824A81023E7F027E81147C8202FC
814A7F01018291B7FCA24982A2498302C0C7121F010F835C83011F8391C87E4983133E83
017E83017C81B500FC49B612FCA5463F7CBE4F>65 D<B812F8EFFF8018F018FC8426003F
FEC7EA3FFF7113807113C07113E08319F0A27113F8A719F05FA24D13E019C04D13804D13
00EF7FFE4C485A91B712F0188018F818FE4AC7380FFF807113C07113E07113F07113F819
FC187F19FEA219FFA38460A419FEA218FF19FC4D13F85F4D13F0053F13E0BA12C0190018
FC18F095C7FC403E7DBD4A>I<922607FFC0130E92B500FC131E020702FF137E023FEDC0
FE91B712F101039138801FFB499039F80003FF4901E01300013F0180147F4948C8121F49
48150F48491507484915035C481701485B1800485B197E4890CAFCA2193E5AA25B190012
FFAC127FA26D173EA27EA36C6D167E197C6C7F19FC6C6D16F86C17016E16F06C6D15036C
6DED07E06D6CED0FC06D6C6CEC3F80010F01E0EC7F006D01F8EB03FE6D9039FF801FFC01
0091B55A023F15E002071580020002FCC7FC030713E03F407ABE4C>I<B812F8EFFF8018
F018FC18FF26003FFEC76C13C0050F7F05037F05007F727E727E727E721380841AC0841A
E0A21AF084A21AF8A41AFCA484A560A41AF8A41AF0A2601AE0A24E13C0A24E13804E1300
A2F07FFE4E5A4D5B050F13E0057F5BBA5A4EC7FC18F818C005F8C8FC463E7DBD50>I<BA
FCA41980D8003F90C7123F17071701EF007F183FA2181FF00FC0A31807EE07C0A3F003E0
A3160F95C7FC161F163F16FF92B5FCA51500163F161F040F147CA2160719F8A593C71201
A219F01803A21807A2180FF01FE0183F18FF1703171FBAFCA219C0A33E3D7DBC45>I<B9
12FEA484D8003F90C77E170F1703170084A284F01F80A3180FA2EE07C0A2F007C0A4040F
90C7FCA2161F163F16FF92B5FCA51500163F161F160FA21607A693C9FCACB712F0A53A3D
7DBC42>I<922607FFC0130E92B500FC131E020702FF137E023FEDC0FE91B712F1010391
38801FFB499039F80003FF4901E01300013F0180147F4948C8121F4948150F4849150748
4915035C481701485B1800485B197E4890CAFCA2193E5AA25B96C7FC12FFAB040FB612FC
127FA27FA26C92C7387FFE00A2807EA26C7FA26C7F7E806C7F6C7F6D6C15FF6D6C7E010F
01E05B6D01FC13076D9038FFC01F010091B512E3023F15C10207ED007E020002FC130E03
0701C090C7FC46407ABE52>I<B712C0A5D8003F90C7FCB3B3B0B712C0A5223E7DBD28>
73 D<B700C090B6FCA5D8003F90C8D801FCC7FCF007F84E5A4E5AF03F804EC8FC18FE4D
5AEF07F84D5A4D5AEF3F804DC9FC17FEEE03FC4C5A4C5AEE1FC04C5A4C7E4C7E15034B7F
4B7F5D4B7F4B7F03FE7F4B7E4B6C7F03E0804B6C7F4B7E4B6C7F84707F82707F84717F83
85717F717F8385717F83717F85727F84B7D8C00FB612C0A54A3E7DBD52>75
D<B712F0A5D8003F90C9FCB3AD183EA4187E187CA418FCA21701A2EF03F8A21707170F17
1F177F17FF1607B9FC18F0A4373E7DBD3F>I<B66C040FB512F06F5EA26F5EA2D8003FF2
C0006F167BA26E6C16F3A26E6CED01E3A26E6CED03C3A36E6CED0783A26E6DEC0F03A26E
6D141EA26E6D143CA36E6D1478A26F6C14F0A26F6CEB01E0A26F6CEB03C0A36F6CEB0780
A26F9038800F00A26FEBC01EA26F6D5AA36F6D5AA2706C5AA293383FFDE0A270B45AA370
5BA27090C7FCA2705AA2B626C001FC010FB612F0A3705A17705C3E7DBD63>I<ED3FFF02
03B512F0021F14FE027F6E7E902701FFF80713E00107D9C00013F84990C7EA3FFCD93FFE
6EB4FCD97FF802077F49486E7F48844A8048496E7F48844A157F4884488491C9123FA248
84A34848701380A400FF19C0AD007F1980A26D5EA26C1900A26E5D6C60A26C6D4B5AA26C
6D4A5B6C606E5C6C6D4A5B6C6D4A5B6D6C4A5B6D6C4A90C7FC6D01C0EBFFFE0107D9F807
13F8010190B612E06D5E021F4AC8FC020314F0DA003F90C9FC42407ABE4F>79
D<B812F017FF18C018F018FC28003FFE00017F9338003FFF7113807113C07113E0A27113
F0A319F8A819F0A34D13E019C05F4D13804D13004CB45A91B712F860188005FCC7FC92CA
FCB3A4B712C0A53D3E7DBD47>I<B87E17FCEFFF8018F08428003FFE000113FE9338003F
FF717F717F717FA2717FA285A761A34D5B614D5B4D90C8FCEF7FFE933803FFFC91B712F0
18C04DC9FC717E9126FE000F7F040313F0707F707F177F84A2717EA685A6F207C019C0A2
71140F07E01380B76C6CEBF01F719038FC3F007190B5FC05005C063F13F8CB000113E04A
3F7DBD4E>82 D<903A03FFC001C0011FEBF803017FEBFE0748B6129F4815FF481300D80F
FC130FD81FF01303814848EB007FA24848143F161FA200FF150FA27F16077FA213FC6D91
C7FCEBFFE06C13FF15F015FF6C15C016F06C816C816C816C816C16806C16C0013F15E07F
010315F0EB001F1400030F13F815031500167F127800F8153FA2161FA27E17F0A27E163F
6C16E07F01E0EC7FC001F8ECFF8001FE5B9026FFE00F130091B55A486C14F8D8F81F5CD8
F00314C027E0003FFEC7FC2D407ABE3A>I<003FB912FCA5903BFE007FFE007FD87FF0EE
0FFE01C0160349160190C71500007E187EA3007C183EA400FC183F48181FA5C81600B3AF
011FB712F8A5403D7CBC49>I<B700C090B61280A5D8003F90C9003EC7FCB3B3A4197E7F
197C816D17FC616D6D14014E5A6D6D4A5A6D6D140F6D6DEC3FC0DA7FFEECFF8091273FFF
C00F90C8FC020F90B55A020315F8020015E0031F1480030101F8C9FC493F7DBD50>I<90
3807FFC0013F13F848B6FC48812607FE037F260FF8007F6DEB3FF0486C806F7EA36F7EA2
6C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F4813E0000F1380381FFE00485A
5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01FB13FE391FFF07F36CEBFFE100
031480C6EC003FD91FF890C7FC2F2B7DA933>97 D<13FFB5FCA512077EAFEDFFE0020713
FC021FEBFF80027F80DAFF8113F09139FC003FF802F06D7E4A6D7E4A13074A80701380A2
18C082A318E0AA18C0A25E1880A218005E6E5C6E495A6E495A02FCEB7FF0903AFCFF01FF
E0496CB55AD9F01F91C7FCD9E00713FCC7000113C033407DBE3A>I<EC7FF00107B5FC01
1F14C0017F14E09039FFF01FF0489038800FF848EB001F4848EB3FFC120F485AA2485AA2
007FEC1FF849EB0FF0ED03C000FF91C7FCAB127F7FA3003F153E7F001F157E6C6C147C6C
6C14FC91388001F86C9038C003F0C69038F81FE06DB512C0011F14800107EBFE00903800
7FF0272B7DA92E>I<EE07F8ED07FFA5ED003F161FAFEC7FF0903807FFFE011FEBFF9F01
7F14DF9039FFF01FFF48EBC00348EB00014848EB007F485A001F153F5B123FA2127F5BA2
12FFAA127FA37F123FA26C6C147F120F6D14FF6C6C01037F6C6D48EBFFE06CEBF03F6C6C
B512BF6D143F010713FC010001E0EBE00033407DBE3A>I<ECFFF0010713FE011F6D7E01
7F809039FFE07FE0489038801FF048496C7E48486D7E48486D7E121F491301003F81A248
5A6F1380A212FFA290B7FCA401F0C9FCA5127FA27F123FEE0F806C7E161F6C6C15006C6C
5C6C6D137E6C9038E001FC6C9038F80FF8013FB55A6D14C0010391C7FC9038007FF8292B
7DA930>I<EC07FE91387FFF8049B512C0010714E090390FFE3FF0EB1FF090393FE07FF8
EB7FC013FF1480A2489038003FF0ED1FE0ED0FC092C7FCAAB612E0A500010180C7FCB3AC
007FEBFF80A525407DBF20>I<903A03FF8007F0013F9038F83FF8499038FCFFFC48B712
FE48018313F93A07FC007FC34848EB3FE1001FEDF1FC4990381FF0F81700003F81A7001F
5DA26D133F000F5D6C6C495A3A03FF83FF8091B5C7FC4814FC01BF5BD80F03138090CAFC
A2487EA27F13F06CB6FC16F016FC6C15FF17806C16C06C16E01207001F16F0393FE00003
4848EB003F49EC1FF800FF150F90C81207A56C6CEC0FF06D141F003F16E001F0147FD81F
FC903801FFC02707FF800F13006C90B55AC615F8013F14E0010101FCC7FC2F3D7DA834>
I<13FFB5FCA512077EAFED1FF8EDFFFE02036D7E4A80DA0FE07F91381F007F023C805C4A
6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5333F7CBE3A>I<EA01F0EA07FC487E487EA248
1380A56C1300A26C5A6C5AEA01F0C8FCA813FFB5FCA512077EB3ABB512F8A515407CBF1D
>I<EC0F80EC3FE0EC7FF0ECFFF8A24913FCA56D13F8A2EC7FF0EC3FE0EC0F8091C7FCA8
EC03FCEB07FFA5EB001F140FB3B3A2EA1F80EA3FC0EA7FE0EAFFF0EC1FF8A3EC3FF015E0
397FE07FC0393FC1FF806CB512006C5B6C13F8C613801E5386BF20>I<13FFB5FCA51207
7EB092380FFFFEA5DB01FEC7FC4B5AED07F0ED1FE04B5A4B5A4BC8FCEC03FC4A5A4A5A14
1FEC7FF84A7EA2818102E77F02C37F148102007F826F7E6F7E151F6F7E826F7F6F7F816F
7FB5D8FC07EBFFC0A5323F7DBE37>I<13FFB5FCA512077EB3B3AFB512FCA5163F7CBE1D>
I<01FFD91FF8ECFFC0B590B5010713F80203DAC01F13FE4A6E487FDA0FE09026F07F077F
91261F003FEBF8010007013EDAF9F0806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA3
4A5CB3A4B5D8FE07B5D8F03FEBFF80A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E
4A80DA0FE07F91381F007F0007013C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5
33297CA83A>I<EC7FF0903803FFFE011FEBFFC0017F14F09039FFE03FF8489038800FFC
3A03FE0003FE48486D7E000F168048486D13C0A2003F16E049147F007F16F0A400FF16F8
AA007F16F0A46C6CECFFE0A2001F16C06C6C491380A26C6C4913003A03FF800FFE6C9038
E03FFC6C6CB512F0011F14C0010791C7FC9038007FF02D2B7DA934>I<01FFEBFFE0B500
0713FC021FEBFF80027F80DAFF8113F09139FC007FF8000301F06D7E4A6D7E4A130F4A6D
7E1880A27013C0A38218E0AA4C13C0A318805E18005E6E5C6E495A6E495A02FCEBFFF0DA
FF035B92B55A029F91C7FC028713FC028113C00280C9FCACB512FEA5333B7DA83A>I<DA
7FE01378902607FFFC13F8011FEBFF01017F14819039FFF81FC3489038E007E748903880
03F74890380001FF48487F001F157F5B003F153F5B127F161FA2485AAA127F7FA36C6C14
3F167F121F6C6C14FF6D5B6C6D5A6CEBC00F6CEBF03F6C6CB512BF6DEBFE3F010713F801
0013C091C7FCAC030FB512E0A5333B7DA837>I<3901FE03FC00FF90380FFF804A13C04A
13E091387E3FF09138F87FF8000713F03803FFE0A214C0A29138803FF0ED1FE0ED078092
C7FC91C8FCB3A3B6FCA525297DA82B>I<90383FFC1E48B512FE12075A381FF00F383F80
0148C7FC007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15C06C14F06C806C
806C806C80C61580131F1300020713C014000078147F00F8143F151F7EA27E16806C143F
6D140001E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7FC222B7DA929>I<EB
07C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA40001EBC000B3151FA9
6CEBE03EA2017F137EECF8FC90383FFFF86D13F0010713E001001380203B7EB929>I<D9
FF80EB0FF8B5EB0FFFA50007EC007F6C153FB3A5167FA316FF6C5C4B7F6C903AC007DFFF
E09138F01F9F6DB5121F6D13FE010F13F8010101E0EBE000332A7CA83A>I<B500FC9038
3FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B01
1F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8
FCA26E5AA26E5AA26E5AA26E5AA232287EA737>I<B53CFC3FFFFC03FFFEA50003D98000
9039C0000F806E161F6C037F15006E496C5B6C183E836E48157E017F177C6E486D13FC01
3F02EF5C83DAFC071401011F02C75CDAFE0FEBFE03010F02835C17FFDAFF1F14076D0201
5C03BF148F6DD9BE005C18CF03FE14DF6D49017F90C7FC18FF6D496D5AA36E486D5AA26E
486D5AA36E486D5AA26E486D5A47287EA74C>I<B500FC90383FFFC0A5000101C0903803
E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F143E6E137E010F147C6E
13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA2
6E5AA35D14075D000E130FD83F805B387FC01FD8FFE090C9FC5C143E147E5CEBC1F8387F
C3F0387E0FE06CB45A6C5B6C48CAFCEA03F8323B7EA737>121 D
E /Fl 80 124 df<9239FF8007F0020F9038E03FFC027F9038F8FFFE903B01FF00FDFC3F
D903F890397FF07F80D90FF09038FFE0FF4948485BEB3FC002805CD97F00ED7F00183E49
6D90C8FC4980ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35
>11 D<15FF020F13E0027F13F84948C67ED903F8133EEB0FF0494813FF49485A1480EB7F
00A25B496D5A163893C7FCAA167FB8FCA33900FE00018182B3AC486CECFF80007FD9FC3F
13FEA32F407FBF33>I<4AB47E020F13F7027F13FF4948C6FC903803F801EB0FF0EB1FE0
EB3FC01480EB7F008149805BADB8FCA3C648C77EB3AE486CECFF80007FD9FC3F13FEA32F
407FBF33>I<4AB4EC7F80020F9039E007FFF0027FD9F03F13FC903C01FF01F8FF807E90
3C03F8003DFC001FD90FF0EB7FF849484948EB7F804948484913FF02805CD97F005CA25B
496D90C7EA7F0070141C96C7FCAAF13F80BBFCA3C648C76CC7FC197F193FB3AC486C4A6C
EB7FC0007FD9FC3FD9FE1FB5FCA348407FBF4C>I<001E130F397F803FC000FF137F01C0
13E0A201E013F0A3007F133F001EEB0F7000001300A4000114F04913E0A3000313010180
13C00007130301001380481307001EEB0F0048131E007C133E0078133C003013181C1C7D
BE2D>34 D<121EEA7F8012FF13C0A213E0A3127F121E1200A4120113C0A3120313801207
13005A121E5AA25A12300B1C79BE19>39 D<1438147814F0EB01E0EB03C0EB0780130FEB
1F00133EA25B5BA2485AA2485AA212075B120FA25B121FA290C7FC5AA3123E127EA6127C
12FCB2127C127EA6123E123FA37E7FA2120F7FA212077F1203A26C7EA26C7EA2137C7FA2
7FEB0F801307EB03C0EB01E0EB00F014781438155A78C323>I<12E07E12787E7E7E7F6C
7E6C7EA26C7E6C7EA2137CA27FA2133F7F1480A2130F14C0A2130714E0A3130314F0A613
0114F8B214F01303A614E01307A314C0130FA21480131FA214005B133EA25BA25BA2485A
485AA2485A485A90C7FC121E5A5A5A5A155A7BC323>I<121EEA7F8012FF13C0A213E0A3
127F121E1200A4120113C0A312031380120713005A121E5AA25A12300B1C798919>44
D<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<ED
0180ED03C01507A21680150FA216005DA2151E153EA2153C157CA2157815F8A25D1401A2
5D1403A25D1407A25D140FA24AC7FCA2141E143EA2143C147CA2147814F8A25C1301A25C
1303A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A25B1201A25B1203A2
5B1207A25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A1260225B7BC32D
>I<EB01FE90380FFFC0013F13F090387F03F89038FC00FC4848137E48487F4848EB1F80
49130F000F15C04848EB07E0A3003F15F0A348C7EA03F8A64815FCB3A26C15F8A46D1307
003F15F0A3001F15E0A26D130F000F15C0A26C6CEB1F806C6CEB3F006C6C137E6C6C5B90
387F03F86DB45A010F13C0D901FEC7FC263F7DBC2D>I<14E013011303130F137FEA07FF
B5FC139FEAF81F1200B3B3ACEB7FF8B612FCA31E3D78BC2D>I<EB07FC90383FFF8090B5
12E03903F01FF83907C007FC390F0001FE001E80001C6D1380003C147F4815C0ED3FE012
70B4FC6DEB1FF07FA56C5A6CC7FC120CC8FCED3FE0A3ED7FC0A2EDFF8016005C5D4A5A4A
5A5D4A5A4A5A4A5A4AC7FC147E5CEB01F0495A495A4948137049C7FC133E133C4914E05B
485A485A4848130148B6FC5AA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF8090
38F80FE03901E003F839038001FCD807007F000E6D7E001E1580D81F80137FD83FE014C0
7FA56C5AA2D807801480C812FFA216005C5D4A5A5D4A5A4A5AEC3FC0D91FFFC7FC14FCEC
FF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153F16F0A2120EEA3F80487E
487EA416E0157F5B6CC713C00078ECFF807E6C491300001F495A390FC007FC3903F80FF0
C6B55A013F1380D907FCC7FC243F7CBC2D>I<151E153EA2157EA215FE1401A214031407
A2140F141E141C143C1438147014F014E01301EB03C014801307EB0F00130E131E131C5B
1378137013F0485A5B1203485A90C7FC5A120E5A123C123812785AB8FCA3C73801FE00AC
4A7E0103B6FCA3283E7EBD2D>I<00061403D80780131F01F813FF90B55A5D5D5D5D1580
4AC7FCEB3FF090C9FCACEB01FE90380FFF80013F13E090387E07F89038F001FC496C7E49
7F497F90C7EA3F8016C0C8FC16E0151FA316F0A4123EEA7F8012FF7FA34914E0A248C712
3F007015C01278ED7F807EEDFF006C5C6C6C485A3907C007F83903F01FE0C6B55A013F90
C7FCEB0FF0243F7CBC2D>I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E
017EEB1FC049133F4848137F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA348
5AA2EB81FF018713C039FF8FDFF090389E03F89038BC00FC01B87F01F0137F49EB3F80A2
16C05BED1FE0A34914F0A5127FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F00
6C6C137E6C6C5B6C6C485A90387E07F06DB45A010F1380D903FCC7FC243F7CBC2D>I<12
38123C123F90B612FCA316F85A16F016E0A20078C7EA03C00070EC078016005D151E4814
1C153C5D1570C812F04A5A5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C13
03A31307A3130F5CA2131FA6133FAA6D5A0107C8FC26407BBD2D>I<EB03FC90381FFF80
90387C07E09038F001F83901E0007C48487F48487F48C7FCED0F80121E16C0003E1407A3
123FA27F150F6D148001F0131F6C6C140001FE133E6C6C137EECC0FC6CEBE1F86CEBFBE0
ECFFC0C691C7FC6D7F011F13E081497F01FD13FED801F87F3803E03F48486C1380260F80
0713C048487E48010013E0003E147F007E141F007CEC0FF0150712FC481403A21501A46C
15E0127C1503007E15C06CEC07806C140F6DEB1F006C6C133ED807F05B3901FC03F86CB5
12E0011F1380D903FCC7FC243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03F04848
6C7E48486C7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A5
16F0A6007F143FA36C7E157F121FA26C6C13FF3907F001DF000313033901FC079F3900FF
BF1FD93FFE13E0EB0FF890C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A
5D49485AEB8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7C
BC2D>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F
80A2EA1E000A2779A619>I<007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A2
6C18E03C167BA147>61 D<EB1FF890B5FC000314C0390FE01FF0391F0007F8003EEB03FC
003CEB01FE5A007E1300B414FF7FA56CC7FC001CEB01FEC7FCEC03FC1407EC0FF815E0EC
1FC0EC3F801500147E5C5CA2495A5CA2495AA35CAA91C7FC90C8FCA8EB0780EB1FE0A249
7EA46D5AA2EB078020407BBF2B>63 D<15074B7EA34B7EA34B7EA34B7EA34B7E15EFA291
3801CFFC15C7A291380387FE1583A291380703FF81A2020E8081A24A6D7EA34A6D7EA34A
6D7EA34A6D7EA349486D7EA291B6FC4981A2913880000349C76C7EA24982010E80A2011E
82011C157FA2013C820138153FA2017882171F13FC00034C7ED80FFF4B7EB500F0011FB5
12F8A33D417DC044>65 D<B712FCEEFFC017F000019039C0000FFC6C6C48EB03FE707E70
1380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171FA318F0173F18E0177F18C0EFFF800403
13004C5AEE1FF891B612E094C7FC17F0913980000FFCEE01FF701380EF7FC0EF3FE0EF1F
F018F8170F18FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048
486C90380FFE00B85A17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E020F90
38FF801E913A3FF007E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93F
E0140749481403495A91C812014848150012034848167E5B000F173EA24848161EA2123F
5B180E127FA349160012FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D
16386C6C1678000117706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F
00D903FE143E902600FF8013F891393FF007F0020FB512C0020391C7FC9138003FF03742
7BBF42>I<B712FEEEFFC017F000019039E0000FFC6C6C48EB01FF706C7E717E717EEF07
F084717E717E170084F07F80A219C0183F19E0A3F01FF0A519F8AB19F0A5F03FE0A219C0
A2187F1980F0FF00A24D5A6017034D5A4D5AEF3FE0EF7F804C48C7FC48486CEB0FFCB85A
17C04CC8FC3D3E7EBD45>I<B912F0A3000101E0C7FC6C6C48141FEF07F81701A2170018
78A31838A484160EA495C7FCA2161EA2163E167EED01FE91B5FCA3ECC001ED007E163E16
1EA2160EA2F00380A3F0070093C7FCA460180EA2181EA2183EA26018FC17011703170F48
486C14FFB95AA3393E7EBD3E>I<B912C0A300019038E000036C6C48EB003FEF0FE01707
1703A21701A31700A41870A2161CA31800A3163CA2167C16FC150391B5FCA3ECC0031500
167C163CA2161CA693C8FCAF3801FFF0B612F8A3343E7EBD3B>I<DB3FE0130C912603FF
FE131C021F9038FF803C913A7FF00FC07C9139FF0001F0D903FC90380078FC4948143DD9
1FE0141F4948140F4948140701FF15034890C8FC491501485A000716005B000F177C5B00
1F173CA2485AA2181C127FA25B95C7FC12FFAB043FB512F0127FA26D9139001FFE00EF07
FC123FA27F121FA26C7EA212077F12036C7E7F6C7F017F150F6D7ED91FF0141FD907F814
3D6D6C1478903B00FF8001F07C913A7FF00FE01C021FB5EA800C020349C8FC9138003FF0
3C427BBF47>I<B6D8E00FB512FEA3000101F0C7001F130026007FC0EC07FCB3A691B7FC
A302C0C71207B3A92601FFF0EC1FFFB6D8E00FB512FEA33F3E7EBD44>I<B612F8A3C6EB
F800EB3FE0B3B3B2EBFFF8B612F8A31D3E7EBD21>I<011FB512FEA3D9000713806E1300
80B3B3A5120EEA3F80EA7FC0EAFFE0A44A5A13C0007F5CEB0007003C495A003E5C6C495A
390FE07FC00003B5C7FCC613FCEB1FE027407DBD2F>I<B600E090387FFFFCA3000101F0
C7000F138026007FC0913807FE00EF03F818E04D5A4D5A4DC7FC173E5F5F4C5A4C5A4C5A
4C5A4CC8FC163E5E5E4B5A4B5A4B5A150F4B7E153F4B7E4B7E14C19138C3EFFC9138C7C7
FEECCF879138DF03FFDAFE017F14FC4A6C7F4A6D7E5C4A6D7E707EA2707E707EA2707E70
7FA2707F717EA2717E717EA2717E848419802601FFF04A13E0B6D8E001B6FCA3403E7DBD
47>I<B612FCA3000101F0C9FC38007FC0B3B0EF01C0A517031880A41707A3170FA2171F
173F177FEFFF00160348486C133FB9FCA3323E7EBD39>I<B500E093387FFFF0A300016D
9338FFF800D8007F18E0D977F8ED01DFA3D973FCED039FA3D971FEED071FA2D970FF150E
A36E6C141CA26E6C1438A36E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB
0700A26E6C130EA36F6C5AA36F6C5AA26F6C5AA36F6C5AA2923807F9C0A36FB45AA36F90
C7FCA26F5A13F8487ED807FF027CEC7FF8B500F8033FB512F0A216384C3E7DBD53>I<B5
00E091383FFFFEA280C66C6C020113C09438007F006E153E6E151CEB77FF137301717F81
13706E7E81143F6E7E816E7E14076E7E82806E7F82157F6F7E826F7E150F6F7E82816F13
8017C081EE7FE017F0EE3FF8161FEE0FFC17FE1607EE03FF189C827013DC18FC177F173F
171FA2170F1707A21703170113F8486C1500D807FF167CB500F8153CA2181C3F3E7EBD44
>I<ED7FE0913807FFFE021F6D7E91397FC03FE0903A01FE0007F8D907F8EB01FE49486D
7E49486E7E49486E7E49486E7E49C86C7E48486F7E49150300038348486F7EA248486F7E
A2001F188049167F003F18C0A3007F18E049163FA300FF18F0AC007F18E06D167FA4003F
18C06D16FF001F1880A26D5D000F1800A26C6C4B5A00035F6D15076C6C4B5A6C5F6D6C4A
5A6D6C4A5A6D6C4A5A6D6C4AC7FCD907FCEB03FED901FEEB07F8903A007FC03FE0021FB5
1280020749C8FC9138007FE03C427BBF47>I<B712FCEEFFC017F000019039E0001FFC6C
6C48EB03FEEE00FFEF7F80EF3FC0EF1FE018F0A2EF0FF8A218FCA818F8A2EF1FF0A218E0
EF3FC0EF7F80EFFF00EE03FEEE1FFC91B612F017C004FCC7FC02C0C9FCB3A63801FFF0B6
12E0A3363E7EBD3E>I<ED7FE0913807FFFE021F6D7E91397FC03FE0903A01FE0007F8D9
07FCEB03FED90FF0EB00FF49486E7E49486E7E49486E7E49C86C7E48486F7EA248486F7E
000783491501000F834981001F1880A24848EE7FC0A3007F18E0A249163FA200FF18F0AC
007F18E0A26D167FA3003F18C0A26C6CEEFF80A36C6C4B1300ED1F806C6C90397FE003FE
0003DAFFF05B903AFE01F078070001DAE03C5B6C6C48486C485A903B7F83800E1FE0D93F
C36D485AD91FE34A5AD90FF34AC7FC903A07FBC003FE903A01FFE007F8903A007FF03FE0
021FB54813180207809138007FE192260001F01338A2711378A2706C13F0EFFF0318FFA2
7113E0A37113C0711380711300715AEF01F83D527BBF47>I<B712E016FEEEFFC0000190
39E0007FF06C6C48EB07FC707EEE00FF717E84717E84171FA284A660A2173F604D5A604D
C7FCEE03FE4C5AEE7FF091B612C04CC8FC82DAC00013C0EE1FF0707E707E707EA2707EA2
707FA684A61902190718E0177F190F173F2601FFF0EDF00EB600E090381FF81E94380FFC
3C943803FFF8CB13F0F01FC040407EBD43>I<D903FC130C90391FFF801C017FEBF03C39
01FC03F83A03F0007E7CD807C0EB1FFC4848130F48C71207481403003E1401007E140012
7C167C12FCA2163CA27E161CA27E7F6C6C14007F7FEA3FFEEBFFE06C13FEECFFE06C14FC
6C806CECFF80C615C06D14E0011F14F0010114F8EB001F020113FCEC001FED0FFE150315
0116FF8100E0157FA3163FA27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06D
EB07E0D8F9FCEB0FC03AF07F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33
>I<003FB91280A3D9F000EBE001018090397FC0003F48C7ED1FC0007C1707A200781703
A300701701A548EF00E0A5C81600B3B14B7E4A7F010FB612FEA33B3D7DBC42>I<B600E0
90383FFFFEA3000101F0C7000113C026007FC09138007F00183E181CB3B3A4013F163C6E
1538A21878011F16706E15F0010F5E6D6C14014D5A6D7E6D6C4A5A6D6C021FC7FC6E6C13
3EDA1FC013FC91390FF807F00203B512C0DA007F90C8FCED0FF83F407EBD44>I<B66C90
380FFFFEA3000301F0C7000113E06C01C09138007F806CEF3F00017F163E181C6E153C01
3F1638A26E1578011F167080010F5EA26E140101075EA26E140301035EA26D6C4AC7FCA2
816D150EA26F131E027F141CA26F133C023F143881021F5CA26F13F0020F5CA2EDFC0102
075C15FE0203495AA2EDFF076E91C8FCA2168F6E138EA2ED7FDCA216FC6F5AA36F5AA36F
5AA26F5AA36F5A3F407EBD44>I<B6017FB5D8C007B5FCA3000301E0010101F0C713F86C
01806D49EC3FE07148EC0F807E7215006E143F017F190E8480013F6184177F6D6C60A2EF
E7FC6D6C60A2933801C3FE6E18F001076104037F6E02811401010361040714806E14006D
4E5A19C0040E137F6D01804CC7FCA24CEB3FE0DA7FC0160EA24CEB1FF003E0161E023F17
1C047814F8DBF070010F133C021F173804F014FC6F481307020F5F19FEDBF9C01303DA07
FD5EA2DBFF80EB01FF6E5FA293C8FCA26E5FA24B157F020094C8FCA24B81037C153EA203
78151E0338151C58407EBD5D>I<B600C00103B51280A3000101F8C8387FF8006C49ED3F
C0017F705A013F041EC7FC6D7E606D6C153818786D6C15706D6C5D17016D6D5C17036D6D
5C6F49C8FC027F5C6E6C130E171E6E6C131C6F5B020F14786E6C137017F06E6C5B16016E
EB83C0EEC3806E13C7DB7FE7C9FC16EFED3FFE5E151F6F5AB3A4ED3FFC021FB512FCA341
3E7FBD44>89 D<003FB712F8A391C7EA3FF013F801E0EC7FE0018014FF90C813C0003E4A
1380A2003C4A1300007C4A5A12784B5AA24B5A00704A5AA24B5A15FF5EC7485BA24A90C7
FC5C5D4A5AA24A5A4A5AA24A5AA24A5A495BA24990C8FC5B4A141C495AA2495A133F5C49
5A173C495A485BA24890C8FC1778485A484815F8A248481401003F150349140F4848143F
ED01FFB8FCA32E3E7BBD38>I<EAFFFCA4EAF000B3B3B3B3ABEAFFFCA40E5B77C319>I<48
6C13C03903C001E000071303018013C0390F000780001EEB0F00001C130E003C131E0038
131C0078133C00701338A300F01378481370A400EFEB778039FFC07FE001E013F0A3007F
133FA2003F131F01C013E0390F0007801C1C73BE2D>I<EAFFFCA4EA003CB3B3B3B3ABEA
FFFCA40E5B7FC319>I<EB1FF8EBFFFE00036D7E3907E01FE0390FC007F0486C6C7E6D6C
7E811400A2157F6C5AEA0380C8FCA4EC3FFF0107B5FC90383FFC7FEBFF803803FC00EA07
F0485A485A485A127F90C7FC48ED03805AA315FFA26C5B6C14BFD98003EB8700393FC00F
1F261FF01E13FE3907FFFC0F00019038F007F83A003FC003E0292A7DA82D>97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF80027F13E09138FC07F89039FFE001
FC4A6C7E4A137F91C7EA3F8049EC1FC05BEE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F6D15C0EE3F807F6EEB7F00D9FBC013FE9039F1E003FC9039E0F80FF091387FFFE0
D9C01F1380C7D803FCC7FC2D407EBE33>I<49B4FC010F13F0013F13FC90387F007ED801
FC7F4848EB7F80484813FF485AA2485AA24848EB7F00151C007F91C7FCA290C9FC5AAB6C
7EA36C6CEB01C0A2001F14036D14806C6C13076C6CEB0F006C6C131E6C6C133E3900FF80
F890383FFFF0010F13C0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B1EB
01FE90380FFFC1013F13F190387F80FD3901FE003FD803F8130F4848130748481303A248
481301123F5B127FA290C7FC5AAB7E7FA2123FA26C6C1303A26C6C13076C6C130F6C6C49
7E6C6CEB7DFF2700FF01F913F890383FFFE1010F1381903A01FE01FC002D407DBE33>I<
EB01FE90380FFFC0013F13F09038FF03F83901FC01FC3903F8007E4848137F4848EB3F80
49131F001F15C0485A150F127F16E090C7FCA25A90B6FCA390C9FCA67E7FA2123F16E06C
7E15016C6C14C06C6C13036DEB07806C6CEB0F00C66C131E90387FC07C90381FFFF80107
13E0010090C7FC232A7EA828>I<EC0FE0EC7FF8903801FFFC903803F87E90380FE0FFEB
1FC11481133FEB7F01EC00FE157C01FE1300AEB6FCA3C648C7FCB3AE487E007F13FFA320
407EBF1C>I<167C903903F801FF90261FFF071380017FEBCF9F9039FE0FFC1F3901F803
F83803F0013B07E000FC0600000F6EC7FCA249137E001F147FA7000F147E6D13FEA20007
5C6C6C485A6C6C485A3903FE0FE090B55AD8071F90C8FCEB03F80006CAFC120E120FA37F
6C7E90B512F015FE6C6E7E6C15E016F812073A0FC0001FFC4848EB03FE48C8FC127E167F
4881A56C5D007E157E007F15FE6C6C495A6C6C495AD80FF0EB0FF0D803FEEB7FC0C6B6C7
FC013F13FC010313C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FF
C0021F7F91387C07F09138F003F89039FDE001FC14C0D9FF807F91C7FCA25BA35BB3A548
6C497EB5D8F87F13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCAC
EA01FC127FA3120712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FF
A4EB01FEA2EB00781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF80FEA3EB81
FC14F8387F03F0387E07E0383FFFC0000F1300EA01FC185185BD1C>I<EA01FC12FFA312
0712031201B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8
FC143E147F4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F
7E151F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA312071203
1201B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E002
1FD9E00F7F913B7C07F03E03F80007903BF003F87801FC3D03F9E001FCF000FE000101C0
5CD9FB80D9FFC07F91C7497F13FF4992C7FCA3495CB3A5486C496CECFF80B5D8F87FD9FC
3F13FEA347287DA74C>I<3901F801FE00FF903807FFC0021F7F91387C07F000079038F0
03F83A03F9E001FC000113C0D9FB807F91C7FC13FF5BA35BB3A5486C497EB5D8F87F13FC
A32E287DA733>I<14FF010713E0011F13F890387F81FE9038FC003F4848EB1F804848EB
0FC04848EB07E04848EB03F0001F15F8491301003F15FCA248C812FEA44815FFA96C15FE
A36C6CEB01FCA36C6CEB03F8000F15F06D13076C6CEB0FE06C6CEB1FC06C6CEB3F803A00
7F81FE006DB45A010F13F0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8002
7F13E09138FC0FF83A03FFE003FC6C496C7E4A6C7E91C7EA7F8049EC3FC05BEE1FE0A2EE
0FF0A317F81607A9EE0FF0A4EE1FE0A26DEC3FC0EE7F807F6EEBFF006E485A9039FDE003
FC9039FCF80FF091387FFFE0021F1380DA03FCC7FC91C9FCAD487EB512F8A32D3A7EA733
>I<02FE131C903907FFC03C013F13E090387F80F83A01FE003C7C4848131E4848EB0FFC
48481307A248481303485A1501485AA448C7FCA97F127FA36C7E15036C7E15076C6C130F
6C7E6C6C131F6C6C137D3900FF81F190383FFFE1010F1381903801FC0190C7FCAD4B7E92
B512F8A32D3A7DA730>I<3901F80FC000FFEB3FF0EC7FFC14F13907F9E3FE3803FBC300
011383140313FFEC01FC9038FE00701500A25BB3A5487EB512FEA31F287EA724>I<9038
3FC0603901FFF8E0000713FF381FC03F383F000F003E13074813030078130112F8A21400
7EA27E6C6C1300EA7FF0EBFF806C13F86C13FE6C7F6C1480000114C06C6C13E0010313F0
EB003FEC0FF800E013031401A26C1300A37E15F06C13017E6CEB03E090388007C09038E0
1F8000F1B5120000E013FC38C01FE01D2A7DA824>I<131CA5133CA4137CA213FCA21201
12031207121FB612C0A3D801FCC7FCB3A215E0A9EBFE01000014C0A290387F0380EB3F87
90381FFF006D5AEB01F81B397EB723>I<D801FC14FE00FF147FA3000714030003140100
011400B3A51501A3150315076C7EED0EFF017F49138090263F807813FC6DB45A010713C0
0100903800FE002E297DA733>I<B539E00FFFE0A32707FE000313006C48EB00FC5E0001
5D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA290380FE00EA2ECF01E01
07131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E5AA26EC8FCA3140E
2B287EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F806C481700
6D010F141E00016F131C15076D163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC
1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F0140701070387C7FC9138
F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2
027C1301023C5C023813003D287EA642>I<B539F01FFFE0A30003D9C00F1300C6903880
07F8D97F0013E002805BD93FC05B011F49C7FC90380FE00EECF01E6D6C5A01035B6D6C5A
6E5AEB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1FEECC0FF01037F49486C7E
D90F007F011E6D7E013E130F496D7E01FC80486C80000F4A7EB539803FFFF8A32D277FA6
30>I<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F00005DA2017F495A
A2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5A
A2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C1438A21478001813
70007E13F0B45B13015C130348485AD87E0FC9FCEA7C3EEA3FFC6C5AEA07E02B3A7EA630
>I<001FB61280A3D9E0001300EB800149485A001E5C001C495A003C130F5D4A5A003849
5A147F5D4AC7FC5BC6485A5C495A130F5C90391FE00380133FEB7FC01480EBFF005A4913
07485A485A000F1500495B485A003F5C4848137F49485AB7FCA321277EA628>I<B812F0
A32C0380992D>I E /Fm 50 122 df<DB0FFFEB03FF0203B5D8E03F13C0021F02F9B512
E0027F91B612F0902701FFF803EC1FF80107D9C00101FC13FC49D90003EBF83FD93FFE49
13F05C494815E0495AF11FF84817C04A6DEC07E0F1018096C7FCABBA12F0A500019026E0
000301C0C7FCB3B0B600C1B612C0A546467EC541>11 D<ED0FFF4AB512E0021F14F8027F
80903A01FFF803FE01079038C0007F4990380001FF4948497F49485B495A495A4C7F486F
5B5CA37090C7FCEE00FC94C8FCA74BB512C0B9FCA500019038E00003B3B0B600C1B61280
A539467EC53E>I<DB0FFFEC1FFE0203B5D8C003B512C0021FDAF03F14F0027F02FCB67E
902701FFF803B538F007FC0107D9C00091388000FE49D900019038FE0003D93FFE010749
497E4A4B5B4948495B49485D501380487313004A5DA282706F5AF201F897C8FCA70703B5
1280BDFCA500019026E000039038C00007B3B0B600C1B60083B6FCA558467EC55D>14
D<B612F8AA1D0A7F9A25>45 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA
1FF0EA07C00F0F788E1F>I<EC01E01407140F143FEB01FF131FB6FCA413E3EA0003B3B3
AD007FB612FEA5274178C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607
FC0313FE260FE0007FD81F80013F138048C76C13C0488001C06D13E013F000FF6E13F07F
17F881A46C5A6C5A6C5AC8FC17F05DA217E05D17C04B138017004B5A4B5A4B5A5E4B5A4A
13804A90C7FCEC07FC4A5A4A5AEC3FC04A4813F892C7FC14FE495AD903F0EB01F0495A49
5A495A013EC7120349140790B7FC4816E05A5A5A5A5A5AB8FC17C0A42D417BC038>I<EC
FFE0010713FE011FEBFFC0017F14F02601FF807F3A03FC003FFED807F06D7E5BD80FF86D
138013FE001F16C07FA66C5A6C4815806C485BC81400A24B5A4B5A5E4B5A4A5B020F1380
902607FFFEC7FC15F815FF16C090C713F0ED3FFC6F7E6F7E17806F13C017E0A26F13F0A2
17F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81F
E0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>
I<163F5E5EA25D5D5DA25D5D5D5DA292B5FC5C5C15EFEC07CF140FEC1F8FEC3F0F143E14
7C14FCEB01F8EB03F014E0EB07C0130FEB1F801400133E137E5B485A5B485A1207485A5B
48C7FC5A127E5AB91280A5C8001F90C7FCAB91B71280A531417DC038>I<0007150301E0
143F01FFEB07FF91B6FC5E5E5E5E5E5E93C7FC5D15F015C002FCC8FC01C0C9FCA9EC3FF0
01C1B5FC01C714C001DF14F09039FFE03FFC49C66C7E01F86D7E496D1380496D13C05B6C
4815E0C87E17F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC714
C06C5C6D4913806C6C491300D80FF0495AD807FEEBFFFC6CB612F0C615C06D91C7FC010F
13FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F809039
0FFC001FD93FF814C04948137F4948EBFFE048495A481380A24813005A5B001F6E13C0EE
7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039FD
F01FFC4A6C7E9039FFC007FF4A6C138017C04A7E17E05B17F0A34915F8A5127FA5123FA2
17F0A2121F7F000F16E0A26C6C4913C017806C6D4813006C6D485A6C9038F03FFC6DB55A
011F5C010714C0010191C7FC9038003FF02D427BC038>I<121F7F13FE90B712FEA45A17
FC17F817F017E017C0A2178048160090C8127E007E5D007C5D15014B5A4B5A00FC4A5A48
5D151F4BC7FCC8127E5DA24A5A14035D14074A5AA2141F5D143FA2147F5D14FFA25BA35B
92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EE1F80A24C7EA24C7EA34C7EA24B7F
A34B7FA24B7FA34B7F16BF031F80163F82033F80ED3E0F037E80157C8203FC804B7E0201
8115F0820203814B7E0207815D177F020F814B7F021F8292C7FC834A82023E80027E8202
7FB7FCA291B87EA2498302F0C71203830103834A800107835C187F49488284011F8491C9
7E4984133E017E82B6021FB612F0A54C457CC455>65 D<B9FC18F018FE727E19E026003F
FEC700077F05017F717F727E727EA2721380A2841AC0A74E1380A21A00604E5A614E5A05
035B050F5B94B5128091B700FCC7FC6018FF19E04AC7000113F8716C7E727E95381FFF80
841AC07213E0A27213F0A21AF8A81AF0A2601AE0601AC060067F138095B5120005075BBA
12F86119C04EC7FC18E045447CC350>I<DCFFF81470031F01FF14F04AB6EAE0010207ED
F803021FEDFE07027F9039F001FF0F494848C7EA3FDF010701F8EC0FFF4901E080490180
804990C9FC495A4948167F4849163F4849161F485B190F485B1907485B19035A91CAFC19
015AA34994C7FC12FFAE127F7FF101F0A27EA2806C18031AE06C7F19076C6D17C0190F6C
7F6C6DEE1F806C6DEE3F006D7E6D6C167E6D6D4A5A6D01E04A5A6D01F84A5A010101FFEC
3FE06D6C9039F001FF80021F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44
467AC451>I<B9FC18F018FE727E19E0D8003F90C7001F13F805017F716CB4FC061F7F72
7F06037F727FA2727F737EA2737EA2737EA21B8085A21BC0A51BE0AD1BC0A51B8061A21B
00A24F5AA24F5A4F5AA24E5B4E5B4E5B061F5B067F90C7FC4D485A051F13F8BA5A19C04E
C8FC18F095C9FC4B447CC356>I<BA12F8A485D8001F9038800003EF007F181F18071803
1801180085197EA3193EA217F8A285A4040191C7FCA316031607163F92B5FCA5ED803F16
0716031601A2F103E01600A2F107C0A494C7FC190FA21A80A2191FA2193FA2197FF1FF00
6060180F183F0503B5FCBBFC61A443447DC34A>I<BA1280A419C0D8003F90C7123F1703
1700187F183F181F180F19E01807A31803A3EE03E0F001F0A495C7FC1607A3160F161F16
7F92B5FCA5ED007F161F160F1607A31603A693C9FCAFB712F8A53C447CC346>I<DCFFF8
1470031F01FF14F04AB6EAE0010207EDF803021FEDFE07027F9039F001FF0F494848C7EA
3FDF010701F8EC0FFF4901E080490180804990C9FC495A4948167F4849163F4849161F48
5B190F485B1907485B19035A91CAFC19015AA34994C8FC12FFAD94B712F0127F7FA36CDC
0003EBF000A2807EA26C7FA26C7FA26C7F6C7F6C7F6D7E6D6C5D6D7F6D01E05C6D01F85C
010101FF5C6D6C9039F001FF3F021F90B5EAFE0F0207EDF8030201EDF000DA001F028013
30030001F8C9FC4C467AC458>I<B712F0A5D8001FEB8000B3B3B3A4B712F0A524447DC3
2A>73 D<B712F8A5D8003F90CAFCB3B1F00F80A4181F1900A460A360A218FEA217011703
1707170F171F177FEE03FFB95AA539447CC343>76 D<B695B612806F5E6F5EA3D8003F6D
4C49C7FCA2013E6DEE0FBFA26E6CEE1F3FA36E6C163EA26E6C167CA26E6C16F8A26E6DEC
01F0A36E6DEC03E0A26E6DEC07C0A26E6DEC0F80A36F6CEC1F00A26F6C143EA26F6C5CA3
6F6C5CA26F6D485AA26F6D485AA26F6D485AA36F6D485AA2706C48C7FCA293383FFC3EA3
706C5AA2706C5AA2705BA3705BA2705BA2705BB66C93B71280A271C7FCA2173E61447CC3
6A>I<B66C0203B512FE818181A2D8003F6D91C7EAF800818181013E80806E7F6E7F6E7F
826E7F806E7F6E7F6F7F836F7F816F7F6F7F6F7F836F7F81707F707F707F84707F82707F
707F84701480837113C07113E07113F019F87113FC837113FE7113FF84A28484848484A2
8484197F193F191FA2190FB66C1507190319011900A24F447CC358>I<923807FFC092B5
12FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF010701C0010713C04990
C700017F49486E7F49486F7E49486F7E49486F7E488448496F13804A814819C04A814819
E0A24890C96C13F0A24819F8A348487013FCA500FF19FEAD007F19FCA26D5EA26C19F8A3
6C6D4B13F0A36C6D4B13E0A26C6D4B13C06C19806E5D6C19006C6D4B5A6D6C4B5A6D6C4B
5A6D6C6C01035B6D6D495B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715
C002004AC8FC030713C047467AC454>I<B9FC18F018FE727E19E0D8001F902680001F7F
05037F05007F727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A05
035B051F5B92B712C096C7FC18FC18C00380CAFCB3A7B712F0A543447DC34D>I<B812F8
EFFFC018F818FE727ED8001F902680003F13E005077F05017F717F727E727EA28684A286
A762A24E90C7FCA2614E5A18FF4D13F005075B057F138092B7C8FC18F818E018F8DB8001
7F9338003FFF717F717F717F8385A2717FA785A61B1F85A28373133F72143EB700F06DEB
807E72EBE1FC72EBFFF8060314F0060014E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FE
0003D80FF813004848143F161F4848140F160748481403A2160112FF1600A27FA26D157C
7F7F6D92C7FC6D7E6C13F8ECFFC015FC6CECFFC06C15F816FE6C816C826C16E06C827E01
3F81010F81010381EB003F1403DA001F7F15016F7E041F138082A200F88182A3827EA218
007EA26C5D6D5D7F6D4A5A6D4A5A01FC141FD9FF80495A9139F801FFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
C003D87FF09338007FF049173F0180170F190790C7FC007E1803A3007C1801A400FC19F8
481800A5C81700B3B3A20107B87EA545437CC24E>I<B700C0010FB512F8A5D8003F90C9
3803E000B3B3A96D17076281190F6D60191F6D6D93C7FC6D5F6F157E6D6D15FE6D6D4A5A
DA7FFEEC07F86E6C6CEB3FF0020F9039F003FFE06E90B61280020193C8FC6E6C14FC030F
14E09226007FFEC9FC4D457CC356>I<903801FFF0011F13FF017F14C048B612F0489038
007FF8D807FCEB1FFE6D6D7E486C7F836F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC
91B6FC1307013F13F19038FFFE01000313F04813C0001F1300485A5B127F5B12FF5BA35D
A26D5B007F5C6D4913F86C6C013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB80
07D90FFCC9FC322F7DAD36>97 D<EB3FE0B5FCA512037EB1ED0FFC92387FFFC002E3B512
F002EF14FC9139FFE01FFE92380007FF4A6D138002F86D13C04A6D13E04A15F0177F18F8
A218FC173FA318FEAC18FCA3EF7FF8A3EFFFF06E15E06E5B18C002FE491380023F010F13
00903AFE1FE03FFE496CB512F8D9F80314E049C61480C8D80FF8C7FC37467EC43E>I<EC
3FFC49B512C0010F14F0013F14FC90397FF007FE9039FFE001FF0003EB8003484A138014
00485A121F5B123F6F1300007F6E5A49EB007893C7FCA212FFAC127F7FA2123FEE07C07F
001F150F6C6C15806E131F6CED3F006C01E0137E6C6D5B3A007FFC03F86DB55A010F14C0
010391C7FC9038003FF82A2F7CAD32>I<4CB4FC0307B5FCA5ED001F82B1EC3FF0903803
FFFE010FEBFF8F013F14EF9026FFF807B5FC48EBE00148903880007F4890C77E48814980
121F485AA3485AA312FFAC127FA37F123FA2121F6D5C000F5D6C6C5C6C6D90B512806CD9
C00314FE6CEBF01F6DB512CF011F140F010713FC9026007FC0EBF80037467CC43E>I<EC
3FF80103B57E010F14E0013F8090397FF83FF89039FFC00FFC4890388003FE4801007F48
486D1380000F80484815C0A2003FED7FE0A2485AA217F0163F12FFA290B7FCA401F8C9FC
A5127FA37F123FEE01F06C7E16036C6C15E06C15076C6DEB0FC06C6DEB1F806C01F0EB7F
0090397FFE03FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<913801
FF80021F13E091B512F0010314F849EB8FFC90390FFE0FFE90383FFC1F14F8137FEBFFF0
A2ED0FFC4813E0ED03F0ED00C01600ABB612F8A5000101E0C7FCB3B0B612E0A527467DC5
22>I<DAFFE013FE010F9038FE03FF013FD9FF8F138090B812C048D9C07F133F48903900
1FF87F484890380FFC3F000F15FE001F9238FF1F80496DEB040094C7FC003F82A7001F93
C7FCA26D5B000F5D00075D6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013
E0000F90CAFCA37FA27F7F90B612C016FCEEFF806C16E0836C826C826C821203000F82D8
3FF0C77E49140748486E138000FF815B82A46D5C007F17006D5C6C6C4A5A6C6C4A5AD80F
FEEC3FF83B07FFE003FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC
38>I<EB3FE0B5FCA512037EB1ED03FF031F13E0037F13F892B57E9139E3F81FFE9139E7
E00FFF9126EF80077F150014FE4A6D7FA25C5CA35CB3A7B600C1B61280A539457DC43E>
I<137C48B4FC487F487FA2487FA56C5BA26C5B6C90C7FCEA007C90C8FCAAEB3FE0EA7FFF
A512037EB3AFB61280A519467DC51F>I<EC03E0EC0FF8EC1FFCEC3FFEA2EC7FFFA5EC3F
FEA2EC1FFCEC0FF8EC03E091C7FCAAEC03FF0107B5FCA5EB001F80B3B3A7EA1F80EA3FC0
EA7FE0EAFFF0EC1FFEA215FC143F01E013F8007FEB7FF0393FC0FFE06CB512806C14006C
13FCC613C0205A86C522>I<EB3FE0B5FCA512037EB3B3B3A3B612C0A51A457DC41F>108
D<90277FC003FFEC07FEB5011F01E090383FFFC0037F01F890B512F092B56C4880913DC3
F81FFE07F03FFC913DC7E00FFF0FC01FFE00039026CF800790399F000FFF6C0200149E02
DE15BC02FC6D01F86D1380A24A5D4A5DA34A5DB3A7B600C1B60083B6FCA5582D7DAC5D>
I<90397FC003FFB5011F13E0037F13F892B57E9139C3F81FFE9139C7E00FFF00039026CF
80077F6C140014DE02FC6D7FA25C5CA35CB3A7B600C1B61280A5392D7DAC3E>I<EC1FFC
49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4890C76C7E48486E
7E000F8249141F001F82A248486E7EA2007F82A400FF1780AA007F1700A46C6C4A5AA200
1F5EA26C6C4A5A00075E6D147F6C6D495A6CD9E0035B27007FF80F90C7FC6DB55A010F14
F8010114C09026001FFCC8FC312F7DAD38>I<90393FE00FFCB590387FFFC002E3B512F0
02EF14FC9139FFE03FFE9238000FFF0003496D13806C01F86D13C04A6D13E04A15F08218
F8A2EF7FFCA4EF3FFEACEF7FFCA318F817FFA24C13F06E15E06E5B4C13C002FE15806E01
1F13009238E07FFE02EFB512F802E314E002E01480DB0FF8C7FC92C9FCADB612C0A53740
7EAC3E>I<90397FC03F80B5EBFFF002C113F802C713FCEDC7FE9138CF8FFF0003EBDF0F
6C13DE14FCA214F8ED07FE9138F003FCED00F01600A35CB3A5B612F0A5282D7EAC2E>
114 D<90391FFC038090B5128F000314FF120F381FF003383FC00049137F007F143F90C7
121F5A150FA27F7F6D90C7FC7FEBFF8014FC6CEBFF8015E06C14F86C806C806C806C1580
C6FC011F14C01301D9000F13E0140100F87F157F6C143F151FA27EA26C15C0153F7F6DEB
7F806DEBFF009038FC03FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB
03E0A61307A3130FA3131FA2133F137F13FF5A5A001F90B51280B7FCA4000101E0C7FCB3
A3ED03E0AA6C9038F007C0A2150FD97FF8138090393FFC1F0090381FFFFE6D5B01035B90
38007FC023407EBE2C>I<D93FE0EC7FC0B549B5FCA50003EC00076C81B3A85EA25EA25E
7E6E497F017F02FBEBFF8090393FFC03F36DB512E36D1483010314039026003FF849C7FC
392E7DAC3E>I<B6398007FFFCA5000101F0C7EA7E006C167C8017FC017F5D6E1301013F
5D6E1303011F5D6E13076D5D1580160F6D01C05B161F6D92C7FC6F5A6D143EEDF07E6D14
7C15F816FC6E6C5A15FD023F5B15FF6E5BA26E5BA36E5BA26E90C8FCA26E5AA26E5AA236
2C7EAB3B>I<B6398007FFFCA5000101F0C7EA7E006C167C8017FC017F5D6E1301013F5D
6E1303011F5D6E13076D5D1580160F6D01C05B161F6D92C7FC6F5A6D143EEDF07E6D147C
15F816FC6E6C5A15FD023F5B15FF6E5BA26E5BA36E5BA26E90C8FCA26E5AA26E5AA35D14
015D1403001F5C383F8007D87FC05B38FFE00F5D141F92C9FC143EEBC07E387FC1FCEB07
F86CB45A6C13C000075BD801FCCAFC36407EAB3B>121 D E /Fn
1 59 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>58
D E /Fo 1 14 df<933803FFE0047F13FF0303B612E0030F15F8923A7FFE003FFFDBFFC0
01017FDA03FEC8EA3FE0DA0FF8ED0FF8DA1FC0ED01FC4A486F7E02FECAEA3F804948717E
D903F0EF07E04948717E4948717E4948717E49CC127E017E85017C8549737E0001874919
074848737EA24848737E000F8749190090CE1278481B7CA2003E87A2003C1B1EA2007C1B
1FA2007887A200F81C80A2481B07AC6C1B0FA200781C00A2007C63A2003C1B1EA2003E1B
3EA26C63A26C1B786D1AF86D19010007636C6C4F5AA26C6C4F5A6D190F000063017C4FC7
FC017E616D197E6D6C606D6C4D5A6D6C4D5A6D6C4D5AD901FCEF1FC06D6C4D5ADA3F8004
FEC8FC6E6C4B5ADA0FF8ED0FF8DA03FEED3FE0912600FFC0903801FF80DB7FFE013F90C9
FC030FB612F8030315E0DB007F91CAFC040313E0595C7BC664>13
D E /Fp 8 122 df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D76
8C21>46 D<DC1FFC140E0303B57E030F02F0131E037F02FC133E913A01FFF801FE020790
3AC0003F807E4A48C7380FC0FEDA3FF8EC03E14A48EC01F1902601FFC0EC00FB4949157F
4990C9123F4948161F4948160F495A4A1607017F1703495A48491601A248491600A25A91
CB127E5A5B001F193EA2123F5BA21A1E127FA3491800A212FFAE127FA27FA21A1E123FA3
7F121F1A3E000F193C7F7E6E177C6C1978A26C6D17F81AF06C6D16016D6C17E0013F1703
6E17C06D6C16076D6CEE0F806D6CEE1F006D6D153E6D6D5D9026007FF05D6E6C4A5ADA0F
FEEC07E0912607FFC0EB1FC002019026F801FFC7FC6E6CB512FC030F14F0030314C09226
001FFCC8FC475879D456>67 D<B500FE0307B6128080A281D8001F6DDA001FEBE0006D05
0713806FDB01FEC7FC6F6F5AA26E6C16786E7EA26E7E6E7EA26E7F6E7F82806E7F82157F
6F7E82151F6F7E83816F7F83816F7F83167F707E83161F707E8482707F8482707F717EA2
717E717EA2717E711380A27113C07113E0A27113F0F07FF8A2F03FFCF01FFEA2F00FFF72
13F8A28484A284197FA2193F191FA2496C160F1907497ED9FFF01603000301FC1601B612
F019001A78A251527CD15A>78 D<003FBB12E0A491C79038F8000701F06E48EB007F4918
3FD87F80F00FF090C81607007E1903A2007C1901A400781900A500F81AF8481A78A6C917
00B3B3AC4C7E030713FF91B812F8A44D517CD056>84 D<EF0FC0EF3FF0DA3FF0EBFFF890
3A01FFFE03F001079039FF87C1FC903A1FF03FEF83903A7FC00FFE039038FF0003484813
0100039238FF01F8496DEB00F00007EE8000000F8249147FA2001F82A8000F5EA26D14FF
00075E000393C7FC6D5B00015D6C6C495A9138C00FF8489038F03FE001E7B51280D803C1
49C8FC9038C03FF04848CAFCA57FA27F7F7F90B612F06C15FF17E06C16F86C16FE6D8118
8048B812C0D807F8C7001F13E0D80FE0140148489138003FF04848151F007F160F90C9EA
07F85A481603A56C16076C17F06D150F003F17E06C6CED1FC06C6CED3F80D807F8EDFF00
6C6C4A5AC6B46CEB0FF8D93FF8EBFFE0010FB61280010102FCC7FCD9000F1380364F7DB5
3C>103 D<9039FF8003FEB590381FFFC0037F13F0913981F80FFC913983E003FE000390
39878001FFC6EB8F00D97F9E6D7F14BC14B802F86E7E5CA25CA35CB3AC496C4A7E486D49
7FB600E0B612E0A43B347CB342>110 D<EC03FE91383FFFE091B512F8903903FE03FE90
3A0FF0007F80D91FC0EB1FC0D97F80EB0FF049C76C7E48486E7E49140100038248486E7E
000F178049157F001F17C0A2003F17E049153FA2007F17F0A300FF17F8AB007F17F0A36D
157F003F17E0A2001F17C0A26C6CEDFF80000717006D5C00035E6C6C4A5A6C6C4A5A6D6C
495A6D6C495AD90FF0EB7F80902707FE03FFC7FC0101B512FCD9003F13E0020790C8FC35
367DB43C>I<B6D88003B512C0A4000301F8C7EBFC00C601E0EC3FF0017F16C0715A133F
6E92C7FC011F151EA26E143E010F153C6E147C01071578A26E14F801035D6E13016D5DA2
ED80036D5DEDC007027F5CA2EDE00F023F91C8FC6F5A021F131EA2EDF83E020F133CEDFC
7C02071378A2EDFEF802035B15FF6E5BA36E5BA26F5AA36FC9FCA2151EA2153E153C157C
1578A215F85D1401D83F805BEA7FC01403D8FFE05B14075D4ACAFC5C387FC03E495A383E
00F8381F03F06CB45A6C1380C648CBFC3A4B7EB23F>121 D E /Fq
52 122 df<EDFF80020F13E0023F13F89138FF80FC903903FC001ED907F07F4948137F49
48EBFF80495AA249C7FCA249EC7F0049143E93C7FCACEE3F80B8FCA4C648C7FC167F163F
B3AE486CEC7FC0007FD9FC1FB5FCA430467EC536>12 D<140E141E143C147814F0EB01E0
1303EB07C0EB0F8014005B133EA25B5BA2485AA212035B12075BA2120F5BA2121FA290C7
FC5AA4127EA75AB3A2127EA77EA47E7FA2120FA27F1207A27F12037F1201A26C7EA2137C
7FA27F7F1480EB07C0EB03E01301EB00F01478143C141E140E176477CA26>40
D<12E07E12787E7E7E7F6C7E6C7E12017F6C7EA2137C7FA27FA21480130F14C01307A214
E01303A214F0A2130114F8A4EB00FCA7147EB3A214FCA7EB01F8A414F01303A214E0A213
0714C0A2130F1480131F1400A2133EA25B5BA2485A5B1203485A485A90C7FC121E5A5A5A
5A17647BCA26>I<121EEA7F8012FF13C0A213E0A3127F121E1200A5120113C0A2120313
801207A2EA0F00A2121E5A127C127812300B1D78891B>44 D<B612C0A61A067F9821>I<
121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<1438147814F81303130F137F
B5FCA213F71387EA0007B3B3AFEB1FFE007FB61280A4214278C131>49
D<ED0780150FA2151FA2153F157FA215FF5CA25C5C157F140F140E141C143C1438147814
F014E01301EB03C014801307EB0F00130E131E131C5B1378137013F0485A5B1203485A90
C7FC5A120E5A123C123812785AB812C0A4C8387F8000AC4B7E91B612C0A42A437DC231>
52 D<EC07FCEC3FFF91B512C0010314E0903907FC03F090391FE000F84948137890397F
8001FC9038FF0003491307485A485AA24848EB03F8000FEC01F04990C7FC121FA25B123F
A3127F5BEC7FE0903881FFF8903887F7FE39FF8F007F019EEB3F80019CEB1FC001B8EB0F
E001B0EB07F001F014F849130316FC5BED01FEA316FF5BA4127FA66C7EA216FE121F1503
16FC6C7E16F86C6C1307ED0FF06C6C14E06C6CEB1FC06C6CEB3F8090397F80FF006DB45A
010F13F8010313E00100138028447CC131>54 D<14FF010713E0011F13F8017F7F9038FF
81FE3901FE007FD803F8EB3F804848EB1FC0000FEC0FE05B001FEC07F0485AED03F8127F
4914FCA312FFED01FEA616FFA45D127FA36C7E5D121F6D5B000F140D6C6C131D6C6C1339
6C6C13796C6C13F190387FEFE190391FFF81FE903807FE0190C7FCA2ED03FCA416F81507
16F0EA0F80486CEB0FE0487EED1FC01680153F49EB7F004913FE391E0001FC001F495A39
0FE01FF06CB55A6C1480C649C7FCEB1FF028447CC131>57 D<ED01E0A34B7EA34B7EA34B
7EA24B7EA34B7E1539A203797F1570A203F07FEDE07FA2020180EDC03FA2020380ED801F
A2020780ED000FA24A80020E1307A24A801603A24A8082A24A8182A24A8191B7FCA24982
A202C0C7123F49486E7EA349C86C7EA24982010E1507A2011E82011C1503A2013C828313
7C01FC83487E2607FF80020713E0B500F091B612C0A442477DC649>65
D<B8FC17E017FC17FFC69026E000037F6D4801007FEF3FE0717E717E84170784170384A8
60170760170F604D5A4D5AEFFFC04C5BDC0FFEC7FC91B612F817E017FE913AC00001FF80
9338007FE0EF1FF0717E717E717E717E19808319C0187FA219E0A719C018FFA24D1380A2
4D13005F4D5A4D5AEF7FF8496C49485AB912C095C7FC17FC17C03B447CC345>I<DB0FFC
146092B500C013E00203ECF001020F14FC913A3FFE00FE03DAFFE0EB1F8701030180EB07
C74948C7EA03EFD90FF8EC01FF4948804948157F4948153F4948151F4890C9FC180F4848
1607485AA248481603A2001F17015B123FA2491600127FA31900485AAE6C7EA219E0A212
3F7FA2001F17017F000F18C0A26C6C160319806C6C16076C7EF00F006C6D150E6D6C151E
6D6C5D6D6C5D6D6C15F8D907FE4A5A6D6C6CEB07E0010001E0EB1F80DA3FFE01FFC7FC02
0FB512FC020314F0020014C0DB0FFEC8FC3B487BC546>I<B8FC17F017FC17FFC69026E0
000713C06D4801007FEF1FF0EF0FFCEF03FE717E83727E727E727EA2727E85180785A218
0385A3727EA41A80AD1A00A44E5AA361180761180F61181F614E5A187F4E5A4D90C7FC4D
5A4D5AEF1FF8EF7FE0496C903807FFC0B9C8FC17FC17F094C9FC41447CC34B>I<B912FC
A4C601E0C7EA3FFE6D4814071701EF007EA2183E181EA284A384A40407EB0380A495C7FC
A35EA25E5E16FF91B6FCA4ECC000163F8282A28219E0A3F001C0A393C7FCA318031980A2
1807A3180FA2F01F0060604D5A1707496C147FBAFC60A33B447DC342>I<B912F0A4C601
E0C713F86D48141F170717011700A21878A2183CA3181CA4180E160EA31800A4161EA216
3E167EED01FE91B5FCA4ECC001ED007E163E161EA2160EA793C8FCAFEBFFF0B612FCA437
447CC340>I<DB0FFC146092B500C013E00203ECF001020F14FC913A3FFE00FE03DAFFE0
EB1F8701030180EB07C74948C7EA03EFD90FF8EC01FF4948804948157F4948153F494815
1F4890C9FC180F48481607485AA248481603A2001F17015B123FA2491600127FA396C7FC
485AAD0403B612C06C7EA393C7EBF000003FEF3FE07FA2121F7F120FA26C7EA26C7E6C7E
807E6D6C157F6D7E6D7ED90FFC15FF6D6CEC01EF6D6C6CEB03C7010001F0EB0F83DA3FFE
EB7F01020FB5EAFE00020302F81360020002E090C7FCDB0FFEC9FC42487BC54D>I<B6D8
E007B6FCA4C601E0C7000713006D486E5AB3A891B7FCA402C0C71203B3AA496C4A7EB6D8
E007B6FCA440447CC349>I<B612F8A439007FF0006D5AB3B3B3A4497EB612F8A41D447D
C323>I<B612FCA4C601F0C9FCEB7FC0B3B21870A518E0A51701A3170318C01707A2170F
171F173F17FF1603496C131FB91280A434447CC33D>76 D<B500E00407B5FCA36E5EC61A
00D977F8EE1DFEA3D973FC1639A3D971FE1671A2D970FF16E1A36E6CEC01C1A36E6CEC03
81A26E6CEC0701A36E6C140EA36E6C141CA26E6C1438A36E6C1470A36E6C14E0A292397F
8001C0A392393FC00380A392391FE00700A292380FF00EA36F6C5AA36F6C5AA26F6C5AA3
6F6C5AA3705AA201F86E5A487ED807FF4D7EB500F890261F0003B6FCA3160E50447CC359
>I<B500E0021FB5FCA280A2C66C6C020013E06EED3F80F01F00D977FE150EEB73FFA201
717F01707FA26E7E81143F6E7E81140F6E7E81806E7F82806F7EA26F7E6F7EA26F7E6F7E
A26F7E1780816F13C017E0167FEE3FF017F8161FEE0FFC17FE1607EE03FFA270138E7013
CEA2EF7FEEEF3FFEA2171F170FA21707A217031701A201F81500486C167EEA07FFB500F8
153E181EA2180E40447CC349>I<ED1FFC4AB512C0020714F091391FF007FC91397F8000
FFD901FEC7EA3FC049486E7ED907F0EC07F049486E7E49486E7E49486E7E49C9127F4983
4848707E4848707EA24848707EA2000F84491607001F84A24848707EA3007F84A24982A3
00FF1980AD6C6C4C1300A4003F60A26D1607001F60A26C6C4C5AA20007606D161F000360
6D163F6C6C4C5A6C606D6C4BC7FC6E5C6D6C4A5A6D6C4A5AD907F8EC0FF06D6C4A5A6DB4
EC7FC09028007FC001FFC8FC91391FF007FC0207B512F0020114C09126001FFCC9FC4148
7BC54C>I<B712FEEEFFE017F817FEC6903AE00007FF806D4801007FEF3FE0717E717E71
7E717EA28483A21980A81900A25F606017074D5A4D5A4D5AEFFFC0040790C7FC91B65A17
F017C002C0CAFCB3A8497EB612E0A439447DC342>I<B712E016FF17C017F8C69039E000
3FFC6D48EB03FF04007F717E717E717E717EA284170784A760A2170F604D5AA24D5A4D5A
4C48C8FCEE07FEEE3FF891B612E094C9FCA29139C0007FC0EE1FF0707E707E707E707E82
84A2717EA784A71AE084173FA21901496CDA1FF813C0B600E0010F1303943907FC078094
3803FE0F0500B51200CBEA3FFEF007F843467CC348>82 D<49B41303010FEBE007013FEB
F80F90B512FE4848C66C5AD803F8EB1F9F48486DB4FC4848130348487F48487F8248C8FC
82127E00FE81A282A37E82A27FA26C6C91C7FC7F7FEA3FFCEBFF806C13F8ECFF806C14F8
6C14FE6C6E7E6C15E06C6C80011F80010780D9007F7F02077FEC007F030F138015036F13
C081167FEE3FE0A200E0151FA3160FA27EA46C16C0161F7E6C1680163F6C16006D5C01E0
14FE6D495AD8F9FE495A3AF87FC01FF0486CB55A010F1480D8E00149C7FC39C0003FF02B
487BC536>I<003FB912F8A4903BF8003FF8003F01C06D48130748C7ED01FC007E170000
7C187C0078183CA30070181CA500F0181E48180EA5C81600B3B3A4ED7FFC0103B77EA43F
447DC346>I<B600E0011FB5FCA4C601E0C813E06D48ED3F80F01F00180EB3B3A7181E01
3F161C80A2011F163C18386D6C157818706D6C15F04D5A6D6C14036D6C4A5A6D6C4A5A6E
6C49C7FCDA3FE0137E91391FFC03FC0207B512F002015C6E6C1380DB07FCC8FC40467CC3
49>I<B600C091383FFFFCA4C601FCC8000713806D48923803FC00013F705A011F5F6E5E
010F5F6D6C15036E4B5A6D94C7FC6F5C6D160E6D6D141E6F141C027F5D6E6C147818706E
6C14F06F5C020F4A5A6E6C1303606E6C1307048090C8FC6E5C6EEBC01E171C92387FE03C
EEF038033F137892381FF8705FED0FFDEEFFC0816F5BA26F90C9FCB3A54B7F0203B67EA4
46447FC349>89 D<EB0FFC90B57E000314E03907F00FF0390FC003F86D6C7E486C6C7E15
7F82153FA26C486D7EEA0380C8FCA6EC1FFF49B5FC90380FFE1FEB7FE03801FF00EA03FC
EA0FF8485A485A5B485AA200FF16E090C7FCA3153FA26D137F007F146F6D13EF003F9039
01C7E1C0391FE003873B0FF81F07FF802707FFFE03130000019038F801FE3A001FE000FC
2B2E7CAC31>97 D<EA01FC12FFA4120712031201B2EC01FE91380FFFC0023F13F09138FC
03FC9039FDF000FED9FFC0137F4AEB3F8091C7EA1FC049EC0FE0A249EC07F017F81603A2
17FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0FE06D141F17C06EEB3F80D9F3C0
EB7F009039F1F001FE9039E0FC07F891383FFFE0D9C00F1380C7D803FCC7FC2F467DC436
>I<EC7FC0903803FFFC010F13FF90393F803F809039FE000FC04848131F4848EB3FE048
5AA2485A485AED1FC0003FEC07004990C7FC127FA390C9FC5AAB6C7EA3123F6D1470A26C
6C14F0000F15E06D13016C6C14C06C6C13036C6CEB07806C6CEB0F0090383FC07E90381F
FFF8010713E001001380242E7DAC2B>I<167FED3FFFA415018182B2EC7F80903803FFF0
010F13FC90383FC07E9038FF000FD801FC6D5A48487F48487F000F805B484880A2485AA2
127FA290C8FC5AAB7E7FA2123FA27F001F5D6C7E5D6C6C5B6C6C4913806C6C90380F7FC0
6C6C011E13FE90387F80FC90381FFFF8010713E00100010013002F467DC436>I<EB01FE
903807FFC0011F13F090387F03FC9038FC00FE4848137F48487F000715804848EB1FC05B
001F140F003F15E05B1507007F15F0A290C7FC5AA290B6FCA390C9FCA67EA27FA2123F6D
1470121F16F06C6C14E06D1301000715C06C6C13036C6CEB07806CB4EB1F0090383FC07E
90381FFFF8010313E0010090C7FC242E7DAC2B>I<EC0FE0EC3FFCECFFFE903803F83F90
3907F07F8090380FE0FF495A495AA2495AED7F0049131C4990C7FCAFB67EA4C648C8FCB3
B0487E007F13FFA421467EC51E>I<EE1F80D901FCEB7FE090390FFF81FF013F9038E3E3
F09039FE03FF033901FC01FE3803F800484890387F00C0496D1300000F81A248486D7EA9
6C6C495AA2000792C7FC6D5B6C6C13FE6C6C485A6D485A3903BFFFE0D8070F1380D901FC
C8FC90CAFC120E120FA37F6C7E7F90B512F86CECFF8016E06C15F86C810003813A0FE000
0FFFD81F80130148C8EA7F8048153F007EED1FC012FE48150FA56C151F007E1680007F15
3F6C6CEC7F006C6C14FE6C6C495AD807F8EB07F8D801FFEB3FE06C6CB51280011F49C7FC
010113E02C427DAC31>I<EA01FC12FFA4120712031201B2EC01FE913807FFC0021F13F0
91383E07F891387803FCECE0019039FDC000FE5C01FF8091C77EA25BA35BB3A7486CECFF
80B5D8F83F13FEA42F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01
FC12FFA4120712031201B3AE487EB512F8A415437DC21C>I<EA01FC12FFA41207120312
01B392387FFFE0A492381FFE00ED0FF016C05E4BC7FC153C5D5D4A5A4A5A4A5A4AC8FC5C
EC7F804A7E13FD9038FFEFE0ECCFF01487EC03F801FE7FEBFC016E7E81816F7E82151F6F
7E821507826F7E82486C903807FF80B5D8F81F13F8A42D457DC433>107
D<EA01FC12FFA4120712031201B3B3B3A3487EB512F8A415457DC41C>I<D801FC01FFEC
1FE000FF010701E0EBFFFC4AD9F80113FF913C3E03FC07C07F80913C7801FE0F003FC000
07D9F000011E131F2603FDC0D97F386D7E1201D9FF8002F08091C76C481307A2495DA349
5DB3A7486C4A6C497EB5D8F81FB50003B512E0A44B2C7DAB52>I<3901FC01FE00FF9038
07FFC0021F13F091383E07F891387803FC0007EBE0013A03FDC000FE00015B01FF8091C7
7EA25BA35BB3A7486CECFF80B5D8F83F13FEA42F2C7DAB36>I<EC7F80903803FFF0010F
13FC90383FC0FF90397E001F80496D7ED801F0EB03E000038148486D7E48486D7EA24848
147E003F157FA348C8EA3F80A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE
000F5D6D13016C6C495A6C6C495A6C6C495A6C6C495A90263FC0FFC7FC6DB45A010713F8
9038007F802A2E7DAC31>I<3901FC01FE00FF90380FFFC0023F13F09138FC07FC9039FD
F001FE3A03FFC000FF6C49EB7F8091C7EA3FC049EC1FE0160F4915F0EE07F8A3EE03FCA3
EE01FEAA160317FCA3EE07F8A2EE0FF0A26DEC1FE07FEE3FC06EEB7F806EEBFF009039FD
F003FE9039FCFC0FF891383FFFE0020F1380DA03FCC7FC91C9FCAD487EB512F8A42F3F7D
AB36>I<91387F8007903903FFE00F010F13F890383FE07C9039FF801E1F3901FE000F48
48EB079F48486DB4FC48487FA248487FA2484880A2485AA312FF90C8FCAA6C7EA36C7EA2
5E6C7E000F5C7F6C6C5B6C6C5B6C6C497E6C6C131E90387FC0FC90381FFFF0010713C001
00130091C7FCADEEFF80033F13FEA42F3F7DAB33>I<3903F807E000FFEB1FF8EC7FFCEC
F8FE9038F9E1FF000713C13803FB81120114019038FF00FE1538491300A45BB3A6487EB5
12FEA4202C7DAB26>I<90383FE0183901FFFC380007EBFF78390FE01FF8381F0007003E
1301481300A20078147812F8A215387EA27E6C1400EA7FC013FC383FFFE014FC6C13FF00
0714C06C14E0C614F0011F13F81300EC0FFC140300E0EB01FE1400157E7E153EA27EA27E
157C7E15F86C13019038C003F039FBF00FE000F1B5128039E07FFE0038C00FF01F2E7DAC
26>I<130EA6131EA4133EA2137EA213FE120112031207001FB512F0B6FCA3C648C7FCB3
A3151CAA6D133C6D1338A290383F8070ECC0F090381FE1E090380FFFC001031380903800
7E001E3E7EBC26>I<D801FC147F00FFEC3FFFA400071401000380000181B3A75EA35DA2
00005C6D9038077F80017E010F13C0017F011E13FE90383FC07C90381FFFF8010713E001
00018013002F2D7DAB36>I<B539F003FFFCA4000390C7EA7FE06C48EC3F80EE3E000000
151E161C6D143C6D1438A26D6C5BA26E13F0011F5CA2ECE001010F5CA26D6C485AA2ECF8
07010391C7FCA26E5A0101130EA26D6C5AA2ECFF3CEC7F38A215F86E5AA26E5AA36E5AA3
6E5AA22E2C7EAA33>I<B500E1B539C07FFF80A43E07FE0007FC000FFC006C486D48EB07
F00001715A03015D826C6C01035DA21807017F496C91C7FC167EA290273F800F7F130EED
0E3FA290261FC01E6D5AED1C1FA290260FE03C6D5AED380FA2902607F0786D5AED7007A2
902603F8F06D5AEDE003A2D901FDECF9C0EDC001A2D900FFECFF804B7EA2027F92C8FC92
C77EA26E147E023E143EA2021E143C021C141C412C7EAA46>I<B539F003FFFCA4000390
C7EA7FE06C48EC3F80EE3E000000151E5E017F1438A280013F5CA26E13F0011F5CA26D6C
485AA2ECF00301075CA26D6C48C7FCA214FC0101130EA2ECFE1E0100131CA2EC7F38A215
F86E5AA26E5AA36E5AA36E5AA292C8FCA25C140EA25CA3003C5B127EB45BA25C13014848
5A387C0780011FC9FCEA3FFEEA0FFCEA03F02E3F7EAA33>121 D
E /Fr 53 123 df<93263FFF80ECFFFC0307B500E0013FEBFF80037FDAF801B612E00203
B6D8FC0F81020FDBFF3F81023FD9F00790B538C01FFC4A90C79139FC0003FEDAFFF84902
E0497E4949494A5B4901C04991C7487F49494B5C4990C7485B5B4A5E527F49484C6E5BA3
717090C7FC8371705A71EE03F899C9FCA80907B512C0BFFCA626003FFEC801F8C7120F88
B3B3A4003FB500FE90B6D8F807B612C0A66A547DD373>14 D<151F153F157F15FEEC01FC
EC07F8EC0FF0EC1FE0EC3FC0A2EC7F80ECFF005B495A5C1307495AA2495A133F5C137F5C
13FFA2485BA25A91C7FC5AA25B120FA3485AA4123FA25BA2127FA65B12FFB3A2127F7FA6
123FA27FA2121FA46C7EA312077FA27E807EA26C7FA2137F80133F80131F6D7EA26D7E13
03806D7E7FEC7F80EC3FC0A2EC1FE0EC0FF0EC07F8EC01FCEC00FE157F153F151F207873
D935>40 D<127812FC127E127F6C7EEA1FE06C7E6C7E6C7EA26C7E6C7E806D7E133F806D
7EA26D7E80130780130380A26D1380A215C07F15E0A2147F15F0A3EC3FF8A415FCA2141F
A215FEA6140F15FFB3A215FE141FA615FCA2143FA215F8A4EC7FF0A315E014FFA215C05B
1580A2491300A25C13075C130F5C495AA2495A5C137F495A91C7FC485A485AA2485A485A
485AEA3F8048C8FC127E5A1278207879D935>I<B712F0AC240C7FA02E>45
D<EA03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C13806C13006C5AEA03F813
13779226>I<EF03C0EF07E0EF0FF0A3171F18E0173FA218C0177F188017FFA218005E5F
1603A25F16075F160FA25F161F5F163FA25F167F5FA216FF94C7FC5DA25E15035E1507A2
5E150F5E151FA25E153F5E157FA25E15FF93C8FC5CA25D14035DA214075D140FA25D141F
5D143FA25D147F5D14FFA292C9FC5B5C1303A25C13075C130FA25C131F5CA2133F5C137F
A25C13FF91CAFC5AA25B12035B1207A25B120F5B121FA25B123F5B127FA25B12FF90CBFC
A3127E123C347878D945>I<150FED3F80157FEC01FF1407143F0103B5FC48B6FCB7FCA4
EBFC3FEAFE00C7FCB3B3B3A4003FB812C0A6324E77CD45>49 D<EC3FFF0103B512F8011F
14FE017FECFFC048B77E4816F848D9807F7F270FFC000F7F001F02037F486C6D14806D6D
14C0486D6D13E06E7FB516F06E7F18F882A218FCA2826C5BA26C5B6C90C7FCEA07FCD801
F05CC914F8A34C13F0A218E05E18C04C138018004C5A4B5B5F4B5B4B5B5F4B5B4B48C7FC
4B5A4B5AEDFFE04A5B4A90C8FC4A4814FC4A5A5DDA1FE0EB01F84A5A4A5A4AC7FC495AD9
03F81403495A494815F04948140F49B7FC5B90B8FC5A5A4817E05A5A5A5AB9FCA218C0A4
364E79CD45>I<91380FFFC091B512FE0103ECFFC0010F15F0013F15FC90267FF8077F90
26FFC0007F4890C76C1380D803FC6E13C048B46E13E002C015F0487F6E7F18F8487FA65E
6C4915F0A26C5B6C4915E06C495BD8003CC714C090C848138018004C5A4B5B4B5B030F5B
037F13C0027FB55A04FCC7FC16F016FEEEFFC0DA000713F0030113FC6F6CB4FC70138070
13C018E07013F018F818FCA27013FE13F0EA07FE486C16FF487F487F487FA2B57EA418FE
A25E4A15FC7E4A15F86C495B91C714F0D81FFC4A13E0000F4B13C06CB46C48B512806CD9
F80714006C90B65A6C16F8013F15E0010F1580010102FCC7FCD9001F13C0384F7ACD45>
I<173F4D7E17FF5EA25E5E5E5EA25E5E93B5FC5DA25D5D5D5DA2ED3FBFED7F3F15FEEC01
FCA2EC03F8EC07F0EC0FE0EC1FC0A2EC3F80EC7F0014FE495AA2495A495A495A5C131F49
5A49C7FC13FE5B1201485A485A485A5B121F485A48C8FC12FEBA12F0A6C96CEB8000AD02
0FB712F0A63C4E7CCD45>I<D80380ED0380D807F0151F01FEEC01FFD9FFF0133F91B7FC
18005F5F5F5F5F5F5F4CC7FC5E16F016C04BC8FC15F001F0CAFCAA913807FF80027F13FC
01F1B6FC01F315C090B712F0DAFC037FDAC0007F91C76C7E496E7E01F816807013C04916
E06C5AC96C13F0A318F8A318FCA2EA01E0EA0FF8487E487E487E80B5FCA318F8A318F091
C75A6C5A4916E06C484A13C013E06C484A138001F016006C6C49485AD807FE495B2703FF
E01F5B6C90B65A6C16C0013F92C7FC010F14FC010314E09026007FFCC8FC364F79CD45>
I<923807FF80037F13F00203B512FC021F80027F8091B50001138001039039F8003FC049
01E0EB1FE0490180133F4990C7EAFFF049485B49484913F8495A485D5C5A485BA25A4A6D
13F05A7013E07013C048EE3F0094C7FC5C5AA2ED3FF80281B57E028314E0B5008714F802
8F80DA9FC07F9139BF001FFF02FC6D13807013C04A6D13E04A15F018F84A7F18FCA24A15
FEA44A15FFA37EA67EA46C17FE80A26C17FCA26C4B13F8806C17F06C6D15E06C5D6E4913
C0D97FFE4913806D6C6CB512006D90B512FC01075D6D5D010015C0021F49C7FC020313E0
384F7ACD45>I<EA0FE0A27FEBFFE091B812C0A45AA219801900606060485FA260606001
C0C7000190C7FC495D48C8485A1607007E4B5A4C5A4C5A4C5A4C5A4893C8FC4B5A1503C8
485A4B5AA24B5A4B5AA2157F4B5AA24A5BA25C4A90C9FCA25CA25C5DA2143FA2147FA314
FF5DA35BA65BAC6D5B6D5B6E5AEC1F803A5278D045>I<BA12E019FF1AF01AFC1AFF87D8
000701FCC7000114E0DE003F7F737F737F737F85737FA21C8085A21CC0A81C80611C00A2
4F5B61634F5B4F5B077F13C04EB55A060F49C7FC92B812F81AC0A21AFC1AFF03FCC86C13
C0071F13F007077F7313FE737F731480A27413C01CE0861CF0A31CF886A662A21CF0A350
13E0A297B512C0611C804F1400190F073F5B96B512F8BC5A1BC06308FCC7FC1AE04FC8FC
55527CD162>66 D<932601FFFCEC03C0047FD9FFC013070307B600F8130F033F03FE131F
92B8EA803F0203EFC0FF020FDAF00113F1023F49C7EA3FFB4A01F00207B5FC49B500C080
4991C9FC4949824901F88249498249498249498290B5488292CAFC4885485B86485B481A
7FA24849183FA3485B1B1FA25AA24A95C7FCA3B5FCAE7EA280A2F30FC07EA36C7FA21B1F
6C6D1980A26C1A3F6C7F1C006C6D606C6E17FEA26D6D4C5A6D6D4C5A6D6D16076D6D4C5A
6D01FE4C5A6D6D4C5A6D02C0EDFF806D6C01F8020390C7FC6E01FFEC1FFE020F02F0EBFF
F8020391B65A020017C0033F93C8FC030715FCDB007F14E0040101FCC9FC525478D263>
I<BA12C019FEF1FFC01AF81AFE747ED8000701FCC7000F14E0060080071F13FC07077F07
017F7380747F081F7F8886747F747FA2747FA288861D80A2871DC0A31DE0A4871DF0AF1D
E063A41DC0A398B51280A31D0062646264505BA2505B505B505B505B4FB5C7FC4F5B070F
5B077F5B0607B512E0BC128098C8FC1AF81AE04FC9FC19C05C527CD169>I<BC7EA487A2
D8000749C71203F0003F1907851900747E1A3FA21A1F1A0FA21A0787A31A03187EA3871A
01A306FE90C8FCA3170117031707173F92B6FCA69238FE003F1707170317011700A2F31F
80187EA2F33F00A595C85AA21B7EA21BFEA31A01631A03A21A071A0F1A1F1A3FF2FFF819
03190F4EB5FCBCFCA363A351517CD05A>I<BCFCA41B80A2D8000749C71207F0003F190F
1903857313C01A7F1A3FA21A1FA21A0F1BE0A31A07A2187EA21BF01A03A397C7FC18FEA3
170117031707173F92B6FCA69238FE003F1707170317011700A3187EA795C9FCB2B812FE
A64C517CD057>I<932601FFFCEC01E0047FD9FFE013030307B600F81307031F03FF130F
92B8EAC01F0203EFE07F020FDAF801EBF8FF023F91C7EA1FFD4A01F80207B5FC91B500C0
1401010391C97E4949824901F88249498249498249498290B54882A24891CBFC485B1B7F
485B1B3F5A4A181F5AA2485B1B0FA25AA298C8FC5CA2B5FCAE6C94B812F0A280A37E95C7
6CEBE000A26C7FA27E807EA26C7FA26C7F6C80A26D7F6D7F6D7F6D01FC93B5FC6D7F6D6D
6C5C010002E05C6E01F85C6E01FF141F020F02F8EBFFF3020391B612E10200EFC07F031F
EE801F03079238FC0007DB007F02F01300040149CAFC5C5478D26C>I<B812F0A6D80007
49C7FCB3B3B3B0B812F0A62C527CD134>73 D<B812FEA6D8000749CAFCB3B3A71A3FA41A
7EA51AFEA3F101FCA31903A21907190F191FA2F13FF819FF601807181F4DB5FCBBFCA21A
F0A448527CD153>76 D<93380FFFC00303B6FC031F15E092B712FC020316FF020FD9FC00
14C0023F01E0011F13F04A018001077F494848C7000113FE4901F86E6C7E49496F7F4949
6F7F49496F7F49496F7F498590B5C96C7F4A8248864849707FA2481B804A83481BC0A248
497113E0A3481BF0A348497113F8A5B51AFCAF6C1BF8A26E5FA36C1BF0A36C6D4D13E0A3
6C6D94B512C0A26C1B806E5E6C1B006C6D4C5BA26C6E4B5B6D6D4B5B6D6D4B5B6D616D6D
4B5B6D01FC92B55A6D6D4A91C7FC6D6D6C01075B6D02E0011F5B023F01FC90B512F0020F
90B712C0020394C8FC020016FC031F15E0030392C9FCDB001F13E0565478D267>79
D<BA7E19FCF1FF801AE01AF81AFED8000701FCC7001F7F060114C0726C7F737F737F8573
7FA2878587A31C80A91C00A3636163A24F5B4F5B4F5B4F5B4EB55A061F91C7FC92B812FC
621AC097C8FC19F04BCCFCB3ACB812F0A651527CD15E>I<B912FCF0FFE019FEF1FFC01A
F01AFCD8000701FCC7003F13FF060380060080073F7F737F737F87737FA2737FA388A899
C8FCA263616361634F5B4F5B96B55A060391C9FC063F5B92B812F81AC097CAFC61737E92
26FC000114E0DD003F7F060F13FC727F727F87848784A2737FA887A7F5078075EB0FC0A3
736D131FA2736D14801D3FB800E06D6D137F739138C1FF000701ECFFFE735D083F5C0807
14E0CE001F138062537CD167>82 D<91260FFF80130F91B500F85B010702FF5B011FEDC0
7F49EDF0FF90B712F948D9FC0190B5FC489038E0000F480180130349C8FC4848153F001F
824981003F8283485A8383A212FF847FA26D82A27F7F02C092C7FC14F06C13FF15F8EDFF
8016FC6CEDFFC017F06C16FC6C82717E6C836C836C836C836D826D82130F6D821301D900
3F16801401DA001F15C01500160F1601706C13E0838383007C8212FC83A283A27E19C0A2
7EA26D4B1380A26D17006D5D01F85E6D150F01FF4B5A02C04A5A02F8ECFFF09126FFC007
5B019F90B65A010F5ED8FE034BC7FC48C66C14F848010F14E0489026007FFEC8FC3B5478
D24C>I<001FBC12C0A5481BE09126F0003F9038F0003F91C7160701FC180149F0007F01
E0193F1B1F5B49190FA248C8EF07F0A4007E1A03A500FE1BF8481A01A4C994C7FCB3B3AA
91B912FCA655517BD060>I<B800F091B71280A6D8000749CAD80FF8C7FC755AB3B3B01B
0F7F64811B1F7F515A6D80515A6E7F6E4EC8FC705D6E6D4B5A6E6D4B5A6E6DED1FF86E01
FFED7FF0020002C0903803FFE06F01FC013F1380031F90B7C9FC030716FC030116F0DB00
3F15C004074ACAFCDC003F13E061537CD16A>I<B86C021FB61280A6D8001F01FCCAD80F
FEC7FC6D6DEF03F81B076D6D601B0F6D6270161FA26D6E4C5AA26D6E5F1B7F6E6D94C8FC
636E60701501A26E6D5E1A036E6D5E1A076E6070150FA26E6E5D1A1F6E6E5D1A3F6E6071
147FA26F6D4AC9FCA26F6D5C19016F6D5C19036F5E711307A26F6D5C190F6F02805B191F
6F5EF0C03FA26F02E05B197F7001F090CAFC61705C18F9A270EBFFFCA2705CA2705CA270
5CA3705CA2705CA27190CBFCA3715AA2715AA2715AA2715A61537DD168>I<B8017FB700
C0013FB512FEA6D8003F01F8C8000F49C9380FFC006DF603F06F6F18076D735F856F7215
0F6D676F8176151F6D7161701B3F6D7493C7FC82765D6D4D187E701BFE4F806E65707114
016E4C607015EF7614036E040F607003C716076E041F6E5D1A837072130F6E043F607015
01077F6F131F6E6571D97E00163F6E04FE6F91C8FC4F7F71715B6E0301187E05E0497F06
037013FE6F4B6D5D05F018016F020704FC5B05F8497FF5FE036F020F6005FC496D140706
1F16FF6F4B6D5D05FE188F6F023F6005FF90C77E4E17DF6F6306FE6E14FF6F98C9FC4E81
A26F624E81A270614E8170614E81A270614E81A270496F5BA2706195C97EA270614D82A2
704871CAFC7048173E87537DD18E>I<91383FFFC00103B512FC011FECFF80017F15E090
B77E48D9F0077F48D9800013FE486DEB3FFF6E7F486D81707F8284A2707FA26C5B6C5B6C
5B6C90C7FC90C8FCA34BB5FC4AB6FC143F49B7FC130F013FEBFE0390B512E00003140048
13FC4813F0485B485B5C4890C7FCA2B5FC5BA35EA27F6C5D5E6E497F6C6D017E13FE6C6D
4848EBFFF86C9026FC0FF814FC6C90B5487E0001EDC03F6C6CEC800F011F9026FE000313
F8010101E090C8FC3E387CB643>97 D<EB3FF8B5FCA61203C6FCB3A3EE7FF80307B57E03
1F14F0037F14FC02F9B67E02FB9038807FFF9127FFFC001F13C003F001077F03C06D7F4B
7F4AC780717F5C727EA285A2721380A41AC0AD1A80A34E1300A36118FF61806E4A5B6F49
5B6F495B6F495BDAE7F8013F5B9126C3FF01B5C7FC028190B512FCDA007F5C496D14E049
010791C8FC90C813F042547CD24C>I<913803FFF0023F13FF91B612E0010315F8010F81
499038C01FFE903A7FFE0007FF494849138048495B48494913C05C5A485BA2485BA2486F
1380701300486F5A91C76C5A93C8FCA2B5FCAD7E80A27EA2EF07E06C7F170F6C6D15C06C
161F6E15806C6D143F6C6DEC7F006C6D14FE903A7FFF8003FC6D9038F01FF8010F90B55A
6D5D01011580D9003F49C7FC020313E033387BB63D>I<943801FFC00407B5FCA6EE001F
1707B3A3913803FFC0023F13FC49B6FC010715C74915F7013FD9E03FB5FC49EB0007D9FF
FC130148496D7E484980484980484980A25A5C5AA25A91C8FCA3B5FCAD7EA46C7FA27EA2
6C6D5CA26C6D5C6C5E6C6D49B5FC6C6D4914F0D97FFE010FECFFC0903A3FFF807FEF6D90
B512CF0107158F6DECFE0FD9007F13F00207018049C7FC42547BD24C>I<913803FFE002
3F13FE91B612C0010381010F15F84901C07F903A7FFE001FFE49486D7E48496D13804849
6D13C0484915E048814A15F048815C48EE7FF8A25A91C8FC18FC173FB5FCA391B7FCA418
F891CAFCA57EA3807EA218786C6D15FC17016C7F6CEE03F86C6D14076E15F06C6DEC1FE0
6C6C6C143F6D6C6CEBFFC06DD9F0071300010790B55A010115F86D6C14E0021F14800200
01F8C7FC36387CB63F>I<923807FF8092B512E0020780021F14FC027F809138FFFE1F49
9038F03FFF4913C04949481380491300495AA2495AA2017F6E13005C705A705AEE03F093
C8FCACB712F0A626007FFCC9FCB3B3A5007FB6FCA631547CD32A>I<91261FFF80EB3FC0
49B539F803FFE00107DAFE0F13F0011FDAFFBF13F8017F92B512FC9026FFFC0314CF48D9
F000EBFC1F4801C0133F4816FE484990391FFF0FF8F007F04890C76CEB83E0F08000A248
83A86C5FA36C6D4990C7FCA26C6D495A6C5E6C01F0EBFFF86CD9FC035B4890B65A1780D8
03E74AC8FC01E114F82607E01F138091CBFC120FA37FA27F13FE90B712C06C16FCEFFF80
18E06C17F8846C836C836D178048B912C012074818E04848C8FCD83FF8150F4848030313
F01700485A187FA56D16FF007F18E06D5D6C6C4B13C06C6C4B13806C6C6C021F13006C01
F0ECFFFE6C01FF010F5BC691B612F0013F16C0010F93C7FC010115F8D9000749C8FC3E4F
7CB545>I<EB3FF8B5FCA61203C6FCB3A3EE1FFE93B512E0030314F8030F804B8092393F
E07FFF92267F001F7F15FCDAF9F86D7FECFBE014FF4B6D7F5D92C7FCA35CA35CB3ABB6D8
FC07B612E0A643537BD24C>I<137F3801FFC0487F487F487FA2487FA76C5BA26C5B6C5B
6C5B6C6CC7FC90C8FCABEB1FF8B5FCA612017EB3B3A4B612F0A61C547BD326>I<ED1FC0
ED7FF0EDFFF84A13FC4A13FEA24A13FFA76E13FEA26E13FC6E13F8ED7FF0ED1FC092C7FC
ABED07FF023FB5FCA6EC007F151FB3B3AEEA03C0EA0FF0EA3FFC487EA2B55B16FEA3ED7F
FCA2EDFFF86C484813F0494813E0263FF80F13C06CB612006C5C000314F8C614C0D91FFE
C7FC286C88D32A>I<EB3FF8B5FCA61203C6FCB3A44CB512FEA69326001FFCC7FCEF3FF0
4D5A4D5A4C90C8FCEE07FE4C5A4C5AEE3FE0EEFFC04B5B4B48C9FCED0FFC4B5A153F4B7E
9138F9FFFE02FB7F91B67EA28383038F7F03077F14FE4A6C7F4A6C7F6F7F707FA2707F70
7F707F707FA2707F707F707F717F8385B6D8F803B612C0A642537CD249>I<EB3FF8B5FC
A612017EB3B3B3AFB612F8A61D537BD226>I<D93FF8D90FFFED3FFCB5027F01E049B57E
0303B500F8010F14E04B02FE4914F8031F6E017F8092263FE03F902680FF807F4BC66C90
3AC1FC007FFF000302FC6DD9C3F07FC6D9F9F86DD9E7E06D7FDAFBF0EDEFC04B5EDAFFC0
6D01FFC76C7F4B5DA292C75CA24A5EA34A5EB3ABB6D8FC03B6D8F00FB612C0A66A367BB5
73>I<D93FF8EB1FFEB591B512E0030314F8030F804B8092393FE07FFF92267F001F7F00
0314FCC6D9F9F86D7FECFBE014FF4B6D7F5D92C7FCA35CA35CB3ABB6D8FC07B612E0A643
367BB54C>I<EDFFF0021FEBFF80027F14E00103B612FC4981011F9039C03FFF8090273F
FE00077FD97FF801017F49486D7F48496E7E488348496E7E48834A80481880A24818C091
C87EA24818E0A4B517F0AB6C18E0A46C18C06E5CA26C1880A26C6D4A13006C5F6E147F6C
5F6C6D4A5A6C01FC01035B6D6C495B90271FFFC03F13806D90B6C7FC010315FC010015F0
021F1480020101F8C8FC3C387CB645>I<D93FF8EB7FF8B50107B57E031F14F0037F14FC
02F9B67E02FB01807F9127FFFC003F13C0000102F0010F7F6C02C06D7F5D4AC76C7F717F
5C717FA285841A80A47213C0AD4E1380A31A0095B5FCA2615F616E5C6E5E6F495B6F495B
6F495B03F8017F5BDBFF01B5C7FC02FD90B512FCDAFC7F5C6F14E0030791C8FC030013F0
93CAFCB0B612FCA6424D7CB54C>I<90393FF001FFB5010F13E04B13F84B7F4B7F9238FF
1FFFECF1FC00039026F3F03F1380C6EBF7E015C0ECFF80A215007013005C705AEE03F84A
90C8FCA45CB3A9B612FEA631367CB539>114 D<903A01FFF00780011FEBFF1F90B7FC5A
120748EB001FD81FF8130701E0130148487F007F157F49143FA200FF151FA27FA27F01F8
91C7FC13FF14F06CEBFFC015FE6F7E6C15E06C15F86C816C816C816C16806C6C15C0011F
15E01303D9001F14F01400030713F81501007CEC007F00FC153F161F7E160F7EA26D15F0
A26D141F6D15E06D143F6DEC7FC001FE903801FF809026FFC00F130091B55A01BF5CD8FE
1F14F0D8FC0714C027F0007FFCC7FC2D387CB636>I<143FA65CA45CA25BA35B5BA25B5B
5B90B5FC5A000F91B5FCB8FCA5D8003F90C8FCB3A8EE07E0AB6DEC0FC01580161F6D01C0
1380163F6D9038F07F006DEBFFFE6D5C6D6C5B021F13E0020313802B4D7ECB35>I<D91F
FCEDFFE0B50207B5FCA60003ED001FC61607B3AD5FA35FA25F017F5D6E91B5FC013FDA01
FB13F86ED907F3EBFFE06D9038C01FE36D90B512C36D15830101ECFE036D6C13F8020701
C0EC800043377BB54C>I<B600F80107B512C0A6C649C8383FE000017FEE1F806E153FA2
6D6D4AC7FCA26D6D147E18FE6D6D5C17016D5E6F13036D5E6F13076D5E6F130F6D5E6F13
1FA26E6C495AA26E018090C8FC5F6E147EEEC0FE6E5C16E16E5C16F36E5C16FFA26E5CA2
6E5CA26F5BA26F90C9FCA26F5AA26F5AA26F5AA26F5A42357DB449>I<B6D8F07FB5D8E0
01B512F0A6000101FCC7D87FF8C73807F8006C745A7214076E143F017F626E6E6C140F6D
624D6C141F6D6D605F6F6F133F6D97C7FC6F90B56C5B6D197E5E03F001F96D13FE6D0203
5E03F8EDF0016D03F05D160703FC9039E07FF8036D020F5E03FEEDFC07027FDAC03F5C04
1F14FE03FFD9801F130F6E013F5E04BFECFF1F6E4A6C5C04FF159F4C6D13BF6E95C8FC4C
6D13FF6E5FA24C7F6E5F4C7F6E5FA24C147F6E5F4C143F037F5EA26F486E5A6FC86C5A5C
357DB463>I<B600F80107B512C0A6C649C8383FE000017FEE1F806E153FA26D6D4AC7FC
A26D6D147E18FE6D6D5C17016D5E6F13036D5E6F13076D5E6F130F6D5E6F131FA26E6C49
5AA26E018090C8FC5F6E147EEEC0FE6E5C16E16E5C16F36E5C16FFA26E5CA26E5CA26F5B
A26F90C9FCA26F5AA26F5AA26F5AA35EA25E150F5ED80FE0131FD83FF85C486C133F93CA
FC486C5B157E15FE4A5AA24A5A6C48485A4A5A9038783FC06C48B45A6CB5CBFC6C5B6C13
F86C13E0C66CCCFC424D7DB449>121 D<001FB8128018C0A4DAC000148049C7140001F8
5B49495B49495B495D003F5C49495B4B5B5F5D90C7B55A4A91C7FC5E5C4A5B4A5BC75C5C
4A5B4A5B5E91B5FC4991C8FC4949EB0FC05D5B495B495B4B131F491680495B90B55A92C7
FC48163F485B4849147F5C4816FF48495B48495B4A130F4892B51200B9FCA47E32357CB4
3D>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 995 83 a Fr(E\016cien)l(t)47 b(Garbage)e(Collection)j(for)942
262 y(Large)d(Ob)8 b(ject-Orien)l(ted)48 b(Databases)1899
462 y Fq(b)m(y)1644 661 y Fp(T)-10 b(on)m(y)41 b(C.)f(Ng)799
860 y Fq(B.S.,)33 b(Univ)m(ersit)m(y)g(of)f(Illinois,)e
(Urbana-Champaign)g(\(1994\))275 1059 y(Submitted)i(to)g(the)h
(Departmen)m(t)f(of)g(Electrical)f(Engineering)h(and)h(Computer)f
(Science)724 1176 y(in)f(partial)g(ful\014llmen)m(t)f(of)i(the)h
(requiremen)m(ts)g(for)f(the)h(degree)h(of)537 1375 y(Master)f(of)f
(Science)i(in)d(Electrical)g(Engineering)h(and)h(Computer)f(Science)
1823 1574 y(at)g(the)762 1773 y(MASSA)m(CHUSETTS)37 b(INSTITUTE)e(OF)d
(TECHNOLOGY)1747 1973 y(Ma)m(y)25 b(1996)552 2169 y(c)524
2172 y Fo(\015)g Fq(Massac)m(h)m(usetts)35 b(Institute)e(of)f(T)-8
b(ec)m(hnology)26 b(1996.)42 b(All)31 b(righ)m(ts)i(reserv)m(ed.)150
2720 y(Author)16 b Fn(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)1164 2836 y Fq(Departmen)m(t)32
b(of)g(Electrical)f(Engineering)h(and)g(Computer)h(Science)3316
2952 y(Ma)m(y)-8 b(,)34 b(1996)150 3616 y(Certi\014ed)f(b)m(y)27
b Fn(:)17 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)2966 3732 y Fq(Barbara)32 b(H.)h(Lisk)m(o)m(v)1539
3848 y(NEC)h(Professor)f(of)f(Soft)m(w)m(are)i(Science)f(and)g
(Engineering)2995 3965 y(Thesis)h(Sup)s(ervisor)150 4656
y(Accepted)g(b)m(y)14 b Fn(:)k(:)f(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)g(:)f(:)h(:)2674 4772 y Fq(F)-8 b(rederic)33
b(R.)f(Morgen)m(thaler)1203 4889 y(Chairman,)f(Departmen)m(tal)h
(Committee)f(on)h(Graduate)g(Studen)m(ts)p eop
%%Page: 2 2
2 1 bop eop
%%Page: 3 3
3 2 bop 1172 83 a Fm(E\016cien)m(t)37 b(Garbage)i(Collection)f(for)1129
257 y(Large)g(Ob)6 b(ject-Orien)m(ted)39 b(Databases)1899
432 y Fq(b)m(y)1701 606 y(T)-8 b(on)m(y)33 b(C.)g(Ng)388
893 y Fl(Submitted)c(to)i(the)f(Departmen)m(t)i(of)e(Electrical)g
(Engineering)f(and)g(Computer)h(Science)1125 1006 y(on)h(Ma)m(y)-8
b(,)32 b(1996,)g(in)d(partial)g(ful\014llmen)m(t)f(of)i(the)1356
1119 y(requiremen)m(ts)f(for)i(the)f(degree)c(of)632
1232 y(Master)32 b(of)e(Science)g(in)f(Electrical)h(Engineering)e(and)i
(Computer)g(Science)150 1534 y Fm(Abstract)150 1705 y
Fl(This)25 b(thesis)i(presen)m(ts)g(the)h(design)e(of)h(an)g(e\016cien)
m(t)h(garbage)h(collection)e(sc)m(heme)h(for)f(large,)h(p)s(ersisten)m
(t)150 1818 y(ob)5 b(ject-orien)m(ted)40 b(databases)g(in)e(a)h(clien)m
(t-serv)m(er)g(en)m(vironmen)m(t.)66 b(The)39 b(sc)m(heme)g(uses)g(a)g
(partitioned)150 1931 y(approac)m(h.)76 b(A)43 b(database)g(is)e
(divided)e(in)m(to)j(disjoin)m(t)f(partitions)g(and)g(eac)m(h)j
(partition)c(is)i(collected)150 2044 y(indep)s(enden)m(tly)-8
b(.)37 b(The)27 b(sc)m(heme)h(main)m(tains)f(transaction)g(seman)m
(tics)h(and)f(surviv)m(es)f(serv)m(er)i(crashes.)40 b(It)150
2157 y(can)32 b(b)s(e)f(run)g(concurren)m(tly)g(with)f(clien)m(t)i
(applications.)43 b(It)32 b(also)f(compacts)i(ob)5 b(jects)33
b(in)d(the)i(partition)150 2270 y(b)s(eing)d(collected.)291
2383 y(The)45 b(garbage)j(collector)e(has)g(b)s(een)f(implemen)m(ted)f
(in)h(Thor,)k(a)d(distributed)d(ob)5 b(ject-orien)m(ted)150
2496 y(database.)80 b(It)43 b(runs)f(as)h(a)g(lo)m(w-priorit)m(y)f
(thread)h(in)f(the)h(system.)79 b(The)43 b(collector)h(in)m(teracts)f
(with)150 2609 y(the)32 b(clien)m(ts)g(incremen)m(tally)f(to)i(obtain)f
(ro)s(ot)g(information)f(for)h(collection.)46 b(Clien)m(t)31
b(applications)g(can)150 2721 y(con)m(tin)m(ue)d(to)h(fetc)m(h)g(ob)5
b(jects)29 b(from)f(the)g(database)h(or)f(commit)g(transactions)g(with)
f(no)h(extra)h(o)m(v)m(erhead)150 2834 y(while)f(garbage)k(collection)e
(is)f(happ)s(ening.)291 2947 y(T)-8 b(o)28 b(allo)m(w)f(partitions)f
(to)i(b)s(e)e(collected)i(indep)s(enden)m(tly)-8 b(,)26
b(the)h(database)i(serv)m(er)e(has)g(to)h(main)m(tain)f(a)150
3060 y(list)f(of)h(in)m(ter-partition)e(ob)5 b(ject)28
b(references)f(for)g(eac)m(h)h(partition.)38 b(W)-8 b(e)28
b(call)e(this)g(list)g(an)g(in)m(ter-partition)150 3173
y(reference)40 b(list)e(\(IRL\).)i(One)f(ma)5 b(jor)39
b(problem)f(with)g(an)m(y)i(partitioned)e(garbage)j(collection)e(sc)m
(heme)150 3286 y(is)32 b(the)i(cost)g(asso)s(ciated)f(with)f(the)i(up)s
(dates)e(of)h(IRLs,)h(whic)m(h)e(ha)m(v)m(e)i(to)g(b)s(e)f(main)m
(tained)f(p)s(ersisten)m(tly)150 3399 y(b)s(ecause)e(they)f(are)h(to)s
(o)h(exp)s(ensiv)m(e)d(to)j(recompute)e(after)i(serv)m(er)e(crashes.)41
b(W)-8 b(e)31 b(describ)s(e)d(a)i(new)f(tec)m(h-)150
3512 y(nique)e(that)i(reduces)e(the)i(n)m(um)m(b)s(er)e(of)h(I/O)g(op)s
(erations)g(required)e(to)j(up)s(date)e(the)i(IRLs.)39
b(IRL)28 b(up)s(date)150 3625 y(op)s(erations)36 b(are)h(logged)g(and)f
(deferred.)59 b(The)36 b(n)m(um)m(b)s(er)f(of)i(I/Os)f(are)h(reduced)f
(b)m(y)h(re-ordering)f(and)150 3738 y(pro)s(cessing)29
b(the)i(IRL)f(up)s(dates)f(in)g(batc)m(hes)i(at)g(some)g(later)g(time.)
150 3963 y Fk(Keyw)m(ords:)128 b Fl(garbage)41 b(collection,)h
(partitions,)f(ob)5 b(ject-orien)m(ted)41 b(databases,)i(storage)e
(reclama-)150 4076 y(tion.)150 4309 y(Thesis)29 b(Sup)s(ervisor:)38
b(Barbara)30 b(H.)h(Lisk)m(o)m(v)150 4422 y(Title:)40
b(NEC)30 b(Professor)g(of)g(Soft)m(w)m(are)i(Science)e(and)g
(Engineering)p eop
%%Page: 4 4
4 3 bop eop
%%Page: 5 5
5 4 bop 150 872 a Fj(Ac)-7 b(kno)g(wledgmen)g(ts)150
1373 y Fl(I)26 b(w)m(ould)g(lik)m(e)g(to)h(thank)g(m)m(y)g(thesis)e
(sup)s(ervisor,)h(Barbara)h(Lisk)m(o)m(v,)h(for)e(her)g(supp)s(ort)f
(and)h(guidance.)39 b(I)150 1543 y(learned)24 b(a)h(lot)g(through)g(m)m
(y)g(n)m(umerous)f(discussions)e(with)i(her.)38 b(Her)25
b(careful)g(reading)f(and)g(commen)m(ts)150 1712 y(ha)m(v)m(e)32
b(greatly)e(impro)m(v)m(ed)g(this)f(thesis.)291 1881
y(I)38 b(am)g(grateful)g(to)h(all)e(the)i(mem)m(b)s(ers)e(of)i(the)f
(Programming)f(Metho)s(dology)i(Group)f(\(Andrew,)150
2051 y(A)m(tul,)28 b(Bob,)h(Doroth)m(y)-8 b(,)30 b(Eui-Suk,)c(Jo)s(e,)i
(Liuba,)f(Miguel,)g(P)m(aul,)h(Ron,)g(Sanja)m(y)-8 b(,)29
b(Quin)m(ton,)e(and)g(Umesh\))150 2220 y(for)j(pro)m(viding)e(a)j
(friendly)d(and)i(in)m(teresting)f(researc)m(h)i(en)m(vironmen)m(t.)291
2389 y(I)f(w)m(ould)f(lik)m(e)h(to)h(express)f(m)m(y)h(gratitude)f(for)
g(the)h(follo)m(wing)d(p)s(eople:)291 2559 y(A)m(tul)42
b(Ady)m(a,)k(Joseph)41 b(Bank,)46 b(Miguel)41 b(Castro,)k(Jason)d(Hun)m
(ter)g(and)g(Joseph)f(Bank)i(for)e(pro)s(of-)150 2728
y(reading)29 b(m)m(y)i(thesis.)291 2897 y(Eui-Suk)d(Ch)m(ung)i(for)g(b)
s(eing)f(a)i(go)s(o)s(d)f(friend)e(and)i(lunc)m(h)f(companion.)291
3067 y(Kei)37 b(T)-8 b(ang)38 b(for)f(b)s(eing)f(a)h(great)i(friend)c
(and)i(ro)s(ommate.)62 b(He)38 b(is)e(alw)m(a)m(ys)i(there)g(to)g
(listen)e(to)i(m)m(y)150 3236 y(problems)29 b(and)g(pro)m(vide)h
(useful)f(suggestions.)291 3406 y(Sp)s(ecial)34 b(thanks)h(to)i(Reb)s
(ecca)f(for)f(c)m(heering)h(me)g(up)e(during)g(m)m(y)h(di\016cult)f
(times.)56 b(Her)36 b(supp)s(ort)150 3575 y(and)30 b(encouragemen)m(t)i
(are)f(greatly)f(appreciated.)291 3744 y(All)c(mem)m(b)s(ers)g(of)h(m)m
(y)h(family)d(for)i(their)f(unconditional)f(lo)m(v)m(e)j(and)e(supp)s
(ort)g(throughout)g(m)m(y)i(life.)291 5214 y Fi(This)38
b(w)n(ork)f(w)n(as)g(supp)r(orted)h(b)n(y)f(the)i(Adv)-5
b(anced)38 b(Researc)n(h)f(Pro)5 b(jects)36 b(Agency)i(of)g(the)g
(Departmen)n(t)g(of)150 5384 y(Defense,)28 b(monitored)f(b)n(y)g(the)h
(O\016ce)g(of)f(Na)n(v)-5 b(al)27 b(Researc)n(h)f(under)i(con)n(tract)e
(N00014-91-J-4136)o(.)1927 5649 y Fl(5)p eop
%%Page: 6 6
6 5 bop 150 872 a Fj(Con)-7 b(ten)g(ts)150 1464 y Fk(1)84
b(In)m(tro)s(duction)2836 b(9)286 1633 y Fl(1.1)94 b(Bac)m(kground)31
b(and)f(Ov)m(erview)39 b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
184 b Fl(9)286 1803 y(1.2)94 b(Related)31 b(W)-8 b(ork)119
b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
138 b Fl(11)495 1972 y(1.2.1)106 b(Non-partitioned)30
b(GC)70 b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(11)495 2142 y(1.2.2)106 b(P)m(artitioned)30 b(GC)43
b Fh(:)j(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(12)286 2311 y(1.3)94 b(Thesis)29 b(Outline)84 b
Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
138 b Fl(13)150 2571 y Fk(2)84 b(Thor)35 b(Arc)m(hitecture)2521
b(14)286 2741 y Fl(2.1)94 b(F)-8 b(ron)m(t)32 b(Ends)d(\(FE\))71
b Fh(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(15)286 2910 y(2.2)94 b(Ob)5 b(ject)31 b(Rep)s(ositories)e(\(OR\))
68 b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(16)495 3079 y(2.2.1)106 b(Reac)m(habilit)m(y)30
b(and)g(Garbage)i(Collection)113 b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(17)495 3249
y(2.2.2)106 b(OR)30 b(T)-8 b(ables)94 b Fh(:)46 b(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(18)495 3418
y(2.2.3)106 b(Segmen)m(ts)76 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(18)495 3587 y(2.2.4)106
b(P)m(artitions)53 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)138 b Fl(18)495 3757 y(2.2.5)106 b(T)-8
b(ransaction)31 b(Log)84 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)
h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)138 b Fl(19)495 3926 y(2.2.6)106 b(Mo)s(di\014ed)29
b(Ob)5 b(ject)31 b(Bu\013er)89 b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(19)495 4095 y(2.2.7)106 b(T)-8 b(ransactions)85
b Fh(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(20)150 4356 y Fk(3)84 b(Ov)m(erview)35 b(of)g(Garbage)g
(Collection)1895 b(22)286 4525 y Fl(3.1)94 b(GC)31 b(Ro)s(ots)56
b Fh(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)138 b Fl(23)495 4694 y(3.1.1)106 b(In)m(ter-P)m(artition)31
b(Reference)g(Lists)82 b Fh(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(23)286
4864 y(3.2)94 b(Steps)30 b(for)h(Garbage)g(Collection)86
b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(25)286
5033 y(3.3)94 b(Basic)31 b(Correctness)106 b Fh(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(27)286 5203 y(3.4)94 b(Concurrency)30 b(and)g(Reco)m(v)m(ery)94
b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(27)1927
5649 y(6)p eop
%%Page: 7 7
7 6 bop 150 83 a Fk(4)119 b(GC)35 b(Ro)s(ots)2864 b(28)286
252 y Fl(4.1)94 b(In)m(ter-P)m(artition)31 b(Reference)g(Lists)90
b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(28)495 422
y(4.1.1)106 b(Ob)5 b(ject)31 b(Installation)117 b Fh(:)45
b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(29)495 591
y(4.1.2)106 b(Garbage)32 b(Collection)107 b Fh(:)45 b(:)h(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)138 b Fl(29)286 760 y(4.2)94 b(OR)30
b(T)-8 b(ables)102 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(31)286 930 y(4.3)94
b(FE)31 b(V)-8 b(olatile)30 b(Ro)s(ots)93 b Fh(:)46 b(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(33)495 1099
y(4.3.1)106 b(Omitting)29 b(Unmo)s(di\014ed)f(P)m(ersisten)m(t)j(Ob)5
b(jects)108 b Fh(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)138 b Fl(34)495 1269 y(4.3.2)106 b(Omitting)29
b(Unconnected)i(FEs)60 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(36)286 1438 y(4.4)94 b(Incremen)m(tal)31 b(Ro)s(ot)g(Generation)66
b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(36)495
1607 y(4.4.1)106 b(Correctness)57 b Fh(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(37)150 1868 y Fk(5)84
b(In)m(ter-P)m(artition)35 b(Reference)g(Lists)1951 b(40)286
2037 y Fl(5.1)94 b(I/O)31 b(Ov)m(erhead)f(for)g(IRL)g(Up)s(dates)60
b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(40)286 2206
y(5.2)94 b(Deferred)31 b(IRL)f(Op)s(erations)95 b Fh(:)46
b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(40)286
2376 y(5.3)94 b(Re-ordering)30 b(of)h(IRL)f(Op)s(erations)77
b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(42)286 2545
y(5.4)94 b(I/O)31 b(Optimized)d(Sc)m(heme)j(for)f(IRL)g(Up)s(dates)52
b Fh(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b Fl(42)495 2714 y(5.4.1)106 b(Ob)5
b(ject)31 b(Installation)117 b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)138 b Fl(43)495 2884 y(5.4.2)106 b(Garbage)32 b(Collection)107
b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(43)495
3053 y(5.4.3)106 b(IRL)30 b(Up)s(date)g(Thread)73 b Fh(:)45
b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(44)286 3223
y(5.5)94 b(Conserv)-5 b(ativ)m(e)31 b(Inlist)d(Estimate)104
b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(45)286
3392 y(5.6)94 b(Reco)m(v)m(ery)33 b(Issues)45 b Fh(:)g(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(46)495
3561 y(5.6.1)106 b(Ob)5 b(ject)31 b(Installation)46 b
Fh(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(46)495
3731 y(5.6.2)106 b(Garbage)32 b(Collection)k Fh(:)46
b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(46)495
3900 y(5.6.3)106 b(IRL)30 b(Pro)s(cessing)123 b Fh(:)46
b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(47)286
4069 y(5.7)94 b(Discussion)110 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(47)150
4330 y Fk(6)84 b(Conclusion)2860 b(49)286 4499 y Fl(6.1)94
b(F)-8 b(uture)31 b(W)-8 b(ork)88 b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(50)495
4668 y(6.1.1)106 b(P)m(erformance)31 b(Ev)-5 b(aluation)57
b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(50)495 4838
y(6.1.2)106 b(In)m(ter-P)m(artition)31 b(Circular)d(Garbage)68
b Fh(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b Fl(50)495 5007 y(6.1.3)106 b(P)m(artition)30
b(Selection)g(P)m(olicies)84 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(51)495 5176 y(6.1.4)106 b(Clustering)29 b(of)h(Segmen)m(ts)h(in)m
(to)f(P)m(artitions)55 b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(51)1927 5649 y(7)p
eop
%%Page: 8 8
8 7 bop 150 872 a Fj(List)79 b(of)g(Figures)286 1373
y Fl(2-1)89 b(A)31 b(con\014guration)f(of)g(clien)m(ts,)g(FEs,)h(and)f
(ORs)f(in)h(Thor)54 b Fh(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b Fl(15)286 1543 y(2-2)89 b(Ob)5 b(ject)31
b(access)h(b)m(y)e(clien)m(t)g(and)g(FE)65 b Fh(:)46
b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(17)286 1795 y(3-1)89
b(In)m(ter-partition)30 b(reference)h(lists)e(\(IRLs\))81
b Fh(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(25)286 2047 y(4-1)89
b(IRL)30 b(up)s(date)g(due)g(to)h(ob)5 b(ject)31 b(installation)89
b Fh(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)138 b Fl(30)286 2217 y(4-2)89 b(IRL)30
b(up)s(date)g(due)g(to)h(garbage)g(collection)d Fh(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b Fl(31)286 2386 y(4-3)89 b(In)m(v)-5
b(alidation)29 b(of)i(an)f(ob)5 b(ject)31 b(in)m(v)m(olving)e(one)i(OR)
26 b Fh(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b Fl(35)286 2555 y(4-4)89 b(In)m(v)-5
b(alidation)29 b(of)i(an)f(ob)5 b(ject)31 b(in)m(v)m(olving)e(t)m(w)m
(o)j(ORs)56 b Fh(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)138 b Fl(35)286 2725 y(4-5)89 b(Protection)31
b(of)g(references)g(in)e(unconnected)h(FEs)g(b)m(y)h(OR)f(tables)51
b Fh(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b Fl(37)286
2977 y(5-1)89 b(IRL)30 b(up)s(date)g(op)s(erations)44
b Fh(:)i(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b Fl(41)1927 5649 y(8)p eop
%%Page: 9 9
9 8 bop 150 809 a Fg(Chapter)66 b(1)150 1349 y Fj(In)-7
b(tro)7 b(duction)150 1905 y Fr(1.1)137 b(Bac)l(kground)46
b(and)g(Ov)l(erview)150 2165 y Fl(Ob)5 b(ject-orien)m(ted)44
b(databases)h(\(OODBs\))f(pro)m(vide)f(p)s(ersisten)m(t)g(storage)i(of)
f(ob)5 b(jects)45 b(with)d(complex)150 2334 y(in)m(ter-relationships.)
37 b(They)27 b(supp)s(ort)e(transactions)g([10)q(],)j(a)g(mec)m(hanism)
f(that)g(allo)m(ws)g(clien)m(t)g(applica-)150 2503 y(tions)32
b(to)h(group)f(a)h(set)g(of)g(reads)f(and)g(writes)g(to)h(ob)5
b(jects)33 b(as)g(an)f(atomic)h(unit.)46 b(The)32 b(system)h(ensures)
150 2673 y(that)26 b(either)g(all)e(or)i(none)g(of)g(the)g(op)s
(erations)f(within)e(a)j(transaction)g(are)g(executed)h(in)e(spite)g
(of)h(system)150 2842 y(failures)i(and)i(concurren)m(t)h(access)g(b)m
(y)g(other)f(applications.)291 3012 y(T)-8 b(o)45 b(prev)m(en)m(t)g(an)
g(OODB)f(from)g(running)e(out)j(of)f(storage)i(space,)j(it)44
b(is)g(necessary)h(to)g(ha)m(v)m(e)h(a)150 3181 y(mec)m(hanism)38
b(to)i(reclaim)e(storage)i(of)f(ob)5 b(jects)40 b(that)f(are)h(no)e
(longer)h(used.)65 b(Most)40 b(OODBs)f(rely)f(on)150
3350 y(explicit)43 b(deallo)s(cation)i(of)g(ob)5 b(jects.)86
b(Unfortunately)-8 b(,)48 b(this)c(is)g(error-prone)h(and)f(places)h
(an)g(extra)150 3520 y(burden)24 b(on)i(programmers.)39
b(F)-8 b(ailure)25 b(to)i(deallo)s(cate)f(storage)i(will)23
b(result)i(in)g(p)s(ermanen)m(t)h(loss)f(of)h(space)150
3689 y(and)k(deallo)s(cation)g(errors)g(ma)m(y)i(cause)f(serious)f
(damage)h(to)h(the)f(in)m(tegrit)m(y)f(of)h(the)g(database)h(b)s
(ecause)150 3858 y(of)f(dangling)d(references.)291 4028
y(Garbage)e(collection)f(\(GC\))h(pro)m(vides)e(safe)h(and)g(automatic)
h(storage)g(managemen)m(t)h(of)e(databases.)150 4197
y(While)d(extensiv)m(e)i(researc)m(h)g(on)f(garbage)i(collection)d(has)
i(b)s(een)e(done)h(in)f(the)i(con)m(text)h(of)e(programming)150
4366 y(languages[24)r(],)37 b(existing)e(GC)h(algorithms)e(do)i(not)g
(readily)e(transfer)h(for)h(use)f(in)g(OODBs.)57 b(Sev)m(eral)150
4536 y(issues)29 b(ha)m(v)m(e)j(to)f(b)s(e)e(addressed)h(for)g(garbage)
i(collection)e(to)h(b)s(e)f(practical)g(in)f(these)h(systems:)150
4805 y Fk(Disk-residen)m(t)35 b(data.)45 b Fl(The)31
b(size)g(of)g(an)g(ob)5 b(ject)32 b(database)g(can)f(b)s(e)f(v)m(ery)i
(large)f(\(in)f(gigab)m(ytes\))j(and)377 4974 y(only)j(a)i(small)d(p)s
(ortion)h(of)h(the)g(database)h(can)f(b)s(e)g(cac)m(hed)h(in)d(main)h
(memory)-8 b(.)61 b(The)37 b(garbage)377 5144 y(collector)44
b(has)f(to)h(minimize)d(the)i(n)m(um)m(b)s(er)f(of)i(disk)d(I/Os)i(and)
g(m)m(ust)g(also)g(a)m(v)m(oid)h(replacing)377 5313 y(recen)m(tly)31
b(fetc)m(hed)g(ob)5 b(jects)31 b(in)e(the)i(cac)m(he.)1927
5649 y(9)p eop
%%Page: 10 10
10 9 bop 150 83 a Fk(Concurrency)-9 b(.)47 b Fl(The)31
b(collection)g(pro)s(cess)g(m)m(ust)h(b)s(e)e(able)h(to)i(run)d
(concurren)m(tly)h(with)f(clien)m(t)h(trans-)377 252
y(actions.)41 b(It)31 b(should)d(not)j(a\013ect)h(the)e(p)s(erformance)
g(of)g(clien)m(t)g(op)s(erations.)150 496 y Fk(F)-9 b(ault)35
b(tolerance.)45 b Fl(The)d(collector)h(has)f(to)h(preserv)m(e)g
(transaction)f(seman)m(tics.)77 b(It)43 b(m)m(ust)f(surviv)m(e)377
666 y(system)29 b(crashes)f(and)g(m)m(ust)h(not)f(lea)m(v)m(e)i(the)f
(database)g(in)e(an)i(inconsisten)m(t)e(state.)42 b(In)27
b(addition,)377 835 y(the)k(reco)m(v)m(ery)h(pro)s(cess)e(should)e
(remain)i(fast)g(ev)m(en)h(in)e(the)i(presence)f(of)h(GC.)291
1104 y(W)-8 b(e)34 b(ha)m(v)m(e)g(designed)e(and)g(implemen)m(ted)f(a)i
(garbage)h(collection)f(sc)m(heme)g(that)h(addresses)e(all)g(the)150
1274 y(ab)s(o)m(v)m(e)43 b(issues.)75 b(The)42 b(w)m(ork)g(is)f(done)h
(in)f(the)h(con)m(text)i(of)e(Thor)24 b([16)q(],)46 b(a)c(distributed,)
h(clien)m(t-serv)m(er)150 1443 y(ob)5 b(ject-orien)m(ted)39
b(database.)63 b(Our)36 b(sc)m(heme)j(uses)e(a)h(partitioned)e(approac)
m(h)25 b([25)r(].)62 b(The)37 b(database)i(is)150 1612
y(divided)c(in)m(to)k Ff(p)-5 b(artitions)40 b Fl(and)e(eac)m(h)h
(partition)e(is)g(collected)i(indep)s(enden)m(tly)-8
b(.)61 b(Our)37 b(sc)m(heme)i(uses)f(a)150 1782 y(cop)m(ying)d
(algorithm)g(to)h(collect)f(eac)m(h)i(partition.)54 b(Liv)m(e)35
b(ob)5 b(jects)37 b(are)e(copied)g(from)g(a)h Ff(fr)-5
b(om-sp)g(ac)g(e)37 b Fl(to)150 1951 y(a)c Ff(to-sp)-5
b(ac)g(e)p Fl(.)51 b(The)32 b(from-space)i(is)e(a)i(single)d(partition)
h(b)s(eing)g(collected)h(and)g(the)g(to-space)i(is)d(a)h(new,)150
2120 y(empt)m(y)e(partition)e(allo)s(cated)h(b)m(y)g(the)h(garbage)h
(collector.)291 2290 y(Our)37 b(GC)i(sc)m(heme)g(has)f(sev)m(eral)g
(adv)-5 b(an)m(tages.)67 b(\(1\))39 b(It)g(is)e(p)s(ossible)f(to)j(mak)
m(e)h(the)e(partition)f(size)150 2459 y(small)24 b(enough)i(so)g(that)g
(the)g(en)m(tire)g(GC)g(can)g(b)s(e)f(p)s(erformed)f(in)h(main)f
(memory)-8 b(.)40 b(This)24 b(mak)m(es)j(garbage)150
2628 y(collection)39 b(fast)g(and)g(reduces)g(the)g(n)m(um)m(b)s(er)f
(of)i(I/O)f(op)s(erations)f(executed)i(b)m(y)g(the)f(collector.)68
b(\(2\))150 2798 y(The)28 b(sc)m(heme)h(is)f(scalable)g(b)s(ecause)g
(the)h(amoun)m(t)g(of)f(w)m(ork)h(done)f(p)s(er)g(GC)g(is)g(indep)s
(enden)m(t)e(of)i(the)h(size)150 2967 y(of)35 b(the)g(database.)55
b(\(3\))36 b(The)e(collector)i(is)e(free)h(to)g(select)h(whic)m(h)d
(partition)h(to)h(collect.)55 b(It)35 b(has)g(b)s(een)150
3137 y(sho)m(wn)h(that)i(this)e(can)h(increase)g(the)g(amoun)m(t)g(of)h
(storage)g(reclaimed)24 b([5)q(].)60 b(\(4\))39 b(The)d(collector)i
(runs)150 3306 y(concurren)m(tly)26 b(with)f(clien)m(t)h(activities.)38
b(Minimal)24 b(sync)m(hronization)i(is)f(required)f(b)s(et)m(w)m(een)j
(the)g(serv)m(ers)150 3475 y(and)36 b(clien)m(ts.)59
b(Clien)m(t)36 b(reads)g(and)g(up)s(dates)g(alw)m(a)m(ys)h(pro)s(ceed)f
(with)g(no)g(extra)i(latency)f(whether)f(the)150 3645
y(collector)g(is)e(running)e(or)j(not.)55 b(\(5\))36
b(The)f(sc)m(heme)h(is)e(fault-toleran)m(t.)55 b(Reco)m(v)m(ery)37
b(is)d(simple)f(and)i(fast)150 3814 y(ev)m(en)c(if)e(the)i(serv)m(er)g
(crashes)f(during)e(GC.)291 3983 y(T)-8 b(o)28 b(allo)m(w)f(partitions)
f(to)i(b)s(e)e(collected)i(indep)s(enden)m(tly)-8 b(,)26
b(the)h(database)i(serv)m(er)e(has)g(to)h(main)m(tain)f(a)150
4153 y(list)f(of)h(in)m(ter-partition)e(ob)5 b(ject)28
b(references)f(for)g(eac)m(h)h(partition.)38 b(W)-8 b(e)28
b(call)e(this)g(list)g(an)g(in)m(ter-partition)150 4322
y(reference)d(list)e(\(IRL\).)i(The)f(IRLs)f(ha)m(v)m(e)j(to)f(b)s(e)f
(main)m(tained)f(p)s(ersisten)m(tly)g(b)s(ecause)h(recomputing)g(them)
150 4491 y(after)k(a)h(serv)m(er)f(crashes)g(in)m(v)m(olv)m(es)f
(scanning)g(all)g(the)h(ob)5 b(jects)26 b(in)f(the)h(database.)40
b(This)24 b(slo)m(ws)h(do)m(wn)h(the)150 4661 y(reco)m(v)m(ery)38
b(pro)s(cess)d(signi\014can)m(tly)-8 b(.)57 b(This)34
b(requiremen)m(t)h(raises)g(a)i(p)s(erformance)e(issue)g(b)s(ecause)h
(ev)m(ery)150 4830 y(IRL)25 b(up)s(date)g(is)g(a)h(p)s(oten)m(tial)f
(disk)f(read)i(and)f(write.)38 b(W)-8 b(e)27 b(presen)m(t)f(a)g(new)f
(tec)m(hnique)g(that)h(reduces)g(the)150 5000 y(n)m(um)m(b)s(er)g(of)i
(I/Os)f(required)e(to)j(up)s(date)f(the)g(IRLs.)40 b(IRL)26
b(up)s(date)h(op)s(erations)g(are)g(deferred)g(using)f(the)150
5169 y(transaction)32 b(log.)46 b(The)31 b(n)m(um)m(b)s(er)g(of)h(I/Os)
f(is)g(reduced)g(b)m(y)h(pro)s(cessing)f(the)h(IRL)f(up)s(dates)g(in)g
(batc)m(hes)150 5338 y(at)g(some)g(later)f(time.)1905
5649 y(10)p eop
%%Page: 11 11
11 10 bop 291 83 a Fl(Curren)m(tly)-8 b(,)34 b(our)f(sc)m(heme)i(do)s
(es)e(not)h(collect)h(ob)5 b(jects)34 b(with)f(in)m(ter-partition)f
(reference)i(cycles.)52 b(It)150 252 y(is)26 b(p)s(ossible,)f(though)i
(non-trivial,)f(to)h(augmen)m(t)h(the)f(design)f(using)g(tec)m(hniques)
g(suc)m(h)h(as)g(migration)f(of)150 422 y(ob)5 b(jects)34
b(with)e(cycles)i(in)m(to)g(the)f(same)h(partition)e(or)i(enlarging)e
(a)i(partition)e(to)j(con)m(tain)e(the)h(ob)5 b(jects)150
591 y(with)19 b(cycles.)38 b(Another)20 b(p)s(ossibilit)m(y)d(is)j(to)h
(use)g(a)g(complemen)m(tary)f(sc)m(heme)i(based)e(on)g(global)g
(tracing)25 b([7)q(,)150 760 y(11)q(].)150 1122 y Fr(1.2)137
b(Related)47 b(W)-11 b(ork)150 1381 y Fl(Our)25 b(w)m(ork)h(dra)m(ws)g
(on)g(previous)f(researc)m(h)i(on)f(garbage)i(collection.)39
b(Our)25 b(goal)i(is)e(to)i(design)e(a)i(garbage)150
1550 y(collector)35 b(appropriate)f(for)h(large,)i(p)s(ersisten)m(t)d
(ob)5 b(ject)36 b(storage)g(systems.)55 b(The)34 b(main)g(requiremen)m
(ts)150 1720 y(imp)s(osed)c(on)h(garbage)i(collection)e(for)g(these)h
(systems)g(are)g(v)m(ery)f(large)h(storage)h(space,)g(concurrency)-8
b(,)150 1889 y(transactions,)46 b(fault)c(tolerance,)48
b(and)42 b(fast)h(reco)m(v)m(ery)-8 b(.)81 b(The)42 b(garbage)i
(collector)g(should)c(also)j(tak)m(e)150 2058 y(in)m(to)35
b(accoun)m(t)h(the)f(cac)m(hing)g(of)g(database)g(ob)5
b(jects)36 b(b)m(y)e(clien)m(ts,)i(whic)m(h)d(is)h(t)m(ypical)g(in)g(a)
h(clien)m(t-serv)m(er)150 2228 y(en)m(vironmen)m(t.)291
2397 y(W)-8 b(e)32 b(divide)c(previous)g(w)m(ork)j(on)f(garbage)i
(collectors)e(for)g(p)s(ersisten)m(t)g(stores)g(in)m(to)g(t)m(w)m(o)i
(categories:)150 2567 y(non-partitioned)d(GC)h(and)g(partitioned)f(GC.)
150 2868 y Fm(1.2.1)112 b(Non-partitioned)39 b(GC)150
3096 y Fl(The)c(researc)m(h)h(in)e(this)h(category)i(fo)s(cuses)e(on)h
(designing)d(a)j(collector)g(for)f(p)s(ersisten)m(t)g(heaps)g(that)h
(is)150 3266 y(incremen)m(tal/concurren)m(t,)25 b(fault)e(toleran)m(t)h
(and)f(preserv)m(es)h(transaction)f(seman)m(tics)i([6)q(,)g(13)q(,)g
(21)q(].)39 b(Ho)m(w-)150 3435 y(ev)m(er,)28 b(the)f(approac)m(hes)f
(share)g(one)h(common)f(problem.)38 b(Eac)m(h)27 b(round)e(of)h
(garbage)h(collection)f(requires)150 3604 y(the)d(tra)m(v)m(ersal)h(of)
g(the)f(en)m(tire)g(p)s(ersisten)m(t)g(storage)h(space.)39
b(As)24 b(a)f(result,)h(the)f(sc)m(hemes)h(are)g(not)f(practical)150
3774 y(for)32 b(v)m(ery)h(large)g(databases.)48 b(In)32
b(addition,)g(these)h(w)m(orks)f(are)h(done)g(in)e(the)i(con)m(text)h
(of)f(a)g(cen)m(tralized)150 3943 y(serv)m(er)e(and)e(do)i(not)f
(consider)g(cac)m(hing)g(of)h(ob)5 b(jects)31 b(at)g(clien)m(ts.)291
4112 y(Tw)m(o)h(designs)f(of)h(atomic)g(incremen)m(tal)f(garbage)i
(collectors)g(for)e(stable)h(heaps)f(are)h(presen)m(ted)g(in)150
4282 y(Detlefs)25 b([6)q(],)k(and)d(Kolo)s(dner)g(and)h(W)-8
b(eihl)24 b([13)q(].)40 b(In)27 b(b)s(oth)f(designs,)h(the)h(collector)
g(is)e(closely)h(in)m(tegrated)150 4451 y(with)33 b(the)h(reco)m(v)m
(ery)h(system)g(to)f(mak)m(e)h(garbage)g(collection)f(reco)m(v)m
(erable.)53 b(The)33 b(reco)m(v)m(ery)j(algorithm)150
4620 y(is)29 b(complex)g(in)f(b)s(oth)h(cases)h(and)f(eac)m(h)i(step)f
(of)f(collection)h(has)f(to)h(b)s(e)f(logged.)41 b(In)29
b(con)m(trast,)i(reco)m(v)m(ery)150 4790 y(in)e(our)h(sc)m(heme)h(is)e
(simple)g(and)h(logging)g(is)f(only)h(needed)g(at)h(the)f(end)g(of)h
(garbage)g(collection.)291 4959 y(O'T)-8 b(o)s(ole,)31
b(Nettles)g(and)f(Gi\013ord)24 b([21)q(])31 b(describ)s(e)d(a)j
(concurren)m(t)g(compacting)g(collector)g(for)f(p)s(ersis-)150
5129 y(ten)m(t)e(heaps.)39 b(They)26 b(use)h(a)g(replicating)e(garbage)
j(collection)e(tec)m(hnique)f([20)q(])i(to)h(simplify)23
b(reco)m(v)m(ery)-8 b(.)42 b(In)150 5298 y(addition,)29
b(transaction)h(pro)s(cessing)g(and)f(garbage)j(collection)e(op)s
(erations)g(are)h(decoupled)e(using)g(the)1905 5649 y(11)p
eop
%%Page: 12 12
12 11 bop 150 83 a Fl(transaction)28 b(log.)39 b(Our)27
b(sc)m(heme)h(uses)f(a)g(v)m(ery)h(similar)d(tec)m(hnique)i(to)h
(simplify)c(reco)m(v)m(ery)29 b(and)e(increase)150 252
y(concurrency)-8 b(.)55 b(This)33 b(w)m(ork)j(requires)d(the)j(garbage)
g(collector)g(to)g(concurren)m(tly)e(pro)s(cess)h(the)g(en)m(tries)150
422 y(in)28 b(the)h(log.)40 b(F)-8 b(urthermore,)30 b(a)f(GC)g(\015ip)e
(of)j(the)f(from-space)g(and)g(to-space)h(can)g(only)e(o)s(ccur)h(when)
f(the)150 591 y(redo)i(log)h(is)e(empt)m(y)-8 b(.)42
b(Our)29 b(sc)m(heme)i(do)s(es)f(not)h(ha)m(v)m(e)g(this)e(requiremen)m
(t.)150 893 y Fm(1.2.2)112 b(P)m(artitioned)38 b(GC)150
1121 y Fl(The)j(idea)g(of)h(sub-dividing)c(the)j(address)g(space)h(in)m
(to)g(separate)h(areas)f(and)f(collecting)g(eac)m(h)i(area)150
1290 y(indep)s(enden)m(tly)23 b(w)m(as)k(\014rst)e(prop)s(osed)g(b)m(y)
h(Bishop)d([4)q(].)40 b(His)25 b(w)m(ork,)i(ho)m(w)m(ev)m(er,)i(w)m(as)
d(done)g(in)f(the)h(con)m(text)150 1459 y(of)31 b(a)f(virtual)f(memory)
h(system)h(without)e(p)s(ersistence.)291 1629 y(Generational)36
b(GC)25 b([14)q(])37 b(also)f(divides)d(the)k(address)e(space)i(in)m
(to)f(separate)h(areas,)h(called)e Ff(gener-)150 1798
y(ations)p Fl(,)41 b(based)c(on)g(the)h(lifetimes)e(of)i(ob)5
b(jects.)62 b(It)38 b(di\013ers)e(from)h(partitioned)f(GC)i(in)e(sev)m
(eral)i(w)m(a)m(ys.)150 1968 y(First,)f(generational)f(GC)f(exploits)g
(the)h(fact)h(that)f(most)g(ob)5 b(jects)37 b(ha)m(v)m(e)g(a)f(v)m(ery)
g(short)f(lifetime)g(and)150 2137 y(collects)i(areas)g(that)g(con)m
(tain)g(newly)e(created)j(ob)5 b(jects)37 b(more)g(frequen)m(tly)-8
b(.)59 b(P)m(artitioned)36 b(GC)g(migh)m(t)150 2306 y(use)31
b(a)g(di\013eren)m(t)f(p)s(olicy)f(to)j(select)f(whic)m(h)f(partition)f
(to)j(collect)25 b([5)q(].)42 b(Second,)31 b(generational)g(GC)g(only)
150 2476 y(main)m(tains)c(in)m(ter-area)j(references)f(from)f(y)m(oung)
h(generations)g(to)g(old)f(generations.)41 b(As)28 b(a)h(result,)g
(col-)150 2645 y(lecting)d(an)h(old)f(generation)h(requires)e(tracing)i
(all)e(generations)i(that)h(are)f(y)m(ounger.)40 b(P)m(artitioned)26
b(GC,)150 2814 y(on)k(the)h(other)f(hand,)g(can)h(collect)f(an)m(y)h
(partition)e(indep)s(enden)m(tly)-8 b(.)291 2984 y(Our)23
b(sc)m(heme)i(uses)e(IRLs)h(to)g(k)m(eep)h(trac)m(k)g(of)f(in)m
(ter-partition)f(references.)39 b(Similar)21 b(data)k(structures)150
3153 y(are)36 b(used)f(in)f(the)i(w)m(ork)g(b)m(y)f(Bishop)24
b([4)q(],)37 b(in)d(generational)i(GC,)g(as)f(w)m(ell)g(as)h(in)e
(distributed)f(garbage)150 3322 y(collection)41 b(algorithms)e(to)j
(handle)e(in)m(ter-no)s(de)g(references)25 b([23)q(,)h(18].)73
b(They)41 b(are)g(also)g(used)f(in)g(the)150 3492 y(partitioned)29
b(GC)h(algorithms)g(describ)s(ed)e(b)s(elo)m(w.)291 3661
y(There)37 b(are)i(sev)m(eral)f(recen)m(t)g(w)m(orks)g(that)g(address)f
(the)h(issue)f(of)h(v)m(ery)g(large)g(p)s(ersisten)m(t)e(storage)150
3831 y(spaces)g(b)m(y)f(using)e(a)j(partitioned)d(approac)m(h)j(for)f
(garbage)h(collection)25 b([25)q(,)g(5,)h(3].)55 b(Ho)m(w)m(ev)m(er,)39
b(none)c(of)150 4000 y(these)c(w)m(orks)f(addresses)g(the)g(I/O)h(cost)
g(related)f(to)i(IRL)d(mo)s(di\014cations.)291 4169 y(Y)-8
b(ong,)30 b(Naugh)m(ton,)h(and)d(Y)-8 b(u)25 b([25)q(])k(ev)-5
b(aluate)29 b(a)g(n)m(um)m(b)s(er)f(of)h(GC)g(algorithms)e(for)i(clien)
m(t-serv)m(er)g(p)s(er-)150 4339 y(sisten)m(t)40 b(ob)5
b(ject)41 b(stores.)71 b(They)40 b(prop)s(ose)f(an)h(incremen)m(tal,)j
(partitioned,)e(cop)m(ying)f(GC)h(algorithm.)150 4508
y(Their)30 b(sc)m(heme)j(is)f(fault)f(toleran)m(t)i(and)e(reco)m(v)m
(ery)j(is)d(simple)g(due)g(to)i(the)f(use)g(of)g(logical)g(ob)5
b(ject)33 b(iden-)150 4677 y(ti\014ers.)69 b(It)40 b(requires)e(the)i
(use)g(of)g(a)h(write)e(barrier)f(at)j(clien)m(ts)f(to)g(detect)i(mo)s
(di\014cations)c(of)i(ob)5 b(ject)150 4847 y(references.)52
b(The)33 b(new)h(ob)5 b(ject)35 b(references)f(are)h(recorded)e(in)g(a)
i(list,)e(whic)m(h)g(is)g(shipp)s(ed)e(bac)m(k)k(to)g(the)150
5016 y(serv)m(er)40 b(at)g(commit)f(time.)67 b(During)38
b(garbage)j(collection,)g(lo)s(c)m(ks)e(ha)m(v)m(e)i(to)f(b)s(e)f
(acquired)f(on)h(ob)5 b(jects)150 5186 y(b)s(efore)26
b(they)h(are)f(copied)g(to)h(guaran)m(tee)h(that)f(the)g(collector)g
(do)s(es)f(not)g(mo)m(v)m(e)i(an)f(ob)5 b(ject)27 b(that)g(is)e(b)s
(eing)150 5355 y(up)s(dated)k(b)m(y)h(an)h(uncommitted)e(transaction.)
41 b(Lo)s(c)m(king)30 b(is)g(not)g(required)f(in)g(our)h(sc)m(heme.)
1905 5649 y(12)p eop
%%Page: 13 13
13 12 bop 291 83 a Fl(Co)s(ok,)33 b(W)-8 b(olf,)33 b(and)e(Zorn)24
b([5)q(])32 b(in)m(v)m(estigate)h(heuristics)d(for)h(selecting)h(a)g
(partition)f(to)i(collect)f(when)150 252 y(a)37 b(garbage)i(collection)
e(is)f(necessary)-8 b(.)61 b(They)37 b(sho)m(w)g(that)g(one)h(of)f(its)
g(prop)s(osed)e(partition)h(selection)150 422 y(p)s(olicies)29
b(is)h(more)h(cost-e\013ectiv)m(e)k(than)c(the)g(others.)43
b(The)31 b(p)s(olicy)e(is)h(based)h(on)g(the)g(observ)-5
b(ation)31 b(that)150 591 y(when)k(a)h(p)s(oin)m(ter)f(is)g(o)m(v)m
(erwritten,)i(the)f(ob)5 b(ject)37 b(it)e(p)s(oin)m(ted)g(to)i(is)d
(more)i(lik)m(ely)f(to)h(b)s(ecome)g(garbage.)150 760
y(This)29 b(w)m(ork,)h(ho)m(w)m(ev)m(er,)i(do)s(es)e(not)h(describ)s(e)
e(the)h(garbage)i(collection)e(algorithm)f(itself.)291
930 y(Amsaleg,)48 b(F)-8 b(ranklin,)45 b(and)e(Grub)s(er)24
b([3])44 b(describ)s(e)e(an)i(incremen)m(tal)f(mark-and-sw)m(eep)h
(garbage)150 1099 y(collector)27 b(for)f(clien)m(t-serv)m(er)g(ob)5
b(ject)28 b(database)f(systems.)39 b(The)26 b(main)f(fo)s(cus)h(of)g
(this)g(w)m(ork)g(is)f(to)i(handle)150 1269 y(issues)43
b(that)j(arise)e(due)g(to)h(the)g(cac)m(hing)g(of)g(disk)e(pages)j(b)m
(y)e(clien)m(ts.)83 b(The)45 b(sc)m(heme)g(ensures)f(the)150
1438 y(correctness)39 b(of)f(a)g(concurren)m(t)g(GC)g(in)e(spite)h(of)i
(transaction)f(rollbac)m(k)f(and)g(partial)g(\015ush)f(of)i(dirt)m(y)
150 1607 y(pages)33 b(from)g(clien)m(ts)f(to)i(the)f(serv)m(er.)48
b(This)31 b(problem)g(do)s(es)i(not)g(o)s(ccur)f(in)g(our)g(system)h(b)
s(ecause)g(only)150 1777 y(committed)c(c)m(hanges)h(are)g(sen)m(t)g
(bac)m(k)g(to)f(serv)m(ers.)41 b(The)28 b(pap)s(er)h(brie\015y)e
(discusses)g(ho)m(w)j(to)g(extend)f(the)150 1946 y(algorithm)g(to)j
(collect)e(partitions)f(indep)s(enden)m(tly)f(but)h(details)h(are)g
(not)h(giv)m(en.)291 2115 y(W)-8 b(ork)43 b(that)g(is)e(closely)h
(related)g(to)h(this)e(thesis)g(is)g(describ)s(ed)f(in)24
b([18)q(],)46 b(whic)m(h)40 b(presen)m(ts)j(a)f(dis-)150
2285 y(tributed)32 b(garbage)i(collection)f(sc)m(heme)h(for)f(Thor.)48
b(That)33 b(w)m(ork)h(concen)m(trates)h(on)e(the)g(co)s(ordination)150
2454 y(b)s(et)m(w)m(een)39 b(m)m(ultiple)e(serv)m(ers)i(and)f(clien)m
(ts)g(to)i(detect)g(distributed)c(garbage)k(and)e(turn)g(it)g(in)m(to)h
(lo)s(cal)150 2623 y(garbage,)45 b(whic)m(h)39 b(can)i(then)g(b)s(e)f
(collected)h(b)m(y)f(lo)s(cal)g(GC.)h(Ho)m(w)m(ev)m(er,)46
b(it)40 b(do)s(es)g(not)h(discuss)e(the)i(lo-)150 2793
y(cal)36 b(GC.)f(The)g(garbage)i(collector)f(describ)s(ed)e(in)g(this)g
(thesis)h(is)g(designed)f(to)i(w)m(ork)g(in)e(co)s(op)s(eration)150
2962 y(with)29 b(the)h(distributed)e(GC)i(algorithm)f(in)24
b([18)q(],)30 b(pro)m(viding)f(a)h(reclamation)g(solution)f(for)h
(distributed)150 3132 y(database)h(systems.)150 3493
y Fr(1.3)137 b(Thesis)47 b(Outline)150 3752 y Fl(The)23
b(rest)h(of)f(this)g(thesis)g(is)f(organized)i(as)f(follo)m(ws.)38
b(Chapter)24 b(2)g(describ)s(es)e(the)i(system)g(arc)m(hitecture)g(of)
150 3922 y(Thor.)38 b(It)24 b(in)m(tro)s(duces)e(relev)-5
b(an)m(t)24 b(concepts)h(that)g(will)c(b)s(e)i(used)g(in)g(later)g(c)m
(hapters.)39 b(Chapter)25 b(3)f(presen)m(ts)150 4091
y(an)41 b(o)m(v)m(erview)g(of)g(our)f(garbage)i(collection)e(sc)m
(heme.)72 b(It)41 b(describ)s(es)e(the)h(data)i(structures)e(required)
150 4260 y(to)k(k)m(eep)g(trac)m(k)g(of)f(in)m(ter-partition)f
(references)h(for)g(indep)s(enden)m(t)e(GC)i(of)g(partitions.)77
b(Chapter)25 b(4)150 4430 y(discusses)c(in)h(detail)f(the)i(ro)s(ot)g
(en)m(tities)g(required)e(for)h(GC)h(of)g(a)g(partition.)37
b(It)22 b(pro)m(vides)g(an)h(incremen)m(tal)150 4599
y(ro)s(ot)36 b(generation)g(sc)m(heme.)57 b(Chapter)24
b(5)36 b(iden)m(ti\014es)e(the)h(cost)i(asso)s(ciated)f(with)e(the)i
(main)m(tenance)g(of)150 4768 y(in)m(ter-partition)24
b(references)i(and)f(describ)s(es)f(an)h(optimized)f(sc)m(heme)j(that)f
(reduces)f(this)f(cost.)40 b(Finally)-8 b(,)150 4938
y(Chapter)24 b(6)31 b(concludes)f(the)g(thesis)g(and)g(suggests)h
(areas)g(for)f(future)f(w)m(ork.)1905 5649 y(13)p eop
%%Page: 14 14
14 13 bop 150 809 a Fg(Chapter)66 b(2)150 1349 y Fj(Thor)79
b(Arc)-7 b(hitecture)150 1851 y Fl(This)27 b(c)m(hapter)h(giv)m(es)h
(an)f(o)m(v)m(erview)h(of)g(Thor,)f(a)h(distributed)c(ob)5
b(ject-orien)m(ted)29 b(database)h(system.)40 b(W)-8
b(e)150 2020 y(will)31 b(concen)m(trate)37 b(on)c(the)h(asp)s(ects)h
(of)f(Thor)f(that)i(are)f(relev)-5 b(an)m(t)34 b(to)h(this)e(thesis.)50
b(A)34 b(more)g(complete)150 2189 y(description)28 b(of)j(Thor)e(can)i
(b)s(e)f(found)f(in)24 b([16)q(,)h(15)q(].)291 2359 y(Thor)40
b(is)h(an)g(ob)5 b(ject-orien)m(ted)42 b(database)g(managemen)m(t)h
(system)e(that)h(can)f(b)s(e)g(used)f(in)g(a)h(het-)150
2528 y(erogeneous,)j(distributed)37 b(en)m(vironmen)m(t.)70
b(Thor)39 b(pro)m(vides)h(a)g(univ)m(erse)f(of)i(p)s(ersisten)m(t)e(ob)
5 b(jects.)71 b(It)150 2697 y(p)s(ermits)32 b(application)g(programs)h
(written)f(in)h(v)-5 b(arious)32 b(programming)h(languages)g(to)i
(share)e(ob)5 b(jects.)150 2867 y(Eac)m(h)36 b(ob)5 b(ject)36
b(in)e(Thor)h(has)g(a)h(globally)e(unique)f(iden)m(ti\014er)h(called)h
(an)g Ff(xr)-5 b(ef)p Fl(.)56 b(Ob)5 b(jects)35 b(con)m(tain)h(data)150
3036 y(and)d(references)g(to)h(other)g(Thor)e(ob)5 b(jects.)50
b(They)33 b(are)h(encapsulated)e(so)i(that)g(an)f(application)e(using)
150 3205 y(Thor)d(can)i(access)g(their)f(state)h(only)f(b)m(y)g
(calling)e(their)i(metho)s(ds.)39 b(Thor)29 b(supp)s(orts)e
(transactions)i(that)150 3375 y(allo)m(w)f(users)f(to)i(group)f(op)s
(erations)f(so)i(that)g(the)f(database)h(state)h(can)f(remain)e
(consisten)m(t)h(in)f(spite)h(of)150 3544 y(concurrency)i(and)g
(failures.)291 3714 y(Thor)36 b(is)g(partitioned)g(in)m(to)h(t)m(w)m(o)
h(distinct)d(comp)s(onen)m(ts:)54 b Ff(F)-7 b(r)i(ont)40
b(Ends)f(\(FE\))f Fl(running)c(at)j(clien)m(t)150 3883
y(no)s(des)f(and)h Ff(Obje)-5 b(ct)38 b(R)-5 b(ep)g(ositories)42
b(\(OR\))37 b Fl(running)d(at)k(serv)m(er)f(no)s(des.)61
b(An)36 b(FE)i(is)e(created)i(for)f(eac)m(h)150 4052
y(application)i(program.)70 b(It)41 b(in)m(teracts)g(with)e(the)i
(application)d(program)i(and)g(comm)m(unicates)h(with)150
4222 y(ORs)27 b(to)i(service)f(clien)m(t)f(requests.)40
b(An)28 b(OR)f(is)g(resp)s(onsible)e(for)j(managing)f(the)h(storage)i
(of)e(p)s(ersisten)m(t)150 4391 y(ob)5 b(jects.)58 b(There)35
b(can)h(b)s(e)f(m)m(ultiple)f(ORs)h(in)g(the)g(system)h(\(see)h(Figure)
25 b(2-1\))37 b(and)e(they)h(can)g(b)s(e)f(geo-)150 4560
y(graphically)29 b(distributed.)38 b(Ho)m(w)m(ev)m(er,)33
b(the)d(ph)m(ysical)g(lo)s(cation)g(of)g(ob)5 b(jects)32
b(is)d(resolv)m(ed)i(transparen)m(tly)150 4730 y(b)m(y)f(Thor.)1905
5649 y(14)p eop
%%Page: 15 15
15 14 bop 762 1676 a @beginspecial 169 @llx 402 @lly
469 @urx 599 @ury 2880 @rwi @setspecial
%%BeginDocument: Idraw/overview.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 180 230 ] concat
114 395 28 28 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 290 230 ] concat
114 395 28 28 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 390 230 ] concat
114 395 28 28 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 236 406 ] concat
114 395 28 28 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 334 406 ] concat
114 395 28 28 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 235 318 ] concat
114 395 28 28 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 334 317 ] concat
114 395 28 28 Elli
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
158 522 158 489 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
258 523 258 490 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
133 375 183 375 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
243 375 283 375 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
140 440 116 401 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
173 438 197 400 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
242 438 222 402 Line
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 252 ] concat
274 440 298 400 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 326 809 ] concat
[
(Client)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 423 810 ] concat
[
(Client)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 336 721 ] concat
[
(FE)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 436 720 ] concat
[
(FE)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 278 633 ] concat
[
(OR)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 391 632 ] concat
[
(OR)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 490 633 ] concat
[
(OR)
] Text
End

Begin %I Line
1 1 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 184 280 ] concat
317 510 366 510 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 561 797 ] concat
[
(communication)
] Text
End

Begin %I Rect
1 0 0 [2 2 2 2 2 2 2 2] 17 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 0.980099 191 258.189 ] concat
49 311 376 511 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 363 581 ] concat
[
(Thor Universe)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 735 1872 a Fl(Figure)30 b(2-1:)42 b(A)31
b(con\014guration)e(of)i(clien)m(ts,)f(FEs,)h(and)e(ORs)h(in)f(Thor)150
2245 y Fr(2.1)137 b(F)-11 b(ron)l(t)45 b(Ends)j(\(FE\))150
2504 y Fl(When)39 b(a)g(clien)m(t)f(application)f(using)h(Thor)g
(initializes,)g(it)h(starts)g(an)g(FE)g(pro)s(cess)f(and)g(establishes)
150 2673 y(a)e(connection)f(with)f(it.)55 b(The)35 b(FE)g(acts)h(as)g
(an)f(external)g(in)m(terface)h(to)g(the)f(Thor)g(univ)m(erse.)54
b(An)35 b(FE)150 2843 y(comm)m(unicates)h(with)e(the)h(ORs)g(to)h
(carry)f(out)h(the)f(application's)f(requests)h(to)h(access)h(and)e(mo)
s(dify)150 3012 y(ob)5 b(jects.)45 b(An)31 b(FE)h Ff(establishes)j(a)f
(session)e Fl(with)e(an)i(OR)f(when)g(it)g(\014rst)g(connects)h(with)e
(the)i(OR.)f(The)150 3181 y(FE)d(and)f(OR)h(main)m(tain)f(information)f
(ab)s(out)i(eac)m(h)h(other)f(un)m(til)f(the)h(FE)g(closes)g(the)g
(session)f(\(or)i(un)m(til)150 3351 y(Thor)f(sh)m(uts)h(it)f(do)m
(wn\).)40 b(W)-8 b(e)31 b(call)d(an)h(FE)g(that)h(has)f(established)e
(a)i(session)g(with)e(an)i(OR)g(a)g Ff(c)-5 b(onne)g(cte)g(d)150
3520 y(FE)39 b Fl(to)g(that)h(OR.)f(In)f(this)g(thesis,)i(w)m(e)g
(assume)e(that)i(an)f(FE)g(closes)g(a)g(session)f(with)g(an)g(OR)h
(only)150 3690 y(when)e(it)g(sh)m(uts)h(do)m(wn)f(or)h(crashes.)63
b(Th)m(us,)39 b(if)e(an)h(FE)g(has)g(ev)m(er)h(fetc)m(hed)f(an)g(ob)5
b(ject)39 b(from)e(an)h(OR,)150 3859 y(it)d(m)m(ust)h(main)m(tain)f(an)
h(op)s(en)f(connection)h(with)f(that)h(OR)g(un)m(til)e(it)h
(terminates.)58 b(In)35 b(addition,)g(FE-)150 4028 y(clien)m(t,)g
(FE-OR,)g(and)f(OR-OR)g(comm)m(unications)f(are)i(assumed)f(to)h(b)s(e)
f(reliable)e(and)i(messages)i(are)150 4198 y(deliv)m(ered)h(in)g(FIF)m
(O)i(order.)63 b(This)37 b(can)h(b)s(e)g(implemen)m(ted)e(using)h(w)m
(ell-kno)m(wn)g(tec)m(hniques)h(suc)m(h)g(as)150 4367
y(timestamps,)33 b(time-out,)h(re-transmission)d(and)i(ac)m(kno)m
(wledgemen)m(ts.)50 b(Thor)32 b(is)g(designed)g(to)h(handle)150
4536 y(clien)m(t/FE)28 b(and)f(net)m(w)m(ork)i(failures.)38
b(If)28 b(an)f(OR)h(is)f(unable)f(to)j(con)m(tact)h(an)e(FE)g(for)g(a)g
(long)g(time,)g(it)g(will)150 4706 y(prop)s(erly)g(sh)m(utdo)m(wn)i
(the)g(FE-OR)h(session)24 b([18)q(].)291 4875 y(An)34
b(FE)g(usually)d(runs)h(on)i(the)g(same)g(mac)m(hine)g(as)g(the)g
(application.)50 b(An)33 b(application)f(program)150
5044 y(nev)m(er)37 b(obtains)f(direct)g(p)s(oin)m(ters)g(to)h(ob)5
b(jects.)61 b(Instead,)38 b(an)f(FE)g(issues)e Ff(hand)5
b(les)38 b Fl(that)g(can)f(b)s(e)f(used)150 5214 y(to)g(iden)m(tify)e
(ob)5 b(jects)36 b(in)e(subsequen)m(t)h(calls.)55 b(The)35
b(FE)g(main)m(tains)f(a)i Ff(hand)5 b(le)39 b(table)c
Fl(that)h(maps)f(from)150 5383 y(handles)30 b(to)i(ob)5
b(jects.)45 b(Handles)31 b(are)g(meaningful)f(only)g(during)g(an)h
(application's)f(particular)g(session)1905 5649 y(15)p
eop
%%Page: 16 16
16 15 bop 150 83 a Fl(with)33 b(its)h(FE.)g(An)g(application)f(program)
h(ma)m(y)g(b)s(e)g(written)f(in)g(an)m(y)i(programming)e(language.)52
b(The)150 252 y(application)40 b(and)h(the)g(FE)h(usually)d(run)h(in)g
(separate)i(address)f(spaces)h(to)g(prev)m(en)m(t)g(corruption)e(of)150
422 y(p)s(ersisten)m(t)29 b(ob)5 b(jects.)291 591 y(The)32
b(FE)h(is)f(resp)s(onsible)d(for)j(executing)h(in)m(v)m(o)s(cations)g
(of)f(ob)5 b(ject)34 b(op)s(erations)e(b)m(y)g(the)h(clien)m(t)f(pro-)
150 760 y(gram.)40 b(It)29 b Ff(c)-5 b(aches)30 b Fl(copies)f(of)g(p)s
(ersisten)m(t)f(ob)5 b(jects)30 b(and)e(v)m(olatile)h(ob)5
b(jects)29 b(created)h(b)m(y)f(the)g(application.)150
930 y(Ob)5 b(jects)30 b(in)e(the)i(FE)g(cac)m(he)h(ma)m(y)f(con)m(tain)
g(references)g(to)g(ob)5 b(jects)31 b(that)f(are)g(not)g(in)e(its)h
(cac)m(he.)42 b(When)150 1099 y(an)29 b(application)f(mak)m(es)i(a)g
(call)f(in)f(whic)m(h)g(an)i(attempt)g(is)f(made)g(to)h(follo)m(w)f
(suc)m(h)g(a)h(reference,)g(a)g(fetc)m(h)150 1269 y(request)36
b(is)f(sen)m(t)i(to)g(the)g(OR)e(con)m(taining)h(that)h(ob)5
b(ject.)59 b(The)36 b(OR)f(sends)h(the)g(requested)g(ob)5
b(ject)37 b(to)150 1438 y(the)e(FE)g(along)f(with)g(some)h(additional)d
(ob)5 b(jects)35 b(that)h(migh)m(t)e(b)s(e)g(required)f(b)m(y)h(the)h
(FE)g(in)e(the)i(near)150 1607 y(future.)40 b(This)28
b(tec)m(hnique)i(is)g(referred)g(to)h(as)f Ff(pr)-5 b(efetching)p
Fl(.)291 1777 y(An)23 b(ob)5 b(ject)24 b(fetc)m(hed)f(from)g(a)g(serv)m
(er)g(con)m(tains)g(references)h(in)d(the)j(form)e(of)h(xrefs.)38
b(The)22 b(FE)h(con)m(v)m(erts)150 1946 y(these)g(references)f(in)m(to)
h(virtual)d(memory)i(p)s(oin)m(ters)g(to)h(cac)m(hed)g(ob)5
b(jects)23 b(for)f(b)s(etter)g(p)s(erformance.)38 b(This)150
2115 y(pro)s(cess)32 b(is)g(called)g Ff(swizzling)p Fl(.)48
b(When)33 b(an)f(FE)h(is)f(ab)s(out)h(to)g(commit)g(a)g(transaction,)g
(it)g(con)m(v)m(erts)h(the)150 2285 y(virtual)19 b(memory)i(p)s(oin)m
(ters)f(in)g(mo)s(di\014ed)f(cac)m(hed)j(ob)5 b(jects)22
b(bac)m(k)g(to)g(xrefs)f(b)s(efore)f(sending)g(the)h(mo)s(di\014ed)150
2454 y(v)m(ersions)j(of)h(the)g(ob)5 b(jects)26 b(to)f(the)h(ORs.)38
b(This)23 b(pro)s(cess)h(is)g(called)g Ff(unswizzling)p
Fl(.)40 b(T)-8 b(o)25 b(facilitate)g(swizzling)150 2623
y(and)32 b(unswizzling,)d(an)k(FE)f(main)m(tains)f(a)h(swizzle)g
(table,)h(whic)m(h)d(is)i(a)g(t)m(w)m(o-w)m(a)m(y)j(mapping)c(from)g
(xrefs)150 2793 y(to)g(virtual)e(memory)h(p)s(oin)m(ters.)291
2962 y(Figure)25 b(2-2)35 b(illustrates)d(ho)m(w)i(ob)5
b(jects)35 b(are)g(accessed)g(b)m(y)f(a)h(clien)m(t)f(using)e(Thor.)52
b(The)33 b(FE)h(cac)m(hes)150 3132 y(copies)h(of)g(ob)5
b(jects)36 b Ff(A)e Fl(and)h Ff(B)f Fl(from)h Fh(O)s(R)1590
3146 y Fe(1)1654 3132 y Fl(and)g(ob)5 b(ject)35 b Ff(D)g
Fl(from)f Fh(O)s(R)2579 3146 y Fe(2)2619 3132 y Fl(.)54
b(References)36 b(to)g(ob)5 b(jects)35 b(that)150 3301
y(are)27 b(cac)m(hed)i(at)e(the)h(FE)f(are)g(swizzled)f(in)m(to)h
(virtual)f(memory)h(p)s(oin)m(ters.)38 b(The)27 b(clien)m(t)f(is)g(giv)
m(en)i(handles)150 3470 y(to)k(ob)5 b(ject)32 b Ff(A)f
Fl(and)f Ff(B)p Fl(.)i(These)e(handles)g(are)i(stored)f(in)f(the)h
(clien)m(t)g(program's)g(lo)s(cal)f(v)-5 b(ariables)30
b Ff(v1)i Fl(and)150 3640 y Ff(v2)p Fl(.)41 b(The)30
b(clien)m(t)g(uses)g(handles)e(to)k(refer)e(to)h(Thor)e(ob)5
b(jects)31 b(and)f(to)h(in)m(v)m(ok)m(e)h(op)s(erations)d(on)i(them.)
150 4001 y Fr(2.2)137 b(Ob)8 b(ject)47 b(Rep)t(ositories)f(\(OR\))150
4260 y Fl(An)36 b(OR)h(manages)h(a)f(disjoin)m(t)e(subset)h(of)h(the)g
(Thor)f(ob)5 b(ject)38 b(univ)m(erse.)59 b(Eac)m(h)38
b(OR)e(has)h(a)g(globally-)150 4430 y(unique)c(iden)m(ti\014er,)h
(called)f(the)i Ff(OR)h(id)p Fl(.)54 b(An)34 b(OR)g(con)m(tains)g(a)h
Ff(r)-5 b(o)g(ot)39 b(dir)-5 b(e)g(ctory)36 b Fl(ob)5
b(ject)36 b(that)f(con)m(tains)150 4599 y(references)30
b(to)g(other)g(ob)5 b(jects)31 b(or)e(directories)g(in)g(the)g(Thor)g
(univ)m(erse.)40 b(The)29 b(ro)s(ot)h(directory)f(is)g(reac)m(h-)150
4768 y(able)f(from)f(an)i(in)m(ternal,)e(imm)m(utable)g(ro)s(ot)i(of)f
(the)g(OR.)g(W)-8 b(e)30 b(refer)e(to)h(that)g(as)f(the)g
Ff(OR)j(r)-5 b(o)g(ot)p Fl(.)42 b(A)28 b(clien)m(t)150
4938 y(application)34 b(can)h(request)g(the)h(ro)s(ot)f(directory)g(ob)
5 b(ject)36 b(through)e(the)i(FE.)f(After)h(obtaining)e(a)h(han-)150
5107 y(dle)c(to)h(the)g(ro)s(ot)g(directory)f(ob)5 b(ject,)33
b(clien)m(ts)e(can)h(na)m(vigate)h(through)e(its)g(references)g(to)i
(access)g(other)150 5276 y(ob)5 b(jects.)41 b(F)-8 b(or)32
b(example,)e(ob)5 b(ject)31 b Ff(A)f Fl(is)f(a)i(directory)f(ob)5
b(ject)31 b(in)e(Figure)c(2-2.)1905 5649 y(16)p eop
%%Page: 17 17
17 16 bop 462 2896 a @beginspecial 140 @llx 316 @lly
449 @urx 604 @ury 3600 @rwi @setspecial
%%BeginDocument: Idraw/thor.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 368 551 ] concat
196 224 16 16 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 334 496 ] concat
196 224 16 16 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 390 484 ] concat
196 224 16 16 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 334 364 ] concat
196 224 16 16 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 390 329 ] concat
196 224 16 16 Elli
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 191 252 ] concat
307 423 429 545 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 191 252 ] concat
307 246 429 368 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 213 463 ] concat
196 224 16 16 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 175 422 ] concat
196 224 16 16 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 235 396 ] concat
196 224 16 16 Elli
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 36 164 ] concat
307 423 429 545 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -108 164 ] concat
307 423 429 545 Rect
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 151.5 389.5 ] concat
806 749 774 691 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 151.5 389.5 ] concat
845 749 865 673 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 151.5 389.5 ] concat
783 382 845 348 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 151.5 389.5 ] concat
757 630 757 432 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 151.5 389.5 ] concat
548 591 845 617 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 151.5 389.5 ] concat
579 438
657 313
840 312
3 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 210 697 ] concat
[
(v1 := get_root\(OR1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Roman 12 SetF
[ 1 0 0 1 210 675 ] concat
[
(v2 := lookup\(v1,"B"\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 277 642 ] concat
[
(v1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 277 620 ] concat
[
(v2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 559.5 779 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 526 723.5 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 582 710.5 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 525.5 591.5 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 12 SetF
[ 1 0 0 1 581.5 556 ] concat
[
(E)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122 483.5 ] concat
883 667 883 619 Line
End

Begin %I Line
1 0 1 [4 4 4 4] 17 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122 483.5 ] concat
550 390 518 353 Line
End

Begin %I Line
1 0 1 [4 4 4 4] 17 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122 483.5 ] concat
531 317 586 285 Line
End

Begin %I BSpl
2 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122 483.5 ] concat
340 269
460 313
2 BSpl
End

Begin %I Line
2 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122 483.5 ] concat
341 313 537 406 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 277 731 ] concat
[
(Client)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 432 731 ] concat
[
(FE)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 587 819 ] concat
[
(OR1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 587 642 ] concat
[
(OR2)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 0.764045 -35.625 217.639 ] concat
301 511 327 533 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 0.764045 -35.125 238.698 ] concat
301 511 327 533 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -33.625 116.875 ] concat
315 537 316 537 Rect
End

Begin %I Line
2 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.777778 0 0 1 21.5039 92 ] concat
245 422 301 422 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -44 100 ] concat
256 389 301 389 Line
End

Begin %I Line
1 0 0 [4 4 4 4] 17 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -46 106 ] concat
256 356 301 356 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 277 520 ] concat
[
(handle)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 279 495 ] concat
[
(object reference)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 277 468 ] concat
[
(memory pointer)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 210 542 ] concat
[
(Legend)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 0.869919 -46 143.78 ] concat
245 345 434 467 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 404 692 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 368 652 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 427 625 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 537 833 ] concat
[
(OR Root)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -44.5 139 ] concat
290 323 301 323 Line
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 1094 3092 a Fl(Figure)30 b(2-2:)42 b(Ob)5
b(ject)30 b(access)i(b)m(y)e(clien)m(t)g(and)g(FE)150
3458 y Fm(2.2.1)112 b(Reac)m(habilit)m(y)39 b(and)f(Garbage)h
(Collection)150 3686 y Fl(P)m(ersistence)22 b(in)e(Thor)h(is)g(based)g
(on)h(reac)m(habilit)m(y)-8 b(.)37 b(An)21 b(ob)5 b(ject)23
b(is)d(p)s(ersisten)m(t)h(if)g(it)g(is)g(reac)m(hable)h(from)f(the)150
3855 y(ro)s(ot)31 b(directory)f(ob)5 b(jects)32 b(of)f(the)g(ORs)f(or)h
(from)f(other)h(p)s(ersisten)m(t)f(ob)5 b(jects.)42 b(Clien)m(t)30
b(applications)f(can)150 4025 y(create)j(new)e(v)m(olatile)g(ob)5
b(jects)31 b(and)f(these)h(ob)5 b(jects)31 b(b)s(ecame)g(p)s(ersisten)m
(t)e(if)h(they)g(are)h(made)g(reac)m(hable)150 4194 y(from)k(a)h(p)s
(ersisten)m(t)f(ob)5 b(ject)37 b(or)e(a)h(ro)s(ot)g(directory)g(and)f
(the)h(transaction)g(commit)f(succeeds.)57 b(These)150
4364 y(ob)5 b(jects)27 b(are)g(called)f Ff(new)5 b(ly-p)-5
b(ersistent)28 b Fl(ob)5 b(jects.)40 b(If)26 b(a)h(p)s(ersisten)m(t)f
(ob)5 b(ject)28 b(b)s(ecomes)e(unreac)m(hable)g(from)150
4533 y(an)m(y)i(p)s(ersisten)m(t)g(ob)5 b(jects)29 b(or)f(from)f(an)m
(y)i(handles)d(in)h(use)h(in)f(clien)m(t)h(applications,)f(it)g(b)s
(ecomes)i(garbage)150 4702 y(and)h(its)g(storage)h(will)d(b)s(e)i
(reclaimed)f(automatically)-8 b(.)291 4872 y(Garbage)28
b(collection)e(in)f(Thor)h(is)f(divided)f(in)m(to)i(t)m(w)m(o)i(parts:)
38 b(lo)s(cal)26 b(GC)h(and)e(distributed)f(GC.)i(The)150
5041 y(former)g(w)m(orks)h(within)e(individual)d(ORs.)39
b(It)27 b(uses)f(information)f(main)m(tained)h(b)m(y)h(the)g
(distributed)d(GC)150 5210 y(and)29 b(itself)e(to)j(reclaim)f(storage.)
41 b(It)30 b(ma)m(y)f(record)g(extra)h(information)e(to)i(assist)e(the)
i(distributed)c(GC.)150 5380 y(The)e(latter)h(is)e(resp)s(onsible)e
(for)k(co)s(ordinating)e(b)s(et)m(w)m(een)i(di\013eren)m(t)e(ORs)h(as)h
(w)m(ell)e(as)i(b)s(et)m(w)m(een)g(ORs)f(and)1905 5649
y(17)p eop
%%Page: 18 18
18 17 bop 150 83 a Fl(FEs)32 b(to)h(main)m(tain)e(a)i(ro)s(ot)f(set)h
(that)g(protects)g(all)e(p)s(ersisten)m(t)g(ob)5 b(jects)33
b(and)e(exp)s(oses)h(the)h(garbage)g(to)150 252 y(the)24
b(lo)s(cal)g(garbage)h(collector.)39 b(A)25 b(design)e(of)h(a)h
(distributed)c(GC)j(proto)s(col)g(can)h(b)s(e)e(found)g(in)h([18)q(].)
39 b(This)150 422 y(thesis)28 b(concen)m(trates)i(on)f(the)f
(correctness)h(and)f(e\016ciency)h(of)f(the)h(lo)s(cal)f(GC)g(proto)s
(col.)40 b(Ho)m(w)m(ev)m(er,)31 b(w)m(e)150 591 y(will)d(also)i
(discuss)f(some)h(mo)s(di\014cations)f(to)i(the)g(distributed)c(GC)j
(proto)s(col)h(describ)s(ed)d(in)c([18)q(].)150 893 y
Fm(2.2.2)112 b(OR)38 b(T)-9 b(ables)150 1121 y Fl(F)h(or)45
b(GC)g(purp)s(oses,)h(eac)m(h)g(OR)e(main)m(tains)f(an)i(OR)f(table)g
(for)g(ev)m(ery)i(other)f(OR,)f(whic)m(h)f(records)150
1290 y(a)f(conserv)-5 b(ativ)m(e)43 b(estimate)g(of)f(the)g(incoming)f
(references)h(from)g(that)g(OR.)g(If)g Fh(O)s(R)3135
1304 y Fe(1)3216 1290 y Fl(has)g(a)g(remote)150 1459
y(reference)26 b(to)h(an)e(ob)5 b(ject)27 b(in)d Fh(O)s(R)1268
1473 y Fe(2)1307 1459 y Fl(,)j(the)f(OR)f(table)h(for)f
Fh(O)s(R)2172 1473 y Fe(1)2237 1459 y Fl(at)i Fh(O)s(R)2485
1473 y Fe(2)2550 1459 y Fl(has)e(an)h(en)m(try)g(for)f(the)h
(referenced)150 1629 y(ob)5 b(ject.)42 b(The)29 b(use)i(of)f(OR)g
(tables)g(is)g(a)g(form)g(of)h(reference)g(listing)22
b([4)q(,)j(18)q(].)150 1930 y Fm(2.2.3)112 b(Segmen)m(ts)150
2158 y Fl(The)24 b(storage)i(in)e(an)g(OR)g(is)g(divided)e(in)m(to)j(a)
g(set)g(of)g Ff(se)-5 b(gments)p Fl(,)26 b(whic)m(h)e(are)h(similar)d
(to)j(large)g(disk)e(pages.)150 2328 y(Eac)m(h)29 b(segmen)m(t)h(can)e
(store)h(man)m(y)g(ob)5 b(jects.)40 b(It)29 b(is)e(the)i(unit)e(of)h
(disk)f(transfer)h(and)g(cac)m(hing)h(at)g(an)f(OR.)150
2497 y(Segmen)m(ts)38 b(can)g(b)s(e)g(of)g(di\013eren)m(t)f(sizes.)62
b(Eac)m(h)39 b(segmen)m(t)g(has)e(a)h(lo)s(cally)f(unique)f(iden)m
(ti\014er)g(called)h(a)150 2667 y Ff(se)-5 b(gment)34
b(id)p Fl(.)42 b(Eac)m(h)31 b(segmen)m(t)h(has)f(a)g(header)g(whic)m(h)
e(con)m(tains)i(an)g Ff(indir)-5 b(e)g(ction)34 b(table)p
Fl(.)43 b(The)30 b(table)h(is)f(a)150 2836 y(mapping)f(from)h(an)g(ob)5
b(ject)31 b(index)e(to)i(the)g(actual)g(disk)d(lo)s(cation)i(within)e
(the)j(segmen)m(t.)291 3005 y(Ob)5 b(jects)30 b(stored)g(at)h(an)f(OR)f
(ma)m(y)i(con)m(tain)f(references)g(to)h(ob)5 b(jects)30
b(at)h(the)f(same)h(OR)e(or)h(at)h(other)150 3175 y(ORs.)57
b(A)36 b(reference,)i(also)e(called)g(an)g Ff(xr)-5 b(ef)p
Fl(,)38 b(consists)d(of)i(an)e(OR)h(id)f(and)g(and)h(a)g(lo)s(cal)f
(name)h(within)150 3344 y(that)e(serv)m(er)h(called)e(an)g
Ff(or)-5 b(ef)p Fl(.)52 b(An)34 b(oref)g(consists)f(of)h(a)g(segmen)m
(t)h(id)e(and)g(an)g(ob)5 b(ject)35 b(index.)50 b(Giv)m(en)34
b(a)150 3513 y(reference,)24 b(the)e(corresp)s(onding)d(ob)5
b(ject)23 b(can)e(b)s(e)g(accessed)i(b)m(y)e(sending)f(a)i(request)g
(to)g(the)g(OR)f(iden)m(ti\014ed)150 3683 y(b)m(y)31
b(the)g(OR)f(id.)40 b(The)31 b(OR)f(then)g(uses)h(the)g(segmen)m(t)h
(id)d(and)h(the)h(ob)5 b(ject)32 b(index)d(to)j(lo)s(cate)f(the)g(ob)5
b(ject)150 3852 y(e\016cien)m(tly)-8 b(.)41 b(Migration)30
b(of)g(ob)5 b(jects)31 b(b)s(et)m(w)m(een)g(di\013eren)m(t)f(ORs)g(is)g
(supp)s(orted)e(in)h(Thor)24 b([1)q(].)150 4154 y Fm(2.2.4)112
b(P)m(artitions)150 4382 y Fl(The)28 b(segmen)m(ts)h(in)e(an)i(OR)f
(are)h(logically)e(group)s(ed)g(in)m(to)h(sets)h(of)g
Ff(p)-5 b(artitions)p Fl(.)42 b(A)29 b(partition)e(consists)h(of)150
4551 y(one)23 b(or)g(more)g(segmen)m(ts.)39 b(It)23 b(is)e(the)i(unit)f
(of)g(garbage)i(collection.)38 b(That)23 b(is,)h(eac)m(h)f(partition)f
(is)g(collected)150 4720 y(indep)s(enden)m(tly)31 b(of)i(one)h
(another.)51 b(The)33 b(grouping)f(of)i(segmen)m(ts)g(in)m(to)g
(partitions)e(is)h(based)g(on)h(some)150 4890 y(clustering)28
b(strategy)-8 b(.)42 b(The)29 b(goal)h(is)f(to)h(minimize)d(the)i(n)m
(um)m(b)s(er)g(of)g(in)m(ter-partition)f(references.)41
b(Since)150 5059 y(a)24 b(partition)e(is)h(just)g(a)h(logical)f
(grouping)g(of)h(segmen)m(ts,)i(ob)5 b(jects)24 b(do)g(not)g(actually)f
(reside)g(in)f(partitions.)150 5229 y(Instead,)38 b(they)f(reside)e(in)
g(segmen)m(ts.)60 b(T)-8 b(o)37 b(a)m(v)m(oid)g(w)m(ordiness,)g(w)m(e)g
(often)g(use)f(the)h(term)f(partition)f(in)150 5398 y(this)29
b(thesis)h(when)f(w)m(e)i(actually)f(mean)g(the)h(segmen)m(t\(s\))h(of)
f(a)f(partition.)1905 5649 y(18)p eop
%%Page: 19 19
19 18 bop 150 83 a Fm(2.2.5)112 b(T)-9 b(ransaction)38
b(Log)150 311 y Fl(An)20 b(OR)g(uses)g(a)h(write-ahead)f(log)g(to)h
(implemen)m(t)e(atomic)i(transactions)g(b)m(y)f(clien)m(ts)g(as)g(w)m
(ell)f(as)i(lo)m(w-lev)m(el)150 480 y(system)k(transactions)h(suc)m(h)f
(as)g(GC.)h(In)e(Thor,)i(the)f(transaction)h(log)f(resides)f(in)g(the)h
(main)g(memory)g(of)150 650 y(an)f(OR.)f(Replication)g(is)f(used)h(to)i
(allo)m(w)e(the)h(log)g(to)g(surviv)m(e)f(crashes)i([17)q(].)39
b(The)23 b(basic)g(idea)h(is)e(that)j(the)150 819 y(log)32
b(is)e(replicated)h(in)f(the)i(main)e(memories)h(of)h(sev)m(eral)g(mac)
m(hines.)44 b(These)31 b(mac)m(hines)g(are)h(connected)150
989 y(b)m(y)38 b(a)g(fast)h(net)m(w)m(ork)g(and)e(are)i(bac)m(k)m(ed)g
(up)e(b)m(y)h(unin)m(terruptible)c(p)s(o)m(w)m(er)k(supplies.)61
b(A)39 b(log)f(record)g(is)150 1158 y(considered)c(stable)i(if)e(it)h
(resides)g(in)f(v)m(olatile)h(memory)h(at)g(all)e(of)i(these)g(mac)m
(hines.)56 b(Op)s(erations)34 b(on)150 1327 y(an)39 b(in-memory)f(log)h
(are)g(fast.)67 b(F)-8 b(or)39 b(example,)i(reading)d(a)h(log)g(record)
g(is)f(the)h(same)h(as)f(a)g(memory)150 1497 y(access)27
b(and)e(\015ushing)d(a)k(log)g(record)f(is)g(equiv)-5
b(alen)m(t)24 b(to)j(a)e(net)m(w)m(ork)i(round-trip)c(dela)m(y)-8
b(.)39 b(In)25 b(addition,)g(the)150 1666 y(pro)s(cessing)e(and)i
(discarding)d(of)j(log)g(en)m(tries)f(in)g(an)g(arbitrary)g(order)g
(can)h(b)s(e)f(implemen)m(ted)g(e\016cien)m(tly)-8 b(.)150
1968 y Fm(2.2.6)112 b(Mo)s(di\014ed)39 b(Ob)6 b(ject)38
b(Bu\013er)150 2196 y Fl(The)25 b(main)g(memory)g(of)h(an)f(OR)g(is)g
(partitioned)f(in)m(to)i(a)g(segmen)m(t)h(cac)m(he)g(and)e(a)h
Ff(mo)-5 b(di\014e)g(d)30 b(obje)-5 b(ct)28 b(bu\013er)150
2365 y Fl(\(MOB\))e([9)q(],)38 b(whic)m(h)d(con)m(tains)h(the)h(latest)
f(v)m(ersions)g(of)g(mo)s(di\014ed)e(or)i(newly-p)s(ersisten)m(t)f(ob)5
b(jects.)59 b(In)150 2534 y(Thor,)47 b(the)d(mo)s(di\014cations)e(due)h
(to)i(committed)f(transactions)g(are)h(not)f(immediately)e(written)h
(to)150 2704 y(segmen)m(ts.)e(Instead,)29 b(they)f(are)h(app)s(ended)d
(to)j(the)f(transaction)h(log)f(and)g(stored)g(in)f(the)h(MOB.)h(If)f
(the)150 2873 y(OR)35 b(crashes,)i(the)f(mo)s(di\014cations)e(in)g(the)
i(MOB)g(can)f(b)s(e)g(reconstructed)h(at)g(reco)m(v)m(ery)i(b)m(y)d
(scanning)150 3042 y(the)42 b(log.)74 b(Since)41 b(the)h(transaction)f
(log)h(in)e(Thor)h(is)f(implemen)m(ted)h(as)g(a)h(main-memory)f(log,)k
(it)c(is)150 3212 y(unnecessary)f(for)h(the)g(log)g(and)g(the)g(MOB)g
(to)h(ha)m(v)m(e)g(t)m(w)m(o)g(separate)g(copies)f(for)f(the)h(same)h
(ob)5 b(ject.)150 3381 y(Instead,)30 b(they)h(share)f(the)h(same)f(ob)5
b(jects)32 b(in)d(the)h(main)f(memory)-8 b(.)291 3551
y(When)25 b(an)g(OR)g(receiv)m(es)g(a)h(fetc)m(h)g(request)f(from)g(an)
g(FE,)g(it)g(\014rst)f(c)m(hec)m(ks)j(in)c(the)j(MOB)f(if)f(the)h
(latest)150 3720 y(v)m(ersion)35 b(of)h(the)g(ob)5 b(ject)36
b(is)f(presen)m(t)g(due)g(to)i(recen)m(t)f(mo)s(di\014cations.)55
b(If)35 b(the)h(ob)5 b(ject)36 b(is)f(not)h(found)e(in)150
3889 y(the)e(MOB,)f(the)h(OR)f(lo)s(oks)g(in)f(the)h(segmen)m(t)i(cac)m
(he.)45 b(If)31 b(the)g(ob)5 b(ject)32 b(is)f(not)g(in)f(the)i(cac)m
(he,)h(the)f(serv)m(er)150 4059 y(reads)e(the)h(segmen)m(t)g(con)m
(taining)f(the)h(ob)5 b(ject)31 b(from)f(disk,)f(and)h(stores)h(the)f
(segmen)m(t)i(in)d(the)h(cac)m(he.)291 4228 y(When)41
b(the)h(size)f(of)h(the)g(log)f(reac)m(hes)i(a)e(certain)h(threshold,)h
(a)e(separate)i(bac)m(kground)e Ff(\015usher)150 4397
y Fl(thread)27 b(will)d(install)h(ob)5 b(jects)27 b(from)g(the)g(MOB)g
(to)h(the)f(disk.)38 b(W)-8 b(e)28 b(refer)e(to)i(this)e(as)h
Ff(obje)-5 b(ct)30 b(instal)5 b(lation)p Fl(.)150 4567
y(T)-8 b(o)29 b(install)d(an)i(ob)5 b(ject,)30 b(the)e(\015usher)f
(\014rst)g(fetc)m(hes)i(the)g(segmen)m(t)g(where)f(the)g(ob)5
b(ject)29 b(is)f(lo)s(cated.)40 b(If)28 b(the)150 4736
y(segmen)m(t)36 b(is)d(not)i(in)e(the)h(cac)m(he,)j(it)d(has)h(to)g(b)s
(e)e(read)i(from)f(the)g(disk.)51 b(The)34 b(ob)5 b(ject)36
b(is)d(then)h(installed)150 4905 y(in)m(to)d(the)g(segmen)m(t)i(and)d
(the)h(segmen)m(t)h(is)f(written)f(bac)m(k)i(to)f(disk.)42
b(The)30 b(extra)i(disk)e(reads)g(asso)s(ciated)150 5075
y(with)j(ob)5 b(ject)34 b(installation)e(are)i(referred)f(to)i(as)f
Ff(instal)5 b(lation)38 b(r)-5 b(e)g(ads)26 b Fl([22)r(].)51
b(Mo)s(di\014ed)32 b(ob)5 b(jects)35 b(lo)s(cated)150
5244 y(in)i(the)i(same)h(segmen)m(t)g(are)f(installed)d(together)41
b(to)e(reduce)g(disk)e(I/Os.)66 b(Once)39 b(the)g(mo)s(di\014cations)
1905 5649 y(19)p eop
%%Page: 20 20
20 19 bop 150 83 a Fl(ha)m(v)m(e)37 b(b)s(een)f(written)f(to)h(the)h
(disk,)f(they)g(are)h(remo)m(v)m(ed)g(from)e(the)h(MOB)h(and)e(the)h
(transaction)h(log.)150 252 y(The)i(\015usher)e(thread)i(runs)f(indep)s
(enden)m(tly)e(of)j(clien)m(t)g(activities.)66 b(Th)m(us)38
b(ob)5 b(ject)40 b(installation)d(do)s(es)150 422 y(not)e(dela)m(y)f
(fetc)m(hes)i(or)e(commits)g(unless)f(the)h(MOB)h(or)g(the)f(log)h
(\014lls)d(up)h(completely)h(with)f(p)s(ending)150 591
y(mo)s(di\014cations.)150 893 y Fm(2.2.7)112 b(T)-9 b(ransactions)150
1121 y Fl(T)h(o)33 b(commit)f(a)g(transaction,)h(an)f(FE)h(sends)e(the)
h(transaction)g(information)f(to)i(one)f(of)h(the)f(ORs)g(and)150
1290 y(w)m(aits)37 b(for)g(a)h(decision.)60 b(The)37
b(OR)g(that)h(receiv)m(es)g(this)e(commit)h(request)h(is)e(called)g
(the)i Ff(c)-5 b(o)g(or)g(dinator)150 1459 y Fl(of)41
b(the)g(transaction.)72 b(All)39 b(ORs)i(a\013ected)h(b)m(y)f(this)e
(transaction,)44 b(including)37 b(the)k(co)s(ordinator,)j(are)150
1629 y(referred)30 b(to)h(as)f Ff(p)-5 b(articip)g(ants)p
Fl(.)291 1798 y(Up)s(on)30 b(receiving)g(a)i(commit)f(request,)g(the)g
(co)s(ordinator)g(executes)h(a)f(t)m(w)m(o-phase)h(commit)f(proto-)150
1968 y(col)25 b([1)q(,)g(12)q(].)45 b(\(The)32 b(t)m(w)m(o)h(phases)f
(can)g(b)s(e)f(com)m(bined)h(to)g(one)h(if)d(the)j(transaction)f(has)f
(used)h(ob)5 b(jects)32 b(at)150 2137 y(only)i(one)g(OR.\))h(In)f(the)g
(\014rst)g(phase)g(of)h(the)f(commit)h(proto)s(col,)h(the)e(co)s
(ordinator)g(sends)g(a)h(prepare)150 2306 y(message)g(to)f(eac)m(h)h
(participan)m(t.)50 b(A)34 b(prepare)f(message)h(includes)e(the)i(new)f
(states)i(of)e(b)s(oth)g(new)h(and)150 2476 y(mo)s(di\014ed)g(ob)5
b(jects)37 b(b)s(elonging)e(to)i(a)f(particular)f(participan)m(t.)58
b(Eac)m(h)37 b(participan)m(t)e(decides)h(whether)150
2645 y(it)k(w)m(ould)g(commit)h(the)g(transaction)f(and)h(sends)e(the)i
(decision)f(\()p Fd(commit)f Fl(or)i Fd(abort)p Fl(\))f(bac)m(k)h(to)h
(the)150 2814 y(co)s(ordinator.)53 b(Before)35 b(replying)e(to)i(the)g
(co)s(ordinator,)h(eac)m(h)f(participan)m(t)f(logs)g(a)h
Ff(pr)-5 b(ep)g(ar)g(e)38 b Fl(record)c(in)150 2984 y(its)h(stable)g
(transaction)g(log.)55 b(The)35 b(prepare)g(record)g(con)m(tains)g(the)
h(curren)m(t)f(states)h(of)f(the)h(new)f(and)150 3153
y(mo)s(di\014ed)28 b(ob)5 b(jects)31 b(for)f(that)h(transaction)g(at)g
(that)g(participan)m(t.)291 3322 y(If)25 b(the)h(co)s(ordinator)f
(receiv)m(es)h(a)g Fd(commit)e Fl(decision)g(from)i(all)e(participan)m
(ts,)i(it)f(commits)g(the)h(trans-)150 3492 y(action.)50
b(Otherwise,)34 b(it)f(ab)s(orts)g(the)h(transaction.)50
b(Then)32 b(the)i(co)s(ordinator)f(informs)f(the)i(FE)f(ab)s(out)150
3661 y(the)25 b(decision.)38 b(In)24 b(the)h(second)g(phase)g(of)g(the)
h(commit)f(proto)s(col,)h(the)f(co)s(ordinator)g(noti\014es)f(all)g
(partic-)150 3831 y(ipan)m(ts)30 b(ab)s(out)h(its)f(decision.)41
b(Eac)m(h)32 b(participan)m(t)e(logs)g(either)h(a)g Ff(c)-5
b(ommit)32 b Fl(or)f Ff(ab)-5 b(ort)33 b Fl(record)d(dep)s(ending)150
4000 y(on)e(the)g(outcome)h(of)g(the)f(transaction.)40
b(If)28 b(an)g(ab)s(ort)f(record)h(is)f(presen)m(t,)i(the)f(corresp)s
(onding)f(prepare)150 4169 y(record)35 b(will)e(b)s(e)i(ignored.)56
b(Otherwise,)35 b(the)h(mo)s(di\014cations)e(in)g(the)i(prepare)f
(record)g(are)h(en)m(tered)g(in)150 4339 y(the)31 b(MOB.)291
4508 y(If)24 b(an)g(FE)h(is)e(noti\014ed)h(that)h(the)f(curren)m(t)g
(transaction)h(has)f(committed,)i(it)e(discards)f(the)h
Ff(old)i Fl(states)150 4677 y(of)32 b(v)m(olatile)g(ob)5
b(jects)33 b(that)f(ha)m(v)m(e)h(b)s(een)e(mo)s(di\014ed)f(during)g
(the)i(transaction)g(from)g(the)g(cac)m(he.)47 b(On)31
b(the)150 4847 y(other)43 b(hand,)j(if)c(the)h(transaction)g(has)g(ab)s
(orted,)j(it)c(discards)g(the)h(p)s(ersisten)m(t)f(ob)5
b(jects)44 b(that)f(w)m(ere)150 5016 y(mo)s(di\014ed)24
b(b)m(y)i(that)h(transaction)f(and)f(restores)i(the)f(original)e
(states)k(of)e(the)g(v)m(olatile)g(ob)5 b(jects.)40 b(V)-8
b(olatile)150 5186 y(ob)5 b(jects)39 b(that)g(w)m(ere)f(created)i
(during)c(the)i(transaction)g(are)h(treated)g(di\013eren)m(tly)-8
b(.)64 b(The)37 b(creation)i(of)150 5355 y(these)f(ob)5
b(jects)39 b(is)d(not)i(undone.)62 b(Instead)38 b(they)g(are)g
(restored)g(to)g(their)f(initial)e(states)k(at)f(creation.)1905
5649 y(20)p eop
%%Page: 21 21
21 20 bop 150 83 a Fl(This)32 b(is)h(b)s(ecause)h(Thor)f(do)s(es)h(not)
g(in)m(v)-5 b(alidate)33 b(the)h(handles)e(that)j(ha)m(v)m(e)g(already)
f(b)s(een)f(giv)m(en)h(to)h(the)150 252 y(clien)m(ts.)62
b(These)37 b(handles)f(ma)m(y)i(p)s(oin)m(t)f(to)h(new)g(v)m(olatile)f
(ob)5 b(jects)38 b(created)h(during)c(this)i(transaction)150
422 y(and)30 b(the)g(clien)m(ts)g(ma)m(y)h(con)m(tin)m(ue)g(to)g(use)f
(them)g(after)h(the)g(transaction)f(has)g(ab)s(orted.)291
591 y(Thor)43 b(uses)h(an)g(optimistic)f(concurrency)g(con)m(trol)i
(tec)m(hnique)25 b([2].)83 b(As)44 b(a)g(result,)j(the)d(ob)5
b(jects)150 760 y(cac)m(hed)38 b(at)g(the)f(FEs)f(migh)m(t)h(b)s(e)f
Ff(stale)i Fl(due)e(to)i(committed)f(transactions)g(of)g(other)g(clien)
m(ts.)59 b(T)-8 b(o)38 b(re-)150 930 y(duce)31 b(unnecessary)g(ab)s
(orts,)h(an)g(OR)f(noti\014es)g(FEs)h(ab)s(out)f(stale)h(ob)5
b(jects.)45 b(Eac)m(h)33 b(OR)e(k)m(eeps)h(trac)m(k)h(of)150
1099 y(information)g(ab)s(out)h(the)h(ob)5 b(jects)35
b(that)g(ha)m(v)m(e)g(b)s(een)f(cac)m(hed)i(at)f(di\013eren)m(t)f(FEs)g
(in)f(a)i(data)g(structure)150 1269 y(called)i Ff(FE)i(table)p
Fl(.)62 b(After)37 b(an)h(OR)f(has)g(installed)e(a)j(transaction's)f
(ob)5 b(ject)38 b(mo)s(di\014cations,)g(it)f(sends)150
1438 y Ff(invalidation)e(messages)d Fl(to)g(FEs)f(that)g(ma)m(y)h(ha)m
(v)m(e)g(cac)m(hed)g(these)f(ob)5 b(jects)32 b(using)e(the)h
(information)e(in)150 1607 y(FE)k(tables.)47 b(Up)s(on)32
b(receiving)g(an)g(in)m(v)-5 b(alidation)30 b(message)k(for)f(ob)5
b(ject)33 b Ff(x)p Fl(,)h(an)e(FE)h(ab)s(orts)f(the)h(curren)m(t)150
1777 y(transaction)25 b(if)f(its)h(application)e(has)i(read)g(or)g
(written)f Ff(x)p Fl(.)39 b(It)25 b(also)g(discards)e
Ff(x)p Fl('s)i(cop)m(y)h(in)e(the)h(FE)g(cac)m(he.)150
1946 y(An)m(y)k(attempt)g(to)g(access)h(the)f(ob)5 b(ject)29
b Ff(x)g Fl(later)f(will)e(result)i(in)f(a)i(fetc)m(h)g(request)f(to)i
(the)e(OR)g(con)m(taining)150 2115 y(the)j(ob)5 b(ject)31
b Ff(x)p Fl(.)1905 5649 y(21)p eop
%%Page: 22 22
22 21 bop 150 809 a Fg(Chapter)66 b(3)150 1349 y Fj(Ov)-7
b(erview)80 b(of)e(Garbage)i(Collection)150 1851 y Fl(This)33
b(c)m(hapter)i(brie\015y)e(in)m(tro)s(duces)g(the)i(concepts)g(and)f
(design)g(of)h(our)f(garbage)i(collection)e(sc)m(heme.)150
2020 y(More)d(details)e(of)i(the)g(sc)m(heme)g(will)c(b)s(e)j
(discussed)f(in)g(later)h(c)m(hapters.)291 2189 y(Our)22
b(sc)m(heme)h(uses)f(a)h(partitioned)e(approac)m(h:)37
b(the)23 b(segmen)m(ts)h(at)f(an)g(OR)f(are)h(divided)d(in)m(to)j
(disjoin)m(t)150 2359 y(partitions.)54 b(P)m(artitions)35
b(are)g(collected)h(indep)s(enden)m(tly)c(and)j(only)f(one)i(partition)
e(is)g(collected)i(at)g(a)150 2528 y(time.)78 b(The)42
b(garbage)i(collector)g(runs)d(as)i(a)g(lo)m(w-priorit)m(y)f(thread)g
(in)g(the)h(system.)78 b(It)43 b(main)m(tains)150 2697
y(transaction)27 b(seman)m(tics)g(and)g(surviv)m(es)f(serv)m(er)h
(crashes.)40 b(Clien)m(t)26 b(applications)f(can)i(con)m(tin)m(ue)g(to)
h(fetc)m(h)150 2867 y(ob)5 b(jects)37 b(from)f(the)h(serv)m(er)g(and)f
(commit)g(transactions)h(with)e(no)h(extra)i(o)m(v)m(erhead)f(during)e
(GC)h(\(see)150 3036 y(Section)25 b(3.4\).)42 b(Our)28
b(collector)i(uses)f(a)h(cop)m(ying)f(algorithm:)40 b(it)29
b(creates)i(a)f(new)f(cop)m(y)h(of)g(the)f(partition)150
3205 y(b)s(eing)k(collected)i(and)f(copies)h(all)e(its)i(reac)m(hable)g
(ob)5 b(jects)35 b(in)m(to)g(it.)53 b(Ob)5 b(jects)35
b(are)g(compacted)g(within)150 3375 y(eac)m(h)f(segmen)m(t)g(of)e(the)h
(new)f(partition)g(as)g(they)h(are)g(copied.)47 b(Ho)m(w)m(ev)m(er,)36
b(the)d(collector)g(nev)m(er)g(mo)m(v)m(es)150 3544 y(ob)5
b(jects)31 b(from)f(one)h(segmen)m(t)g(to)g(another)g(within)d(the)i
(partition.)291 3714 y(The)g(collector)h(only)e(reclaims)h(storage)i
(for)e(ob)5 b(jects)31 b(that)g(are)g(unreac)m(hable)f(at)h(the)f
Ff(b)-5 b(e)g(ginning)31 b Fl(of)150 3883 y(GC.)d(An)g(ob)5
b(ject)29 b(that)f(b)s(ecomes)g(garbage)i(during)25 b(GC)j(is)f(not)i
(collected.)40 b(It)28 b(will)d(b)s(e)j(collected)g(at)h(the)150
4052 y(next)i(GC)f(cycle.)291 4222 y(Ob)5 b(ject)43 b(installation)e
(\(Section)25 b(2.2.6\))45 b(is)d Ff(not)h Fl(allo)m(w)m(ed)g(during)e
(the)i(en)m(tire)f(GC.)h(This)e(can)j(b)s(e)150 4391
y(done)32 b(b)m(y)f(susp)s(ending)e(the)j(\015usher)e(thread.)45
b(Ho)m(w)m(ev)m(er,)35 b(the)d(collector)g(is)f(allo)m(w)m(ed)h(to)g
(install)e(ob)5 b(jects)150 4560 y(from)39 b(the)h(MOB)f(to)i(the)e
(segmen)m(ts)i(of)e(a)h(partition)e(b)s(efore)h(and)g(after)h
(collecting)f(that)h(partition.)150 4730 y(Susp)s(ending)27
b(the)k(\015usher)d(thread)j(during)d(GC)i(will)e(not)j(ha)m(v)m(e)g(a)
g(signi\014can)m(t)f(impact)g(on)g(the)h(latency)150
4899 y(observ)m(ed)k(b)m(y)f(clien)m(ts)g(b)s(ecause)g(it)g(do)s(es)g
(not)h(lie)e(in)g(the)i(critical)e(path)h(of)h(clien)m(t)f(op)s
(erations)f(\(unless)150 5068 y(the)e(log)f(or)g(MOB)h(is)f(full\).)291
5238 y(The)h(garbage)h(collection)f(of)g(a)g(partition)f(p)h(pro)s
(ceeds)f(as)i(follo)m(ws:)41 b(The)30 b(collector)i(\014rst)e(brings)f
(p)1905 5649 y(22)p eop
%%Page: 23 23
23 22 bop 150 83 a Fl(up-to-date)30 b(b)m(y)e(cop)m(ying)h(ob)5
b(jects)29 b(for)f(p)g(from)g(the)h(MOB.)g(Then)f(it)g(creates)i(a)f
(new,)f(empt)m(y)h(partition)150 252 y(and)38 b(obtains)f(the)h(ro)s
(ot)h(set)g(for)f(GC)g(of)g(p.)63 b(It)39 b(tra)m(v)m(erses)g(and)f
(copies)g(all)f(ob)5 b(jects)39 b(reac)m(hable)f(from)150
422 y(the)32 b(ro)s(ot)g(set)h(to)f(the)g(new)f(partition.)44
b(After)32 b(the)g(tra)m(v)m(ersal,)i(the)e(collector)g(installs)d(an)m
(y)k(ob)5 b(jects)32 b(for)150 591 y(p)g(that)g(ha)m(v)m(e)i(b)s(een)d
(en)m(tered)i(in)e(the)h(MOB)h(during)d(GC)i(due)g(to)h(committed)f
(transactions.)46 b(Finally)-8 b(,)150 760 y(the)36 b(collector)h
(atomically)e(replaces)h(the)g(original)f(partition)f(with)h(the)h(new)
g(one.)58 b(It)36 b(also)g(up)s(dates)150 930 y(relev)-5
b(an)m(t)31 b(in)m(ter-partition)e(references)h(information)f(\(see)i
(Section)25 b(3.1.1\).)150 1291 y Fr(3.1)137 b(GC)46
b(Ro)t(ots)150 1550 y Fl(What)23 b(are)g(the)f(ro)s(ots)h(for)f(GC)g
(of)g(a)h(partition)e(p?)37 b(A)m(t)23 b(the)g(minim)m(um,)e(ob)5
b(jects)23 b(in)e(p)h(that)h(are)f(accessible)150 1720
y(from)j(the)i(OR)e(ro)s(ot)h(or)g(clien)m(t)g(programs)f(need)h(to)h
(b)s(e)e(protected)i(against)f(collection.)39 b(Therefore,)27
b(the)150 1889 y(ro)s(ot)f(set)g(includes)d(the)j(OR)f(ro)s(ot)h(and)f
(all)g(references)h(kno)m(wn)f(at)h(eac)m(h)h(FE.)f(W)-8
b(e)27 b(will)c(see)j(in)e(Chapter)h(4)150 2058 y(that)40
b(only)e(a)i(subset)f(of)g(these)h(FE)f(references)h(needs)e(to)i(b)s
(e)f(included)e(as)i(ro)s(ots.)68 b(This)37 b(subset)i(of)150
2228 y(references)31 b(is)e(called)h(the)g Ff(volatile)k(r)-5
b(o)g(ots)33 b Fl(of)d(FEs.)291 2397 y(The)d(log)g(in)f(an)h(OR)g(con)m
(tains)g(new)g(and)f(mo)s(di\014ed)f(ob)5 b(jects)28
b(of)f(committed)h(or)f(prepared)f(transac-)150 2567
y(tions.)45 b(These)32 b(ob)5 b(jects)33 b(ha)m(v)m(e)g(not)f(b)s(een)g
(installed)e(in)m(to)i(the)g(partitions)e(y)m(et)k(and)d(will)f(not)i
(b)s(e)f(traced)150 2736 y(directly)j(b)m(y)h(the)g(collector.)55
b(Therefore,)36 b(all)e(references)h(in)f(the)h(prepare)g(records)f(of)
i(prepared)e(and)150 2905 y(committed)23 b(transactions)g(in)f(the)h
(log)g(ha)m(v)m(e)i(to)e(b)s(e)g(part)g(of)g(the)g(ro)s(ot)h(set.)38
b(Prepare)23 b(records)g(of)g(ab)s(orted)150 3075 y(transactions)30
b(can)h(b)s(e)f(ignored.)291 3244 y(T)-8 b(o)35 b(protect)h(ob)5
b(jects)35 b(referenced)g(b)m(y)g(remote)g(ORs,)h(the)f(ro)s(ot)g(set)g
(also)g(includes)d(the)j(en)m(tries)f(in)150 3413 y(OR)c(tables,)g
(whic)m(h)f(record)i(a)f(conserv)-5 b(ativ)m(e)32 b(estimate)f(of)g
(incoming)d(references)j(from)f(other)h(ORs.)291 3583
y(In)24 b(the)h(ro)s(ot)f(en)m(tities)h(describ)s(ed)d(ab)s(o)m(v)m(e,)
27 b(the)e(collector)g(can)f(safely)g(ignore)h(the)f(ro)s(ots)h(that)g
(are)g(not)150 3752 y(p)s(oin)m(ting)32 b(directly)h(in)m(to)h
(partition)f(p.)51 b(Ho)m(w)m(ev)m(er,)38 b(for)c(eac)m(h)h(partition)e
(p,)h(the)h(OR)e(has)h(to)h(main)m(tain)150 3922 y(a)h(list)e(of)i
(incoming)f(ob)5 b(ject)36 b(references)g(from)f(other)h(partitions)f
(to)h(partition)f(p.)56 b(W)-8 b(e)37 b(call)e(this)f(list)150
4091 y(an)d Ff(inter-p)-5 b(artition)36 b(r)-5 b(efer)g(enc)g(e)34
b(list)g(\(IRL\))p Fl(.)f(The)e(en)m(tries)g(in)f(the)i(IRL)f(of)g
(partition)f(p)h(are)h(additional)150 4260 y(ro)s(ots)f(required)d(for)
i(GC)h(of)f(p.)150 4562 y Fm(3.1.1)112 b(In)m(ter-P)m(artition)37
b(Reference)h(Lists)150 4790 y Fl(T)-8 b(o)27 b(k)m(eep)g(trac)m(k)h
(of)f(in)m(ter-partition)e(references,)i(w)m(e)g(use)g(a)f
(coarse-grain)i(reference)f(coun)m(ting)f(sc)m(heme.)150
4959 y(The)h(reference)i(coun)m(t)f(of)g(an)g(ob)5 b(ject)28
b Ff(o)h Fl(is)e(the)h(n)m(um)m(b)s(er)e(of)i(other)g(partitions)f(con)
m(taining)g(reference\(s\))150 5129 y(to)k Ff(o)p Fl(.)42
b(A)31 b(partition)e(p)h(con)m(tributes)g(one)h(to)g(the)g(reference)g
(coun)m(t)g(of)g(an)f(ob)5 b(ject)32 b Ff(o)p Fl(,)f(where)f
Ff(o)h Fl(is)e(not)i(in)150 5298 y(p,)f(if)f(it)h(con)m(tains)h(at)g
(least)g(one)f(reference)h(to)g Ff(o)p Fl(.)41 b(Otherwise,)30
b(it)g(con)m(tributes)g(zero.)1905 5649 y(23)p eop
%%Page: 24 24
24 23 bop 291 83 a Fl(The)33 b(IRL)f(of)i(eac)m(h)g(partition)e
(consists)h(of)g(an)g Ff(inlist)h Fl(and)e(an)h Ff(outlist)p
Fl(.)50 b(The)33 b(inlist)d(of)k(a)f(partition)150 252
y(p)e(con)m(tains)i(reference)f(coun)m(ts)h(for)e(all)g(ob)5
b(jects)33 b(in)e(p)g(that)i(are)f(accessible)g(from)f(other)i
(partitions)d(at)150 422 y(the)38 b(same)g(OR.)g(The)f(outlist)g(of)g
(p)h(is)e(a)j(set)f(of)g(outgoing)g(references)g(from)f(p)g(to)i(ob)5
b(jects)38 b(in)f(other)150 591 y(partitions)28 b(in)h(the)h(OR.)g(The)
f(states)i(of)f(the)g(inlists)d(and)j(outlists)e(only)h(re\015ect)i
(the)f(states)h(of)f(ob)5 b(jects)150 760 y(in)31 b(the)h(partitions.)
44 b(They)31 b(do)h(not)g(tak)m(e)i(in)m(to)e(accoun)m(t)h(the)f(new)g
(and)f(mo)s(di\014ed)f(v)m(ersions)h(of)h(ob)5 b(jects)150
930 y(in)26 b(the)i(MOB.)g(This)d(do)s(es)i(not)h(violate)g(safet)m(y)g
(b)s(ecause)g(ob)5 b(jects)28 b(in)e(the)i(MOB)f(are)h(also)g(con)m
(tained)f(in)150 1099 y(the)k(prepare)e(records)h(in)g(the)g(log,)h
(whic)m(h)e(are)i(part)f(of)g(the)h(ro)s(ot)g(set.)291
1269 y(Eac)m(h)37 b(en)m(try)f(in)e(an)i(inlist)e(consists)h(of)h(an)g
(oref)g(and)f(a)i(p)s(ositiv)m(e)d(reference)j(coun)m(t.)58
b(Recall)35 b(that)150 1438 y(an)44 b(oref)g(is)f(an)h(unique)e(ob)5
b(ject)45 b(iden)m(ti\014er)e(within)e(an)j(OR.)g(The)g(oref)g(iden)m
(ti\014es)e(an)i(ob)5 b(ject)45 b(that)150 1607 y(is)34
b(referenced)h(b)m(y)h(other)f(partitions)f(and)h(the)g(reference)h
(coun)m(t)g(is)e(the)h(n)m(um)m(b)s(er)f(of)i(partitions)d(that)150
1777 y(con)m(tains)22 b(at)h(least)g(one)f(reference)h(to)g(this)e(ob)5
b(ject.)39 b(When)22 b(the)g(reference)g(coun)m(t)h(of)g(an)f(ob)5
b(ject)23 b(b)s(ecomes)150 1946 y(zero,)47 b(it)c(means)g(no)g(other)h
(partitions)e(ha)m(v)m(e)i(references)g(to)f(the)h(ob)5
b(ject)44 b(and)f(the)g(ob)5 b(ject)44 b(can)g(b)s(e)150
2115 y(collected)35 b(if)f(there)h(is)f(no)h(other)g(reference)g(to)h
(it.)54 b(Therefore,)36 b(the)f(inlist)d(of)j(p)g(pro)m(vides)e
Ff(additional)150 2285 y Fl(ro)s(ots)c(needed)f(to)i(protect)f(ob)5
b(jects)30 b(referenced)f(b)m(y)f(other)h(partitions.)39
b(An)m(y)29 b(oref)f(in)g(the)h(inlist)d(of)j(p)f(is)150
2454 y(an)i(additional)f(ro)s(ot)h(for)g(GC)h(of)f(p.)291
2623 y(The)e(outlist)f(is)g(a)h(set)h(of)f(orefs)g(of)g(ob)5
b(jects)29 b(in)d(other)j(partitions.)38 b(The)28 b(presence)g(of)g(an)
g(oref)g(in)f(the)150 2793 y(outlist)h(of)i(a)g(partition)e(p)h
(indicates)g(that)h(p)f(con)m(tains)g(at)i(least)e(one)h(reference)g
(to)g(the)g(ob)5 b(ject)30 b(named)150 2962 y(b)m(y)f(oref)h(in)e
(another)i(partition.)39 b(The)29 b(outlists)g(are)h(not)g(used)e(as)i
(GC)g(ro)s(ots.)40 b(Instead,)30 b(they)g(are)g(used)150
3132 y(to)h(compute)g(the)f(correct)i(reference)f(coun)m(ts)g(for)f
(inlists)d(of)k(other)g(partitions.)291 3301 y(Figure)25
b(3-1)36 b(illustrates)e(ho)m(w)h(the)h(IRLs)e(re\015ect)i(the)g
(information)e(ab)s(out)h(in)m(ter-partition)f(refer-)150
3470 y(ences)h(in)e(partitions.)50 b(Note)36 b(that)f(in)d(partition)h
(q,)j(ev)m(en)e(though)g(the)h(ob)5 b(ject)35 b Ff(C)f
Fl(has)g(t)m(w)m(o)h(incoming)150 3640 y(references)26
b(from)g(another)g(partition,)g(the)g(inlist)e(en)m(try)i(for)g
Ff(C)g Fl(still)e(has)h(a)i(reference)f(coun)m(t)h(of)f(1.)40
b(This)150 3809 y(is)29 b(b)s(ecause)i(the)f(t)m(w)m(o)i(incoming)d
(references)i(are)f(from)g(the)h(same)g(partition.)291
3978 y(The)k(inlists)d(and)j(outlists)f(are)h(main)m(tained)f(p)s
(ersisten)m(tly)g(b)s(ecause)h(they)g(are)h(to)s(o)g(exp)s(ensiv)m(e)e
(to)150 4148 y(recompute)e(after)h(crashes.)45 b(They)31
b(ha)m(v)m(e)i(to)g(b)s(e)e(up)s(dated)g(whenev)m(er)h(a)g(partition)f
(is)g(mo)s(di\014ed.)43 b(This)150 4317 y(happ)s(ens)33
b(after)i(ob)5 b(ject)36 b(installation)c(or)j(garbage)h(collection.)53
b(In)34 b(particular,)h(new)f(en)m(tries)g(ha)m(v)m(e)i(to)150
4487 y(b)s(e)c(added)f(to)i(the)g(inlists)c(and)j(outlists)f(after)i
(ob)5 b(ject)33 b(installation)d(to)j(preserv)m(e)g(safet)m(y)g(b)s
(ecause)g(the)150 4656 y(installed)41 b(ob)5 b(jects)44
b(ma)m(y)g(con)m(tain)g(new)f(in)m(ter-partition)f(references.)80
b(Section)25 b(4.1)44 b(and)f(Chapter)25 b(5)150 4825
y(pro)m(vide)k(more)i(details)e(on)i(IRLs)e(and)h(ho)m(w)h(they)f(are)h
(up)s(dated.)1905 5649 y(24)p eop
%%Page: 25 25
25 24 bop 1212 1758 a @beginspecial 156 @llx 375 @lly
345 @urx 584 @ury 1800 @rwi @setspecial
%%BeginDocument: Idraw/partitions.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 211.778 340.467 ] concat
108 479 22 22 Elli
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.25843 0 0 1 154.562 296 ] concat
53 357 141 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 -30.7333 296 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 200.778 407.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 355.778 407.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 354.778 329.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 309.778 373.467 ] concat
108 479 22 22 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 296 ] concat
109 474 183 446 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 296 ] concat
120 406 186 430 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 191 296 ] concat
233 485
157 509
102 487
3 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 277.5 773 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 289.5 706 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 387 739.5 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 433.5 774 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 433 695 ] concat
[
(E)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 253 609 ] concat
[
(Inlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 253 587 ] concat
[
(\(A,1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 253 564 ] concat
[
(Outlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 392 609 ] concat
[
(Inlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 392 563 ] concat
[
(Outlist)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 191 269 ] concat
53 257 119 346 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.748879 0 0 1 235.22 269 ] concat
196 257 307 346 Rect
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 50 252 ] concat
259 446 368 436 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 206.5 365 ] concat
75 410 207 410 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.538217 0 0 0.5 211.424 365 ] concat
317 410 473 410 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 393 587 ] concat
[
(\(C,1\) \(E,1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 255 542 ] concat
[
(C, E)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 393 542 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 244 637 ] concat
[
(Partition p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 387 637 ] concat
[
(Partition q)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 996 1954 a Fl(Figure)30 b(3-1:)42 b(In)m(ter-partition)29
b(reference)i(lists)e(\(IRLs\))150 2310 y Fr(3.2)137
b(Steps)47 b(for)f(Garbage)f(Collection)150 2569 y Fl(The)30
b(garbage)i(collection)e(cycle)g(of)h(a)g(partition)e(p)g(consists)h
(of)h(\014v)m(e)f(steps:)150 2793 y Fk(Step)35 b(1:)46
b(Install)35 b(ob)6 b(jects)35 b(for)g(p)g(from)f(MOB.)81
b Fl(When)24 b(an)h(OR)f(is)g(ab)s(out)g(to)i(collect)f(a)g(partition)
377 2962 y(p,)36 b(it)f(fetc)m(hes)h(the)f(segmen)m(ts)i(of)e
(partition)f(p)g(as)h(w)m(ell)g(as)g(the)g(inlist)e(and)h(outlist)g(of)
i(p.)54 b(Then)377 3132 y(it)40 b(installs)e(ob)5 b(jects)42
b(for)e(p)g(from)g(the)h(MOB)f(to)i(mak)m(e)f(the)g(partition)e
(up-to-date.)72 b(Ob)5 b(jects)377 3301 y(installed)26
b(to)j(p)f(are)h(not)f(written)g(to)h(disk)e(immediately)f(and)i(they)g
(are)h(not)g(remo)m(v)m(ed)g(from)f(the)377 3470 y(MOB)33
b(un)m(til)d(the)j(end)e(of)h(GC.)h(Normally)-8 b(,)32
b(when)f(ob)5 b(jects)33 b(are)f(installed)e(from)i(the)g(MOB)h(to)g(a)
377 3640 y(partition,)g(new)g(en)m(tries)h(ha)m(v)m(e)g(to)h(b)s(e)d
(added)h(to)h(IRLs)f(if)g(new)g(in)m(ter-partition)f(references)i(are)
377 3809 y(encoun)m(tered)29 b(in)e(the)i(ob)5 b(jects)29
b(installed.)38 b(Ho)m(w)m(ev)m(er,)32 b(in)27 b(this)g(case)j(the)e
(up)s(date)g(of)h(IRLs)f(can)h(b)s(e)377 3978 y(dela)m(y)m(ed)h(b)s
(ecause)e(the)i(collector)f(will)d(scan)j(the)g(whole)f(partition)g
(for)h(liv)m(e)f(ob)5 b(jects)29 b(during)e(GC)377 4148
y(and)k(all)f(new)g(in)m(ter-partition)g(references)h(will)d(b)s(e)j
(disco)m(v)m(ered)g(during)e(the)i(scanning)f(pro)s(cess.)377
4317 y(Therefore,)36 b(the)e(up)s(date)g(of)g(IRLs)g(can)h(b)s(e)e
(done)h(at)h(the)g(end)f(of)g(GC.)h(This)d(do)s(es)i(not)h(violate)377
4487 y(safet)m(y)d(b)s(ecause)e(no)h(other)f(partitions)f(can)i(b)s(e)e
(collected)i(at)g(the)g(same)g(time.)150 4723 y Fk(Step)k(2:)46
b(Obtain)34 b(the)h(GC)f(ro)s(ots.)93 b Fl(T)-8 b(o)21
b(collect)f(a)h(partition)e(p,)j(the)e(ro)s(ot)h(set)g(includes)d(the)i
(v)m(olatile)377 4892 y(ro)s(ot)37 b(sets)f(in)f(connected)i(FEs)f(and)
g(the)g Ff(p)-5 b(ersistent)39 b(r)-5 b(o)g(ots)p Fl(,)41
b(whic)m(h)34 b(consists)i(of)g(the)h(OR)e(ro)s(ot,)377
5061 y(OR)i(tables,)i(ob)5 b(jects)38 b(in)e(prepare)h(records,)h(and)f
(the)h(inlist)c(of)k(p.)60 b(Only)36 b(the)h(ro)s(ots)h(that)g(are)377
5231 y(p)s(oin)m(ting)33 b(in)m(to)h(partition)f(p)h(are)h(of)f(in)m
(terest.)53 b(The)34 b(ro)s(ot)h(generation)f(pro)s(cess)g(is)g
(incremen)m(tal)377 5400 y(and)40 b(runs)e(concurren)m(tly)i(with)e
(clien)m(t)i(programs.)69 b(During)39 b(ro)s(ot)h(generation,)j(the)d
(collector)1905 5649 y(25)p eop
%%Page: 26 26
26 25 bop 377 83 a Fl(do)s(es)36 b(not)h(allo)m(w)f(en)m(tries)g(to)h
(b)s(e)e(remo)m(v)m(ed)j(from)e(p)s(ersisten)m(t)f(ro)s(ots.)59
b(It)36 b(sends)f(a)i(ro)s(ot-request)377 252 y(message)32
b(to)f(eac)m(h)g(connected)h(FE.)e(It)h(adds)f(all)f(ro)s(ots)h
(returned)g(b)m(y)g(the)g(FEs)h(to)g(the)f(ro)s(ot)h(set.)377
422 y(Then)k(it)f(adds)h(all)f(en)m(tries)h(in)f(the)i(p)s(ersisten)m
(t)e(ro)s(ots)i(to)g(the)f(ro)s(ot)h(set.)56 b(This)34
b(is)g(describ)s(ed)f(in)377 591 y(more)e(detail)e(in)g(Chapter)c(4.)
150 835 y Fk(Step)35 b(3:)46 b(T)-9 b(ra)m(v)m(erse)36
b(and)e(cop)m(y)i(liv)m(e)f(ob)6 b(jects.)93 b Fl(After)26
b(obtaining)e(the)i(ro)s(ot)g(set,)h(the)f(OR)g(creates)377
1005 y(a)39 b(new,)h(empt)m(y)f(partition)e(in)g(v)m(olatile)h(memory)
-8 b(,)40 b(whic)m(h)d(is)h(referred)f(to)i(as)g(the)f
Ff(to-sp)-5 b(ac)g(e)40 b Fl(for)377 1174 y(cop)m(ying)45
b(GC.)g(The)f(original)f(partition)g(b)s(eing)h(collected)h(is)f
(called)f(the)i Ff(fr)-5 b(om-sp)g(ac)g(e)p Fl(.)86 b(The)377
1343 y(collector)35 b(copies)f(reac)m(hable)g(ob)5 b(jects)35
b(from)f(the)g(from-space)h(to)g(the)f(to-space.)54 b(It)34
b(also)g(scans)377 1513 y(the)43 b(ob)5 b(jects)44 b(and)e(records)h
(an)m(y)g(in)m(ter-partition)e(references)i(in)f(them)h(to)g(construct)
g(a)g(new)377 1682 y(outlist.)71 b(The)40 b(indirection)e(table)j(in)e
(the)i(segmen)m(ts)h(of)f(the)g(to-space)h(partition)e(allo)m(ws)g(the)
377 1851 y(collector)c(to)h(\014nd)d(out)h(easily)g(whether)g(an)g(ob)5
b(ject)37 b(has)e(b)s(een)g(copied.)55 b(A)36 b(mapping)e(exists)h(if)
377 2021 y(and)30 b(only)g(if)f(an)h(ob)5 b(ject)31 b(has)g(b)s(een)e
(copied.)150 2265 y Fk(Step)35 b(4:)46 b(Install)35 b(ob)6
b(jects)35 b(for)g(p)g(from)f(MOB.)81 b Fl(During)28
b(GC,)i(clien)m(ts)f(migh)m(t)g(commit)h(transac-)377
2434 y(tions)37 b(that)h(cause)g(new)f(or)g(mo)s(di\014ed)f(ob)5
b(jects)38 b(for)f(p)g(to)h(b)s(e)f(en)m(tered)h(in)m(to)f(the)h(MOB.)g
(These)377 2604 y(ob)5 b(jects)28 b(are)g(not)f(copied)g(b)m(y)g(the)g
(collector)h(in)e(Step)h(3.)40 b(A)m(t)28 b(the)f(end)g(of)g(GC,)g(it)g
(w)m(ould)f(b)s(e)g(b)s(ene-)377 2773 y(\014cial)j(to)h(incorp)s(orate)
g(these)g(c)m(hanges)h(in)m(to)f(the)g(partition)e(to)j(a)m(v)m(oid)f
(future)f(installation)f(cost.)377 2942 y(There)36 b(are)g(t)m(w)m(o)h
(di\013erences)e(b)s(et)m(w)m(een)i(this)e(step)h(and)f(Step)h(1.)57
b(First,)37 b(ob)5 b(jects)37 b(are)f(installed)377 3112
y(in)m(to)e(the)g(to-space)h(instead)e(of)h(the)g(from-space.)52
b(Second,)34 b(the)g(ob)5 b(jects)35 b(ha)m(v)m(e)g(to)f(b)s(e)f
(scanned)377 3281 y(for)28 b(in)m(ter-partition)e(references)i(and)f
(they)h(are)g(added)f(to)i(new)e(outlist)f(constructed)i(in)f(Step)g
(3.)150 3525 y Fk(Step)35 b(5:)46 b(Up)s(date)35 b(Collected)g(P)m
(artition)g(and)g(IRLs.)92 b Fl(During)36 b(the)h(GC)h(tracing,)h(the)f
(collec-)377 3694 y(tor)23 b(pro)s(duces)f(a)h(new)g(outlist)e(that)j
(con)m(tains)f(all)f(the)h(outgoing)g(in)m(ter-partition)e(references)i
(that)377 3864 y(the)33 b(OR)f(encoun)m(tered.)47 b(The)32
b(collector)h(uses)f(the)h(information)e(in)g(the)h(original)f(and)h
(the)g(new)377 4033 y(outlist)e(to)i(determine)d(whic)m(h)h(inlists)e
(of)j(other)g(partitions)e(need)i(to)g(b)s(e)f(up)s(dated.)41
b(A)m(t)32 b(the)f(end)377 4203 y(of)e(GC,)f(the)g(OR)g(replaces)g(the)
g(original)e(outlist)i(with)e(the)j(new)e(outlist,)h(up)s(dates)f(the)i
(relev)-5 b(an)m(t)377 4372 y(inlists)31 b(in)i(other)h(partitions,)f
(and)g(replaces)h(the)g(original)e(partition)g(with)g(the)i(collected)g
(one.)377 4541 y(The)28 b(replacemen)m(t)g(of)g(the)g(partition)f(and)g
(up)s(date)g(of)h(IRLs)g(ha)m(v)m(e)h(to)g(b)s(e)e(done)h
Ff(atomic)-5 b(al)5 b(ly)p Fl(.)42 b(See)377 4711 y(Section)25
b(4.1.2)32 b(for)e(more)h(detail.)1905 5649 y(26)p eop
%%Page: 27 27
27 26 bop 150 83 a Fr(3.3)137 b(Basic)46 b(Correctness)150
342 y Fl(Because)33 b(of)e(concurren)m(t)h(activities)f(in)f(the)i
(system,)g(an)f(imp)s(ortan)m(t)g(correctness)h(condition)e(for)h(this)
150 512 y(sc)m(heme)g(is)f(that)h(no)g(new)f(ro)s(ots)h(for)f(the)h
(partition)e(b)s(eing)g(collected)i(will)d(come)k(in)m(to)e(existence)h
(after)150 681 y(the)g(ro)s(ot)g(generation)g(\(Step)g(2\).)42
b(Note)32 b(that)f(the)g(\015usher)e(thread)h(is)g(the)h
Ff(only)h Fl(m)m(utator)f(of)g(segmen)m(ts)150 851 y(\(and)38
b(th)m(us)h(partitions\))e(b)s(esides)g(the)i(collector)g(itself.)65
b(Clien)m(t)37 b(commits)i(do)f(not)h(directly)f(m)m(utate)150
1020 y(segmen)m(ts)d(b)s(ecause)f(committed)g(transactions)g(only)f(c)m
(hange)i(the)f(log)g(and)f(the)h(MOB,)g(but)g(not)g(the)150
1189 y(con)m(ten)m(ts)j(of)e(the)g(segmen)m(ts.)55 b(Since)34
b(the)h(\015usher)e(thread)h(is)g(susp)s(ended)f(during)f(GC,)j(the)g
(partition)150 1359 y(b)s(eing)29 b(collected)i(is)e(nev)m(er)i(m)m
(utated)g(except)g(b)m(y)g(the)f(collector)h(itself.)291
1528 y(As)i(a)h(result,)f(once)h(a)g Ff(c)-5 b(orr)g(e)g(ct)35
b Fl(snapshot)e(of)g(ro)s(ots)g(is)g(generated,)i(that)f(snapshot)f(is)
f(guaran)m(teed)150 1697 y(to)f(protect)g(all)e(reac)m(hable)h(ob)5
b(jects)31 b(for)e(the)h(en)m(tire)g(duration)f(of)h(GC)g(ev)m(en)g(in)
f(the)h(presence)g(of)g(clien)m(t)150 1867 y(fetc)m(hes)42
b(and)f(commits.)72 b(An)m(y)42 b(liv)m(e)e(ob)5 b(ject)42
b(that)g(is)e(reac)m(hable)h(from)g(the)g(snapshot)g(of)g(ro)s(ots)h
(will)150 2036 y(con)m(tin)m(ue)35 b(to)h(b)s(e)f(reac)m(hable)h
(during)d(the)i(en)m(tire)g(GC)g(and)g(an)m(y)g(ob)5
b(ject)36 b(that)g(is)e(not)i(reac)m(hable)f(from)150
2205 y(the)c(ro)s(ot)f(set)h(cannot)g(b)s(e)f(turned)f(in)m(to)h(b)s
(eing)f(reac)m(hable)i(again.)150 2567 y Fr(3.4)137 b(Concurrency)46
b(and)h(Reco)l(v)l(ery)150 2826 y Fl(This)24 b(sc)m(heme)i(allo)m(ws)f
(clien)m(t)g(op)s(erations)g(to)h(pro)s(ceed)g(concurren)m(tly)e(with)h
(no)g(extra)h(o)m(v)m(erhead)h(during)150 2995 y(GC.)c(Since)e(the)i
(garbage)h(collector)f(only)f(mo)s(di\014es)e(the)j(to-space)h
(partition,)f(it)g(is)e(decoupled)h(from)g(the)150 3165
y(clien)m(t)30 b(fetc)m(hes)h(and)f(commits.)40 b(FEs)31
b(can)f(con)m(tin)m(ue)h(to)g(fetc)m(h)g(ob)5 b(jects)31
b(from)f(the)g(segmen)m(t)i(cac)m(he,)g(the)150 3334
y(MOB,)24 b(and)e(the)h(from-space)h(in)d(the)i(case)h(of)g(ob)5
b(jects)23 b(in)f(the)h(partition)f(b)s(eing)f(collected.)39
b(T)-8 b(ransaction)150 3503 y(commits)37 b(can)h(pro)s(ceed)f(b)s
(ecause)g(mo)s(di\014ed)e(ob)5 b(jects)38 b(are)g(just)e(app)s(ended)g
(to)i(the)f(log)h(and)e(en)m(tered)150 3673 y(in)31 b(the)h(MOB.)h
(Sync)m(hronization)d(is)i(only)f(required)f(at)j(the)f(end)g(of)g(GC)g
(when)f(the)h(segmen)m(ts)h(of)g(the)150 3842 y(from-space)25
b(partition)f(are)h(atomically)g(replaced)f(b)m(y)h(the)g(segmen)m(ts)h
(of)f(the)h(to-space)g(partition)e(\(Step)150 4012 y(5\).)291
4181 y(Using)39 b(a)h(cop)m(ying)g(GC)g(algorithm)f(mak)m(es)i(the)f
(GC)g(reco)m(v)m(ery)h(simple.)67 b(If)40 b(the)g(serv)m(er)g(crashes)
150 4350 y(during)29 b(GC)j(b)s(efore)f(Step)h(5,)g(the)g(collector)g
(can)g(simply)e(discard)g(the)i(to-space)h(and)e(start)h(o)m(v)m(er.)46
b(No)150 4520 y(reco)m(v)m(ery)37 b(is)e(required)f(on)h(the)h
(from-space)g(b)s(ecause)g(it)f(has)h(not)f(b)s(een)g(mo)s(di\014ed)f
(b)m(y)h(the)h(collector.)150 4689 y(See)31 b(Section)24
b(5.6.2)33 b(for)d(more)g(detail)g(on)g(reco)m(v)m(ery)-8
b(.)1905 5649 y(27)p eop
%%Page: 28 28
28 27 bop 150 809 a Fg(Chapter)66 b(4)150 1349 y Fj(GC)79
b(Ro)7 b(ots)150 1851 y Fl(As)23 b(explained)f(in)g(Section)j(3.1,)h
(the)d(ro)s(ots)h(for)f(GC)g(of)h(a)g(partition)e(p)h(include)e(the)i
(OR)g(ro)s(ot,)j(references)150 2020 y(in)j(prepare)h(records,)g(en)m
(tries)g(in)f(OR)h(tables,)g(the)h(inlist)c(of)k(p,)f(and)g(the)g(v)m
(olatile)g(ro)s(ots)h(of)f(connected)150 2189 y(FEs.)60
b(In)36 b(this)f(c)m(hapter,)40 b(w)m(e)d(will)d(describ)s(e)h(some)i
(of)g(these)g(ro)s(ot)g(en)m(tities)g(in)e(detail.)59
b(W)-8 b(e)38 b(will)c(also)150 2359 y(discuss)29 b(when)g(they)h(ha)m
(v)m(e)i(to)f(b)s(e)f(up)s(dated.)150 2717 y Fr(4.1)137
b(In)l(ter-P)l(artition)48 b(Reference)e(Lists)150 2976
y Fl(The)33 b(safet)m(y)i(of)e(the)h(partitioned)e(garbage)i
(collection)f(sc)m(heme)i(dep)s(ends)c(on)i(the)h(timely)e(up)s(dates)h
(of)150 3146 y(the)j(IRLs.)55 b(There)35 b(are)h(t)m(w)m(o)h(in)m(v)-5
b(arian)m(ts)35 b(on)g(the)h(IRLs)f(that)h(need)f(to)h(b)s(e)f(main)m
(tained)g(b)m(y)g(the)h(lo)s(cal)150 3315 y(GC)30 b(proto)s(col:)286
3561 y Fc(\017)46 b Fl(F)-8 b(or)36 b(an)m(y)g(v)-5 b(alid)33
b(partition)h(p,)i(the)f(inlist)e(of)i(p)g(con)m(tains)g(the)h
(reference)f(coun)m(ts)h(of)f(all)f(ob)5 b(jects)377
3731 y(residing)35 b(in)h(p.)60 b(In)36 b(particular,)h(the)g
(reference)h(coun)m(t)f(of)g(an)g(ob)5 b(ject)38 b Ff(o)f
Fl(in)f(p)h(is)f(equal)g(to)i(the)377 3900 y(n)m(um)m(b)s(er)27
b(of)i(partitions)e(other)h(than)g(p)g(at)h(the)g(same)g(OR)f(that)g
(con)m(tain)h(at)g(least)g(one)f(reference)377 4069 y(to)j(ob)5
b(ject)32 b Ff(o)p Fl(.)286 4307 y Fc(\017)46 b Fl(F)-8
b(or)29 b(an)m(y)f(v)-5 b(alid)26 b(partition)g(p,)i(the)g(outlist)e
(of)i(p)f(is)g(a)h(set)g(of)g(references.)40 b(If)28
b(there)f(is)g(an)h(ob)5 b(ject)28 b(in)377 4476 y(p)f(that)g(con)m
(tains)h(an)f(in)m(ter-partition)e(reference)j Ff(x)p
Fl(,)g(then)e(the)i(reference)f Ff(x)g Fl(exists)g(in)f(the)h(outlist)
377 4646 y(of)k(p.)291 4892 y(T)-8 b(o)34 b(main)m(tain)e(the)i(ab)s(o)
m(v)m(e)g(in)m(v)-5 b(arian)m(ts,)33 b(the)h(\015usher)d(thread)i(has)g
(to)h(b)s(e)f Ff(extende)-5 b(d)34 b Fl(to)g(up)s(date)f(the)150
5061 y(IRLs)j(when)g(it)g(installs)e(ob)5 b(jects)37
b(from)g(the)f(MOB)h(to)h(segmen)m(ts.)60 b(In)36 b(addition,)h(the)f
(IRLs)g(ha)m(v)m(e)i(to)150 5231 y(b)s(e)33 b(up)s(dated)g(after)i(GC)f
(of)g(a)g(partition.)50 b(Ho)m(w)m(ev)m(er,)38 b(the)c(IRLs)f(do)h
Ff(not)h Fl(ha)m(v)m(e)g(to)g(b)s(e)e(mo)s(di\014ed)f(when)150
5400 y(clien)m(ts)27 b(commit)h(transactions)g(b)s(ecause)g(new)f(and)g
(mo)s(di\014ed)f(ob)5 b(jects)29 b(are)f(not)g(written)f(to)h
(partitions)1905 5649 y(28)p eop
%%Page: 29 29
29 28 bop 150 83 a Fl(directly)-8 b(.)45 b(They)32 b(are)g(en)m(tered)h
(in)m(to)f(the)g(MOB)g(and)g(the)g(relev)-5 b(an)m(t)33
b(IRLs)e(will)e(b)s(e)j(up)s(dated)f(when)g(the)150 252
y(ob)5 b(jects)37 b(are)g(installed)d(in)m(to)i(the)g(partition)f
(later.)59 b(As)36 b(explained)e(in)h(Section)25 b(3.1.1,)40
b(this)35 b(do)s(es)h(not)150 422 y(violate)30 b(the)h(GC)f(safet)m(y)
-8 b(.)291 591 y(The)24 b(IRL)h(up)s(date)e(sc)m(heme)j(describ)s(ed)c
(b)s(elo)m(w)i(illustrates)f(ho)m(w)i(the)g(IRLs)f(need)g(to)i(b)s(e)e
(up)s(dated)f(b)m(y)150 760 y(ob)5 b(ject)30 b(installation)e(and)h
(garbage)h(collection.)40 b(An)30 b(optimized)e(v)m(ersion)h(of)g(the)h
(sc)m(heme)g(is)f(discussed)150 930 y(in)g(Section)c(5.4.)150
1231 y Fm(4.1.1)112 b(Ob)6 b(ject)38 b(Installation)150
1459 y Fl(New)31 b(en)m(tries)g(ha)m(v)m(e)h(to)g(b)s(e)f(added)f(to)i
(the)f(IRLs)f(when)h(mo)s(di\014cations)e(to)j(ob)5 b(jects)31
b(in)f(p)h(are)g(installed)150 1629 y(b)s(ecause)j(this)f(migh)m(t)h
(result)e(in)h(new)h(in)m(ter-partition)e(references.)52
b(Sp)s(eci\014cally)-8 b(,)33 b(b)s(efore)g(the)i(\015usher)150
1798 y(thread)e(installs)e(an)j(ob)5 b(ject)34 b(from)f(the)h(MOB)g(to)
g(a)g(segmen)m(t)g(b)s(elonging)e(to)i(a)g(partition)e(p,)i(it)f(needs)
150 1968 y(to)e(scan)f(the)g(ob)5 b(ject)30 b(for)g(in)m(ter-partition)
e(references.)41 b(F)-8 b(or)31 b(eac)m(h)g(in)m(ter-partition)d
(reference)i(oref,)h(the)150 2137 y(\015usher)26 b(has)h(to)h
(determine)e(if)g(p)h(already)g(con)m(tains)h(this)e(reference)i(b)m(y)
f(c)m(hec)m(king)h(whether)e(the)i(outlist)150 2306 y(of)33
b(p)f(con)m(tains)h(oref.)48 b(If)32 b(oref)h(is)f(not)h(presen)m(t)g
(in)e(the)i(outlist)f(of)h(p,)g(the)f(\015usher)g(needs)g(to)h
(incremen)m(t)150 2476 y(the)k(reference)h(coun)m(t)f(of)g(oref)h(in)d
(the)j(inlist)c(of)j(partition)f(q,)j(where)d(q)h(con)m(tains)g(the)g
(ob)5 b(ject)38 b(b)s(eing)150 2645 y(referenced.)h(It)27
b(also)f(needs)f(to)i(add)f(oref)g(to)h(the)g(outlist)e(of)h(p.)39
b(On)25 b(the)i(other)f(hand,)g(if)f(oref)i(is)e(presen)m(t)150
2814 y(in)34 b(the)h(outlist)f(of)h(p,)h(nothing)f(needs)f(to)i(b)s(e)f
(done)f(b)s(ecause)i(the)f(reference)g(coun)m(t)h(for)f(oref)g(already)
150 2984 y(re\015ects)c(the)f(reference)h(from)f(p.)291
3153 y(Figure)25 b(4-1)32 b(illustrates)d(the)i(ob)5
b(ject)32 b(installation)d(pro)s(cess.)43 b(There)31
b(are)g(t)m(w)m(o)i(mo)s(di\014ed)c(ob)5 b(jects)31 b
Ff(A)150 3322 y Fl(and)g Ff(F)i Fl(in)d(the)i(MOB)h(due)e(to)i(a)f
(committed)g(transaction.)45 b(When)32 b(the)g(\015usher)f(installs)e
(ob)5 b(ject)33 b Ff(F)f Fl(to)150 3492 y(partition)i(q,)j(it)f(c)m
(hec)m(ks)h(the)e(outlist)g(of)h(q)f(and)g(determines)g(that)h(the)g
(reference)g(to)g Ff(C)g Fl(from)f(ob)5 b(ject)150 3661
y Ff(F)37 b Fl(is)f(a)i(new)e(in)m(ter-partition)g(reference.)61
b(As)37 b(a)g(result,)h(it)f(has)f(to)i(add)f Ff(C)g
Fl(to)g(the)g(outlist)f(of)i(q)f(and)150 3831 y(incremen)m(t)31
b(the)h(reference)g(coun)m(t)h(of)e Ff(C)h Fl(in)e(the)i(inlist)d(of)j
(p.)44 b(On)31 b(the)h(other)g(hand,)f(when)g(the)h(\015usher)150
4000 y(installs)27 b(ob)5 b(ject)30 b Ff(A)e Fl(to)i(partition)e(p,)h
(it)f(do)s(es)h(not)g(need)g(to)h(up)s(date)e(the)h(IRLs)g(b)s(ecause)g
(reference)g Ff(D)g Fl(is)150 4169 y(already)h(in)e(the)j(outlist)e(of)
h(p.)40 b Ff(A)30 b Fl(and)f Ff(F)i Fl(are)f(remo)m(v)m(ed)h(from)f
(the)g(MOB)h(and)e(the)h(log)h(after)f(they)h(are)150
4339 y(installed.)150 4640 y Fm(4.1.2)112 b(Garbage)39
b(Collection)150 4868 y Fl(In)d(traditional)g(reference)h(coun)m(ting)g
(sc)m(hemes,)i(when)d(a)i(reference)f(is)f(deleted,)j(the)e(corresp)s
(onding)150 5038 y(reference)j(coun)m(t)g(is)e(decremen)m(ted.)68
b(Ho)m(w)m(ev)m(er,)43 b(in)38 b(our)h(case,)k(an)c(in)m(ter-partition)
f(reference)h(b)s(eing)150 5207 y(deleted)e(from)g(an)g(ob)5
b(ject)39 b(do)s(es)e(not)g(necessarily)g(mean)g(that)h(the)g(OR)f(can)
g(decremen)m(t)i(the)e(corre-)150 5376 y(sp)s(onding)21
b(reference)j(coun)m(t.)39 b(This)22 b(is)g(b)s(ecause)i(the)g
(reference)f(coun)m(ts)h(main)m(tained)f(b)m(y)g(the)h(OR)f(record)1905
5649 y(29)p eop
%%Page: 30 30
30 29 bop 312 2360 a @beginspecial 60 @llx 252 @lly 568
@urx 600 @ury 3960 @rwi @setspecial
%%BeginDocument: Idraw/install.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 617 760 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 563 760 ] concat
[
(F)
] Text
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 6 204 ] concat
579 567 546 534 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 6 204 ] concat
546 567 579 534 Line
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 444.9 185 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 68.267 185 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 621.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 632.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 676.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 410.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 420.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 463.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 455 216 ] concat
86 512 263 567 Rect
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 401 241 ] concat
132 373 114 354 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 401 241 ] concat
103 417 131 397 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 401 241 ] concat
118 337 295 337 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 487 531 ] concat
[
(Partition p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 697 531 ] concat
[
(Partition q)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 487 675 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 541 628 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 496 584 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 700 674 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 709 584 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 755 629 ] concat
[
(E)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 500 432 ] concat
[
(Outlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 599 432 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 511 465 ] concat
[
(Inlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 599 498 ] concat
[
(p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 721 498 ] concat
[
(q)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 469 230 ] concat
196 268 196 180 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 448.3 230 ] concat
19 213 385 213 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 448.291 230 ] concat
19 246 385 246 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 710 465 ] concat
[
(\(D, 1\))
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 435 230 ] concat
119 268 119 180 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 401 241 ] concat
288 423
204 356
119 344
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 401 241 ] concat
106 439
226 472
345 465
320 359
4 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 587 465 ] concat
[
(\(C, 1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 720 432 ] concat
[
(C)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 68.9 185 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 -307.733 185 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 245.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 256.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 300.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 34.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 44.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 87.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 110.778 393.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 164.778 393.467 ] concat
108 479 22 22 Elli
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 79 216 ] concat
86 512 263 567 Rect
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 25 241 ] concat
132 373 114 354 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 25 241 ] concat
103 417 131 397 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 25 241 ] concat
118 337 295 337 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 25 241 ] concat
167 499
211 376
152 354
118 344
4 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 111 531 ] concat
[
(Partition p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 321 531 ] concat
[
(Partition q)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 111 675 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 165 628 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 120 584 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 324 674 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 333 584 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 379 629 ] concat
[
(E)
] Text
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 25 241 ] concat
226 501
233 388
298 352
3 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 124 432 ] concat
[
(Outlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 223 432 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 135 465 ] concat
[
(Inlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 223 498 ] concat
[
(p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 345 498 ] concat
[
(q)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 93 230 ] concat
196 268 196 180 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 72.3 230 ] concat
19 213 385 213 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 72.291 230 ] concat
19 246 385 246 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 334 465 ] concat
[
(\(D, 1\))
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 59 230 ] concat
119 268 119 180 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.07175 -70 210.457 ] concat
513 578 513 135 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 486.778 393.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 540.778 393.467 ] concat
108 479 22 22 Elli
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 60 205 ] concat
546 567 579 534 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 60 205 ] concat
579 567 546 534 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 233 808 ] concat
[
(MOB)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 609 808 ] concat
[
(MOB)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 188 399 ] concat
[
(Before Installation)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 565 399 ] concat
[
(After Installation)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 190 761 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 241 759 ] concat
[
(A)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -181 121 ] concat
297 601 297 567 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 89 733 ] concat
[
(OR Root)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 195 119 ] concat
297 601 297 567 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 465 731 ] concat
[
(OR Root)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 965 2556 a Fl(Figure)30 b(4-1:)42 b(IRL)30
b(up)s(date)g(due)f(to)i(ob)5 b(ject)32 b(installation)150
2923 y(the)g(n)m(um)m(b)s(er)e(of)i(referencing)e(partitions,)h(not)h
(the)f(n)m(um)m(b)s(er)g(of)g(referencing)g(ob)5 b(jects.)45
b(T)-8 b(o)32 b(determine)150 3092 y(whether)c(the)h(last)g(in)m
(ter-partition)e(reference)j(is)e(b)s(eing)f(deleted)i(from)f(a)h
(partition)f(p,)h(the)g(OR)f(needs)150 3261 y(to)33 b(scan)e(all)g(the)
h(ob)5 b(jects)33 b(in)d(p.)44 b(After)32 b(scanning,)g(the)g(OR)f(can)
h(construct)g(a)g(list)f(of)h(outgoing)g(refer-)150 3431
y(ences)h(to)h(other)e(partitions,)g(that)i(is,)e(the)h(up)s(dated)e
(outlist.)47 b(By)33 b(comparing)f(the)g(new)h(outlist)e(with)150
3600 y(the)j(original)e(one,)k(the)e(OR)f(can)h(decremen)m(t)h(corresp)
s(onding)d(reference)i(coun)m(ts)h(for)e(in)m(ter-partition)150
3769 y(references)e(that)g(no)f(longer)g(exist.)291 3939
y(Ob)m(viously)-8 b(,)24 b(it)g(is)f(not)i(practical)f(to)h(scan)f(the)
h(whole)e(partition)g(ev)m(ery)i(time)f(a)h(reference)g(is)e(deleted)
150 4108 y(from)31 b(an)g(ob)5 b(ject.)43 b(Instead,)32
b(the)f(OR)g(can)g(p)s(erform)f(the)h(scanning)f(lazily)g(b)s(ecause)h
(the)g(safet)m(y)h(of)g(the)150 4277 y(GC)c(proto)s(col)g(is)f(not)h
(violated)g(b)m(y)g(not)g(decremen)m(ting)g(the)g(reference)h(coun)m
(ts)f(immediately)-8 b(.)39 b(A)28 b(go)s(o)s(d)150 4447
y(time)i(to)h(scan)g(a)f(partition)g(p)f(is)h(when)f(the)i(OR)f(p)s
(erforms)e(GC)j(on)f(p.)291 4616 y(A)m(t)37 b(the)e(end)g(of)h(GC,)f
(the)h(OR)f(compares)h(the)f(new)g(outlist)g(with)f(the)h(original)f
(outlist)g(of)i(p.)55 b(If)150 4786 y(an)31 b(oref)f(is)g(presen)m(t)h
(in)e(the)i(original)e(outlist)g(and)h(not)h(in)e(the)i(new)f(outlist,)
g(this)g(means)g(that)i(p)e(used)150 4955 y(to)35 b(con)m(tain)f(this)f
(reference)h(but)f(no)h(longer)g(do)s(es.)51 b(Therefore,)35
b(the)f(OR)f(can)h(safely)g(decremen)m(t)h(the)150 5124
y(inlist)28 b(en)m(try)i(for)g(the)h(oref.)41 b(On)29
b(the)h(other)h(hand,)e(if)h(an)g(oref)g(is)f(presen)m(t)i(in)e(the)h
(new)g(outlist)f(but)h(not)150 5294 y(in)d(the)i(original)e(outlist,)h
(this)f(means)i(that)g(oref)g(is)e(a)i(new)f(in)m(ter-partition)f
(reference)i(in)e(p.)40 b(This)27 b(can)1905 5649 y(30)p
eop
%%Page: 31 31
31 30 bop 150 83 a Fl(happ)s(en)31 b(b)s(ecause)i(the)g(IRLs)f(are)h
(not)g(up)s(dated)f(immediately)f(when)g(the)i(collector)h(installs)c
(ob)5 b(jects)150 252 y(from)31 b(the)h(MOB)f(at)h(the)g(b)s(eginning)d
(of)i(GC)h(\(Step)f(1)h(in)e(Section)25 b(3.2\).)45 b(In)31
b(this)f(case,)j(the)e(OR)g(needs)150 422 y(to)d Ff(incr)-5
b(ement)28 b Fl(the)g(inlist)c(en)m(try)k(for)f(that)h(oref.)40
b(Finally)-8 b(,)27 b(the)g(original)f(outlist)g(in)g(disk)g(is)g
(replaced)h(b)m(y)150 591 y(the)k(new)e(one)i(and)f(all)f(mo)s
(di\014ed)f(inlists)g(are)j(written)e(to)i(disk.)291
760 y(Figure)25 b(4-2)e(illustrates)c(ho)m(w)j(the)g(IRLs)f(are)h(up)s
(dated)f(after)h(GC)g(of)g(partition)e(q.)38 b(Ob)5 b(jects)22
b Ff(D)f Fl(and)g Ff(E)150 930 y Fl(are)k(garbage)i(collected)e(and)g
(the)g(new)f(outlist)g(constructed)i(b)m(y)f(the)g(garbage)h(collector)
g(only)e(con)m(tains)150 1099 y Ff(B)p Fl(.)38 b(By)f(comparing)g(the)h
(new)e(outlist)h(with)f(the)i(original)d(one,)40 b(the)d(garbage)i
(collector)f(determines)150 1269 y(that)d(it)e(m)m(ust)h(decremen)m(t)h
(the)f(inlist)d(en)m(try)j(for)g Ff(C)g Fl(in)f(partition)f(p.)51
b(Then)33 b(it)h(replaces)g(the)g(original)150 1438 y(outlist)29
b(of)i(q)f(with)f(the)i(new)f(one.)312 3578 y @beginspecial
60 @llx 252 @lly 568 @urx 548 @ury 3960 @rwi @setspecial
%%BeginDocument: Idraw/gc.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 487 531 ] concat
[
(Partition p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 697 531 ] concat
[
(Partition q)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 68.9 185 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 -307.733 185 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 245.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 256.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 300.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 34.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 44.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 87.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 25 241 ] concat
118 337 295 337 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 111 531 ] concat
[
(Partition p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 321 531 ] concat
[
(Partition q)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 111 675 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 165 628 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 120 584 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 324 674 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 333 584 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 379 629 ] concat
[
(E)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 124 432 ] concat
[
(Outlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 135 465 ] concat
[
(Inlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 223 498 ] concat
[
(p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 345 498 ] concat
[
(q)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 93 230 ] concat
196 268 196 180 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 72.3 230 ] concat
19 213 385 213 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 72.291 230 ] concat
19 246 385 246 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 59 230 ] concat
119 268 119 180 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 0.910315 -70 232.1 ] concat
513 578 513 135 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 251 ] concat
94 466 94 438 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 100 737 ] concat
[
(OR Root)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 251 ] concat
113 418 285 418 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 251 ] concat
292 408 166 377 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 251 ] concat
329 341 348 361 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 199 465 ] concat
[
(\(B, 1\)  \(C, 1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 332 465 ] concat
[
(\(F, 1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 221 432 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 332 432 ] concat
[
(B  C)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 444.9 185 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 1 68.267 185 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 621.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 632.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 676.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 410.778 307.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 420.778 218.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 463.778 262.467 ] concat
108 479 22 22 Elli
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 401 241 ] concat
118 337 295 337 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 487 675 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 541 628 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 496 584 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 700 674 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 709 584 ] concat
[
(D)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 755 629 ] concat
[
(E)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 398 251 ] concat
94 466 94 438 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 476 737 ] concat
[
(OR Root)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 398 251 ] concat
113 418 285 418 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 398 251 ] concat
292 408 166 377 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 398 251 ] concat
329 341 348 361 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 443 50 ] concat
255 546 288 513 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 443 50 ] concat
288 546 255 513 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 486 95 ] concat
255 546 288 513 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 486 94 ] concat
288 546 255 513 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 55 19 ] concat
554 568 576 546 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 55 19 ] concat
576 568 554 546 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 500 432 ] concat
[
(Outlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 511 465 ] concat
[
(Inlist)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 599 498 ] concat
[
(p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 721 498 ] concat
[
(q)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 469 230 ] concat
196 268 196 180 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 448.3 230 ] concat
19 213 385 213 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.877384 0 0 1 448.291 230 ] concat
19 246 385 246 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 435 230 ] concat
119 268 119 180 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 708 465 ] concat
[
(\(F, 1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 597 432 ] concat
[
(F)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 587 465 ] concat
[
(\(B, 1\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 720 432 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 177 387 ] concat
[
(Before GC)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 18 SetF
[ 1 0 0 1 576 387 ] concat
[
(After GC)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 969 3774 a(Figure)g(4-2:)42 b(IRL)30 b(up)s(date)f(due)h
(to)h(garbage)h(collection)150 4334 y Fr(4.2)137 b(OR)46
b(T)-11 b(ables)150 4593 y Fl(Eac)m(h)24 b(OR)g Fh(O)s(R)672
4607 y Fe(1)736 4593 y Fl(main)m(tains)e(an)i(OR)f(table)h(for)f(ev)m
(ery)i(other)f(OR)f Fh(O)s(R)2547 4607 y Fe(2)2587 4593
y Fl(,)i(whic)m(h)d(records)i(a)g(conserv)-5 b(ativ)m(e)150
4763 y(estimate)41 b(of)f(incoming)e(references)j(from)e
Fh(O)s(R)1828 4777 y Fe(2)1892 4763 y Fl(to)i Fh(O)s(R)2154
4777 y Fe(1)2193 4763 y Fl(.)70 b(An)39 b(OR)h(table)g(is)f(a)h(set)g
(of)g(xrefs.)69 b(The)150 4932 y(in)m(v)-5 b(arian)m(ts)29
b(on)i(OR)f(tables)g(main)m(tained)f(b)m(y)h(the)h(GC)f(proto)s(col)g
(are:)286 5176 y Fc(\017)46 b Fl(If)32 b Fh(O)s(R)611
5190 y Fe(2)675 5176 y Fl(has)h(a)f(remote)i(reference)e(to)h(an)g(ob)5
b(ject)33 b(in)e Fh(O)s(R)2374 5190 y Fe(1)2413 5176
y Fl(,)i(then)f(an)h(en)m(try)f(for)g(the)h(referenced)377
5346 y(ob)5 b(ject)32 b(exists)e(in)f(the)h(OR)g(table)g(for)h
Fh(O)s(R)1842 5360 y Fe(2)1906 5346 y Fl(at)g Fh(O)s(R)2158
5360 y Fe(1)2197 5346 y Fl(.)1905 5649 y(31)p eop
%%Page: 32 32
32 31 bop 286 83 a Fc(\017)46 b Fl(If)35 b(an)h(FE)g(has)f(a)h
(reference)h(to)f(an)g(ob)5 b(ject)36 b(in)f Fh(O)s(R)2179
97 y Fe(1)2243 83 y Fl(and)g(it)g(is)g(not)h(connected)g(to)h
Fh(O)s(R)3472 97 y Fe(1)3511 83 y Fl(,)g(then)377 252
y(an)c(en)m(try)g(for)g(the)g(referenced)g(ob)5 b(ject)34
b(exists)e(in)g(the)h(OR)f(table)h(at)h Fh(O)s(R)2936
266 y Fe(1)3000 252 y Fl(for)f(some)g(other)g(OR)377
422 y(connected)f(to)f(the)f(FE.)291 666 y(T)-8 b(o)38
b(main)m(tain)e(the)h(\014rst)f(in)m(v)-5 b(arian)m(t,)38
b(en)m(tries)f(ha)m(v)m(e)h(to)g(b)s(e)e(added)h(to)g(the)h(OR)e(table)
h(at)h Fh(O)s(R)3577 680 y Fe(1)3641 666 y Fl(for)150
835 y Fh(O)s(R)291 849 y Fe(2)355 835 y Fl(when)j Fh(O)s(R)745
849 y Fe(2)809 835 y Fl(receiv)m(es)h(a)g(new)f(remote)h(reference)g
(to)g Fh(O)s(R)2409 849 y Fe(1)2473 835 y Fl(due)f(to)h(committed)g
(transactions.)150 1005 y(The)32 b(insertion)e(of)i(en)m(tries)g(has)g
(to)h(b)s(e)f(incorp)s(orated)f(in)g(the)h(\014rst)g(phase)g(of)g(the)g
(t)m(w)m(o-phase)i(commit)150 1174 y(proto)s(col.)41
b(More)31 b(details)e(can)i(b)s(e)f(found)f(in)23 b([18)q(].)291
1343 y(T)-8 b(o)24 b(main)m(tain)f(the)h(second)f(in)m(v)-5
b(arian)m(t,)25 b(b)s(efore)e(an)h(OR)f Fh(O)s(R)2319
1357 y Fe(1)2383 1343 y Fl(can)h(inform)e(another)i(OR)f
Fh(O)s(R)3456 1357 y Fe(2)3520 1343 y Fl(ab)s(out)150
1513 y(the)31 b(deletion)e(of)h(a)h(remote)h(reference)e(xref,)h(it)f
(has)g(to)h(\014rst)e(ensure)h(that)h(the)f(xref)g(do)s(es)h(not)f
(exist)g(in)150 1682 y(an)m(y)g(FEs)g(it)g(has)g(a)g(connection)h
(with.)39 b(This)28 b(can)j(b)s(e)e(accomplished)g(b)m(y)h(sending)e(a)
j(message)g(to)g(eac)m(h)150 1851 y(connected)g(FE)f(to)h(inquire)c(ab)
s(out)j(the)g(existence)g(of)g(the)g(xref)g(in)f(the)h(FEs.)41
b(It)30 b(only)f(informs)f Fh(O)s(R)3633 1865 y Fe(2)3697
1851 y Fl(if)150 2021 y(the)j(xref)f(is)f(not)i(presen)m(t)f(in)f(v)m
(olatile)h(ro)s(ots)h(of)f(all)g(connected)h(FEs.)291
2190 y(T)-8 b(o)29 b(shrink)c(the)k(OR)e(tables,)i(it)e(is)g(necessary)
i(for)f(an)g(OR)f(to)i(disco)m(v)m(er)g(it)e(no)h(longer)g(has)g(a)g
(remote)150 2359 y(reference)h(to)h(another)f(OR)f(and)g(inform)f(the)j
(other)f(OR)f(ab)s(out)g(it.)40 b(This)27 b(can)i(b)s(e)g(done)f(b)m(y)
h(k)m(eeping)g(a)150 2529 y Ff(r)-5 b(emote)32 b(outlist)c
Fl(for)g(eac)m(h)h(OR.)f(Eac)m(h)h(en)m(try)f(in)f(the)h(remote)h
(outlist)e(consists)g(of)h(an)g Ff(xr)-5 b(ef)28 b Fl(and)g(a)g(list)f
(of)150 2698 y Ff(p)-5 b(artition)33 b(ids)p Fl(.)40
b(The)28 b(xref)g(iden)m(ti\014es)f(an)h(ob)5 b(ject)29
b(in)e(a)i(remote)g(OR)e(that)i(is)f(referenced)g(and)f(the)i(list)e
(of)150 2868 y(partition)i(ids)g(iden)m(ti\014es)g(the)h(partitions)f
(at)i(this)f(OR)g(that)h(con)m(tain)f(references)h(to)g(that)g(ob)5
b(ject.)291 3037 y(During)33 b(GC)i(of)g(a)g(partition)e(p,)i(the)g
(collector)g(constructs)g(a)g(new)f(list)f(of)i(remote)h(references)e
(it)150 3206 y(encoun)m(ters)c(during)e(tracing.)41 b(A)m(t)31
b(the)f(end)f(of)h(GC,)g(it)g(compares)g(this)f(list)g(with)g(the)h
(remote)h(outlist.)150 3376 y(If)j(the)g(remote)i(outlist)d(indicates)g
(that)i(p)f(con)m(tains)g(an)h(xref)f Ff(x)g Fl(but)g
Ff(x)g Fl(is)f(not)i(presen)m(t)f(in)f(the)i(list)e(of)150
3545 y(remote)c(references,)g(then)e(p)g(is)g(remo)m(v)m(ed)i(from)f
(the)g(partition)e(list)h(asso)s(ciated)h(with)e Ff(x)i
Fl(in)f(the)h(remote)150 3714 y(outlist.)291 3884 y(After)33
b(up)s(dating)d(the)i(remote)i(outlist,)e(the)g(OR)g(scans)g(the)h
(remote)g(outlist)e(for)h(xrefs)g(that)h(ha)m(v)m(e)150
4053 y(an)26 b(empt)m(y)g(partition)f(list.)38 b(As)26
b(men)m(tioned)g(ab)s(o)m(v)m(e,)i(the)e(OR)g(\014rst)f(asks)h(all)f
(connected)i(FEs)f(ab)s(out)g(the)150 4223 y(existence)j(of)g(these)g
(xrefs)f(in)f(the)i(FEs.)40 b(If)29 b(an)f(xref)g(is)g(not)h(presen)m
(t)g(at)g(an)m(y)g(FE,)g(the)g(OR)f(informs)f(the)150
4392 y(other)j(OR)g(ab)s(out)f(the)h(deletion)f(of)h(this)f(reference.)
41 b(When)30 b(the)g(OR)g(receiv)m(es)g(an)g(ac)m(kno)m(wledgemen)m(t)
150 4561 y(of)d(the)f(deletion,)h(it)f(remo)m(v)m(es)h(the)g(xref)f
(from)g(the)g(remote)i(outlist.)38 b(Otherwise,)26 b(the)h(xref)f(will)
e(b)s(e)h(k)m(ept)150 4731 y(in)e(the)i(remote)h(outlist)e(un)m(til)f
(the)i(OR)f(determines)g(that)i(no)e(connected)i(FE)f(con)m(tains)g
(that)g(reference.)1905 5649 y(32)p eop
%%Page: 33 33
33 32 bop 150 83 a Fr(4.3)137 b(FE)46 b(V)-11 b(olatile)46
b(Ro)t(ots)150 342 y Fl(A)30 b(reference)g(m)m(ust)f(b)s(e)g(in)g(the)h
(v)m(olatile)f(ro)s(ot)h(set)g(of)g(an)g(FE)g(if)e(it)h(can)h(b)s
(ecome)g(the)g(only)f(reference)h(to)150 512 y(a)i(p)s(ersisten)m(t)f
(ob)5 b(ject.)45 b(In)31 b(a)h(v)m(ery)h(conserv)-5 b(ativ)m(e)32
b(approac)m(h,)h(the)f(v)m(olatile)f(ro)s(ot)h(set)h(for)e(a)h
(partition)e(p)150 681 y(w)m(ould)23 b(include)f(ev)m(ery)i(reference)h
(to)g(p)e(that)i(is)e(kno)m(wn)g(to)i(an)m(y)g(FE)f(in)e(the)j(Thor)e
(univ)m(erse.)37 b(Ob)m(viously)-8 b(,)150 851 y(this)25
b(is)g(not)i(practical.)38 b(First,)27 b(this)e(can)h(result)f(in)g(a)i
(v)m(ery)f(large)g(v)m(olatile)g(ro)s(ot)h(set)f(since)g(an)g(FE)g
(migh)m(t)150 1020 y(cac)m(he)k(a)e(lot)g(of)h(ob)5 b(jects)29
b(due)e(to)i(prefetc)m(hing.)39 b(Second,)29 b(the)f(OR)g(ma)m(y)h(not)
f(ev)m(en)h(kno)m(w)f(the)g(existence)150 1189 y(of)33
b(an)f(FE)g(that)h(con)m(tains)g(a)g(reference)g(to)g(it)f(b)s(ecause)g
(that)h(FE)g(ma)m(y)g(ha)m(v)m(e)g(obtained)f(the)g(reference)150
1359 y(from)e(an)g(ob)5 b(ject)31 b(in)e(another)i(OR.)f(Th)m(us,)g(it)
g(has)g(nev)m(er)h(established)d(a)j(connection)f(with)g(this)f(OR.)291
1528 y(It)j(will)d(b)s(e)i(sho)m(wn)f(that)j(the)e(v)m(olatile)h(ro)s
(ot)f(set)h(for)g(a)g(partition)e(p)h(only)f(needs)i(to)g(include)d
(infor-)150 1697 y(mation)k(ab)s(out)h(references)g(in)e(FEs)i
(connected)h(to)f(the)g(OR,)g(and)f(for)h(these)g(FEs,)h(it)e(only)g
(needs)g(to)150 1867 y(include)f(en)m(tries)h(in)g(the)h(handle)e
(table,)j(references)f(in)f(reac)m(hable)h(v)m(olatile)g(ob)5
b(jects,)35 b(and)f(references)150 2036 y(in)25 b(new)g(v)m(ersions)g
(of)h(p)s(ersisten)m(t)f(ob)5 b(jects)27 b(mo)s(di\014ed)d(b)m(y)h(the)
h(curren)m(t)g(transaction.)40 b(Both)26 b(old)f(and)g(new)150
2205 y(v)m(ersions)33 b(of)g(v)m(olatile)g(ob)5 b(jects)34
b(ha)m(v)m(e)h(to)f(b)s(e)e(scanned)h(b)s(ecause)g(the)h(curren)m(t)f
(transaction)g(ma)m(y)h(ab)s(ort)150 2375 y(or)j(commit.)62
b(W)-8 b(e)39 b(need)e(to)h(include)d(references)j(in)e(new)h(v)m
(ersions)g(of)g(mo)s(di\014ed)f(p)s(ersisten)m(t)g(ob)5
b(jects)150 2544 y(b)s(ecause)29 b(the)g(references)h(in)e(these)h(new)
g(v)m(ersions)f(ma)m(y)i(no)f(longer)g(b)s(e)f(found)g(in)g(the)h
(handle)f(table)h(or)150 2714 y(v)m(olatile)i(ob)5 b(jects)32
b(and)e(the)h(OR)g(do)s(es)g(not)g(learn)f(ab)s(out)h(these)h(mo)s
(di\014ed)d(ob)5 b(jects)31 b(un)m(til)f(the)h(transac-)150
2883 y(tion)e(commits.)40 b(In)29 b(this)f(de\014nition)f(of)j(v)m
(olatile)f(ro)s(ots,)h(it)f(is)f(unnecessary)h(to)h(include)d(the)j
(references)150 3052 y(in)c(an)i Ff(unmo)-5 b(di\014e)g(d)30
b Fl(ob)5 b(ject)28 b(cac)m(hed)h(at)g(an)m(y)f(FE.)g(It)f(is)g(also)h
(unnecessary)f(to)h(include)e(v)m(olatile)h(ro)s(ots)h(in)150
3222 y(FEs)i(that)h(do)g(not)f(ha)m(v)m(e)i(a)f(connection)f(to)h(the)g
(OR)f(doing)f(GC)i(\(see)g(Section)25 b(4.3.1)32 b(and)24
b(4.3.2\).)291 3391 y(When)f(an)g(OR)g(is)g(ab)s(out)g(to)h(p)s(erform)
e(GC,)h(it)g(\014rst)g(sends)f(out)i(all)e(p)s(ending)f(in)m(v)-5
b(alidation)21 b(messages)150 3560 y(\(Section)k(2.2.7\).)40
b(Then,)24 b(it)e(sends)g(a)h(ro)s(ot-request)h(message)g(to)f(eac)m(h)
h(connected)g(FE.)f(Up)s(on)f(receiving)150 3730 y(the)j(ro)s
(ot-request)g(message,)i(an)e(FE)g(\014rst)f(pro)s(cesses)g(all)g(p)s
(ending)e(in)m(v)-5 b(alidation)22 b(messages)k(from)e(ORs.)150
3899 y(Then)i(it)h(p)s(erforms)e(a)j(lo)s(cal)e(collection)h(of)g(its)g
(v)m(olatile)g(ob)5 b(ject)27 b(heap.)40 b(This)25 b(collection)i
(should)e(b)s(e)i(fast)150 4068 y(b)s(ecause)i(it)f(only)g(in)m(v)m
(olv)m(es)h(the)g(v)m(olatile)f(heap.)40 b(It)29 b(is)f(also)h(p)s
(ossible)d(for)j(the)g(FE)g(to)g(a)m(v)m(oid)g(the)g(GC)g(b)m(y)150
4238 y(k)m(eeping)i(ro)s(ot)h(information)e(appro)m(ximately)g(up)h(to)
h(date:)43 b(the)32 b(information)e(is)g(recomputed)h(during)150
4407 y(FE)k(GC,)g(when)f(transactions)g(commit,)i(when)e(handles)f(are)
j(giv)m(en)e(to)i(clien)m(t)e(programs)h(and)f(when)150
4577 y(new)c(v)m(olatile)g(ob)5 b(jects)31 b(are)g(created.)291
4746 y(During)22 b(FE)h(GC,)h(all)e(reac)m(hable)i(v)m(olatile)f(ob)5
b(jects)24 b(are)f(scanned)g(and)g(the)g(references)h(to)g(p)s
(ersisten)m(t)150 4915 y(ob)5 b(jects)41 b(in)f(them)g(are)h(returned)f
(as)h(ro)s(ots.)72 b(In)40 b(addition,)h(the)g(en)m(tries)g(in)e(the)i
(handle)e(table)i(and)150 5085 y(references)31 b(in)e(mo)s(di\014ed)f
(p)s(ersisten)m(t)h(ob)5 b(jects)31 b(are)g(returned.)1905
5649 y(33)p eop
%%Page: 34 34
34 33 bop 150 83 a Fm(4.3.1)112 b(Omitting)38 b(Unmo)s(di\014ed)i(P)m
(ersisten)m(t)c(Ob)6 b(jects)150 311 y Fl(W)-8 b(e)27
b(argue)e(that)h(omitting)f(references)h(in)e(unmo)s(di\014ed)e(ob)5
b(jects)26 b(cac)m(hed)g(at)h(FEs)e(do)s(es)g(not)h(violate)f(GC)150
480 y(safet)m(y)-8 b(.)56 b(Supp)s(ose)33 b(an)i(FE)g(has)f(cac)m(hed)i
(an)f(unmo)s(di\014ed)d(ob)5 b(ject)36 b Ff(x)p Fl(.)54
b(Ob)5 b(ject)35 b Ff(x)g Fl(con)m(tains)g(a)g(reference)150
650 y(to)c(an)g(ob)5 b(ject)31 b Ff(y)f Fl(in)g(the)g(partition)f(of)i
Fh(O)s(R)1624 664 y Fe(1)1688 650 y Fl(b)s(eing)e(collected.)42
b(Ob)5 b(ject)30 b Ff(x)h Fl(ma)m(y)g(b)s(e)f(lo)s(cated)g(at)i
Fh(O)s(R)3605 664 y Fe(1)3669 650 y Fl(or)150 819 y(at)f(some)f(other)g
(OR)f Fh(O)s(R)1033 833 y Fe(2)1072 819 y Fl(.)41 b(In)29
b(addition,)f(the)i(ob)5 b(ject)31 b Ff(x)f Fl(at)g(the)g(OR)g(ma)m(y)g
(either)f(b)s(e)h(iden)m(tical)e(to)j(the)150 989 y(v)m(ersion)c(cac)m
(hed)i(at)g(the)f(FE)g(or)g(it)f(is)g(a)i(new)m(er)f(v)m(ersion.)39
b(It)28 b(cannot)g(b)s(e)g(an)f(older)g(v)m(ersion)h(b)s(ecause)g(the)
150 1158 y(FE)j(has)f(not)g(mo)s(di\014ed)e Ff(x)p Fl(.)41
b(In)30 b(either)g(case,)h(the)g(FE)g(is)e(connected)i(to)g(the)g(OR)f
(con)m(taining)g Ff(x)p Fl(.)150 1454 y Fk(Ob)6 b(ject)34
b Ff(x)h Fk(has)g(a)g(new)m(er)f(v)m(ersion)i(at)e(OR:)286
1683 y Fc(\017)46 b Fl(Figure)25 b(4-3)35 b(illustrates)e(the)h
(situation)g(where)g Ff(x)g Fl(is)f(lo)s(cated)i(at)g
Fh(O)s(R)2797 1697 y Fe(1)2837 1683 y Fl(.)52 b(The)34
b(FE)h(is)e(connected)377 1852 y(to)f Fh(O)s(R)630 1866
y Fe(1)694 1852 y Fl(and)e(has)h(an)g(unmo)s(di\014ed)d(cop)m(y)j(of)g
Ff(x)g Fl(in)f(its)g(cac)m(he)j(and)d Ff(x)h Fl(con)m(tains)g(a)h
(reference)f(to)h Ff(y)p Fl(.)377 2021 y Ff(x)k Fl(is)e(up)s(dated)g
(at)i Fh(O)s(R)1169 2035 y Fe(1)1233 2021 y Fl(\(b)s(ecause)f(of)h(the)
f(commit)g(of)h(a)f(transaction)g(running)e(at)j(a)f(di\013eren)m(t)377
2191 y(FE\))28 b(and)g(the)f(reference)i(to)f Ff(y)g
Fl(is)f(remo)m(v)m(ed.)40 b(Before)29 b(the)f(FE)g(receiv)m(es)g(a)g
(ro)s(ot-request)h(message)377 2360 y(from)35 b Fh(O)s(R)738
2374 y Fe(1)778 2360 y Fl(,)i(it)e(will)e(receiv)m(e)k(an)e(in)m(v)-5
b(alidation)34 b(message)i(for)g Ff(x)p Fl(.)56 b(Therefore,)37
b(it)f(will)d(discard)h Ff(x)377 2529 y Fl(from)c(the)h(cac)m(he)h(and)
d(the)i(clien)m(t)f(will)e(not)i(ha)m(v)m(e)i(access)g(to)f
Ff(x)f Fl(and)g(th)m(us)g(the)h(reference)f(to)h Ff(y)p
Fl(.)286 2773 y Fc(\017)46 b Fl(If)30 b Ff(x)g Fl(is)f(lo)s(cated)i(at)
g(some)f(other)h(OR)f Fh(O)s(R)1832 2787 y Fe(2)1896
2773 y Fl(\(Figure)25 b(4-4\),)32 b Ff(y)e Fl(is)f(initially)e
(protected)k(b)m(y)f(the)g(OR)377 2943 y(table)f(at)h
Fh(O)s(R)854 2957 y Fe(1)894 2943 y Fl(.)40 b(In)29 b(this)f(case,)j
(FE)e(is)f(connected)i(to)g Fh(O)s(R)2379 2957 y Fe(2)2419
2943 y Fl(.)40 b(If)29 b Ff(x)g Fl(is)g(up)s(dated)f(at)i
Fh(O)s(R)3342 2957 y Fe(2)3406 2943 y Fl(resulting)377
3112 y(in)c(the)i(deletion)e(of)i(the)f(reference)h(to)g
Ff(y)p Fl(,)g(the)f(k)m(ey)h(question)f(is)f(whether)h
Ff(y)g Fl(is)g(still)e(protected)j(b)m(y)377 3282 y(the)e(OR)f(table.)
40 b(A)25 b(problem)f(arises)i(only)e(if)h(the)h(en)m(try)g(for)f
Ff(y)h Fl(is)f(not)h(in)e(the)i(OR)f(table)h(an)m(ymore.)377
3451 y(But)35 b(this)e(means)h Fh(O)s(R)1166 3465 y Fe(2)1230
3451 y Fl(m)m(ust)g(ha)m(v)m(e)h(p)s(erformed)e(a)i(lo)s(cal)e(GC,)h
(and)g(b)s(efore)g(it)f(did)g(that)h(GC)g(it)377 3620
y(w)m(ould)29 b(ha)m(v)m(e)j(deliv)m(ered)d(an)h(in)m(v)-5
b(alidation)28 b(message)k(to)f(the)f(FE,)h(causing)f(the)g(FE)h(to)g
(discard)e Ff(x)377 3790 y Fl(from)h(its)g(cac)m(he.)150
4186 y Fk(Ob)6 b(ject)34 b Ff(x)h Fk(is)g(iden)m(tical)g(at)g(FE)f(and)
h(OR:)286 4414 y Fc(\017)46 b Fl(If)30 b Ff(x)h Fl(is)e(lo)s(cated)i
(at)g(some)g(other)f(OR)g Fh(O)s(R)1833 4428 y Fe(2)1873
4414 y Fl(,)g(then)g Ff(y)h Fl(is)e(protected)i(b)m(y)g(the)f(OR)g
(table)g(for)g Fh(O)s(R)3663 4428 y Fe(2)3703 4414 y
Fl(.)286 4658 y Fc(\017)46 b Fl(If)28 b Ff(x)h Fl(resides)e(in)g(the)h
(MOB)h(of)f Fh(O)s(R)1576 4672 y Fe(1)1641 4658 y Fl(and)f(has)i(not)f
(b)s(een)g(installed)e(y)m(et,)k(then)e Ff(y)g Fl(is)g(protected)h(b)m
(y)377 4827 y(the)i(prepare)f(records)g(in)f(the)h(log.)286
5071 y Fc(\017)46 b Fl(If)31 b Ff(x)g Fl(is)f(lo)s(cated)i(at)g
Fh(O)s(R)1204 5085 y Fe(1)1268 5071 y Fl(but)e(in)g(a)i(di\013eren)m(t)
e(partition,)h(then)f Ff(y)i Fl(is)e(protected)i(b)m(y)f(the)g(inlist)e
(of)377 5241 y(the)i(partition)e(b)s(eing)g(collected.)1905
5649 y(34)p eop
%%Page: 35 35
35 34 bop 312 1846 a @beginspecial 60 @llx 483 @lly 576
@urx 713 @ury 3960 @rwi @setspecial
%%BeginDocument: Idraw/unmod1.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.788462 68.9 526.519 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.788462 -307.733 526.519 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 242.778 543.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 59.778 543.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 100 952 ] concat
[
(FE)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 376 952 ] concat
[
(OR)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 305.778 469.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 138 912 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 381 834 ] concat
[
(Y)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122.5 757 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122.5 757 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 122.5 757 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 0.69145 22 623.4 ] concat
421 502 421 236 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 591 ] concat
303 300
305 252
346 241
3 BSpl
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 154 341 ] concat
166 527 188 505 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 154 341 ] concat
188 527 166 505 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 591 ] concat
131 304
243 241
349 230
3 BSpl
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.788462 455.9 526.519 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.788462 79.267 526.519 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 629.778 543.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 446.778 543.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 487 952 ] concat
[
(FE)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 763 952 ] concat
[
(OR)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 692.778 469.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 525 912 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 770 835 ] concat
[
(Y)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 757 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 757 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 757 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 409 591 ] concat
131 304
243 241
349 230
3 BSpl
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 409 392 ] concat
100 527 133 494 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 409 392 ] concat
133 527 100 494 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 465 326 ] concat
166 527 188 505 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 465 326 ] concat
188 527 166 505 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 21 506 ] concat
653 314 576 314 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 608 808 ] concat
[
(Invalidation)
(Message)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.75 598.2 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.85 598.263 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.85 598.35 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 246 698 ] concat
[
(FE-OR connection established)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -96 199 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 245.5 728.5 ] concat
[
(Object reference)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 201 199 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 543.5 729 ] concat
[
(FE-OR message)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 173 758 ] concat
[
(Legend)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -88.625 160 ] concat
244 515 753 604 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 318 911 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 707 910 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-BoldItalic 18 SetF
[ 1 0 0 1 89 985 ] concat
[
(Object X is modified at OR by another client)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-BoldItalic 18 SetF
[ 1 0 0 1 476 985 ] concat
[
(FE discards old version of X)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 863 2042 a Fl(Figure)30 b(4-3:)41 b(In)m(v)-5
b(alidation)29 b(of)i(an)f(ob)5 b(ject)31 b(in)m(v)m(olving)e(one)i(OR)
312 4811 y @beginspecial 60 @llx 291 @lly 577 @urx 594
@ury 3960 @rwi @setspecial
%%BeginDocument: Idraw/unmod2.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 68.9 313.795 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 -307.733 313.936 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 253.778 209.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 65.778 229.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 100 659 ] concat
[
(FE)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 267.778 362.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 142 596 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 343 729 ] concat
[
(Y)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 21 240 ] concat
653 314 576 314 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 608 542 ] concat
[
(Invalidation)
(Message)
] Text
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 21 276 ] concat
421 502 421 236 Line
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 68.9 446.795 ] concat
185 357 274 512 Rect
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 325 ] concat
313 265 323 381 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 164 141 ] concat
166 527 188 505 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 164 141 ] concat
188 527 166 505 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 375 791 ] concat
[
(OR1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 377 658 ] concat
[
(OR2)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 121.5 480 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 121.5 480 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 121.5 480 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 22 251 ] concat
138 354 310 464 Line
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 456.9 313.795 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 80.267 313.936 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 641.778 209.467 ] concat
108 479 22 22 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 453.778 229.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 488 659 ] concat
[
(FE)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 655.778 362.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 532 598 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 732 729 ] concat
[
(Y)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 456.9 446.795 ] concat
185 357 274 512 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 763 791 ] concat
[
(OR1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 765 658 ] concat
[
(OR2)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 480 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 480 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 480 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 410 251 ] concat
138 354 310 464 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 420 82 ] concat
100 527 133 494 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 420 82 ] concat
133 527 100 494 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 465 148 ] concat
166 527 188 505 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 465 148 ] concat
188 527 166 505 Line
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.75 332.2 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.85 332.263 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.85 332.35 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 246 432 ] concat
[
(FE-OR connection established)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -96 -67 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 245.5 462.5 ] concat
[
(Object reference)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 201 -67 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 543.5 463 ] concat
[
(FE-OR message)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 173 492 ] concat
[
(Legend)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -88.625 -106 ] concat
244 515 753 604 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-BoldItalic 18 SetF
[ 1 0 0 1 89 819 ] concat
[
(Object X is modified at OR2 by another client)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 329 575 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 717 576 ] concat
[
(X)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-BoldItalic 18 SetF
[ 1 0 0 1 476 819 ] concat
[
(FE discards old version of X)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 842 5007 a(Figure)f(4-4:)42 b(In)m(v)-5
b(alidation)29 b(of)h(an)g(ob)5 b(ject)32 b(in)m(v)m(olving)d(t)m(w)m
(o)i(ORs)1905 5649 y(35)p eop
%%Page: 36 36
36 35 bop 286 83 a Fc(\017)46 b Fl(If)41 b Ff(x)h Fl(is)f(lo)s(cated)h
(in)e(the)i(partition)e(b)s(eing)g(collected,)45 b(w)m(e)d(need)g(to)g
(analyze)g(whether)f Ff(x)h Fl(will)377 252 y(b)s(e)c(traced)i(during)c
(GC.)j(If)f(it)h(will)d(b)s(e)i(traced,)k(then)c Ff(y)h
Fl(is)f(protected)h(trivially)-8 b(.)64 b(Otherwise,)377
422 y(the)32 b(only)e(place)i(where)f(a)h(reference)f(to)i
Ff(x)e Fl(ma)m(y)h(exist)f(will)e(b)s(e)i(in)f(another)i(unmo)s
(di\014ed)c(ob)5 b(ject)377 591 y(cac)m(hed)34 b(in)e(the)h(FE.)g(And)f
(w)m(e)h(can)h(use)e(the)h(ab)s(o)m(v)m(e)h(argumen)m(t)g(recursiv)m
(ely)d(to)j(sho)m(w)e(that)i Ff(x)f Fl(is)377 760 y(not)e(accessible)f
(to)h(the)g(clien)m(t.)150 1062 y Fm(4.3.2)112 b(Omitting)38
b(Unconnected)g(FEs)150 1290 y Fl(Consider)33 b(the)h(FEs)h(that)g(are)
g(not)g(connected)g(to)g(an)g(OR)f Fh(O)s(R)2396 1304
y Fe(1)2460 1290 y Fl(doing)g(GC.)g(Supp)s(ose)f(one)i(of)f(these)150
1459 y(FEs)29 b(has)g(a)g(reference)g Ff(r)g Fl(when)f(the)h(ro)s(ot)h
(snapshot)e(is)g(tak)m(en)i(and)e Ff(r)h Fl(p)s(oin)m(ts)f(to)i(an)f
(ob)5 b(ject)29 b(in)f Fh(O)s(R)3585 1473 y Fe(1)3624
1459 y Fl(.)40 b(If)150 1629 y Ff(r)29 b Fl(is)f(con)m(tained)h(in)e
(an)i(unmo)s(di\014ed)c(ob)5 b(ject,)30 b(it)e(can)h(b)s(e)f(omitted)h
(\(Section)c(4.3.1\).)43 b(Otherwise,)28 b Ff(r)h Fl(is)e(in)150
1798 y(the)k(v)m(olatile)f(ro)s(ot)g(set)h(of)g(the)f(FE.)291
1968 y(The)24 b(FE)g(m)m(ust)g(ha)m(v)m(e)i(obtained)d
Ff(r)i Fl(from)f(an)g(ob)5 b(ject)25 b(from)f(another)g(OR)g
Fh(O)s(R)2907 1982 y Fe(2)2971 1968 y Fl(and)g(the)g(FE)g(m)m(ust)h(b)s
(e)150 2137 y(connected)30 b(to)g Fh(O)s(R)824 2151 y
Fe(2)864 2137 y Fl(.)40 b(The)29 b(OR)g(table)g(at)i
Fh(O)s(R)1760 2151 y Fe(1)1824 2137 y Fl(for)e Fh(O)s(R)2103
2151 y Fe(2)2167 2137 y Fl(m)m(ust)h(ha)m(v)m(e)g(had)f(an)g(en)m(try)h
Ff(r)g Fl(at)g(some)g(p)s(oin)m(t)150 2306 y(in)h(the)h(past.)45
b(If)31 b Ff(r)h Fl(is)f(not)h(in)f(the)h(OR)f(table)h(when)f(the)h
(snapshot)f(is)g(tak)m(en,)j(then)d(a)i(delete)f(message)150
2476 y(m)m(ust)d(ha)m(v)m(e)h(b)s(een)e(sen)m(t)i(from)e
Fh(O)s(R)1338 2490 y Fe(2)1402 2476 y Fl(to)i Fh(O)s(R)1653
2490 y Fe(1)1717 2476 y Fl(to)g(remo)m(v)m(e)g Ff(r)g
Fl(from)e(the)h(OR)g(table.)40 b(But)29 b(b)s(efore)g(sending)150
2645 y(suc)m(h)j(a)g(delete)h(message,)h Fh(O)s(R)1217
2659 y Fe(2)1281 2645 y Fl(m)m(ust)e(ha)m(v)m(e)i(ask)m(ed)f(all)e(its)
g(connected)i(FEs)g(whether)e Ff(r)i Fl(is)e(presen)m(t)h(in)150
2814 y(their)23 b(v)m(olatile)h(ro)s(ot)g(set.)39 b(Since)23
b Ff(r)h Fl(is)f(presen)m(t)h(at)h(the)f(v)m(olatile)g(ro)s(ot)g(set,)i
Fh(O)s(R)2782 2828 y Fe(2)2846 2814 y Fl(will)21 b(not)j(send)g(the)g
(delete)150 2984 y(message.)41 b(This)26 b(is)i(a)g(con)m(tradiction.)
40 b(Therefore,)29 b(the)f(OR)g(table)g(at)h Fh(O)s(R)2721
2998 y Fe(1)2785 2984 y Fl(m)m(ust)f(ha)m(v)m(e)h(an)f(en)m(try)h(for)f
Ff(r)150 3153 y Fl(when)d(the)i(snapshot)e(is)h(tak)m(en)h(and)f(the)g
(ob)5 b(ject)27 b(referenced)f(b)m(y)g Ff(r)h Fl(will)c(b)s(e)j
(protected)h(from)f(collection.)291 3322 y(Figure)f(4-5)31
b(illustrates)d(the)j(ab)s(o)m(v)m(e)g(argumen)m(t.)41
b Fh(O)s(R)2141 3336 y Fe(2)2205 3322 y Fl(has)30 b(p)s(erformed)f(GC)h
(and)g(disco)m(v)m(ered)g(that)150 3492 y(it)e(do)s(es)f(not)i(hold)d
(a)j(reference)f(to)h(ob)5 b(ject)29 b Ff(y)f Fl(an)m(ymore.)40
b(Ho)m(w)m(ev)m(er,)31 b(b)s(efore)d(sending)e(a)j(delete)f(message)150
3661 y(to)k Fh(O)s(R)403 3675 y Fe(1)443 3661 y Fl(,)g(it)f(\014rst)f
(sends)h(a)h(query)f(message)i(to)f(all)e(connected)j(FEs.)44
b(One)31 b(of)h(the)f(FEs)h(informs)e Fh(O)s(R)3711 3675
y Fe(2)150 3831 y Fl(that)h(it)f(still)e(con)m(tains)j(a)f(reference)h
(to)g Ff(y)p Fl(.)41 b(As)31 b(a)f(result,)g(the)g(delete)h(message)h
(will)27 b(not)k(b)s(e)f(sen)m(t.)150 4192 y Fr(4.4)137
b(Incremen)l(tal)47 b(Ro)t(ot)f(Generation)150 4451 y
Fl(It)37 b(is)f(exp)s(ensiv)m(e)h(to)h(stop)f(all)f(ORs)g(and)h(FEs)g
(and)g(generate)h(the)g(ro)s(ots)f(atomically)-8 b(.)61
b(In)36 b(fact,)k(it)d(is)150 4620 y(not)h(necessary)g(to)g(do)f(this.)
61 b(W)-8 b(e)38 b(presen)m(t)g(an)f(incremen)m(tal)g(ro)s(ot)h
(generation)f(sc)m(heme)i(that)f(allo)m(ws)150 4790 y(concurren)m(t)28
b(ob)5 b(ject)29 b(fetc)m(hes)h(and)d(transaction)i(commits)f(during)e
(ro)s(ot)i(generation.)40 b(There)28 b(are)h(three)150
4959 y(steps)h(for)g(the)h(ro)s(ot)g(generation)f(sc)m(heme:)150
5203 y Fk(Step)35 b(1:)92 b Fl(F)-8 b(rom)31 b(this)e(p)s(oin)m(t)g(on)
h(un)m(til)f(the)i(end)e(of)i(ro)s(ot)f(generation,)h(no)f(en)m(tries)h
(are)f(allo)m(w)m(ed)h(to)g(b)s(e)377 5373 y(deleted)e(from)f(the)h(p)s
(ersisten)m(t)f(ro)s(ots.)40 b(The)28 b(p)s(ersisten)m(t)g(ro)s(ot)h
(set)g(includes)e(the)h(OR)h(tables,)g(the)1905 5649
y(36)p eop
%%Page: 37 37
37 36 bop 150 2112 a @beginspecial 53 @llx 291 @lly 610
@urx 601 @ury 4320 @rwi @setspecial
%%BeginDocument: Idraw/unmod3.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 60.9 313.795 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 -315.733 313.936 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 57.778 229.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 92 659 ] concat
[
(FE)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 253.778 358.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 329 727 ] concat
[
(Y)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 -377 249 ] concat
653 314 576 314 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.04461 22 270.39 ] concat
421 502 421 236 Line
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 60.9 446.795 ] concat
185 357 274 512 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 367 791 ] concat
[
(OR1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 369 658 ] concat
[
(OR2)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 113.5 480 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 113.5 480 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 113.5 480 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 136 598 ] concat
[
(Z)
] Text
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 14 325 ] concat
134 280
200 372
303 392
3 BSpl
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 240.778 213.467 ] concat
108 479 22 22 Elli
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 14 325 ] concat
301 268
289 342
309 383
3 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 316 581 ] concat
[
(X)
] Text
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 206 62 ] concat
100 527 133 494 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 206 62 ] concat
133 527 100 494 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 132 143 ] concat
166 527 188 505 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 132 143 ] concat
188 527 166 505 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 203 552 ] concat
[
(Query for )
(Reference to Y)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 456.9 313.795 ] concat
185 357 274 512 Rect
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 80.267 313.936 ] concat
318 357 407 512 Rect
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 453.778 229.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 488 659 ] concat
[
(FE)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.755556 0 0 0.755556 649.778 358.467 ] concat
108 479 22 22 Elli
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 725 727 ] concat
[
(Y)
] Text
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 19 249 ] concat
653 314 576 314 Line
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.24444 0 0 0.641026 456.9 446.795 ] concat
185 357 274 512 Rect
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 763 791 ] concat
[
(OR1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 765 658 ] concat
[
(OR2)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 480 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 480 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 509.5 480 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 532 598 ] concat
[
(Z)
] Text
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 410 325 ] concat
134 280
200 372
303 392
3 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 598 553 ] concat
[
(FE has)
(reference to Y)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.75 332.2 ] concat
211 290
189 268
211 246
211 290
4 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.85 332.263 ] concat
287 290
287 246
311 268
287 290
287 290
5 Poly
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.35 0 0 0.35 106.85 332.35 ] concat
211 280
287 280
287 258
221 258
211 258
211 280
221 280
7 Poly
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 246 432 ] concat
[
(FE-OR connection established)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 349.5 193.375 ] concat
244 538 244 516 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 350 193.25 ] concat
244 516 266 527 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 350 193.5 ] concat
266 527 244 538 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.604478 0 0 0.5 323.134 193.5 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 545.5 462 ] concat
[
(Entry in OR table)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -96 -67 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 245.5 462.5 ] concat
[
(Object reference)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 203 -99 ] concat
266 527 321 527 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 545.5 431 ] concat
[
(FE-OR message)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 173 492 ] concat
[
(Legend)
] Text
End

Begin %I Rect
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.06275 0 0 1 -103.935 -106 ] concat
244 515 753 604 Rect
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 523 458 ] concat
244 538 244 516 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 523 458 ] concat
244 516 266 527 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 522.5 458.25 ] concat
266 527 244 538 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.604478 0 0 0.5 550.213 458.25 ] concat
266 527 321 527 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 113.375 342.875 ] concat
278 432 278 332 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-BoldItalic 18 SetF
[ 1 0 0 1 475.375 825.875 ] concat
[
(FE contains a reference to Y in its volatile roots.)
(The entry for Y in OR table will not be deleted.)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 919 458 ] concat
244 538 244 516 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 919 458 ] concat
244 516 266 527 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 918.5 458.25 ] concat
266 527 244 538 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.604478 0 0 0.5 946.213 458.25 ] concat
266 527 321 527 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 509.375 342.875 ] concat
278 432 278 332 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-BoldItalic 18 SetF
[ 1 0 0 1 78.375 829.875 ] concat
[
(The only reference to Y from OR2 is removed.)
(OR2 sends query message to connected FEs)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.660906 0 0 0.5 305.767 216.5 ] concat
266 527 321 527 Line
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.125 0 0 0.125 457.875 420.125 ] concat
110 518
110 432
187 479
111 518
4 Poly
End

Begin %I Text
0 0 0 SetCFg
/Times-Italic 14 SetF
[ 1 0 0 1 543.5 486 ] concat
[
(Entry in remote outlist)
] Text
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.125 0 0 0.125 377.375 558.125 ] concat
110 518
110 432
187 479
111 518
4 Poly
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.05155 -91.5 23.1392 ] concat
482 589 482 493 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 210.5 375.5 ] concat
384 486 424 486 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -13 0 0 0.507389 5921 370.379 ] concat
423 491 423 693 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 210.5 375.5 ] concat
423 694 383 694 Line
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.125 0 0 0.125 774.375 560.125 ] concat
110 518
110 432
187 479
111 518
4 Poly
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.05155 306 23.1392 ] concat
482 589 482 493 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 607.5 377.5 ] concat
384 486 424 486 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -0.5 0 0 0.5 920 458 ] concat
244 538 244 516 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 607.5 375.5 ] concat
423 694 383 694 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -13 0 0 0.507389 6319.5 370.379 ] concat
423 491 423 693 Line
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 557 2307 a Fl(Figure)30 b(4-5:)41 b(Protection)31
b(of)g(references)g(in)e(unconnected)h(FEs)g(b)m(y)h(OR)e(tables)377
2674 y(log,)40 b(and)d(the)h(inlist)d(of)i(p.)62 b(New)38
b(en)m(tries)f(are)h(still)e(allo)m(w)m(ed)h(to)h(b)s(e)f
Ff(adde)-5 b(d)40 b Fl(to)e(the)g(p)s(ersisten)m(t)377
2843 y(ro)s(ots.)150 3087 y Fk(Step)d(2:)92 b Fl(The)26
b(OR)g(sends)f(a)i(ro)s(ot-request)g(message)g(to)g(eac)m(h)h
(connected)f(FE.)g(Eac)m(h)g(FE)f(returns)g(its)377 3257
y(v)m(olatile)k(ro)s(ot)h(set,)g(whic)m(h)e(is)h(added)g(to)h(the)f(ro)
s(ot)h(set.)150 3501 y Fk(Step)k(3:)92 b Fl(After)28
b(the)f(OR)g(has)h(receiv)m(ed)g(resp)s(onses)e(from)h(all)f(connected)
j(FEs,)f(the)g(OR)f(obtains)g(the)377 3670 y(p)s(ersisten)m(t)34
b(ro)s(ots)h(in)e(the)i(follo)m(wing)e(order:)49 b(ro)s(ot)35
b(directory)f(ob)5 b(ject,)37 b(inlist)32 b(of)i(p,)i(OR)e(tables,)377
3839 y(en)m(tries)c(in)f(the)i(log.)150 4141 y Fm(4.4.1)112
b(Correctness)150 4369 y Fl(It)31 b(is)g(crucial)f(for)h(correctness)h
(to)g(request)f(the)h(v)m(olatile)f(ro)s(ots)g(from)g(FEs)g(b)s(efore)g
(scanning)f(the)i(p)s(er-)150 4538 y(sisten)m(t)d(ro)s(ots.)40
b(T)-8 b(o)29 b(see)g(wh)m(y)g(this)e(is)h(the)h(case,)h(supp)s(ose)d
(the)i(collector)g(instead)f(scans)h(the)g(p)s(ersisten)m(t)150
4708 y(ro)s(ots)e(b)s(efore)e(requesting)h(v)m(olatile)g(ro)s(ots)h
(from)f(FE.)g(Then)g(the)g(follo)m(wing)f(erroneous)h(scenario)g(migh)m
(t)150 4877 y(o)s(ccur:)43 b(An)32 b(FE)f(cac)m(hes)j(and)d(mo)s
(di\014es)f(an)h(ob)5 b(ject)33 b Ff(x)f Fl(to)g(hold)f(the)g(only)g
(reference)i(to)f(ob)5 b(ject)33 b Ff(y)p Fl(.)44 b(The)150
5047 y(collector)28 b(scans)g(all)f(the)h(p)s(ersisten)m(t)f(ro)s(ots)h
(and)f(do)s(es)g(not)h(\014nd)f(an)m(y)h(reference)g(to)h
Ff(y)p Fl(.)40 b(Then)26 b(the)i(clien)m(t)150 5216 y(commits)e(the)h
(transaction,)h(whic)m(h)d(mak)m(es)j(the)e(mo)s(di\014cation)f(to)j
Ff(x)e Fl(p)s(ersisten)m(t)g(and)g(terminates)g(after)150
5385 y(the)35 b(commit.)55 b(The)34 b(collector)i(no)m(w)f(sends)f(out)
h(ro)s(ot-request)h(messages)g(to)g(FEs.)55 b(Ho)m(w)m(ev)m(er,)38
b(it)d(will)1905 5649 y(37)p eop
%%Page: 38 38
38 37 bop 150 83 a Fl(nev)m(er)36 b(receiv)m(e)h(a)f(reference)h(to)g
Ff(y)f Fl(as)g(a)g(ro)s(ot)g(b)s(ecause)g(the)h(clien)m(t)e(has)h
(terminated)f(already)-8 b(.)58 b(Th)m(us,)150 252 y(ob)5
b(ject)31 b Ff(y)g Fl(will)c(b)s(e)j(collected)h(incorrectly)-8
b(.)291 422 y(This)27 b(sc)m(heme)j(also)f(dep)s(ends)e(on)h(the)h
(fact)h(that)g(the)f(clien)m(ts)f(in)g(Thor)g(cannot)h(comm)m(unicate)h
(and)150 591 y(ship)f(mo)s(di\014ed)g(ob)5 b(jects)32
b(or)g(ob)5 b(ject)32 b(references)f(directly)-8 b(.)43
b(Ob)5 b(ject)31 b(up)s(dates)f(m)m(ust)i(b)s(e)e(stored)i(at)g(ORs)150
760 y(b)s(efore)e(another)h(clien)m(t)f(can)g(observ)m(e)h(them.)291
930 y(The)24 b(k)m(ey)h(correctness)h(condition)d(for)h(the)h(ro)s(ot)g
(generation)f(sc)m(heme)i(is)d(that)i(if)f(an)g(FE)h(\(connected)150
1099 y(or)33 b(unconnected\))h(obtains)f(a)h Ff(new)f
Fl(ro)s(ot)h(p)s(oin)m(ting)e(in)m(to)h(partition)f(p)h(after)h(Step)25
b(1,)35 b(then)e(either)g(the)150 1269 y(ro)s(ot)38 b(p)s(oin)m(ts)f
(to)h(a)g(newly-p)s(ersisten)m(t)e(ob)5 b(ject)38 b(or)g(the)g(ro)s(ot)
g(m)m(ust)g(b)s(e)f(part)g(of)h(the)g(p)s(ersisten)m(t)f(ro)s(ots)150
1438 y(b)s(efore)30 b(Step)25 b(3)30 b(b)s(egins.)291
1607 y(If)g(the)g(new)g(v)m(olatile)g(ro)s(ot)h(p)s(oin)m(ts)e(to)i(a)f
(newly-p)s(ersisten)m(t)f(ob)5 b(ject,)31 b(the)g(newly-p)s(ersisten)m
(t)d(ob)5 b(ject)150 1777 y(will)30 b(b)s(e)j(app)s(ended)e(to)j(the)f
(log)g(and)f(en)m(tered)i(in)d(the)j(MOB)f(when)f(the)h(transaction)g
(commits.)48 b(The)150 1946 y(newly-p)s(ersisten)m(t)39
b(ob)5 b(jects)42 b(will)c(surviv)m(e)i(the)i(collection)e(b)s(ecause)h
(ob)5 b(jects)42 b(in)e(the)h(MOB)g(are)h(not)150 2115
y(garbage)32 b(collected.)291 2285 y(Otherwise,)38 b(the)f(FE)h(m)m
(ust)f(ha)m(v)m(e)h(copied)e(the)i(reference)f Ff(r)h
Fl(from)e(an)h Ff(unmo)-5 b(di\014e)g(d)40 b Fl(ob)5
b(ject)38 b(in)e(its)150 2454 y(cac)m(he.)42 b(If)29
b(that)h(ob)5 b(ject)30 b(is)f(already)g(in)f(the)i(cac)m(he)h(when)d
(GC)h(b)s(egins,)g(Section)24 b(4.3.1)32 b(sho)m(ws)d(that)h(it)f(is)
150 2623 y(ok)-5 b(a)m(y)31 b(to)f(ignore)f(this)g(reference.)40
b(Otherwise,)29 b(the)h(reference)g Ff(r)g Fl(m)m(ust)f(exist)g
(somewhere)h(in)e(the)i(Thor)150 2793 y(system)g(when)f(GC)h(b)s
(egins.)39 b(Either)29 b(the)i(reference)f(is)f(in)g(the)h(v)m(olatile)
g(ro)s(ots)h(of)f(an)g(FE)g(or)g(there)g(is)g(a)150 2962
y(liv)m(e)g(ob)5 b(ject)31 b(con)m(taining)f(the)g(reference)h
Ff(r)g Fl(at)g(some)g(OR.)291 3132 y(Consider)e(the)h(former)g(case:)
286 3389 y Fc(\017)46 b Fl(If)28 b(the)h(FE)g(is)f(connected)h(to)g
(the)g(OR,)g(the)f(collector)i(w)m(ould)d(obtain)h(the)h(reference)g
Ff(r)g Fl(as)g(a)g(ro)s(ot)377 3558 y(when)h(it)g(requests)g(v)m
(olatile)g(ro)s(ots)h(from)e(the)i(FE)g(in)e(Step)h(2.)286
3799 y Fc(\017)46 b Fl(Otherwise,)27 b(the)h(reference)f
Ff(r)h Fl(is)e(protected)j(b)m(y)e(the)g(OR)g(tables)g(b)s(ecause)h(of)
f(the)h(second)f(in)m(v)-5 b(ari-)377 3968 y(an)m(t)30
b(for)e(OR)g(tables)g(\(Section)d(4.2\).)42 b(No)29 b(en)m(tries)f(are)
h(remo)m(v)m(ed)h(from)e(the)h(OR)f(tables)g(after)h(GC)377
4137 y(b)s(egins.)39 b(So)31 b(the)f(collector)h(w)m(ould)e(obtain)h
Ff(r)h Fl(when)e(it)h(scans)g(the)h(OR)f(tables.)291
4394 y(F)-8 b(or)31 b(the)g(latter)g(case:)286 4651 y
Fc(\017)46 b Fl(If)39 b(the)g(ob)5 b(ject)41 b(b)s(elongs)d(to)i(a)f
(di\013eren)m(t)g(OR,)g(then)g Ff(r)g Fl(is)g(in)e(the)j(OR)f(table.)67
b(No)40 b(en)m(tries)f(are)377 4821 y(remo)m(v)m(ed)34
b(from)f(the)g(OR)f(tables)h(after)g(GC)g(b)s(egins.)47
b(So)32 b(the)h(collector)h(w)m(ould)d(obtain)i Ff(r)g
Fl(when)377 4990 y(it)d(scans)h(the)f(OR)g(tables.)286
5231 y Fc(\017)46 b Fl(If)40 b(the)h(ob)5 b(ject)42 b(resides)d(in)g
(the)i(MOB)g(of)g(the)f(same)h(OR)f(and)g(has)h(not)f(b)s(een)g
(installed)f(y)m(et,)377 5400 y(reference)d Ff(r)f Fl(is)f(protected)i
(b)m(y)f(the)g(prepare)g(records)f(in)g(the)h(log,)i(whic)m(h)d(will)e
(b)s(e)i(scanned)h(b)m(y)1905 5649 y(38)p eop
%%Page: 39 39
39 38 bop 377 83 a Fl(the)31 b(the)f(collector)h(in)e(Step)h(3.)286
327 y Fc(\017)46 b Fl(If)35 b(the)h(ob)5 b(ject)37 b(b)s(elongs)d(to)i
(a)g(di\013eren)m(t)f(partition)g(in)f(the)i(same)f(OR,)h(then)f
Ff(r)h Fl(is)f(in)f(the)i(inlist)377 496 y(of)c(p.)44
b(No)33 b(en)m(tries)e(are)h(remo)m(v)m(ed)h(from)e(the)h(inlist)d
(after)k(GC)e(b)s(egins.)43 b(So)32 b(the)g(collector)g(w)m(ould)377
666 y(obtain)e Ff(r)h Fl(when)e(it)h(scans)g(the)h(inlist.)286
910 y Fc(\017)46 b Fl(If)37 b(the)g(ob)5 b(ject)37 b(b)s(elongs)f(to)i
(the)f(same)g(partition,)g(the)g(reference)g Ff(r)g Fl(is)f(protected)i
(b)m(y)f(tracing.)377 1079 y(This)27 b(is)g(b)s(ecause)i(when)e(GC)h(b)
s(egins,)g(the)g(ob)5 b(ject)30 b(is)d(liv)m(e)h(\(or)h(the)f(FE)h(w)m
(on't)g(b)s(e)f(able)f(to)j(access)377 1249 y(it\))25
b(and)e(will)f(remain)i(so)g(b)s(ecause)h(mo)s(di\014cations)d(are)j
(not)g(installed)d(while)h(the)h(partition)f(b)s(eing)377
1418 y(collected.)291 1687 y(F)-8 b(or)36 b(the)f(prepare)f(records)h
(in)f(the)h(log,)h(it)f(is)f(not)h(necessary)g(to)h(scan)f(the)g(en)m
(tire)g(log)g(for)f(ro)s(ots.)150 1856 y(Instead,)29
b(the)g(collector)g(only)e(needs)h(to)i(scan)e(all)g(the)g(records)g
(from)g(the)h(b)s(eginning)d(of)j(the)f(log)h(up)e(to)150
2026 y(the)j(p)s(oin)m(t)f(when)g(the)h(OR)f(receiv)m(es)i(all)d
(replies)h(for)g(the)h(ro)s(ot-request)h(messages.)41
b(An)m(y)30 b(new)g(prepare)150 2195 y(records)f(app)s(ended)f(after)i
(that)g(p)s(oin)m(t)f(only)f(con)m(tain)i(ro)s(ots)g(that)g(either)f(p)
s(oin)m(ts)g(to)h(newly-p)s(ersisten)m(t)150 2364 y(ob)5
b(jects)24 b(\(whic)m(h)f(are)h(not)g(collected\))h(or)e(to)i(ob)5
b(jects)24 b(that)h(are)f(already)f(protected)i(b)m(y)e(the)h(ro)s(ot)g
(en)m(tities)150 2534 y(scanned.)1905 5649 y(39)p eop
%%Page: 40 40
40 39 bop 150 809 a Fg(Chapter)66 b(5)150 1349 y Fj(In)-7
b(ter-P)g(artition)81 b(Reference)d(Lists)150 1905 y
Fr(5.1)137 b(I/O)46 b(Ov)l(erhead)g(for)f(IRL)h(Up)t(dates)150
2165 y Fl(The)24 b(IRLs)g(ha)m(v)m(e)h(to)g(b)s(e)f(main)m(tained)f(p)s
(ersisten)m(tly)g(b)s(ecause)h(recomputing)g(them)g(after)h(serv)m(er)g
(crashes)150 2334 y(w)m(ould)36 b(require)f(scanning)h
Ff(al)5 b(l)38 b Fl(the)f(ob)5 b(jects)37 b(in)f(the)h(database.)62
b(This)35 b(mak)m(es)j(the)f(reco)m(v)m(ery)h(pro)s(cess)150
2503 y(to)s(o)31 b(exp)s(ensiv)m(e)f(and)f(slo)m(w.)291
2673 y(Sp)s(ecial)h(system)h(ob)5 b(jects)32 b(are)f(used)g(to)h(store)
f(the)h(inlists)c(and)j(outlists)f(in)g(the)h(disk.)41
b(Dep)s(ending)150 2842 y(on)26 b(the)g(n)m(um)m(b)s(er)f(of)h(in)m
(ter-partition)f(references)h(in)f(an)h(OR,)g(the)g(total)h(size)f(of)g
(the)g(IRLs)g(can)g(b)s(e)g(quite)150 3012 y(large.)41
b(Hence,)31 b(it)f(is)g(not)g(practical)g(to)h(cac)m(he)h(all)e(IRLs)f
(in)g(the)i(main)e(memory)-8 b(.)291 3181 y(In)28 b(a)g(naiv)m(e)h
(implemen)m(tation,)e(ev)m(ery)i(time)f(the)h(OR)e(needs)h(to)h
(incremen)m(t)f(or)g(decremen)m(t)h(a)g(refer-)150 3350
y(ence)i(coun)m(t)g(for)f(an)g(oref,)h(it)f(has)g(to)h(fetc)m(h)g(the)f
(corresp)s(onding)f(inlist,)f(mak)m(e)j(the)f(c)m(hange,)i(and)e(write)
150 3520 y(it)37 b(bac)m(k)h(to)g(disk.)61 b(During)36
b(the)h(ob)5 b(ject)39 b(installation)c(of)j(a)g(partition)e(p,)j(the)e
(OR)g(has)g(to)h(fetc)m(h)h(the)150 3689 y(outlist)e(of)h(p)f(to)h
(determine)f(whether)g(a)h(new)f(in)m(ter-partition)f(reference)j(is)d
(encoun)m(tered.)64 b(It)37 b(ma)m(y)150 3858 y(also)26
b(need)f(to)h(up)s(date)f(the)h(outlist)f(as)h(w)m(ell)e(as)i(inlists)d
(of)j(other)g(partitions.)38 b(All)24 b(of)i(these)g(up)s(dates)f(can)
150 4028 y(p)s(oten)m(tially)35 b(generate)i(a)f(large)g(n)m(um)m(b)s
(er)f(of)h(disk)e(reads)i(and)f(writes,)i(whic)m(h)d(raises)h(a)i(p)s
(erformance)150 4197 y(issue.)i(In)27 b(this)g(c)m(hapter)i(w)m(e)f
(presen)m(t)g(an)g(optimization)f(that)i(reduces)f(the)g(n)m(um)m(b)s
(er)f(of)h(I/Os)g(required)150 4366 y(to)j(mo)s(dify)e(the)h(IRLs.)150
4728 y Fr(5.2)137 b(Deferred)46 b(IRL)g(Op)t(erations)150
4987 y Fl(The)22 b(basic)h(idea)f(b)s(ehind)e(this)i(optimized)f(sc)m
(heme)j(is)e(to)i(dela)m(y)e(the)h(up)s(dates)f(to)i(the)f(IRLs)f(b)m
(y)h(queueing)150 5156 y(the)34 b(IRL)g(op)s(erations)g(to)g(b)s(e)g(p)
s(erformed.)51 b(The)33 b(queued)h(IRL)g(op)s(erations)f(are)i(stored)f
(in)f(the)h(stable)150 5326 y(log)e(and)g(are)g(pro)s(cessed)g(in)f(a)h
(batc)m(h)h(later.)46 b(By)33 b(dela)m(ying)e(these)i(op)s(erations,)f
(the)g(OR)g(can)g(p)s(erform)1905 5649 y(40)p eop
%%Page: 41 41
41 40 bop 150 83 a Fl(re-ordering)33 b(of)i(op)s(erations)e(to)i
(reduce)f(the)h(n)m(um)m(b)s(er)e(of)h(I/Os)g(pro)m(vided)f(the)h
(re-ordering)g(do)s(es)g(not)150 252 y(violate)c(the)h(correctness)g
(or)g(consistency)f(of)g(IRLs.)291 422 y(There)45 b(are)g(three)g
(kinds)e(of)i(IRL)f(op)s(erations)h(that)g(need)g(to)h(b)s(e)e(queued.)
83 b(Their)44 b(seman)m(tics)150 591 y(is)37 b(summarized)g(in)g
(Figure)24 b(5.2.)65 b(F)-8 b(or)39 b(eac)m(h)g(op)s(eration,)h(the)f
(\\requires")e(clause)h(sp)s(eci\014es)f(the)h(pre-)150
760 y(condition)30 b(of)i(the)g(op)s(eration.)45 b(The)31
b(\\mo)s(di\014es")g(clause)g(sp)s(eci\014es)g(whic)m(h)f(IRL)i(is)e
(up)s(dated,)i(and)f(the)150 930 y(\\e\013ects")26 b(clause)e(sp)s
(eci\014es)f(what)h(will)e(b)s(e)h(up)s(dated)g(when)h(the)g(op)s
(eration)g(is)f(pro)s(cessed)g(at)i(some)g(later)150
1099 y(time.)291 1269 y(The)31 b Fd(IncrCount)d Fl(and)i
Fd(DecrCount)f Fl(op)s(erations)h(are)h(used)f(b)m(y)h(the)g(garbage)i
(collector)e(to)h(c)m(hange)150 1438 y(the)21 b(reference)h(coun)m(t)g
(of)f(an)g(inlist)e(en)m(try)-8 b(.)38 b(The)21 b Fd(InterRef)e
Fl(op)s(erations)h(are)i(used)e(when)g(in)m(ter-partition)150
1607 y(references)35 b(are)h(encoun)m(tered)f(during)e(ob)5
b(ject)36 b(installation.)52 b(The)35 b Fd(IncrCount)d
Fl(op)s(erations)j(are)g(also)150 1777 y(used)26 b(when)g(the)h
Fd(InterRef)d Fl(op)s(erations)i(are)h(pro)s(cessed.)39
b(More)28 b(detail)e(can)h(b)s(e)f(found)f(in)h(Section)f(5.4.)377
2253 y Fb(IncrCount\(P)m(a)m(rtition)k(p,)c(Oref)g(x\))377
2366 y(//)51 b Fk(Requires)p Fa(:)26 b(ob)5 b(ject)26
b(x)f(resides)f(in)f(partition)h(p)377 2478 y Fb(//)51
b Fk(Mo)s(di\014es)p Fa(:)26 b(inlist)c(of)j(p)377 2591
y Fb(//)51 b Fk(E\013ects)p Fa(:)f(Incremen)m(t)25 b(the)g(reference)h
(coun)m(t)f(of)g(x)g(b)m(y)g(1)377 2817 y Fb(DecrCount\(P)m(a)m
(rtition)k(p,)c(Oref)g(x\))377 2930 y(//)51 b Fk(Requires)p
Fa(:)26 b(ob)5 b(ject)26 b(x)f(resides)f(in)f(partition)h(p)377
3043 y Fb(//)51 b Fk(Mo)s(di\014es)p Fa(:)26 b(inlist)c(of)j(p)377
3156 y Fb(//)51 b Fk(E\013ects)p Fa(:)f(Decremen)m(t)27
b(the)e(reference)g(coun)m(t)h(of)f(x)g(b)m(y)g(1)377
3382 y Fb(InterRef\(P)m(a)m(rtition)j(p,)d(Oref)g(x\))377
3495 y(//)51 b Fk(Requires)p Fa(:)26 b(ob)5 b(ject)26
b(x)f(do)s(es)f(not)i(reside)e(in)f(partition)h(p)377
3608 y Fb(//)51 b Fk(Mo)s(di\014es)p Fa(:)26 b(outlist)e(of)h(p)377
3720 y Fb(//)51 b Fk(E\013ects)p Fa(:)f(If)25 b(outlist)e(of)j(p)e(con)
m(tains)h(x,)g(do)g(nothing.)f(Otherwise,)g(add)h(x)377
3833 y Fb(//)432 b Fa(to)26 b(the)f(outlist)f(and)g(replace)h(this)f
(op)s(eration)g(with)g(an)377 3946 y Fb(//)432 b Fa(IncrCoun)m(t\(q,)25
b(x\))g(op)s(eration,)g(where)f(q)h(is)f(the)h(partition)f(that)377
4059 y Fb(//)432 b Fa(con)m(tains)25 b(the)g(ob)5 b(ject)26
b(named)f(b)m(y)g(x)1261 4401 y Fl(Figure)30 b(5-1:)41
b(IRL)30 b(up)s(date)g(op)s(erations)291 4770 y(One)i(p)s(oten)m(tial)f
(problem)f(with)h(dela)m(ying)g(the)h(IRL)g(op)s(erations)f(is)g(that)h
(the)g(states)h(of)f(the)h(IRLs)150 4939 y(are)g(not)g(up-to-date)h
(unless)c(there)j(are)g(no)g(p)s(ending)d(IRL)i(op)s(erations)g
(queued.)47 b(In)31 b(the)i(OR,)g(up-to-)150 5109 y(date)g(states)g(of)
g(IRLs)e(are)i(only)e(needed)h(when)g(the)g(OR)g(is)f(ab)s(out)h(to)h
(p)s(erform)e(GC.)h(In)g(Section)25 b(5.5,)150 5278 y(w)m(e)i(will)e
(describ)s(e)g(a)i(sc)m(heme)h(to)f(obtain)g(a)g(conserv)-5
b(ativ)m(e)28 b(estimate)f(of)g(IRLs)f(that)i(is)e(accurate)i(enough)
1905 5649 y(41)p eop
%%Page: 42 42
42 41 bop 150 83 a Fl(for)26 b(GC)g(purp)s(oses.)37 b(As)26
b(a)h(result,)f(it)g(is)f(not)h(crucial)f(to)i(alw)m(a)m(ys)f(main)m
(tain)f(IRL)h(states)h(up-to-date)h(and)150 252 y(this)h(allo)m(ws)h
(the)h(OR)e(to)j(dela)m(y)e(pro)s(cessing)f(IRL)h(op)s(erations.)150
614 y Fr(5.3)137 b(Re-ordering)46 b(of)f(IRL)h(Op)t(erations)150
873 y Fl(W)-8 b(e)34 b(argue)e(that)i(giv)m(en)e(a)h(sequence)g(of)f
Fd(IncrCount)p Fl(,)f Fd(DecrCount)p Fl(,)g Fd(InterRef)f
Fl(op)s(erations,)i(the)h Ff(\014nal)150 1042 y Fl(states)c(of)e(the)h
(IRLs)f(after)h(pro)s(cessing)e(all)h(the)g(op)s(erations)g(in)f(the)i
(sequence)g(are)g Ff(indep)-5 b(endent)29 b Fl(of)f(the)150
1212 y(order)i(in)f(whic)m(h)g(the)i(OR)f(pro)s(cesses)g(those)h(op)s
(erations.)291 1381 y(Consider)f(the)h Fd(IncrCount)e
Fl(and)i Fd(DecrCount)e Fl(op)s(erations.)44 b(The)30
b(outcomes)j(of)f(these)g(op)s(erations)150 1550 y(do)e(not)h(dep)s
(end)e(on)h(an)m(y)h Fd(InterRef)e Fl(op)s(erations.)40
b(These)30 b(op)s(erations)g(on)h(di\013eren)m(t)f(inlist)e(en)m(tries)
i(do)150 1720 y(not)24 b(a\013ect)i(one)e(another.)39
b(F)-8 b(or)25 b(op)s(erations)e(on)h(the)h(same)f(inlist)d(en)m(try)-8
b(,)27 b(they)d(can)g(b)s(e)g(freely)f(re-ordered)150
1889 y(pro)m(vided)29 b(a)i(negativ)m(e)h(reference)f(coun)m(t)g
(cannot)h(o)s(ccur.)41 b(In)30 b(our)g(implemen)m(tation,)f(the)i(OR)f
(is)g(going)150 2058 y(to)35 b(pro)s(cess)g Fd(IncrCount)d
Fl(and)i Fd(DecrCount)e Fl(op)s(erations)i(of)h(the)g(same)g(ob)5
b(ject)35 b(in)f(the)g(same)i(order)e(as)150 2228 y(they)d(are)f
(queued.)40 b(As)31 b(a)f(result,)g(a)h(negativ)m(e)g(reference)g(coun)
m(t)g(will)d(nev)m(er)i(app)s(ear)g(in)f(the)i(inlists.)291
2397 y(No)m(w)d(consider)f(the)h Fd(InterRef)d Fl(op)s(erations.)39
b(An)27 b Fd(InterRef\(p,)22 b(x\))27 b Fl(op)s(eration)g(has)g(t)m(w)m
(o)i(p)s(ossible)150 2567 y(outcomes,)38 b(dep)s(ending)33
b(on)i(whether)g Ff(x)h Fl(is)e(presen)m(t)i(in)e(the)h(curren)m(t)g
(state)i(of)f(the)f(outlist)g(of)g(p.)56 b(W)-8 b(e)150
2736 y(need)25 b(to)h(ensure)e(that)i(the)f(same)h(outcome)g(is)e
(generated)i(in)e(the)i(re-ordered)f(sequence)g(of)g(op)s(erations.)150
2905 y(Note)39 b(that)f Fd(InterRef)e Fl(is)g(the)i Ff(only)h
Fl(op)s(eration)e(that)h(can)g(mo)s(dify)e(the)i(outlists.)61
b(As)38 b(a)g(result,)h(the)150 3075 y(outcome)c(of)e(an)h
Fd(InterRef)d Fl(op)s(eration)i(will)d(not)k(b)s(e)f(a\013ected)i(b)m
(y)e(the)h(ordering)e(of)i Fd(IncrCount)d Fl(and)150
3244 y Fd(DecrCount)21 b Fl(op)s(erations.)38 b(F)-8
b(urthermore,)26 b Fd(InterRef\(p,)21 b(x\))j Fl(is)f(the)h(only)f(op)s
(eration)g(that)i(can)f(mo)s(dify)150 3413 y(the)33 b(presence)f(of)h
Ff(x)f Fl(in)f(the)i(outlist)e(of)i(p.)46 b(So)33 b(the)f(outcome)i(of)
f(an)f Fd(InterRef\(p,)22 b(x\))32 b Fl(op)s(eration)g(will)150
3583 y(not)e(b)s(e)e(a\013ected)j(b)m(y)e(the)h(ordering)e(of)h(other)h
Fd(InterRef\(q,)22 b(z\))28 b Fl(op)s(erations,)h(where)g(q)g
Fc(6)p Fl(=)g(p)g(or)g Ff(z)h Fc(6)p Fl(=)f Ff(x)p Fl(.)150
3752 y(Finally)-8 b(,)28 b(the)h(order)g(of)g(ev)-5 b(aluation)28
b(for)h(a)g(sequence)h(of)f(iden)m(tical)f Fd(InterRef\(p,)22
b(x\))28 b Fl(op)s(erations)g(do)s(es)150 3922 y(not)h(matter.)40
b(In)28 b(fact,)i(a)f(sequence)f(of)h(iden)m(tical)e
Fd(InterRef\(p,)22 b(x\))28 b Fl(op)s(erations)f(is)h(equiv)-5
b(alen)m(t)28 b(to)h(one)150 4091 y Fd(InterRef\(p,)22
b(x\))30 b Fl(op)s(eration.)150 4452 y Fr(5.4)137 b(I/O)46
b(Optimized)i(Sc)l(heme)e(for)f(IRL)h(Up)t(dates)150
4711 y Fl(W)-8 b(e)33 b(no)m(w)f(presen)m(t)g(an)g(I/O)g(optimized)f
(sc)m(heme)i(for)f(up)s(dating)e(the)i(IRLs.)45 b(The)32
b(queued)f(IRL)h(op)s(era-)150 4881 y(tions)e(are)h(compacted)h(b)m(y)f
(remo)m(v)-5 b(al)31 b(of)g(redundan)m(t)f(en)m(tries)g(and)h
(re-ordered)f(to)i(reduce)e(the)h(n)m(um)m(b)s(er)150
5050 y(of)c(I/Os.)39 b(The)27 b(\015usher)e(thread)i(and)f(the)h
(garbage)i(collector)e(need)g(to)h(b)s(e)e(augmen)m(ted.)40
b(In)26 b(addition,)h(a)150 5220 y(new)h(thread,)h(called)f(the)h
Ff(IRL)j(up)-5 b(date)32 b(thr)-5 b(e)g(ad)p Fl(,)32
b(needs)c(to)i(b)s(e)e(added)g(to)h(pro)s(cess)f(the)h(IRL)g(op)s
(erations)150 5389 y(queued)36 b(in)f(the)i(log.)60 b(This)35
b(thread)i(is)e(resp)s(onsible)f(for)j(applying)d(the)j(queued)f(IRL)g
(op)s(erations)g(to)1905 5649 y(42)p eop
%%Page: 43 43
43 42 bop 150 83 a Fl(the)32 b(actual)f(inlists)e(and)i(outlists.)42
b(The)31 b(execution)g(of)h(ob)5 b(ject)32 b(installation,)e(garbage)j
(collection)e(and)150 252 y(IRL)g(up)s(dates)g(do)h(not)g(in)m(terlea)m
(v)m(e)h(and)f(they)g(are)g(nev)m(er)g(executed)h(concurren)m(tly)-8
b(.)45 b(Issues)31 b(related)h(to)150 422 y(reco)m(v)m(ery)g(are)f
(discussed)d(in)h(Section)c(5.6.)150 723 y Fm(5.4.1)112
b(Ob)6 b(ject)38 b(Installation)150 951 y Fl(Before)g(the)f(ob)5
b(ject)37 b(installation,)g(the)g(\015usher)e(\014rst)h(initializes)e
(an)i(empt)m(y)i(bu\013er)d(in)h(serv)m(er)h(mem-)150
1121 y(ory)g(to)h(record)f(IRL)g(op)s(erations.)60 b(As)38
b(the)f(\015usher)f(installs)e(mo)s(di\014ed)i(ob)5 b(jects)37
b(from)g(the)h(MOB)f(to)150 1290 y(segmen)m(ts,)k(it)c(scans)h(for)f
(in)m(ter-partition)f(references)i(con)m(tained)g(in)f(the)g(ob)5
b(jects.)64 b(F)-8 b(or)38 b(eac)m(h)h(in)m(ter-)150
1459 y(partition)28 b(reference)j Ff(x)f Fl(in)e(the)i(ob)5
b(ject,)31 b(the)f(\015usher)e(records)i(an)g Fd(InterRef\(p,)22
b(x\))29 b Fl(op)s(eration)g(to)i(the)150 1629 y(bu\013er.)39
b(After)29 b(all)f(the)h(ob)5 b(jects)30 b(in)e(the)h(MOB)g(are)g
(installed,)f(the)h(\015usher)e(writes)h(a)h(single)f(log)h(record)150
1798 y(con)m(taining)34 b(all)g(the)g Fd(InterRef)f Fl(op)s(erations)h
(recorded)g(in)f(the)i(bu\013er)f(and)g(the)g(ids)g(of)g(the)h
(installed)150 1968 y(segmen)m(ts.)54 b(Then)33 b(it)h(remo)m(v)m(es)i
(the)f(installed)d(ob)5 b(jects)35 b(from)f(the)g(MOB)h(and)f(the)h
(log.)53 b(As)34 b(a)h(result,)150 2137 y(the)c(ob)5
b(ject)31 b(installation)d(pro)s(cess)i(only)f(requires)g(one)i(stable)
f(write)g(to)h(the)f(log.)150 2438 y Fm(5.4.2)112 b(Garbage)39
b(Collection)150 2667 y Fl(Before)e(p)s(erforming)d(GC)i(on)g(a)g
(partition)f(p,)i(the)f(collector)h(reads)f(the)g(inlist)e(of)i(p)f
(and)h(applies)e(all)150 2836 y(the)28 b(queued)e Fd(IncrCount)f
Fl(and)i Fd(DecrCount)e Fl(op)s(erations)i(for)g(that)h(inlist)d(to)j
(obtain)f(the)h(new)f(inlist.)37 b(It)150 3005 y(also)30
b(pro)s(cesses)h Fd(InterRef)d Fl(en)m(tries)i(to)h(obtain)f
(additional)e(ro)s(ots)j(\(see)g(Section)25 b(5.5\).)291
3175 y(After)35 b(GC)f(of)h(a)g(partition)e(p,)i(the)f(collector)h(has)
f(constructed)h(a)g(new)f(outlist,)h(whic)m(h)e(con)m(tains)150
3344 y(all)c(the)i(outgoing)g(references)f(from)g(p)g(to)h(other)g
(partitions.)39 b(It)31 b(\014rst)e(initializes)f(an)i(empt)m(y)h
(bu\013er)e(in)150 3513 y(serv)m(er)24 b(memory)g(to)h(record)f(IRL)f
(op)s(erations.)38 b(Then)23 b(it)g(compares)i(the)f(new)f(outlist)g
(with)g(the)h(original)150 3683 y(outlist)g(of)i(p)f(to)h(determine)f
(what)g(in)m(ter-partition)g(references)g(are)h(remo)m(v)m(ed)h(b)m(y)e
(GC)h(and)f(what)g(in)m(ter-)150 3852 y(partition)d(references)i(are)f
(in)f(p)h(but)g(w)m(ere)g(not)h(re\015ected)g(in)e(the)h(old)g
(outlist.)37 b(F)-8 b(or)24 b(eac)m(h)g(in)m(ter-partition)150
4021 y(reference)43 b Ff(x)g Fl(that)g(is)f(remo)m(v)m(ed,)47
b(the)c(collector)g(app)s(ends)e(a)i Fd(DecrCount\(q,)21
b(x\))42 b Fl(op)s(eration)g(to)i(the)150 4191 y(bu\013er,)39
b(where)e(q)h(is)f(the)h(partition)f(con)m(taining)g
Ff(x)p Fl(.)64 b(F)-8 b(or)38 b(eac)m(h)i(in)m(ter-partition)c
(reference)i Ff(x)g Fl(that)h(is)150 4360 y(in)e(the)h(new)g(outlist)f
(but)g(not)h(in)f(the)h(original)f(one,)j(the)f(collector)f(app)s(ends)
e(a)j Fd(IncrCount\(q,)22 b(x\))150 4530 y Fl(op)s(eration)30
b(to)h(the)f(bu\013er,)g(where)g(q)g(is)g(the)g(partition)f(con)m
(taining)h Ff(x)p Fl(.)291 4699 y(After)d(recording)f(all)f
Fd(IncrCount)f Fl(and)i Fd(DecrCount)e Fl(op)s(erations,)j(the)g
(collector)g(is)f(ready)g(to)i(write)150 4868 y(out)38
b(the)g(IRL)g(op)s(erations,)h(the)f(new)f(inlist)f(and)h(outlist)g(of)
h(p,)i(and)d(the)h(collected)g(partition.)62 b(F)-8 b(or)150
5038 y(reco)m(v)m(ery)23 b(purp)s(oses,)e(it)g(is)g(imp)s(ortan)m(t)f
(to)i(atomically)f(replace)g(the)h(original)d(segmen)m(ts)j(of)g(the)f
(partition)150 5207 y(with)30 b(the)h(collected)h(ones.)43
b(Tw)m(o)32 b(tec)m(hniques)e(can)i(b)s(e)f(used:)41
b(If)31 b(the)g(ORs)g(are)h(replicated)e(to)i(pro)m(vide)150
5376 y(high)27 b(a)m(v)-5 b(ailabilit)m(y)d(,)28 b(di\013eren)m(t)g
(replicas)g(can)h(co)s(op)s(erate)g(suc)m(h)g(that)g(at)g(least)g(one)g
(replica)f(con)m(tains)h(the)1905 5649 y(43)p eop
%%Page: 44 44
44 43 bop 150 83 a Fl(con)m(ten)m(ts)27 b(of)f(the)f(original)f
(partition,)h(whic)m(h)g(can)g(b)s(e)g(restored)h(if)e(a)i(crash)f(o)s
(ccurs)g(while)f(the)h(partition)150 252 y(is)38 b(b)s(eing)g(written.)
65 b(Alternativ)m(ely)-8 b(,)42 b(the)d(collector)g(can)h(use)e(non-v)m
(olatile)h(memory)g(\(NVRAM\))h(to)150 422 y(ac)m(hiev)m(e)30
b(atomicit)m(y)-8 b(.)41 b(The)29 b(size)f(of)h(NVRAM)h(has)e(to)i(b)s
(e)e(large)h(enough)f(to)i(hold)d(the)i(segmen)m(ts)h(of)f(one)150
591 y(partition.)291 760 y(After)37 b(writing)d(out)j(the)f(partition)f
(the)i(collector)g(app)s(ends)d(a)j(log)g(record)f(con)m(taining)g(the)
g(IRL)150 930 y(op)s(erations,)44 b(the)e(new)f(inlist)e(and)i
(outlist,)j(and)d(the)h(id)e(of)i(the)g(partition)e(b)s(eing)g
(collected.)75 b(The)150 1099 y(presence)33 b(of)g(this)f(end-of-GC)i
(record)f(indicates)f(the)h(completion)g(of)g(GC.)g(This)f(record)h
(sup)s(ersedes)150 1269 y(the)22 b(queued)f Fd(InterRef)f
Fl(op)s(erations)h(for)h(in)m(ter-partition)e(references)i(originating)
f(from)g(p,)i Fd(IncrCount)150 1438 y Fl(and)28 b Fd(DecrCount)d
Fl(op)s(erations)j(for)g(the)g(inlist)e(of)i(p,)g(and)g(mo)s(di\014ed)e
(ob)5 b(jects)29 b(installed)d(for)i(p,)g(and)g(they)150
1607 y(are)c(remo)m(v)m(ed)h(from)e(the)h(log.)38 b(The)24
b Fd(InterRef)d Fl(op)s(erations)i(for)h(p)f(are)h(sup)s(erseded)d(b)s
(ecause)j(the)g(outlist)150 1777 y(computed)g(after)g(GC)g(accurately)h
(re\015ects)f(the)g(in)m(ter-partition)f(references)h(con)m(tained)g
(in)f(the)h(ob)5 b(jects)150 1946 y(of)31 b(the)f(partition)f(and)h
(all)f(the)i(necessary)g Fd(IncrCount)c Fl(op)s(erations)j(ha)m(v)m(e)i
(b)s(een)d(queued.)150 2248 y Fm(5.4.3)112 b(IRL)38 b(Up)s(date)g
(Thread)150 2476 y Fl(When)28 b(the)f(n)m(um)m(b)s(er)g(of)h(queued)f
(IRL)g(op)s(erations)g(in)f(the)i(log)g(reac)m(hes)h(a)f(certain)g
(threshold,)f(the)g(IRL)150 2645 y(up)s(date)j(thread)h(w)m(ak)m(es)i
(up)d(and)g(up)s(dates)g(the)i(IRLs)e(b)m(y)h(pro)s(cessing)f(the)h(op)
s(erations)g(queued)f(in)g(the)150 2814 y(log.)61 b(Since)35
b(the)j(IRLs)e(are)h(up)s(dated)f(together)i(in)e(batc)m(hes,)k(the)d
(IRLs)f(are)h(clustered)g(together)h(on)150 2984 y(disk)29
b(rather)h(than)g(stored)h(with)e(the)h(partitions)f(to)i(reduce)g
(I/Os.)291 3153 y(The)36 b(IRL)g(up)s(date)g(thread)g(\014rst)g(up)s
(dates)f(the)i(outlists)e(b)m(y)i(pro)s(cessing)e(the)h(queued)g
Fd(InterRef)150 3322 y Fl(op)s(erations.)i(Then)24 b(it)g(up)s(dates)f
(the)i(inlists)d(b)m(y)j(pro)s(cessing)e(the)i(queued)e
Fd(IncrCount)f Fl(and)i Fd(DecrCount)150 3492 y Fl(op)s(erations.)53
b(Note)36 b(that)g(it)e(is)g(not)h(necessary)g(to)h(pro)s(cess)e(all)g
(the)h(queued)f(IRL)g(op)s(erations)g(in)g(the)150 3661
y(log.)41 b(Instead,)30 b(the)h(up)s(date)e(thread)i(can)f(c)m(ho)s
(ose)i(to)f(pro)s(cess)f(a)g(p)s(ortion)f(of)i(the)f(log.)291
3831 y(T)-8 b(o)40 b(up)s(date)e(the)i(outlists)e(e\016cien)m(tly)-8
b(,)42 b(the)d(IRL)g(up)s(date)f(thread)h(scans)g(the)h(log)f(for)g
Fd(InterRef)150 4000 y Fl(op)s(erations)c(and)h(sorts)g(the)h(op)s
(erations)e(b)m(y)h(partitions)f(\(the)i(\014rst)e(argumen)m(t)i(of)f
Fd(InterRef)e Fl(op)s(era-)150 4169 y(tions\).)40 b(F)-8
b(or)30 b(eac)m(h)g(outlist)f(of)g(partition)f(p)h(that)h(has)f(at)h
(least)f(one)h Fd(InterRef)d Fl(op)s(eration,)i(the)g(thread)150
4339 y(fetc)m(hes)39 b(the)g(outlist,)h(and)d(applies)g(the)i
Fd(InterRef)d Fl(op)s(erations)h(related)i(to)g(this)e(outlist)g(to)i
(obtain)150 4508 y(the)j(new)f(outlist.)73 b(Applying)39
b(an)j Fd(InterRef\(p,)21 b(x\))41 b Fl(op)s(eration)g(in)m(v)m(olv)m
(es)h(c)m(hec)m(king)g(whether)f Ff(x)h Fl(is)150 4677
y(presen)m(t)34 b(in)e(the)i(outlist)f(of)h(p.)50 b(If)33
b(so,)i(do)f(nothing.)50 b(Otherwise,)33 b(add)g Ff(x)h
Fl(to)h(the)f(outlist)e(and)i(app)s(end)150 4847 y(an)h
Fd(IncrCount\(q,)22 b(x\))34 b Fl(op)s(eration)g(to)i(a)g(v)m(olatile)e
(bu\013er,)i(where)e(q)h(is)f(the)h(partition)f(that)i(con)m(tains)150
5016 y(ob)5 b(ject)38 b Ff(x)p Fl(.)60 b(After)37 b(applying)d(all)i
Fd(InterRef)f Fl(op)s(erations,)j(the)e(IRL)h(up)s(date)f(thread)g
(writes)g(a)h(single)150 5186 y(record)26 b(to)g(the)g(log.)39
b(That)25 b(record)h(con)m(tains)g(the)g Fd(IncrCount)d
Fl(op)s(erations)i(recorded)g(in)f(the)i(bu\013er,)g(all)150
5355 y(the)32 b(outlists)e(that)i(are)g(up)s(dated,)f(and)g(the)h
(indices)d(of)j(the)g(log)f(records)h(that)g(ha)m(v)m(e)g(b)s(een)f
(pro)s(cessed.)1905 5649 y(44)p eop
%%Page: 45 45
45 44 bop 150 83 a Fl(The)33 b(presence)h(of)f(this)g(record)g(causes)h
(all)f(pro)s(cessed)g Fd(InterRef)e Fl(op)s(erations)i(to)h(b)s(e)f
(remo)m(v)m(ed)h(from)150 252 y(the)d(log.)291 422 y(T)-8
b(o)37 b(up)s(date)e(the)i(inlists,)e(the)h(up)s(date)f(thread)h(scans)
h(the)f(log)g(for)g Fd(IncrCount)e Fl(and)h Fd(DecrCount)150
591 y Fl(op)s(erations)j(and)g(sorts)h(the)h(op)s(erations)e(b)m(y)h
(partitions)e(\(the)i(\014rst)g(argumen)m(t)g(of)g(the)g(op)s
(erations\).)150 760 y(F)-8 b(or)42 b(eac)m(h)h(inlist)c(of)j
(partition)f(p)g(that)h(has)g(at)g(least)g(one)g Fd(IncrCount)d
Fl(or)j Fd(DecrCount)d Fl(op)s(eration,)150 930 y(the)31
b(thread)f(fetc)m(hes)i(the)f(inlist,)d(and)i(applies)f(relev)-5
b(an)m(t)31 b Fd(IncrCount)d Fl(and)i Fd(DecrCount)e
Fl(op)s(erations)i(to)150 1099 y(obtain)37 b(the)g(new)g(inlist.)59
b(After)37 b(applying)e(all)h(inlist)f(op)s(erations,)j(the)g(IRL)e(up)
s(date)h(thread)g(writes)150 1269 y(a)43 b(single)e(log)h(record)g(con)
m(taining)g(all)g(the)g(up)s(dated)f(inlists)f(and)i(the)g(indices)f
(of)h(the)h(log)f(records)150 1438 y(that)31 b(ha)m(v)m(e)h(b)s(een)e
(pro)s(cessed.)42 b(The)30 b(presence)h(of)g(this)f(record)g(causes)h
(all)f(pro)s(cessed)g Fd(IncrCount)f Fl(and)150 1607
y Fd(DecrCount)f Fl(op)s(erations)i(to)h(b)s(e)e(remo)m(v)m(ed)j(from)e
(the)g(log.)150 1968 y Fr(5.5)137 b(Conserv)-8 b(ativ)l(e)46
b(Inlist)i(Estimate)150 2228 y Fl(The)20 b(en)m(tries)g(in)g(the)g
(inlist)e(of)j(partition)e(p)h(with)f(p)s(ositiv)m(e)h(reference)h
(coun)m(ts)g(are)g(treated)g(as)g(ro)s(ots)g(when)150
2397 y(the)35 b(OR)f(w)m(an)m(ts)i(to)f(GC)g(partition)f(p.)53
b(In)34 b(the)h(I/O)g(optimized)f(sc)m(heme,)j(ho)m(w)m(ev)m(er,)g(the)
e(inlists)d(ma)m(y)150 2567 y(not)e(con)m(tain)g(the)g(most)g(accurate)
i(reference)e(coun)m(ts)g(unless)e(there)i(are)g(no)g(queued)f(IRL)g
(op)s(erations.)150 2736 y(Ob)m(viously)-8 b(,)23 b(it)f(is)g
(undesirable)e(to)k(apply)d(all)h(queued)g(IRL)h(op)s(erations)f(to)i
(the)f(IRLs)f(on)h(disk)e(whenev)m(er)150 2905 y(the)31
b(OR)e(w)m(an)m(ts)j(to)f(p)s(erform)e(GC.)291 3075 y(T)-8
b(o)34 b(garbage)h(collect)g(a)f(partition)e(p,)i(the)g(OR)g(only)f
(needs)g(to)h(determine)f(whic)m(h)g(en)m(tries)g(in)g(the)150
3244 y(up-to-date)h(inlist)c(of)i(p)g(ha)m(v)m(e)i(a)f(p)s(ositiv)m(e)f
(reference)h(coun)m(t.)48 b(It)33 b(do)s(es)f(not)h(need)f(the)h
(actual)g(v)-5 b(alue)32 b(of)150 3413 y(the)27 b(reference)g(coun)m
(ts.)40 b(Instead)27 b(of)g(ev)-5 b(aluating)27 b(all)e(queued)h(IRL)h
(op)s(erations,)g(the)g(OR)f(can)i(compute)150 3583 y(a)36
b(conserv)-5 b(ativ)m(e)38 b(estimate)e(of)h(the)f(inlist)d(b)m(y)j(lo)
s(oking)f(at)i(the)f(queued)g(IRL)f(op)s(erations)h(that)g(migh)m(t)150
3752 y(a\013ect)f(the)f(state)h(of)f(inlist)d(of)j(p.)49
b(These)34 b(include)d Fd(IncrCount)g Fl(and)i Fd(DecrCount)e
Fl(op)s(erations)i(with)f(p)150 3922 y(as)f(the)f(\014rst)g(argumen)m
(t)h(and)e Fd(InterRef\(q,)22 b(x\))30 b Fl(where)g Ff(x)g
Fl(is)g(a)h(reference)f(p)s(oin)m(ting)f(in)m(to)h(p.)291
4091 y(T)-8 b(o)26 b(determine)f(whic)m(h)f(en)m(tries)h(in)f(the)i
(up-to-date)g(inlist)d(w)m(ould)h(ha)m(v)m(e)j(p)s(ositiv)m(e)d
(reference)i(coun)m(ts,)150 4260 y(the)d(OR)g(\014rst)g(fetc)m(hes)h
(the)g(inlist)c(of)k(partition)e(p.)38 b(Then,)24 b(the)f(OR)g(applies)
e(all)h(the)i(queued)e Fd(IncrCount)150 4430 y Fl(and)31
b Fd(DecrCount)e Fl(op)s(erations)h(of)i(p)f(in)f(the)h(log.)44
b(After)31 b(applying)f(the)h(op)s(erations,)g(an)m(y)h(en)m(try)g(in)e
(the)150 4599 y(inlist)25 b(with)h(reference)i(coun)m(t)h(greater)f
(than)g(zero)g(is)f(added)g(to)h(the)g(ro)s(ot)g(set.)40
b(The)27 b(new)h(inlist)d(will)g(b)s(e)150 4768 y(written)k(to)j(the)e
(log)h(at)g(the)f(end)g(of)h(GC.)291 4938 y(In)37 b(addition,)g(for)g
(eac)m(h)h Fd(InterRef\(q,)22 b(x\))37 b Fl(op)s(eration)f(in)g(the)h
(log,)j(where)c(q)h(is)g(not)g(equal)g(to)g(p)150 5107
y(and)30 b Ff(x)g Fl(is)g(an)g(ob)5 b(ject)31 b(con)m(tained)g(in)e
(partition)g(p,)h(the)h(OR)f(adds)g Ff(x)g Fl(to)h(the)g(ro)s(ot)f
(set.)42 b(This)28 b(is)i(b)s(ecause)150 5276 y(a)i(queued)e
Fd(InterRef\(q,)22 b(x\))31 b Fl(indicates)f(that)i(partition)e(q)i
(con)m(tains)f(a)h(reference)g(to)g(ob)5 b(ject)32 b
Ff(x)p Fl(.)44 b(As)32 b(a)1905 5649 y(45)p eop
%%Page: 46 46
46 45 bop 150 83 a Fl(result,)30 b Ff(x)g Fl(has)g(to)h(b)s(e)f
(protected.)150 444 y Fr(5.6)137 b(Reco)l(v)l(ery)45
b(Issues)150 704 y Fl(It)29 b(is)f(imp)s(ortan)m(t)h(that)g(deferring)f
(the)h(IRL)g(up)s(dates)f(do)s(es)h(not)g(result)g(in)e(incorrect)i
(IRL)g(states)h(after)150 873 y(serv)m(er)36 b(crashes.)58
b(The)35 b(deferred)g(IRL)h(up)s(date)f(op)s(erations)g(are)i(stored)f
(stably)f(in)g(the)h(log)g(and)g(will)150 1042 y(surviv)m(e)30
b(serv)m(er)i(crashes.)44 b(Ho)m(w)m(ev)m(er,)34 b(it)d(is)g(imp)s
(ortan)m(t)f(that)i(the)g(OR)f(do)s(es)g(not)h(incorrectly)e(write)h
(or)150 1212 y(apply)g(these)h(IRL)f(op)s(erations)h(more)g(than)g
(once)g(b)s(ecause)g(they)g(are)h(not)f(idemp)s(oten)m(t.)45
b(T)-8 b(o)32 b(simplify)150 1381 y(the)g(discussion,)d(w)m(e)j(assume)
f(a)g(single)f(record)i(can)f(b)s(e)g(en)m(tered)h(in)m(to)f(the)h(log)
f Ff(atomic)-5 b(al)5 b(ly)34 b Fl(regardless)150 1550
y(of)e(the)g(record)f(size.)45 b(This)30 b(can)i(b)s(e)f(implemen)m
(ted)f(easily)h(b)m(y)g(using)f(a)i(record)g(to)g(mark)g(the)g(end)f
(of)h(a)150 1720 y(series)e(of)g(log)h(records)f(that)h(ha)m(v)m(e)g
(to)h(b)s(e)d(app)s(ended)g(as)h(an)h(atomic)g(unit.)150
2021 y Fm(5.6.1)112 b(Ob)6 b(ject)38 b(Installation)150
2249 y Fl(As)30 b(explained)f(earlier,)h(the)h(\015usher)d(records)j
(the)f(IRL)g(op)s(erations)g(in)f(a)i(v)m(olatile)f(bu\013er)g(as)h(it)
f(mo)m(v)m(es)150 2419 y(mo)s(di\014ed)k(ob)5 b(jects)37
b(from)f(the)h(MOB)f(to)h(segmen)m(ts)h(on)e(disk.)57
b(Ob)5 b(jects)36 b(are)h(not)g(remo)m(v)m(ed)g(from)f(the)150
2588 y(MOB)28 b(or)f(the)h(log)g(at)g(this)e(p)s(oin)m(t.)39
b(If)27 b(the)h(serv)m(er)g(crashes,)g(the)g(IRL)f(op)s(erations)f(in)h
(the)g(bu\013er)g(will)e(b)s(e)150 2757 y(discarded)k(and)h(the)g
(\015usher)f(can)h(start)h(o)m(v)m(er)h(after)f(the)g(MOB)f(is)g
(reconstructed)g(from)g(the)h(log.)291 2927 y(After)36
b(the)g(\015usher)e(has)h(completed)h(installing)c(mo)s(di\014ed)i(ob)5
b(jects)36 b(in)f(the)g(MOB,)i(it)e(app)s(ends)f(a)150
3096 y(single)c(record)h(to)g(the)g(log.)43 b(This)29
b(record)i(includes)e(all)g(the)j(IRL)e(op)s(erations)g(recorded)h(in)f
(the)h(bu\013er)150 3266 y(and)39 b(the)g(ids)f(of)h(the)g(installed)e
(segmen)m(ts.)68 b(The)39 b(presence)g(of)g(this)f(log)h(record)g
(indicates)f(that)i(all)150 3435 y(the)30 b(mo)s(di\014ed)e(ob)5
b(jects)30 b(in)f(the)h(segmen)m(ts)h(recorded)f(in)e(this)h(log)h
(record)g(ha)m(v)m(e)h(b)s(een)e(installed.)38 b(If)30
b(the)150 3604 y(serv)m(er)g(crashes)f(at)h(this)e(p)s(oin)m(t,)h(the)g
(\015usher)f(will)f(not)i(not)h(attempt)g(to)g(install)e(the)h(mo)s
(di\014ed)e(ob)5 b(jects)150 3774 y(for)30 b(the)h(installed)d(segmen)m
(ts)j(again.)150 4075 y Fm(5.6.2)112 b(Garbage)39 b(Collection)150
4303 y Fl(Recall)d(that)h(the)f(collector)h(\014rst)e(writes)h(the)g
(collected)h(partition)d(to)j(disk)e(\(atomically\))i(and)e(then)150
4473 y(writes)g(an)h(end-of-GC)g(record)f(to)i(the)f(log.)57
b(The)36 b(record)f(con)m(tains)h(the)g(IRL)g(op)s(erations,)g(the)g
(new)150 4642 y(inlist)28 b(and)i(outlist,)f(and)h(the)g(partition)g
(id.)291 4811 y(If)36 b(the)g(OR)f(crashes)h(during)d(GC)j(of)g
(partition)f(p)g(but)g(nothing)g(has)h(b)s(een)f(written)g(to)h(the)g
(disk)150 4981 y(and)27 b(log)g(y)m(et,)i(then)e(GC)g(can)h(simply)c
(restart)k(after)g(reco)m(v)m(ery)h(b)s(ecause)e(no)g(p)s(ersisten)m(t)
f(state)j(has)e(b)s(een)150 5150 y(mo)s(di\014ed.)291
5319 y(If)i(the)g(OR)f(crashes)h(after)h(writing)d(the)i(partition)f
(but)g(b)s(efore)h(writing)e(the)i(log)g(record,)h(the)f(only)1905
5649 y(46)p eop
%%Page: 47 47
47 46 bop 150 83 a Fl(information)30 b(that)j(is)e(lost)g(is)g(the)i
(new)e(outlist)g(of)h(p)f(and)h(the)g(relev)-5 b(an)m(t)32
b Fd(DecrCount)d Fl(op)s(erations)j(due)150 252 y(to)37
b(remo)m(v)-5 b(al)36 b(of)h(in)m(ter-partition)d(references)j(b)m(y)f
(GC.)g(\(The)g(installation)e(of)j(ob)5 b(jects)37 b(for)f(p)f(and)h
(the)150 422 y(up)s(date)d(of)i(the)f(inlist)d(of)k(p)e(are)i(not)f
(considered)f(done)h(b)s(efore)g(the)g(end-of-GC)g(record)g(is)f
(written\).)150 591 y(This)h(situation)h(is)g(still)e(safe)j(b)s
(ecause)g(GC)g(only)f(deletes)h(in)m(ter-partition)e(references.)57
b(It)36 b(do)s(es)g(not)150 760 y(in)m(tro)s(duce)31
b(new)h(ones.)46 b(The)31 b(discrepancies)g(in)g(the)h(IRLs)f(will)f(b)
s(e)h(corrected)j(when)d(the)h(partition)f(is)150 930
y(garbage)h(collected)e(next)h(time.)150 1231 y Fm(5.6.3)112
b(IRL)38 b(Pro)s(cessing)150 1459 y Fl(After)28 b(pro)s(cessing)f(the)h
(queued)f(IRL)g(op)s(erations,)h(the)g(IRL)f(up)s(date)g(thread)h
(writes)f(out)h(a)g(log)g(record)150 1629 y(that)e(con)m(tains)g(the)g
(a)g(set)g(of)g(indices)e Fh(S)31 b Fl(of)26 b(the)f(log)h(records)g
(that)g(ha)m(v)m(e)h(b)s(een)e(pro)s(cessed.)38 b(\(The)26
b(record)150 1798 y(also)35 b(con)m(tains)h(the)f(up)s(dated)f
(inlists,)g(outlists,)i(and)f(p)s(ossible)e(IRL)h(op)s(erations\).)56
b(The)34 b(presence)i(of)150 1968 y(this)c(record)g(sup)s(ersedes)f
(the)i(log)g(records)f(with)g(indices)e(con)m(tained)j(in)f
Fh(S)5 b Fl(.)47 b(The)32 b(IRL)g(op)s(erations)g(in)150
2137 y(the)f(sup)s(erseded)d(log)i(records)h(will)c(not)k(b)s(e)f
(applied)e(again)i(b)m(y)g(the)h(reco)m(v)m(ery)h(pro)s(cess.)150
2498 y Fr(5.7)137 b(Discussion)150 2757 y Fl(An)25 b(issue)f(related)h
(to)i(the)e(ab)s(o)m(v)m(e)i(optimized)d(sc)m(heme)i(is)f(the)g(p)s
(oten)m(tial)g(large)g(size)h(of)f(the)h(queued)e(IRL)150
2927 y(op)s(erations)i(in)e(the)j(log.)39 b(F)-8 b(or)27
b(example,)g(the)g(n)m(um)m(b)s(er)e(of)h(queued)g Fd(InterRef)d
Fl(op)s(erations)j(can)h(b)s(ecome)150 3096 y(v)m(ery)36
b(large)f(if)f(the)i(mo)s(di\014ed)d(ob)5 b(jects)36
b(committed)g(b)m(y)f(clien)m(ts)g(con)m(tain)h(a)f(lot)h(of)f(ob)5
b(ject)36 b(references.)150 3266 y(There)20 b(are)i(v)-5
b(arious)20 b(w)m(a)m(ys)h(to)h(address)e(this)g(problem.)36
b(First,)22 b(the)g(log)f(can)g(b)s(e)f(compacted)i(b)m(y)f(remo)m
(ving)150 3435 y(redundan)m(t)k(IRL)i(op)s(eration)f(en)m(tries.)39
b(F)-8 b(or)27 b(example,)h(if)d(an)i Fd(IncrCount)d
Fl(is)i(follo)m(w)m(ed)g(b)m(y)g(a)h Fd(DecrCount)150
3604 y Fl(op)s(eration)32 b(for)g(the)h(same)g(inlist)d(en)m(try)-8
b(,)34 b(b)s(oth)e(op)s(erations)f(can)i(b)s(e)f(safely)g(remo)m(v)m
(ed.)48 b(Also,)33 b(m)m(ultiple)150 3774 y Fd(InterRef)e
Fl(op)s(erations)h(from)h(the)g Ff(same)h Fl(partition)d(p)s(oin)m
(ting)g(to)j(the)f Ff(same)h Fl(ob)5 b(ject)34 b(can)f(b)s(e)g(reduced)
150 3943 y(to)g(a)g(single)e Fd(InterRef)f Fl(op)s(eration.)47
b(Second,)33 b(the)f(IRL)g(op)s(erations)g(can)h(b)s(e)e(represen)m
(ted)i(in)e(a)i(more)150 4112 y(compact)j(form.)53 b(F)-8
b(or)35 b(instance,)h(m)m(ultiple)c Fd(IncrCount)g Fl(op)s(erations)i
(for)g(the)h(same)g(inlist)d(en)m(try)j(can)150 4282
y(b)s(e)i(represen)m(ted)g(b)m(y)g(a)h(single)e Fd(IncrCount)f
Fl(with)h(a)h(coun)m(t)h(that)g(sp)s(eci\014es)e(the)h(exact)i
(incremen)m(t)e(to)150 4451 y(b)s(e)30 b(done.)41 b(Alternativ)m(ely)-8
b(,)31 b(standard)f(compression)g(can)h(b)s(e)f(used)f(to)j(reduce)e
(the)h(size)g(of)f(log)h(records)150 4620 y(con)m(taining)f(IRL)g(op)s
(erations.)40 b(The)30 b(records)g(are)h(decompressed)f(prior)e(to)j
(GC)g(or)f(IRL)g(pro)s(cessing.)291 4790 y(Another)42
b(issue)g(is)f(that)i(the)g(sc)m(heme)g(requires)e(scanning)g(the)i
(log)f(to)h(obtain)f(a)h(conserv)-5 b(ativ)m(e)150 4959
y(inlist)37 b(for)h(GC)i(and)e(to)i(pro)s(cess)f(the)g(queued)f(IRL)h
(op)s(erations.)66 b(In)39 b(Thor,)i(this)d(do)s(es)g(not)i(raise)f(a)
150 5129 y(p)s(erformance)34 b(issue)g(b)s(ecause)h(the)g(transaction)g
(log)g(resides)e(in)h(main)f(memory)-8 b(.)55 b(F)-8
b(or)35 b(systems)g(with)150 5298 y(disk-residen)m(t)g(log,)k(the)e
(queued)f(IRL)g(op)s(erations)g(should)f(b)s(e)h(cac)m(hed)i(in)d
(memory)i(\(in)f(a)h(compact)1905 5649 y(47)p eop
%%Page: 48 48
48 47 bop 150 83 a Fl(manner\))30 b(to)h(prev)m(en)m(t)g(reading)e(log)
i(en)m(tries)f(from)g(disk.)1905 5649 y(48)p eop
%%Page: 49 49
49 48 bop 150 809 a Fg(Chapter)66 b(6)150 1349 y Fj(Conclusion)150
1851 y Fl(This)24 b(thesis)h(has)h(presen)m(ted)g(the)g(design)f(of)i
(a)f(garbage)h(collection)f(sc)m(heme)h(for)f(large)g(ob)5
b(ject-orien)m(ted)150 2020 y(databases.)58 b(This)34
b(sc)m(heme)j(uses)e(a)h(partitioned)f(approac)m(h,)j(whic)m(h)c(mak)m
(es)j(the)f(garbage)h(collection)150 2189 y(pro)s(cess)30
b(e\016cien)m(t)i(and)e(scalable.)42 b(The)30 b(cop)m(ying)h(GC)f
(algorithm)g(used)g(in)g(this)g(sc)m(heme)h(allo)m(ws)f(clien)m(t)150
2359 y(op)s(erations)k(to)h(pro)s(ceed)g(with)e(no)h(extra)i(o)m(v)m
(erhead.)54 b(Little)34 b(sync)m(hronization)g(is)f(required)g(b)s(et)m
(w)m(een)150 2528 y(the)h(OR)g(garbage)h(collector)f(and)g(the)g(FEs.)
51 b(The)34 b(reco)m(v)m(ery)i(pro)s(cess)d(is)g(also)h(simpli\014ed)c
(b)m(y)k(using)f(a)150 2697 y(cop)m(ying)d(algorithm.)291
2867 y(W)-8 b(e)44 b(explained)e(ho)m(w)h(the)g(OR)f(co)s(op)s(erates)i
(with)e(the)h(FEs)g(to)h(obtain)f(part)g(of)g(the)g(ro)s(ots)g(for)150
3036 y(garbage)29 b(collection.)39 b(W)-8 b(e)29 b(also)e(describ)s(ed)
f(an)h(incremen)m(tal)g(ro)s(ot)h(generation)g(algorithm)e(that)j(allo)
m(ws)150 3205 y(clien)m(ts)h(to)h(pro)s(ceed)f(during)e(ro)s(ot)j
(generation.)291 3375 y(Our)25 b(sc)m(heme)h(uses)f(in)m(ter-partition)
f(reference)j(lists)d(\(IRLs\))i(to)g(main)m(tain)f(information)f
(necessary)150 3544 y(to)g(p)s(erform)f(indep)s(enden)m(t)e(collection)
j(of)g(partitions.)37 b(W)-8 b(e)25 b(addressed)d(the)i(p)s(erformance)
f(issue)g(related)150 3714 y(to)28 b(the)f(main)m(tenance)h(of)f(IRLs.)
40 b(W)-8 b(e)28 b(devised)e(an)h(optimization)f(that)i(defers)f(the)g
(IRL)g(up)s(dates)f(using)150 3883 y(the)36 b(log)g(and)f(applies)e(v)
-5 b(arious)35 b(tec)m(hniques)g(to)h(reduce)g(the)g(n)m(um)m(b)s(er)e
(of)i(I/Os)f(required)f(to)i(p)s(erform)150 4052 y(the)31
b(IRL)e(up)s(dates.)291 4222 y(Our)41 b(w)m(ork)h(is)f(done)h(in)f(the)
i(con)m(text)h(of)e(Thor)f(and)h(a)g(protot)m(yp)s(e)h(of)f(our)g
(garbage)h(collection)150 4391 y(sc)m(heme)38 b(has)f(b)s(een)f
(implemen)m(ted.)60 b(W)-8 b(e)39 b(b)s(eliev)m(e)d(our)h(IRL)f(up)s
(date)h(optimization)f(is)g(applicable)f(to)150 4560
y(most)c(ob)5 b(ject)31 b(databases)g(that)g(use)f(a)h(partitioned)e
(GC)h(approac)m(h.)1905 5649 y(49)p eop
%%Page: 50 50
50 49 bop 150 83 a Fr(6.1)137 b(F)-11 b(uture)46 b(W)-11
b(ork)150 347 y Fm(6.1.1)112 b(P)m(erformance)38 b(Ev)-6
b(aluation)150 575 y Fl(It)39 b(w)m(ould)e(b)s(e)h(in)m(teresting)g(to)
i(study)e(di\013eren)m(t)g(p)s(erformance)g(asp)s(ects)h(of)g(the)g(sc)
m(heme.)66 b(First,)41 b(the)150 745 y(cost)c(incurred)d(b)m(y)i(the)h
(main)m(tenance)g(of)f(IRLs)g(should)e(b)s(e)i(measured.)57
b(Second,)38 b(the)f(p)s(erformance)150 914 y(of)30 b(the)h(garbage)g
(collector)g(should)d(b)s(e)h(measured)h(with)f(no)h(clien)m(t,)g(one)g
(clien)m(t,)g(and)g(m)m(ultiple)d(clien)m(ts)150 1084
y(running.)43 b(Third,)30 b(it)h(w)m(ould)g(b)s(e)g(in)m(teresting)g
(to)i(v)-5 b(ary)32 b(the)g(n)m(um)m(b)s(er)e(of)j(in)m(ter-partition)d
(references)i(in)150 1253 y(the)j(ob)5 b(jects)36 b(and)e(see)i(ho)m(w)
f(it)g(a\013ects)h(the)g(cost)g(of)f(IRL)f(main)m(tenance.)55
b(Finally)-8 b(,)35 b(the)h(p)s(erformance)150 1422 y(of)k(this)e(sc)m
(heme)j(should)c(b)s(e)i(compared)h(to)g(other)g(GC)g(algorithms)e
(designed)g(for)i(ob)5 b(ject-orien)m(ted)150 1592 y(databases.)150
1892 y Fm(6.1.2)112 b(In)m(ter-P)m(artition)37 b(Circular)h(Garbage)150
2120 y Fl(Curren)m(tly)-8 b(,)45 b(the)e(garbage)h(collection)f(sc)m
(heme)g(do)s(es)g(not)g(collect)g(garbage)h(with)e(cycles)h(of)g(ob)5
b(ject)150 2289 y(references)36 b(in)e(di\013eren)m(t)h(partitions.)54
b(W)-8 b(e)37 b(b)s(eliev)m(e)d(this)h(t)m(yp)s(e)g(of)h(garbage)h(is)d
(relativ)m(ely)h(infrequen)m(t.)150 2459 y(Ho)m(w)m(ev)m(er,)g(it)c(is)
g(imp)s(ortan)m(t)g(to)i(extend)f(this)f(sc)m(heme)h(so)g(that)h(the)f
(storage)i(of)e(this)e(t)m(yp)s(e)j(of)f(garbage)150
2628 y(b)s(e)44 b(reclaimed)f(ev)m(en)m(tually)h(or)h(the)f
(uncollected)g(garbage)i(will)41 b(accum)m(ulate)46 b(o)m(v)m(er)f
(time.)83 b(Sev)m(eral)150 2797 y(tec)m(hniques)30 b(ha)m(v)m(e)i(b)s
(een)d(considered.)286 3055 y Fc(\017)46 b Fk(Migration)36
b(of)f(ob)6 b(jects)377 3260 y Fl(Circular)21 b(garbage)k(that)f(spans)
e(across)i(partitions)e(can)i(b)s(e)f(collected)g(if)g(they)g(are)h
(migrated)f(in)m(to)377 3430 y(the)30 b(same)g(partition.)40
b(The)29 b(tric)m(ky)h(part,)g(ho)m(w)m(ev)m(er,)h(is)e(to)i(iden)m
(tify)d(p)s(oten)m(tial)h(garbage)i(ob)5 b(jects)377
3599 y(and)35 b(decide)h(where)f(to)h(mo)m(v)m(e)h(them.)57
b(A)36 b(migration)f(sc)m(heme)h(based)g(on)f Ff(distanc)-5
b(e)37 b Fl(estimation)377 3768 y(of)d(ob)5 b(jects)35
b(is)d(describ)s(ed)g(in)24 b([19)q(].)51 b(The)33 b(distance)h(of)g
(an)f(ob)5 b(ject)35 b(is)e(the)h(n)m(um)m(b)s(er)e(of)i(in)m(terno)s
(de)377 3938 y(references)d(from)e(an)m(y)h(p)s(ersisten)m(t)f(ro)s(ot)
i(to)g(that)f(ob)5 b(ject.)42 b(An)29 b(ob)5 b(ject)31
b(with)e(a)h(large)g(distance)g(is)377 4107 y(lik)m(ely)25
b(to)j(b)s(e)e(cyclic)g(garbage.)41 b(Although)25 b(this)h(w)m(ork)g
(primarily)e(aims)i(at)h(migration)e(of)i(ob)5 b(jects)377
4276 y(b)s(et)m(w)m(een)27 b(di\013eren)m(t)e(serv)m(ers,)i(it)e(can)h
(b)s(e)f(easily)g(adopted)h(to)g(use)g(for)f(ob)5 b(ject)27
b(migration)d(b)s(et)m(w)m(een)377 4446 y(partitions.)58
b(Ho)m(w)m(ev)m(er,)41 b(this)35 b(sc)m(heme)j(do)s(es)e(require)f(the)
i(use)g(of)f(reference)i(lists)d(rather)h(than)377 4615
y(reference)31 b(coun)m(ts)g(for)f(inlist)e(en)m(tries.)286
4856 y Fc(\017)46 b Fk(Enlarging)35 b(partitions)377
5061 y Fl(Instead)25 b(of)g(mo)m(ving)g(ob)5 b(jects)25
b(across)h(partitions,)e(it)h(is)f(p)s(ossible)e(to)k(com)m(bine)e(sev)
m(eral)h(partitions)377 5231 y(in)m(to)31 b(one)f(partition)f(to)i(con)
m(tain)g(p)s(oten)m(tial)f(circular)e(garbage)k(ob)5
b(jects.)41 b(Again,)31 b(it)f(is)f(tric)m(ky)h(to)377
5400 y(determine)35 b(whic)m(h)f(partitions)g(should)f(b)s(e)i(com)m
(bined.)55 b(It)35 b(ma)m(y)h(b)s(e)f(exp)s(ensiv)m(e)g(to)h(recompute)
1905 5649 y(50)p eop
%%Page: 51 51
51 50 bop 377 83 a Fl(the)36 b(IRLs)f(for)h(the)f(new)h(com)m(bined)f
(partition.)55 b(Recomputing)35 b(the)h(IRLs)f(can)h(b)s(e)f(a)m(v)m
(oided)h(if)377 252 y(eac)m(h)i(inlist)33 b(en)m(try)k(main)m(tains)e
(a)i(list)e(of)h(partitions)f(with)g(incoming)f(references)j(rather)f
(than)377 422 y(just)30 b(a)h(coun)m(t)25 b([8)q(].)286
666 y Fc(\017)46 b Fk(Complemen)m(tary)33 b(T)-9 b(racing)377
873 y Fl(It)34 b(migh)m(t)f(b)s(e)g(b)s(etter)h(to)g(use)f(a)h
(complemen)m(tary)g(algorithm)f(based)g(on)g(global)g(tracing)25
b([7)q(,)g(11)q(])377 1042 y(b)s(ecause)45 b(of)h(its)e(simplicit)m(y)f
(and)h(completeness.)85 b(The)45 b(algorithm)f(runs)f(infrequen)m(tly)h
(and)377 1211 y(should)29 b(b)s(e)g(designed)h(to)h(a)m(v)m(oid)g
(excessiv)m(e)g(I/Os)f(and)g(paging.)150 1513 y Fm(6.1.3)112
b(P)m(artition)37 b(Selection)h(P)m(olicies)150 1741
y Fl(An)25 b(imp)s(ortan)m(t)g(asp)s(ect)h(of)f(partitioned)f(GC)i
(algorithms)e(is)h(ho)m(w)g(to)i(select)f(a)f(partition)g(that)h(con)m
(tains)150 1910 y(the)34 b(most)g(garbage.)51 b(Relativ)m(ely)33
b(little)g(w)m(ork)g(has)h(b)s(een)e(done)i(in)e(this)g(topic)25
b([5)q(])34 b(and)f(further)f(study)150 2080 y(w)m(ould)d(b)s(e)h(b)s
(ene\014cial.)150 2381 y Fm(6.1.4)112 b(Clustering)38
b(of)g(Segmen)m(ts)g(in)m(to)g(P)m(artitions)150 2609
y Fl(F)-8 b(or)33 b(p)s(erformance)f(reasons,)h(it)f(is)f(imp)s(ortan)m
(t)g(to)i(cluster)f(related)g(ob)5 b(jects)33 b(in)m(to)f(the)h(same)g
(segmen)m(t.)150 2779 y(When)f(a)g(database)g(is)f(divided)e(in)m(to)j
(partitions,)f(it)g(is)g(also)h(imp)s(ortan)m(t)f(to)h(group)f(related)
h(segmen)m(ts)150 2948 y(in)m(to)42 b(the)f(same)h(partition.)73
b(The)41 b(goal)h(of)g(this)f(clustering)f(is)g(mainly)g(to)i(reduce)g
(the)g(n)m(um)m(b)s(er)e(of)150 3117 y(in)m(ter-partition)c
(references,)k(whic)m(h)d(in)f(turn)h(reduces)g(the)h(cost)g(of)g(IRL)f
(up)s(dates)g(and)g(the)h(c)m(hance)150 3287 y(of)e(circular)e
(garbage.)57 b(It)36 b(w)m(ould)e(b)s(e)h(v)-5 b(aluable)34
b(to)i(study)f(ho)m(w)h(this)e(grouping)g(can)i(b)s(e)f(determined.)150
3456 y(Related)g(issues)f(are)h(ho)m(w)g(to)h(determine)e(the)h
(optimal)f(partition)g(size)h(in)f(relation)g(to)i(the)f(segmen)m(t)150
3625 y(size)g(and)f(whether)h(reclustering)e(of)i(segmen)m(ts)h(in)m
(to)f(partitions)f(migh)m(t)h(help)e(in)h(collecting)h(circular)150
3795 y(garbage.)1905 5649 y(51)p eop
%%Page: 52 52
52 51 bop 150 872 a Fj(Bibliograph)-7 b(y)195 1373 y
Fl([1])47 b(A)m(tul)31 b(Ady)m(a.)46 b(T)-8 b(ransaction)32
b(managemen)m(t)h(for)f(mobile)e(ob)5 b(jects)33 b(using)d(optimistic)g
(concurrency)337 1543 y(con)m(trol.)49 b(T)-8 b(ec)m(hnical)33
b(Rep)s(ort)g(MIT/LCS/TR-626,)h(Massac)m(h)m(usetts)i(Institute)c(of)h
(T)-8 b(ec)m(hnology)g(,)337 1712 y(Jan)m(uary)30 b(1994.)195
1956 y([2])47 b(A)m(tul)40 b(Ady)m(a,)k(Rob)s(ert)c(Grub)s(er,)i
(Barbara)f(Lisk)m(o)m(v,)i(and)d(Umesh)g(Mahesh)m(w)m(ari.)71
b(E\016cien)m(t)41 b(op-)337 2125 y(timistic)34 b(concurrency)i(con)m
(trol)h(using)d(lo)s(osely)h(sync)m(hronized)g(clo)s(c)m(ks.)58
b(In)36 b Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)39 b(of)g(the)337
2295 y(A)n(CM)32 b(SIGMOD)h(International)k(Confer)-5
b(enc)g(e)34 b(on)g(Management)h(of)f(Data)p Fl(,)f(San)e(Jose,)h
(Califor-)337 2464 y(nia,)e(Ma)m(y)h(1995.)195 2708 y([3])47
b(Lauren)m(t)26 b(Amsaleg,)i(Mic)m(hael)f(F)-8 b(ranklin,)26
b(and)g(Olivier)e(Grub)s(er.)32 b(E\016cien)m(t)27 b(incremen)m(tal)f
(garbage)337 2878 y(collection)g(for)h(clien)m(t-serv)m(er)g(ob)5
b(ject)27 b(database)h(systems.)34 b(In)26 b Ff(Pr)-5
b(o)g(c)g(e)g(e)g(dings)32 b(of)d(the)h(VLDB)e(Inter-)337
3047 y(national)34 b(Confer)-5 b(enc)g(e)33 b(on)g(V)-7
b(ery)32 b(L)-5 b(ar)g(ge)33 b(Data)g(Bases)p Fl(,)e(Zuric)m(h,)d
(Switzerland,)h(Septem)m(b)s(er)g(1995.)195 3291 y([4])47
b(P)m(eter)39 b(Bishop.)63 b(Computer)38 b(systems)g(with)f(a)i(v)m
(ery)f(large)h(address)e(space,)k(and)d(garbage)i(col-)337
3460 y(lection.)52 b(T)-8 b(ec)m(hnical)34 b(Rep)s(ort)h
(MIT/LCS/TR-178,)h(Massac)m(h)m(usetts)h(Institute)d(of)g(T)-8
b(ec)m(hnology)g(,)337 3630 y(Ma)m(y)31 b(1977.)195 3874
y([5])47 b(Jonathan)37 b(Co)s(ok,)i(Alexander)d(W)-8
b(olf,)39 b(and)d(Benjamin)g(Zorn.)59 b(P)m(artition)37
b(selection)f(p)s(olicies)f(in)337 4043 y(ob)5 b(ject)26
b(database)h(garbage)g(collection.)32 b(In)25 b Ff(Pr)-5
b(o)g(c)g(e)g(e)g(dings)30 b(of)f(the)f(A)n(CM)f(SIGMOD)h
(International)337 4213 y(Confer)-5 b(enc)g(e)26 b(on)h(Management)f
(of)g(Data)p Fl(,)f(pages)e(371{382,)28 b(Mineap)s(olis,)22
b(Minnesota,)j(Ma)m(y)f(1994.)195 4457 y([6])47 b(Da)m(vid)30
b(Detlefs.)42 b(Concurren)m(t,)30 b(atomic)h(garbage)h(collection.)40
b(T)-8 b(ec)m(hnical)31 b(Rep)s(ort)f(CMU-CS-90-)337
4626 y(177,)i(Carnegie)e(Mellon)f(Univ)m(ersit)m(y)-8
b(,)31 b(Octob)s(er)f(1990.)195 4870 y([7])47 b(Edsger)d(Dijkstra,)j
(Leslie)d(Lamp)s(ort,)j(A.)25 b(Martin,)48 b(C.)25 b(Sc)m(holten,)47
b(and)d(E.)25 b(Ste\013ens.)82 b(On-the-)337 5039 y(\015y)45
b(garbage)h(collection:)71 b(An)45 b(exercise)h(in)e(co)s(op)s
(eration.)85 b Ff(Communic)-5 b(ations)49 b(of)e(the)g(A)n(CM)p
Fl(,)337 5209 y(21\(11\):966{975,)36 b(No)m(v)m(em)m(b)s(er)c(1978.)
1905 5649 y(52)p eop
%%Page: 53 53
53 52 bop 195 83 a Fl([8])47 b(P)m(aulo)29 b(F)-8 b(erreira)29
b(and)f(Marc)i(Shapiro.)36 b(Larc)m(han)m(t:)41 b(P)m(ersistence)29
b(b)m(y)g(reac)m(habilit)m(y)f(in)g(distributed)337 252
y(shared)d(memory)i(through)e(garbage)j(collection.)33
b(In)26 b Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)31 b(of)e(the)g(ICDCS)g
(International)337 422 y(Confer)-5 b(enc)g(e)33 b(on)g(Distribute)-5
b(d)33 b(Computing)h(Systems)p Fl(,)e(Hong)f(Kong,)f(Ma)m(y)i(1996.)195
666 y([9])47 b(Sanja)m(y)c(Ghema)m(w)m(at.)80 b(The)42
b(Mo)s(di\014ed)f(Ob)5 b(ject)43 b(Bu\013er:)66 b(a)43
b(storage)i(managemen)m(t)f(tec)m(hnique)337 835 y(for)h(ob)5
b(ject-orien)m(ted)46 b(databases.)85 b(T)-8 b(ec)m(hnical)44
b(Rep)s(ort)h(MIT/LCS/TR-666,)50 b(Massac)m(h)m(usetts)337
1004 y(Institute)30 b(of)g(T)-8 b(ec)m(hnology)g(,)32
b(Septem)m(b)s(er)e(1995.)150 1248 y([10])47 b(Jim)40
b(Gra)m(y)j(and)e(Andreas)g(Reuter.)75 b Ff(T)-7 b(r)i(ansaction)46
b(Pr)-5 b(o)g(c)g(essing:)64 b(Conc)-5 b(epts)45 b(and)f(T)-7
b(e)i(chniques)p Fl(.)337 1417 y(Morgan)31 b(Kaufmann)e(Publishers,)e
(Inc.,)k(San)e(Mateo,)k(CA,)d(1993.)150 1661 y([11])47
b(John)35 b(Hughes.)59 b Ff(A)38 b(Distribute)-5 b(d)39
b(Garb)-5 b(age)39 b(Col)5 b(le)-5 b(ction)40 b(A)n(lgorithm)p
Fl(,)f(pages)e(256{272.)62 b(Num)m(b)s(er)337 1831 y(201)32
b(in)d(Lecture)h(Notes)i(in)d(Computer)h(Science.)g(Springer-V)-8
b(erlag,)29 b(1985.)150 2074 y([12])47 b(Andrew)28 b(Kirmse.)38
b(Implemen)m(tation)29 b(of)h(the)f(t)m(w)m(o-phase)i(commit)f(proto)s
(col)f(in)f(Thor.)39 b(Master's)337 2244 y(thesis,)30
b(Massac)m(h)m(usetts)i(Institute)e(of)g(T)-8 b(ec)m(hnology)g(,)32
b(Ma)m(y)g(1995.)150 2487 y([13])47 b(Elliot)38 b(Kolo)s(dner)g(and)i
(William)d(W)-8 b(eihl.)69 b Ff(A)n(tomic)41 b(Incr)-5
b(emental)43 b(Garb)-5 b(age)43 b(Col)5 b(le)-5 b(ction)p
Fl(,)43 b(pages)337 2657 y(365{387.)h(Num)m(b)s(er)29
b(637)j(in)d(Lecture)h(Notes)i(in)d(Computer)h(Science.)g(Springer-V)-8
b(erlag,)29 b(1992.)150 2901 y([14])47 b(Henry)24 b(Lieb)s(erman)f(and)
g(Carl)h(Hewitt.)31 b(A)25 b(real)f(time)g(garbage)i(collector)f(based)
f(on)g(the)h(lifetimes)337 3070 y(of)30 b(ob)5 b(jects.)42
b Ff(Communic)-5 b(ations)35 b(of)e(the)g(A)n(CM)p Fl(,)c
(26\(6\):419{429,)36 b(June)29 b(1983.)150 3314 y([15])47
b(Barbara)d(Lisk)m(o)m(v,)49 b(A)m(tul)43 b(Ady)m(a,)49
b(Miguel)43 b(Castro,)48 b(Mark)d(Da)m(y)-8 b(,)49 b(Sanja)m(y)c(Ghema)
m(w)m(at,)k(Rob)s(ert)337 3483 y(Grub)s(er,)26 b(Umesh)g(Mahesh)m(w)m
(ari,)h(Andrew)e(My)m(ers,)j(and)e(Liuba)e(Shrira.)32
b(Safe)27 b(and)e(e\016cien)m(t)i(shar-)337 3652 y(ing)k(of)i(p)s
(ersistan)m(t)f(ob)5 b(jects)33 b(in)e(Thor.)46 b(In)31
b Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)37 b(of)e(the)g(A)n(CM)e(SIGMOD)h
(International)337 3822 y(Confer)-5 b(enc)g(e)33 b(on)g(Management)h
(of)e(Data)p Fl(,)g(Mon)m(treal,)f(Canada,)g(June)e(1996.)150
4066 y([16])47 b(Barbara)25 b(Lisk)m(o)m(v,)h(Mark)f(Da)m(y)-8
b(,)27 b(and)d(Liuba)f(Shrira.)29 b(Distributed)23 b(ob)5
b(ject)25 b(managemen)m(t)h(in)e(Thor.)337 4235 y(In)30
b Ff(Distribute)-5 b(d)33 b(Obje)-5 b(ct)32 b(Management)p
Fl(.)f(Morgan)g(Kaufmann,)e(1994.)150 4479 y([17])47
b(Barbara)33 b(Lisk)m(o)m(v,)i(Sanja)m(y)e(Ghema)m(w)m(at,)j(Rob)s(ert)
c(Grub)s(er,)h(P)m(aul)f(Johnson,)h(Liuba)f(Shrira,)g(and)337
4648 y(Mic)m(hael)21 b(Williams.)h(Replication)d(in)h(the)h(Harp)f
(\014le)g(system.)25 b(In)20 b Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)26
b(of)e(the)g(A)n(CM)e(SOSP)337 4817 y(Symp)-5 b(osium)30
b(on)f(Op)-5 b(er)g(ating)30 b(Systems)g(Principles)p
Fl(,)d(pages)g(226{238,)j(P)m(aci\014c)c(Gro)m(v)m(e,)j(California,)337
4987 y(Octob)s(er)h(1991.)150 5231 y([18])47 b(Umesh)30
b(Mahesh)m(w)m(ari)h(and)e(Barbara)i(Lisk)m(o)m(v.)42
b(F)-8 b(ault-toleran)m(t)32 b(distributed)27 b(garbage)32
b(collection)337 5400 y(in)g(a)h(clien)m(t-serv)m(er,)h(ob)5
b(ject-orien)m(ted)34 b(database.)49 b(In)33 b Ff(Pr)-5
b(o)g(c)g(e)g(e)g(dings)37 b(of)e(the)g(PDIS)g(International)1905
5649 y Fl(53)p eop
%%Page: 54 54
54 53 bop 337 83 a Ff(Confer)-5 b(enc)g(e)37 b(on)h(Par)-5
b(al)5 b(lel)38 b(and)f(Distribute)-5 b(d)37 b(Information)i(Systems)p
Fl(,)e(pages)f(239{248,)j(Austin,)337 252 y(T)-8 b(exas,)31
b(Septem)m(b)s(er)f(1994.)150 496 y([19])47 b(Umesh)28
b(Mahesh)m(w)m(ari)h(and)f(Barbara)h(Lisk)m(o)m(v.)39
b(Collecting)27 b(cyclic)i(distributed)d(garbage)k(b)m(y)e(con-)337
666 y(trolled)42 b(migration.)79 b(In)43 b Ff(Pr)-5 b(o)g(c)g(e)g(e)g
(dings)47 b(of)e(the)g(A)n(CM)f(PODC)g(Symp)-5 b(osium)46
b(on)g(Principles)f(of)337 835 y(Distribute)-5 b(d)33
b(Computing)p Fl(,)f(Otta)m(w)m(a,)g(Canada,)f(August)f(1995.)150
1079 y([20])47 b(Scott)36 b(Nettles)f(and)f(James)h(O'T)-8
b(o)s(ole.)53 b(Real-time)35 b(replication-based)e(garbage)j
(collection.)53 b(In)337 1249 y Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)32
b(of)e(the)g(A)n(CM)f(SIGPLAN)g(Confer)-5 b(enc)g(e)31
b(on)f(Pr)-5 b(o)g(gr)g(amming)32 b(L)-5 b(anguage)31
b(Design)e(and)337 1418 y(Implementation)p Fl(,)k(Alb)s(equerque,)c
(NM,)i(June)e(1993.)150 1662 y([21])47 b(James)27 b(O'T)-8
b(o)s(ole,)28 b(Scott)f(Nettles,)i(and)d(Da)m(vid)h(Gi\013ord.)34
b(Concurren)m(t)26 b(compacting)i(garbage)g(col-)337
1831 y(lection)23 b(of)h(a)g(p)s(ersisten)m(t)f(heap.)29
b(In)23 b Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)29 b(of)d(the)h(A)n(CM)e
(SOSP)h(Symp)-5 b(osium)29 b(on)e(Op)-5 b(er)g(ating)337
2001 y(Systems)33 b(Principles)p Fl(,)e(pages)g(161{174,)j(Asheville,)
29 b(North)h(Carolina,)f(Decem)m(b)s(er)i(1993.)150 2245
y([22])47 b(James)23 b(O'T)-8 b(o)s(ole)22 b(and)g(Liuba)f(Shrira.)26
b(Opp)s(ortunistic)20 b(log:)36 b(E\016cien)m(t)23 b(reads)f(in)g(a)h
(reliable)d(storage)337 2414 y(serv)m(er.)55 b(In)34
b Ff(Pr)-5 b(o)g(c)g(e)g(e)g(dings)39 b(of)e(the)g(Usenix)g(OSDI)f
(Symp)-5 b(osium)39 b(on)e(Op)-5 b(er)g(ating)39 b(Systems)f(Design)337
2584 y(and)33 b(Implementation)p Fl(,)g(Mon)m(terey)-8
b(,)33 b(CA,)d(1994.)150 2828 y([23])47 b(Marc)29 b(Shapiro,)e(Olivier)
f(Grub)s(er,)h(and)h(Da)m(vid)h(Plainfosse.)36 b(A)28
b(garbage)i(detection)f(proto)s(col)f(for)337 2997 y(a)f(realistic)e
(distributed)f(ob)5 b(ject-supp)s(ort)26 b(system.)34
b(T)-8 b(ec)m(hnical)26 b(Rep)s(ort)g(1320,)k(Institut)25
b(National)337 3166 y(de)34 b(la)h(Rec)m(herc)m(he)h(en)f(Informatique)
e(et)j(Automatique,)g(Ro)s(cquencourt)f(\(F)-8 b(rance\),)38
b(No)m(v)m(em)m(b)s(er)337 3336 y(1990.)150 3580 y([24])47
b(P)m(aul)35 b(Wilson.)54 b Ff(Unipr)-5 b(o)g(c)g(essor)40
b(Garb)-5 b(age)39 b(Col)5 b(le)-5 b(ction)38 b(T)-7
b(e)i(chniques)p Fl(,)38 b(pages)e(1{42.)57 b(Num)m(b)s(er)35
b(637)337 3749 y(in)29 b(Lecture)i(Notes)g(in)e(Computer)h(Science.)g
(Springer-V)-8 b(erlag,)30 b(1992.)150 3993 y([25])47
b(V)-8 b(o)s(on-F)g(ee)28 b(Y)-8 b(ong,)28 b(Je\013rey)e(Naugh)m(ton,)h
(and)e(Jie-Bing)g(Y)-8 b(u.)33 b(Storage)27 b(reclamation)f(and)f
(reorgani-)337 4163 y(zation)d(in)e(clien)m(t-serv)m(er)i(p)s(ersisten)
m(t)f(ob)5 b(ject)22 b(stores.)27 b(In)21 b Ff(Pr)-5
b(o)g(c)g(e)g(e)g(dings)27 b(of)e(the)g(ICDE)f(International)337
4332 y(Confer)-5 b(enc)g(e)33 b(on)g(Data)h(Engine)-5
b(ering)p Fl(,)30 b(pages)h(120{133,)j(Houston,)d(T)-8
b(exas,)31 b(F)-8 b(ebruary)30 b(1994.)1905 5649 y(54)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
