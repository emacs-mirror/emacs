%!PS-Adobe-0.67%%DocumentFonts: (atend)%%Title: Buffer resume-no-hobbies.mss >Reti W:%%CreationDate: 1/20/98 10:09:46%%Pages: 2%%EndCommentsstatusdict /waittimeout 60 3 mul put/mydict 500 dict defmydict begin/ConsString 1000 string def/OneCharString 1 string def/m /moveto load def/x { currentpoint exch pop moveto} bind def/y { currentpoint pop exch moveto} bind def/s {	ConsString 0 3 -1 roll getinterval currentfile exch readstring pop show} bind def/cs { OneCharString dup 0 4 -1 roll put } bind def/ns { cs show} bind def/ns0 { currentpoint 3 -1 roll ns moveto} bind def/f {	ExtToInt exch get dup /UnusedFont ne { IntFonts exch get setfont } { pop } ifelse } def/xdef {exch def} bind def/xget {exch get} bind def/r {	gsave currentpoint	4 copy moveto exch 3 -1 roll lineto 4 2 roll lineto lineto closepath	fill grestore	}def/l {	currentpoint gsave newpath moveto lineto stroke grestore} def/fic { gsave newpath 0 360 arc fill grestore} def/lgp2-matrix matrix def/lgp2-getmatrix { lgp2-matrix currentmatrix pop lgp2-setmatrix } bind def/lgp2-setmatrix { lgp2-matrix setmatrix                   0 lgp2-y-translation translate lgp2-rotation rotate		  viewmatrix concat } bind def/viewmatrix matrix def /setviewoffset { 5 -1 4 { viewmatrix exch 3 -1 roll put } for                   lgp2-setmatrix                } bind def/NextPage {	showpage	pop        0 0 moveto        restore save	lgp2-getmatrix	} def /partialinitgraphics { 1 setlinewidth 0 setlinecap 0 setlinejoin [] 0 setdash 0 setgray } bind def/TempMatrix matrix def/sm { lgp2-setmatrix      5 -1 0 { TempMatrix exch 3 -1 roll put } for      TempMatrix concat     } bind def/sm1 {1 0 0 1 0 0 sm} bind def/gs /gsave load def/gr /grestore load def/l2 /lineto load def/ell { TempMatrix currentmatrix pop       7 -2 roll transform 7 -2 roll scale itransform 1 6 3 roll       {arcn} {arc} ifelse       TempMatrix setmatrix     } bind def/uscale { dup idtransform pop } bind def/usetlinewidth { uscale setlinewidth } def/usetdash { exch dup 3 1 roll             dup length 1 sub -1 0 { exch dup 3 -1 roll 2 copy get uscale abs put } for             pop setdash	   } bind def/fmod { 2 copy div floor mul sub } bind def/imgdict 17 dict def/pat { imgdict begin gsave	[/scal /patseq ] {exch def} forall	/patheight patseq length def	/patwidth patseq 0 get length 8 mul def	/pswidth patwidth scal mul def	/psheight patheight scal mul def	pswidth psheight idtransform	0 0 transform psheight fmod neg exch pswidth fmod neg exch idtransform        3 -1 roll exch dup 0 gt {add} {exch pop} ifelse        3 1 roll dup 0 gt {add} {exch pop} ifelse exch 2 copy translate	3 -1 roll exch abs add 3 1 roll abs add exch dtransform	psheight div abs ceiling cvi patheight mul /height exch def	pswidth div abs ceiling cvi patwidth mul /width exch def	width 0 ne { height 0 ne {	/scanline -1 def /linebits 0 def	width height idtransform abs scale scal dup scale	width height true [width 0 0 height neg 0 height] 	{ linebits 0 le { /linebits width def			  /scanline scanline 1 add patheight mod def			  /linepat patseq scanline get def			} if	/linebits linebits patwidth sub def linepat }	imagemask } if } if grestore end      } def/patfill1 { initmatrix clippath             errordict begin               /nocurrentpoint dup dup load exch { pop 0 0 0 0 } def                  pathbbox               6 -2 roll def end             4 2 roll 2 copy translate 4 -2 roll             3 -1 roll sub 3 1 roll exch sub exch             3 -1 roll { 2 copy gsave 1 setgray newpath                         0 0 moveto 0 exch lineto 0 rlineto currentpoint pop 0 lineto                         closepath fill grestore } if             4 -2 roll pat } def/patfill { gsave clip patfill1 grestore newpath } def/pateofill { gsave eoclip patfill1 grestore newpath } def/patstroke { gsave strokepath clip patfill1 grestore newpath } defimgdict begin/imgcodes 1 string def/nextimgcode { currentfile imgcodes readhexstring pop 0 get } bind def/imgbuf 100 string defend/img { imgdict begin	[/imgproc /depth /nbytes /height /width ] {exch def} forall	nbytes 0 ne {	  gsave width height scale	  width height depth [width 0 0 height neg 0 height] 	  {	nbytes 100 ge {/nbytes nbytes 100 sub def imgbuf} 			      {imgbuf 0 nbytes getinterval /nbytes 0 def}			  ifelse 		currentfile exch readhexstring pop}	imgproc grestore	} if end	} def /lgp2-rotation 0 def  /lgp2-y-translation 0 def /BSEncoding [/periodcentered /arrowdown /fi /fl /logicaland /logicalnot /endash /emdash /acute /grave /dagger /daggerdbl /section /cent /sterling /fractionslant /dieresis /caron /cedilla /breve /macron /guilsinglleft /guilsinglright /guillemotleft /guillemotright /perthousand /quotedblleft /quotedblbase /florin /germandbls /questiondown /exclamdown /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine /colon /semicolon /less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde /integral /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ] def/$workingdict 30 dict def/max {1 index 1 index gt {pop} {exch pop} ifelse }def/min {1 index 1 index gt {exch pop} {pop} ifelse }def/minminmaxmax [{min}{min}{max}{max}] def/FinishFont { dup load definefont pop } def/CurrentlyDefiningInFont {load /CurrentlyDefiningFont xdef} def/SetupBitmapFont {	exch dup 10 dict def	load begin	/FontType 3 def	/FontMatrix 72 300 div dup matrix scale def	/FontBBox [99999 99999 -99999 -99999] def	/BuildChar { BuildBitmapChar }def	/chardefs 256 dict def	/Encoding exch def	end } def/BuildBitmapChar {	$workingdict begin	/charcode xdef	begin Encoding charcode get dup /.notdef eq		{pop end 0 0 0 0 0 0 setcachedevice }		{chardefs xget end BuildBitmapChar1}		ifelse	end } def/DefineBitmapChar {	$workingdict begin	/chardict 9 dict def 	chardict begin	  aload pop	  [/widthy /widthx /bottom /leftkern /rasterheight /rasterwidth /charcode]	     {xdef} forall	  rasterheight rasterwidth mul 8 idiv	  end /stringlength xdef	CurrentlyDefiningFont /chardefs get chardict /charcode get chardict put	stringlength 0 gt { currentfile stringlength string readhexstring 			    not {(reached eof) print errstop} if}			  { 0 string} ifelse	  chardict begin /bytes xdef end	CurrentlyDefiningFont /FontBBox get /bbox xdef	chardict begin 	  bbox 0 bbox 0 get leftkern neg min put	  bbox 1 bbox 1 get bottom min put	  bbox 2 bbox 2 get rasterwidth leftkern sub max put	  bbox 3 bbox 3 get bottom rasterheight add max put	  end	end } def/BuildBitmapCharTempMatrix matrix def/BuildBitmapChar1 {	begin	widthx widthy	   leftkern neg bottom	   rasterwidth leftkern sub bottom rasterheight add 	   setcachedevice	rasterwidth rasterheight mul 0 ne	{ rasterwidth rasterheight true 	   leftkern bottom neg BuildBitmapCharTempMatrix translate	   {bytes} imagemask	  } if	end } def/LWCENTURYSCHOOLBOOK105 BSEncoding SetupBitmapFont/LWCENTURYSCHOOLBOOK105 CurrentlyDefiningInFont[/space 0 0 0 0 19 0] DefineBitmapChar[/quoteright 8 12 -4 18 13 0] DefineBitmapChar80c0603018180c2cfcfcf8f8[/parenleft 16 36 -3 -5 16 0] DefineBitmapChar0020006001c00100030006000c001c00180038003800780070007000f000f000f000f000f000f000f000f0007000700070003800380018001c000c00060006000300018000400020[/parenright 16 36 -2 -5 16 0] DefineBitmapChar8000c0003000180018000c000600070003000380038003c001c001c001e001e001e001e001e001e001e001e001c001c001c0038003800380070006000c000c001800300060008000[/comma 8 13 -3 -8 12 0] DefineBitmapChar80e07030181c0c0c7cfcfcf870[/hyphen 16 4 -2 8 14 0] DefineBitmapCharffc0ffc0ffc0ffc0[/period 8 5 -3 -1 12 0] DefineBitmapChar70f8f8f870[/slash 16 32 0 -1 12 0] DefineBitmapCharc000c00060006000600030003000300010001800180008000c000c000c0006000600060003000300030001800180018000c000c000c000400060006000600030[/zero 24 30 -2 -1 24 0] DefineBitmapChar00f00007fc000f0f001e07801c03803c03c03801c07801e07801e07801e0f801f0f801f0f801f0f801f0f801f0f801f0f801f0f801f0f801f0f801f07801e07801e07801e03801e03c03c01c03c01e07800f0f0007fe0001f800[/one 16 29 -2 0 19 0] DefineBitmapCharffffffff07e003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c003c0ffc0ffc00fc001c000c0[/two 24 29 -1 0 24 0] DefineBitmapCharfffff07ffff07ffff03ffff01c00300e003807001803801801c01800e000007800003c00001e00000f800007c00007e00003e01c01f03e01f03e00f87e00f87c00f87000f03000f03001f01801e00e07c007ff8001fe00[/three 24 30 -2 -1 24 0] DefineBitmapChar01f0000ffe003c1f807007c06003e0f001e0f801f0fc01f0fc01f07801f03001f00001e00001e00003c000078003fe0003fc00000f000007800003c00003e03c01e07c01e07c01e07c03e03803c03803c01c0f800fff0003fc00[/four 24 29 -1 0 24 0] DefineBitmapChar00fff800fff8000f00000f00000f00000f00000f00fffffcfffffcfffffc600f00700f00380f001c0f000c0f000e0f00070f00038f00018f0001cf0000ef00006f00003f00003f00001f00000f00000700000700000300[/five 24 30 -2 -1 24 0] DefineBitmapChar01e0000ffc003c1f007007806003c0f003e0f801e0fc01f0fc01f07801f03001f00001f00001f00001e07003e07003e03807c03e1f803ffe0030f0001800001800001800001800001800001ffe001fff801fffc01fffc0180020[/six 24 30 -2 -1 24 0] DefineBitmapChar00f00003fe000f0f801e03c03c03c03c01e07801e07801f07801f0f801f0f801f0f801f0f801f0fc01f0fe03e0ff07c0fbffc0f8ff00783c007800007800007800003c01c03c03e01e03e00e03e00f01e003c3c001ff80007e00[/seven 24 30 -3 -1 24 0] DefineBitmapChar00c00001e00003f00003f00003f00003f00001f00001f00001f00000f00000f000007000007000007800003800003800001c00000c00000e00000600c00600c00300c00300e001806001806000c07fffc07fffe07fffe07fffe0[/eight 24 30 -2 -1 24 0] DefineBitmapChar01f0000ffe003e07807801c07000e0f000e0f00070e00070e00070f00070f000f07001f03803f01c1fe007ffc007ff800ffe001ffe003fc7003e03807c01c07800e07800e07000e03000e03801c01801c01e078007ff0001fc00[/nine 24 30 -2 -1 24 0] DefineBitmapChar07c0001ff800383c00780e007c07007c07807c03c03803c00001e00001e00001e007e1f01ff9f03ffdf07c0ff07807f0f803f0f803f0f001f0f001f0f001f0f001e0f001e07001e07803c07803c03c07801e0f000ffe0003f800[/A 32 31 1 0 31 0] DefineBitmapCharfff01ffffff01fff3f0001f80e0001f80e0001f0060001f0070003e0030003e0038007c0038007c001ffffc001ffff8000c00f8000e01f0000e01f0000601e0000703e0000303e0000387c0000187c000018f800001cf800000cf800000df0000007f0000007e0000007e0000003c0000003c0000001c00000018000[/B 32 31 -1 0 30 0] DefineBitmapCharfffff000fffffe000fe03f8007c00fc007c007e007c003e007c003f007c003f007c003f007c003f007c003f007c007e007c007e007c00fc007c03f0007fffc0007ffe00007c03c0007c01f0007c00f8007c00f8007c007c007c007c007c007c007c007c007c00fc007c00f8007c01f800fc03f00fffffe00fffff000[/C 32 32 -2 -1 30 0] DefineBitmapChar000f800000fff00001f87c0007c01e000f8007001f0003001e0003803e0001c03e0000c07c0000c07c0000c07c0000c0fc000000fc000000fc000000fc000000fc000000fc000000fc000000fc0000007c0000c07c0000c07c0001c03e0001803e0003801e0003801f0007800f80078007c01f8003e03b8000fff180003fc180[/D 32 31 -1 0 33 0] DefineBitmapCharfffff800fffffe000fe01f8007c007c007c003e007c001e007c001f007c000f007c000f807c000f807c000f807c000fc07c0007c07c0007c07c0007c07c0007c07c0007c07c0007c07c0007c07c0007c07c000f807c000f807c000f807c000f807c001f007c001e007c003e007c007c00fe03f80fffffe00fffff000[/E 32 31 -1 0 31 0] DefineBitmapCharffffffe0ffffffe00fe00fe007c001e007c000e007c000f007c0007007c0007007c0007007c0603007c0603007c0603007c0600007c0e00007c1e00007ffe00007ffe00007c3e00007c0e00007c0e00007c0606007c0606007c060e007c000e007c000e007c001e007c001c007c003c00fe01fc0ffffffc0ffffffc0[/F 32 31 -1 0 29 0] DefineBitmapCharfffe0000fffe00000fe0000007c0000007c0000007c0000007c0000007c0000007c0000007c0600007c0600007c0600007c0e00007c0e00007c1e00007ffe00007ffe00007c3e00007c0e00007c0e00007c0606007c0606007c060e007c000e007c000e007c001c007c001c007c003c00fe01fc0ffffffc0ffffffc0[/G 32 32 -2 -1 34 0] DefineBitmapChar000fc060007ff86001f83ce007c00ee00f8007e01f0003e01e0003e03e0003e03e0003e07c0003e07c0003e07c0003e0fc0003e0fc003ffefc003ffefc000000fc000000fc000000fc000000fc0000007c0000607c0000e07c0000e03e0000c03e0001c01e0001c01f0003c00f8007c007c00fc003f03dc000fff8c0001fc0c0[/H 40 31 -1 0 36 0] DefineBitmapCharfffc0fffc0fffc0fffc00fe001fc0007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007fffff80007fffff80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f80007c000f8000fe001fc00fffc0fffc0fffc0fffc0[/I 16 31 -2 0 17 0] DefineBitmapCharfff8fff81fc00f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f800f801fc0fff8fff8[/J 24 32 0 -1 23 0] DefineBitmapChar03e0001ffc003ffe00701f00600f80c00780c007c0fc07c0fe07c0fe07c07e07c07e07c03c07c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c00007c0000fe000fffe00fffe[/K 32 31 -2 0 33 0] DefineBitmapCharfff83ffffff83fff1fc003f80f8003f00f8003e00f8007c00f800fc00f800f800f801f000f803f000f803e000fc07c000fc0fc000fe0f8000ff1f0000fbbf0000f9fe0000f8fc0000f8780000f8380000f81c0000f80e0000f8070000f8038000f801c000f800e000f8007000f8007801fc007e0fff87ffcfff87ffc[/L 32 31 -1 0 29 0] DefineBitmapCharffffffc0ffffffc00fe01fc007c003c007c001c007c001e007c000e007c000e007c000e007c0006007c0006007c0006007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c000000fe00000fffe0000fffe0000[/M 40 31 0 0 41 0] DefineBitmapCharfffc107ffffffc387fff0fe03807f007c03803e003807c03e003807c03e00380fe03e00380fe03e00380fe03e00381f703e00381f303e00381e303e00383e383e00383e183e00383c183e00387c1c3e00387c0c3e0038780c3e0038f80e3e0038f8063e0038f0063e0039f0073e0039f0033e0039e0033e003be003be003be001be003bc001be003fc001fe007fc000ff07ff8000fff7ff8000fff[/N 40 32 -1 -1 36 0] DefineBitmapChar0000001800fff8003800fff80078001fc000f8000f8000f800070001f800070003f800070007f800070007f80007000fb80007001fb80007001f380007003e380007007e38000700fc38000700f838000701f038000703f038000703e038000707c03800070fc03800071f803800071f003800073e003800077e003800077c00380007f800380007f800380007f0007c000fe000fe00ffc007ffc0ffc007ffc0[/O 32 32 -2 -1 34 0] DefineBitmapChar00078000007ff80001f87e0003c01f00078007800f0003c01f0003e03e0001f03e0001f07e0001f87c0000f87c0000f8fc0000fcfc0000fcfc0000fcfc0000fcfc0000fcfc0000fcfc0000fcfc0000fc7c0000f87c0000f87e0001f83e0001f03e0001f01f0003e00f0003c00f80078003c00f0001f03e00007ff800001fe000[/P 32 31 -1 0 30 0] DefineBitmapCharfffe0000fffe00000fe0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007c0000007fff80007fffe0007c01f8007c00f8007c007c007c003e007c003e007c003e007c003e007c003e007c003e007c003c007c007c007c00f800fc01f80fffffe00fffff800[/R 32 32 -1 -1 31 0] DefineBitmapChar000001e0fffe07f0fffe07f80fe00ff807c00f8c07c00f8c07c00f8c07c00f0c07c01f0007c01f0007c01f0007c01e0007c01e0007c03e0007c03c0007c0f80007ffc00007fffc0007c03f0007c00f8007c007c007c003c007c003e007c003e007c003e007c003e007c003e007c007c007c00fc00fc01f80ffffff00fffff800[/S 24 32 -2 -1 26 0] DefineBitmapCharc03e00c1ffc0e7e3f0ef0078fc0038f8001cf0001cf0001ee0000ee0001ec0001ec0003ec0007c0001fc001ffc01fff807fff01fffc03ffe007fe0007e0000f80018f00018f00018e00038e000387000787000f83801f81c07b80ffe1803f818[/T 32 31 -2 0 31 0] DefineBitmapChar03fff80003fff800003f8000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000001f0000801f0020801f0060c01f0060c01f0060c01f0060c01f0060e01f00e0e01f00e0f01f01e0f81f03e0ffffffe0ffffffe0[/U 40 32 -1 -1 36 0] DefineBitmapChar0003f00000001ffe0000007fff800000fc03c00001f000e00003e000600003e000700007c000300007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c000380007c00038000fe0007e00fffc07ffc0fffc07ffc0[/V 40 32 1 -1 32 0] DefineBitmapChar00008000000001c000000001c000000003e000000003e000000007f000000007f000000007f00000000fb80000000f980000001f1c0000001f1c0000001f0c0000003e0e0000003e060000007c070000007c070000007c03000000f803800000f801800001f001c00001f001c00001f000c00003e000e00003e000600007c000700007c00070000fc00038000f800078001fc000fc00fffc07ff80fffc07ff80[/W 48 32 0 -1 43 0] DefineBitmapChar000400040000000e000e0000000e000e0000000e001e0000001f001f0000001f001f0000001f003f0000003f803f8000003f803f8000003d807d8000007dc07dc000007cc07dc0000078c0f8c00000f8e0f8e00000f860f8e00000f061f0600001f061f0700001f071f0700001e033e0300003e033e0380003e03be0380003c01fc0180007c01fc0180007c01fc01c0007800f800c000f800f800c000f800f800e000f801f000e001f001f000f001f803f001f80fff1fff0ffe0fff1fff0ffe0[/X 32 31 0 0 31 0] DefineBitmapCharfff07ffefff07ffe3f8007f00f0007e007000fc003800f8001801f8001c03f0000e03e0000607c000030fc000039f800001df000000ff000000fe0000007c000000f8000001f8000001fc000003ee000007e600000fc300000f8380001f81c0003f00c0003e00e0007e007000fc007801fc00fe0fff83ff8fff83ff8[/a 24 22 -2 -1 23 0] DefineBitmapChar0e00003fe3f07ff3f8f83fd8f00f80f00f80f00780f007807807807c07801e078007e78001ff80001f803807807c07807c0780780780380780381f001ffe0003f800[/b 24 33 0 -1 24 0] DefineBitmapChar000e00187fc01cf1e00fc0f00f80780f80780f00380f003c0f003c0f003c0f003c0f003c0f003c0f003c0f003c0f00380f80780f80780fc0f00f73e00f3fc00f1f000f00000f00000f00000f00000f00000f00000f00000f0000ff0000ff0000070000[/c 24 22 -2 -1 21 0] DefineBitmapChar01e0000ff8001ffe003e0e007c0300780180780180f00000f00000f00000f00000f00000f00000f00000f00f00701f00781f80781f803c0f001e0f000ffe0003f800[/d 24 33 -2 -1 24 0] DefineBitmapChar0180000ff3f81ffbf83e1fc03807c07807c07003c0f003c0f003c0f003c0f003c0f003c0f003c0f003c0f003c07003c07807c07807c03c0fc01f3bc00ff3c003e3c00003c00003c00003c00003c00003c00003c00003c00003c0003fc0003fc00001c0[/e 24 22 -2 -1 22 0] DefineBitmapChar01e0000ffc001ffe003e03003c01807800c07800c0f00000f00000f00000f00000ffffc0ffffc0f003c0f003c07003c07803807807803807001e0f000ffc0003f000[/f 24 32 -1 0 16 0] DefineBitmapCharfff000fff0000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f0000fff800fff8000f00000f00000f00000f00000f00000703c00787c00783c003c3c001ff80007e00[/g 24 31 -1 -9 25 0] DefineBitmapChar07fe003fff807c01e0f00070f00030f000387800381c00f81ffff03ffff07fffe07fff007800003000003800001ff00003fe000f07801e03c01c01c03c01e03c01e03c01e03c01e03c01e01c01c01e03cc0f07de07fffe01fc3e00001c[/h 24 32 -1 0 26 0] DefineBitmapCharffc3ffffc3ff1e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781f00781f00781f80f81ec1f01e7fe01e1fc01e00001e00001e00001e00001e00001e00001e00001e0000fe0000fe00000e0000[/i 16 32 -1 0 14 0] DefineBitmapCharfff0fff00f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00ff00ff000000000000000000000000000e000f001f801f000e00[/j 16 41 4 -9 13 0] DefineBitmapChar3f007fc0f1e0f8e0f8707070007800780078007800780078007800780078007800780078007800780078007800780078007800780078007807f807f8000000000000000000000000007000f800f800f80070[/k 24 32 0 0 24 0] DefineBitmapCharffe7ffffe7ff0f00f80f00f00f01f00f03e00f03c00f07800f0f800f8f000fde000ffe000f7c000f38000f1c000f0e000f07000f03800f01e00f1ffc0f1ffc0f00000f00000f00000f00000f00000f00000f00000f0000ff0000ff0000070000[/l 16 32 -1 0 14 0] DefineBitmapCharfff0fff00f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00ff00ff000700[/m 40 21 -1 0 38 0] DefineBitmapCharffc7fe3ff0ffc7fe3ff01e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801e00f007801f00f807801f00f807801f81ec0f001effe7ff00fe7fc3fe00fe1f00f800[/n 24 21 -1 0 26 0] DefineBitmapCharffc3ffffc3ff1e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781e00781f00781f80f81fc0f01efff0fe7fe0fe1f80[/o 24 22 -2 -1 22 0] DefineBitmapChar01e0000ffc001e1e003c0f00380700780780700380f003c0f003c0f003c0f003c0f003c0f003c0f003c0f003c07003807807807807803c0f001e1e000ffc0003f000[/p 24 30 -1 -9 24 0] DefineBitmapCharffc000ffc0001e00001e00001e00001e00001e00001e00001e00001e3f001effc01fc3e01f81e01f00f01f00f01e00701e00781e00781e00781e00781e00781e00781e00781e00781f00f01f00f01f81e01fc3e0feffc0fe3f00[/q 24 30 -2 -9 24 0] DefineBitmapChar001ff8001ff80003c00003c00003c00003c00003c00003c00003c007e3c01ffbc03e1fc03c0fc07807c07807c0f003c0f003c0f003c0f003c0f003c0f003c0f003c0f003c07003c07807c07807c03c0fc01e1cc00ff8e007e060[/r 24 21 -1 0 20 0] DefineBitmapCharfff000fff0000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f00000f80000f80000f83800fc7c00f47c00f67c0ff3fc0ff1f00[/s 16 22 -3 -1 20 0] DefineBitmapChar83e0cff8fe1cf80ef006e007c007c007c01f01fe0ffe3ffc7ff07f80f004e004e00ce00c601c707c3fec0fc4[/t 16 30 -1 -1 17 0] DefineBitmapChar01e007f00fb80f1c1e0c1e061e061e061e061e001e001e001e001e001e001e001e001e001e001e00fffcfffc3e001e000e000e000600060006000600[/u 32 22 0 -1 26 0] DefineBitmapChar0078000001fe3f8007ff3f8007c1bc000f80fc000f007c000f007c000f003c000f003c000f003c000f003c000f003c000f003c000f003c000f003c000f003c000f003c000f003c000f003c000f003c00ff03fc00ff03fc00[/v 24 22 0 -1 23 0] DefineBitmapChar001000003800003800007800007c00007c0000fe0000e60001e70001e30001e30003c18003c18007c1c00780c00780c00f00e00f00601f00701f0078ffc3feffc3fe[/w 32 22 -1 -1 33 0] DefineBitmapChar0040040000e00e0000e00e0000e00e0001f01f0001f01f0001f03f0003d83d8003d83d80079c7980078c78c0078c78c00f0ef0c00f06f0600f06f0601e03e0601e03e0301e03c0303c03c0383c07c03cff1ff8ffff1ff8ff[/x 24 21 0 0 23 0] DefineBitmapCharff8ffeff8ffe1e01f00e03e00603e00707c0038f8001df0000ff00007e00007c0000780000fc0001fe0003e70007c38007c1800f81c01f00e07fe7fc7fe7fc[/y 24 30 1 -9 22 0] DefineBitmapChar3c00007f0000f38000f8c000f8e000706000007000003000003000001800001800003c00003c00007e00007e0000fe0000f30000f30001e38001e18003e18003c0c003c0c00780e00780600f00600f00701f00787fe3fe7fe3fe[/z 16 21 -2 0 21 0] DefineBitmapCharfffffffff80f78033c033e031f010f010f8007c003c003e001f000f040f8407c603c601e701f7fff7fff/LWCENTURYSCHOOLBOOK105 FinishFont/LWCENTURYSCHOOLBOOK105I BSEncoding SetupBitmapFont/LWCENTURYSCHOOLBOOK105I CurrentlyDefiningInFont[/space 0 0 0 0 19 0] DefineBitmapChar[/a 24 22 0 -1 24 0] DefineBitmapChar0600001fc7c03fe7e0783730781f18f00f08f00f0cf00784f00780f00380f00380f803c07803c07801c07c01e03c01e03e01e01e01e00f03f007877003fe7800f800[/b 24 33 0 -1 22 0] DefineBitmapChar0780001ff0003c7800701e00f00f00f00780f00780f003c0f003c0f003e0f001e07801e07801e07801f03c00f03c00f03e01f01f01e01f81e01fe7c00e7f800f3f000f00000f000007800007800007800003c00003c00003c00001e0001fe0000fe000[/d 32 33 0 -1 26 0] DefineBitmapChar070000001fe3e0003ff3f000781b9800780f8c00f0078600f0078600f003c300f003c000f001c000f001c0007801e0007801e0007800e0003c00f0003c00f0001e00f0000e00f0000f01f80007c3780001ff3800007c3c0000003c0000003c0000001e0000001e0000001e0000000f0000000f0000000f00000007800000ff8000007f80[/e 24 22 0 -1 19 0] DefineBitmapChar07c0001ff0003e7c00780e00700600f00200f00000f00000f00000fe0000ffc000f0f000783c00781e00380f003c07801c07800e038007078003878001ff00007e00[/f 24 41 2 -9 15 0] DefineBitmapChare000007800007800003c00003c00003c00001e00001e00001e00000e00000f00000f000007000007000007800007800007800003800003c00003c00003c00001c00001e00001e00001e00000e00000e00000f0000fff8007ffc0007000007800003800003800003c00001c1c000e1e000e1e00071e0001fc0000f8[/i 16 32 -1 0 15 0] DefineBitmapChar7e007f00f380f1c0f0c07860782078003c003c003c001c001e001e000e000f000f000f000f807f807f80000000000000000000000000000001c001e001e001c0[/n 24 21 0 0 26 0] DefineBitmapCharf003e07807f078079878078c3807863c03823c03c31c03c01e03c01e01e00e01e00f01e00f00e00f80f00780f007407007e07007b070079cf03f8ff01fc3e0[/o 24 22 0 -1 22 0] DefineBitmapChar03c0000ff8003c3c00780f00700780f00780f003c0f003e0f001e0f001e0f001f0f800f07800f07800f07c00f03c00f03e00f01e00e00f01e00783c001ff80007e00/LWCENTURYSCHOOLBOOK105I FinishFont/LWCENTURYSCHOOLBOOK105B BSEncoding SetupBitmapFont/LWCENTURYSCHOOLBOOK105B CurrentlyDefiningInFont[/space 0 0 0 0 19 0] DefineBitmapChar[/parenleft 16 35 -3 -5 17 0] DefineBitmapChar0020006000c001c0038007000f001e001e003e003e007c007c007c00fc00fc00fc00fc00fc00fc00fc00fc007c007c007c003e003e001e001e000f0007000380018000c00060[/parenright 16 35 -3 -5 17 0] DefineBitmapChar8000c0006000700038001c001e000f000f000f800f8007c007c007c007e007e007e007e007e007e007e007e007c007c007c00f800f800f000f001e001c0038007000e000c000[/comma 16 14 -2 -7 13 0] DefineBitmapChar6000700038001c000e000f0007003f807f80ff80ff80ff007f003e00[/hyphen 16 5 -2 8 14 0] DefineBitmapCharffc0ffc0ffc0ffc0ffc0[/period 16 8 -2 -1 13 0] DefineBitmapChar1c007f007f00ff80ff80ff807f003e00[/zero 24 31 -1 -1 24 0] DefineBitmapChar00fc0003ff000fcfc00f87c01f03e03f03f03f03f07e01f87e01f87e01f87e01fcfe01fcfe01fcfe01fcfe01fcfe01fcfe01fcfe01fcfe01fcfe01fc7e01fc7e01f87e01f87e01f83f03f03f03f01f03e00f87c00fcfc003ff0000fc00[/one 24 30 -2 0 20 0] DefineBitmapCharffffc0ffffc00ff80007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f0000ff000fff000fff0000ff00000f000003000[/two 24 30 -1 0 25 0] DefineBitmapCharfffff8fffff87ffff87ffff83ffff81ffff80e003807001803801c01e01c01f01c00fc00007e00003f80001fc0000fe0000ff01e07f03f07f87f83f87f83f87f03fc7f03f87e03f87803f83803f81c07f00f1fe007ffc001fe00[/three 24 31 -2 -1 25 0] DefineBitmapChar03fe001fff803c1fc0780fe0f807f0fc03f8fe03f8fe03f8fe03f8fe03f87c03f80003f80007f00007f0000fc003ff8007fc00039f00000fc00007e01c07f07e07f07f03f07f03f07f07f07e07f07c07f03c0fe01f1fc00fff8003fc00[/four 24 30 -1 0 25 0] DefineBitmapChar00fffc00fffc000fe0000fe0000fe0000fe0000fe0fffffefffffefffffef00fe0700fe0380fe01c0fe01e0fe00e0fe0070fe0038fe001cfe001efe000efe0007fe0003fe0001fe0001fe0000fe00007e00003e00001e00000e0[/five 24 31 -2 -1 25 0] DefineBitmapChar03f8001fff003e3fc0780fe0f807f0fe07f0fe03f8fe03f8ff03f8fe03f87e03f81803f80003f80003f87003f87007f0380ff03e3fe03fff803bfe003800001800001800001800001ffe001fff801fffc01fffe01ffff01ffff01e0030[/seven 24 31 -3 -1 25 0] DefineBitmapChar00600001f80003fc0003fc0003fc0003fc0003fc0003fc0001fc0001fc0000fc0000fe00007e00007e00003e00003e00001f00000f00c00700c00780e00380e001c0e001c0e000e079fc607fffe07ffff07ffff07ffff87ffff87f8ff8[/eight 24 30 -1 0 25 0] DefineBitmapChar01fe000fffc01f83f03e00f87c007c7c007cfc003cfc003efc007e7c007e7e00fe3e07fe1f3ffe03fffc07fffc0ffff81fffe03fff803fffc03fe1f03f80f83f00f83e007c3e007c3e00fc1e00f80f01f80783f003ffe000ff00[/nine 24 30 -1 0 24 0] DefineBitmapChar07f8001ffe003e1f807e0fc07f07e07f03e07f03f07f01f03e01f80001f80001f80001fc0ff9fc1ffdfc3ffffc7f87fc7f03fcfe03fcfe01fcfe01fcfe01fcfe01f8fe01f87e01f87e01f03f03f03f03e01f87c007ff8001fe00[/A 40 31 1 0 33 0] DefineBitmapCharfff01fffc0fff01fffc07fc003ff001f0001fe000f0003fe000f0003fc00070003fc00078007fc00038007f80003fffff80001fffff00001fffff00000e01fe00000e01fe00000703fc00000703fc00000787fc00000387f800000387f8000001cff0000001cff0000000ffe0000000ffe00000007fc00000007fc00000007fc00000003f800000003f800000001f000000001f000000000e00000[/C 32 32 -2 -1 34 0] DefineBitmapChar000fc000007ffc0001ffff0007fc0f800ff003c00fe001e01fc000f03f8000703f8000387f8000387f0000187f000018ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff0000007f0000387f0000387f8000383f8000783f8000781f8000f81fc001f80fe003f807e007f803f81ff000fffe70001ff030[/D 40 31 -1 0 36 0] DefineBitmapCharfffffe0000ffffff80000ff00fe0000ff003f0000ff001f8000ff001fc000ff000fe000ff000fe000ff000ff000ff0007f000ff0007f000ff0007f800ff0007f800ff0007f800ff0007f800ff0007f800ff0007f800ff0007f800ff0007f800ff0007f800ff0007f000ff0007f000ff000ff000ff000fe000ff000fe000ff001fc000ff001f8000ff003f0000ff00fe000ffffff8000fffffc0000[/E 32 31 -1 0 33 0] DefineBitmapCharfffffff8fffffff80ff00ff80ff001f80ff000f80ff0007c0ff0003c0ff0003c0ff0001c0ff0181c0ff0381c0ff0380c0ff038000ff078000ff1f8000ffff8000ffff8000ff1f8000ff078000ff038000ff038380ff038380ff018380ff000780ff000780ff000f00ff001f00ff003f00ff00ff0fffffff0fffffff0[/F 32 31 -1 0 31 0] DefineBitmapCharffff8000ffff80000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff018000ff038000ff038000ff038000ff078000ff1f8000ffff8000ffff8000ff1f8000ff078000ff038000ff038380ff038380ff018380ff000780ff000780ff000f80ff001f00ff003f00ff81ff0fffffff0fffffff0[/H 40 31 -1 0 37 0] DefineBitmapCharffff1fffe0ffff1fffe00ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ffffffe000ffffffe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe000ff001fe00ffff1fffe0ffff1fffe0[/I 24 31 -1 0 20 0] DefineBitmapCharffffc0ffffc007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f80007f800ffffc0ffffc0[/J 32 32 0 -1 28 0] DefineBitmapChar01fe00000fffc0001fffe0003c0ff0007007f8007003fc00f003fc00ff01fc00ff81fe00ffc1fe00ffc1fe00ffc1fe007f81fe003f81fe001f01fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe00001fffe0001fffe0[/P 32 31 -1 0 33 0] DefineBitmapCharffff8000ffff80000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ffff8000fffffc00ffffff00ff00ff80ff007fc0ff003fc0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fc0ff003fc0ff007f80ff80ff8ffffffe0ffffff80[/S 32 32 -2 -1 29 0] DefineBitmapChar603fe00071fff8007bf87e007fc01f007f000f007e0007807c000780f80007c0f80007c0f0000fc0e0001fc0e0007fc0e007ffc0007fff8003ffff800fffff001fffff003ffffe007ffff8007fffc0007ffc0000ffc00380fe000300fc000700fc000f007c000f007c001f003c003f003e007f001f01ff0007ffe70000ff0300[/T 32 31 -1 0 32 0] DefineBitmapChar01fffe0001fffe00001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000001fe000c01fe00cc01fe00cc01fe00cc01fe00ce01fe01ce01fe01cf01fe03cf01fe03cf81fe07cfc1fe0fcfffffffcfffffffc[/a 24 22 -2 -1 26 0] DefineBitmapChar1fc0787ff8fe7ffdffff1ffffe07f0fe07f0fe03f07e03f07f03f03f83f00fe3f003fff0007ff01c03f03f03f07f03f07f03f07e03f03e07e03f0fe00fffc003fe00[/b 32 33 0 -1 27 0] DefineBitmapChar0c0fc0000c3ff0000e79fc000ff07e000fe07e000fe07f000fc03f000fc03f800fc03f800fc03f800fc03f800fc03f800fc03f800fc03f800fc03f800fe07f000fe07f000ff07e000ff9fe000ffffc000fdff8000fc7e0000fc000000fc000000fc000000fc000000fc000000fc000000fc000001fc00000ffc00000ffc0000007c00000[/c 24 22 -1 -1 23 0] DefineBitmapChar01fc0007ff800fffc01fc1e03f80707f00707f0038fe0018fe0000fe0000fe0000fe0000fe01c0fe03f07e07f07e07f07f07f83f03f01f83f00fc3e007ffc000ff00[/d 32 33 -2 -1 27 0] DefineBitmapChar03f1f0000ff9ff801ffdff803f8ffc003f03f8007f03f8007e01f800fe01f800fe01f800fe01f800fe01f800fe01f800fe01f800fe01f800fe01f8007e01f8007f03f8003f03f8003f87f8001ffff80007fdf80001f1f8000001f8000001f8000001f8000001f8000001f8000001f8000001f8000003f800001ff800001ff8000000f800[/e 24 22 -1 -1 23 0] DefineBitmapChar00fc0007ff800fffc01fc1e03f80f07f00707f00387e0010fe0000fe0000fe0000fffff8fffff8fe03f8fe03f87e03f07e03f03f03f01f07e00f87c007ff8001fc00[/f 24 32 0 0 17 0] DefineBitmapChar7ffc007ffc001fe0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc000fffe00fffe00fffe000fc0000fc0000fc0000fc3800fc7c007cfe007cfe003e7e001e3c000ff80003f00[/g 32 32 -1 -9 26 0] DefineBitmapChar07ff00003fffe0007f87f000fc00f800fc007c00fc007e007e00fe001ffffe000ffffe003ffffc007ffffc007ffff8007fffe0007f0000003e0000001f00000003ff00000fffc0001f87e0003f03f0007f03f8007f03f8007f03f8007f03f8007f03f8003f03f0003f87e2001fcfc78007ffef8000fc7f8000003f8000001f00[/h 32 32 -1 0 28 0] DefineBitmapCharfff3ffc0fff3ffc03fc0ff001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001fc07e001fc07e001fe0fe001ffffc001fbffc001f9ff8001f87e0001f8000001f8000001f8000001f8000001f8000001f8000001f8000003f800000ff800000ff8000000f800000[/i 16 32 -1 0 14 0] DefineBitmapCharfff0fff03fc01f801f801f801f801f801f801f801f801f801f801f801f801f801f801f803f80ff80ff8000800000000000000f001f001f803f801f801f000e00[/k 32 32 0 0 28 0] DefineBitmapChar7ff9fff07ff9fff01fe03fe00fc07fc00fc0ff800fc1ff000fc1fe000fc3fc000fe7fc000ffff8000ffff0000fdfe0000fcfc0000fc780000fc3c0000fc1e0000fc0f0000fc07c000fc0ff000fc7ffc00fc7ffc00fc000000fc000000fc000000fc000000fc000000fc000000fc000001fc00000ffc00000ffc0000007c00000[/l 16 32 -1 0 14 0] DefineBitmapCharfff0fff03fc01f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80ff80ff800f80[/m 40 21 -1 0 40 0] DefineBitmapCharfff7ffbffcfff7ffbffc3fc1fe0ff01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01f80fc07e01fc0fe07e01fc0fe07e01fe1ff0fe01ffffbffe0ffbff9ffc0ff9ff0ff801f87c03f00[/n 32 21 -1 0 28 0] DefineBitmapCharfff3ffe0fff3ffe03fc0ff001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001f807e001fc07e001fc07e001fe0fe001ffffc00ffbffc00ff8ff8001f83e000[/o 24 22 -1 -1 25 0] DefineBitmapChar00fe0007ffc00fc7e01f83f03f01f87f01fc7e00fc7e00fcfe00fefe00fefe00fefe00fefe00fefe00fefe00fe7e00fc7f01fc3f01f83f83f81fc7f007ffc001ff00[/p 32 30 0 -9 27 0] DefineBitmapChar7ffc00007ffc00001fe000000fc000000fc000000fc000000fc000000fc000000fc7c0000fdff0000ffffc000ff0fe000fe07e000fe07f000fc03f000fc03f800fc03f800fc03f800fc03f800fc03f800fc03f800fc03f800fc03f800fe03f000fe07f000ff07e000ff8fe00ffdffc00ffcff8000fc3e000[/q 32 30 -2 -9 27 0] DefineBitmapChar001fff80001fff800003fc000001f8000001f8000001f8000001f8000001f80003f1f8000ff9f8001ffdf8003fcff8003f07f8007f03f8007f03f800fe01f800fe01f800fe01f800fe01f800fe01f800fe01f800fe01f800fe01f8007e01f8007f03f8003f03f8003f07f8001fcf380007fe180001f81c00[/r 24 21 -1 0 21 0] DefineBitmapCharfff800fff8003fc0001f80001f80001f80001f80001f80001f80001f80001f80001f80001f80001fc3c01fc7e01fe7e01f67e01f77e0ff3fe0ff1fc01f0f80[/s 24 22 -2 -1 21 0] DefineBitmapCharc7fc00fffe00fe1f00f80780f007c0e007c0c00fc0c07fc007ffc01fffc03fff807fff80fffe00fffc00ffc000fc0180f80380f80780780f807c3f803fff8007e180[/t 16 30 -1 -1 18 0] DefineBitmapChar03e00ff80ffc1ffe1f8e1f861f871f871f871f801f801f801f801f801f801f801f801f801f80fffefffefffe1f800f80078007800380038003800380[/u 32 23 0 -1 28 0] DefineBitmapChar00f83f0003fe3ff007ffbff007ffff800ff1ff000fe07f000fc07f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f000fc03f001fc07f00ffc3ff00ffc3ff0000400100[/v 32 21 0 0 25 0] DefineBitmapChar003e0000003e0000007f0000007f000000ff000000ff800001ff800001fdc00001fdc00003f8e00003f8e00007f0600007f070000fe070000fe038001fe038001fc03c003fc03c003fc07f00fff1ff80fff1ff80[/w 40 21 0 0 35 0] DefineBitmapChar0078038000007c07c000007c07c00000fe0fe00000fe0fe00001fe0ff00001ff1ff00001fb1fb00003fb9fb80003f9bf980007f1bf1c0007f1ff1c0007f0ff0c000fe0fe0e000fe0fe06001fc0fc07001fc0fc07003fc1fc07803fc3fc0fc0fff7ff3fe0fff7ff3fe0[/y 32 30 0 -9 26 0] DefineBitmapChar3f0000007fc00000ffe00000fe700000fe380000fe3800007e1c0000380c0000000e0000001e0000001f0000003f0000003f8000007f8000007f800000ffc00000fec00001fee00001fc600003fc700003f8700007f8380007f038000ff01c000fe01c001fe01e001fc01e007fe03f80fff8ffc0fff8ffc0/LWCENTURYSCHOOLBOOK105B FinishFont/ExtToInt [ 0 /UnusedFont 1 2 3 4 5] def/IntFonts [   /LWCENTURYSCHOOLBOOK105 findfont 1 scalefont   /Helvetica-Bold findfont 12.5 12.5 matrix scale makefont   /LWCENTURYSCHOOLBOOK105I findfont 1 scalefont   /LWCENTURYSCHOOLBOOK105B findfont 1 scalefont   /Times-Roman findfont 10.5 10.5 matrix scale makefont   /Helvetica-Oblique findfont 8.5 8.5 matrix scale makefont] defsave lgp2-getmatrix%%EndProlog%%Page: 2 2 3 f gs sm1 95.62 745.83 m 1 s   gr gs sm1 95.62 688.7 m 4 f 9 s 1987-1993 gr gs sm1 143.86 688.7 m 0 f 1 s   gr gs sm1 95.62 675.76 m 0 f 5 s After gr gs sm1 126.66 675.76 m 0 f 3 s the gr gs sm1 147.86 675.76 m 0 f 4 s VLSI gr gs sm1 178.43 675.76 m 0 f 6 s group, gr gs sm1 214.99 675.76 m 0 f 1 s I gr gs sm1 224.68 675.76 m 0 f 6 s worked gr gs sm1 265.08 675.76 m 0 f 2 s as gr gs sm1 281 675.76 m 0 f 1 s a gr gs sm1 292.13 675.76 m 0 f 10 s consultant gr gs sm1 348.61 675.76 m 0 f 2 s to gr gs sm1 363.58 675.76 m 0 f 10 s Symbolics' gr gs sm1 420.54 675.76 m 0 f 10 s customers, gr gs sm1 478.46 675.76 m 0 f 9 s initially gr gs sm1 95.62 662.81 m 0 f 10 s informally gr gs sm1 151.39 662.81 m 0 f 9 s (graphics gr gs sm1 202.36 662.81 m 0 f 10 s customers, gr gs sm1 260.29 662.81 m 0 f 8 s internal gr gs sm1 299.17 662.81 m 0 f 1 s   gr gs sm1 304.78 662.81 m 0 f 9 s projects, gr gs sm1 351.43 662.81 m 0 f 4 s loan gr gs sm1 377.45 662.81 m 0 f 2 s to gr gs sm1 392.42 662.81 m 0 f 2 s US gr gs sm1 412.91 662.81 m 0 f 7 s Sprint) gr gs sm1 452.84 662.81 m 0 f 4 s then gr gs sm1 480.29 662.81 m 0 f 2 s as gr gs sm1 496.22 662.81 m 0 f 4 s part gr gs sm1 95.62 649.86 m 0 f 2 s of gr gs sm1 110.48 649.86 m 0 f 9 s Symbolics gr gs sm1 164.46 649.86 m 0 f 10 s consulting gr gs sm1 220.84 649.86 m 0 f 5 s group gr gs sm1 254.67 649.86 m 0 f 6 s (Amex, gr gs sm1 294.49 649.86 m 0 f 6 s Nippon gr gs sm1 335.27 649.86 m 0 f 6 s Steel, gr gs sm1 368.13 649.86 m 0 f 2 s US gr gs sm1 388.76 649.86 m 0 f 6 s Sprint gr gs sm1 424.98 649.86 m 0 f 3 s and gr gs sm1 448.24 649.86 m 0 f 4 s many gr gs sm1 480.14 649.86 m 0 f 7 s smaller gr gs sm1 95.62 636.91 m 0 f 11 s companies). gr gs sm1 152.74 636.91 m 0 f 1 s   gr gs sm1 159.2 636.91 m 0 f 2 s My gr gs sm1 180.78 636.91 m 0 f 8 s projects gr gs sm1 225.4 636.91 m 0 f 6 s tended gr gs sm1 264.26 636.91 m 0 f 2 s to gr gs sm1 280.08 636.91 m 0 f 9 s emphasize gr gs sm1 336.94 636.91 m 0 f 6 s mixing gr gs sm1 377 636.91 m 0 f 2 s AI gr gs sm1 394.98 636.91 m 0 f 7 s (mostly gr gs sm1 437.2 636.91 m 0 f 6 s expert gr gs sm1 474.38 636.91 m 0 f 8 s systems) gr gs sm1 95.62 623.96 m 0 f 4 s with gr gs sm1 122.24 623.96 m 0 f 10 s networking gr gs sm1 182.22 623.96 m 0 f 11 s (especially gr gs sm1 238.12 623.96 m 0 f 3 s SNA gr gs sm1 265.47 623.96 m 0 f 2 s to gr gs sm1 279.85 623.96 m 0 f 3 s IBM gr gs sm1 300.97 623.96 m 0 f 1 s   gr gs sm1 305.99 623.96 m 0 f 11 s mainframes) gr gs sm1 372.45 623.96 m 0 f 2 s or gr gs sm1 387.56 623.96 m 0 f 9 s low-level gr gs sm1 435.3 623.96 m 0 f 8 s software gr gs sm1 481.84 623.96 m 0 f 2 s to gr gs sm1 496.22 623.96 m 0 f 3 s sup gr gs sm1 513.02 623.96 m 0 f 1 s - gr gs sm1 95.62 611.02 m 0 f 4 s port gr gs sm1 121.48 611.02 m 0 f 8 s hardware gr gs sm1 173.26 611.02 m 0 f 7 s devices gr gs sm1 214.25 611.02 m 0 f 6 s (SCSI, gr gs sm1 250.67 611.02 m 0 f 5 s DR11, gr gs sm1 283.98 611.02 m 0 f 8 s Multibus gr gs sm1 333.6 611.02 m 0 f 4 s II). gr gs sm1 348.48 611.02 m 0 f 1 s   gr gs sm1 354.42 611.02 m 0 f 2 s In gr gs sm1 370.69 611.02 m 0 f 8 s addition gr gs sm1 415.99 611.02 m 0 f 2 s to gr gs sm1 431.3 611.02 m 0 f 3 s the gr gs sm1 452.84 611.02 m 0 f 11 s consulting, gr gs sm1 512.3 611.02 m 0 f 1 s I gr gs sm1 95.62 598.07 m 0 f 3 s did gr gs sm1 115.21 598.07 m 0 f 1 s a gr gs sm1 125.45 598.07 m 0 f 11 s significant gr gs sm1 182.01 598.07 m 0 f 6 s amount gr gs sm1 223.2 598.07 m 0 f 2 s of gr gs sm1 237.04 598.07 m 0 f 6 s Genera gr gs sm1 277.04 598.07 m 0 f 11 s development gr gs sm1 342.72 598.07 m 0 f 3 s and gr gs sm1 360.24 598.07 m 0 f 1 s   gr gs sm1 364.95 598.07 m 0 f 7 s support gr gs sm1 406.39 598.07 m 0 f 6 s (LMFS, gr gs sm1 447.83 598.07 m 0 f 5 s tape, gr gs sm1 476.06 598.07 m 0 f 8 s erasable gr gs sm1 95.62 585.12 m 0 f 61 s optical disk driver, image formats, etc.) as well as a lot of gr gs sm1 388.9 585.12 m 0 f 1 s   gr gs sm1 393.46 585.12 m 0 f 11 s bug-fixing. gr gs sm1 95.62 566.2 m 0 f 2 s My gr gs sm1 115.63 566.2 m 0 f 4 s last gr gs sm1 138.27 566.2 m 0 f 5 s large gr gs sm1 168.12 566.2 m 0 f 10 s consulting gr gs sm1 223.65 566.2 m 0 f 7 s project gr gs sm1 261.9 566.2 m 0 f 3 s was gr gs sm1 285.03 566.2 m 0 f 3 s for gr gs sm1 303.84 566.2 m 0 f 4 s U.S. gr gs sm1 329.37 566.2 m 0 f 7 s Sprint, gr gs sm1 367.62 566.2 m 0 f 5 s where gr gs sm1 402.03 566.2 m 0 f 1 s I gr gs sm1 411 566.2 m 0 f 3 s was gr gs sm1 434.13 566.2 m 0 f 3 s the gr gs sm1 454.61 566.2 m 0 f 9 s principal gr gs sm1 502.7 566.2 m 0 f 2 s ar gr gs sm1 513.02 566.2 m 0 f 1 s - gr gs sm1 95.62 553.25 m 0 f 7 s chitect gr gs sm1 128.74 553.25 m 0 f 1 s   gr gs sm1 133.84 553.25 m 0 f 3 s and gr gs sm1 156.46 553.25 m 0 f 5 s major gr gs sm1 189.4 553.25 m 0 f 11 s implementor gr gs sm1 256.18 553.25 m 0 f 2 s of gr gs sm1 270.4 553.25 m 0 f 1 s a gr gs sm1 281.02 553.25 m 0 f 11 s distributed gr gs sm1 339.4 553.25 m 0 f 16 s fraud-prevention gr gs sm1 425.86 553.25 m 0 f 6 s system gr gs sm1 464.32 553.25 m 0 f 5 s where gr gs sm1 498.94 553.25 m 0 f 2 s 50 gr gs sm1 510.46 553.25 m 5 f 1 s + gr gs sm1 95.62 540.3 m 0 f 78 s Lispms interacted in real-time with phone switches, IBM and Tandem mainframes. gr gs sm1 95.62 521.38 m 4 f 66 s Digital Equipment Corporation, 1974-1982 (hired away by Symbolics) gr gs sm1 462.82 521.38 m 0 f 1 s   gr gs sm1 95.62 508.43 m 0 f 2 s At gr gs sm1 112.34 508.43 m 0 f 3 s the gr gs sm1 133.14 508.43 m 0 f 9 s beginning gr gs sm1 186.83 508.43 m 0 f 1 s I gr gs sm1 196.11 508.43 m 0 f 6 s worked gr gs sm1 236.12 508.43 m 0 f 2 s in gr gs sm1 250.92 508.43 m 0 f 3 s DAS gr gs sm1 277.72 508.43 m 0 f 8 s (Digital gr gs sm1 320.37 508.43 m 0 f 8 s Advanced gr gs sm1 372.13 508.43 m 0 f 7 s Systems gr gs sm1 416.94 508.43 m 0 f 6 s group) gr gs sm1 454.06 508.43 m 0 f 2 s in gr gs sm1 468.86 508.43 m 0 f 9 s Marlboro, gr gs sm1 95.62 495.48 m 0 f 7 s writing gr gs sm1 137 495.48 m 0 f 5 s PDP-8 gr gs sm1 174.06 495.48 m 0 f 3 s and gr gs sm1 197.21 495.48 m 0 f 6 s PDP-11 gr gs sm1 237.63 495.48 m 0 f 5 s based gr gs sm1 270.38 495.48 m 0 f 5 s DDCMP gr gs sm1 316.08 495.48 m 0 f 6 s remote gr gs sm1 355.54 495.48 m 0 f 7 s station gr gs sm1 394.53 495.48 m 0 f 4 s code gr gs sm1 421.51 495.48 m 0 f 3 s for gr gs sm1 441.06 495.48 m 0 f 7 s PDP-10s gr gs sm1 487.48 495.48 m 0 f 2 s in gr gs sm1 502.7 495.48 m 0 f 2 s as gr gs sm1 513.02 495.48 m 0 f 1 s - gr gs sm1 95.62 482.53 m 0 f 8 s sembler. gr gs sm1 136.9 482.53 m 0 f 1 s   gr gs sm1 142.68 482.53 m 0 f 5 s Later gr gs sm1 175.11 482.53 m 0 f 1 s I gr gs sm1 184.97 482.53 m 0 f 6 s worked gr gs sm1 225.56 482.53 m 0 f 2 s on gr gs sm1 242.87 482.53 m 0 f 8 s software gr gs sm1 290.17 482.53 m 0 f 5 s (both gr gs sm1 321.16 482.53 m 0 f 7 s drivers gr gs sm1 361.27 482.53 m 0 f 3 s and gr gs sm1 384.57 482.53 m 0 f 9 s operating gr gs sm1 436.68 482.53 m 0 f 6 s system gr gs sm1 475.82 482.53 m 0 f 8 s support) gr gs sm1 95.62 469.58 m 0 f 3 s for gr gs sm1 114.46 469.58 m 0 f 7 s various gr gs sm1 154.91 469.58 m 0 f 15 s special-purpose gr gs sm1 234.23 469.58 m 0 f 8 s hardware gr gs sm1 285 469.58 m 0 f 9 s (parallel gr gs sm1 330.73 469.58 m 0 f 10 s interfaces gr gs sm1 378.97 469.58 m 0 f 1 s   gr gs sm1 383.89 469.58 m 0 f 7 s between gr gs sm1 428.66 469.58 m 0 f 12 s Decsystem-10 gr gs sm1 498.86 469.58 m 0 f 3 s and gr gs sm1 95.62 456.64 m 0 f 15 s minicomputers), gr gs sm1 181.33 456.64 m 0 f 11 s transaction gr gs sm1 236.29 456.64 m 0 f 1 s   gr gs sm1 242.81 456.64 m 0 f 11 s processing, gr gs sm1 303.56 456.64 m 0 f 4 s 3780 gr gs sm1 333.12 456.64 m 0 f 3 s and gr gs sm1 357.16 456.64 m 0 f 3 s RJE gr gs sm1 384.07 456.64 m 0 f 3 s IBM gr gs sm1 411.71 456.64 m 0 f 14 s communications gr gs sm1 496.94 456.64 m 0 f 3 s (As gr gs sm1 513.02 456.64 m 0 f 1 s - gr gs sm1 95.62 443.69 m 0 f 8 s sembler, gr gs sm1 141.78 443.69 m 0 f 6 s BLISS, gr gs sm1 180.26 443.69 m 0 f 9 s MacLisp). gr gs sm1 228.26 443.69 m 0 f 1 s   gr gs sm1 233.15 443.69 m 0 f 1 s I gr gs sm1 242.11 443.69 m 0 f 5 s wrote gr gs sm1 274.36 443.69 m 0 f 4 s code gr gs sm1 300.6 443.69 m 0 f 3 s for gr gs sm1 319.4 443.69 m 0 f 3 s the gr gs sm1 339.89 443.69 m 0 f 4 s DN8x gr gs sm1 372.61 443.69 m 0 f 6 s series gr gs sm1 405.82 443.69 m 0 f 6 s remote gr gs sm1 444.54 443.69 m 0 f 9 s stations, gr gs sm1 490.46 443.69 m 0 f 3 s DEC gr gs sm1 513.02 443.69 m 0 f 1 s - gr gs sm1 95.62 430.74 m 0 f 14 s net-compatible gr gs sm1 173.09 430.74 m 0 f 5 s port, gr gs sm1 201.84 430.74 m 0 f 4 s DA28 gr gs sm1 234.67 430.74 m 0 f 8 s parallel gr gs sm1 277.58 430.74 m 0 f 10 s interface, gr gs sm1 329.86 430.74 m 0 f 4 s VT61 gr gs sm1 361.25 430.74 m 0 f 10 s block-mode gr gs sm1 421.2 430.74 m 0 f 9 s terminal, gr gs sm1 471.79 430.74 m 0 f 3 s and gr gs sm1 495.26 430.74 m 0 f 3 s IBM gr gs sm1 95.62 417.79 m 0 f 47 s RJE 3780 support and HASP multileaving support. gr gs sm1 95.62 398.87 m 0 f 6 s During gr gs sm1 135.37 398.87 m 0 f 2 s my gr gs sm1 154.97 398.87 m 0 f 4 s last gr gs sm1 177.93 398.87 m 0 f 3 s 2.5 gr gs sm1 197.53 398.87 m 0 f 5 s years gr gs sm1 228.4 398.87 m 0 f 2 s at gr gs sm1 243.2 398.87 m 0 f 3 s DEC gr gs sm1 270.96 398.87 m 0 f 1 s I gr gs sm1 280.24 398.87 m 0 f 6 s worked gr gs sm1 320.24 398.87 m 0 f 2 s in gr gs sm1 335.03 398.87 m 0 f 3 s the gr gs sm1 355.83 398.87 m 0 f 7 s R1/XCON gr gs sm1 407.35 398.87 m 0 f 6 s group, gr gs sm1 443.51 398.87 m 0 f 5 s first gr gs sm1 469.58 398.87 m 0 f 8 s maintain gr gs sm1 513.02 398.87 m 0 f 1 s - gr gs sm1 95.62 385.92 m 0 f 3 s ing gr gs sm1 116.32 385.92 m 0 f 4 s XCON gr gs sm1 152.86 385.92 m 0 f 3 s (in gr gs sm1 171.41 385.92 m 0 f 5 s OPS5) gr gs sm1 207.71 385.92 m 0 f 4 s then gr gs sm1 234.66 385.92 m 0 f 5 s doing gr gs sm1 261.3 385.92 m 0 f 1 s   gr gs sm1 266.4 385.92 m 0 f 15 s special-purpose gr gs sm1 345.9 385.92 m 0 f 5 s tools gr gs sm1 373.81 385.92 m 0 f 2 s in gr gs sm1 388.51 385.92 m 0 f 5 s Lisp, gr gs sm1 417.38 385.92 m 0 f 10 s especially gr gs sm1 469.52 385.92 m 0 f 3 s for gr gs sm1 488.54 385.92 m 0 f 5 s VLSI. gr gs sm1 95.62 372.97 m 0 f 6 s (OPS5, gr gs sm1 135.26 372.97 m 0 f 5 s Franz gr gs sm1 169.38 372.97 m 0 f 5 s Lisp, gr gs sm1 198.71 372.97 m 0 f 10 s Interlisp, gr gs sm1 248.91 372.97 m 0 f 3 s C). gr gs sm1 262.83 372.97 m 0 f 1 s   gr gs sm1 268.4 372.97 m 0 f 1 s I gr gs sm1 278.04 372.97 m 0 f 3 s did gr gs sm1 298.48 372.97 m 0 f 2 s an gr gs sm1 315.81 372.97 m 0 f 15 s object-oriented gr gs sm1 393.37 372.97 m 0 f 7 s rewrite gr gs sm1 434.46 372.97 m 0 f 2 s of gr gs sm1 449.14 372.97 m 0 f 5 s XCON, gr gs sm1 489.02 372.97 m 0 f 5 s wrote gr gs sm1 95.62 360.02 m 0 f 2 s an gr gs sm1 112.32 360.02 m 0 f 4 s nMOS gr gs sm1 147.74 360.02 m 0 f 10 s transistor gr gs sm1 200.45 360.02 m 0 f 6 s sizer, gr gs sm1 231.55 360.02 m 0 f 4 s took gr gs sm1 256.9 360.02 m 0 f 3 s the gr gs sm1 277.44 360.02 m 0 f 3 s DEC gr gs sm1 304.94 360.02 m 0 f 8 s internal gr gs sm1 343.82 360.02 m 0 f 1 s   gr gs sm1 348.77 360.02 m 0 f 4 s VLSI gr gs sm1 378.67 360.02 m 0 f 6 s design gr gs sm1 415.06 360.02 m 0 f 6 s course gr gs sm1 451.44 360.02 m 0 f 3 s and gr gs sm1 473.9 360.02 m 0 f 8 s designed gr gs sm1 95.62 347.08 m 0 f 66 s a project chip, and wrote chip-design support tools in Lisp and C. gr gs sm1 95.62 328.15 m 4 f 64 s Community College of Philadelphia, 1970-1974 (hired away by DEC) gr gs sm1 458.02 328.15 m 0 f 1 s   gr gs sm1 95.62 315.2 m 0 f 1 s I gr gs sm1 104.64 315.2 m 0 f 3 s was gr gs sm1 127.83 315.2 m 0 f 5 s hired gr gs sm1 158.22 315.2 m 0 f 2 s as gr gs sm1 173.48 315.2 m 0 f 2 s an gr gs sm1 190.19 315.2 m 0 f 8 s operator gr gs sm1 235.94 315.2 m 0 f 3 s (no gr gs sm1 256.25 315.2 m 0 f 4 s work gr gs sm1 284.95 315.2 m 0 f 11 s experience) gr gs sm1 345.58 315.2 m 0 f 3 s but gr gs sm1 366.61 315.2 m 0 f 6 s within gr gs sm1 402.76 315.2 m 0 f 1 s a gr gs sm1 413.22 315.2 m 0 f 4 s year gr gs sm1 439.05 315.2 m 0 f 4 s took gr gs sm1 464.4 315.2 m 0 f 3 s the gr gs sm1 484.94 315.2 m 0 f 6 s newly- gr gs sm1 95.62 302.26 m 0 f 7 s created gr gs sm1 131.38 302.26 m 0 f 1 s   gr gs sm1 137.07 302.26 m 0 f 6 s system gr gs sm1 176.12 302.26 m 0 f 10 s programmer gr gs sm1 242.29 302.26 m 0 f 9 s position, gr gs sm1 289.02 302.26 m 0 f 7 s working gr gs sm1 334.07 302.26 m 0 f 2 s on gr gs sm1 351.28 302.26 m 0 f 4 s code gr gs sm1 378.32 302.26 m 0 f 2 s to gr gs sm1 393.37 302.26 m 0 f 2 s do gr gs sm1 410.1 302.26 m 0 f 3 s IBM gr gs sm1 436.91 302.26 m 0 f 3 s RJE gr gs sm1 463 302.26 m 0 f 4 s from gr gs sm1 491.73 302.26 m 0 f 1 s a gr gs sm1 502.94 302.26 m 0 f 2 s re gr gs sm1 513.02 302.26 m 0 f 1 s - gr gs sm1 95.62 289.31 m 0 f 4 s mote gr gs sm1 125.99 289.31 m 0 f 3 s IBM gr gs sm1 153.73 289.31 m 0 f 5 s site, gr gs sm1 180.74 289.31 m 0 f 7 s writing gr gs sm1 223.12 289.31 m 0 f 4 s code gr gs sm1 251.09 289.31 m 0 f 2 s to gr gs sm1 267.07 289.31 m 0 f 7 s support gr gs sm1 303.79 289.31 m 0 f 1 s   gr gs sm1 310.4 289.31 m 0 f 11 s transaction gr gs sm1 371.98 289.31 m 0 f 10 s processing gr gs sm1 429.95 289.31 m 0 f 3 s and gr gs sm1 454.09 289.31 m 0 f 8 s database gr gs sm1 502.94 289.31 m 0 f 2 s re gr gs sm1 513.02 289.31 m 0 f 1 s - gr gs sm1 95.62 276.36 m 0 f 7 s trieval gr gs sm1 133.8 276.36 m 0 f 2 s in gr gs sm1 149.66 276.36 m 0 f 1 s a gr gs sm1 161.44 276.36 m 0 f 6 s normal gr gs sm1 202.02 276.36 m 0 f 2 s DP gr gs sm1 223.4 276.36 m 0 f 4 s shop gr gs sm1 251.74 276.36 m 0 f 2 s as gr gs sm1 268.32 276.36 m 0 f 4 s well gr gs sm1 288.24 276.36 m 0 f 1 s   gr gs sm1 294.5 276.36 m 0 f 2 s as gr gs sm1 311.08 276.36 m 0 f 4 s code gr gs sm1 338.7 276.36 m 0 f 2 s to gr gs sm1 354.32 276.36 m 0 f 7 s support gr gs sm1 397.3 276.36 m 0 f 8 s teaching gr gs sm1 445.32 276.36 m 0 f 8 s computer gr gs sm1 497.18 276.36 m 0 f 3 s pro gr gs sm1 513.02 276.36 m 0 f 1 s - gr gs sm1 95.62 263.41 m 0 f 9 s gramming. gr gs sm1 156.55 263.41 m 0 f 4 s (IBM gr gs sm1 189.41 263.41 m 0 f 10 s assembler, gr gs sm1 248.9 263.41 m 0 f 6 s COBOL, gr gs sm1 297.36 263.41 m 0 f 8 s FORTRAN, gr gs sm1 361.66 263.41 m 0 f 4 s RPG, gr gs sm1 395.23 263.41 m 0 f 4 s APL, gr gs sm1 419.71 263.41 m 0 f 1 s   gr gs sm1 427.61 263.41 m 0 f 6 s Basic, gr gs sm1 464.3 263.41 m 0 f 8 s SNOBOL). gr gs sm1 95.62 250.46 m 0 f 8 s Projects gr gs sm1 142.47 250.46 m 0 f 8 s included gr gs sm1 190.76 250.46 m 0 f 7 s writing gr gs sm1 233.77 250.46 m 0 f 1 s a gr gs sm1 246.55 250.46 m 0 f 6 s driver gr gs sm1 283.32 250.46 m 0 f 3 s for gr gs sm1 304.49 250.46 m 0 f 5 s ASCII gr gs sm1 340.79 250.46 m 0 f 9 s terminals gr gs sm1 394.6 250.46 m 0 f 5 s under gr gs sm1 430.17 250.46 m 0 f 6 s Cincom gr gs sm1 466.41 250.46 m 0 f 1 s   gr gs sm1 473.66 250.46 m 0 f 8 s System's gr gs sm1 95.62 237.52 m 0 f 11 s transaction gr gs sm1 157.64 237.52 m 0 f 10 s processing gr gs sm1 216.06 237.52 m 0 f 8 s program, gr gs sm1 267.28 237.52 m 0 f 3 s RJE gr gs sm1 294.74 237.52 m 0 f 5 s entry gr gs sm1 327.48 237.52 m 0 f 2 s to gr gs sm1 343.9 237.52 m 0 f 2 s OS gr gs sm1 365.36 237.52 m 0 f 5 s shop, gr gs sm1 397.38 237.52 m 0 f 6 s remote gr gs sm1 438.28 237.52 m 0 f 5 s PDP-6 gr gs sm1 476.78 237.52 m 0 f 8 s support, gr gs sm1 95.62 224.57 m 0 f 67 s home-grown database system, macro tools for COBOL programmers, etc. gr gs sm1 252.52 196.94 m 2 f 17 s Education History gr gs sm1 95.62 175.41 m 4 f 9 s Haverford gr gs sm1 153.74 175.41 m 4 f 7 s College gr gs sm1 191.9 175.41 m 0 f 1 s , gr gs sm1 199.63 175.41 m 0 f 9 s 1966-1970 gr gs sm1 246.67 175.41 m 0 f 1 s   gr gs sm1 251.52 175.41 m 0 f 8 s Classics gr gs sm1 295.25 175.41 m 0 f 6 s major, gr gs sm1 330.82 175.41 m 0 f 4 s left gr gs sm1 352.22 175.41 m 0 f 2 s in gr gs sm1 366.67 175.41 m 0 f 6 s middle gr gs sm1 404.16 175.41 m 0 f 2 s of gr gs sm1 418.13 175.41 m 0 f 6 s senior gr gs sm1 452.74 175.41 m 0 f 4 s year gr gs sm1 478.46 175.41 m 0 f 7 s because gr gs sm1 95.62 162.46 m 0 f 1 s I gr gs sm1 105.7 162.46 m 0 f 3 s was gr gs sm1 129.94 162.46 m 0 f 8 s spending gr gs sm1 179.39 162.46 m 0 f 3 s all gr gs sm1 197.63 162.46 m 0 f 2 s my gr gs sm1 218.04 162.46 m 0 f 4 s time gr gs sm1 245.88 162.46 m 0 f 2 s at gr gs sm1 261.48 162.46 m 0 f 3 s the gr gs sm1 277.08 162.46 m 0 f 1 s   gr gs sm1 283.09 162.46 m 0 f 8 s computer gr gs sm1 334.69 162.46 m 0 f 7 s center. gr gs sm1 368.29 162.46 m 0 f 1 s   gr gs sm1 374.3 162.46 m 0 f 7 s Learned gr gs sm1 420.14 162.46 m 0 f 8 s computer gr gs sm1 471.74 162.46 m 0 f 7 s program gr gs sm1 513.02 162.46 m 0 f 1 s - gr gs sm1 95.62 149.51 m 0 f 4 s ming gr gs sm1 125.93 149.51 m 0 f 2 s on gr gs sm1 143.04 149.51 m 0 f 2 s my gr gs sm1 163.03 149.51 m 0 f 3 s own gr gs sm1 188.06 149.51 m 0 f 9 s (FORTRAN, gr gs sm1 253.89 149.51 m 0 f 3 s IBM gr gs sm1 280.59 149.51 m 0 f 10 s assembler) gr gs sm1 338.74 149.51 m 0 f 2 s at gr gs sm1 353.93 149.51 m 0 f 3 s the gr gs sm1 369.53 149.51 m 0 f 1 s   gr gs sm1 375.12 149.51 m 0 f 9 s Haverford gr gs sm1 430.15 149.51 m 0 f 8 s Computer gr gs sm1 483.5 149.51 m 0 f 6 s Center gr gs sm1 95.62 136.56 m 0 f 62 s (IBM 360/44 running DOS, OS, and also a home-grown timesharing gr gs sm1 435.22 136.56 m 0 f 1 s   gr gs sm1 439.78 136.56 m 0 f 8 s system). gr gs sm1 95.62 117.64 m 4 f 22 s Cheltenham High School gr gs sm1 227.38 117.64 m 0 f 17 s , graduated 1966. gr gs sm1 313.06 117.64 m 0 f 1 s   gr gs sm1 95.62 23.45 m 6 f 11 s Kalman Reti gr gs sm1 296.3 23.45 m 6 f 16 s January 14, 1998 gr gs sm1 472.91 23.45 m 6 f 5 s Page  gr gs sm1 495.12 23.45 m 6 f 1 s 2 gr gs sm1 499.84 23.45 m 6 f 5 s  of 2 grfalse NextPage%%Page: 1 1 0 f gs sm1 274.8 688.7 m 11 s Kalman Reti gr gs sm1 252.24 671.62 m 19 s 50 Morseland Avenue gr gs sm1 240.12 654.53 m 23 s Newton Center, MA 02159 gr gs sm1 275.04 637.45 m 12 s 617-969-9143 gr gs sm1 289.67 591.92 m 2 f 6 s Skills gr gs sm1 95.62 570.39 m 1 s I gr gs sm1 105.98 570.39 m 2 s am gr gs sm1 126.9 570.39 m 1 s a gr gs sm1 138.71 570.39 m 3 f 4 s bona gr gs sm1 167.55 570.39 m 3 f 4 s fide gr gs sm1 191.84 570.39 m 8 s computer gr gs sm1 243.72 570.39 m 7 s expert, gr gs sm1 283.6 570.39 m 10 s conversant gr gs sm1 342.69 570.39 m 4 s with gr gs sm1 370.57 570.39 m 4 s both gr gs sm1 398.22 570.39 m 8 s hardware gr gs sm1 450.34 570.39 m 9 s (discrete gr gs sm1 498.86 570.39 m 3 s and gr gs sm1 95.62 557.44 m 5 s VLSI) gr gs sm1 124.42 557.44 m 1 s   gr gs sm1 130.92 557.44 m 3 s and gr gs sm1 154.95 557.44 m 8 s software gr gs sm1 202.98 557.44 m 5 s (from gr gs sm1 236.37 557.44 m 9 s microcode gr gs sm1 291.84 557.44 m 7 s through gr gs sm1 337.23 557.44 m 9 s low-level gr gs sm1 386.46 557.44 m 9 s operating gr gs sm1 439.29 557.44 m 6 s system gr gs sm1 479.16 557.44 m 4 s code gr gs sm1 507.02 557.44 m 2 s to gr gs sm1 95.62 544.49 m 10 s high-level gr gs sm1 148.9 544.49 m 13 s applications) gr gs sm1 216.1 544.49 m 6 s though gr gs sm1 255.47 544.49 m 9 s primarily gr gs sm1 306.11 544.49 m 1 s a gr gs sm1 316.92 544.49 m 8 s software gr gs sm1 363.72 544.49 m 9 s engineer. gr gs sm1 409.08 544.49 m 1 s   gr gs sm1 414.37 544.49 m 2 s In gr gs sm1 429.97 544.49 m 3 s the gr gs sm1 450.86 544.49 m 6 s course gr gs sm1 482.3 544.49 m 1 s   gr gs sm1 487.58 544.49 m 2 s of gr gs sm1 501.98 544.49 m 2 s my gr gs sm1 95.62 531.55 m 2 s 27 gr gs sm1 112.24 531.55 m 4 s year gr gs sm1 138.22 531.55 m 6 s career gr gs sm1 174.05 531.55 m 4 s I've gr gs sm1 197.15 531.55 m 7 s written gr gs sm1 238.02 531.55 m 4 s code gr gs sm1 264.48 531.55 m 3 s for gr gs sm1 283.5 531.55 m 3 s IBM gr gs sm1 309.73 531.55 m 10 s mainframes gr gs sm1 372.43 531.55 m 3 s (in gr gs sm1 390.98 531.55 m 10 s Assembler, gr gs sm1 449.6 531.55 m 6 s COBOL, gr gs sm1 495.26 531.55 m 4 s PL/I gr gs sm1 95.62 518.6 m 3 s and gr gs sm1 118.84 518.6 m 9 s Fortran), gr gs sm1 163.24 518.6 m 1 s   gr gs sm1 168.94 518.6 m 6 s almost gr gs sm1 206.81 518.6 m 3 s all gr gs sm1 224.75 518.6 m 3 s DEC gr gs sm1 253.02 518.6 m 8 s hardware gr gs sm1 304.56 518.6 m 3 s (in gr gs sm1 323.7 518.6 m 10 s Assembler, gr gs sm1 382.93 518.6 m 6 s Bliss, gr gs sm1 415.03 518.6 m 2 s C, gr gs sm1 430.82 518.6 m 5 s Algol gr gs sm1 461.96 518.6 m 3 s and gr gs sm1 485.18 518.6 m 6 s LISP), gr gs sm1 95.62 505.65 m 2 s as gr gs sm1 111.55 505.65 m 4 s well gr gs sm1 137.09 505.65 m 2 s as gr gs sm1 153.02 505.65 m 10 s Symbolics' gr gs sm1 204.38 505.65 m 1 s   gr gs sm1 210 505.65 m 4 s Lisp gr gs sm1 236.5 505.65 m 8 s machines gr gs sm1 287.71 505.65 m 6 s (Lisp, gr gs sm1 320.93 505.65 m 8 s Fortran, gr gs sm1 367.1 505.65 m 2 s C, gr gs sm1 382.8 505.65 m 8 s Pascal). gr gs sm1 420.96 505.65 m 1 s   gr gs sm1 426.58 505.65 m 2 s At gr gs sm1 443.71 505.65 m 4 s both gr gs sm1 470.69 505.65 m 3 s DEC gr gs sm1 498.86 505.65 m 3 s and gr gs sm1 95.62 492.7 m 9 s Symbolics gr gs sm1 148.6 492.7 m 1 s I gr gs sm1 157.41 492.7 m 6 s worked gr gs sm1 196.95 492.7 m 2 s on gr gs sm1 213.21 492.7 m 7 s several gr gs sm1 252.51 492.7 m 8 s projects gr gs sm1 295.41 492.7 m 4 s that gr gs sm1 320.07 492.7 m 8 s required gr gs sm1 366.09 492.7 m 8 s intimate gr gs sm1 411.87 492.7 m 13 s understanding gr gs sm1 486.92 492.7 m 2 s of gr gs sm1 500.78 492.7 m 3 s the gr gs sm1 95.62 479.75 m 9 s hardware, gr gs sm1 144.34 479.75 m 1 s   gr gs sm1 148.9 479.75 m 50 s software (and/or microcode) and their interaction. gr gs sm1 267.1 452.12 m 2 f 12 s Work History gr gs sm1 95.62 430.59 m 4 f 5 s Point gr gs sm1 128.8 430.59 m 4 f 3 s and gr gs sm1 153.1 430.59 m 4 f 5 s Click gr gs sm1 185.09 430.59 m 4 f 10 s Solutions, gr gs sm1 241.55 430.59 m 4 f 4 s Inc. gr gs sm1 266.58 430.59 m 4 f 7 s January gr gs sm1 315.36 430.59 m 4 f 4 s 1994 gr gs sm1 342.54 430.59 m 4 f 2 s to gr gs sm1 357.73 430.59 m 4 f 8 s present, gr gs sm1 404.35 430.59 m 4 f 4 s part gr gs sm1 431.3 430.59 m 4 f 4 s time gr gs sm1 454.1 430.59 m 1 s   gr gs sm1 458.96 430.59 m 2 s My gr gs sm1 478.94 430.59 m 6 s employ gr gs sm1 513.02 430.59 m 1 s - gr gs sm1 95.62 417.65 m 4 s ment gr gs sm1 126.47 417.65 m 9 s agreement gr gs sm1 184.21 417.65 m 4 s with gr gs sm1 211.94 417.65 m 9 s Symbolics gr gs sm1 266.32 417.65 m 11 s Technology, gr gs sm1 330.77 417.65 m 4 s Inc. gr gs sm1 355.15 417.65 m 7 s allowed gr gs sm1 397.76 417.65 m 2 s me gr gs sm1 418.3 417.65 m 2 s to gr gs sm1 433.79 417.65 m 2 s do gr gs sm1 450.97 417.65 m 4 s some gr gs sm1 481.58 417.65 m 7 s outside gr gs sm1 95.62 404.7 m 11 s consulting, gr gs sm1 155.42 404.7 m 4 s most gr gs sm1 184.98 404.7 m 2 s of gr gs sm1 200.39 404.7 m 5 s which gr gs sm1 235.47 404.7 m 3 s was gr gs sm1 260 404.7 m 3 s for gr gs sm1 280.2 404.7 m 5 s Point gr gs sm1 312.64 404.7 m 3 s and gr gs sm1 336.45 404.7 m 5 s Click gr gs sm1 367.45 404.7 m 10 s Solutions, gr gs sm1 421.5 404.7 m 1 s a gr gs sm1 433.3 404.7 m 5 s small gr gs sm1 465.74 404.7 m 10 s consulting gr gs sm1 95.62 391.75 m 7 s company gr gs sm1 144.32 391.75 m 5 s owned gr gs sm1 181.26 391.75 m 2 s by gr gs sm1 198.77 391.75 m 2 s an gr gs sm1 216.99 391.75 m 12 s ex-Symbolics gr gs sm1 285.86 391.75 m 6 s friend gr gs sm1 321.6 391.75 m 2 s of gr gs sm1 337.18 391.75 m 5 s mine. gr gs sm1 364.06 391.75 m 1 s   gr gs sm1 370.53 391.75 m 4 s This gr gs sm1 398.83 391.75 m 4 s work gr gs sm1 429.06 391.75 m 3 s was gr gs sm1 453.76 391.75 m 6 s mostly gr gs sm1 492.14 391.75 m 5 s Lisp- gr gs sm1 95.62 378.8 m 7 s related gr gs sm1 129.7 378.8 m 1 s   gr gs sm1 134.26 378.8 m 41 s under Franz products on Unix and Windows. gr gs sm1 95.62 359.88 m 4 f 66 s Symbolics Technology, Inc. January 1993 to January 1995 (laid off) gr gs sm1 95.62 340.95 m 9 s Princeton gr gs sm1 147.8 340.95 m 8 s Capital, gr gs sm1 190.14 340.95 m 1 s a gr gs sm1 200.32 340.95 m 5 s small gr gs sm1 231.14 340.95 m 9 s financing gr gs sm1 281.64 340.95 m 7 s company gr gs sm1 328.54 340.95 m 5 s which gr gs sm1 362 340.95 m 3 s was gr gs sm1 384.9 340.95 m 5 s using gr gs sm1 416.2 340.95 m 10 s Symbolics' gr gs sm1 472.22 340.95 m 8 s technolo gr gs sm1 513.02 340.95 m 1 s - gr gs sm1 95.62 328.01 m 2 s gy gr gs sm1 106.9 328.01 m 1 s   gr gs sm1 114.36 328.01 m 3 s for gr gs sm1 135.74 328.01 m 3 s its gr gs sm1 155.44 328.01 m 5 s daily gr gs sm1 186.18 328.01 m 10 s operations gr gs sm1 244.05 328.01 m 8 s acquired gr gs sm1 293.27 328.01 m 3 s the gr gs sm1 316.33 328.01 m 6 s assets gr gs sm1 353.07 328.01 m 2 s of gr gs sm1 369.66 328.01 m 3 s the gr gs sm1 392.72 328.01 m 3 s old gr gs sm1 414.58 328.01 m 9 s Symbolics gr gs sm1 470.28 328.01 m 4 s from gr gs sm1 500.78 328.01 m 3 s the gr gs sm1 95.62 315.06 m 10 s bankruptcy gr gs sm1 156.23 315.06 m 5 s court gr gs sm1 187.8 315.06 m 3 s and gr gs sm1 211.45 315.06 m 5 s hired gr gs sm1 243.03 315.06 m 2 s me gr gs sm1 263.56 315.06 m 2 s to gr gs sm1 279.05 315.06 m 4 s work gr gs sm1 308.95 315.06 m 2 s on gr gs sm1 326.6 315.06 m 3 s the gr gs sm1 348.33 315.06 m 9 s software. gr gs sm1 392.73 315.06 m 1 s   gr gs sm1 398.87 315.06 m 3 s The gr gs sm1 423.96 315.06 m 3 s old gr gs sm1 444.49 315.06 m 9 s Symbolics gr gs sm1 498.86 315.06 m 3 s had gr gs sm1 95.62 302.11 m 4 s been gr gs sm1 123.2 302.11 m 4 s near gr gs sm1 150.07 302.11 m 7 s feature gr gs sm1 190.14 302.11 m 6 s freeze gr gs sm1 224.68 302.11 m 2 s on gr gs sm1 241.23 302.11 m 1 s a gr gs sm1 251.77 302.11 m 3 s new gr gs sm1 276.24 302.11 m 7 s release gr gs sm1 315.59 302.11 m 2 s of gr gs sm1 329.73 302.11 m 3 s the gr gs sm1 350.36 302.11 m 7 s Virtual gr gs sm1 390.43 302.11 m 4 s Lisp gr gs sm1 416.33 302.11 m 7 s Machine gr gs sm1 462.88 302.11 m 3 s (an gr gs sm1 483.5 302.11 m 5 s emula gr gs sm1 513.02 302.11 m 1 s - gr gs sm1 95.62 289.16 m 3 s tor gr gs sm1 109.78 289.16 m 1 s   gr gs sm1 114.8 289.16 m 2 s of gr gs sm1 128.95 289.16 m 3 s its gr gs sm1 146.21 289.16 m 15 s special-purpose gr gs sm1 225.64 289.16 m 4 s Lisp gr gs sm1 251.54 289.16 m 4 s CPU) gr gs sm1 283.45 289.16 m 4 s that gr gs sm1 308.39 289.16 m 4 s runs gr gs sm1 335.5 289.16 m 5 s under gr gs sm1 368.84 289.16 m 7 s Digital gr gs sm1 407.47 289.16 m 4 s Unix gr gs sm1 436.25 289.16 m 2 s on gr gs sm1 452.8 289.16 m 3 s DEC gr gs sm1 480.38 289.16 m 7 s Alphas. gr gs sm1 95.62 276.21 m 1 s I gr gs sm1 105.25 276.21 m 5 s fixed gr gs sm1 134.57 276.21 m 1 s a gr gs sm1 145.64 276.21 m 5 s whole gr gs sm1 179.28 276.21 m 4 s slew gr gs sm1 206.19 276.21 m 2 s of gr gs sm1 220.87 276.21 m 5 s bugs, gr gs sm1 252.1 276.21 m 8 s upgraded gr gs sm1 302.78 276.21 m 2 s it gr gs sm1 315.77 276.21 m 2 s to gr gs sm1 330.69 276.21 m 3 s run gr gs sm1 353.52 276.21 m 5 s under gr gs sm1 387.4 276.21 m 5 s newer gr gs sm1 422.47 276.21 m 8 s versions gr gs sm1 468.11 276.21 m 2 s of gr gs sm1 482.78 276.21 m 7 s Digital gr gs sm1 95.62 263.27 m 4 s Unix gr gs sm1 124.42 263.27 m 3 s and gr gs sm1 146.98 263.27 m 6 s helped gr gs sm1 183.71 263.27 m 1 s a gr gs sm1 194.27 263.27 m 6 s couple gr gs sm1 230.27 263.27 m 2 s of gr gs sm1 244.44 263.27 m 9 s important gr gs sm1 297.72 263.27 m 8 s projects gr gs sm1 340.92 263.27 m 2 s at gr gs sm1 355.57 263.27 m 3 s MIT gr gs sm1 381.97 263.27 m 3 s and gr gs sm1 404.53 263.27 m 9 s elsewhere gr gs sm1 457.82 263.27 m 3 s use gr gs sm1 479.18 263.27 m 3 s it. gr gs sm1 489.5 263.27 m 1 s   gr gs sm1 494.54 263.27 m 4 s This gr gs sm1 95.62 250.32 m 73 s worked involved writing and debugging code in Unix C, Alpha assembler and gr gs sm1 484.18 250.32 m 1 s   gr gs sm1 488.74 250.32 m 5 s Lisp. gr gs sm1 95.62 231.39 m 4 f 5 s Apple gr gs sm1 130.07 231.39 m 4 f 9 s Computer, gr gs sm1 189.73 231.39 m 4 f 4 s Inc. gr gs sm1 214.58 231.39 m 4 f 8 s February gr gs sm1 268 231.39 m 4 f 4 s 1993 gr gs sm1 295.01 231.39 m 4 f 2 s to gr gs sm1 310.03 231.39 m 4 f 8 s December gr gs sm1 366.56 231.39 m 4 f 4 s 1992 gr gs sm1 393.58 231.39 m 4 f 7 s (entire gr gs sm1 432.83 231.39 m 4 f 8 s facility gr gs sm1 474.01 231.39 m 4 f 4 s laid gr gs sm1 498.14 231.39 m 4 f 4 s off) gr gs sm1 95.62 218.45 m 1 s I gr gs sm1 105.58 218.45 m 3 s was gr gs sm1 129.7 218.45 m 5 s hired gr gs sm1 161.03 218.45 m 2 s to gr gs sm1 176.27 218.45 m 4 s work gr gs sm1 205.92 218.45 m 2 s on gr gs sm1 223.32 218.45 m 3 s MCL gr gs sm1 253.2 218.45 m 4 s (the gr gs sm1 278.53 218.45 m 4 s Lisp gr gs sm1 305.29 218.45 m 11 s development gr gs sm1 372.14 218.45 m 11 s environment gr gs sm1 439.46 218.45 m 3 s for gr gs sm1 459.26 218.45 m 11 s Macintosh), gr gs sm1 95.62 205.5 m 3 s but gr gs sm1 116.96 205.5 m 3 s six gr gs sm1 130.64 205.5 m 1 s   gr gs sm1 135.91 205.5 m 6 s months gr gs sm1 176.94 205.5 m 5 s after gr gs sm1 205.72 205.5 m 5 s being gr gs sm1 237.63 205.5 m 6 s hired, gr gs sm1 271.22 205.5 m 4 s half gr gs sm1 295.45 205.5 m 3 s the gr gs sm1 316.31 205.5 m 5 s group gr gs sm1 349.66 205.5 m 3 s was gr gs sm1 373.17 205.5 m 4 s laid gr gs sm1 396.44 205.5 m 4 s off. gr gs sm1 417.54 205.5 m 1 s I gr gs sm1 426.89 205.5 m 8 s switched gr gs sm1 474.64 205.5 m 2 s to gr gs sm1 489.26 205.5 m 4 s work gr gs sm1 513.02 205.5 m 1 s - gr gs sm1 95.62 192.55 m 3 s ing gr gs sm1 116.16 192.55 m 2 s on gr gs sm1 127.68 192.55 m 1 s   gr gs sm1 132.63 192.55 m 5 s Dylan gr gs sm1 165.9 192.55 m 5 s until gr gs sm1 194.12 192.55 m 5 s Apple gr gs sm1 226.67 192.55 m 7 s decided gr gs sm1 267.86 192.55 m 2 s to gr gs sm1 282.17 192.55 m 4 s kill gr gs sm1 302.95 192.55 m 4 s that gr gs sm1 327.82 192.55 m 7 s project gr gs sm1 366.13 192.55 m 3 s and gr gs sm1 388.6 192.55 m 5 s close gr gs sm1 417.3 192.55 m 4 s down gr gs sm1 447.45 192.55 m 3 s the gr gs sm1 468 192.55 m 6 s entire gr gs sm1 501.98 192.55 m 2 s de gr gs sm1 513.02 192.55 m 1 s - gr gs sm1 95.62 179.6 m 9 s velopment gr gs sm1 145.54 179.6 m 1 s   gr gs sm1 150.6 179.6 m 5 s group gr gs sm1 183.75 179.6 m 2 s in gr gs sm1 198.41 179.6 m 10 s Cambridge. gr gs sm1 254.09 179.6 m 1 s   gr gs sm1 259.16 179.6 m 4 s This gr gs sm1 286.07 179.6 m 4 s work gr gs sm1 314.89 179.6 m 8 s required gr gs sm1 361.24 179.6 m 7 s writing gr gs sm1 402.07 179.6 m 3 s and gr gs sm1 424.65 179.6 m 9 s debugging gr gs sm1 480.36 179.6 m 4 s code gr gs sm1 506.78 179.6 m 2 s in gr gs sm1 95.62 166.65 m 15 s 68K and PowerPC gr gs sm1 186.58 166.65 m 1 s   gr gs sm1 191.14 166.65 m 31 s assembler, Lisp, and a little C gr gs sm1 343.06 166.65 m 5 f 2 s ++ gr gs sm1 354.9 166.65 m 1 s . gr gs sm1 95.62 147.73 m 4 f 15 s Symbolics, Inc. gr gs sm1 176.02 147.73 m 4 f 1 s   gr gs sm1 180.58 147.73 m 4 f 37 s August 1982 - January 1993 (laid off) gr gs sm1 378.82 147.73 m 1 s   gr gs sm1 95.62 134.78 m 2 s At gr gs sm1 112.18 134.78 m 5 s first gr gs sm1 138.1 134.78 m 1 s I gr gs sm1 147.23 134.78 m 6 s worked gr gs sm1 187.07 134.78 m 3 s for gr gs sm1 206.04 134.78 m 3 s the gr gs sm1 226.68 134.78 m 8 s Software gr gs sm1 274.69 134.78 m 8 s Products gr gs sm1 322.93 134.78 m 5 s group gr gs sm1 356.06 134.78 m 7 s helping gr gs sm1 397.34 134.78 m 2 s to gr gs sm1 411.74 134.78 m 20 s implement/debug/test gr gs sm1 95.62 121.83 m 5 s parts gr gs sm1 125.18 121.83 m 2 s of gr gs sm1 138.9 121.83 m 3 s the gr gs sm1 159.11 121.83 m 6 s system gr gs sm1 197.07 121.83 m 8 s software gr gs sm1 243.2 121.83 m 3 s and gr gs sm1 265.32 121.83 m 14 s install/repair gr gs sm1 333.04 121.83 m 4 s some gr gs sm1 362.13 121.83 m 5 s early gr gs sm1 390.97 121.83 m 7 s systems gr gs sm1 433.74 121.83 m 2 s in gr gs sm1 447.94 121.83 m 7 s Europe. gr gs sm1 485.62 121.83 m 1 s   gr gs sm1 490.22 121.83 m 4 s From gr gs sm1 95.62 108.89 m 4 s 1984 gr gs sm1 122.77 108.89 m 2 s to gr gs sm1 137.45 108.89 m 4 s 1987 gr gs sm1 164.6 108.89 m 1 s I gr gs sm1 174 108.89 m 6 s worked gr gs sm1 214.11 108.89 m 2 s in gr gs sm1 229.03 108.89 m 3 s the gr gs sm1 249.94 108.89 m 4 s VLSI gr gs sm1 280.22 108.89 m 5 s group gr gs sm1 313.61 108.89 m 4 s that gr gs sm1 338.85 108.89 m 5 s built gr gs sm1 366.96 108.89 m 4 s both gr gs sm1 393.64 108.89 m 3 s the gr gs sm1 414.55 108.89 m 5 s Ivory gr gs sm1 444.83 108.89 m 9 s processor gr gs sm1 495.98 108.89 m 4 s chip gr gs sm1 95.62 95.94 m 3 s and gr gs sm1 119.29 95.94 m 3 s CAD gr gs sm1 148.01 95.94 m 6 s system gr gs sm1 187.53 95.94 m 4 s (NS) gr gs sm1 216.25 95.94 m 2 s in gr gs sm1 232 95.94 m 5 s which gr gs sm1 266.96 95.94 m 2 s to gr gs sm1 282.48 95.94 m 6 s design gr gs sm1 320.08 95.94 m 3 s and gr gs sm1 343.76 95.94 m 6 s verify gr gs sm1 377.99 95.94 m 3 s it. gr gs sm1 388.31 95.94 m 1 s   gr gs sm1 394.47 95.94 m 9 s Initially gr gs sm1 439.27 95.94 m 1 s I gr gs sm1 449.51 95.94 m 6 s helped gr gs sm1 481.19 95.94 m 1 s   gr gs sm1 487.34 95.94 m 5 s debug gr gs sm1 95.62 82.99 m 9 s machines, gr gs sm1 149.32 82.99 m 4 s then gr gs sm1 176.38 82.99 m 1 s I gr gs sm1 185.69 82.99 m 6 s worked gr gs sm1 225.71 82.99 m 2 s on gr gs sm1 242.46 82.99 m 3 s NS, gr gs sm1 265.44 82.99 m 10 s simulation gr gs sm1 322.02 82.99 m 3 s and gr gs sm1 344.77 82.99 m 12 s verification gr gs sm1 405.67 82.99 m 5 s tools gr gs sm1 433.7 82.99 m 3 s and gr gs sm1 456.44 82.99 m 6 s system gr gs sm1 495.02 82.99 m 4 s soft gr gs sm1 513.02 82.99 m 1 s - gr gs sm1 95.62 70.04 m 4 s ware gr gs sm1 119.14 70.04 m 1 s   gr gs sm1 123.7 70.04 m 48 s support for NS (and co-authored several papers). gr gs sm1 95.62 23.45 m 6 f 11 s Kalman Reti gr gs sm1 296.3 23.45 m 6 f 16 s January 14, 1998 gr gs sm1 472.91 23.45 m 6 f 5 s Page  gr gs sm1 495.12 23.45 m 6 f 1 s 1 gr gs sm1 499.84 23.45 m 6 f 5 s  of 2 grtrue NextPage%%Trailerrestore%%DocumentFonts: Helvetica-Oblique Times-Roman LWCENTURYSCHOOLBOOK105B LWCENTURYSCHOOLBOOK105I Helvetica-Bold LWCENTURYSCHOOLBOOK105