                DYLAN TEAM CONSIDERING SUPPORTING WIN32S
                              issue.win32s
                     obsolete unknown requirement 
                             dsm 1995-08-04

Urgency: 6 - serious
Importance: 6 - significant
Discoverer: dsm
Discovery date: 04/08/95 15:36:22
Discovery process: Reading dylan-libraries mail
Locaction: dylan-libraries mail


DESCRIPTION:

From this mail it looks like Dylan team may want to support Win32s.
We already have some dependencies on Win32 e.g. GetSystemInfo() which 
isn't in Win32s.  I suspect this will be true of some of the fault
handling stuff we will want to use.

From tony Fri Aug  4 14:50:32 1995
From: Tony Mann <tony>
Date: Fri, 4 Aug 95 14:51:26 BST
To: gray
Cc: dylan-libraries
Subject: An additional comment on win32-library.text
Content-Length: 1586


Apologies if this is starting to sound relentless - but we might as
well sort things out now rather than when it's too late ...

> This will support the Win32 API for Windows NT and Windows 95.  Support for
> Win32s and Win16 (i.e. Windows 3.1) is not planned at this time.

I agree that we don't want to support Win16 at this time (or probably
ever).

I think we should think very carefully before rejecting Win32s out of
hand, though. For the time being, Win32s is basically our only chance
of appealing to the installed Windows base, so failing to run on it
could be a very serious marketing screw-up (I'm not qualified to judge
that, though, of course ;-)

I suggest we should adopt a policy that we will not package any of our
libraries in a way that prohibits their operation on Win32s. If we
should encounter a technical problem that makes this very difficult
then we can decide what to do on a case-by-case basis.

I hope that this policy statement will not have much of an impact on
the design or implementation of the Dylan win32 libraries. It might
cause us to have to release 2 versions of the core Dylan library,
though - one with support for threads and one without. I think I'm
right that if we have a Windows API library which references
everything in Win32 then it should still load on Win32S. Any
application code which uses an unsupported function will cause an
error, though (which seems entirely reasonable to me). We should
ensure we can handle the error in Dylan.

Someone should check whether I'm right about this. David, should that
someone be you??

-- Tony


ROOT CAUSE:

Badly defined requirement req.dylan.fun.soft.env.os.win32


SUGGESTIONS:

We determine whether this is a requirement
We work out what dependencies we do have on Win32 and the cost of removing 
them.  I suspect that it is not that large at present.  I suspect fault 
handling may not be
impossible in Win32s.


PROCESS SUGGESTIONS:

Think how requirements may be (deliberately) misinterpreted



