              DESIGN OF SUPPORT FOR THE JAVA VM IN THE MPS
                            design.mps.java
                             incomplete doc
                             drj 1999-05-13

INTRODUCTION

.intro: This document describes the design of the changes and additions and 
support code that are necessary for making the MPS support java.


ARCHITECTURE

.files: A separate file to replace gc.c.  Conditionalization in the headers.

.lock: Use the existing _heap_lock to lock access to the MPS; that way, we can 
keep the existing heap_lock and lock_for_debugger implementations, and don't 
have to create a new locking i/f for the MPS and expose its concurrency 
implementation.


Garbage Collection

.format: The object format is described in design.sun.java.object(0).  It's 
handle based.  The handles and data object blocks comprise distinct objects in 
MPS terms.  As discussed in mail.drj.1999-05-20.10-34(0) we will extend Sun's 
object format (see design.sun.java.object(0)) by placing at the end of the 
object data block a back pointer to the handle.  Since the size of an object 
data block can be determined solely from the (pointer to the base of the) block 
itself it is possible to find the end of the block and the pointer to the 
handle.  Having got a pointer to the handle one can now find the class etc. and 
information needed to scan the block.

.pool.architecture: Handles will be managed in a handle pool.  It will be 
garbage-collected.  Object data blocks will be managed in an object data pool.  
It will be garbage-collected.  Objects in the object data pool are GCed and 
scanned.


References

.ref.msg: Once we have resolve/preserve, we can implement reference objects 
using scan methods and queue messages on the MPS queue (?) when they die.  A 
callback that is invoked outside the arena lock when exiting the MPS can flush 
the message queue and put them in the Java queue and notify the appropriate 
monitor (on refLock).  Hence the lock (refLock) is not need during GC.  
.ref.msg.not: ATM, we just handle everything as exact references.


Other

.manual: The manual allocation interface (design.sun.java.gc.if.hpi.manual) can 
be left untouched for the monent.

.dump.not: Don't implement the heap dumping i/f or the rest of the profiler 
stuff.


NOTES



