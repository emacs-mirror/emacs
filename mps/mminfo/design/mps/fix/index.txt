                 THE DESIGN OF THE GENERIC FIX FUNCTION
                             design.mps.fix
                           incomplete design
                           richard 1995-08-25


INTRODUCTION:

Fix is the interface through which the existence of references are communicated 
from the MPS client to the MPS.  The interface also allows the value of such 
references to be changed (this is necessary in order to implement a moving 
memory manager).


ARCHITECTURE:

.contract

.protocol.was-marked: The ScanState has a Bool wasMarked field.  This is used 
for finalization.
.protocol.was-marked.set: All pool-specific fix methods must set the wasMarked 
field in the ScanState that they are passed.
.protocol.was-marked.meaning: If the pool-specific fix method sets the 
wasMarked field to FALSE it is indicating the object referred to by the ref 
(the one that it is supposed to be fixing) has not previously been marked (ie, 
this is the first reference to this object that has been fixed), and that the 
object was white (in condemned space).
.protocol.was-marked.conservative: It is always okay to set the wasMarked field 
to TRUE.
.protocol.was-marked.finalizable: PoolMRG (design.mps.poolmrg) uses the value 
of the wasMarked field to determine whether an object is finalizable.


IMPLEMENTATION:

.fix.nailed: In a copying collection, a non-ambiguous fix to a broken heart 
should be snapped out _even if_ there is a RankAMBIG ref to same object (i.e., 
even if the broken heart is nailed); the RankAMBIG reference must either be 
stale (no longer in existence) or bogus.

