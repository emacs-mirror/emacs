                      MM/EP-CORE PROTOTYPE VERSION
                          version.epcore.proto
                               draft doc
                            nickb 1996-07-05

[Formerly release.epcore.proto.]

INTRODUCTION

.intro: This is the product version document for the MM/EP-core Prototype 
Version. See also plan.epcore.release.proto.

.when.plan: The release should be complete on Tuesday 1996-07-09.

.when.actual: The non-release was complete on Friday 1996-07-12.


GOALS

.goal: The goals of the release are as follows:

.goal.mps: to demonstrate that the MM group's "Memory Pool System" can be 
integrated into ScriptWorks.

.goal.proc: to develop, debug, and demonstrate a procedure for delivering 
MM/EP-core releases (proc.release.epcore).

.goal.prep: to identify key issues in the development of later MM/EP-core 
releases.


THE RELEASE FAILURE

.fail: The release failed, due to difficulty obtaining a consistent set of 
ScriptWorks trunk builds, in a week which saw sweeping changes in the trunk.

.fail.mps: In preparing for the release, MM workers did use ScriptWorks 
integrated with the MPS on each platform. However, this configuration has not 
been adequately tested.

.fail.proc: Since the procedure failed, it cannot be considered to have been 
fully debugged or adequately demonstrated (although it was developed and 
partially debugged).

.non-release: The (failed) release has been checked in anyway, because it 
includes valuable work and does not affect the ScriptWorks trunk.

.non-release.hope: To use the release, delete the 'mm' directory in a SW tree, 
and check out (-recursive -checkpoint MM_epcore_eval_0) one of SWmm_mac, 
SWmm_pc, SWmm_unix.

.non-release.mac: On the Mac, change the file type of the .o files in 
:mm:s7*:*: to "OBJ "

.non-release.make: Rebuilding ScriptWorks should now work, making a ScriptWorks 
which uses the MPS.

.non-release.caveat: This release does not meet the MM/EP-core time and space 
requirements. 


ISSUES FOR LATER RELEASES

.prep: The release identified the following issues for later MM/EP-core 
releases:

.prep.build: At times when the trunk is in flux, expecting a particular set of 
overnight SWIG builds all to succeed is optimistic. It is better not to rely on 
it.

.prep.build.pm: When an overnight build fails, the SWIG can re-run the failing 
parts of the build in the morning. It is thus easier to obtain a working build 
in the afternoon.

.prep.build.vary: Some builds fail on some nights, others on other nights. It 
would be possible to do pre-release testing on staggered builds, if the risk is 
considered tolerable. Several build trees are kept for each platform (although 
there is no guarantee that any of them were successful).

.prep.build.freeze: ScriptWorks trunk freezes are possible, and increase the 
chance of a set of builds succeeding.

.prep.mac.type: Hope on a Mac always gives the same creator and type to all 
files. The MPW linkers require that an object file be of type "OBJ ". (See 
.non-release.mac, above). MPW has a SetFile command which can be used to work 
around this problem in future.

.prep.ntppmv: The NTPPMV platform is not widely used by EP. There is exactly 
one machine, with two compilers. The machine's configuration is not very 
conducive to development (e.g. the SDK compiler always prints out a huge banner 
warning of expiry in 1970; 'which' is not on the default path, &c). As the 
least-used and least-built platform, it should be watched for regression.

