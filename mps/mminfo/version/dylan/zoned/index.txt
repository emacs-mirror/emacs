                DYLAN "ZONED COLLECTOR" PRODUCT VERSION
                          version.dylan.zoned
                             incomplete doc
                           richard 1995-08-11

Checkpoints: MM_zoned_0, MM_zoned_1
Branches: MM_zoned


REQUIREMENT SATISFACTION

req.dylan.fun.soft.manage.object.alloc
req.dylan.fun.soft.manage.static.alloc
req.dylan.fun.soft.env.c
req.dylan.fun.soft.env.component.gc
req.dylan.fun.soft.env.component.trap
req.dylan.fun.soft.env.arch.i386
req.dylan.fun.soft.env.os.win32
req.dylan.fun.support.use
req.dylan.fun.support.debugging
req.dylan.fun.support.available
req.dylan.fun.soft.manage.object.recycle
req.dylan.fun.soft.manage.static.free
req.dylan.fun.soft.validation.call
req.dylan.fun.soft.validation.object
req.dylan.fun.soft.control.custom.scan
req.dylan.attr.space.struct?



RELEASE NOTES

               DYLANWORKS MEMORY MANAGER RELEASE NOTES


                      Release: $Revision: 1.2.2.2 $
                       Status: $State: Exp $
                     Modified: $Date: 1995/06/19 15:03:43 $
              Confidentiality: company confidential
                    Reference: MMprod_dw_doc!readme.txt


These are the release notes for the DylanWorks Memory Manager.  This
document contains information you really ought to know before you
start using it.

This release of the DylanWorks Memory Manager is the "Zoned
Collector".  It contains a simple garbage collector for DylanWorks
objects; it has the same API to the previous release (the
"Minimal Collector").  The API is based on that requested by Tony Mann in his
mail message "Outline for a simple MM root-registration interface" of
Thu, 9 Mar 95 12:39:37 GMT.

The interface hides the details of memory pool creation, and instead
provides three allocation primitives: one for objects, one for
wrappers, and one for miscellaneous data.  Eventually the detailed
interface will be exposed again, but for now we want something simple
that we can debug together.  We have not had time to write such
extensive documentation this time.  The API is documented reasonably
well by the header "mm.h".

The library comes in four varieties, all called "mmdw.lib".  The
libraries in "libc" directories are compiled for linking with the
static Microsoft C library, LIBC.LIB.  The libraries in "msvcrt"
directories are compiled for use with the dynamic C library,
MSVCRT.DLL.  In addition, libraries in ".deb" (debug) directories are
compiled with consistency checking and debugging information, and
libraries in ".rel" (release) directories are compiled without either,
for speed.  The debugging versions are _much_ slower (currently between
40 and 100 times).  See manifest.txt for details.

    richard 1995-03-20
    drj 1995-06-19

---
$Id: readme.txt,v 1.2.2.2 1995/06/19 15:03:43 drj Exp $

