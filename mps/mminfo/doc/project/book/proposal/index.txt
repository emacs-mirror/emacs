                  COPY OF PROPOSAL FOR MM BOOK PROJECT
                         project.book.proposal
                              obsolete doc
                            nick 1997-05-02

Programming Effectively with Garbage Collection 
A Handbook for Dynamic Object-Oriented Programming

This is a proposal for a book about memory management.  The focus is not to 
produce a technical book on how GC works or one on how to write a GC, but a 
practical book on how to program effectively in a GC-ed language (e.g. in 
Dylan/Lisp/etc. or Java or C/C++ with the appropriate GC library).  Although GC 
eliminates dangling pointers, it introduces its own set of problems such as 
uncollected garbage, excess consing, speed and space impacts.  The book is 
intended to be a guide to how to spot and fix such problems.  The book will 
also debunk the myth that dynamic languages are necessarily slow and/or 
inefficient.

The book's goals are to expand the market for dynamic languages and garbage 
collection techniques, to publicize Harlequin as an expert in memory management 
and to raise revenue through direct book sales.  The book will also provide 
significant information on good memory manager usage and can be used as 
additional material to enhance the documentation of Harlequin's own memory 
management product.

The book will also include analysis of products that compete with Harlequin's 
memory management product giving the material covered broad applicability.  The 
results of this analysis will feed back into improvements in the memory 
management product itself with the intention that our product will compare 
favourably with the competition.

The proposal is for Tucker Withington (MM) and Andrew Shires (Documentation) to 
work on this book. Tucker would spend up to 50% of his time producing primary 
material and Andrew would spend his own time editing, writing and handling the 
contact with the publisher.

