                   DESCRIPTION OF MPS INTERFACE TYPES
                      protocol.mps.interface-types
                              obsolete doc
                             lmb 1997-05-01

Types declared in the MPS interface are of three sorts:

- Transparent types
- Opaque types
- Derived types

The transparent types, such as mps_res_t, are types whose implementation
is deliberately exposed to MPS clients. Clients may use properties of
the underlying types to manipulate values of these types. For
instance:

- mps_shift_t is unsigned int, and a client may use an mps_shift_t
  value in, say, a shift expression.
- mps_addr_t is void*, and a client may, say, cast an mps_addr_t to a
  structure pointer.
- mps_bool_t is int, and a client may combine mps_bool_t values with
  Boolean operators, use them as conditions, &c.

Clients should still use the type name declared in mps.h when using
the MPS interface (so, for instance, clients should not use "int"
where they mean "mps_res_t").

The opaque types, such as mps_class_t, are declared as pointers to
incomplete structure types (such as struct mps_class_s). This means
that the implementation of these types is invisible to the client.
Nothing about the implementation of an opaque type is exposed to the
client or should be used by the client.  A value of an opaque type
might be NULL, or an invalid pointer (for instance, it might point to
unmapped memory).  Values of opaque type cannot be generated by the
client; they are generated by the MPS.  A value of an opaque type
can only be used in a call to the MPS or a test for equality with
another value of the same type.

The derived types, such as mps_ap_s, mps_assert_t, and
mps_root_scan_t, are structure and function types based on transparent
and opaque types and on builtin C types. The degree to which the
client may or must depend upon the implementation of a derived type
depends upon the type, and is covered by the documentation for the
type.


Pool Class Types

mps_class_t is the abstract type of pool classes. A pool class may be
obtained by calling the class function for the appropriate class, such
as mps_class_mv for the MV class. A pool class is used when creating a
pool with mps_pool_create or mps_pool_create_v. [See the chapter?? on
pool classes and the documentation for mps_pool_create*].

mps_class_s is the incomplete structure type used only to define
mps_class_t.

