                 DESCRIPTION OF THE MPS ARENA PROTOCOL
                           protocol.mps.arena
                             incomplete doc
                            pekka 1997-09-29

INTRODUCTION

.intro: This document describes the arena protocol in MPS.


Document History

.hist.0: First draft written by pekka 1997-09-29 on the basis of 
doc.mps.ref-man.concepts(0), adding a description of arena classes.


OVERVIEW

.over.arena: The arena is an object that represents the state of the MPS, and 
tells it where to get the memory it manages.

.over.session: You typically start a session with the MPS by making an arena 
and end the session by destroying it.  The only function you might need to call 
before making an arena is mps_telemetry_control.  Indeed, there are very few 
functions that you even could call without creating an arena.  .over.destroy: 
If you do not destroy an arena before terminating your program, the operating 
system will probably still reclaim the memory and other resources the arena was 
managing; but it is better to destroy it, to finish off properly.  Before 
destroying an arena, you must first destroy all objects and data in it, as 
usual for abstract data types in the MPS.  If you can't destroy the arena 
properly, you might want to call mps_telemetry_flush explicitly.

.over.other: Other types of objects are created "in the arena".  They are part 
of the world within the arena, and may interact and affect each other.

.over.multiple: The MPS allows creation of multiple arenas.  It can be useful 
to have two active arenas and to try different things out in them.  Arenas do 
not interact.  However, they compete with each other for resources.  It is not 
efficient to have multiple arenas containing garbage-collected objects.  Using 
multiple arenas is an advanced technique.  For more information, see [something 
in the User Guide].


ARENA CLASSES

.class: There are several classes of arena.  These differ mainly in the way 
that they acquire the memory to be managed.  See the documentation of each 
arena class in symbol.mps.c.mps_arena_class_*.  The class is chosen when the 
arena is created (see symbol.mps.c.mps_arena_create), in a way identical to 
pool classes.

