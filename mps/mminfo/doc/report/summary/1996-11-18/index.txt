            MEMORY MANAGEMENT PROGRAMME SUMMARY, 1996-11-18
                       report.summary.1996-11-18
                               draft doc
                           richard 1996-12-06

INTRODUCTION

This document is a summary of Memory Management Group projects, progress, 
plans, and risks covering the period from mid 1996 to early 1997.

This report follows on from the previous report which was requested by the 
SP/APP Divisional Management Committee in May 1996.


OVERVIEW


Goals

The General Goals of the group (goal.general) remain unchanged:

  internal        Make products for other groups within Harlequin
  central         Reduce duplicated effort within Harlequin
  revenue         Make products for sale by Harlequin
  quality         Improve quality of solutions within Harlequin
  image           Broaden and improve the image of Harlequin


Structure

The various activities of the MM Group are split into seven "projects", each 
with their own goals (goal.*), requirements (req.*), plans (plan.*), and 
release schedules (plan.*).  Each project produces one or more "products".

  MM/EPCore supplying the ScriptWorks Core RIP with garbage collection.

  MM/Dylan a memory manager for Dylan-generated components and
  applications.

  MM/Product a memory management toolkit for general release.

  MPS  the flexible memory management framework supporting MM/EPCore,
  MM/Dylan, and MM/Product, and intended for future projects.

  MM/ML  maintaining the MLWorks memory manager and garbage collector.

  MM/Web on-line reference material to promote Harlequin products.

  MM/Process our quality software development process.

  MM/Consult memory management consultancy

  MM/LFCS collaboration with the Laboratory for the Foundations of
                Computer Science at the University of Edinburgh.


General Progress

This section describes how the main risks described in the previous report have 
been dealt with.

> 1. Lack of management support.  In order to get products to market we will
> need resources from Doc, QA, Marcomm, etc. and these are extremely
> difficult to obtain without a Product Manager.  We need someone with the
> authority and ability to co-ordinate these resources to bring the product
> to market.

I beleive this risk has been largely eliminated.

There have been two major developments.  Firstly, Richard brought this 
situation to the attention of Alex Parnes who caused a MM Quartet to be 
formed.  This quickly brought in resources from the other groups and great 
progress was made towards an external product.  Secondly, Jo Blishen has 
recently taken on the role of Product Manager, and will plan and co-ordinate 
product releases.

There continued to be a lot of difficulty obtaining documentation resources, 
and this has delayed the MM/Product project.  Recently Leah Bateman has been 
assigned to MM documentation and that effort will begin shortly.

> 2. Project manager overload.  I am doing my utmost to ensure that this
> project is a success in all directions.  We are now working for four
> clients  and may soon be working in a fifth, and I often feel I am barely
> in control.  I do not have enough time to devote to the technical
> leadership which gives the project its conceptual integrity and thence its
> quality.  Bringing on Gavin Matthews (see STAFFING) may help, as would
> having a Product Manager who has time to devote to planning and
> co-ordination.

This risk has been reduced, and things look like they might improve further.

There has been some restructuring during the past six months in order to reduce 
the dependency on Richard Brooksby (thus reducing a major risk) and to allow 
the various aspects of the project to be planned in a uniform manner.

Richard delegated responsibility for the MM/EPCore project to Nick Barnes, and 
responsibility for the MM/Dylan project to David Jones.  Responsibility for 
process was delegated to Gavin Matthews, and later the MM/Process project was 
formed.  The MM/Web project was formed and delegated to Gavin Matthews.  
Richard retains responsibility for the MPS, MM/Product, and MM/ML projects.  As 
group manager, Richard (of course) remains accountable for all MM Group 
activities.

One reason for this division is to allow us to migrate to full Product 
Management (under Jo Blishen) and use of the Product Evolution database design 
(a.k.a. DARWIN).  Until now, Richard has been doing most of the product 
management work -- specifying products, analysing requirements, scheduling 
releases, etc.  Jo Blishen will help.

> 3. Inability to take on new staff.  The memory manager is a highly
> intricate piece of design which takes a long time to understand.  If
> demands on the group increase further we will need more people, but the
> project is delayed by bringing them up to speed (the "Mythical Man Month"
> syndrome).  I believe this risk can be reduced by a concentrated internal
> documentation effort, followed by internal documentation maintenance.  This
> will be one of Gavin Matthew's jobs, but may require support from, say, the
> Doc Group.

This risk has been reduced, but not really solved.

The internal documentation has improved, but not in the direction I expected.  
Delegating the projects (see above) has lead to improved documentation of 
releases and plans, and far less dependence on me.  I believe this will help 
the group to change and take on new staff as necessary.


Resources

The MM Group consists of:

  Richard Brooksby project manager, group leader, developer
  Tucker Withington developer
  David Jones  developer
  Nick Barnes  developer
  Gavin Matthews administrator, developer

Other members of the broader MM team are:

  Jo Blishen  new product manager
  Clive Harris  product marketing manager
  Mark Preece  QA manager
  Richard Tucker QA engineer
  Leah Bateman  new documentor

The MM Group "owns" the following machines:

  deja-vu  Sun SPARCstation 1
  McRame  Apple Macintosh Powerbook Duo 280c + dock
  Dad's Work Computer Apple Macintosh Powerbook Duo 280 + dock
  Aaron   Dell Omniplex 590 PC (pentium box)
  Mnemosyne  Dell Omniplex 466 PC (486 box)
  McCaque  Apple Power Macintosh 9500/132

and various other bits and bobs, including a number of software packages.


THE MM/EPCORE PROJECT


Connections

The "trapping" release of the new Core RIP Memory Manager is intended for the 
"4.2" release of ScriptWorks.  The "Pre-GC" release is a delivery to the Core 
RIP development group (i.e. to Hugo) in order to help prepare the RIP for GC.  
The "GC" release will meet all critical and essential requirements specified by 
EP (see req.epcore(12)).

The MM/EPCore project depends on the MPS project to the extent that it requires 
infrastructure and some garbage collection support.  It also depends on the 
MM/Process project to ensure quality by review, planning, and procedures.


Progress

We introduced a memory management interface layer to separate the Core RIP from 
it's old memory manager, and introduced the new MM underneath.  We have written 
and used a lot of measurement and debugging code.  We've done work in the Core 
RIP to improve its use of the MM Interface.  We've refined our understanding of 
the requirements and analysed them.  We've revealed at least one Core RIP bug.  
We've almost completed development for the "trapping" release.

We've slipped by about two months, but less than the ScriptWorks releases with 
which we intended to synchronize.  Therefore there has been no real risk caused 
by the slip.  We haven't deviated from the original plan to provide a very low 
risk switch-over from the Core RIP's old memory manager to the new MM.  Keeping 
this risk down has been a major cause of the slippage, since we wanted to make 
sure everything goes very smoothly.  We believe we have succeeded, and thus 
helped to improve the SP/EP relationship.


Plans

All work is by Nick unless indicated otherwise.

1996-11-18 -
        25 check-in, acceptance tests, formal review of arena code
     12-02   ** trapping release
        09 bring psvm into the MPS
        16 root finding
1997-01      ** Pre-GC release
     02      ** GC release
       requirements discussion, attribute (performance) improvement
       interface improving simplifications

Risks

The main risk is the dependence on Nick.  If Nick is incapacitated and the 
trapping release slips by a month then we will not make the planned release 
date of ScriptWorks 4.2.  Improved MM has been promised to some customers, so 
that would be a problem.  David Jones will meet and discuss the EPCore work 
with Nick in order to be able to provide backup.

There is a risk is failing to meet our runtime or footprint requirements, by 
poor object placement causing fragmentation which forces a premature 
paint-to-disk.  This is to be solved by using a "preference" mechanism in the 
MPS.


THE MM/DYLAN PROJECT


Connections

The MM/Dylan project is critical to the success of the Dylan Project, since 
DylanWorks requires our memory manager, and it has to be a good one to prevent 
bad publicity due to garbage collection.

We anticipate three releases before the Dylan "Kansas" release:

The "Buffalo" release meets all critical functional requirements in support of 
the Dylan "A" release (req.dylan(5)).  The Dylan "A" release is for Dylan 
workers developing Kansas.  This covers almost all the functional requirements 
for Kansas.  We do not expect it to meet all performance requirements.

The "Sunflower" release will meet the severest of the performance requirements, 
i.e. total CPU overhead and pause times.

A further release will meet all remaining requirements, in particular, 
debugging and measurement tools.

The MM/Dylan project depends strongly on the MPS, and in particular on the 
incremental GC infrastructure.


Progress

We have made the GC incremental by developing a general incremental framework.  
We have designed abstractions to allow incrementality using hardware protection 
on multi-threaded machines.  We have designed and implemented general 
mechanisms for rehashing.  We have designed and implemented specialized pools 
to meet new Dylan requirements.  Many other proposals are in the works.


Plans

All work is by David unless indicated otherwise.

1996-11-18 FFI doc, rehash changes, format proposals
        25 debugging interface
     12-02 analysis, design, planning
        09   ** Buffalo release
        16      Design and plan in collaboration with Richard
1997-01         Attribute (performance) improvement
     02         Measurement and debugging tool development
     03      ** Sunflower release


Risks

The main risk to MM/Dylan is the lack of a garbage collector with a proven 
track record.  Developing a new GC is difficult, and developing a generalized 
GC in a general framework is harder.  To some extent we're researching and 
experimenting, and the experiment could go wrong.  This risk will be reduced by 
reviewing the design of the GC, applying the experience of the group.

We don't get enough feedback from the Dylan group about the memory managers we 
deliver.  There is a risk that what we have delivered doesn't meet their 
requirements and neither group knows it.  We will pester them more to test the 
GC early.  We could also get our GC working with the Dylan C back-end, which is 
in use by the Web Group and others.


THE MM/PRODUCT PROJECT


Connections

No other projects rely on the MM/Product project.  However, this is our main 
attempt to raise external revenue (goal.revenue).

The MM/Product project relies on the MPS.


Progress

The market has been analysed and the product described (analysis.product).  
Work has concentrated on developing the interface to the MPS, designing the 
essential measurement and feedback tools, and outlining the documentation.  
Tucker has produced a prototype measurement tool using Common Lisp and CLIM.  
Recently, Leah Bateman has been assigned to documentation, reducing a major 
risk.


Plans

All work is by Tucker unless indicated otherwise.

1996-11-18 -
        25 tool prototype design and development
     12-02 ditto
        09 ditto
        16 ditto
1997-01  documentation effort begins (Richard meets Leah)
     02
     03


Risks

The product relies on a powerful graphical measurement tools on several 
platforms.  Key design and implementation decisions have yet to be made.  The 
MM Group does not currently have the resources to develop native tools on the 
various platforms.  This is a major risk.  No product can be released without 
these tools, and there is a significant amount of development to be done.

Richard is trying to obtain a new developer with user interface development 
skills in order to analyse, design, and develop the tools in co-operating with 
Tucker.  Progress is very slow.


THE MPS PROJECT


Connections

The MPS project provides the core system to the MM/EPCore, MM/Dylan, and 
MM/Product projects.  It is therefore critical to their success.

The MPS project relies heavily on the MM/Process project in order to guarantee 
its quality.  The MPS has to have very high integrity, and changes to it must 
be carefully controlled and reviewed.  Without a solid process there would be 
significant risk to ScriptWorks, Dylan, and the MM Product.


Progress

The MPS has been generalized and improved, but has also regressed in some 
areas.  The most significant developments is the incremental tracer, which 
facilitates incremental garbage collection.  The MPS is now deployed in the 
Core RIP.

There have been significant theoretical advances, partly stimulated by the 
MM/LFCS project.  I believe this are improvements on the current state of the 
art.  Some of these are being implemented in the new tracer, and Dylan should 
benefit.


Plans

1996-11-18 -
        25 -
     12-02 new tracer improvement
        09 new tracer testing and refinement
        16 new tracer testing and refinement
1997-01  new tracer check-in
     02  -
     03  unknown


Risks


THE MM/ML PROJECT


Connections

MLWorks relies on the MM/ML project to maintain and improve the garbage 
collector and memory manager which are part of the MLWorks run-time system.  
The GC and MM were originally developed by Richard Brooksby and Nick Barnes, 
and most work in this area is done by Nick.

MM/ML doesn't currently rely on any other MM project, since it is a piece of 
outside work which we have imported.  However, we have plans to experiment with 
MLWorks and the MPS, and will change over if the benefits outweigh the costs of 
change.


Progress

Wrote a "heap explorer", and used it to identify problems with exported image 
size. Rewrote the global roots and delivery systems to dramatically reduce 
these image sizes ("Hello, World!" down from several megabytes to 6k). 
Prototyped a new set of garbage collector heuristics which eliminate very long 
GC pauses. Wrote a heap consistency checker.

Found and fixed numerous "difficult" bugs in the runtime and elsewhere. Handed 
over responsibility for the non-MM parts of the MLWorks runtime to mlworkers. 
With Stephen B, documented some tricky parts of the MM interface. Helped to 
document the profiler and profile tool.


Plans

Early in 1997 we will have one or more meetings with the ML team to
determine requirements for future MM/ML work.

The "Korma" release of the ML memory manager is planned for the first
quarter of 1997. The exact set of features for this release will be
determined by the requirements meetings. Currently we envision it
including the new GC heuristics and various other improvements and bug
fixes (for instance, object size limits will be increased, large
object memory will be returned to the OS, &c).

We intend to experiment with replacing the underlying memory
management with the MPS, as a test of the flexibility and performance
of the MPS in an environment which already has a well-understood and
optimized GC. We do not anticipate releasing such a memory manager to
the ML team during 1997.

All work below to be done by Nick unless indicated otherwise.

1996-11-18   ** MLWorks 1.0 release -- last minute changes
        25 -
     12-02 -
        09 -
        16 -
1997-01  meet to redefine requirements
     02  MPS integration experiments?
     03      ** korma release?


Risks

The main risk is that we will not have enough resources in the MM group to meet 
the requirements of the ML team.  This would lead to slippage in the plan 
schedule.  We have already seen some slippage in intended MM/ML work, due to 
other pressures on Nick (including ML work which is not strictly MM-related).


THE MM/WEB PROJECT


Connections

The MM/Product and MM/Consultancy projects are partly relying on the MM/Web 
project to boost Harlequin's image as a centre of expertise in the field of 
memory management.

The MM/Web project does not rely on any other MM project, except, to some 
extent, on MM/Process to provide review and maintenance procedures.


Progress

The MM/Web project has been conceived and developed during the past six months, 
and is approaching first launch.  The total effort expended has only been about 
twelve man-weeks, so I think this will be a very cost-effective piece of work.  
Developing the web pages has also consolidated a lot of our knowledge and 
helped to foster communications both within the MM Group and between MM, 
Documentation, and Marketing.


Plans

All work to be done by Gavin unless indicated otherwise.

1996-11-18   ** design release (to Design Group)
        25   ** internal release (full internal review)
     12-02   ** beta release (limited external review)
        09 improve completeness, accuracy, etc.
        16   ** launch release
1997-01  regular bi-monthly maintenance
     02  minor fixes
     03  regular bi-monthly maintenance


Risks

The web pages must stike a balance between commercial promotion and useful 
on-line reference material if they are to achieve their goals.  We must be wary 
of over- or under-commercialization.  We have established goals, and a 
structured analysis, to help guide and moderate page design.

The web pages must be maintained, and seen to be maintained, if they are to 
remain a good advertisement for Harlequin and Harlequin Memory Management.  We 
are developing a regular maintenance procedure to ensure that they remain 
current.

We must be careful not to release confidential information which would devalue 
our intellectual property assets (see overview.ideas).


THE MM/PROCESS PROJECT


Connections

All the MM project's development effort rely on the MM/Process project to 
provide formal review, structured documentation, procedures, guides, planning, 
and so on.  The process is one of our most important developments, and has 
allowed us to release software (and other things such as the web pages) with 
very few defects indeed.  It is like the goose that lays golden eggs, though 
they're probably only silver at the moment.

Other groups in Harlequin are iterested in our methods.  We have already 
exported some formal review methods to the ML Group, and parts of our 
structured information system to EP.  However, these other groups don't 
actively rely on MM/Process.

The MM/Process project doesn't rely on other MM projects, except in that the 
experience from those projects provides the knowledge that improves the process.


Progress

Process improvement has picked up since Gavin joined the group and was able to 
relieve Richard of must of the legwork.  We have caught up with a lot of formal 
review, and that has improved our confidence in the quality of the MPS and 
other software.  The Process has also improved our delegation, planning, and 
release scheduling, and helped us prepare for real Product Management.


Plans

All work is by Gavin unless indicated otherwise.

1996-11-18 formal review and edit cycles
        25 ditto
     12-02 ditto
        09 ditto
        16 ditto
1997-01  develop product management with Jo Blishen, DARWIN integration?
     02
     03


Risks

The main risk is wasted effort.  Too much work on the development process is 
wasted because it becomes needless introspection (see 
cartoon.dilbert.death-spiral).  However, too litle work on the process leads to 
a great deal of wasted effort on other projects.  (A defect which reaches a 
customer is extremely expensive to the company.)  We must therefore find the 
right balance between primary and secondary development.  Fortunately, our 
processes encourage us to measure the costs and benefits of all things, 
including process development, so a balance should be found automatically.

