              REQUIREMENTS OF THE MM PRODUCT DOCUMENTATION
                            req.product.doc
                             incomplete doc
                             lmb 1997-10-14

[need to rework these -- LMB]

INTRODUCTION

Project

See also req.product.

Scope

.scope

.scope.det:

.scope.readership:

Definitions

Document Conventions

History

PRIORITIES

FUNCTIONAL REQUIREMENTS

fun.x:
   Category:
   Source:
   
ATTRIBUTE REQUIREMENTS

.attr.x:
   .attr.x.metric:
   attr.x.plan:
   .attr.x.best:
   .attr.x.worst:
   Category:
   Source:

   .req.coord:  The documentation has to be highly co-ordinated with the
   software, packaging, and marketing material. (from
   analysis.product.prod.sw.coord)

   .req.explain:, req.pace: Explain the material to the user at a
   carefully paced rate.

   .req.help: Address the needs of the user, specifically by helping the user 
   to identify and solve specific problems at each level of use.

   .req.function: Act as a complete tutorial and reference to the MM Product.

   .req.product-success: Contribute to the success of the MM Product,
   including acting as part of the marketing literature.

   .req.mm-goal.general:, .req.mm-goal.product: Assist the MM Group
   in meeting its general goals (see goal.general) and product goals
   (see goal.product).

   .req.internal-use: Be useful to internal customers. These include the 
   Dylan Group, the EP Core RIP Group, and potentially, other groups.

   .req.intro: Act as an introduction to the product for new MM Group
   members, new writers, support personnel, and so on.

   .req.support: Reduce support calls to a minimum.

   .req.schedule: Be developed in conjunction with the MM Product and
   conform to any schedules set forth by the MM Group.

   .req.book.schedule: Tie in to the MM Book.

   .req.maintenance: Be easy for future writers to update and maintain.

   .req.quality: Be a well-written piece of documentation.

   .req.explain.attr: It must be usable, clear, correct, complete, consistent,
   comprehensible, and concise.

   .req.explain.code: It must contain a sufficient amount of example
   code.

   .req.explain.accessibility: It must have a comprehensive table of contents,
   index, and glossary, as well as any other components that will assist
   the user in finding the information s/he needs.

   .req.explain.sequence: The documentation set must be designed to lead
   the user through the documentation in a predefined sequence.

   .req.pace.content: It must contain carefully graded material.

   .req.pace.testing: It must be extensively reviewed and tested,
   including usability tests with members of the target audience.
  
   .req.product-success.levels-of-use: It must accommodate the MM
   product's levels of use model.

   .req.product-success.marketing: It must "hit the customer with the benefits 
of
   using the product, and provide a very easy route to getting started within 
that
   vital first afternoon" (see analysis.product.prod.sw.manual.benefit).

   .req.product-success.purify: It must explain how to use the product in
   conjunction with other products, such as Purify (see 
   meeting.doc.1996-06-04.purify).

   .req.product-success.sexy: It must look and feel nice.

   .req.product-success.formats: It must be available in one or more
   electronic formats -- specifically, HTML, PDF, PostScript, ASCII text, 
   and others as required.

   .req.product-success.focus: It must focus on the product's unique
   selling points, described below.

   .req.product-success.components: It must include the standard 
   documentation components shipped with other products. 
  
   .req.product-success.release: It must be ready to ship by the time
   the product is released.

   .req.internal-use.accessibility: It must be accessible internally
   from several sources.

   .req.internal-use.schedule: The reference manual must be completed
   as soon as possible so that internal customers can begin using it.

   .req.explain.doc-style: It must comply with the Documentation
   Group's style guidelines (see 
   <URL:http://webhost.harlequin.com/~doc/style/>). 

   .req.combo:  It must explain how to use pool classes and protocols in 
   combination.

   .req.gc: It must teach the user about GC (either in or not in conjunction 
with the 
   MM Book).

