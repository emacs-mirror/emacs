                           JAVA REQUIREMENTS
                                req.java
                             incomplete doc
                             drj 1999-02-19

INTRODUCTION

.intro: This documents the requirements for the Java project (see 
project.java(0) for other key documents).

.readership: Anyone interested in the MM Java project.

.scope: The Java project is an MM project to deploy Halequin's MM software 
(MPS) into a java system.  The idea is to provide a garbage collector for a 
Java Virtual Machine (though strictly speaking that is a solution).

.tagging: This document is tagged according to MM tagging conventions which can 
be found in guide.tag(2).   Tags are a way of naming bits of text in a document 
and referring to that text elsewhere.  A tag is defined by naming the tag 
followed by a colon.  A reference to a piece of tagged text is made by simply 
naming the tag.  Tags that start with a '.' are tags that are internal to a 
document, the tag prefix (which is the tag for the whole document) is 
implicitly prepended.

NOTES

.note.vendor: The client of the java project has not yet been identified (as of 
1999-02-19).  Some of the requirements are a bit vague as a result and others 
are subject to change.  The broad direction is epxected to be stable.

DEFINITIONS

.def.jvm: "The JVM".  JVM stands for Java Virtual Machine (see blah for 
detailed definition).  Because the client of the Jva project has not been 
identified "The JVM" means whatever JVM we end up integrating with.  A JVM is a 
preferred execution platform for Java programs; it was designed to execute Java 
programs.

.def.mm: "The MM".  The MM means the memory manager that the MM group supply 
that is intended to meet these requirements.


REQUIREMENTS


.req.jvm: Must provide garbage collection and other memory management services 
to a JVM.  (as opposed to say a runtime system for a java-to-native-code 
compilation system).

.fun.obj.alloc:
.fun.obj.recycle:
.fun.root:
.fun.weak:
.fun.final:

