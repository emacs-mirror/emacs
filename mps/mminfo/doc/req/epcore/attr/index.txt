                  MM/EP-CORE REQUIREMENTS: ATTRIBUTES
                            req.epcore.attr
                               draft doc
                           richard 1995-11-01

[This document is part of req.epcore.  It does not have its own revision number]

Introduction

.intro: Note that most of these are not attribute requirements.


Run-Time Attributes

.run-time.proc: The "run-time" attributes are intended to ensure that 
ScriptWorks benchmark performance does not degrade under the MM.  The procedure 
for testing these attributes shall be:

  1. cold-start the RIP,

  2. RIP the job and measure the run time,

  3. reboot the RIP,

  4. RIP the job again and measure run time,

  5. take the best of the two run times.

(Procedure described by Andy Cave, meeting.epcore.1995-11-01.)

.run-time.seybold:
  RIP run-time shall be no greater than in the preceding release of SW when 
applied to the Seybold Speed Tests.
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.run-time.genoa-fts:
  RIP run-time shall be no greater than in the preceding release of SW when 
applied to the Genoa FTS tests.
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.run-time.genoa-ats:
  RIP run-time shall be no greater than in the preceding release of SW when 
applied to the Genoa ATS tests.
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.run-time.qa:
  RIP run-time shall be no greater than in the preceding release of SW when 
applied to certain jobs from the ScriptWorks QA Test Suite.  [This set of jobs 
has yet to be defined and will appear in a future revision of this document.]
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.run-time.trap:
  RIP run-time shall be no greater than in the preceding release of SW when 
applied to certain trapping jobs from the ScriptWorks QA Test Suite.  [This set 
of jobs has yet to be defined and will appear in a future revision of this 
document.  For suggestions, see mail.richard.1996-08-06.13-13.]
  meeting.epcore.1996-06-06.trap.tests, mail.pekka.1998-02-16.15-57


Throughput Attributes

.tp.proc: The "throughput" attributes are intended to ensure that the genuinely 
useful performance of the RIP does not degrade under the MM.  The procedure for 
testing these attributes shall be:

  1. cold-start the RIP,

  2. RIP all the jobs in the test set in sequence and measure run time,

  3. reboot the RIP,

  4. RIP all the jobs in the test set in sequence again and measure run time,

  5. take the best of the two run times.

.tp.seybold:
  RIP throughput shall be no lower than in the preceding release of SW on the 
Seybold Speed Tests.  [The exact list of jobs and order of the set will appear 
in a future revision of this document.]
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.tp.genoa-fts:
  RIP throughput shall be no lower than in the preceding release of SW on the 
Genoa FTS tests.  [The exact list of jobs and order of the set will appear in a 
future revision of this document.]
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.tp.genoa-ats:
  RIP throughput shall be no lower than in the preceding release of SW on the 
Genoa ATS tests.  [The exact list of jobs and order of the set will appear in a 
future revision of this document.]
  Essential.
  meeting.epcore.1995-08-08.work.speed, meeting.epcore.1995-11-01

.tp.qa:
  RIP throughput shall be no lower than in the preceding release of SW on 
certain subsets of the ScriptWorks QA Test Suite.  [The subsets have yet to be 
defined and will appear in a future revision of this document.]
  Essential.
  meeting.epcore.1995-08-10.qa-test.group

.tp.trap:
  RIP throughput shall be no lower than in the previous release of SW on 
certain trapping subsets of the ScriptWorks QA Test Suite.  [The subsets have 
yet to be defined and will appear in a future revision of this document.]
  meeting.epcore.1996-06-06.trap.tests, mail.pekka.1998-02-16.15-57

Other Timing Constraints

.run-time.cons:
  RIP run-time shall be consistent for any particular job plus or minus five 
seconds.
  Essential, maybe optional if a GC occurs.
  meeting.epcore.1995-08-08.work.rate, meeting.epcore.1995-11-01

.idle:
  During extended periods of MM activity due to req.epcore.fun.control.slice 
the RIP must regain control less than 0.5s after a specified asynchronous event 
(e.g. as a new job coming in after idle time.)
  Essential.
  meeting.epcore.1995-08-10.idle.response, meeting.epcore.1995-11-01

.tickle:
  MM code must tickle the RIP at least 30 times per second of extended MM 
activity.
  Essential.
  meeting.epcore.1995-08-10.tickle, meeting.epcore.1995-11-01, 
mail.richard.1996-06-17.15-10
.trap.speed:
  The MM shall not prevent trapping using the RIP plus Trapper from being 
quicker and more convenient than trapping using a separate application.
  Essential.
  meeting.epcore.1996-06-06.trap.speed


Storage Capacity

.footprint:
  The total memory requirement of the RIP shall not increase in comparison with 
the existing system for the same jobs due to the new Memory Manager.
  Essential.
  meeting.epcore.1995-11-01

.arena.min:
  Manage arena memory down to a minimum size of 1 MB (one megabyte).
  Essential.
  meeting.epcore.1995-11-01,  mail.andy.1996-06-17.16-49

.arena.typ:
  Manage base arena memory with typical sizes of 12 MB, 40 MB, and 90 MB.
  Optional.
  meeting.epcore.1995-11-01

.arena.max:
  Manage base arena memory up to a maximum size of 1 GB.
  Essential.
  meeting.epcore.1995-08-10.capacity, meeting.epcore.1995-11-01, 
mail.andy.1996-06-17.16-49, known system constraints on Unix platforms

.dl.obj.min:
  Manage display list objects down to a minimum size of 8 B (eight bytes).
  Essential.
  meeting.epcore.1995-08-07.dl.sizes

.dl.obj.typ:
  The fragmentation should be acceptable with display list objects of a typical 
(mode) size of 8 B (eight bytes).
  Optional.
  meeting.epcore.1995-08-07.dl.sizes, mail.pekka.1998-02-16.15-57

.dl.obj.max:
  The size of display list objects shall be limited only by the size of the 
largest available block of memory.
  Essential.
  meeting.epcore.1995-11-01, mail.pekka.1998-02-16.15-57

.ps.obj.min:
  Manage PostScript objects (other than strings) down to a minimum size of 8 B 
(eight bytes).
  Essential.
  meeting.epcore.1995-08-07.ps.sizes, meeting.epcore.1995-08-07.ps.nozero

.ps.str.min:
  Manage PostScript strings down to a minimum size of 1 B (one byte).
  Essential.
  meeting.epcore.1995-11-01

.ps.str.max:
  Manage PostScript strings up to a maximum size of 64 kB.
  Essential.
  meeting.epcore.1995-08-07.ps.sizes

.ps.array.max:
  Manage PostScript arrays up to a maximum size of 512 kB.
  Essential.
  meeting.epcore.1995-08-07.ps.sizes, meeting.epcore.1995-11-01

.ps.dict.max:
  Manage PostScript dictionaries up to a maximum size of 1 MB + 1 kB.
  Essential.
  meeting.epcore.1995-08-07.ps.sizes

.ps.job.typ:
  Manage PostScript memory for jobs of a typical sizes of between 100 kB to 500 
kB.
  Optional.
  meeting.epcore.1995-08-07.ps.jobs

.ps.job.surprise:
  Manage PostScript memory where jobs rarely reach a size of 16 MB.
  Optional.
  meeting.epcore.1995-08-07.ps.jobs

.ps.job.max:
  The total size of PostScript memory shall be limited only by the memory 
available in the arena.
  Essential.
  meeting.epcore.1995-11-01, mail.pekka.1998-02-16.15-57

.gen.obj.min:
  Manage general memory objects down to a minimum size of 1 B (one byte).
  Essential.
  meeting.epcore.1995-11-01, meeting.epcore.1996-07-30.class.general

.gen.obj.max:
  The size of general memory objects shall be limited only by the size of the 
largest available block of memory.
  Essential.
  meeting.epcore.1995-11-01, meeting.epcore.1996-07-30.class.general, 
mail.pekka.1998-02-16.15-57

.gen.pool.max:
  The total size of general memory shall be limited only by the memory 
available in the arena.
  Essential.
  meeting.epcore.1995-11-01, meeting.epcore.1996-07-30.class.general, 
mail.pekka.1998-02-16.15-57

.tmp.obj.min:
  Manage temporary objects down to a minimum size of 1 B (one byte).
  Essential.
  meeting.epcore.1995-11-01.

.tmp.obj.max:
  Manage temporary objects up to a maximum size of 1 MB.
  Essential.
  meeting.epcore.1995-11-01.

.tmp.pool.max:
  Manage temporary memory up to a maximum total size of 1 MB.
  Essential.
  meeting.epcore.1995-08-07.general, mail.pekka.1998-02-16.15-57

.stat.obj.min:
  Manage static objects down to a minimum size of 1 B (one byte).
  Essential.
  meeting.epcore.1996-07-30.class.static

.stat.obj.max:
  Manage static objects up to a maximum size of 16 MB.
  Essential.
  meeting.epcore.1996-07-30.class.static.limit

.stat.pool.max:
  Manage static memory up to a maximum size of 16 MB.
  Essential.
  meeting.epcore.1996-07-30.class.static.limit

.cache.obj.min:
  Manage cache objects down to a minimum size of 48 B (forty-eight bytes).
  Essential.
  meeting.epcore.1995-11-01

.cache.obj.font.typ:
  The fragmentation should be acceptable with font cache objects of typical 
size classes of 48 B, 64 B, 128 B, 1 kB.
  Optional.
  meeting.epcore.1995-08-07.fontcache.sizes, meeting.epcore.1995-11-01, 
mail.pekka.1998-02-16.15-57
.cache.obj.upath.typ:
  The fragmentation should be acceptable with user path cache objects of 
typical sizes between 256 B and 8 kB.
  Optional.
  Conversation with Angus 1996-06-28, mail.pekka.1998-02-16.15-57

.cache.obj.halftone.typ:
  The fragmentation should be acceptable with half-tone cache objects of 
typical sizes between 1 kB and 4 kB.
  Optional.
  Conversation with Angus 1996-06-28, mail.pekka.1998-02-16.15-57

.cache.obj.colour.typ:
  The fragmentation should be acceptable with colour cache objects of typical 
size 24 B.
  Optional.
  Conversation with Angus 1996-06-28, mail.pekka.1998-02-16.15-57

.cache.obj.tile.typ:
  The fragmentation should be acceptable with tile cache objects of typical 
sizes 64 B -- 4 kB.
  Optional.
  Conversation with Angus 1996-06-28, mail.pekka.1998-02-16.15-57

.cache.obj.max:
  The size of cache objects shall be limited only by the size of the largest 
available block of memory.
  Essential.
  meeting.epcore.1995-11-01, mail.pekka.1998-02-16.15-57

.cache.pool.max:
  The total size of cache memory shall be limited only by the memory available 
in the arena.
  Essential.
  meeting.epcore.1995-08-07.fontcache.jobs, meeting.epcore.1995-11-01, 
mail.pekka.1998-02-16.15-57
.trap.obj.min:
  Manage trapping objects down to a minimum size of 1 B (one byte).
  Essential.
  meeting.epcore.1996-06-06.trap.size.min

.trap.obj.max:
  Manage trapping objects up to a maximum size of 512 kB.
  Essential.
  meeting.epcore.1996-06-06.trap.size.max, mail.freeland.1996-06-17.16-17

.trap.obj.typ:
  The fragmentation should be acceptable with trapping objects with typical 
sizes of 16 B, 20 B, 24 B, 32 B, 52 B, 4.5 kB, 16.1 kB, 32.1 kB, 56 kB, 360 kB.
  Optional.
  meeting.epcore.1996-06-06.trap.size.typ, mail.freeland.1996-06-17.16-17, 
mail.pekka.1998-02-16.15-57


Reliability

.rel:
  A baseline figure for reliability is that the mean time between failure due 
to the MM of the RIP shall be no less than 16000 hours of continuous execution 
of any set of jobs.  [However, this is an unmeasurable attribute.  It has been 
agreed (meeting.epcore.1995-11-01) to consult with QA to determine a reasonable 
set of requirements and tests which approximate this level of reliability.  
These will appear in a future revision of this document.]  Essential.
  meeting.epcore.1995-08-10.mtbf, meeting.epcore.1995-09-13.odd, 
meeting.epcore.1995-09-13.dollars, meeting.epcore.1995-11-01

.rel.state:
  The memory manager shall return to a desirable state at the end of each job, 
such that the RIP's ability to RIP the next job is not impaired.  [This 
requirement is partly a solution to the above untestable requirement.]
  Optional.
  meeting.epcore.1996-02-08.suggest.reliable

