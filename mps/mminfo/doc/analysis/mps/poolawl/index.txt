                     ANALYSIS OF DESIGN OF POOLAWL
                          analysis.mps.poolawl
                             incomplete doc
                             drj 1997-07-21

INTRODUCTION

.intro: This is an analysis of the decisions and non-decision made in the 
design of Pool Class AWL (see design.mps.poolawl).


DECISIONS


HAZARDS

IMPROVEMENTS

.improve.scan.finished: Currently Scan uses a finished flag to determine 
whether it is finished.  The flag is reset (indicating that it is not finished) 
whenever an object is scanned.  This is because it pessimistically assumes that 
an object could have references to the segment that is currently being scanned 
and may introduce new grey objects onto the page.  The last pass over a segment 
always involves scanning no objects; this is the condition under which finished 
remains set.  Note in particular that this means that in the "simple" case 
where none of the objects in the segment being scanned refer to other objects 
in the same segment then two passes are made over the segment.  This behaviour 
can be improved by introducing a channel between AWLFix and AWLScan.  This 
could be done by moving the finished flag from being a local variable of Scan 
to being in the pool structure or in the group structure.  The flag being in 
the pool structure would require that there was only one segment being scanned 
at a time (which the current MPS design satisfies).

.improve.dependent.abstract: AWL currently uses the function AWLDependentObject 
to determine the dependent object of another object.  This function could be 
abstracted into a format variety.  This would be more flexible for clients 
(currently a waste as only Dylan require this functionality at the moment), and 
more abstract for this pool class.

