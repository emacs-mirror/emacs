                    DESIGN OF C HEADER FILES IN MPS
                           design.mps.headers
                              obsolete doc
                           gavinm 1996-08-26

.scope: This document describes the C header files in the MPS source, what 
they're for, and when to include them.

.summary: In short, most files include only impl.h.mpm; this requires no 
explanation.  Special files include others; this should be documented.

.amc: 

.assert:
 
.fmtdy: 

.lib: impl.h.lib provides Lib_* wrappers for ANSI library functions and types.
  .lib.imp: Includes: none
  .lib.exp: Included by: impl.h.mpm, impl.h.mpmtypes, impl.c.assert, 
impl.c.liban, impl.c.mpmss

.lo:

.lock: impl.h.lock declares the Lock* functions that operate on locks.  
  .lock.imp: Includes: impl.h.mpm
  .lock.exp: Included by: impl.h.mpm

.misc:

.mm:

.mpm: impl.h.mpm is the main header file, which is included by almost all MPS C 
files.  It defines all internal interfaces.
  .mpm.imp: Includes: impl.h.mpmconf, impl.h.mpmtypes, impl.h.mpmst, 
impl.h.lock, impl.h.th, impl.h.poolmv, impl.h.poolmfs, impl.h.ss, impl.h.lib
  .mpm.exp: Included by: impl.h.amc, impl.h.lo, impl.h.lock, impl.h.poolmfs, 
impl.h.poolmv, impl.h.pooln, impl.h.ss, impl.h.th, all of impl.c.* except 
impl.c.amcss, impl.c.assert, impl.c.dw, impl.c.dwstress, impl.c.fmtdy, 
impl.c.liban, impl.c.locv, impl.c.mpmss, impl.c.mpsicv, impl.c.qs, 
impl.c.testlib, impl.c.vm, impl.c.weakcv

.mpmconf: impl.h.mpmconf defines various constants used by the MPM.
  .mpmconf.imp: Includes: none
  .mpmconf.exp: Included by: impl.h.mpm

.mpmst: impl.h.mpmst defines almost all of the structures used in the MPM 
(whose corresponding incomplete types are used in .mpmtypes), along with their 
signatures.
  .mpmst.imp: Includes: impl.h.mpmtypes
  .mpmst.exp: Included by: impl.h.mpm

.mpmtypes: impl.h.mpmtypes defines almost all of the types and type constants 
used by the MPM.
  .mpmtypes.imp: Includes: impl.h.std, impl.h.lib
  .mpmtypes.exp: Included by: impl.h.mpm, impl.h.mpmst

.mps:

.mpmcamc:

.mpsclo:

.mpscmv:

.mpcreg:

.mpstd:

.mpsvmrm:

.ossu:

.poolmfs: impl.h.poolmfs declares MFS* functions and others for manual 
fixed-size small pools.
  .poolmfs.imp: Includes: impl.h.mpm
  .poolmfs.exp: Included by: impl.h.mpm, impl.c.mpmss, impl.c.poolmfs, 
impl.c.poolmv

.poolmv: impl.h.poolmv declares MV* and other functions for manual-variable 
pools.
  .poolmv.imp: Includes: mpm.h
  .poolmv.exp: Included by: impl.mpm.h, impl.c.mpmss, impl.c.poolmv

.pooln:

.ss: impl.h.ss provides declarations for stack scanning.
  .ss.imp: Includes: impl.h.mpm
  .ss.exp: Included by: impl.h.mpm, impl.c.ssan

.std: impl.h.std provides standard support definitions.
  .std.imp: Includes: impl.h.target, impl.h.misc, impl.h.assert
  .std.exp: Included by: impl.h.mpmtypes, impl.h.testlib, impl.c.assert, 
impl.c.mpmss, impl.c.testlib

.target:

.testlib:

.th: impl.h.th declares the Thread* functions that manage threads.
  .th.imp: Includes: none
  .th.exp: Included by: impl.h.mpm

.types:

mpm.h does the following:
  - Defines the interfaces for various .c files
  - Imports the type definitions
  - Imports the standard MPS environment, including assertions

It is thus because when we had many includes there were hidden dependencies 
(due to circular types) and the list of includes was never an accurate 
reflection of the dependencies.

Most (all?) files in the MPS include "mpm.h" -- it defines all internal MPS 
interfaces.


