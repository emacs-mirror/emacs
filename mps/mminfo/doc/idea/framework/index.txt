                           GENERAL FRAMEWORK
                             idea.framework
                               draft idea
                           richard 1995-07-28

SUMMARY

There is no one solution to memory management because requirements
vary so much.  Therefore, we implement a memory management "framework"
which supplies a general interface and supports plug-in "management
policies" which use the framework to meet different client
requirements.  See also MM.IDEA.META.


DESCRIPTION

The MPM (Memory Pool Manager) supplies a generalized interface to the
client and services to the policies.  The policies provide management
and implementations of the client interface.

The policies correspond to bodies of code (modules) and can be
separately developed, packaged, and shipped.  This gives flexibility
in the configuration of products.

Levels of specialization:
 1. general memory management (one interface)
 2. policy classification (types of management: GC, manual, etc.)
 3. policies (a particular GC)
 4. instances at run-time (managing particular object formats)

Providing a single generalized interface makes it easy for the
programmer to substitute one policy for another.  An inefficient
general policy can be used initially, for development speed, then
replaced with a specialized policy once the specific requirements
become clear.


JUSTIFICATION

- adaptability: meeting clients' particular requirements
- product flexibility: separate marketing, shipping, etc.
- development flexibility due to modularity
- maintenance due to modularity
- future-proofing

