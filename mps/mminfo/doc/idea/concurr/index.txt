                         CONCURRENT COLLECTIONS
                              idea.concurr
                               draft idea
                           richard 1995-07-28

SUMMARY

A number of collections may proceed at once without interfering
with one another.


DESCRIPTION

                Old                                 New

        .-----------------.                 .-----------------.
        |                 |                 |                 |
        |       P         |                 |                 |
        |      .-.        |                 |                 |
  A     |      | |        |                 |                 |
        |      `-'        |                 |                 |
        |          Q      |                 |    Q'           |
        |         .-.     |   B-colour      |   .-.           |
        |         |X----------preserved-------->| |           |
        |         `-'     |                 |   `-'           |
        `-----------------'                 `-----------------'


        .-----------------.                 .-----------------.
        |                 |                 |                 |
        |     R           |                 |                 |
        |     .-.         |                 |                 |
        |     | |         |                 |                 |
  B     |     `-'         |                 |                 |
        |                 |                 |                 |
        |                 |                 |                 |
        |                 |                 |                 |        
        `-----------------'                 `-----------------'

Here are two collections, A and B.  Each has an old and a new space: a
set of objects.  The old space is the set of objects under
consideration by the collection.  These objects are either white (not
yet proven live) or forwarded (moved out of the set).

Collection B has a set of grey objects which it has yet to scan and a
set of black objects which it has already scanned.  When collection A
moves object Q from old space to new space (Q') it must preserve the
colour of that object with respect to other collections (B).  If Q
goes from being B-grey to B-black without being scanned by B then B
may erroneously assume that object R, referenced only by Q, is dead.


ISSUES

Locking is required if collections run in different threads.

Collectors must be able to scan pools which are also being collected.
In particular this implies that old-space must be scannable.

A collector must preserve the consistency of the states of other
collections on every transition.

Things get complicated if old-spaces overlap.


JUSTIFICATION

Collections don't recycle storage until the final stage.  A large
collection won't pay off for some time.  If there is sudden short term
demand for storage it may be necessary to do a quick short-term
collection of some subgraph in order to allow the mutator to continue.

Separate management policies may want to divide time in different
ways.  Without concurrent collection it would be necessary for them to
cooperate in sharing out the global resource of collection cycles.
Concurrency allows them to function independently.

Concurrent collection may allow better use of multiprocessor
architectures.


ALTERNATIVES

If the condemned subgraphs are kept small by the policies then
everyone will get a share of the CPU anyway.  However, every
collection must scan the roots.

