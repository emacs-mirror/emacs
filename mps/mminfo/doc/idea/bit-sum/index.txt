                            BITWISE SUMMING
                              idea.bit-sum
                            incomplete idea
                             drj 1996-07-16

See mail.dsm.1996-06-28.14-50 for the original mail

void add(int *s,int a){int c;while(a){c=*s&a;*s++^=a;a=c;}}
int nb(int *s,int b)
{int i,n=0;b=1<<b;for(i=0;i<32;i++)if(b&*s++)n+=1<<i;return n;}

drj: the basic idea is to store 32 ints "rotated" in memory, so that within a 
rint (rotated int), the successive bit is not (as normal) the successive bit in 
the same word, it is the same bit in the successive word (the 0th word contains 
the 0th bit for all 32 rints, the 1st word contains the 1st bit for all 32 
rints, and so on).

The add function adds 1 to a subset of the 32 rints.

The nb function extracts the b-th rint into a regular C int.

.nb.alternate: an alternate way of implementing nb (particularly for processors 
without a fast barrel shift), is to shift n right by 1-bit per iteration and 
shifting in a 1 or a 0, as appropriate, on the left.  Would require using 
unsigned ints rather than signed.

