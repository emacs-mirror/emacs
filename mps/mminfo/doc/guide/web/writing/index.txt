                 GUIDE TO WRITING FOR THE MM REFERENCE
                           guide.web.writing
                             incomplete doc
                            pekka 1998-12-03

INTRODUCTION

.purpose: This document describes how to write MM Reference web pages using the 
MM Reference database.

.readership: This document is intended for any MM developer.  Superficial 
familiarity with HTML is necessary to write formatted text.


Document history

.hist.0: Gavin wrote the first description.  Pekka split off the writing 
instructions into this document.

.hist.1: Pekka wrote down general principles.  pekka 1999-02-08

.hist.2: New style and new handling of diagrams.  pekka 1999-10-19  Language 
entries.  pekka 1999-11-02


OVERVIEW

.over: The web pages are maintained in the MM Reference Notes database, which 
offers searching and some checking features.  The actual web pages are 
generated by the web editor from the database using a collection of scripts 
(see ).


General Principles

.audience: [Once upon a time, it was maintained that the Reference should be 
readable by an intelligent 12-year-old -- this was never attained.  pekka 
1999-02-08] The text should be understandable by people with basic knowledge of 
programming and a willingness to look up computing terminology in some other 
glossary.  We do not want to define computing terms that are not MM-related, 
and we do not want to dumb down the explanations to avoid the correct technical 
term.

.style: We follow the Harlequin Standards & Style Guide for the WWW.  However, 
book.sw79 plus any decent dictionary will resolve most questions of textual 
style.  For larger issues of WWW style, see paper.engelfriet97.

.rivals: We can include links to book publishers and the like on our web 
pages.  We should not include links to competitors (with Geodesic being the 
most obvious case) -- that means commercial entities selling memory management 
products or services, PostScript RIPs, Lisp or other products or services in 
direct competition with current Hqn products.  [Policy established following 
mail.daveb.1998-12-15.17-31.]


FORMATTING EXTENSIONS

.extensions.paren: These short-hand notations work in all HTML text fields (not 
names, links, etc.), except the HTML fragments:
    {...} -- Enclosed word or phrase is linked to the relevant glossary entry 
or language entry.  E.g. "{Dylan} is such a language".  See 
proc.web.glossary.markup.gloss.
    [...] -- Enclosed word is treated as a bibliographic reference, and 
converted to a link to the bibliography entry.  See 
proc.web.glossary.markup.bib.
    |...| --- links; see proc.web.glossary.markup.link.

.extensions.tag: These SML-like tags can be used in almost any text field:
    EMAIL -- For explicitly embedding e-mail addresses in text, automatically 
linking.
    URL -- For explicitly embedding URLs in text.  <URL>http:...</URL> => <A 
HREF="http:...">&lt;URL:http:...&gt;</A>.  Deprecated: use a link instead.
    DIAGRAM -- Specifies a GIF (SRC=...) and a caption.  Is converted to an 
HTML IMG, see proc.web.glossary.markup.diagram.
    SIZE -- Automatically inserts the size of the file given as the SRC 
attribute.  Useful to warn people about how big the full glossary is.  
Directory default pages should be specified as the directory name only: <SIZE 
SRC="glossary/">.

.extensions.entity: In addition to the Latin-1 entities, these entities can be 
used anywhere:
   &trade; -- the trademark symbol (must be used instead of the character)


BIBLIOGRAPHY

.bib: The bibliography depends on the following document types: Bibliography 
entry; Author; Publisher.


Bibliography Entries

.bib.entry: The bibliography entry is similar to that of the MM Information 
database (in fact, copying and pasting bibliography documents from MM 
Information to MM Reference is recommended subject to later fixup), but has the 
following differences:
  - Although the tagging may appear similar, only the second part of the tag is 
used for references;
  - The author is a keyword field (see .bib.author);
  - The publisher is a keyword field (see .bib.publisher);
  - The publication date is a text field, and must be specified in ISO form, 
complete with four-digit year, but need not have any particular precision 
(e.g., 1998, 1998-03, and 1998-03-30 are all acceptable) (Notes dates don't 
give this flexibility); 
  - The URL must be precisely a list of URLs (i.e., no comments);
  - The document field is not currently used (but we may in future decide to 
make attachments available);
  - Keywords is not used;
  - Languages is a list of keywords indicating the computer languages that the 
publication is related to (several generic language classes are provided);
  - "GC techniques" is a list of keywords indicating the particular GC 
techniques relevant to the publication;
  - "Misc keywords" is a list of keywords relevant to the publication that are 
neither computer languages nor GC techniques;
  - The abstract should be plain text with blank-line paragraph breaks;
  - The reviews section is not used.

.bib.entry.compat: Note that all fields in the MM Information bibliography 
entry have been retained for compatibility reasons, even if they are unused.

.bib.entry.keywords: The are three sets of classification keywords in use (GC 
Techniques, Languages, and Misc).  These may be added to as appropriate, but 
don't be over-keen to do so.

.bib.entry.buggy: Unfortunately it is better to create new authors, publishers, 
and other keywords _before_ starting to create or modify and bibliography entry 
as Notes is poor at picking up new keyword values.


Authors

.bib.author: The author entry supplies the values for the author keyword field 
in the bibliography entry.  It also, optionally, supplies other details on the 
author.  An author may be a person or an organisation as appropriate.  It has 
the following fields:
  Key -- The key used as the keyword value and as an anchor;
  Author -- The author's preferred name;
  Home page -- A URL for the author's home page (you should probably seek 
permission);
  E-mail -- The author's e-mail address (you should almost certainly seek 
permission);
  Notes -- Internal notes never seen on the web pages.  Use this to document 
permission sought.


Publishers

.bib.publisher: The publisher entry supplies the values for the publisher 
keyword.  It has the following fields:
  Publisher -- Both the keyword value and the preferred name;
  Home page -- Optionally, a URL for the publisher;
  Notes -- Internal notes not for publication.


GLOSSARY

.gloss: Glossary entries are documented in proc.web.glossary(7).


FAQ

.faq: Each FAQ is stored as a separate document.  The FAQ form has the 
following fields:
  Tag -- This should start "faq." and is used for anchors.
  Collating Key -- This is an arbitrary (floating point) number that is used to 
order questions.  It is usually integer, but arbitrary insertion is permitted.  
If this is not specified, the FAQ is not extracted.
  Question -- The question.
  Answer -- The answer to the question as for glossary long descriptions.
  Glossary terms -- A semi-colon delimited list of relevant glossary terms 
(e.g. "conservative garbage collection", "free(2)").
  Bibliographic references -- A semi-colon delimited list of relevant 
bibliography entries (e.g.  "zorn92").
  External links -- A multi-value keyword list of external links (see 
proc.web.glossary(7).links).
  References -- Tags and doclinks for any substantiation for this being a 
frequently asked question; not published.
  Notes -- Internal notes; not published
  Contacts -- People to mail when document is sent to contacts (no external 
people!)


LANGUAGES

.lang: Each language entry  as a separate document.  The Language form has the 
following fields:
  Tag -- This should start "lang." and is used for anchors
  Name -- The name of the language
  Description -- The description of the language and its MM features.
  Glossary terms -- A semi-colon delimited list of relevant glossary terms 
(e.g. "conservative garbage collection", "free(2)").
  Bibliographic references -- A semi-colon delimited list of relevant 
bibliography entries (e.g., "zorn92").
  External links -- A multi-value keyword list of external links (see 
proc.web.glossary(7).links).
  References -- Tags and doclinks for any substantiation for this being a 
frequently asked question; not published
  Notes -- Internal notes; not published
  Contacts -- People to mail when document is sent to contacts (no external 
people!)

.lang.scope: The criteria for inclusion is that the language has to have 
historical or popular interest.  If it advanced the state of the art, we want 
to mention the idea it introduced.  If it is currently popular (then it 
probably retrogressed the state of the art...), we want to discuss its 
facilities or lack thereof.  The articles are not meant to describe the 
language, just characterize its MM features.


OTHER HTML PAGES

.html: The MM Reference database contains various "HTML fragments".  Some of 
these are used as entire pages (e.g. the contents page, and the articles); 
others are fragments included in others automatically by the tools (e.g. the 
introductory text for the glossary pages).  They have the following fields:
  Tag -- This is used by the tool to extract the fragment explicitly.
  Filename -- For entire pages this is the filename stem to write it into.  
Leave this blank to suppress the extraction of a page.
  Usage -- This is an indication of where a page will be used, either in a 
single page, or multiple.  It is for information only.
  Text -- This is the text to be used.  It is almost in HTML, but certain 
additional tags are supported:
    DESC -- Short description of page, converted to META tag, used by search 
engines.  E.g. "<DESC>Memory Management Reference</DESC>".
    KEYS -- Keywords describing content of page, converted to META tag, used by 
search engines.  E.g. "<KEYS>GC, memory<//KEYS>"
    INCLUDE -- For including other HTML fragments.
    H1 -- list of keywords.  Inserted into both TITLE (with colons) and H1 
(centered, with line breaks).
    WHEN -- conditional inclusion.  Syntax: <WHEN MODE="mode">text</WHEN>.  
textis arbitrary HTML; it will be included in the output when the production 
mode (guide.web.tools.html) matches mode. The legal values are http (included 
in -h and -f productions) and cd (included in -c productions).


IMAGES

.images: Images are stored in image.* in MM Reference and exported manually.

