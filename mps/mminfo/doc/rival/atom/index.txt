            ATOM PERFORMANCE ANALYSIS TOOLKIT FOR DEC ALPHA
                               rival.atom
                               draft doc
                           richard 1995-08-02

To: mm-discussion
Subject: ATOM tool for Alphas includes memory analysis
Date: Thu, 09 Jun 1994 09:34:42 +0100
From: Nick Haines <nickh>

Just got this message about the ATOM performance analysis toolkit for
Alphas. It apparently includes a memory checker.

------- Forwarded Message [edited for relevance]
ATOM does require a symbol table, although the number of things that
are absolutely required has been decreasing.  Amitabh
(amitabh@pa.dec.com) if the final source for what is required
(procedure descriptors, etc).

Obviously, I think ATOM is a great tool, but I wonder if you might be
better off using a PC-sampling based approach.  PC sampling requires
passing a different switch to the loader, which switches to a
different crt0.s to invoke PC sampling.  The kernel creates a .mon
file with the text addresses taken at timer interrupts.  Given these
and your knowledge of where the compiler put things (procedure starts
and ends) should give you a gross idea of where you are spending your
time.  Thats probably enough to get you started.

Until you have a symbol table, ATOM and the standard tools are not
likely to be of much help.

Alan


                      ATOM INFORMATION

The ATOM tool was written at Digital's Western Research Laboratory.
It allows application developers to use code instrumentation to
analyze the behavior of running programs.  Amitabh and I started
distributing it to Universities under a restrictive license agreement
starting last November, but we recently eliminated that requirement.
The software will be distributed by OSG on the base OSF300 release,
currently in external field test.

ATOM comes with a standard set of sample tools that include

   iprof -     instruction profiling tool
   liprof -    instruction profiling tool at basic block level
   3rd  -      memory checker and leak finder (a-la-Purify)
   pipe -      pipeline stall tool
   lpipe -     pipeline stall at basic block level
   syscall -   system call summary tool
   memsys -    memory system bandwidth tool
   lmemsys -   low level memory system bandwidth tool
   io -        input/output summary tool
   io2 -       input/output summary by file name
   unalign -   unaligned access tool
   gprof -     gprof profiling tool
   pixie -     superset of the pixie
   heapcheck - leak detection tool

Most university users build custom tools to study things like branch
prediction, caches, garbage collection, input/output, etc.  The power
of ATOM is the flexibility of the interface.  Users can build very
interesting tools by writing only a few pages of code.  In addition to
ease of use, ATOM also provides very high performance, since the
interface between the program execution and the analysis of the
execution is done through procedure calls rather than costly
instruction traces.

Atom currently runs only on Alpha machines under OSF versions 2.0 and
above, although an older version of Atom is available that runs under
1.3.  If you are interesting in instructions to access and install the
software, please send mail to eustace@pa.dec.com.

Alan & Amitabh


            ATOM 090 RELEASE NOTES

We have finished the release of ATOM that is destined for OSFBASE300
external field test.  This includes a few bug fixes.  Thanks to
everyone that participated in the testing.

Alan & Amitabh.


The ATOM installation directory is in the gatekeeper:/private/eustace
directory.  It contains

 - ATM090.tar files of current ATOM releases
 - user.ps, the ATOM user manual
 - ref.ps, the ATOM reference manual
 - tr94-2.ps, an ATOM technical report
 - 3rd.ps, the Third Degree user manual
 - atomtools.man, descriptions and sample outputs from many of the
   standard tools.  A good starting place for writing custom tools.

 ---------------------------------------------------------------------
                    ATOM BASE SYSTEM
 ---------------------------------------------------------------------

** ATOM 090 will only work on OSF2.0 (Sterling) release!!  Do
** not install it if you are not running OSFBASE200 or above.
** To check your version, you can do a

> /usr/sbin/setld -i | grep OSFBASE
OSFBASE200      installed       Base System (- Required -)

The new software will NOT run on OSFBASE130!

> ftp gatekeeper.pa.dec.com
    Lots of messages...

Name (gatekeeper.pa.dec.com:eustace): anonymous
Passwd:                               # type your email address
> cd /private/eustace
ftp> binary
ftp> get ATM090.tar
ftp> ^D
> tar xvf ATM090.tar
.... lots of files
> cd ATM090
> su
Passwd:         # installation must be done as super user.
# setld -i | grep ATM
ATMBASE080      installed       ATOM Program Analysis Tools

                #  if there is another version of atom installed, you
                #  must delete it.

# setld -d ATMBASE080

                #  Do the install

# setld -l . ATMBASE090

                #  Run confidence suite

# setld -v ATMBASE090

                #  A summary file concatenates the output of
                #  all the tools that produce ascii results for a simple
                #  program.

# ^D

                #  If the man command fails, it is
                #  probably because /usr/man is remote file system.  You'll
                #  need to install ATOM on that machine to have the
                #  man command work correctly.

> man atom
> man atomtools

                #  To print out the reference and user manuals

> cd /usr/lib/atom/doc
> lpr user.ps ref.ps 3rd.ps

A good place to start is by doing a "man atomtools" and running a few
of the sample tools on some application.  All these tools and the
examples in the user manual are provided in the /usr/lib/atom/tools
directory.  Copy one of these tools and and use it as a starting point
for creating your own.

Good luck.


- ------- End of Forwarded Message


------- End of Forwarded Message

