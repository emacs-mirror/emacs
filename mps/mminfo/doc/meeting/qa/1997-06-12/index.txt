                  NOTES FROM MM/QA MEETING, 1997-06-12
                         meeting.qa.1997-06-12
                               draft doc
                           richard 1997-06-12

INTRODUCTION

.intro: Richard Brooksby <richard> met Richard Tucker <rit> to discuss how 
timing requirements might usefully be specified and measured.


SPECIFYING PAUSES

.no-use: We agreed that the way in which the Dylan timing requirements 
(req.dylan(5).attr.time.*) were specified was unsatisfactory and generally not 
useful.

.prop: What we really want to know is what proportion of CPU time it is 
permissable to use in any time period.  We can tabulate and plot this 
information.

.prop.example: Here's an example:

  period/s  proportion
     0.1    100%
     0.3     90%
     1       60%
     3       50%
    10       40%
    30       40%

.fig.prop: Example plot of proportion of CPU time against period

 - Proportion against Period 

.prop.long: The proportion of CPU time used in large periods represents the 
total acceptable overhead.

.prop.medium: In shorter periods, it governs the responsiveness of the whole 
application.

.prop.short: In short periods, the proportion is 100%, indicating that the MM 
cannot share time with the client in such short slices, and so we must be 
prepared to spend 100% of the period in the MM.

.prop.dylan: We believe this will be a useful way of specifying things for the 
Dylan Memory Manager, and might be a useful general model.


MEASUREMENT

.measure: A chart such as .fig.prop is faily easy to get if you have a profiler 
that can tell you what proportion of time is being spent in particular areas of 
code.  A statistical sampling profiler can do this.


ACTIONS

.act.prof: Richard Tucker will investigate how we can obtain measurements like 
this one from Dylan.


REPORT ON .act.prof

.act.prof.report: At the moment the profiler can start and stop the profiler at 
any point during the run of a program.  You can't arrange for it to run for a 
specific length of time.  Every time you stop it you can collect the 
statistics, and start it again.  This is enough for us to be able to get the 
points on the graph above for periods over about 1s, assuming that we can 
estimate when to click "stop" after a second each time, and make allowances for 
the overhead of running the profiler.  The profiler samples, by default, every 
0.1s.  We can wind that down to 0.015s, but no further under Windows NT because 
that's the time slice time.  Tony Mann suggested two possible changes, both 
requiring some work from Dylan:  1. They could make the profiler profile for a 
specified interval, then snapshot, and repeat.  2. We specify breakpoints that 
indicate that we're entering and leaving particular regions.  The profiler can 
generate some kind of report about when we went in and out of a region.

ATTACHMENT
   "Proportion against Period"

