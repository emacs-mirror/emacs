          SUMMARY OF FIRST EP REQUIREMENTS MEETING, 1995-07-18
                       meeting.epcore.1995-07-18
                               draft doc
                           richard 1995-10-26

Message Id: <v02110101ac392e8710c9@[192.88.238.247]>
Date: Mon, 24 Jul 1995 11:36:40 GMT
To: yoryos, andy, luke
Cc: mm
From: richard@harlequin.co.uk (Richard Brooksby)
Subject: First draft of EP requirements on MM

As agreed, let's circulate this between Yoryos, Andy, Luke, and the MM
group until we want to give it a wider audience.

The document is a tagged outline.  An item can be referred to as, for
example, REQ.EP.FUN.CONTROL.KNOB.  The naming isn't necessarily very
systematic, so don't worry too much about the structure.  I welcome
structural suggestions if you have them.

The point of this format is to get a clear and reasonably unambiguous set
of requirements.  The tags give a way of referring to requirements, which
can be extremely useful in documentation and communication.

I have included headings for requirements which are not present, e.g.
REQ.EP.ATTR.QUALITY.USE.NICE: "How nice is it to use?".  These headings may
stimulate your ideas about what needs to be specified.

The functional requirements, REQ.EP.FUN, will expand as we discover more
about the existing system.  Logically, they should go down to the level of
individual operations, but we almost certainly won't go that far.  If you
imagine that they might, does the top-level functionality specified here
have the right structure?

Areas which I consider vague are:

REQ.EP.FUN.SOFT.ENV             Operating environment
 - Where do we get our base memory?  From the OS?
 - Do you want OS dependency or are we on top of a layer in SW?
 - What about embedded systems?
 - What about HqRTS type stuff?
 - You mentioned tickles.  I'm familiar with the concept.  Can you supply
   more detail?

REQ.EP.ATTR.QUALITY.WORK        Working ability
 - You also said that the PS GC would kick in only in emergency situations,
and could then take ten seconds.  Is that really what you want?  What is
the maximum value of "ten seconds" and for what volume of memory?  Is that
too crude a measure?  What is a good measure?

If you have things you want or need but don't want to formulate them in
this way, just mail them round and I'll try to sort them out.

My summary (and this is worth working on) is: "Simple, high quality,
replacement MM, adding PostScript garbage collection, with at worst no
impact on ScriptWorks throughput or reliability."

---

GOAL                    Goals of the Memory Management Project
  EP                    Goals of MM/EP relationship
    PROTECT             Protect ScriptWorks from future failure due to the
                        increasing reliance of PostScript jobs on garbage
                        collection.  GC is a requirement of PS level 2.
    DOWNSIZE            Enable "moving EP market down".  Reduce size of machine
                        needed to run ScriptWorks.  (Yoryos mentioned print-
                        servers, embedded controllers.)
    COMPETE             Remove the risk of bad publicity due to lack of GC
    MAINTAIN            Reduce the mainentance burden on EP
    PERFORM             Increase the performance of ScriptWorks
    RELATE              Improve relationship and promote communication between
                        SP and EP
    IMPROVE             Improve the general MM system for other clients
REQ                     Requirements on the Memory Management Project
  EP                    Requirements of EP on Memory Management
    FUN                 Functional requirements of EP
      SOFT              Provide memory manager software
        MANAGE          Manage various classes of stuff
          DL            Manage display list memory
            ALLOC       Fast allocation of display list memory
            MASSFREE    Free display list memory en masse.
          PS            Manage PostScript objects
            ALLOC       Allocate PostScript objects
            RECYCLE     Automatically recycle PostScript memory
          FONTCACHE?    Manage font caches
          GENERAL       Manage general temporary memory
            ALLOC       Allocate general temporary memory
            FREE        Manual recycling of general temporary memory
        COMPACT         Defragmentation of whole memory at some granularity
        CONTROL         Control of memory manager attributes
          KNOB          Control interface
            LOW         Run-time feedback on low-memory conditions
            CRITICAL    Support critical allocation sections
          DIAL          Measurement feedback interface
        DEBUG           Debugging of memory and memory manager usage
          REPORT        Reporting illegal usage
          DIAGNOSIS     Diagnosis of problem from symptoms
          ANALYSIS      Suggestion of cure from diagnosis
        ENV             Environments
          C             Standard C library linkage for platform
          TICKLE        Pseudo-coroutine callbacks for concurrency
          ANY32         Operate on any 32-bit architecture
          MULTIPROC     Operate on multiprocessor platforms
          HQRTS?        On top of Harlequin run-time system?
      SUPPORT           Support of software
        DOC             Usage documentation
        USE             Practical help with using the system
        DEBUGGING       Debugging use of the system
        TUNING          Performance analysis and tuning
        AVAILABLE       Keeping the system available
    ATTR                Attributes
      QUALITY           Qualities of the system
        WORK            Ability of the MM system to do work
          THROUGHPUT    ScriptWorks throughput compared to "current" levels
                        scale   Pages ripped against time?
                        test    Comparison of RIP with QA test suite?
                        worst    95%
                        plan      0%
                        best    140%
                        source  Andy Cave, 1995-07-18
          REPONSE       Reponsiveness
          STORAGE       Storage capacity
            MANAGE      Amount of memory to be managed
                        scale   Number of bytes of memory
                        worst   100Mb
                        plan      1Gb?
                        best      4Gb
                        source  Andy Cave, 1995-07-18
        AVAILABLE       Availability of the system
          RELIABLE      Reliablity
            ANNOY       End-user annoyance
                        scale   Number of annoyed end-users (~15000 end users)
                        test    Measuring support calls?
                        worst   5%?
                        plan    0%
                        best    0%
                        source  Andy Cave, 1995-07-18
            MTBF        Mean time between failure
                        scale   ScriptWorks continuous execution time
                        test    ?
                        worst   12 hours
                        plan    ?
                        best    ?
                        source  Andy Cave, 1995-07-18
          MAINTAIN      Maintenance requirements
            RECOVERY    Recovery time
              SEVERITY  Recovery time by severity
                1       ?
                2       ?
                3       ?
            RECOG       Problem recognition
            ADMIN       Administrative delay
            TOOL        Tool gathering
            ANALYSIS    Problem analysis
            SOLUTION    Soluton formation
            INSPECTION  Inspection of solution
            DEPLOY      Deployment of correction
            TEST        Testing
            EVALUATION  Test evaluation
          INTEGRITY     Integrity of system against attack
            THREAT      Integrity against various attacks
            SECURITY    Comparison with standard security ratings
        ADAPT           Adapability
          IMPROVE       Improvability
          EXTEND        Extensibility
          PORT          Portability impact on ScriptWorks
            ARCH        Portability to feasible new architecture
                        scale   Total effort required to port
                        test    ?
                        worst   2 man weeks
                        plan    1 man week
                        best    1 man day
                        source  Andy Cave and Luke Tumner, 1995-07-18
            OS          Portability to new operating system
                        test    ?
                        worst   3 man months
                        plan    1 man month
                        best    ?
                        source  Luke Tumner and Andy Cave, 1995-07-18
        USE             Usability of the Memory Manager
          INTEGRATE     Integration effort required
                        scale   Total effort required to integrate into SW
                        worst   ?
                        plan    ?
                        best    1 man week
                        source  Yoryos Yeracaris, 1995-07-18
          ENTRY         Entry requirement: who can use it?
          LEARNING      Time to learn to use it effectively
          HANDLING      How easy is it to use?
          NICE          How likable is it?
        OTHER           Other qualities
      RESOURCE
        TIME
          DELIVERY      Delivery constraints
            EVAL        Delivery of simple system for initial evaluation
                        scale   Time
                        test    Sign-off by EP divisional manager
                        worst   "mid 1996"
                        plan    "early 1996"
                        best    December 1995?
                        source  Yoryos Yeracaris, 1995-07-18
            FULL        Delivery time of full memory manager
                        scale   Time
                        test    Sign-off by EP divisional manager
                        worst   "end of 1996"
                        plan    "middle of 1996"
                        best    March 1996?
                        source  Yoryos Yeracaris, 1995-07-18
        PEOPLE
          MM            MM Group developer effort
          EP            EP Division developer effort
        MONEY
        MACHINES
        TOOLS
        GOODWILL
        REPUTATION
        IMAGE

