             NOTES FROM THE MM/EP-CORE MEETING, 1998-04-08
                       meeting.epcore.1998-04-08
                             incomplete doc
                            tony 1998-04-16

INTRODUCTION

.intro: Pekka Pirinen <Pekka>, Gavin Matthews <GavinM>, Tucker Withington 
<PTW>, Tony Mann <Tony> and Richard Kistruck <RichardK> met with Dave Berry 
<DTB>, Eric Penfold <EricP> and Andy Cave <Andy> to discuss problems with 
fragmentation during trapping which has got worse with the latest release of 
ScriptWorks.

DISCUSSION

.mm.sol.long: Gavin suggested replacing the MV pool class with the forthcoming 
MV2 pool class as a long term solution. MM expect to complete this by end of 
June. DTB replied that he needed something sooner: SW 5.0 beta is at the end of 
April, final release is end of June, and in any case there's a need to patch 
existing versions. For MV2 to be used in SW 5.0, it must be ready by mid May.

.mm.sol.short: Gavin suggested a short term solution of using a separate EPDL 
pool instead of MV as the temp pool. MM would provide a way to avoid 
interleaving segments between the resultant 2 EPDL pools which can also lead to 
fragmentation. DTB commented that he had already tried using EPDL in place of 
MV for trapping (using SW 4.6 which has a separate trapping pool), and this did 
avoid the poor fragmentation behaviour of the current release. However he has 
concerns about the performance and extra checking of this solution in the 
long-term. Yehouda's change to separate the allocation code for trapping might 
be a useful means of limiting the EPDL allocation - but this would need to be 
back-ported. PTW commented that he wouldn't expect any detriment to using EPDL 
in place of MV in any case.

.patterns: DTB offered data about allocation patterns from sample trapping runs 
for MM use.

.epdl.test: DTB explained that when he verified that replacing MV with EPDL 
appeared to solve the fragmentation problem he had used a relatively simple 
test. He would like MM to provide the fix to avoid inter-pool segment 
interleaving in any case.

.concern.mv: DTB pointed out that the temp pool (aka MV) is used a lot, and 
that there might be problems later if it's replaced with EPDL. Andy said he had 
good expectations for future use of MV2 as the temp pool for the same reason 
that it is used so much.

.measure: Eric raised a concern about having no means of measuring 
fragmentation. The "tags" scheme in the SW glue layer has rudimentary support, 
but does not work with promises (yet) and so cannot be used with DL pools 
without additional hackery. There has been no historical evidence about 
fragmentation behaviour for EPDL. However, Eric believed that he could find a 
way to measure this without a need for more MM support.

.avoidance: There was some discussion about how the fragmentation problems 
might have been avoided in the first place. Pekka explained that MM had been 
supplied no testable requirement that would have shown up the problem. Gavin 
asked if there should be a more detailed discussion of EPcore requirements. DTB 
offered MM allocation pattern logs.

.boundaries: Eric asked for a means to identify the segment boundaries to help 
him look at fragmentation. Gavin suggested MPS's telemetry - but it's not 
usable without some MM work. PTW suggested using the "describe" operation of 
the pool. MM agreed to discuss options and provide a solution.


OTHER ISSUES

.meeting.tools: It was agreed that there should be another meeting to discuss 
providing monitoring tools. This should involve Sheep.

.priority.gc: Gavin asked about the priority of garbage collection. Eric said 
EPcore have lived without it for a long time; it would be "nice" but is not 
high priority. GC for PSVM is only important in the context of Display PS. 

.priority.virt: Provision of a virtual arena is more important than GC as 
customers are already requesting this. EPcore expect this for SW5.0. Eric has 
been working on virtual arenas for NT & Unix. The key barrier though is Mac & 
SMP.

.mac: The possibility of a virtual arena for the Mac was discussed, along with 
an analysis of the alternatives. Gavin explained that a Mac virtual arena was 
not impossible - but would have a high maintenance cost as it would have to be 
updated for each future Mac revision.

.mac.image.requirements: Andy explained that images used to be a main provoker 
of fragmentation problems - but these are now split up into smaller chunks. 
Contiguity of memory is no longer so important. It's important that this memory 
can be completely freed. If chunks were added dynamically to a client arena, 
there would need to be a mechanism to ensure that no other pool had reused the 
memory.

.mac.image.strat: Andy suggested a phased EPcore strategy for using memory. 
Notification of phase changes is vital: 
   phaseA: stick within a small size (80Mb)
   phaseB: if phaseA fails even after flushing caches, stick within an 
emergency size (130Mb)
   phaseC: if phaseB fails, paint to disk
   phaseD: if all else fails, keep trying to get more memory

.mac.mult-arenas: Pekka suggested using a new arena for each phase of 
.mac.image.strat. Eric expressed concerns that this would lead to an awkward 
divergence of platform specific code for the Mac. Gavin said that MM would work 
on a design for minimising this: client arenas can probably do everything, but 
a VM arena would make GC more efficient. Andy pointed out that GC performance 
is not critical.

.future.testing: Gavin said he wanted MM to be able to perform  better and 
easier testing in the future. E.g. for fragmentation. DTB said there was 
already a trapping test suite &  he could start to collect known jobs. SWQA 
have been looking at how trapping should perform on difficult jobs.

.future.collab: DTB requested more frequent communication between the 2 groups, 
including casual chatting. He also requested early releases from MM - even if 
they are experimental - to spot problems early. Other suggestions for improved 
communication included a formal monthly meeting, discussion via the mm-epcore 
mailing list & regular progress reports.


ACTIONS

.action.mm.short: MM will supply a new release for trapping with a modified 
EPDL by approx 1998-04-22.

.action.mm.med: MM will develop MV2. It's hoped to release this by the end of 
May - but MM can't promise this.

.action.boundaries: MM will provide a means to identify segment boundaries.

.action.tools: Sheep will arrange a meeting to discuss memory monitoring tools.

.action.divergence: MM will design a means of minimizing divergence of platform 
specific code for the Mac.

.action.testing: EP-Core will provide MM with trapping allocation logs and a 
means of testing trapping.

.action.ep: Back port (Yehouda's) trapping alloc support into SW 4.5r2. Modify 
to use new MM EPDL support. There may possibly be an SW 4.5r3 in the future, in 
which case EPDL will be replaced with MV2.

