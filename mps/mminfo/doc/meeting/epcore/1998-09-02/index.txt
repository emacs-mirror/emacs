                  MEETING OF MM/EP-CORE ON 1998-09-02
                       meeting.epcore.1998-09-02
                             incomplete doc
                           gavinm 1998-09-02

INTRODUCTION

.intro: Gavin Matthews <GavinM> and Richard Kistruck <RichardK> met with Dave 
T. Berry <DTB>, Andy Cave <Andy>, and Simon Green <SimonG> to discuss the 
content of the forthcoming release of version.epcore.anchovy.


SCHEDULE

.sched: Gavin confirmed that version.epcore.anchovy would be released to MM-QA 
on 1998-09-11 Friday and also as a pre-release to EP-Core on the same day, and 
that it would be release to EP-Core on 1998-09-18 Friday.


ISSUES

.issue.check: MM confirmed that version.epcore.anchovy would include binaries 
that had no checking overhead.

.issue.epdr-performance: There was a lot of discussion of the performance of 
EPDL and EPDR, particularly EPDRFree.  MM explained that they would be 
including various improvements to EPDL/EPDR performance in 
version.epcore.anchovy, but that the overall improvement was not yet known.

.issue.epdr-performance.tests: RichardK asked how typical the fcache job was, 
and whether it would be better to test improved EPDR performance against a 
selection of jobs.  EP-Core explained that fcache's memory usage should be 
typical of a sequence of jobs, and is a good representative of what happens 
when the font cache gets fragmented.

.issue.segment-placement: MM explained that they had been investigating 
improved segment placement (which had arisen during the MV2 project), and that 
they intended to supply a signficant improvement in this area in 
version.epcore.anchovy.  There was some discussion of the possible details of 
this, but the main goal is to permit pools to allocate their segments 
contiguously.

.issue.segment-placement.no-large: EP-Core explained that Scriptworks no longer 
allocates very large objects.  (This is a result of image tiling, whole 32kb 
tiles being perfectly segment-aligned in an EPDR pool of their own, with 
smaller edge sections in a second special EPDR pool).  Now, the maximum object 
size allocated by ScriptWorks is something like 200kb (for HDS screen cell 
table, though trapping might possibly make larger allocations).  This is 
important to MM because it removes one of the major drawbacks to distributing 
pools around address space.

.issue.epvm: EPVM segments are getting interleaved with EPDL segments and this 
is causing fragmentation of the arena.  Eric has previously suggested 
increasing the EPVM segment size from 8k to 64k.  RichardK explained that this 
increase would incur an overhead per save level, and that the problem would be 
better solved by improved segment placement.

.issue.epvm.levels: EP-Core explained that typically there are up to 5-8 save 
levels, and Adobe define 32 as a hard maximum, but one customer has requested 
64 save levels.  Gavin said that increasing the number of save levels would not 
be a great problem for MM.

.issue.vm-client: EP-Core reported that their tests shown VM arenas to run 10% 
slower in interpret time than client arenas.  MM report that this is mainly 
when attempting to allocate new segments, and recent evidence suggested that a 
lot of the time is spent on failed attempts.  (It is not yet clear why SW is 
making these requests; measuring space for halftone-cache might be a partial 
explanation, but does not explain a slow-down for contone jobs; more 
investigation is required).  This slow-to-fail code is involved in segment 
placement; performance and placement will be reviewed and worked on together.  
It is recognized that it is important to solve this.

.issue.overall-performance: Dave emphasised that it is very important that 
SW5.0 have at least the same performance as SW4.5.

.issue.mv2: EP-Core asked about the schedule for releasing MV2.  Gavin 
explained that the MV2 project had involved the design of various support 
components in addition to the MV2 pool itself, some of which have been 
implemented.  Improved segment placement is being brought out now, as it gives 
significant benefit in itself.  MM may be bringing more such components into 
play and will in any case concentrate on meeting EP-Core's requirements rather 
than on producing something called MV2.  Gavin also explained that MM's 
analysis suggested that MV2's placement policy might not be suitable for all 
classes of SW allocation.

.issue.heap-visualization: Eric had previously requested improved support for 
observing the layout of objects in memory.  This is lower priority for EP-Core, 
but is actually useful to MM Development as part of segment placement 
improvements.

.issue.colour-cache: The current SW code doesn't have a non-dl colour cache in 
it, but this is currently being worked on, and will affect memory usage.  The 
cache elements are pretty much in 8k blocks.  [This is what is now called the 
COC pool class.  pekka 1998-12-16]

.issue.colour-cache.dl: There is a separate colour cache for display lists that 
was previously observed to allocate many short-lived objects and a few 
long-lived objects.  MikeW's work to re-use the memory of short-lived objects 
drastically reduced allocation, and showed a significant performance 
improvement.  [These are allocated in the DL pool.  See  
mail.mikew.1998-08-10.11-41 and mail.mikew.1998-08-11.09-43.  pekka 1998-12-16]


SUMMARY

.summary: version.epcore.anchovy will contain:
  - Performance improvements to EPDR;
  - Improvements to segment placement that avoid fragmentation of the arena;
  - More support for examining the layout of the heap.

