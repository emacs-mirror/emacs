                     MM/EP-CORE MEETING 1999-03-30
                       meeting.epcore.1999-03-30
                             incomplete doc
                            pekka 1999-03-30

.intro: Pekka P. Pirinen <pekka> met with Dave T. Berry <dtb> and Eric Penfold 
<ericp> to discuss the plans for MM/EP-Core and the current release, called 
brisling.4.

.brisling: Pekka announced that brisling.4 has passed QA and is ready for 
release, except for the Linux platform.  The speed has increased less than was 
hoped, about 1% at best.

.brisling.speed: Dave asked for the reasons for the disappointing speed 
increase.  The main reasons are thought to be misinterpreting Andy's 
experiments (as discussed in meeting.epcore.1998-12-15.color) and improvements 
in color pool usage.  Andy's experiment found 1-2% speedup with caching, and 
improvements in the use of the pool mean we should expect less scope for 
speedup now.  Eric will do more experiments to verify that the cache is working 
at maximum efficiency and to try different configurations.

.sac: Pekka explained that the frequency parameters to the segregated 
allocation caches are merely to optimize the decision tree for choosing the 
class to allocate from, and their effect on the performance of the color pool 
is marginal.  .sac.future: Pekka warned that the next major release will 
include a more sophisticated cache control policy.  While the current policy 
anticipates future requests in a small way, it doesn't, for example, 
dynamically balance the usage of different size classes.

.epdl-free: Pekka thinks that the EPDL free improvement is a success.  In 
Richard's test, the maximum pause in the Kodak test job was approximately 
halved.  Other improvements by the core group will probably affect the results 
even more.  Pekka admitted that there's still a worst case, where the entire 
free list has to be searched, although typical jobs will no longer find it.  
Improvements for manual allocation are still a top priority.

.mac-x: SW on Mac OS X is being discussed, and might happen in the near 
future.  The port should be relatively unproblematic.

.priorities: The next important changes to MM/EP-Core in order of descreasing 
priority:
  1. MVFF/EPDL performance
  2. Enhancements for allocation caches
  3. segment placement (clever, with hints from client)
  4. SMP VM arenas
  5. Linux VM
  6. realloc
  7. meaningful MM asserts
  8. pool merging
  9. garbage collection

.release.mm: The next major release of MM (chub) will include at least the 
first three.  [It'll be several months before MM can release this.]  
.release.sw: The next release after SW 5.1r0 will probably be a major SW 5.x, 
not time table yet.

.shaded-fill.alignment: Dave described a recent problem with shaded fills: They 
are allocated using promises, from the display list pool, whose alignment is 4, 
but they contain doubles that need to be 8-byte-aligned on some platforms.  The 
advantages and disadvantages of using a separate pool with different alignment 
were discussed.  If padding is introduced by the promise code, some care needs 
to be exercised when freeing the object.  Pekka noted that realloc that could 
shrink a block from the beginning would solve the problem.

