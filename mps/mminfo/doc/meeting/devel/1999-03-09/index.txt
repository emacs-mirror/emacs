             NOTES FROM MM DEVELOPMENT AND PRODUCT MEETING
                        meeting.devel.1999-03-09
                             incomplete doc
                            tony 1999-03-09

Telecon: Andy Sizer <andys>, Dave Berry <daveb>, David Jones <drj>, Pekka
Pirinen <pekka>, Richard Tucker <rit>, Tony Mann <tony>


NEWS

* EP core

tony: Main news is things on EP core front. First, there's a request for a
new release for them around the end of this month, with support for making
the colour pool go fast -- i.e. the segregated allocation cache. Pekka met
with Dave and Eric last week and discussed some of the details, and also
discussed some problems with an inordinately long time to free data in an
EPDL pool. Turns out that's mostly down to a SW bug, but there is still the
possibility of making some improvements in EPDL.

pekka: Richard's been doing some analysis on that.

daveb: DP&P may want to port SW to linux. I don't know the timescale, but
linux might be the new happening thing so it's likely that at some point we
may be able to do support for linux.

rit: Didn't ptw used to use the MPS on linux?

tony: Wasn't that MkLinux?

drj: It's much the same.

* Java benchmarks

tony: Quartet have agreed to have us put the Java benchmarks on the web,
subject to checking with Lars, and showing we can get reasonable MPS
performance out of them.

* Dr Dobbs

tony: Dr Dobbs: quartet would like us to go with advantages of mostly
copying collector.

* ASG

tony: New data from ASG on predicting object lifetimes. Starting to show
something which is looking quite good. Main challenge now is to see if we
can get decision trees which are small enough to be efficient, but still
get some of the benefits of the categorisation.

* MM reference

pekka: We finally got statistics on the web site. The MM reference is the
second most popular feature after the WebMaker pages.



RELEASES

* release.epcore.brisling.4
* release.java.amaretto

tony: brisling.4 scheduled for end of this month (1999-03-25) to include
allocation cache work and possibly some EPDL speedups. At almost the same
time is the java work. We think it's manageable because brisling.4 is a
patch release, and because (except for QA) they're being worked on by
different people.

tony: Java release has had a little delay, as drj was off sick for part of
last week, and was on the critical path. Scheduled date is now 1999-04-02.

drj: So far I haven't seen any huge problems. Biggest potential difficulty
is that large chunks of the runtime could depend on the fact that the
collector's not moving. I hope it doesn't.

tony: As a last resort, we could use AMS...

pekka: That wouldn't be very fast.

tony: ... but it would at least be incremental.

drj: I don't so far think that Sun's GC is incremental. I think it might be
interruptable, though (can abandon a GC half-way through).

tony: Are there likely to be problems from the quartet's point of view with
this slippage?

daveb: No, I don't think so. I don't see any way we can speed it up, apart
from pumping drj full of anti-virals 8-).


* release.dylan.kinglet

tony: I'm also working on the sunset on segments stuff for
release.dylan.kinglet. So I guess I'm a resource that could be made
available for either of the other two releases if the going gets tough.


* release.web.diadem

pekka: We need to say something about the web release for the CD:
release.web.diadem.

rit: What's the naming system for web releases?

pekka: Spiders.

drj: Ah, the well-known diadem spider...

pekka: I'm going to draw up a list of improvements and missing definitions,
and ask people to look at it. Obviously people aren't going to have very
much time now, but if they feel the need for a change, they are welcome to
write something for the release.


PLAN

tony: Main change is addition of brisling.4. Only thing scheduled is the
segregated cache work. We already had a task for this, but it was dependent
on buffer design and scheduled to happen later. Because EP don't require
support for multi-threading, we've been able to split the task.

tony: But I haven't included the EPDL-freeing work in the plan. I'm not
entirely clear how important it is, or how anxious EP are that we do something
there.

pekka: I think we don't know at the moment, but it should become clear in a
couple of days.

tony: Ok, then let's leave things as they are for now. If they are very
keen, I'll take a look at it.

tony: I've also put in tasks for rit to write tests for the segregated
allocation cache and test it once release. I think that's now his most
urgent task.

tony: Assumption is that 1999-03-25 is going to be ok as a release date. EP
are working for a release out of EP QA at the end of April. If they do
decide they want it even earlier, then that puts us in some difficulty. We
could perhaps give them something that supports the new interfaces, and
give them an efficient implementation at a later date.

pekka: I offered them an interface release, and they said no. What they
want to test is the efficiency (and the correctness) of the code that we're
giving them. I've given them documentation about the interfaces.

daveb: Have you put in a task for the linux port?

tony: Not yet, although there are tasks in there for getting MPS to work
with Dylan. If that goes ahead, I'd anticipate almost no additional work
for EP. OTOH if EP want something first, we'd have to split it.

drj: I think we probably have almost all we need for the EP linux port
anyway. It's mostly make-file support, and I remember doing that.

daveb: It's something to bear in mind.

pekka: We ought to have a task for the VXWorks port. The schedule is likely
to be tight, and we're on the critical path.

tony: We'd need access to a machine, of course.

pekka: The LISP group has some... daveb, can you talk to them?

daveb: Yes. Do we know when this is needed?

pekka: I don't think they've completed the negotiations, and of course it
might not go through at all.

daveb: So what do we need on this?

tony: Access to a machine so we can compile code and test it.

daveb: Ok. Any particular compilers, &c?

tony: Yes, probably, but until we know the details we can't say. E.g. we'll
probably need a version of GCC, but don't know at present which version.



WORK PRACTICES

* review

tony: There's an intention that we'll hold a review tomorrow on
design.mps.splay. I'm kind of assuming that rit will attend... rit?

rit: Yes, I'd like to.

tony: What do people think?

pekka: Yes, he should attend.

pekka: I guess either me or drj should be the review leader. I'm willing to
do it, but don't have any knowledge about it.

drj: Shall I do it then? When is it?

pekka: Ok. Tomorrow afternoon.

tony: We won't be using IRC, I guess. We're all in the same room.

rit: I think IRC was quite useful.

drj: The IRC server on IRChost is fine, if we do want to use it.

tony, pekka: We don't mind.

drj: Are you coming to this review, andys?

andys: If you want! I'll be in the room, won't I!

tony: Everyone who'll be in the review is encouraged to read paper.st85
beforehand, as the design doc refers to it.

tony: I'm taking on the role of author, even though I didn't actually write
it. (Dirty job, but somebody's got to do it!)

pekka: Afterwards we have to start thinking about what to do next. A lot of
the others require more preparation before they're reviewable. Also we
always used to have this problem of edits not being done.

drj: Yup.

pekka: Someone has to encourage the editors to do their job afterwards in
some way. Sorry tony!

drj: E.g. putting them in the plan.

tony: That's a possibility, certainly. Or making it a defacto rule e.g.
that it has to be done by the start of the next review.

pekka: Doesn't sound at all unreasonable.

tony: But I'm not sure how much work it tends to be.

drj: Tends to vary, but usually a large number of insignificant edits, and
a couple of insoluble problems.

pekka: Of course the editor can decide not to solve them -- they can be
rejected or raised (as requests).

tony: Do we intend to hold a review next week as well?

rit: Yes, I think we should aim to hold one every week.

tony: Looks like I'm going to end up being the author quite a bit to begin
with.

pekka: Yes, especially as the bt work could be next. I think weekly would
be good, but the main thing is to keep to a schedule. So we could agree to
skip a week.

tony: I think it's the week after next that could be a problem -- we have
two releases.

tony: Done then.

tony: Any other business?

rit: I'm going to have a viva on my thesis, but I don't know when. It might
not be for months, or it could be quite soon. When that happens, I'll want
to take a few days holiday.

tony: Well, we'll cope with that just like other holiday.

Finish 12:10

