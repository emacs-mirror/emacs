              SUMMARY OF THIRD MM/LFCS MEETING, 1995-05-30
                        meeting.lfcs.1995-05-30
                               draft doc
                           richard 1995-07-31

INTRODUCTION

David Jones and Richard Brooksby travelled to Edinburgh to meet Rod
Burstall and John Longley in order to develop our mutual memory management
model (MMMM?).


AGENDA

1. Review collaboration goals.
2. Discuss the second version of the model paper, using concrete examples.
3. Lunch
4. Description of the MM system graph system and relation to model.


COLLABORATION GOALS

Rod went through the goals for collaboration proposed by Richard after the
first MM/LFCS meetings.  The goals were discussed, along with some of the
motivation for having goals.

Goal 4 should be clarified:

> 4. Provide suggestions for improving the Memory Manager by the application
> of formal techniques.

In fact, the idea here was to improve the processes used in engineering the
MM by the application of formal techniques.  These might take the form of
real tools applied to the software or designs, or sets of rules or
checklists to the coding process.

Goal 5 needs qualification:

> 5. Improve communication between Harlequin and LFCS.

Richard undertakes to keep Harlequin's upper management informed of the
usefulness of this communication.

A new and more benevolent goal was proposed:

12. Share the insights and benefits gained by the collaboration with the
technical community, insofar as this does not compromise Harlequin's
competetive advantage.


DISCUSSION OF PAPER

I won't go in to very much detail here.  John's next draft will incorporate
much that was discussed.  The following paragraphs cover the important
points, I think.  I invite contributions.

1. Graph types should be more uniform and the relationship between levels
should also be uniform.  Reachability is the same for all types.

2. The type of a GC could be expressed as t -> G_t -> G_t, i.e. a garbage
collector is a functor over graph types.  This might also be a powerful
implementation (or at least design) technique as it means we could apply
the same garbage collector code to words, objects, pages, segments, or
whatever provided they have a common interface (the graph type).

3. In a sense the real implementation can only operate at the word level.
These operations are reflected at higher levels.  Maybe the correctness of
the implementation could be determined from testing invariants at the
higher level.

4. If reference signatures are used to garbage collect higher level things
like "pages", then if an object overlaps two pages then the first
"references" the second in the sense that it is reachable.

5. A read-write barrier preserves the invariant that the GC traces the
graph at flip.  A read but not write barrier allows that graph to change.


LUNCH

1. French onion soup.
2. Garlic bread.
3. Breaded haddock.
4. Beer-battered haddock.
5. Steak and Guiness pie.
6. Tagliatelli
7. Ice cream.
8. Coffee.
9. Much discussion of software engineering.


DESCRIPTION OF MM SYSTEM

I described the partial order of graph types that exist within the MM
system as well as outlining their purpose.  This gives some useful insight
into the separation between the core system (backbone of graphs) and
pool-specific types.


ACTIONS

1. Arrange next meeting.  Rod proposed Monday 26th June in Cambridge.  This
will coincide with Tucker's visit to the UK and give him a chance to meet
Rod and John.  Everyone involved needs to confirm this place and time.

2. John will redraft the paper incorporating new insights and expanding on
the graph types and relationships between them, perhaps using some more
concrete examples from the MM system.

3. Richard will write up some of the practically useful ideas that came
from the meeting and mail them around for discussion.


SUMMARY

A productive and enjoyable meeting with real practical benefit.

