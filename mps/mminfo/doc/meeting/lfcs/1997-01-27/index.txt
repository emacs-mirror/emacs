               NOTES FROM THE MM/LFCS MEETING, 1997-01-27
                        meeting.lfcs.1997-01-27
                             incomplete doc
                           richard 1997-01-27

INTRODUCTION

.intro: Richard Brooksby <richard> met Healf Goguen, Paul Jackson, and Rod 
Burstall of the LFCS.


AGENDA

- Introducing new collaborators: James McKinna and Thomas Schreiber.
- Abstracts for potential papers.
- PVS work update (Paul introduces Havelund's GC verification papers).
- Healf's mail message: properties vs. partitions.
- Brian's involvement.
- General Harlequin status.
- Evaluating collaboration and planning.
- Next meeting.


MISCELLANEOUS

Rod would be willing to hack Java version of diagram with someone else.  Will 
move Tcl code into common area.

James and Thomas aren't going to be doing work, they just want to talk within 
the group.  Thomas may be interested when he's finished his PhD late this year.


BRIAN

We don't know status.  Haven't heard from him for ages.  Richard will find out 
his status and get committments for work (or no work) and report back.  Richard 
is also meeting Cliff and will find out from him.  Healf says that Cliff would 
welcome submission to software engineering journal he's involved in.  Richard 
will get specific information from Cliff about this.


HARLEQUIN STATUS

We have product manager -- Jo Blishen.  Rod suggests introducing Jo to the ML 
model to help her get into the software.  She has ML experience.  ScriptWorks 
release is imminent, and very stressful.  Dylan are bootstrapping and will put 
pressure on us in the next few months.  It takes time to discover interactions 
between Dylan programming and the GC.  The MPS is going into Dylan.  They are 
aiming to announce by the middle of this year.  ML modelling has been 
invaluable in getting the central theory right.  Now we have to concentrate on 
performance and local bugs.  It's public that we're supporting ScriptWorks and 
Dylan.

Rod would like a testimonial by 10th February.  Richard will write something 
sooner for review.

Richard is trying to abdicate management in favour of more technical work.

We're starting documentation.  We may be able to use LFCS collaborators as 
reviewers.  They'd like that.  We can get drafts to you sooner.

There's also work on a book about how to make good use of MM and GC.  Could 
LFCS be early collaborators?  It'll probably take a year.

Company might be willing to publish info about MLWorks GC, so it might be a 
suitable model for publication.


PVS

Havelund has been looking at Dijkstra collectors descended from Benari's work.  
Working with PVS to verify collectors, working with some of the main developers 
of PVS.  Algorithm is described state transition system, then proves 30 or 40 
invariants which are true and interdependent, building up verification of 
safety and liveness properties of the algorithm.  That's one of his papers -- 
the May tech. report.  Conclusion was that although PVS is advanced the amount 
of work was similar to Russenov's work in nqthm (Boyer, Moore) and also not 
much fun.  There was lots of intrinsic gritty detail in the problem which meant 
it was hard in either system.  Probably due to arbitrary interleavings of 
instructions, so there are a large number of permutations to consider.  Several 
hundred cases.  Now interested in discovering these invariants automatically.  
Main criticism is that they only deal with safety properties (always true of a 
system) e.g. never collects reachable objects.  They don't about good 
behaviour, i.e. that it does anything useful.  For example, the empty system is 
safe.  So they're trying to use "progressive" properties that result in 
something "good" happening.

Harlequin's work doesn't involve fine-grained interaction.  It's more that the 
GC locks out other threads from accessing a block of memory rather than having 
instruction interleaving.

Paul reckons it shouldn't be difficult to improve on this work.


HEALF'S MAIL

Could Harlequin write an internal paper describing the technology and then have 
it refereed by someone under an NDA in order to get funding etc.?


ABSTRACTS

Paul's Proposals

Collaboration helps in exposition, integrity, and development of technology.

1. "Formal Methods Co-operation"  A story of the interactions we've had with 
Harlequin and how it's clarified issues for Harlequin.  Include a variety of 
kinds of work.  An important thing is clarification as assistance.  Targetted 
to software engineering journal or even Formal Methods in Computing.

2. "Refinement of GC Algorithms"  A follow-on to Havelund to refute or confirm 
and develop ideas in Havelund's papers.  See 4.  Also work on liveness 
properties which show that the GC is useful as well a safe.

3. "Invariant Discovery"

4. "ML as a Modelling Language"  Quite a lot of overlap with paper 1.  
Alternative title would be "High Level Prototyping".  Not necessarily 
restricted to ML.  Definition of modelling.  Richard enthusiastic.  Defined 
modelling with case study.  Need some sort of case study with consultation.  
Needs to be a tangible algorithm which we're looking at and which we've agreed 
on.  Significant differences are that we'd do something that we already knew 
about.  Model grounded in established literature.  What are the important 
features that should go in?  Algorithm need not be GC, but we've invested quite 
a lot in that and we want to hit several targets with our paper.  Maybe not 
fine-grained concurrency because it's more relevant and because it's easier to 
find abstractions and techniques.  Could use a partial collection (i.e. not the 
whole heap) and so involving remembered sets.  Partition at start.  Richard 
suggests it's easier to reason about read.  Incrementality, rembered set, read 
barrier, ideas of approximation.  Three good things to do which aren't 
addressed by theoretical treatments so far.  Another thing missing from 
Havelund is a proper model of allocation and freeing.  Should include 
modification of free list.  Doligez and Gonthier have dealt with this in their 
paper.  Could put something together in just a few weeks.  Could have C 
impementation.  Here's C, here's a model, what is it?, what does it get you?

Paul would like to finish one of these papers within three months, and have 
others well underway.  Ambitious target, but by going with this public approach 
to the algorithm we'll have fewer obstacles to progress.  Could take longer if 
we try to do a formal proof rather than just a mathematically rigorous one.  We 
need formal proof for papers 2 and 3.  Papers 1 and 4 are best candidates for 
earlier papers.  Would fit in with Paul's ideas for this year's work.  Need to 
keep notes about how we approach stuff.


TIME RECORDING

Richard suggests keeping time records to contribute towards paper 1.


EVALUATION

Richard and Rod feel that they haven't contributed to progress as much as they 
wanted to.  Healf and Paul have been frustrated by lack of direction, but feel 
that they have come to understand the Harlequin system and way of working.  
Having a specific algorithm and papers to work towards will help a lot.  
Hopefully will stimulate some e-mail correspondence.  Richard suggests 
re-evaluating the goals at the next meeting.

Empty product.


NEXT MEETING

.next: 1997-03-17 (Monday) in Cambridge.  To be confirmed.

