              MM/ASG MEETING MORNING OF 1998-03-02 MONDAY
                         meeting.asg.1998-03-02
                             incomplete doc
                           gavinm 1998-03-02

INTRODUCTION

.intro: Gavin Matthews <GavinM>, Richard Kistruck <RichardK>, Nick Dalton 
<Sheep>, Tony Mann <Tony>, Chris Gathercole <ChrisG>, David "Pablo" Cohn 
<Cohn>, David Jons <DRJ>, and Pekka Pirinen <Pekka> met to discuss priorities 
for MM/ASG collaboration.

.class: An adaptive system considers three concepts:
  - Information -- the data available for making decisions on;
  - Decisions -- the points at which decisions have to be made;
  - Utility -- the advantages to be gained from making the right decision.


UTILITY

.util.perf: The main benefit for customers is performance of the system, both 
in:
  .util.perf.throughput: Overall throughput; and
  .util.perf.latency: Interactive latency.

.util.space: Secondarily, the customer is interested in how much space is used, 
both in terms of:
  .util.space.working: Working page set size (as it approaches the working set 
size); and
  .util.space.total: Not exhausting available memory or otherwise interfering 
with successful execution of any process by excess use of resources.


DECISION

.dec.location: When objects are created or forwarded, a decision must be made 
as to where to locate the object, to control:
  .dec.location.nailing: Where objects nailed by ambiguous references are 
located;
  .dec.location.trace: The differentiability of object sets in terms of what 
objects might refer to them, to reduce the foundation set size; and
  .dec.location.locality: The extent to which nearby memory locations are 
accessed nearby in time, to reduce paging.

.dec.condemndation: The collector must decide:
  .dec.condemnation.what: what to condemn; and
  .dec.condemnation.when: when.

.dec.grey-order: The collector must decide what order to process the grey set 
in, to affect:
  .dec.grey-order.locality: Locality of reference (see .dec.location.locality);
  .dec.grey-order.avoid-hits: How often read or write barriers are hit; and
  .dec.grey-order.flip-time: When to change the mutator colour from grey to 
black.

.dec.compiler-bahviour: It may be possible for a client program (such as the 
Dylan compiler) to change its behaviour to give improved utility.

.dec.progress-speed: The collector must decide how fast to process the grey set.

.dec.placement: A non-moving (typically manual) system must place objects to 
avoid fragmentation; that is, it should be able to satisfy the predicted future 
allocation stream.

.dec.coalescence-time: An allocator can decide when to coalesce free blocks; 
that is, to coalesce on free/reclaim or allocation or some other time.


INFORMATION

.info: We left out information on the grounds that we couldn't easily specify 
the space, and ideas would follow from the decision type.


PRIORITIES

.priorities: We debated which areas we should concentrate on in the immediate 
future.  There was a strong feeling that .dec.location and .dec.condemnation 
were key, and that there might be some gains to be had in .dec.progress-speed.

.priorities.knob: A cheap way to get improvement would be to twiddle the 
existing obvious knobs, and search the parameter space for good results.  The 
main candidiates for this are .dec.condemnation.when and .dec.progress-speed.

