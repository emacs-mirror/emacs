             NOTES FROM GENERAL DESIGN MEETING, 1997-02-26
                       meeting.general.1997-02-26
                               draft doc
                           richard 1997-02-26

INTRODUCTION

.intro: Richard Brooksby <richard>, Nick Barnes <nickb>, and David Jones <drj> 
met to discuss possible solutions to Jonathan Bacharach's heap size problem, as 
described in meeting.dylan.1997-02-26.


NOTES

.explorer: An interactive explorer program would be a useful tool.  Things we'd 
like to know in order to solve this problem are:

  .short: short(est) path from a root to an object

  .refs: all pointers into an object or a set of objects

  .stats: general statistics, by class, etc.

.fac: To facilitate an explorer, we can fairly easily provide the following 
within the MPS:

  .iter.obj: iterate over all objects (by iterating over formatted pools)

  .iter.ref: iterate over all references (by scanning)

  .iter.obj-ref: iterate over all references in an object (using the format 
scan method)

  .grep: "grep" the memory at the low level, then ask about what you found by 
asking the owning pool

  .desc.obj: describe object

  .desc.seg: describe segment (by asking owning pool to do so)

  .desc.ref: describe reference (similarly)

.pools: We can get Dylan to create a new pool for each recompilation and direct 
the compiler results there.  Then we can search for references to the old pool, 
which should mostly disappear.

.culprit: In order to find out what's keeping an object alive (path from root 
to object, see .short) we can write a separate tool which analyses the 
telemetry (event logs) generated by the GC.  This is an easier solution in the 
short term than trying to generalize the Tracer to do it, since the Tracer is 
already in flux.


ACTIONS

.act.sched: Richard will find out the priority of this work and schedule effort 
as necessary.

