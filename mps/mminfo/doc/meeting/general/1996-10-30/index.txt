               NOTES FROM THE GENERAL MEETING, 1996-10-30
                       meeting.general.1996-10-30
                               draft doc
                           richard 1996-10-30

INTRODUCTION

.intro: Richard Brooksby <richard>, David Jones <drj>, and Nick Barnes <nickb> 
met to discuss a procedure for status and progress reporting, and time 
management.


BACKGROUND

.background: This meeting came about as the result of performance reviews 
within the group which identified a need for better dissemination of status and 
progress information, and better time management for individuals.  See 
mail.richard.1996-10-29.16-23.


GOALS

.goals: The goals of the procedure will be:

.goal.conf: Increase the confidence of success of projects.

.goal.hit: Hit release targets.

.goal.morale: Increase morale of group members.

.goal.time: Make better use of time.


SOLUTION IDEAS

.sol.report: Reporting progress can increase morale by conveying a sense of 
progress, contributing to morale (.goal.morale).

.sol.track: Tracking progress helps to identify risks early.  Eliminating those 
risks will help us to hit tagets (.goal.hit) and increase confidence of success 
(.goal.success).

.sol.tm: Producing a set of objectives for the next period and a schedule helps 
individuals make better use of their time (.goal.time) as well as motivating 
them (.goal.morale).


REQUIREMENTS

.req.oh: We want to keep the overhead of producing any reports down.  It should 
take no more than one hour per week per project.

.req.useful: We also want to avoid reports for the sake of reporting.  Reports 
must convey useful information.

.req.size: Reports must be reasonably short and to the point if they are to be 
a useful source of information for other members of the group.  The total 
assembled MM report should be no more than about 100 lines of text.  We'll make 
allowances for tables.


PROCEDURE


Inputs

.in: The project manager has three main bits of information:

  - the release schedule,
  - the task list, and
  - the current status.

.in.sched: The release schedule should be part of the plan document 
(plan.<project>) and look like this:

   rel|   X   |   Y   |   Z   | Worst | Plan  | Best  | 
 -----|1996-10|1996-12|1997-02|       |       |       |
  req |-------|-------|-------|-------|-------|-------|
   A  |   6   |   8   |  10   |   9   |  10   |  14   |
   B  | (6,3) | (6,4) | (10,4)| (10,4)| (10,8)|(10,10)|
   C  |   0   |   0   |   0   |   1   |   1   |   1   |

X, Y, and Z are planned releases.  They aren't necessarily a complete future 
schedule.

Worst, Plan, and Best represent the worst acceptable satisfaction, the planned 
level, and the best that has ever been achieved under any circumstances.

.in.notation: We've decided to abandon trying to represent all requirement 
satisfactions as percentages, since it's not really possible to do so.  
Instead, each requirement should define its own scale and notation.


Outputs

.out: For each project, the procedure should produce:

  - a summary of requirement satisfaction status relative to the next release, 
with risks highlighted;
  - a summary of task status, with risks highlighted;
  - a set of objectives for the week, and some for the next week.

.out.req: The summary of requirement satisfaction should look like this:

  req |  now  |  next |
   A  |    6  |    7  |
   B  | (7,3) | (8,4) |
   C  |    1  |    1  |

The "next" column indicates the targets for the next release.

.out.req.only: Only the "interesting" requirements need be listed.  These are 
ones which have changed since the previous week, or need to be discussed for 
some reason, or similar.

.out.req.risks: Any known risks should be discussed after the table.

.out.tasks: The summary of task status should look like this:

  task | status | spent | pred  |    due
    P  |  done  |   3   |   2   | 1996-10-04
    Q  | started|   0   |   1   | 1996-10-10
    R  |  stuck |   3   |   6   | 1996-10-20

The "spent" column indicates the amount of effort spent, in days.  The "pred" 
column indicates the predicted amount of effort.  The "due" column indicates 
the date by which the task is due.

.out.tasks.only: Only the "interesting" tasks need be listed.  These are the 
ones which have changed since the previous week, or need to be discussed for 
some reason, or similar.

.out.tasks.risks: Any known risks should be discussed after the table.

.out.obj: The objectives for the following week should be listed per person, 
like this:

  richard
  - finish draft design document design.foo
  - clear "important" mailbox of tasks
  - establish plan for spong with nickb

.out.obj.form: Note that objectives should always be stated as results which 
are to be achieved, and not as things to be done.  For example "talk to nick 
about plan" is not an objective -- it is a way of achieving one.


Procedure

.proc.1: Look at release schedule, tasks, and last week's report.
.proc.2: Talk to staff invovled in project to get current status.
.proc.3: Create the status summaries.
.proc.4: Set objectives for the week, and some for next week.
.proc.5: Send report to manager.
.proc.6: Schedule time and execute.


MEETING METRICS

The meeting was 75 minutes long and involved three people.  Together with 
writing up it took about 4 man hours.

