                   MM DDOCUMENTATION KICKOFF MEETING
                    meeting.doc.1997-01-16.docissues
                             incomplete doc
                             lmb 1997-02-10

INTRODUCTION

.intro: Richard Brooksby and I met on January 16, 1997, to discuss
components of the documentation set for the MM Group's forthcoming
product and other general issues concerning the documentation.


PURPOSE OF THIS DOCUMENT

.purpose: This document records the items discussed during the meeting
and will be used to create a formal documentation plan for the
project.


ISSUES AND NOTES

.issue.questions: Some of my notes were incomplete, and I could not
understand others. I have indicated this in the document by the use of
ellipsis (...) or question marks.

.issue.related-docs: This document should be read in conjunction with
meeting.doc.1996-06-04.


COMPONENTS OF THE DOCUMENTATION SET

The documentation set will consist of the manuals described below.

.docset.user-guide: User guide

.guide.approach: The documentation should take a staged approach, with
the goal of giving the user a return on investment at various levels
-- for example, one day, two weeks, a month, and so on.

.guide.level.1: The first level should not require the user to do any
reprogramming of his own software. He should be able to read the
introduction to the manual, install the software, drop in some of
Harlequin's code, and get results. The product has to sell itself
quickly, as most programmers spend about an afternoon evaluating
products; the Purify manual -- especially the first five or six pages
of the first session -- is a good documentation model to work
from. The product will have to provide obvious evidence of
improvement, probably in quantitative form. The MM's graphical tool
can be used to provide this evidence, and should be used to encourage
novices to go further and experiment.

.guide.level.2: At the second level, the user should be able to make
use of the interface, and edit her code to .... She needs to
understand pool classes and the MPS. Switching from malloc to the MM
should be easy to do. The product must again provide obvious
improvement.

.guide.level.3: At the third level, the user uses a graphical tool to
provide views of allocated space, find problem spots using a memory
profiler, etc. He must make choices about how to use the MM. He must
be able to interpret the results of the tool.

.guide.level.4: The fourth level is a refinement of the third. The
user will examine measurements and tune things up. She will need
further insight into the MM.

.guide.level.5: At the fifth level, the user buys custom work from
Harlequin. One of the MM Group's goals is to provide consulting
services.

.guide.gc: Orthogonal to the five levels described above, the user's
guide needs to introduce the user to the concepts and techniques of
garbage collection (GC). However, the name "garbage collection" needs
to be de-emphasized -- Harlequin is selling performance, not a garbage
collector. The user's guide may be able to perform this introduction
in stages; it should work side-by-side with the MM book to teach the
user how to choose the appropriate GC method. (The purpose of the MM
book is how to make effective use of GC, and may relieve the user's
guide of having to include information on GC. Richard asked that I
monitor the MM book outline to ensure that it meshes with the user's
guide.)

.guide.competitive-analysis: Tucker will be doing a competitive
analysis. As a result, the user's guide may need to mention products
from other companies. Richard would like to make Harlequin's MM
compatible with other products, such as Purify.

.docset.refman: Reference documentation for the interface

.refman.protocols: The reference manual should include information on
protocols and how to combine them sensibly. The documentation must
present the protocols correctly, as it is especially important that
the user not use illegal combinations of protocols. <This will
probably become the second half of the user's guide.>

.refman.contents: In brief, the reference manual should cover the
concepts (~10); the protocols (~20), which should have annotated code
templates; and the interface symbols (~200).

.refman.other: Protocols need a reference template; I will try to use
the existing reference template with a few additional headings, if
necessary.  Symbols need to refer to the protocols they are part of.

.docset.toolref: Tool reference

There should be a separate tool reference.
<This might work better as a section in the reference manual.>

.docset.cat: Pool class catalog

.cat.contents: The pool class catalog should contain a list of
pool classes (~12) and what they are best used for. Additional pool
classes may be shipped after the product is launched; therefore, the
idea of a loose-leaf binder is appealing.  It will also give the user
the idea that the pool classes are interchangeable.

.cat.template: Each pool class page should have a list of the
circumstances under which the pool class should be used; a feature
chart; figures, facts, charts, graphs, etc. on performance;
class-specific information; and a list of compatible pool classes. It
may look very much like a data sheet.  It is important to come up with
a good template for the pool class catalog. Richard has sent some
ideas for a template to mm-doc.

.docset.ol-man: Online manuals

.ol-man.dist: Online versions of the manuals, in HTML, will be
provided with the product.

.docset.help: Online help

.help.format: The online help will be in HTML.

.help.contents: Online help for the interface will consist of links to
the reference manuals.  There will be some online help for the
graphical tool.


MISCELLANEOUS ISSUES

We also discussed the following miscellaneous documentation issues:

.doc.existing: Existing material for documentation

.existing.Richard: Richard has ideas for the documentation and has
already set a number of these ideas down in mail to mm-doc. I should
feel free to override these ideas, within the goals of the
documentation, if I have good justification.

.existing.MMInfo: In addition, there are a number of documents in the
MM Information database that could serve as the basis for
documentation. These documents include the MPS design document and
Richard Tucker's notes on his meetings with Richard.

.doc.MMInfo: Documentation and the Memory Management Information
database

.doc.tag: I need to tag the documentation and add it to the Memory
Management Information database in Spring. The tags can probably be
done in FrameMaker using conditional text.

.doc.swdesign: Documentation and software design

.doc.influence: The documentation can influence the design of the
software; there are a number of outstanding issues regarding the tools
that the documentation could sway one way or another.

.doc.comments: Richard asked that I comment on the design of the MM
and its user interface, especially if the UI is hard to document.

.doc.review: Reviews, testing, and evolutionary development

.review.team: The documentation will need to be reviewed. Ideally,
I would like reviews by developers, QA, and a Documentation Group
member, perhaps Andrew.

.review.purpose: The purpose of a review is basically to check the
links between the goals, the requirements, the design, and the
implementation. I should read the procedure documentation to see how
to do the things above.  <last part needs clarification>

.review.usability-test: The QA tests will be equivalent to usability
tests. QA will test the documentation against the specification.

.review.change-tracking: Since the Documentation Group's
change-tracking database shows no signs of being implemented in this
millennium, I'm happy to use the MM Group's Darwin database. The
documentation can be treated as a separate product or as a subsystem
of one of the existing products; this should be determined.

.review.evolution: The documentation will evolve with the
product. Basically, this means taking small steps toward the
solution. Each release should meet some specification and be somewhat
useful to the reader. The goal is to be able to release what we have
at any time. An example of evolution is to start with a two-page
user's guide, and gradually fill it out until it's a full-fledged
user's guide.

.doc.examples: Example code

.example.misc: The user guide will need a lot of example code to
illustrate its points. I need to point out areas where I feel code
examples would be useful. MM Group members will provide the examples.

.doc.schedule: Schedule issues

.schedule.new: Bob estimated that it would take approximately six
months to complete the MM documentation. I will create a revised
estimate based on my schedule and skills. 

.schedule.sequence: Richard and I thought it would be best to start
with outlines of the major documentation components, and then begin on
the reference manual. Other options for the first project included the
first section of the user's guide and the tool reference.

.schedule.resource.Leah: I will be able to work on MM for two days a
week until the beginning of April, at which point I'll become
full-time.

.schedule.release: A lot of work will be going into Dylan over the
next six months, and into EP over the next two to three months, plus
some carry-over. The product depends on when the tool is finished,
which depends on finding a UI developer; Richard hopes it will be done
by the end of the year.

.doc.resource: Human resources

.resource.developers: RIT has written down a lot of Richard's
explanations. DRJ knows a lot about the MM. Nick has experience as an
MM user; he is also doing a sort of "EZ interface" (drop-in); the
documentation can use his code to teach people how to write their own.

.doc.points: Points for the documentation to make

.points.multi-solution: There's no one solution to memory management
issues, so the MM has been designed to meet a number of different
needs. Some Unique Selling Points (USPs) for the product are:

   .points.policy.choice: The user has a choice of policy.
   .points.policy.combination:There are different combinations of
      policies; some have GC, some don't.
   .points.tool: The MM will allow the user to take measurements using
      the tool.
   .points.ROI: The MM will provide a return on investment at several
      levels.
   .points.flexible: The MM is flexible.
   .points.reliable: The MM is reliable and solidly engineered.

.doc.education: Background reading

I should read:

   Gilb
   OO book
   Wilson's bigsurv and allocsurv
   SmartHeap manual, literature, Web site
   Purify manual
   a manual that describes a library (e.g., WinAPI -- a bad example --
      and the OEM guide for core RIP)
   Richard Jones's book
   the Annotated ANSI C Standard (left-hand pages only)


ACTIONS

.act.notes: I'll type up my notes from this and subsequent meetings on
1997-01-16 and 1997-01-17, send them to Richard for review, and put
them into Spring.

.act.schedule: I'll determine a time estimate and a release schedule.

.act.outlines: I'll create outlines for the documentation.

.act.templates: I'll examine the Doc Group's reference template to
determine its suitability for the MM reference manual.

.act.refman: I'll start work on the reference material when I've
finished the preceeding actions.

.act.review: The MM Group will review what I've done so far while I'm
on holiday from 1997-02-19 to 1997-02-25.

.act.travel: I'll put in a travel request to visit the MM Group in
early March.

