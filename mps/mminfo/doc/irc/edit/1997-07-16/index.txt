                     #EDIT ON 1997-07-16 WEDNESDAY
                          irc.edit.1997-07-16
                               draft doc
                           gavinm 1997-07-18

.logbot.15-02-46: JOIN

.logbot.15-02-46.1: This channel is logged to irc.edit.1997-07-16

.logbot.15-02-46.2: Where do your SOCKS go when you lose them in th' WASHER?

.drj.15-02-52: yes

.drj.15-03-04: let's have a report meeting by IRC

.gavinm.15-03-14: Interestingly, I found an answer to that question once.

.drj.15-03-21: it's CHILLS me and amkes me WANT to dance

.gavinm.15-03-46: They sneak round the side of the drum and six months later 
they leap into the drain pipe, blocking it.

.gavinm.15-04-20: TOPIC: Edit Session: Report Meeting

.gavinm.15-07-27: So, David.  What did you do?

.nickb.15-08-04: JOIN

.logbot.15-08-04: This channel is logged to irc.edit.1997-07-16

.logbot.15-08-04.1: I know th'MAMBO!!  I have a TWO-TONE CHEMISTRY SET!!

.nickb.15-08-10: Yow!

.drj.15-08-16: I dispatched 4 issues

.gavinm.15-08-22: Cool.

.drj.15-08-25: in review.impl.c.lo.29

.gavinm.15-08-36: Did you sort your life out?

.drj.15-08-43: some of it.

.gavinm.15-08-47: Good.

.nickb.15-08-50: process issue: if the edit process for a document lasts too 
long, the working version may get lost.

.gavinm.15-08-51: Nick?

.drj.15-08-51: not very much frankly

.nickb.15-08-56: (again)

.drj.15-08-56: life, don't talk to me about life.

.drj.15-09-03: no, I didn't sort nick's life out either

.nickb.15-09-13: But I've got my personal review edit process sorted out now, 
so that was

.nickb.15-09-17: the last time.

.nickb.15-09-23: life, bah!

.gavinm.15-09-38: There are various problems inherent in documents remaining in 
edit for too long.

.nickb.15-09-41: Did anyone else here knock out any teeth when they were kids?

.drj.15-09-49: I suppose one could always chek in a half edited document.  
assuming it still compiles n all

.drj.15-09-52: yes

.gavinm.15-10-01: Nick, you said you'd get space.c to exit, and work on 
arenacl.c.

.drj.15-10-04: right upper 6

.nickb.15-10-11: I thought I'd done that. Maybe I did it on a branch. I can't 
find it, though.

.gavinm.15-10-17: Focus, guys, focus.

.nickb.15-10-23: space.c is approaching exit at high speed.

.nickb.15-10-26: left upper 2

.drj.15-10-26: had my left upper 5 removed by dentistry and my front upper jaw 
moved back with a brace

.gavinm.15-10-29: Right.

.drj.15-10-38: LU2? ouch

.nickb.15-10-46: (and left upper 1 may be cracked)

.gavinm.15-11-03: I didn't resolve any issues as such, but I did a lot of work 
(i.e. redevelopment) that will resolve issues when I do the administration.

.nickb.15-11-07: life, don't talk to me about life

.drj.15-11-14: I am on a two year waiting list for an wisdom tooth op at 
addenbrookes as well.

.nickb.15-11-23: oh, I resolved all my outstanding web assignments, too.

.drj.15-11-27: but why are you asking nick?

.nickb.15-11-30: (do they count as edits??)

.nickb.15-11-36: Ah, that litany was Joe's, not mine.

.gavinm.15-11-36: I did the second half of throwing away most of process.darwin 
and making the diagram stand alone as the only part.

.drj.15-11-46: when is the next release of the process?

.drj.15-11-58: are we getting another release of this version?

.gavinm.15-12-05: DRJ, dunno.  I haven't had time to assess and plan yet.

.nickb.15-12-09: make sure they have the right instruments before they start.

.drj.15-12-21: Er, I'll be out cold

.nickb.15-12-29: (doncha love multiple overlapping conversations)

.nickb.15-12-32: not local?!

.gavinm.15-12-32: It depends how long release.process.repeatable is going to 
take.

.drj.15-12-53: nah.  if it was local the dentists would've done it.

.gavinm.15-13-14: dum de dum

.gavinm.15-13-23: tra la la

.nickb.15-13-26: I had to go to Addies but was under local. They had the wrong 
trolley for when it went wrong.

.gavinm.15-13-29: Is Richard going to join us?

.richard.15-13-38: JOIN

.logbot.15-13-38: This channel is logged to irc.edit.1997-07-16

.logbot.15-13-38.1: I am a jelly donut.  I am a jelly donut.

.drj.15-13-47: argh

.nickb.15-13-50: I was left staring out of a window, knowing that blood was 
running down my chin.

.gavinm.15-13-55: Richard, what did you achieve?

.richard.15-14-04: Two slices of toast.

.nickb.15-14-04: waiting for them to rush around and find the right trolley.

.nickb.15-14-17: 20 minutes later they packed me off home in a taxi.

.drj.15-14-24: great

.richard.15-14-30: I appear to have dealt with about 40 issues.

.nickb.15-14-30: magic darts.

.gavinm.15-14-30: You said you'd plough through some edits in arenavm.c and 
update the design.

.drj.15-14-36: I hope they butterflied your cheek up

.gavinm.15-14-42: Could we focus on edits, please?

.drj.15-14-48: yes sir

.nickb.15-14-51: Bah, spoilsport.

.richard.15-14-54: ACTION focusses

.gavinm.15-15-06: Excellent.

.gavinm.15-15-17: Moving on to process,

.gavinm.15-15-36: TOPIC: Edit Session: Process Bairnstorm

.richard.15-15-40: How did everyone else do?

.richard.15-15-46: Gavin?

.gavinm.15-16-00: Richard, have a look at the log later.

.richard.15-16-11: You were asking about process.  I need to know.

.nickb.15-16-15: I was quite focused, once I realized I'd dropped my working 
version on the floor again....

.gavinm.15-16-37: What problems prevent you from making edits, either 
effort-wise, or calender-wise?

.nickb.15-16-38: I got some new edits done, as well as redoing most of my old 
edits.

.drj.15-16-51: I was quite unfocused on account of moving house.  which is one 
of the most stressful things one can do I am told.

.richard.15-16-55: I need to know NOW so that I can discuss the effectiveness 
of the process change I made./

.gavinm.15-16-58: Nick, how did your working copy get lost?

.drj.15-17-14: what process change did richard make?

.gavinm.15-17-35: Nick almost got space.c to exit.

.nickb.15-17-43: I dunno. I evidently didn't check it in on the trunk, I can't 
find it on a branch, and it's not in my home directory.

.gavinm.15-17-51: DRJ did 4 issues.

.drj.15-17-55: I did 4 out of 59 edits

.gavinm.15-18-07: I did lots of work that will resolve issues when I do the 
paperwork.

.drj.15-18-19: gavin prepared for doing some work then?

.richard.15-18-42: I insisted that people did editing, using my managerial 
authority.  Or perhaps you missed it.

.gavinm.15-18-49: We discussed the idea of having review branches once.  It was 
decided they were too heavyweight.

.drj.15-19-14: I see.  I guess it didn't seem like insisting since I had 
already scheduled time for it.

.nickb.15-19-18: Thankfully most of my edits can be reconstructed from my 
review log.

.richard.15-19-28: Still, one issue per hour isn't good.

.gavinm.15-19-32: If your edits affect many files, or are spaced out over time, 
maybe a review branch would be worth it.

.drj.15-19-48: fwiw I find most of my work sin't usually done on the document 
being reviewed.  other code and design gets changed a lot

.gavinm.15-20-07: My suggested estimate of 7.5 minutes/issue was to be averaged 
over all issues. 

.drj.15-20-11: I didn't spend 4 hours on it.  which wasn't good.

.richard.15-20-23: Right, so my insistence didn't actually work on you

.gavinm.15-20-44: Nick, do you think a review branch woul dhave helped?

.richard.15-21-15: There's no rule _against_ branching for review, just no 
compulsion.

.gavinm.15-21-44: This could be made clearer.

.gavinm.15-21-56: I'll make a note in the relevant procedure.

.drj.15-22-03: yeah well, that's what happens when you have 20th percentile 
life crises

.nickb.15-22-17: I agree with DRJ, most of the work is on other documents. If 
there's a defect "missing design", then one can obviously spend ten hours 
resolving that defect.

.nickb.15-22-44: No, I don't think a review branch would have helped. I needed 
a better process. I've got one now.

.nickb.15-22-57: (and better planning, so edits don't last for a year).

.richard.15-23-01: I think that work on other documents should be deferred 
until work on the reviewed document is done as much as possible.

.gavinm.15-23-12: But "missing design" isn't a defect in the product document, 
and therefore isn't technically one that the editor must fix.

.richard.15-23-21: Otherwise the review goes "stale".

.richard.15-23-36: I agree with Gavin.

.drj.15-23-40: hmm.  this goes against the grain of doing the most important 
things first though

.richard.15-24-02: But getting documents out of review is important, even 
though the individual issues may not appear to be.

.drj.15-24-12: yes I know.  you said that.

.nickb.15-24-22: If "missing design" isn't fixed in edit, it's unlikely to get 
fixed at all with our current process.

.gavinm.15-24-31: Agreed.  Would it be artificial to exit documents by creating 
more requests?

.drj.15-24-37: having design may be important as well.  usually is in fact.  
and is usually incredibly important.

.gavinm.15-24-54: Nick, the editor must do something with it, even if it's just 
creating a request.

.drj.15-25-15: possibly the problem is that are document structure is 
insufficiently mature to be reviewed sensibly at the moment.

.nickb.15-25-28: I'm unconvinced that creating a request will lead to the issue 
being fixed "soon enough".

.drj.15-25-38: but as we were discussing today it's very hard to create 
requests for writing design.

.gavinm.15-25-42: Nick, that's a planning issue.

.nickb.15-25-48: Maybe implementations with missing design should never be 
reviewed.

.drj.15-25-51: after all, what's the customer visible change

.richard.15-25-57: Having design for the whole system is important, as is a 
process for creating and maintaining design, but I'm still doing the edits for 
arenavm because that's what needs to be done _now_.

.drj.15-26-11: yes, maybe impl with no design shouldn't be reviewed.

.drj.15-26-31: richard, yes, and does that generalise?

.gavinm.15-26-40: Yes, and unreviewed impl shouldn't be released.

.gavinm.15-26-47: Duck!  There's a FLYING PIG!

.richard.15-26-59: Perhaps we should just tell people that we'll never release 
anything because we can't release what we haven't reviewed and we can't review 
what we haven't designed, and so on.  I think not.

.drj.15-27-21: I think not also.

.richard.15-27-39: We must do the best we can with the resources available.  
The balance may not be right, in which case we should change the balance, but I 
don't think we'll succeed if we inhibit progress like that.

.nickb.15-27-51: So do I. I still think that entering impl for review without 
having a design is a bit of a disaster.

.gavinm.15-28-01: There are customer visible requirements in terms of 
reliability, and general confidence of meeting requirements.

.richard.15-28-10: Code without design is not as good as code with design, but 
it can still be good.

.drj.15-28-14: if we inhibit progress like what?  not reviewing impl until 
design is written? (agree).  but only gavin has suggested that and he wasn't 
serious.

.gavinm.15-28-29: I think DRJ's impl with incomplete design for LO pool went 
quite well.

.nickb.15-28-38: The author can write just as good a design document while 
prepping for review as the editor is likely to while doing edits. And can put 
in a request similarly if they can't write a decent design.

.drj.15-28-38: richard, yes, code without design can be as good as code with 
design.  agree.  it can also be much worse.

.drj.15-29-02: richard, you seem to be claiming it's always better to expedite 
the edits on the impl rather than write the design.

.gavinm.15-29-08: Our releases surely have specific planned levels for those 
requirements.

.richard.15-29-27: DRJ, I think it usually is, yes.

.gavinm.15-29-40: Is it time to quote Arthur yet?

.drj.15-29-44: a statement with which I disagree.

.nickb.15-29-53: huh?

.drj.15-29-53: phone call

.gavinm.15-30-24: Arthur says: Software is code plus documentation that 
describes its behaviour.

.richard.15-31-01: Then I predict that review and edit will cease.

.drj.15-31-10: I disagree with the statement "usuall it's better to expedite 
the edits on the impl rather than write the design"

.gavinm.15-31-36: We're about to have lots more documents to review, with 
little prospect of clearing the edit backlog.

.drj.15-31-40: er why?  It's not like I've been making no progress on my edits

.richard.15-31-49: No, but you're making very very slow progress.

.nickb.15-31-55: If design is required for impl to be reviewed, then that 
avoids the inevitable major defect and inevitable considerable work for the 
editor, thus ensuring that edits happen more promptly after the document has 
entered review.

.gavinm.15-31-55: DRJ, true.

.gavinm.15-32-06: Nick, true.

.nickb.15-32-10: IMO this would be a good thing.

.gavinm.15-32-27: I think that we should have at least an incomplete design 
before reviewing impl.

.nickb.15-32-34: (since in other terms it is simply a transfer of work from 
editor to author).

.drj.15-33-04: frankly, I have no idea what my global edit rate is.  I'd love 
to be told / work it out.

.richard.15-33-26: A couple of points:  Edit improves the quality of code.  
Design improves the quality of code.  Design probably improves quality more 
than edits.  However, a lot of edits are very quick, and therefore have a good 
cost/benefit ratio.

.gavinm.15-33-32: The group's is around 7.5 minutes/issue.

.nickb.15-33-35: Yes, incomplete design is fine. Then the Improvement 
Suggestion "design is incomplete" is replied "see request.foo.nnnnnn, which is 
to complete the existing design document"

.richard.15-34-11: It's good to have good code sooner, so I think that edits 
should be cleared up so that we can generally improve the quality of code 
without stalling the review process, which has been repeatedly shown to be 
valuable with or without design.

.gavinm.15-34-21: Requests form part of the Development Manager's planning 
process.  He can assign effort to satisfying them, and set dates for completion.

.richard.15-34-24: Meanwhile we should try to solve our design process problems.

.richard.15-34-42: A stalled review process benefits no-one.

.drj.15-34-57: most edits improve the quality of the code negligibly in my 
opinion

.gavinm.15-35-12: I wonder (off the top of my head) if we could make the 
creation of design more lightweight.

.richard.15-35-16: If we insist on waiting for a design process which doesn't 
exist then we are seriously jeapordizing any progress at all.

.drj.15-35-22: all we seem to be arguing about is what we think various weights 
are compared with something else, when noone in fact has any concrete idea

.richard.15-35-31: We have to incrementally develop.

.richard.15-35-42: I have a concrete idea that there is a huge review/edit 
backlog.

.gavinm.15-35-49: If we could be encouraged to throw design nuggets into the 
bag then design could coalesce more incrementally.

.drj.15-36-01: there is also a huge amount of unwritten design

.richard.15-36-16: I agree.  And we have some pretty concrete deadlines.

.drj.15-36-30: at the current rate of design production for example then most 
of our code will be unmaintainable in 6-12months

.richard.15-36-31: And, with all due respect, they are my responsibility.

.gavinm.15-36-34: 14 documents in edit, dating from 196-08-14.

.richard.15-36-42: drj: I don't believe you.

.nickb.15-36-50: All I'm saying is that the countless Major and Minor defects 
"No design document, this comment belongs in the design, this should be linked 
to the design, &c", which come up inevitably every single time we review any 
impl without design, are well known

.drj.15-37-11: it was an off the top my head statement, but it's one similar to 
the one I worry about when editing documents

.richard.15-37-15: Nick: Perhaps that's a fault in review.

.drj.15-37-41: so review is setting too high a standard?

.nickb.15-37-45: ... and IMO must be the responsibility of the author. 
Otherwise the author is entering documents for review with several (sometimes 
dozens) of major and minor defects. Writing the design document before review 
is at least as easy as doing it before review.

.gavinm.15-37-48: I'm not sure that "No design document" is a defect in an impl.

.richard.15-38-12: Perhaps we are reaching too high with review when we talk 
about "design" this and "design" that.  We don't have a good idea or process 
for design yet.

.drj.15-38-23: er, after, nickb, yes; I agree

.gavinm.15-38-33: Perhaps that's an area that requires intensive research.

.richard.15-38-56: I agree with Nick.  We should try to get to where he says.  
We should _plan_ to get there.  However, we should not act as if we are there.

.nickb.15-38-56: No, but there is a lot of stuff which we know belongs in 
design, even if we don't have a complete understanding, and so we're better off 
putting that stuff in design before review than after.

.richard.15-39-19: Do we know that it belongs in design?

.nickb.15-39-28: Certainly I shall not be entering any EP impl for review 
before I have design docs.

.richard.15-39-31: If we aren't sure what design is, how can we be sure what 
belongs where?

.gavinm.15-39-57: Hmm.  I find myself inserting design stuff in impl.  Why?

.nickb.15-40-04: A lot of stuff we do know belongs in design, yes. We don't 
know everything which belongs in design, but I think we are good at identifying 
those things in impl which belong in design.

.nickb.15-40-21: After gavinm: because there isn't a design.

.nickb.15-40-42: [on EP impl] even if those design docs are incomplete.

.richard.15-40-54: Ah, now you're talking.

.gavinm.15-41-21: Ok.  I think review should insist that source documents 
exist, even if they aren't complete.

.nickb.15-41-28: Before writing any new impl, at least _create_ the design doc.

.richard.15-41-38: Gavin: That sounds like a first step.

.gavinm.15-41-46: Create design doc for all existing impl?

.nickb.15-41-53: While writing the impl, if you find yourself writing a design 
comment, put it in the design and link to it.

.richard.15-41-59: And then, perhaps, we can start insisting that certain 
things are present in the source docs.  Gradually working them out.

.nickb.15-42-18: That way when you've "finished" the impl (i.e. got it 
working), you have at least a framework low-level design (and maybe more).

.richard.15-42-22: GavinM: No, don't do that.

.gavinm.15-42-31: Ack.

.richard.15-42-40: GavinM: I did that and we ended up with a lot of bogus empty 
documents which have been floating around for years.

.drj.15-43-14: but some of them have had design fragments added to them.  I'm 
not convinced that it wasn't a sensible thing to do.  er, ie it was a sensible 
thing to do.

.gavinm.15-43-18: We've come up with some interesting ideas here.

.nickb.15-43-24: This framework of a low-level design may be sufficient to 
review the impl against. It is certainly infinitely better than no design doc.

.gavinm.15-43-30: I think we're beginning to exceed our bairnstorm budget.

.richard.15-43-33: Nick: Agree.

.richard.15-43-41: No bairns, please.

.nickb.15-43-57: Certainly no bairnstorms.

.gavinm.15-44-01: There's a chiel among you taking notes.

.gavinm.15-44-07: (R4)

.richard.15-44-16: Obscuro.

.gavinm.15-44-23: Scott, I think.

.gavinm.15-45-10: So, to sum up: (1) We should insist on some kind of design 
document before reviewing impl.

.nickb.15-45-33: (1) is a special case of insisting on source docs before any 
review.

.gavinm.15-45-40: (2) Authors should attempt to throw design stuff into design 
doc rather than impl  _before_ review.

.richard.15-45-41: "Some kind of" needs clarification.  I suggest insisting on 
very little to begin with.

.gavinm.15-45-56: Nick, (1) is in entry.universal but I've been lenient in 
enforcing it.

.richard.15-45-59: (2) is part of proc.impl

.gavinm.15-46-54: (3) Editor's should concentrate on fixing defects in the 
product document, and should defer imporvement suggestions by escalation (to 
requests) if they haven't time to do them.

.nickb.15-47-18: Agree, agree, agree, agree, agree.

.richard.15-47-22: Not sure about how "to requests" might work in all cases.

.gavinm.15-47-25: I don't think that saying (1) and (2) already exist in some 
document is enough to ensure they happen.

.drj.15-47-28: indeed

.drj.15-47-36: we end up with one request saying "quality not high enough"

.gavinm.15-47-47: Richard, passing on is also permitted.

.richard.15-47-54: "Requirements not met."

.richard.15-48-00: "Product not finished."

.drj.15-48-03: and 600 changes saying "wrote this piece of design" which are 
all rejected because each one didn't make the quality high enough

.nickb.15-48-09: You might have trouble getting all the work into four 
assignments.

.richard.15-48-20: Hmmmm.

.gavinm.15-48-27: Hierarchial requests, anyone?

.richard.15-48-31: Anyway, that's a separate problem.

.drj.15-48-39: it's because DARWIN ironically enough doesn't handle satisfy 
requests in an incremental manner

.drj.15-48-48: er, perhaps it's because of that

.gavinm.15-48-56: I'll look into the implementation of (1), (2), and (3), then.

.nickb.15-49-14: Darwin is neo-Darwininan, definitely catastrophic punc eq

.richard.15-49-18: (4) Don't reach for the stars and trip over a loose paving 
stone.  (Or something.)

.drj.15-49-35: yes it is a separate problem, but one that we also need to 
solve.  We need some way of making sure design gets written.  just like we're 
now working on some way to make sure reviews and edits happen

.richard.15-49-39: Perhaps "walk in to a lamp post".

.nickb.15-49-48: (5) as discussed, review sessions should exact a deadline from 
the editor.

.gavinm.15-50-02: Nick (5), agreed.

.drj.15-50-14: yes, 5 is good.

.gavinm.15-50-18: But what happens when he steps over it?

.richard.15-50-26: He gets censured.

.nickb.15-50-29: Public humiliation

.nickb.15-50-35: he has to make the coffee

.drj.15-50-35: in fact it's all good, I just don't see at the moment how design 
gets written.

.gavinm.15-50-38: Flogging?

.nickb.15-50-47: with wedge-shaped spaghetti

.richard.15-50-52: He has to write all the design!

.richard.15-50-56: (Two birds.)

.gavinm.15-51-15: Unfortunately both in the bush.

.drj.15-51-28: ACTION confused

.gavinm.15-51-53: I think we have some good ideas to work on here.

.nickb.15-52-00: he doesn't get to do any impl work until it's done

.gavinm.15-52-03: Does anyone have any other points to raise?

.richard.15-52-09: We must plan to write design.  Therefore we must plan.  
Therefore we must have management.  I'm working on it.

.drj.15-52-15: who is this "he"?  that is what is confusing me mostly.

.richard.15-52-24: Chris Sargent said: "If it's not documented, it's not done."

.gavinm.15-52-30: The editor who steps over his own deadline.

.richard.15-52-33: "he" = editor

.drj.15-52-33: Is my anaphoria breaking down?

.drj.15-52-43: oh I see.

.gavinm.15-52-47: Frankly, I have no idea.

.gavinm.15-53-33: Re (4), if we expect too much of impl, then of course we're 
going to get an unmanageable quantity of defects.

.drj.15-53-40: er, but weren't we agreeing a moment ago that statements like 
"if it's not documented, it's not done" are not usefully true.

.gavinm.15-53-49: But surely all we expect is that they comply with rule.impl?

.drj.15-53-55: oh damn, no scrollback.

.richard.15-54-02: I know, but he has a good attitude to putting resources into 
design and doc.

.gavinm.15-54-17: more ~gavinm/irc-logs/edit.1997-07-16

.drj.15-54-36: otoh, it's true that it's not done, it may stil be very useful 
whilst in a unfinished state though

.drj.15-55-09: after all, at least an uncooked egg is food.

.richard.15-55-13: I think we should expect implementation to meet the 
requirements.  Design makes it much easier to be sure, and to remain sure.  
There's no point to it other than that.

.gavinm.15-55-19: We keep returning to the fact that we disagree with the 
waterfall method.

.drj.15-55-31: yes.  

.gavinm.15-55-43: We're just not quite sure what we replace it with.

.drj.15-55-52: the rapids model

.nickb.15-56-02: Flinders, anyone?

.drj.15-56-21: you shoot very quickly, create lots of froth and get hit by 
rocks a lot

.richard.15-56-25: Evo.  Review used to work better.  We should've improved it, 
rather than tried "suddenly" that we needed everything to be "designed".

.drj.15-56-42: yes

.nickb.15-57-10: Agree. This is because we were pushing our process around much 
too quickly IMO.

.richard.15-58-07: Food for thought.  I'd like to tie up before the end of the 
day.

.nickb.15-58-11: i.e. suddenly saying "our process shall be thus"

.gavinm.15-58-14: Nick, came of trying to have more.

.drj.15-58-23: it used to be the case that review found more, more useful 
defects

.gavinm.15-58-32: DRJ, when?

.richard.15-58-38: Before you arrived.

.drj.15-58-43: so perhaps our review is grinding out defects on higher levels

.nickb.15-58-46: :-)

.gavinm.15-58-46: Ah.

.drj.15-58-52: just so.

.richard.15-59-46: Well, we've all stoppped typing.

.richard.15-59-52: May I be excused?

.gavinm.15-59-55: I was thinking ...

.nickb.16-00-10: I'm off

.gavinm.16-00-20: perhaps we need to determine the requirements of review 
_before_ refining it.

.gavinm.16-00-32: Anyway, enough for one day.

.gavinm.16-00-35: You may all go.

.gavinm.16-00-38: Thanks for your time.

.richard.16-00-41: Thanks.

.richard.16-00-47: Good brainstorm, imo.

.drj.16-00-47: /

.richard.16-00-50: PART

.drj.16-00-56: PART

.gavinm.16-01-53: PART


