                   IRCHOST-#MM ON 1998-10-06 TUESDAY
                       irc.irchost-mm.1998-10-06
                               draft doc
                          richardk 1998-10-07

TOPICS

.topics:
  SW SMP rip

TRANSCRIPT

.note: Taken from irchost IRC log for #mm on Tuesday 6th October 1998 .

15:21:15 *** LogBot <logbot@nirvana.harlequin.com> has joined channel #mm
15:21:16 *** The topic on channel #mm is memory management
15:21:16 *** LogBot is logbot@nirvana.harlequin.com (Logging bot)
15:21:16 *** richardk is richardk@McAwe.cam.harlequin.co.uk (richardk)
15:21:16 *** drj is drj@snotra.cam.harlequin.co.uk (David Jones)
15:21:36 * richardk typed "/invite LogBot #mm"
15:24:20 *** lmb <lmb@lantra.harlequin.com> has joined channel #mm
15:24:24 <lmb> hi, all.
15:24:33 <richardk> Mornin'
15:25:41 *** Signoff: richardk (springhost.harlequin.com 
springhost.cam.harlequin.co.uk)
15:25:41 *** Signoff: drj (springhost.harlequin.com 
springhost.cam.harlequin.co.uk)
15:26:16 *** Signoff: lmb (Connection reset by peer)
15:26:16 *** LogBot has left channel #mm
15:30:06 *** LogBot <logbot@nirvana.harlequin.com> has joined channel #mm
15:30:06 *** LogBot is logbot@nirvana.harlequin.com (Logging bot)
15:30:06 *** richardk is richardk@McAwe.cam.harlequin.co.uk (richardk)
15:30:10 *** drj <drj@snotra.cam.harlequin.co.uk> has joined channel #mm
15:33:03 *** drj has changed the topic on channel #mm to memory management
15:34:42 *** lmb <lmb@lantra.harlequin.com> has joined channel #mm
15:34:54 <lmb> and now i'm on irchost.harlequin.com.
15:36:03 <richardk> Hello again!
15:38:54 <richardk> Leah, we could try a relativity experiment.
15:39:19 <richardk> With one server, everyone is guaranteed too receive msgs in 
the same order, I'm told.  But with two, time is relative.
15:39:24 <richardk> too/to
15:39:25 *** Eric <ericp@dynamic-house39.long.harlequin.co.uk> has joined 
channel #mm
15:39:35 <richardk> Hello Eric!
15:39:43 <drj> hello eric
15:39:44 <Eric> Hi
15:39:50 <drj> fancy meeting you here.
15:40:32 <richardk> Dunno how to make my client show me a list of channels.  
Time I found out.
15:40:38 <drj> /list
15:40:55 <Eric> Well, this mail went around, and I thought this could be a good 
oppotunity to speak with you guys
15:41:17 <drj> but on the real world IRC there are several 000 channels and 
listing them usually creates too much traffic towards your client and you get 
thrown off for flodding the network.
15:41:31 <drj> so how goes thigns eric?
15:41:32 <richardk>  /list]  "Unknown command"
15:41:40 <drj> pcha
15:42:09 * richardk makes his client produce a "Channels" window.  It is blank.
15:42:14 <Eric> been thinking about SMP Scriptworks, and mps
15:43:54 <richardk> Yes, I read Gavin's email about it.  There are some terms 
he uses that I'd like him to clarify.
15:44:06 <Eric> go ahead
15:44:10 <lmb> talk to y'all later....
15:44:14 *** lmb has left channel #mm
15:44:16 <richardk> Bye Leah.
15:45:47 <richardk> Reading between the lines, he seems to be describing single 
interpreter + multiple renderers.
15:46:28 * richardk worries that the transcript for this conversation depends 
on v1.0 of Spring-Support's LogBot,
15:46:29 <Eric> Correct - but note that the interpreter also, when a page has 
been interpreted, participates in the rendering
15:46:54 * richardk realises that were this a phone conversation, there would 
be _no_ transcript!
15:47:09 <richardk> interpreter also renders]  Yup.
15:47:16 *** roger <rday@vega.long.harlequin.co.uk> has joined channel #mm
15:47:20 *** roger has left channel #mm
15:47:27 <richardk> So, do renderer threads need only around 256K to work?
15:48:12 <richardk> Presumably then the interpreter has pre-allocated all 
halftone tiles that are going to be used by the renderers.
15:48:37 <Eric> Yes - currently that's all that they get. I'm not quite sure at 
the moment how much of this they use
15:48:46 <richardk> pre-allocated] (and put the halftone pattern in the tiles 
too!)
15:49:21 <richardk> "shared" memory means mapped into the address-space of all 
the processes
15:49:37 <richardk> all the processes/all the rip processes
15:49:50 <Eric> yes - interpreter sets up halftone stuff prior to rendering.
15:49:56 <richardk> Is it mapped in at the same address for all processes?
15:50:21 <richardk> I imagine that it is, and that in any case this is 
irrelevant for MM in the proposed design, ...
15:50:50 <richardk> ... because SW is doing the work of getting hold of the 
memory and address-space, and only then calling MPS to manage it as a client 
arena.
15:51:01 <Eric> yes - I believe its allocated (under unix) using salloc or 
something. The core rip (and mm) doesn't really care - it just knows that there 
is this chunk of memory that everyone can see
15:52:09 <richardk> Gavin doesn't justify the statement that "[this client 
arena] can't be VM because it uses shared memory".
15:52:47 <Eric> Presumably the mps looks at the pool to pick which arena is 
appropriate (ie pools are tied to the arena they were created in).
15:52:49 <richardk> Is that a platform restriction, or am I missing something 
obvious here?
15:52:56 <drj> shmget, but that's not important
15:53:02 <richardk> (I'm not very au fait with SMP).
15:53:56 <drj> shared memory is a completely separate world from the memory 
that the MPS gets via VM etc
15:54:13 <drj> though we could (probably) do something that was VMie and 
sharable
15:54:16 <richardk> spearate] on which OS?
15:54:21 <richardk> spearate/separate
15:54:34 <drj> unixy ones I'm talking about now
15:54:50 <drj> we could share an arenavm by mapping a real file
15:55:03 <drj> for example
15:55:19 <drj> or we could have pools which allocated shared segments or 
something
15:55:34 <richardk> Eric, I guess your question is about how the MPS copes with 
multiple arenas.
15:55:34 <Eric> Yes - that's basically how we do it (shared memor-mapped file)
15:56:08 <drj> eric, yes, pools are in arenas.  each pool is in exactly one 
arena.
15:56:17 <Eric> (under NT, anyway)
15:56:19 <richardk> The client doesn't pass-in arena with every call, so yes 
the MPS must find the arena from the pool.
15:57:07 *** MikeW <Mike@spargel.man.harlequin.co.uk> has joined channel #mm
15:57:20 *** MikeW has left channel #mm
15:57:36 <Eric> I guess one obvious question, given that memory is tight (ie 
client arena may only get 128Kb) is how much of this will be left after mm 
internal housekeeping
15:57:59 <richardk> tight] this is for the renderers, yes?
15:58:18 <richardk> (renderers = rendering threads, natch.)
15:58:21 <drj> hmm.  it's not something we're a) very careful about b) would 
like in general to publicise
15:58:43 <drj> "a few pages" ought to be the overhead for small arenas.
15:59:11 <drj> rit might now.  he has a test which create very small arenas; we 
used to have bugs in this area.
15:59:16 <richardk> (I expect that it's small for a small address space, but 
I'm not familiar enough with the code to know)
15:59:35 * richardk waits to ask rit.
15:59:59 <drj> OBTW, you ought to know ericp that you really shouldn't create 
an arena smaller than (bits-per-word * bytes-per-page)
16:00:19 <drj> ah, but for client arenas it's okay to go below that limit I 
think.
16:00:46 <richardk> drj, what your saying is it must be at least 32 pages, for 
instance?
16:00:50 <richardk> your/you're
16:00:51 <drj> yep
16:01:03 <richardk> That _is_ 128K
16:01:13 <drj> but I think that's only for VM arenas.  and it's a bug rather 
than something we'd like to document.
16:01:27 <drj> yes, that's what triggered it.
16:01:48 <drj> my guess is that the inital overhead for small arenas is about 3 
or 4 pages
16:02:26 <drj> each pool created will add more overhead however
16:02:47 <richardk> So the summary seems to be: very small arenas are not a 
point of parameter-space we've looked at very hard...
16:02:52 <drj> and in such small arenas you have to be careful that pools don't 
ask for large segments (extendBy must be small).
16:02:55 <drj> indeed.
16:02:58 <richardk> ... and 128K might count as 'very small'.
16:03:27 <drj> 128KB is very small for these purposes.  anything below a couple 
of meg is likely to be a bit dodgy.
16:15:07 <richardk> (MMers discuss shared memory, IPC, etc)
16:15:49 <Eric> (EP discuss various bits with GavinM)
16:15:50 <richardk> Eric, how is synchronisation+ communication performed?  And 
where do the renders render into?
16:16:08 <richardk> I presume both of these involve render threads writing into 
sh mem
16:16:36 <richardk> (but into objects that have been pre-allocated by the 
interp thread, or not into 'objects' (as far as MPS is concerned) at all.
16:19:18 <richardk> The other point is that this design (as in Gavin's mail) is 
what is currently working in 4.5 SMP rips; is that right?
16:19:28 <Eric> correct - band buffers allocated in shared memory.
16:20:57 <Eric> no. This is a new idea to solve an SMP issue that's been raised 
with the fact that we may compress image blocks
16:21:57 <richardk> Oh right.  Which bit is new?
16:22:00 <Eric> (these may either be in memory or on disk - either way, the 
renderer needs to be able to create a decompression filter (which requires 
allocation of memory)
16:22:32 <richardk> Ahhh.  So previously the render threads created _no_ 
MPS-managed arena.  I remember now.
16:23:32 <Eric> ...to decompress these blocks. Pre-allocating the filters is 
fine for lzw (although wasteful) but not for ccitt (memory required depends on 
image width)
16:23:58 <Eric> At the moment, image block compression is disabled
16:26:05 <Eric> # Appears as ANNA
16:29:17 *** Toastboy <jonw@McMiavellian.long.harlequin.co.uk> has joined 
channel #mm
16:30:14 <drj> hello toastboy
16:30:36 <Toastboy> hello. Guess I didn't change my Nick before connectng...
16:31:03 <drj> I guess not
16:32:28 <Eric> Back to overheads...
16:32:41 <drj> er, yes
16:33:27 <Eric> ...I reckon that we're looking at using a single (probably mv) 
pool
16:34:21 <Eric> Initially, the only allocations will be for filters - and only 
one filter should be required at any one time
16:34:32 <Eric> (per renderer)
16:34:44 <drj> 4 or 5 pages overhead then
16:35:56 <Eric> eek - for NT (8k) that's ~30% of 128K
16:36:33 <drj> NT does not have 8k pages.
16:36:37 <drj> ALPHA might have
16:37:15 <Eric> really? Dunno why, but I've always thought it was 8K.
16:48:49 <richardk> drj, is that true overhead? or minimum initial size?
16:48:58 <richardk> Oop, DRJ's gone home.
16:51:36 <Eric> .arena.ren -> correct, we won't bother creating 2nd arena for 
interpreter. Probably.
16:51:46 * richardk replies to Gavin's earlier mail, with more details and 
annotations.
16:53:40 <Eric> .arena.ren.size: local (renderer) memory size isn't (I believe) 
user-configurable.
16:54:29 <Eric> It's only 256 'cos up 'til now that's all that's been required. 
There are (still) other allocations in this memory space that aren't 
mps-managed that could be
16:55:56 <Eric> The lifetime of these other allocations would (ought to) be 
infinite - ie the don't need to be freed
16:57:29 *** Signoff: Toastboy (Quit: Leaving)
17:00:33 <richardk> Right.
17:06:43 *** Eric has left channel #mm
17:27:14 *** Pekka <pekka@sellers.cam.harlequin.co.uk> has joined channel #mm
17:27:27 <richardk> Hi Pekka.
17:27:46 <Pekka> Hi
17:28:12 <Pekka> Seems to work
17:28:27 <richardk> It was a SMODAA
17:28:35 <richardk> (oops -- wrong channel)
17:28:41 * Pekka looks at channel list
17:28:54 * richardk cannot get his client to show him a channel list :-(
17:29:00 <richardk> What's on the menu, Pekka?
17:29:36 <Pekka> #mm, #sysadmins, and #spring
17:30:31 <Pekka> I wonder if they like people joining their channel to bitch 
and moan...
17:30:39 <richardk> Let's see!
17:31:26 <richardk> Nothing much happening over there.
17:31:27 <Pekka> Wait a minute, IRC is a dangerous place, even for a channle op 
such as your self.
17:31:34 * richardk :-)
17:32:16 <richardk> Praps I should try out the Unix client.
17:34:34 <richardk> What a pile of guff it doth print out.
17:35:11 <Pekka> I should try the Emacs client, but I've been too busy
17:35:41 *** richardk2 <richardk@snotra.cam.harlequin.co.uk> has joined channel 
#mm
17:36:34 <richardk2> ...and here we are again.
17:36:58 <Pekka> and again
17:40:01 * richardk2 tries changing channel.
17:40:13 *** richardk2 has left channel #mm
17:42:09 *** richardk2 <richardk@snotra.cam.harlequin.co.uk> has joined channel 
#mm
17:42:32 * richardk2 does /help novice
17:44:09 <richardk> bitch & moan] Well, sysadmins didn't like me joining at 
_all_!  I didn't even get a chance to bitch and moan!  :-)
17:44:34 * richardk2 is no longer a novice
17:44:41 <richardk2> (allegedly)
17:45:43 <richardk> Hello, richardk2
17:54:00 <richardk> quit
17:54:06 <richardk> Whoopee!  A quirkafleeg.
17:54:09 *** Signoff: richardk (Quit: )
17:55:36 *** Signoff: richardk2 (Quit: Leaving)
17:55:51 *** richardk <richardk@McAwe.cam.harlequin.co.uk> has joined channel 
#mm
18:02:12 * Pekka thinks Richard has become only half the man he was
19:22:59 *** Signoff: Pekka (Quit: [=V96=] Leaving)
00:01:24 *** LogBot has left channel #mm


