              ADVANCED C++, PROGRAMMING STYLES AND IDIOMS
                            Coplien;James O.
                            Addison-Wesley, 
                                  1992

                             book.coplien92
                                 draft
                       P T Withington 1997-03-31


ABSTRACT:

[From the preface]

This book is designed to help programmers who have already learned C++ develop 
their programming expertise. To understand how programmers achieve proficiency, 
we need to understand not only how people learn a new language (such as a 
programming language), but also how a language is used to solve software 
problems effectively.

[From the back cover]

Assuming a background in C++ basics, this book helps programmers to develop 
their programming expertise by giving a feel for the styles and idioms of the 
language.  The approach is organized around the abstractions that C++ supports: 
abstract data types, combining types in inheritance structures, object-oriented 
programming, and multiple inheritance.  The book also explores idioms that the 
core of the C++ language does not support directly, such as virtual 
constructors, prototype objects, and advanced garbage collection techniques.

REVIEWS:

[ptw]

This book is a real eye-opener for "real" object-oriented programmers.  It 
exposes some of the real "gore" of C++ -- in the guise of showing you good 
programming practice.  One way of summarizing what the book is all about is 
showing you how you can simulate Smalltalk and Lisp in C++, by hand, even going 
so far as to show how to create classes that can be updated at run-time.

The author does not believe that C++ is the be-all and end-all.  He admits that 
some of its popularity is coincidence and self-sustaining.  The exploration of 
how to implement the more advanced object-oriented and dynamic idioms is C++ is 
an interesting exercise, but hardly the way I would choose to acquire those 
capabilities.



