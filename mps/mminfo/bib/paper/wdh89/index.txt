        THE PORTABLE COMMON RUNTIME APPROACH TO INTEROPERABILITY
                 Mark Weiser;Alan J. Demers;Carl Hauser
                             ACM, 01/12/89
                appeared in 13th AMC SOSP, December 1989
             ftp://ftp.parc.xerox.com/pub/pcr/PCRSOSP.ps.Z
http://www.ubiq.com/hypertext/weiser/PortableCommonRuntimeApproach.html

                              paper.wdh89
                                 draft
                             drj 1997-01-24


ABSTRACT:

Operating system abstractions do not always reach high enough for direct use by 
a language or applications designer. The gap is filled by language-specific 
runtime environments, which become more complex for richer languages 
(CommonLisp needs more than C++, which needs more than C). But 
language-specific environments inhibit integrated multi-lingual programming, 
and also make porting hard (for instance, because of operating system 
dependencies). To help solve these problems, we have built the Portable Common 
Runtime (PCR), a language-independent and operating-system-independent base for 
modern languages. PCR offers four interrelated facilities: storage management 
(including universal garbage collection), symbol binding (including static and 
dynamic linking and loading), threads (lightweight processes), and low-level 
I/O (including network sockets). PCR is "common" because these facilities 
simultaneously support programs in several languages. PCR supports C, Cedar, 
Scheme, and CommonLisp intercalling and runs pre-existing C and CommonLisp 
(Kyoto) binaries. PCR is "portable" because it uses only a small set of 
operating system features. The PCR source code is available for use by other 
researchers and developers. 

REVIEWS:

drj: The paper is a brief overview of the facilities of PCR and some indication 
of the performance of programs written using PCR.  PCR has a single collector 
for the entire heap which is normally conservative but can use specialized 
pointer-finding methods if necessary.  PCR has finalization which is ordered, 
but will not finalize cycles.

ATTACHMENT
   "PCRSOSP.PS"

