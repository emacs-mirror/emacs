                ATOM: A FLEXIBLE INTERFACE FOR BUILDING
                HIGH PERFORMANCE PROGRAM ANALYSIS TOOLS
                    Alan Eustace;Amitabh Srivastava
                 Digital Equipment Corporation, Western
              Research Laboratory, 250 University Avenue,
               Palo Alto, California 94301, USA, 01/07/94
                       WRL: Technical Note TN-44

                               paper.es94
                                 draft
                             dsm 1995-09-21


ABSTRACT:

Code instrumentation is a powerful mechanism for understanding program 
behavior.  Unfortunately, code instrumentation is extremely difficult, and 
therefore has been mostly relegated to building special purpose tools for use 
on standard industry benchmark suites.

ATOM (Analysis Tools with OM) provides a very flexible and efficient code 
instrumentation interface that allows powerful, high performance program 
analysis tools to be built with very little effort.  This paper illustrates 
this flexibility by building five complete tools that span the interests of 
application programmers, computer architects, and compiler writers.

The first tool reports the number of bytes read by the application.  The second 
tool is an instruction profiler that computes the number of instructions 
executed in each procedure as a percentage of the total number of instructions 
executed.  The third tool simulates the execution of the application running in 
a direct mapped data cache and reports hit and miss data.  The fourth tool 
computes the total amount of memory allocated and deallocated by the 
application.  The final tool isolates potential compiler performance bugs.  
Each tool is written in between 24 and 60 lines of code.

This flexibility does not come at the expense of performance.  Because ATOM 
uses procedure calls as the interface between the application and the analysis 
routines, the performance of each tool is similar to or greatly exceeds the 
best known hand-crafted implementations.

REVIEWS:

From the description in this document ATOM seems to be really sensibly 
designed.  I believe the claims made about flexibility, efficiency, ease of use 
and power.  The only drawback I can see with it, which is perhaps quite 
serious, is that it is fairly architecture specific.  Speaking from ignorance, 
it seems unlikely to be available for anything but the ALPHA and perhaps MIPS.  
If we could use it, I think I would want to.



