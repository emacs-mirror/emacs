             KEY PRACTICES OF THE CAPABILITY MATURITY MODEL
                 Mark C. Paulk;Charles V. Weber;Suzanne
               M. Garcia;Mary Beth Chrissis;Marilyn Bush
  Software Engineering Institute; Carnegie Mellon University, 01/02/93
                           CMU/SEI-93-TR-025

                              paper.sei93
                                obsolete
                           richard 1997-03-20


ABSTRACT:

Developing reliable and usable software that is delivered on time and
within budget is a difficult endeavor for many organizations. Products that
are late, over budget, or that don't work as expected also cause problems for
the organization's customers. As software projects continue to increase in
size and importance, these problems become magnified. These problems
can be overcome through a focused and sustained effort at building a
process infrastructure of effective software engineering and management
practices.

To build this process infrastructure, organizations producing software need
ways to appraise their ability to perform their software process successfully.
They also need guidance to improve their process capability. Customers,
such as the Department of Defense (DoD), need ways to evaluate more
effectively an organization's capability to perform successfully on software
engineering contracts. Prime contractors need ways to evaluate the
capability of potential subcontractors.

To help organizations and customers like the DoD and prime contractors,
the Software Engineering Institute (SEI) has developed the Capability
Maturity Model for Software (CMM), that delineates the characteristics of a
mature, capable software process. The progression from an immature,
unrepeatable software process to a mature, well-managed software process
also is described in terms of maturity levels in the model.

ATTACHMENT
   "tr25.93.pdf"

