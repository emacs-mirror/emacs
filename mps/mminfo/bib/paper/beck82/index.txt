 A DYNAMIC STORAGE ALLOCATION TECHNIQUE BASED ON MEMORY RESIDENCE TIME
                             Leland L. Beck
                             ACM, 01/10/82
     Communications of the ACM, Voluem 25, Number 10, October 1982

                              paper.beck82
                                 draft
                             ptw 1998-05-06


ABSTRACT:

A new dynamic storage allocation technique, the release-match method, is 
described. The memory utilization efficiency of this method is compared with 
that of the first-fit and best-fit methods, using a series of simulations. 
Results indicate that release-match gives significantly better memory 
utilization than first-fit or best-fit/rover a wide range of conditions. In 
addition, this method can be implemented with only minor increases in time and 
space overhead as compared with best-fit.

The release-match method depends on prior knowledge of the memory residence 
time for each request. A modification of the release-match method which does 
not require such knowledge (the age-match method) is 
described; the performance of this method is investigated using a variety of 
request distributions. Age-match approaches the performance of release-match 
when the mean request size is a significant fraction of the total memory space. 
Its usefulness decreases as the coefficient of variation of the request 
lifetimes increases. The possibility of using release-match with estimated 
residence times is considered; some preliminary results are given, and a number 
of future directions for research are proposed.

REVIEWS:

paper.wil95 (p. 14):

Fragmentation is the inability to reuse memory that is free. This can be due to 
policy choices by the allocator, which may choose not to reuse memory that in 
principle could be reused. More importantly for our purposes, the allocator may 
nothave a choice at the moment an allocation request must be serviced: there 
may be free areas that are too small to service the request and whose neighbors 
are not free, making it impossible to coalesce adjacent free areas into a 
sufficiently large contiguous block.

Beck [Bec82] makes the only clear statement ofthis principle which we have 
found in our exhausting review of the literature. As we will explain later (in 
our chronological review, Section 4.1), Beck also made some important 
inferences from this principle, but his theoretical model and his empirical 
methodology were weakened by working within the dominant paradigm. His paper is 
seldom cited, and its important ideas have generally gone unnoticed.

ptw:

Essentially this paper is about placment:  if objects can be placed so that 
adjacent objects die together, there will be little fragmentation.  As an 
approximation, it places objects together according to creation time.  That 
this should work at all is an endorsement of the generational hypothesis:  that 
most objects die young, hence placing objects together according to creation 
time will cause (most) adjacent objects to die together.  What is interesting 
about this paper is that unlike nearly every other paper on manual memory 
management, it tries to optimize coalescing opportunities, rather than fitting 
opportunities.

See also my mail "Generational" manual management (mail.ptw.1998-02-25.22-18(0) 
)

This paper and that mail is the inspiration for design.mps.poolmv2(3)



