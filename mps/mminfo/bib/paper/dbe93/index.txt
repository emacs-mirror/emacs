           GUARDIANS IN A GENERATION-BASED GARBAGE COLLECTOR
                R. Kent Dybvig;Carl Bruggeman;David Eby
                             ACM, 01/06/93
             Proceedings of the ACM SIGPLAN '93 Conference
      on Programming Language Design and Implementation, June 1993
ftp://ftp.cs.indiana.edu/pub/scheme-repository/doc/pubs/guardians.ps.gz

                              paper.dbe93
                               incomplete
                             drj 1996-10-08


ABSTRACT:

This paper describes a new language feature that allows dynamically allocated 
object to be saved from deallocation by an automatic storage management system 
so that clean-up or other actions can be performed using the data stored within 
the objects.  The program has full control over the timing of clean-up actions, 
which eliminates several potential problems and often eliminates the need for 
critical sections in code that interacts with clean-up actions.  Our 
implementation is "generation-friendly" in the sense that the additional 
overhead within the mutator is proportional to the number of clean-up actions 
actually performed.

REVIEWS:

A simple, clean and efficient interface for finalization services, that gives 
the user control of all those problematic ordering issues.  An implementation 
in a generational GC is described.  The concept could be extended to guarding 
against other changes as well.  pekka 1998-04-20

ATTACHMENT
   "GUARDI~1.PS"

