       CACHING CONSIDERATIONS FOR GENERATIONAL GARBAGE COLLECTION
             Paul R. Wilson;Michael S. Lam;Thomas G. Moher
                             ACM, 01/06/92
                                L&FP 92

                              paper.wlm92
                                 draft
                            nickb 1996-08-13


ABSTRACT:

[No abstract. From the "overview":] GC systems allocate and reuse memory 
cyclically; this imposes a cyclic pattern on memory accesses that has its own 
distinctive locality characteristics. The cyclic reuse of memory tends to 
defeat caching strategies if the reuse cycle is too large to fit in fast 
memory. Generational GCs allow a smaller amount of memory to be reused more 
often. This improves VM performance, because the frequently-reused area stays 
in main memory. The same principle can be applied at the level of high-speed 
cache memories, if the cache is larger than the youngest generation. Because of 
the repeated cycling through a fixed amount of memory, however, generational GC 
interacts with cache design in unusual ways, and modestly set-associative 
caches can significantly outperform direct-mapped caches.

While our measurements do not show very high miss rates for GCed systems, they 
indicate that performance problems are likely in faster next-generation 
systems, where second-level cache misses may cost scores of cycles. Software 
techniques can improve cache performance of garbage-collected systems, by 
decreasing the cache "footprint" of the youngest generation; compiler 
techniques that reduce the amount of heap allocation also improve locality. 
Still, garbage-collected systems with a high rate of heap allocation require 
somewhat more cache capacity and/or main memory bandwidth than conventional 
systems.

ATTACHMENT
   "cache.ps"

