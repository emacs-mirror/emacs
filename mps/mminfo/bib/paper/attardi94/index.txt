               A CUSTOMISABLE MEMORY MANAGEMENT FRAMEWORK
                     Giuseppe Attardi;Tito Flagella
                                01/02/94
                               TR-94-010

                            paper.attardi94
                                 draft
                           richard 1995-08-03


ABSTRACT:

Memory management is a critical issue for many large object-oriented 
applications, but in C++ only explicit memory reclamation through the delete 
operator is generally available. We analyse different possibilities for memory 
management in C++ and present a dynamic memory management framework which can 
be customised to the need of specific applications. The framework allows full 
integration and coexistence of different memory management techniques. The 
Customisable Memory Management (CMM) is based on a primary collector which 
exploits an evolution of Bartlett's mostly copying garbage collector. 
Specialised collectors can be built for separate memory heaps. A Heap class 
encapsulates the allocation strategy for each heap. We show how to emulate 
different garbage collection styles or user-specific memory management 
techniques. The CMM is implemented in C++ without any special support in the 
language or the compiler. The techniques used in the CMM are general enough to 
be applicable also to other languages.

REVIEWS:

See review of paper.afi98 for comments.

ATTACHMENT
   "Attardi94.ps"

