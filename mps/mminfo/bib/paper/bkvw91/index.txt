                     AN ELEMENTARY COST MODEL FOR C
                  J Bentley;Brian Kernighan;C Van Wyk
                                01/01/91
                  Unix Review, Volume 9, No 2, p38-48
                      mailto:bwk@research.att.com

                              paper.bkvw91
                                 draft
                             drj 1995-07-31


ABSTRACT:

When software performance matters, it is important to know the costs of
primitive operations on your system.  This paper describes a series of
simple programs for getting ballpark performance estimates.  The first
program can by typed by a reader in a few minutes.  We describe the
results of running the final program on machines ranging from personal
computers to supercomputers.

REVIEWS:

drj: they aim to find out the cost of operations like +, *, [],
malloc(), sscanf(), etc.  It is an admittedly naive approach,
sidestepping issues such as compiler optimisation, vectorization,  and
memory hierarchy.  A survey of 6 seasoned C programmers (and compiler
implementors) indicates that is very hard to estimate the cost of some
or all of these operations (everyone was off by a factor 5 for at least
one operation).

They give an example of working out how to evaluate the cost of a code
fragment by hand (given the cost of the primitive operations).  Having
worked out the cost of a code fragment, it is clear where the cost is
going, and where optimisations could be made.

ATTACHMENT
   "BKVW91.PS"

