                  POINTER SWIZZLING AT PAGE FAULT TIME
                    Paul R. Wilson;Sheetal V. Kakkad
                University of Texas at Austin, 01/09/92
              ftp://ftp.cs.utexas.edu/pub/garbage/swizz.ps

                              paper.wil92a
                                 draft
                           richard 1995-12-01


ABSTRACT:

Pointer swizzling at page fault time is a novel address translation mechanism 
that exploits conventional address translation hardware.  It can support huge 
address spaces efficiently without long hardware addresses; such large address 
spaces are attractive for persistent object stores, distributed shared 
memories, and shared address space operating systems.  This swizzling scheme 
can be used to provide data compatibility across machines with different word 
sizes, and even to provide binary code compatibility across machines with 
different hardware address sizes.

Pointers are translated ("swizzled") from a long format to a shorter 
hardware-supported format at page fault time.  No extra hardware is required, 
and no continual software overhead is incurred by presence checks of 
indirection of pointers.  This pagewise technique exploits temporal and spatial 
locality in much the same way as normal virtual memory; this gives it many 
desirable performance characteristics, especially given the trend toward larger 
main memories.  It is easy to implement using common compilers and operating 
systems.

ATTACHMENT
   "swizz.ps"

