             HOARD: A FAST, SCALABLE, AND MEMORY-EFFICIENT
              ALLOCATOR FOR SHARED-MEMORY MULTIPROCESSORS
                   Emery D. Berger;Robert D. Blumofe
                University of Texas at Austin, 01/11/99
                              UTCS TR99-22
http://www.cs.utexas.edu/users/emery/hoard/download2.cgi?location=UTCS-TR99-22.ps.gz

                               paper.bb99
                               incomplete
                            pekka 1999-11-05


ABSTRACT:

In this paper, we present Hoard, a memory allocator for shared-memory 
multiprocessors.  We prove that its worst-case memory fragmentation is 
asymptotically equivalents to that of an optimal uniprocessor allocator.  We 
present experiments that demonstrate its speed and scalability.

REVIEWS:

They have a heap per processor plus a global heap; allocation is from the 
processor's own heap; freeing has to find the superblock (like segment) and 
return the block to that.  Memory is moved between the processor heaps and the 
global heap in superblocks (> page).  Uses segregated free-lists; that is, 
there are actually separate heaps for each size class.  Freeing needs to 
synchronize access to the superblock, but they point out that freeing another 
processor's block is rare (at least rarer than your own).

The benchmarks look good.  They get bitten once, exactly where you'd expect 
(fragmentation due to large segment size and large number of size classes), but 
get impressive scaling behavior.  The measurements of the "Private heaps" 
allocator for the Larsen benchmark slack off inexplicably above 10 processors 
-- perhaps it gets fast enough to be limited by some other subsystem?

They don't say how they access thread/processor-local data.  Significantly, 
they don't give speed figures against a uniprocessor allocator, but you can see 
on the runtime graphs of "shbench" and "mm", that they start at a significant 
disadvantage to the Solaris allocator.

There's a nice review of other recent work on allocators.

pekka 1999-11-08

ATTACHMENT
   "UTCS-TR99-22.ps"

