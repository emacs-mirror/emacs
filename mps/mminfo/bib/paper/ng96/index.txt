    EFFICIENT GARBAGE COLLECTION FOR LARGE OBJECT-ORIENTED DATABASES
                                T. C. Ng
                           MIT LCS, 01/05/96
                             MIT/LCS/TR-692
 ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tr.outbox/MIT-LCS-TR-692.ps.gz

                               paper.ng96
                                 draft
                             drj 1997-01-17


ABSTRACT:

This thesis presents the design of an efficient garbage collection scheme for 
large, persistent object-oriented databases in a client-server environment. The 
scheme uses a partitioned approach. A database is divided into disjoint 
partitions and each partition is collected independently. The scheme maintains 
transaction semantics and survives server crashes. It runs concurrently with 
client applications with no extra overhead.  It also compacts objects in the 
partition being collected.  To allow partitions to be collected independently, 
the database server has to maintain a list of inter-partition object references 
for each partition. We call this list an inter-partition reference list (IRL).  
One major problem with any partitioned garbage collection scheme is the cost 
associated with the updates of IRLs, which have to be maintained persistently 
because they are too expensive to recompute after server crashes. We describe a 
new technique that reduces the number of I/O operations required to update the 
IRLs. IRL update operations are logged and deferred. The number of I/Os are 
reduced by re-ordering and processing the IRL updates in batches at some later 
time.

ATTACHMENT
   "MIT-LC~1.PS"

