                    NEW DIMENSIONS IN HEAP PROFILING
                      Colin Runciman;Niklas Rojemo
                      University of York, 01/07/94
            ftp://ftp.cs.york.ac.uk/reports/YCS-95-256.ps.Z

                               paper.rr94
                                 draft
                           richard 1996-08-07


ABSTRACT:

First-generation heap profilers for lazy functional languages have proved to be 
effective tools for locating some kinds of space faults, but in other cases 
they cannot provide sufficient information to solve the problem.  This paper 
describes the design, implementation and use of a new profiler that goes beyond 
the two-dimensional "who produces what" view of heap cells to provide 
information about their more dynamic and structural attributes.  Specifically, 
the new profiler can distinguish between cells according to their 
_eventual_lifetime_, or on the basis of the _closure_retainers_ by virtue of 
which they remain part of the live heap.  A bootstrapping Haskell compiler 
(nhc) hosts the implementation: among examples of the profiler's use we include 
self-application to nhc.  Another example is the original heap-profiling case 
study "clausify", which now consumes even less memory and is much faster.

REVIEWS:

See also paper.rr95, which is a later version.

ATTACHMENT
   "YCS-95-256.ps"

