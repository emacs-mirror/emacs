   C--: A PORTABLE ASSEMBLY LANGUAGE THAT SUPPORTS GARBAGE COLLECTION
              Simon Peyton Jones;Norman Ramsey;Fermin Reig
                                01/07/99
        http://research.microsoft.com/~simonpj/papers/ppdp.ps.gz

                              paper.pjrr99
                               incomplete
                            tony 1999-12-02


ABSTRACT:

For a compiler writer, generating good machine code for a variety of platforms 
is hard work. One might try to reuse a retargetable code generator, but code 
generators are complex and difficult to use, and they limit one's choice of 
implementation language. One might try to use C as a portable assembly 
language, but C limits the compiler writer's flexibility and the performance of 
the resulting code. The wide use of C, despite these drawbacks, argues for a 
portable assembly language. C-- is a new language designed expressly for this 
purpose. The use of a portable assembly language introduces new problems in the 
support of such high-level run-time services as garbage collection, exception 
handling, concurrency, profiling, and debugging. We address these problems by 
combining the C-- language with a C-- run-time interface. The combination is 
designed to allow the compiler writer a choice of source-language semantics and 
implementation techniques, while still providing good performance. 

REVIEWS:

tony: This is a follow-on from the work-in-progress described in paper.pjr98(0)
. Still not enough detail about how GC integrates with C-- with native threads.

ATTACHMENT
   "ppdp_ps.gz"

