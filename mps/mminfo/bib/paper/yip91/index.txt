                INCREMENTAL, GENERATIONAL MOSTLY-COPYING
            GARBAGE COLLECTION IN UNCOOPERATIVE ENVIRONMENTS
                               G. May Yip
                 Digital Equipment Corporation, Western
              Research Laboratory, 250 University Avenue,
               Palo Alto, California 94301, USA, 01/06/91
  ftp://gatekeeper.dec.com/pub/DEC/WRL/research-reports/WRL-TR-91.8.ps

                              paper.yip91
                                 draft
                           richard 1995-08-03


ABSTRACT:

The thesis of this project is that incremental collection can be done feasibly 
and efficiently in an architecture and compiler independent manner. The design 
and implementation of an incremental, generational mostly-copying garbage 
collector for C++ is presented. The collector achieves, simultaneously, 
real-time performance (from incremental collection), low total garbage 
collection delay (from generational collection), and the ability to function 
without hardware and compiler support (from mostly-copying collection).

The incremental collector runs on commercially-available uniprocessors, such as 
the DECStation 3100, without any special hardware support. It uses UNIX's user 
controllable page protection facility (mprotect) to synchronize between the 
scanner (of the collector) and the mutator (of the application program). Its 
implementation does not require any modification to the C++ compiler. The 
maximum garbage collection pause is well within the 100-millisecond limit 
imposed by real-time applications executing on interactive workstations. 
Compared to its non-incremental version, the total execution time of the 
incremental collector is not adversely affected.

ATTACHMENTS
   "Yip91.ps"
   "Yip91.pdf"

