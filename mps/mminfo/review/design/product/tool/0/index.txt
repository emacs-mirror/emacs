                    REVIEW OF DESIGN.PRODUCT.TOOL(0)
                      review.design.product.tool.0
                           incomplete review
                           gavinm 1997-02-19

Rules: rule.design
Source: analysis.product, overview.mps.usage
Candidate status: draft

Author: ptw
Leader: gavinm
Editor: ptw
Scribe: gavinm

Entry: entry.universal

Loggingstart: 15:10
Loggingend: 15:46

Rate: 0.125 pages
Length: 5

Kickoff start: 1997-02-19 14:15 Byre
Kickoff end: 14:24


ISSUES:

DRJ: Source(analysis.mps.events), 47 minutes, 3M 5m 2q
Richard: Source(mail.*), 35 minutes, 11M 2I
NickB: Source(design.mps.io), 43 minutes, 12M 3m 
PTW: Source(analysis.task), 30 minutes, 11M 4m 1q 1I
GavinM: Source(analysis.product), 45 minutes, 5M 9m 1q

DRJ:
1. - M Lacking in tags definitions and references
2. .design,- M Much of this is derived from requirements and model of use, but 
it isn't clear how
3. .model M Missing a load of objects: Tracers, APs, Shields, Threads, Locks, 
Location Depedencies, Roots, and Formats (see impl.h.mpmtypes)

Richard:
[See mail]

NickB:
4. Header M Should identify what further design work is needed: filter 
language; upstream filters; query language; UI; test jig; diffing
5. .events M e/Events/Event classes/
6. .model,last-para M Needs clarifying
7. .model.space M e/In general/typically/
8. .model.vm M What about client memory?
9. .filter M Need to say something here about why filter language needs to be 
simple; so that filters can be passed upstream?
10. .query M Do't understand: Total Type, Total creator, Data graph

PTW:
11. Header M Sources should be more obvious
12. Header M analysis.task was overlooked
13. .req.attributes-.req.statistics M These are solutions
14. .design M why object-oriented?
15. .model M What requirement implies this structure of the model?
16. .model.vm M Should pages be modelled?
17. .model.object M This is completely vague
18. .filter M "Object attribute" needs to be more general
19. .query M "Data graph" -- what did I mean there
20. .plot M What is the source for the design of the plot, tufte or what?
21. .ui M test jig seems to be more than a ui feature; probably should be an 
object

GavinM:
22. .req.feedback M behaviour of the client or MPS?
23. .design,2para,last-sent M "should" -- will it or won't it?
24. .model.mm,2sent M Less than clear
25. - M Nothing about testing

DRJ:
26. Header m Missing introduction: readership
27. REQUIREMENTS m Is it required that feedback always go via a person; do we 
support automatic feedback, e.g. hinting to a compiler which allocation sites 
should be inlined?
28. " m It's not clear whether tool is required to plug into running memory 
managers or just use dump files, or both
29. .filter m It's not clear why boolean combinations of filters are not allowed
30. .filter,.query m Terms: History, subset of history, and series of events 
are sometimes confused; perhaps there should be a term 
31. REQUIREMENTS q Is it required that we support debugging of the MPS?
32. " q Is it required that we support debugging of the client's runtime?
33. - IN Should have book.tufte

NickB:
34. .model.seg m Should have arena as attribute

PTW:
35. .query m "[For introspection" -- this needs to be related to the 
requirements
36. " m Lifetime is also known as piano roll
37. .plot m "Plot" is used in two senses here
38. - q In many places there is "not limited to"; is this useful at all in this 
design?
39. rule.design I Should there be a rule on completeness?

GavinM:
40. .background m Need linebreak
41. REQUIREMENTS m These aren't sentences; nor are they consistently phrased
42. .req.platform m How do we know what platforms we need?
43. .req.level m "expert" should be "intermediate or advanced" as 
overview.mps.usage
44. .req.attributes m analyse what?
45. .design m Need paragraph break
46. .query m "Total space" poor term, perhaps "total size"

DRJ:
47. .ui qN How come we get em-dashes?



Brainstorm start: 16:04
Brainstorm end: 17:00
Brainstorm length: 56


BRAINSTORM:

Requirements

PTW: Originally these were indented.  

Richard: Layout was used to convey information but was lost by munging the 
document.

GavinM: Is it a good idea to prepare documents in Word?

DRJ: It would be nice to be able to use any editor.

Could have checklist for step of importing a document into Notes.  
  - Is your document sensitive to change of whitespace

It is helpful to take top-level requirements and break them down.  Borderline 
is often unclear.

NickB: These are requirements to support common development task.

Richard: Is supporting common dev tasks a req?  What about going to the toilet?

DRJ: Should be productivity per cost.  

PTW: Can't keep going back to the top level.

Richard: It's not clear where the other level is.

DRJ: Guide for writing design.

PTW: This was written free-form.

Richard: Why do we have a tool at all?

GavinM: analysis.product.tool

Richard: There's no product overview.  The product has parts.  We have 
overview.mps.usage.

DRJ: These requirements are sourced from a missing document.

Richard: I'll start it.

GavinM: No documents above prevents proper justification network.

PTW: I had to piece it together from more pieces than I should have.  There 
were enough hints such that I could make a start.  There are a lot a things in 
people's brains and on blackboards.


Certainty

Richard: Tied in with status.  Should be dated statement of how a design 
document fits in, whether it's a proposal or it's been implemented or whatever.

GavinM: Encourage people to have introduction section which has all these 
things.  Proforma?

Richard: rule.design.status

Also need to say in guide that each part of design needs status.  Possibly rule.

GavinM: Could have had placeholder documents for incomplete design.

PTW: More of a template, section on open issues


Completeness

Richard: I've put this in the guide.

PTW: That would have been helpful.


Review Process

DRJ: I felt hesitant about logging things and didn't.  It was OK because 
Richard found them all.  Perhaps it's because I'm not used to reviewing 
design.  

GavinM: I'm hesitant to criticise comprehensibility.

Richard: I hesitate to criticise things that are hard and that I can't do 
myself.  We need to get there.

DRJ: We need to know what design to look like for our purposes.

Richard: We are getting better.  Don't hesitate to make a criticism if there is 
a contructive thing to go with it.  

It's a lot harder to review design.  

DRJ: Previously we haven't had much use for design.  It's been simple enough to 
understand before.

Richard: It's hard to understand something when you're not sure what it should 
be like.

PTW: Time pressure in our formal review is too much to do a proper design 
review.  Concepts are harder to comprehend.  Our formal reviews (rule-driven), 
you feel a time-pressure.  It works well at a detailed level like code, but for 
design, the most important comments came a couple of days after the draft 
design was circulated.  

Richard: There is some sort of distinction between having comments and what 
review should be acheiving.  The ideal is that review reveals no problems.  You 
should attempt to minimise the number of defects found.  Entry check on major 
defects.

We haven't got formal review doing the right thing.  Tucker's comments are 
valuable, but aren't review-type things.

GavinM: This is suggesting a mini-review to prevent defects review.

Richard: Inspection ideally doesn't find problems.  It's supposed to be a 
quality gate.  There's something else where comments are made.  We're in danger 
of mixing the two up.

DRJ: When people mail things round I find I don't get around to reading them.  

Richard: You're saying RFCs should be more formal.

GavinM: Mailed round RFCs are poor at issue tracking.

Richard: Feinman said that NASA's formal reviews found few defects.  

GavinM: Quoted NASA general as trying to abolish it.

Richard: There are other forms of review, mailing it round and discussing it.  
We don't submit code when it's half finished.

GavinM: Two aspects:
  - Design isn't compiled;
  - Major psychological difference in merging code changes into trunk.

Richard: We don't have a culture of using design so much.  If someone were 
going to use my document the next day, I'd be more careful about it.  There's 
no feeling that we need to get it right for the rest of the group.

There is a place for commenting over several days.  They are important comments.

GavinM: So you're saying that we don't aim for RFCs to receive no comments.  
This is important in clarifying differences in processes.

Whiteboard brainstorms are weak in process.

Richard: Shared whiteboard is too expensive, apparently.  Like conference 
phones.  Many thousands of dollars.

DRJ: Design is creative.

PTW: Code review often reverts to the design.  Because we haven't reviewed the 
design.

Richard: It would be nice if all the design were in design documents.

DRJ: Willing to try RFC meeting.

GavinM: All this review and meetings slows things down.

Richard: Meetings let us control the time used.

GavinM: gilb.book93, p5 Supports consensus reviews to let things "settle down" 
technically.

Richard: Whiteboard leads to writeup and we could go for concensus on them.  
They identify alternatives.  

GavinM: Tucker, would you like to be involved in whiteboard review?

PTW: If there were no technical barrier, I would like to participate.

Richard: I spend a lot of time talking and not enough listening.




Edit notes:

23-04-1997 3 hours

Major:

richard.req: Fix: incorporate mail.richard.1997-02-19-15-50
richard.status: Fix: added .status
NickB.7: Fix: done
ptw.11: Fix: added .sources
ptw.12: Fix: added
ptw.13: Fix: removed
GavinM.22: Fix: client
DRJ.26: Fix: added .readership

Minor:

GavinM.40,41,43,44,45: Fix



Exit: exit.universal
