               REVIEW OF PROCESS.DARWIN(1) ON 1997-06-04
                        review.process.darwin.1
                           incomplete review
                           gavinm 1997-06-03

Rules: rule.universal
Checklists: check.universal.cons
Source: Darwin documentation, meeting.product.1997-01-08, 
mail.richard.1996-11-08.12-35, meeting.qa.1997-02-27(0), 
mail.gavinm.1997-03-24.16-48(0), mail.gavinm.1997-04-18.11-42(0)
Candidate status: draft

Author: gavinm
Leader: gavinm
Editor: gavinm
Scribe: gavinm

Entry: entry.universal
Entry manpower: .2


Entry notes:

entry.universal.source-approved: Not met.
entry.universal.rules.available: No rules for process
entry.universal.training: Failed as usual

These transgression are minor and habitual.  GavinM 1997-06-03


Loggingstart: 15:15 BST
Loggingend: 16:06
Logginglength: 51
Loggingrate: 1.8

Checkers: Richard;DRJ;GavinM;Sheep;PTW
Rate: 1/6 pages
Length: 10 pages (excluding history)
Actual checking time: 264

Kickoff start: 1997-06-04 14:00 BST Pool Hall
Kickoff end: 14:06
Kickoff length: 6


ISSUES:

[ Copied from irc.mm.1997-06-04 with free deletion. ]

Richard: I have 11 majors, 12 minors, 1 question, 1 comment.  Total 25 issues.  
I spent 40 minutes checking.
GavinM: 21m  54 minutes
PTW: 46minutes, interrupted rest of time  M 2, m 1, I 3, Q 4
Sheep: too confused to put in majors or minors  + all the time looking [69 
minutes]
DRJ: 7Major 5Minor 55 minutes

1. Richard INTRODUCTION M rule.universal.purpose: Purpose not clear.  Is it an 
introduction to newcomers?  Are the procedures derived from it?  Is it 
authoritative?
2. Richard general, M, Document is backwards.  Overview should be at the 
beginning.
3. Richard .def.ver, M, Disagree -- it's a specification for a deliverable and 
a set of releases.
4. Richard .def.prod, M, Disagree -- it's an entity of some other sort.  A 
deliverable is a particular thing which is delivered -- a release perhaps.
5. Richard .def.req, M, rule.universal.cons: "Attribute" inconsistent with 
"attribute requirement".  It's a requirement.
6. Richard .def.req, M, rule.universal.cons: "Should" -- not decided by the 
existence of a request
7. Richard general, M, rule.universal.clear: Tenses make the time at which 
these various things take place very unclear.  It all sounds like past history.
8. Richard .over.ver, M, rule.universal.clear: Stress that this is continuous 
and ongoing.
9. Richard .over.fea, M, rule.universal.clear: How does he know how many?
10. Richard .over.few, M, rule.universal.clear: Requirements are created by 
whom?
11. Richard .status.rel.dev, M, No.  But changes can only be made to the 
product at this stage.  Development work can be done at any time.
12. DRJ general M it is not stated what the process is intended to do
13. DRJ header M missing readership
14. DRJ defintions M should say DARWIN is and where to find out about it
15. DRJ .def.rel.tree M 2nd clause unclear
16. DRJ .role.inv M this is incomplete.   what about "the box is too weak to 
support stacking 10 high"
17. DRJ overview M unclear.  it is not an overview.
18. Richard guide.?, IN, New general guidelines.  Overviews must stand 
more-or-less alone.
19. DRJ .over.ass + others M unclear when we are talking about DARWIN as 
opposed to the process
20. PTW general M Where does documentation fit?  Is it separate, like QA or 
part of Development?  Requests may or may not change documentation, 
documentation changes may drive QA of new features
21. PTW Physiology M On rework, assignment must revert to Implementing, no? So 
can release again? Does there really need to be a rework state?
22. Sheep - M I'm confused about what a status is there seems to be too many 
status
23. Richard general, NM, The process itself is not justified at all.  Why do 
product evolution?
24. Sheep - M pictures are good but seems hard correlate with the text.
25. PTW .status.ass m perhaps .status.asgn?
26. Richard .def.req, m, rule.universal.simple: It's a fix if it was intended, 
a feature if not.  Keep it simple.
27. Richard .def.cha, m, rule.universal.clear: Not clear.
28. Richard .def.ass, m, rule.universal.cons: Requests are not "achieved".
29. Richard .def.ass, m, rule.universal.clear: Too many negatives.
30. DRJ .def.rel.tree m "but" is a strange connector
31. DRJ .def.req.fea m aka an Request for Enhancement
32. DRJ .def.req.fix m clarity.  aka a "bug"
33. DRJ .def.ass m the number "four" is magic.
34. GavinM .def.rel.tree m After "except the first", "in a product"
35. GavinM .def.req.fea m Should clarify that requirements can be either 
attribute or functional
36. GavinM .def.req m A request is associated with a product; this isn't 
mentioned
37. GavinM .def.cha m Suggestion for "otherwise", read "apart from that"
38. Richard .tag.*, m, rule.universal.cons: Inconsistent tag elements. 
(Inconsistent with the elements used in DARWIN itself, that is.)
39. Richard general, Q, Why all the TLAs?
40. Richard .role, m, Unjustified assertion that there must be at least three.
41. Richard .role.qa, C, Suggest "Quality Assessor".
42. DRJ general Nm tagging of this doc inconsistent
43. DRJ .role m last sentence needs justification
44. DRJ .role.req m "internal customers" are not mentioned in above list.
45. Sheep .role.* q why is there a diffrent person for  .role.pdm and 
.role.dev-man ?
46. PTW - Nm is dev-man PrM?
47. DRJ .over.req.note m "successfully inherited" unclear
48. Richard .fig.ver, m, rule.universal.clear: Actual spec evolution arrow 
should be outside main diagram bounding box.
49. Richard .fig.ver, m, Caption should be in text not drawing.
50. Richard .fig.ver, m, rule.universal.clear: Arrowheads inconsistent or 
meaning of inconsistency is unclear.
51. GavinM .over.fea m This should not be the only record of customer 
requirements
52. GavinM .over m Need stuff about why we need MM Evolution.  Suggest: 
Everyone know's what he's doing; Things don't get droppped; Line of 
communication between Product manager and Development Manager.
53. GavinM .over m Need to mention what MM Evolution coveres, such as: 
Software, Documentation, Marketing stuff, Physical
54. GavinM .fig.ver,.fig.hope m Diagrams should print correctly
55. Sheep .fig.ver m legend needs thin line
56. Richard .fig.*, Nm, Notes is broken.
57. GavinM .over.req m Should mention development and release branches in first 
bullet.
58. GavinM .over.change m First sentence doesn't mention assignments.
59. Richard STATUSES Nm It seems like a lot of redundant info, given 
proc.*.entry and proc.*.exit, and .fig.workflow.
60. Sheep STATUSES m confused about status.rel.waiting and states.req.waiting 
and diagram
61. GavinM .status.req.waiting m Can schedule at this stage
62. GavinM .status.req.active m e/changed/changes/ two cases
63. GavinM: .status.cha-dev m After "see .status.ass" "for order"
64. PTW .status.ass m perhaps .status.asgn?
65. GavinM .status.cha-dev m Mention proc..change.assign
66. GavinM status.cha-dev m Mention change exception somewhere
67. PTW .status.ass m perhaps .status.asgn?
68. GavinM .status.ass m Before "order" "increasing"
69. GavinM .status.ass.release and elsewhere m After "working source" "of the 
release"
70. GavinM .status.ass.reworking m Delete "be"
71. GavinM .status.ass.approving m For "has" read "have"
72. PTW Physiology q Assignments may not start until release starts?  Theory or 
practice?
73. DRJ .fig.workflow NM inputs to ovals unclear.  especially the one on bottom 
74. PTW Physiology q Purpose of Assignment releasing state?
75. Richard .fig.workflow, nC, The workflow diagram is super.
76. GavinM .fig.workflow m Procedure boxes too light
77. PTW Physiology Q Purpose of "only if all" bullets on assignment->change 
automatic 
78. Sheep .fig.workflow q after leaving re.active seems to go to create - 
waiting then direct to qa is this true ?
79. GavinM .fig.workflow m "(only withoin one column" is now redundant as there 
are no other lines with two arrows.
80. DRJ .fig.workflow Nm lozenges should be "optically aligned" wrt to square 
boxes
81. Sheep .fig.workflow C comment the diagram is the best bit
82. Richard C I agree with Sheep.  It should be at the start, with the overview.
83. PTW .fig.workflow Nq request.close is only if Accepted and Abandoned by QA?
84. PTW .fig.workflow C diagram should be only bit!
85. Sheep .fig.workflow m perhaps should swap assingment qith chage/qa to help 
read left to right 
86. DRJ .fig.workflow Nm complete is both a procedure in assignment and a 
status in assignment
87. Richard general, Nm, Too many magic numbers.  They will become inconsistent.
88. PTW meeting.qa.1997-02-27 Q What is a patch release?  Can you really 
mini-QA something?  How do you verify the patch has not broken everything else?
89. PTW meeting.qa.1997-02-27 I Very important that full-QA stay "in practice", 
e.g., on milestone releases
90. PTW meeting.qa.1997-02-27 I Delivery on floppies - media validation is QA 
of manufacturing process, a separate "product"  QA releases to manufacturing
91. PTW meeting.qa.1997-02-27 I Release must have a BOM (bill of materials, 
packing list), QA validates everything on that list
92. Richard - NM, goals of DARWIN not stated!



Brainstorm start: 16:23 BST
Brainstorm end: 17:01
Brainstorm length: 38


BRAINSTORM:

[ Copied from irc.mm.1997-06-04 with free deletion. ]

.issue.1: .richard.14-19-34: general, M, Document is backwards.  Overview 
should be at the beginning.
.richard.15-24-29: And drj's issue, that the overview isn't.
.richard.15-24-35: (Which I agree with.)
.gavinm.15-24-35: Discuss briefly how this happened, and possible solutions.  
Then we go on to process improvement to stop it happenning again.
.ptw.15-24-47: I was serious with my comment that the diagram should be the 
document
.ptw.15-25-02: If I understood the diagram, the rest of the document woudl be 
superfluous
.ptw.15-25-09: It is a good diagram
.gavinm.15-25-18: The diagram needs some explanation to stand on its own.  I 
could provide that.
.ptw.15-25-27: It took me most of my review time to understand it
.richard.15-25-27: I think the overview has far too much detail in it.  An 
overview should be a description that someone can read through quickly and 
understand what the document is about.  This one is obsessed with correctness.
.drj.15-25-42: it is a good diagream, and since we're sidetracked onto it, I 
should mention that the chief lack in the diagrma is that it doesn#t say who is 
responsible for what
.gavinm.15-25-49: Ah.  Perhaps it reflects its author.
.sheep.15-25-56: I agree with pwt about the diagram
.drj.15-26-00: perhaps that could be added in another diagram or as a layer in 
this one.  would be tricky to get right, but well worth it
.richard.15-26-14: I don't believe we could get away without some text.
.drj.15-26-15: I had a similar problem with the overview for the format doc I 
have been writting
.gavinm.15-26-18: I wanted to add responsibility, but couldn't think how.
.ptw.15-26-41: Yes, text is needed, but as support material
.richard.15-26-45: The diagram is a memoria technica for the document, but 
doesn't stand alone.
.sheep.15-26-51: May be a couple of diagrams could make things clear ?
.gavinm.15-26-51: The diagram wasn't enough to forestall some confusions about 
statuses.
.drj.15-27-03: a suggestion: the arrows represent actions that someone 
performs, they could be annotated somehow with the person that is responsible 
for performing them.
.richard.15-27-30: I really don't think the diagram is enough.  It documents 
the _procedure_ to some extent, and the flow of thigs, but there's no way it 
will discuss the justification for things.
.gavinm.15-27-36: The boxes represent actions.
.richard.15-27-50: It doesn't define terms, or responsibilities, either.
.gavinm.15-27-54: The process is under-justified.
.drj.15-27-54: in general I think the overview should allude to terms, describe 
them briefly, and explain where fuller documentation is availabnle for all 
terms that it has to introduce.
.richard.15-27-57: All these things are necessary, IMO.
.ptw.15-28-06: What is the purpose of process.darwin?  To justify, or to say 
how it is done?
.richard.15-28-19: ptw: A good question.  I asked it myself.
.gavinm.15-28-29: To provide a brief overview of what Darwin is and how we use 
it?
.richard.15-28-39: What does type.process say?
.drj.15-28-40: 10 pages is not brief
.ptw.15-28-55: I thought it was instructions on how to evolve product
.gavinm.15-29-02: Or to explain our solution to the problem of configuration 
management.
.ptw.15-29-09: not how or why we choose to do so
.richard.15-29-10: type.process.purpose says "Process documentation is supposed 
to describe and discuss all aspects of the development process, and justify 
things.
.richard.15-29-35: Instructions are proc.*
.richard.15-29-50: Process documentation is documentation of process, including 
reasons, imo.
.ptw.15-30-09: type.process.purpose nI Justification is misplaced in process 
documentation.
.richard.15-30-24: Are you confusing proc and process?
.ptw.15-30-27: Or am I confusing process with procedure
.drj.15-30-30: how do we solve the problem of getting sidetracked?  and is it 
worth it?  
.richard.15-30-33: I think so.
.richard.15-30-45: Are we sidetracked?  What was the question again>?
.drj.15-30-54: it was about the overview
.gavinm.15-31-06: Perhaps a process document should be the top-level document 
for a process, and the various procedure that form part of the process should 
be (hypertextually) part of it. 
.richard.15-31-17: GavinM: That was my intention, I think.
.gavinm.15-31-27: DRJ, i think this is productive.
.drj.15-31-31: so do I
.richard.15-31-47: Overviews could be improved by saying what an overview is 
and how to write one, somewhere.  Rules for overviews, perhaps.  A guide to 
writing an overview.
.drj.15-32-09: one way of improving our doc in general would be to get a 
documentor to write it.
.drj.15-32-27: or alternatively to train the authors in technical writing.
.gavinm.15-32-40: I think many of these major issues could be solved by my 
having a clearer idea of what a process document is.  That's a process 
imporvement we're currently brainstorming.
.richard.15-33-35: OK.  So my idea was that process documents should explain 
the design of process, and procedure documents are the step by step 
implementations of that design.
.drj.15-33-37: richard had a rule earlier for overviews "they should work 
standalone"
.gavinm.15-33-44: I'd be delighted to be trained in technical writing.
.drj.15-33-53: so would I.  as it happens
.sheep.15-34-03: not me
.richard.15-34-10: Nobody mentioned technical writing in performance reviews.
.drj.15-34-18: improving my writing ability (though not particularly technical 
writing) is one reason why I am doing another degree.
.gavinm.15-34-19: "We promise not to train you."
.ptw.15-34-25: I did!
.ptw.15-34-36: my goal 1: 1/3 book
.gavinm.15-34-38: Can I mention it now?  I
.richard.15-34-40: ptw: Indirectly, I suppose you did.
.drj.15-34-43: oops.  secret requirement.  you can newver trust your customers 
to reveal their requirements.
.gavinm.15-34-49: I didn't think that wide-spectrum training was on offer.
.richard.15-34-58: Any more on this issue?
.richard.15-35-14: gavinM: requirements are independent of the available 
solutions
.gavinm.15-35-41: Consider it mentioned.
.sheep.15-36-11: As a beginner I think it would be nice to do a more tutorial 
like introduction

.issue.2: .richard.14-19-58: .status.rel.dev, M, No.  But changes can only be 
made to the product at this stage.  Development work can be done at any time.
.richard.15-37-02: Developers are free to develop at any time.  But change to 
the product must be controlled.
.richard.15-37-18: Whether or not the effort is timely is a matter for 
development management, not for DARWIN or product management.
.gavinm.15-37-46: Darwin (and presumably EP) has the idea that the start of 
work (not check-in) on an assignment is recorded, and happens when the relase 
is in development.
.gavinm.15-37-57: I don't believe this is enforced.
.ptw.15-38-00: If developers develop at any time, change is not controlled!
.richard.15-38-22: ptw: Change to the product can be controlled.  Developers 
develop on branches.
.drj.15-38-35: but if they work towards or on a particular change it shouldn't 
matter that the change isn't entirely up to date in darwin
.richard.15-38-59: I disagree with EP's attempt to integrate project and change 
management.
.richard.15-39-27: nM, goals of DARWIN not stated!
.ptw.15-39-34: Even if you develop in branches, developers will want their 
development in the product
.gavinm.15-39-45: It's important to distinguish changes to the "working source" 
(i.e. the relase branch or sometimes trunk) from other changes.
.ptw.15-39-54: Which is why developers must be in the marketing/requirements 
loop
.richard.15-40-00: Developers can want what they like, but change will be 
controlled by the process.
.gavinm.15-40-06: The latter changes are represented by "Implementing" as an 
Assignment status.
.richard.15-41-06: No, but seriously folks, what we're talking about here is 
whether a developer can start hacking away before a particular field is set to 
a particular value in the database.
.ptw.15-41-32: R: yes.
.ptw.15-41-48: And whether the developer can drive change/product by doing so
.richard.15-41-51: My position is that it is at the discretion of the developer 
when he works on the problem.  The main thing is to keep the product at known 
quality by controlling change.
.gavinm.15-42-19: From the release form doc: Development: Development work is 
under way. Associated changes can now be moved on from Unassigned or Waiting.
.richard.15-42-31: Development must drive change by feedback to marketing and 
product management about what is desirable and feasible.  In that way they 
control what changes get scheduled int he first place, to some extent.
.ptw.15-42-44: Okay
.richard.15-43-03: That feedback is at a higher level, not at the level of 
deltas to the product itself.
.richard.15-43-15: (Maybe all this needs to be in the document, Gavin.)_
.gavinm.15-43-22: From "The release cycle": - The product manager sets the 
release date and working source fields before development work can start on the 
release, and when work begins the release status field will be set to 
Development.
.ptw.15-43-28: But you are suggesting a looser coupling of development work and 
the darwin proc.assignment.*
.richard.15-43-51: Yes, I am suggesting that.
.ptw.15-44-03: I personally believe the developer should not have to set 
proc.ass.*, rather, PrM should handle that
.richard.15-44-17: ptw: Disagree.
.ptw.15-44-27: It is a status report, not a gating function
.richard.15-44-36: All the managers need to know who is changing what.  Me 
included.  I look at DARWIN to dinf out what's going on.
.richard.15-44-58: When people are split across sites all round the world it is 
very important to be able to see status directly.
.richard.15-45-10: The chosen communication medium for changes is the change 
record.
.richard.15-45-22: Therefore those who make the changes must communicate the 
change and edit the record.
.gavinm.15-45-28: Let's look at this another way:
.richard.15-45-32: Otherwise we're back to square one.
.gavinm.15-45-43: How early should the release be set to Development?
.ptw.15-45-54: Perhaps it is the implementation of the medium that bothers me
.gavinm.15-46-24: The implementation is only partly under our control.
.richard.15-46-46: I agree that Notes/DARWIN is not an idea implementation of 
the evolution process.  However, NickB, who was initially skeptical, is now 
dashing off work under this system with great facility.  Ask him about it.  
(He's gone home.)
.richard.15-47-07: The overhead is in the tens of minutes.
.gavinm.15-47-24: >  How early should the release be set to Development?
.ptw.15-47-33: In previous lives status was PULL, you want PUSH (from my POV)
.richard.15-47-46: ptw: I guess that's true.
.gavinm.15-47-52: What does it mean for the PdM to delay this step?
.richard.15-47-53: Otherwise people spend all their time pulling.
.richard.15-48-12: That's one of the problems that DARWIN sets out to solve.
.ptw.15-48-15: But you don't want your devo's to spend all their time pushing
.richard.15-48-42: I think you're overestimating the overhead of the procedure.
.drj.15-49-15: I don't think the overs are that great.  Once you've designed 
the change to the source, implemented it, tested it, got it reviewed, setting a 
field in a change document is trivial
.ptw.15-49-19: I'm basing it on my one experience where the overhead was ~ 
30-40%
.richard.15-49-25: drj: Right.
.gavinm.15-49-37: > How early should the release be set to Development? What 
does it mean for the PdM to delay this step?
.richard.15-49-47: ptw: Once is not enough, really.  It is a bit slow at first.
.sheep.15-49-53: Perhaps the question might be should Hq sell Evolution and 
Hope 
.ptw.15-50-04: This was my 4 glossary entries.
.ptw.15-50-11: 4 times
.drj.15-50-12: that would take till eternity
.drj.15-50-32: hmm.  for glossary entries I can see it being much less clear.
.drj.15-51-05: (perhaps because glossary entries don't get designed, tested, 
and reviewed.  and there's no compiler).
.ptw.15-51-08: Don't hqn think they are going to sell this some day?
.richard.15-51-21: ptw: Something like it, I'm sure.
.drj.15-51-30: ptw, it was a kind of pun.  eternity/eternal
.drj.15-51-36: oops.  I explained.
.gavinm.15-52-26: Has anyone any process improvement suggestions on this issue?
.richard.15-52-45: Yes.  All this discussion was not adequately explained in 
process.darwin.
.richard.15-52-51: Otherwise we wouldn't need to discuss it.
.richard.15-52-57: Therefore the document is deficient.
.gavinm.15-53-05: How can we prevent unresolved issues like this from sneaking 
into process?
.ptw.15-53-34: Try again?
.richard.15-53-43: I don't know.

.issue.3: .sheep.14-35-57: I'm confused about what a status is there seems to 
be too many status
.gavinm.15-54-34: How did this happen?  How can we prevent it?
.richard.15-54-40: There was too much detail in the document about all this.
.gavinm.15-54-54: Too much detail?
.richard.15-55-00: I think this is related to my issue abot redundancy.  Let 
the diagram exmplain the statuses.
.drj.15-55-00: much of which is superseded by the diagram
.richard.15-55-06: Massive amounts of detail.
..gavinm.15-55-46: Ok.  I need to elimintae redeundancy more when saying the 
same thing twice in words and pictures.
.richard.15-56-18: GavinM: I think the "level" of the document needs to be 
raised.  More discussion, less detail.
.drj.15-56-46: yes.  process documents should be an overview in themselves 
probably.
.gavinm.15-56-50: I think we've covered my fourth issue, so I'll turn to review 
process itself. 

.issue.4 Has anyone any issues about review process to raise?
.richard.15-57-18: IRC: Good for brainstorms, bad for ordered meetings (at the 
moment)
.ptw.15-57-22: Yes,  I can't type / by itself
.ptw.15-57-33: IRC is not registered
.drj.15-57-37: perhaps we need a different set of symbols / conventions then
.richard.15-57-40: We need some conventions for dealing with logging meetings 
by IRC.
.gavinm.15-57-40: I liked the way logging went.  I managed to concentrate on 
other people's issue a lot more.
.ptw.15-57-46: Is Ircle the best client?
.ptw.15-58-08: I would rather R learn how to paste individual items
.ptw.15-58-22: I think the voice-over is important
.drj.15-58-26: I felt there was lots of dead space when logging.  it improved 
when we had the convention for saying when we were ready.  even though th4e 
convention turned out to be slightly naff
.richard.15-58-29: ptw: I was being a bit provocative, I will admit.
.gavinm.15-58-47: Were you able to concentrate on looking at others' issues, 
and find new issues from them?
.richard.15-59-01: My point was that we needed some control.  Gilb says "Log as 
fast as possible."  I don't think he thought of using IRC and paste.
.ptw.15-59-05: What does the [.|..] in my input line display mean?
.drj.15-59-16: one of the problems with the big cut and paste is that when 
subsequently commenting on them, I had to find the issue in my window, read it, 
and then listen to the commentary
.ptw.15-59-24: No, I could only listen and look, not read, listen, look
.richard.15-59-27: Your flags?  Your're 'I'.
.richard.15-59-33: More than that I cannot say.
.gavinm.15-59-33: Ok.  No spamming, then.
.ptw.15-59-36: drj: YEs
.ptw.15-59-50: Whatever I means
.drj.15-59-57: so instead of suggesting some throttle, you just pointed out in 
an unhelpful way that we needed some sort of control.
.richard.16-00-03: This discussion, otoh, is working well, I think.  High rate 
and little lossage.
.gavinm.16-00-03: I find it difficult to control an IRC meeting.
.drj.16-00-09: indeed.
.drj.16-00-15: I think it works very well for discussion.
.richard.16-00-19: Gavin: I think we're unruly on IRC.
.ptw.16-00-30: Can't you throttle people if you are OP?
.gavinm.16-00-36: ACTION hits Richard with a foam rubber armadillo.

.richard.16-00-40: You can kick them off the channel.
.richard.16-00-49: Gavin: Things would be improved by conventions.
.ptw.16-00-53: IS that the only option?
.gavinm.16-00-53: That's a little heavy-weight.
.gavinm.16-01-14: I'll try to write up an RFC for IRC conventions.  I don't 
know when, but.



Number of major issues: 25
Number of minor issues: 50
Number of issues: 92

Edit manpower: 12.5


Edit notes:

1. Fixed: Revised introduction
2. Fixed: overview rewritten at beginning
3. Fixed: Incorporated in .over.version
4. Fixed: redefined as an intention
5. Fixed: removed in rephrasing
6. Fixed: removed in rephrasing
7. Fixed: After general rewrite, most tenses are present or continuous present, 
and give an ongoing sense
8. Fixed: See .over.version
9. Fixed: See .over.release
10. Fixed: See .over.request
11. Fixed: Added note to proc.assignment.begin and .over.assignment
12. Fixed: See .over and .over.req
13. Fixed: See .readership
14. Fixed: See .over
15. Fixed: Completely rephrased
16. 
17. Fixed: It is far more like an overview now
18. Edit: See guide.general(temporary)
19. Fixed: Completely rewritten
20. Fixed: See .over.cover
21. Fixed: Paragraph added to .over.assignment
22. 
23. Fixed: See .over and .over.req
24. Fixed: Workflow diagram now better documented
25. Fixed: Removed
26. Fixed: See .over.request
27. Fixed: .over.change is much clearer
28. Fixed: Completely rephrased
29. Fixed: Completely rephrased
30. Fixed: Completely rephrased
31. Fixed: See .over.request
32. Fixed: See .over.request
33. Reject: True, but it is currently a fixed part of DARWIN
34. Fixed: Completely rephrased
35. Fixed: See .over.request
36. Fixed: See .over.request
37. Fixed: 
38. Fixed: Tag elements now correspond
39. Mail: mail.gavinm.1997-06-16.09-35
40. Fixed: Was already justified, but justification is now duplicated for 
clarity
41. Fixed: 
42. Fixed: Duplicate of issue 38
43. Fixed: Duplicate of issue 40
44. Fixed: Phrasing tightened
45. Mail: mail.gavinm.1997-06-16.09-35
46. Fixed: Clarified
47. Fixed: Completely rephrased
48. Fixed: Diagram no longer cluttered with these arrows
49. Fixed: 
50. Fixed: Different arrows now have very different widths
51. Fixed: See .over.request
52. Fixed: See .over.req
53. Fixed: See .over.cover
54. Fixed: Diagrams reworked to require only horizontal text; this prints far 
more reliablyHum.
55. Fixed: Legend removed
56. Reject: True, but I can't fix Notes
57. Fixed: Completely rephrased
58. Reject: It needn't
59. Fixed: Largely removed
60. 
61. Fixed: See .workflow.waiting
62. Fixed: Removed
63. Fixed: Removed
64. Fixed: Removed
65. Fixed: Removed
66. Fixed: See .over.change
67. Fixed: Duplicate of issue 25
68. Fixed: Removed
69. Fixed: Removed
70. Fixed: Removed
71. Fixed: Removed
72. Mail: mail.gavinm.1997-06-16.09-35
73. Fixed: Clarified both by improving the diagram and by explanatory text 
74. Mail: mail.gavinm.1997-06-16.09-35
75. Forget: Thanks
76. Fixed: Now same weight, and status boxes more rounded
77. Mail: mail.gavinm.1997-06-16.09-35
78. Mail: mail.gavinm.1997-06-16.09-35
79. Reject: While redundant, it's a useful clarification
80. Reject: The lozenges should appear different
81. Forget: Thanks
82. Fixed: Moved up into overview
83. Mail: mail.gavinm.1997-06-16.09-35
84. Reject: Not quite good enough
85. Reject: Unfortunately, more logical orderings of the columns make the 
diagram far more messy
86. Fixed: Renamed to proc.assignment.end
87. Reject: I can only find two magic numbers, the number of distinct people 
required for roles, and the maximum number of assignments per change.  The 
former is unlikely to change and is not absolute in any case.  The latter may 
change with Lucy, but that will be a major upheaval anyway.
88. Mail: mail.gavinm.1997-06-16.09-35
89. Edit: Added note to meeting.qa.1997-02-27
90. Edit: Added note to meeting.qa.1997-02-27
91. Edit: Added note to meeting.qa.1997-02-27
92. Fixed: See .over



Exit: exit.universal
