                     REVIEW NOTES FOR SWMM!SRC:VM.C
                         review.impl.c.swmm.vm
                               draft doc
                           richard 1996-06-06

logging began 1996-06-06 1340 finished 1428
richard
delete half this file
1.  1 m no standard leader comment.  Our standard or their standard?
2.  q M do we need conventions for dealing with glue code?
3.  232 M hack!
4.  237 M hack!
5.  243 q whatis mpsvmrm.h
6.  360 m what is the purpose of these global variables?  ref the interface.
7.  364 q what is the purpose of these static variables?
8.  370 q what are the requirements / prereq's for this interface
9.  372 m what is the justification. what are they for?
10. 379 M no assertions
11. 381 m reference requirements
12. 383 m this is a funny way of doing it
13. 384 M assert?
14. 386 q are these casts necessary
15. 392 m constants. no constants
16. 393, &c m should use res = thing(), if(res)
17. 399 m #ifdef
18. 408 m struct foo_s is normally typedef'ed to foo_s
19. 412 c using aux variable v avoids punning problem and is good.  rise as 
procedure
20. 443 m what does this do? comment
21. 447 m labels should be outdented.
22. 469 q is returning MM_FAILURE right?  report? log?
23. 477 M no asserts
24. 497ish q why union, use of mps_pool field is funny
25. 511 q MM_FAILURE?  we throw away failure code info
26. 513 m comment is misleading. move to next line.
27. 515-519 m could this go outside the while loop?
28. 520 M this never happens
29. 530 M no asserts
30. 531 m @@ with no explanation
31. 548 q is this documented? is this desired? what are requirements?
32. 618,639,658 m wrong!  never was true.  what does interface / req say?
33. 660ish M we don't generally check whether anything has been initialised.
34. 676 m space after comma
35. 698,732 m document status, ie unfinished
36. 737 m mm_low_check document more carefully.
37. 750 m why () round mm_free_size_limit
38. 756 m obsolete comment?
39. 776-780 c good assertions
40. 785,808 et al m size_t used in address calculation
41. 823,825,827, m lift out CSE
42. 828 m forward reference
43. 850 m backward reference
44. q sub-block frees through generic interface

nickb
45. 37-227 m ditch old rev logs. policy issue.
46. 245-358 x (271,273) M should go
47. 271 m comment / lift
48. 273 m using int32
49. 364-366 m do not need to be static
50. 377 M asserts
51. 383 m fiddly
52. 391,395,400 q call mps_class_mv 3 times? why?
53. 395,400,545 m lift
54. 405 q is this a pointer type?
55. 42,435,&c m should go
56. 477 q why are we bothering?
57. 482 m global variable usage?
58. 482,et al M assert pool type
59. 482 m document mm_free et al are not legal when applied to PSVM pool
60. 507 q does this meet our 8byte align req
61. 511 M MM_ALLOC_FAILURE
62. 513 M should be != MM_SUCCESS
63. 513-521 m bit funny / rearrange / document
64. 535 m adjust comment, adjust interf
65. 545 m lift
66. 556-616 M delete
67. 750 M not semantically the same as prev.  interface is unclear. what is 
sensible?
68. 773-862 m DWORD align data-structure pointers and assert.
69. 803 et al m do align these things
70. ... casts to from mm_addr_t mm_size_t can go.
71. ... M general lack of confidence.
drj
72. 373 c could let core rip specify them or something. or from size.
73. 381 c could be handled in arena
74. 505 m not used
75. 793 et al q can we subvert buffer protocol to use them for promises

edits.
0. done
1. done
2. raised
3. rm
4. rm
5. answered
6. ref
7. rm
8. dunno
9. justified
10. added
11. done
12. cleaned
13. done
14. no, but I prefer them
15. #define
16. done
17. abstracted (still some #ifdef though)
18. done
19. done
20. done
21. done and raised
22. yes
23. done
24. cleaned
25. corrected to MM_ALLOC_FAILURE
26. done
27. no, but needs documenting
28. does now
29. still no asserts
30. done
31. interface is wrong
32. corrected
33. done
34. done
35. done
36. done
37. rm
38. rm
39. noted
40. corrected
41. done
42. done
43. done
44. tagged
45. ditched
46. done
47. done (which?)
48. still
49. done
50. done
51. cleaned
52. style
53. done
54. done
55. done
56. done
57. done
58. done
59. not done
60. No. (does now) see impl.c.mpstd.h.hack.align
61. done
62. done
63. done
64. done
65. no
66. done
67. dunno
68. done
69. done
70. done
71. improved
72. noted
73. done (in vm)
74. rm
75. maybe

