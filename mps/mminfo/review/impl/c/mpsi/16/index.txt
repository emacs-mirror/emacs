                 REVIEW OF IMPL.C.MPSI(16), LINES 1-361
                         review.impl.c.mpsi.16
                              draft review
                           gavinm 1996-08-06

Rules: rule.universal, rule.impl
Checklists: check.impl.c.convention, check.impl.c.consistency, check.impl.c.clarity, 
check.impl.c.correctness, check.impl.c.source
Source: impl.c.mpsi(16), impl.h.mps, (impl.h.mpm, design.mps.interface, 
design.mps.class-interface)
Candidate status: accepted

Author: drj;richard
Leader: gavinm
Editor: richard
Scribe: gavinm
Approved: now

Entry: entry.universal, entry.impl
Entry manpower: 2


Entry notes:

impl.c.mpsi(15)
Failed entry.universal.rules-approved on all rules.
Failed entry.universal.source-approved on all sources.
Failed entry.universal.training as usual.

Resubmitted as impl.c.mpsi(16) by Richard (who spent 1.5 hours polishing mpsi.c).
Brief check finds three typoes, one major.


Loggingstart: 15:04
Loggingend: 15:33
Logginglength: 29
Loggingrate: 2.1

Checkers: Richard (Conventions);NickB (Correctness;Backwards;Source);DRJ (Consistency;Source);GavinM (Clarity;Lint (experimental))
Rate: 10 lines/minute
Length: 361 lines

Kickoff start: 1996-08-07 14:02 BST
Kickoff end: 14:09
Kickoff length: 7


ISSUES:

Richard: 3M, 5m, 1C, 3q, 11I
NickB: 2M, 9m, 3q
DRJ: 6M, 5m, 2I
GavinM: 6M, 3m, 1I

Richard:
1. - M Requirements no specified
2. - m Readership unclear
3. 9 M impl.h.mpsi wrong tag
4. 16 C Could we just access the structure, reducing the dependencies
5. 22 m This is design
6. 58 m Completeness: Document transgression of naming conventions
7. 83 q Can this be strengthened?
8. 101-108 q Can we check coverage of the result codes somehow?
9. 110-115 q Ditto for ranks
10. 120 M Justify; this is an important design point about the C interface
11. 120 m Completeness: check equivalence of size_t and Size
12. 203 m check.impl.c.conventions.trunc fmt
13. 217 m Ditto fwd
14. check.impl.c.convention I .char Tab is a 7-bit ASCII character
15. " I .section: Out of date
16. " I .para: wrong; not all paragraphs are commented
17. " I .indent: also macro bodies
18. " I .indent: not argument lists
19. " I .include.std,.use,.order: Out of date
20. " I .name.trunk: Some names are initials, e.g. ap
21. " I .name.export: Unclear
22. " I .name.is-valid: Out of date

DRJ:
23. 1 M check.impl.c.source.ref.doc design
24. 14-30 M rule.impl.design: This is design
25. 35 M These requirements should be referenced
26. 35 m As far as I can tell, it does meet checking requirements
27. 77 M I couldn't find this mail message
28. - mN Comments of exactly two lines long are inconsistent with comments 
longer than 2 lines long
29. 100,110,123,131,138 M rule.impl.dep: These all need cross-referencing with 
their dependants
30. impl.h.mps I Res enum (line 74-82) is inconsistent with Rank enum (lines 
94-100)
31. 131 m No sizeof check
32. 132 m Missing doc; why is this CHECKFILEDAPPROX 
33. 150,155 m Missing cast
34. 158 m Should reference req.epcore.fun.area
35. 162,176 m Punning is confused
36. 175 C Could call mps_space_create_wmem with 0,0
37. 198 m variant is not consistent with variety on line 195
38. 236-258 C This would be simpler if we called mps_pool_create_v

NickB: 
39. 23 m "this" redundant
40. 37 m varags misspelt
41. 56 m asynchronous misspelt
42. 74 m The should read they
43. 80 m Enlarge on this; too terse; add "in release builds"
44. 83-96 m Clarity: backslashes could line up
45. 83-96 mN There should be more comment as to what these do
46. 147-156 q Do these need locking?
47. 147-156 q What is the lock behaviour of an assertion handler?
48. 187-192 M Locking
49. 213 mN Could use space variable
50. 228-232 m layout consistency of whitspace (cf line 285-292)
51. 315,341 m consistency: treatment of output argument types (cf. line 265)
52. 350,326,301,285,etc M unsafe: if pool is NULL with go SEGV

GavinM:
53. 23 m "tagged with" is unclear
54. g mN Should address applicability to C++
55. 83-96 mN Should have properties of these tests precisely defined.
56. 111 I clarity: mps_rank_t and Rank are of different types
57. 315 m Why not call mps_alloc_v?

Richard (again):
58. 184 qN What are these parameters and where do they come from?
59. 176,162,207,240,315,341,etc MN Dangerous pun; shouldn't be allowed
60. guide.impl.c IN No puns



Brainstorm start: 15:48
Brainstorm end: 16:14
Brainstorm length: 26


BRAINSTORM:

59. Richard says we've discovered recently how dangerous this can be; we need 
to outlaw this.  Casting the pointer does not do the necessary conversion on 
the value pointed at.  Union abuse is a similar sort of pun.  NickB says that 
the point of mpsi.c is punning.  Should be rule against it, but this might be a 
place where we can bend it.

52. Thread-safety issue which must be tagged.  Also interface error.  Could 
check pool is not null.  AVERT is not thread-safe, but AVER could be.  Could 
check signature.  A decision was made, but not documented.  Too strong a rule 
has been applied.  A rule was bent and nothing was done.  rule.impl.trans.  
checklist item domain is not reflected in rule.impl.  Should say that tainted 
values should be checked before use.  Checking interfaces.

48. Undocumented protocol error.  Also not checked.  Cannot be checked.  Could 
check locks in mps_space_destroy.  Need at least documentation.  It is a 
protocol error to destroy the space when something else is being done to it; 
should check this.  Our process documentation isn't mature enough.  Inadequate 
awareness of rules.

120. Complex CHECK or AVER need doc.  Bigger issue: this is deeper than any 
syntax complexity implies.  Not true.  When the MPS is built for use with C, 
Addr should be the same as void *.  Instead we check something else.  
mps_addr_t is void *, Addr is Word.  The MPS need not deal with word-sized 
addresses, but when used with this interface, it must.  Internal distinction 
between managed address and where we store objects.


Number of major issues: 11
Number of minor issues: 28
Number of issues: 60
Major defects remaining: 1

Edit manpower: 8


Edit notes:

1. Issue: issue.mps-req.
2. Fix: Specified readership
3. Fix: Fixed.
4. Forget: I'll think about this.
5. Fix: Moved to design document, design.mps.interface.c.
6. Fix: commented with reference to design
7. Mail: mail.richard.1996-11-07.12-11
8-9. Mail: mail.richard.1996-11-07.??-?? 
10. Fix: Wrote design.mps.interface.c.cons and added tag reference.
11. Fix: Added check and linked to design.mps.interface.c.cons.
12-13. Reject: See design.mps.interface.c.naming.
14. Reject: Already done.
15-21: Edit: Fixed in document guide.impl.c.format.
22: Reject: Already done.
23. Fix: Added reference to design.mps.interface.c
24. Fix: Moved to design.  Changed tags throughout.
25-26. Issue: issue.check-req.
27. Fix: Added content to design and referenced that instead 
(design.mps.interface.c.check.types).
28. Reject: See guide.impl.c.format.comment.para.
29. Fix: Added cross references.
30. Reject: Already dealt with.
31. Reject: They're not the same size.  See impl.h.mpmst.ss.
32. Fix: Added documentation.  See design.mps.interface.c.pun.addr.
33. Reject: These types are the same, and deliberately so.
35. Fix: Fixed a whole bunch of similar puns.
37. Fix: Changed both to "variant".
38. Fix: Done as suggested.
39. Fix: Corrected grammar in design document.
40. Fix: Corrected spelling.
41. Fix: Corrected spelling.
42. Fix: Corrected spelling.
43. Reject: It compiles away to almost nothing in all builds.
44. Reject: Not our style, in general.
45. Fix: See design.mps.interface.c.check.types.
46. Mail: mail.richard.1996-11-07.??-??
47. Mail: mail.richard.1996-11-07.??-??
48. Reject: Documented reasons in impl.c.mpsi.space.destroy.
49. Fix: Now uses space variable rather than repeating the cast.
50. Fix: Consistentized spaceology.
51. Reject: No longer relevant -- see issue 35.
52. Fix: Fixed this and a number of other similar cases.
53. Fix: Fixed in design document.
54. Issue: issue.interface.cpp
55. Fix: design.mps.interface.c.check.types does most of what you want.
56. Reject: Previously fixed (review.impl.h.mpmtypes.4.edit.30.
57. Fix: Done as suggested.


Exit: exit.universal
Exit manpower: 0.1

Manpowerused: approximately 18
Manpowersaved: (major defects*10) = 110
