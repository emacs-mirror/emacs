                   REVIEW OF IMPL.C.ARENACL.SW_EQ(1)
                     review.impl.c.arenacl.sw_eq.1
                           incomplete review
                           gavinm 1996-12-04

Rules: rule.universal, rule.impl
Checklists: check.impl.adapt, check.impl.constrain, check.impl.dep, check.impl.design, check.impl.guide, check.impl.justify, check.impl.limits, check.impl.min, check.impl.mod, check.impl.platform, check.impl.quality, check.impl.simple, check.impl.trick, check.universal.cons
Source: impl.h.mpmst.sw_eq(2), design.mps.arena.client(incomplete)
Candidate status: draft

Author: nickb
Leader: gavinm
Editor: nickb
Scribe: gavinm

Entry: entry.universal, entry.impl
Entry manpower: .5


Entry notes:

How do I tag files on branches


Loggingstart: 15:40
Loggingend: 16:09
Logginglength: 29
Loggingrate: 2

Checkers: DRJ;NickB;GavinM;PTW?
Rate: 10
Length: 623
Actual checking time: 248

Kickoff start: 1996-12-04 14:26 UTC
Kickoff end: 14:27
Kickoff length: 1


ISSUES:

DRJ: 9m 9M
NickB: 2M 2m 2I
PTW: 5M 1m 4q 1I
GavinM: 7M 19m 5q 1I

DRJ:
1. - M Many design notes refer to design.mps.arena.vm
2. 144 M BT should be broken out into a separate module
3. 191 M The justification for the return parameter is not clear; in particular 
it is not used
4. 191 M We ought to check that we aren't getting passed overlapping chunks
5. 216 M Should check tablePages > 0
6. 271,276 M Check that limit > base
7. 328,347 M AVERT arena
8. 374 M Justification of ArenaReserved is not clear
9. 429 M CHECKD Bool won't compile; see design.mps.check.full-type

NickB:
10. 357 M Test is back to front
11. 390 M Fail to return computed value

PTW:
12. 112,etc M If it's lifted, why isn't is shared?
13. 178 M Shouldn't we be checking b?
14. 191ff M Either I'm very confused or something is wrong in the logic
15. 294-299 M Isn't important for them to be overlapping rather than 
dis-contiguous?

GavinM:
16. 310,380,598 M AVERT space
17. 449 M Should res be p?
18. 500 M AVER SegPref, pages, pool

NickB:
19. 12-28 m Should not be in source file
20. 49etc m A lot of alignment problems from tab characters
21. 114,115,134 I This stuff should be carried over to the design for this
22. 502,503 m Could be removed

DRJ:
23. 211,219,223 m Missing space after comma
24. 243 m Extra space after ++
25. 279 m ArenaClientPageSize should either be a paramter or in upper case
26. 364 m Should distinguish two error cases
27. 364 m Should be logged as an exceptional error
28. 408 m I can't work out the mnemonic for the signature
29. 517 m Unwritten convention is to use --pi;

PTW:
30. 25 q Is the proportional degradation of speed a requirement?
31. 148,149,161,162,175,177 m Should use Index
32. - q Is there any requirement that the pages of a chunk be aligned to some 
archiitectural page?
33. 259 m Why are parameters base and size instead of base and limit?
34. 274 q Do we have a policy on whether or not the body code should modifiy 
the input arguments?
35. 336 q Is there a requirement for retracting?
36. - C I understand the need for preferences, but am uncomfortable with the 
current design.

GavinM:
37. 538 mN ++pi instead of pi++
38. 33 q Where are such symbols documented?
39. 44 q Is there a minimum page shift?
40. 50,51 m Why are these here and in mpmst.h?
41. 57 m Should this be "owning arena"?
42. 60,195,196 m Should be of type Index
43. 60 I Suggest type Count
44. 74 m No point in this line for an unsigned type
45. 84 m Should document how it allows for this case
46. 94-95 m This check isn't sufficient
47. 216 m This special trick should be documented
48. 223 I Suggest AddrAddAlignUp
49. 273 m What allocation?
50. 279 m Shoudl have tag for thsi token
51. 294 m Should reference design tag
52. 299 q Why does this include the space?
53. - q Does all this reuse of varaibles gain anything on an optimizing 
compiler?
54. 333-334 m Misplaced design
55. 352-353 q Can preceisely on of these conditions hold?
56. 357 m We need more efficient batch BT functions
57. 357,358 m Missing space
58. 514-539 m Very repetitive
59. 606 m Is this redundant given line 600?



Brainstorm start: 16:20
Brainstorm end: 16:48
Brainstorm length: 28


BRAINSTORM:

4,5,6,7,13,16,18: Checking: Some of these occurred because it is the habit in 
the other arena files to be passed a space and only used it to get the Arena, 
and then check the arena.  Should AVER space.  Why not receive Arena?  Didn't 
want to change interface.  They used to, but all the calling had a Space.  It 
woulnd't be so bad if SpaceArena checked.  Some is oversight and some is 
missing design.  Perhaps we should add argument checking to entry or author's 
checklist.  Good idea.

1,2,12: Copying code and modularity: Copied without necessary changes.  Two 
problems: Duplicate code (later changes don't get propagated); Blind 
inheritance.  Huge parallelism between files.  Problem with C.  
Remodularisation would allow you to reuse code.  Shared between the two, but 
this isn't necessarily so.  Need a greater willingness to introduce new 
modules.  Up to code author at time.  Could make it easier to create new 
modules; need procedure card.

14: Comprehensibility: [Explanation]  Seemed obvious when he wrote it.  How 
could he have told that it wasn't obvious?  Pivot was lack of documentation on 
216.  Would have been different if page and word tables had been in separate 
sub-strates.  arenavm itererates from non-zero value.  Not clear that we've 
made the right maintainability/space-saving trade-off.  Didn't take opportunity 
to improve both.


Number of major issues: 18
Number of minor issues: 25
Number of issues: 59

Exit: exit.universal
