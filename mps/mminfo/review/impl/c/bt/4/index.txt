                  REVIEW OF IMPL.C.BT(4) ON 1997-05-14
                           review.impl.c.bt.4
                              draft review
                           gavinm 1997-05-12

Rules: rule.universal(4), rule.impl(3)
Source: impl.h.mpm(28), design.mps.bt(1)
Candidate status: accepted

Author: drj
Leader: gavinm
Editor: drj
Scribe: gavinm
Approved: 1997-06-30

Entry: entry.universal(0), entry.impl(0)
Entry manpower: .1


Entry notes:

Failed entry.universal.source-approved, and entry.universal.training


Loggingstart: 15:48
Loggingend: 15:59
Logginglength: 11
Loggingrate: 2.1

Checkers: Richard;DRJ;NickB;PTW;Sheep;GavinM
Rate: 10 lines/minute
Length: 113 lines
Actual checking time: 67

Kickoff start: 1997-05-14 BST (see review.design.mps.bt.1(0))


ISSUES:

Richard: 4M 7m 2C  ? minutes
DRJ: 3M 2m  10 minuites
NickB; 1M 1m  10 minutes
PTW: 3M 3m 1q  15 minutes
Sheep: 1M 2q  10 minutes
GavinM: 1M 6m 11 minutes

1. PTW 16 m not Enlgish
2. GavinM 16 m Not tagged
3. DRJ 3 M $
4. " 14-19 m Purpose should be in design
5. DRJ 25 M Assume $ is available in execution character set
6. PTW 32 q Do we have a policy on parethesising complex expressions; do we 
asume everyone has memoryised the C associativity rules
7. Richard 30 m UNclear; apparenly pointless
8. DRJ 30 m Undocumented restriction
9. GavinM 28 m Shouldn't be Size (design.mp.type.size)
10. Richard 38 C Could set limit on size and check I for sanity; but see 
rule.impl.limits
11. " 37 C Suggest wasting a word on a signature
12. " 28,35,43,etc M No reference to design
13. DRJ 37,45,etc Nm Can check alignment
14. PTW 37-38 M Can't check signature or i
15. PTW 40,48 m Defining a function in terms of a macro; this looks like a 
bug--does it need a comment
16. PTW 64,74,92 m Unclearthat .req.speed is met
17. " 106 M Comment is a lie
18. Richard 64,etc m Nasty loop style; use while
19. " 79 m Coudl us emeaningful variable names
20. " 104 m USe else instead of continue
21. " 82 m rule.impl.adapt: Is i an index?
22. PTW - I Send me A4
23. Richard - I check.impl.design.ref: implementation does not reference 
design; also risks -- does not document how code might be improved if not fast 
enough


Number of major issues: 5
Number of minor issues: 13
Number of issues: 23
Major defects remaining: 2.9

Edit manpower: 6


Edit notes:

1. Fix: anglicised
2. Fix:
3. Fix: edited design.c.assumptions
4. Fix: referred to design
5. Fix: edited design.c.assumptions
6. Mail: mail.drj.1997-06-24.11-43 ??
7. Fix: added comment and documented in design.
8. Fix: documented in design.
9. Raise: True, but it is consistent with SpaceAlloc (which we use to allocate 
internal datastructures).  see request.mps.170412.  Documented in design.mps.bt.
10. forget:
11. fix: Design and implementation of BT needs improving to make them a fully 
fledged type.  Created request in darwin
12. fix: added references to design (is this major?)
13. fix: added such a check
14. Raise: see issue 11.
15. fix: added reference to macro in impl.h.mpm
16. fix: added note to design that we need to make this clear
17. fix: moved comment into a true region of the source code.
18. fix: used while
19. fix:
20. fix:
21. fix: yes.  Index i.
22. Pass: ptw (see mail.ptw.1997-06-23.13-17(0))
23. edit: design.mps.bt, added meta note.


Exit: exit.universal(0) 
Exit manpower: 0.3


Exit notes:

Defect counts not entered.  I have remedied this.  
Issue 22, please confirm that one of PTW and GavinM has accepted this.
Edit manpower not entered.
Analysis not filled in.
Exit rejected.  Please try again.
GavinM 1997-06-25

Still many fields not filled in, but I've fixed it.
GavinM 1997-06-25


Manpowerused: 8.6
Manpowersaved: 50
