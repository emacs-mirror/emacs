                      REVIEW OF IMPL.C.ARENAVM(5)
                        review.impl.c.arenavm.5
                              draft review
                             drj 1996-07-10


Candidate:
Rules: rule.universal, guide.impl.c.*
Author: richard
Leader: richard
Lines: 498
Status: draft
Entry: ?
Exit: ?
Checkers: richard, drj, nickb, gavinm 
Kickoff time: 1996-07-10 13:49 BST
Rate: 10 lines/min


ISSUE LOG

Logging start: 1508 BST, suspended 1527 BST, resumed 1530 BST, finish: 1606 BST
majors:   minors:   questions:   comments:   suggestions: 

richard:
1. 5 m purpose not stated
2. 5 m design not reference.  there is not design (brief overview would be okay)
3. 11 m this macro should be documented
4. 13,14 m statement of pupose (doc) missing
5. 19 m describe relationship between segment and base address
6. 28 m is there a tab?
7. 30,33 m inconsistent brace positioning (with 28)
8. 34-36 m comments shoudl be tagged and reference canonical docuemntation 
(things are stated twice).
9. 42 m s/the/a/
10. 44,49 m #if 0 is dodgy.  raise policy issue.
11. 58 q didn't we decide on a naming convention for macros?  where is the 
convention?
12. 73 m should there be a function version?
13. 73 m is this in the wrong place?
14. 79 m s/initialize/&s/
15. 79 m how?
16. 93 m AVER(base ... )
17. 105 s could assert that the remainder is 0
18. 108 c policy issue:  this comment is a suggestion for improvement. what 
should we do with these?
19. 110-112 m explain please (unclear). 
20. 122 m don't use case in tags
21. 122 m use of '<' unclear
22. 122 m inconsistent comment format
23. 122 m how come?  how does it work?
24. 134 M what is this?
25. 136 m extra blank line
26. 155 s tag this line to the creation point (114)
27. 193-195 m check against tablePages field.
28. 197 c see point 18.
29. 207 q surely there should be more?
30. 227 m this doc is ambiguous.  perhaps tag to design
31. 235,252 c see point 18.
32. 256 m why? because unwind is easier
33. 263-271 q is this shared code? (with other arena implementations)
34. 269-270 q is the reverse link recorded (ie is there a link from 
impl.c.shield to here?)
35. 305 m initialisation should go after asserts
36. 311 m change "later" to a tag reference
37. 317 c see point 18.
38. 325 m size doesn't appear to be used.
39. 332 m chaneb "above" to tag reference and tag loop
40. 400 c see point 18.
41. 446 m state why this function exists
42. 469,482 m where should we look to find SEG_FOR? (mpm.h)  tag
43. 475 M what about skipping the tables?  should we start at 0 or tablePages?

gavinm
44. 53 m WORD_WIDTH is badly named
45. 49 m should this be DEBUG_NOINLINE
46. 58,64 m these should be defined with the type BT (because they have nothing 
to do with arenas)
47. 96 et al c whole bunch of VM functions which take space as an argument.  
naming problem.
48. 11 m SpaceArena should be in Space module
49. 87 m I don't think f_word should be a Size
50. 83 m ArenaCreate returns a space.  is this correct?
51. 188-189 s these could be combined (pageSize == 1 << pageShift)
52. 11 m SpaceArena has no AVER on space, and it is used extensively without an 
AVER
53. 11 m SpaceArena has no function backup
54. 216 s move initialization to line 238
55. 73 c PageBase neither takes nor returns a page
56. 265 m that should be in an else case at 287
57. 276 m no AVER
58. 305 s would the parms be clearer in the other order
59. 326-327 q why do we need two conditions here?
60. 301 m initialization before AVER (ought to have an AVER on page)
61. 302 m initialization before AVER (ought to have an AVER on pi)
62. 344,365,388,493 m duplicate calculation of SpaceArena
63. 485 s could parms be usefully reversed?

nickb
64. 20-21 s reverse the order of these lines
65. 50-70 c breaks if WORD_WIDTH != 1 << WORD_SHIFT
66. 11,73,74 s group these together?
67. 11,73,84 m document
68. 87 m meaning of variables is unclear.
69. 97 q is this correct style?
70. 110 c some part of this computation is unneccessary cf line 195
71. 111 q why is our freetable aligned to page size?
72. 113,126 m duplicate calculation cf line see point 76.
73. 127,128 s efficiency, maybe add BTSetRange
74. 167-177 q does this breach modularity?
75. 188 s check that arena->pageSize == VMAlign()
76. 197 m check table size against tablePages
77. 197 s tablesSize and tablePages have inconsistent names
78. 227-229 M this statement is false!
79. 301-308 m AVER seg is in pagetable for arena
80. 301-308 m AVER seg->pool is not NULL
81. 323 q do we care about reentrancy?
82. 322-327 M this breaks on last page of arena.
83. 475 s (this is correct) should we start at tablePages.
84. 22,23 m confusing and (in a sense) wrong

drj
85. 18 m should define .page as this is reference in mpmst.h
86. 34 m should be linked to mpmst.h line 231
87. 42 c function would be useful for a debugger but would generate unused funs 
warning.
88. 52,53,66,68 m Comments not useful.
89. 58 m Expression should be of similar style to one in function.
90. 62 m Assembler programmer would thing this function set the bit to 1.
91. 73 m No function definition.  Annoying during debugging.
92. 73 c How do we provide functions useful for debuggers without generating 
warnings?
93. 95 m There is no current attribute structure.
94. 119 m "Word *" should be "BT".
95. 122 M The reasoning of this sentence is not clear.
96. 130 c The reason this hack is here is so SW can specify a non power-of-2 
size to the arena.
97. 170,176 m Should access this field via a function.
98. 195 m Long line.
99. 204 c Surprisingly short.
100. 234 m .tablePages should reference this line.
101. 240 c Should mention what the sense of the bit table is.
102. 239 c This for loop is idiomatic.  lo.c has the same code.
103. 265 m This field is sometimes set twice with different values.
104. 320 c Otoh, you get more checking.
105. 472,485 m Candy-machine interface.

gavinm 2
106. 131 s Reference set should reference a tag, if there is one.
107. 197 s You could check consistency of using a free count.
108. 233-248 s Any optimization should be BT specific, e.g. BTFindRange.
109. 323 m Should be an AVER that this value is false before set to true.

Logging ended 16:06.


PROCESS BRAINSTORM

Issue 24. Escaped temporary hack.  SizeLog2 doesn't support non-powers of two.
          Arena should be non-power of two.  Application of SizeLog2 might be
          inappropriate?  Applied an inappropriately.  SizeLog2 is a bad name?
          Should have checked the contraints on the functions used.
   When merging or checking back in grep for "@@@@" and think.

Issue 43. Forgot correctness between writing and review.  Therefore needs a
          comment.  Take more care when using literals, even zero.

Issue 78. False statement.  Gavin suggests a third member of the union
          containing common fields.  This special case (which we wouldn't
          normally do) should be more carefully marked and justified.
          Confusion in comment was caused by confusion of model?  Could
          be clearer if a third structure were used.  Sentence would
          be misleading even if "segment" were changed to "tail".

Issue 82. Breaks on last page of arena.  Same problems has cropped up
          elsewhere. Consider a sentinel?  Consider a convention?
          Deferred.  do...while danger.

Issue 95. This comment has too many issues.  More coffee.


META-ANALYSIS

Richard: State underlying defects not solutions.
Drj: Perhaps that rule could be stated in the kickoff meeting.
Nick: TO whom does code need to be clear?
Richard: Anyone competent, I think.
Nick: Difficult to review .c in isolation.  Need more source documents.
Richard: We need to check against source documents in general in review.
Drj: Missing or wrong doc _does_ cost more and more as time goes on, and should 
be major.
Gavin: Anything resulting in a bug which would be hard to track down to this 
area is major.
Richard: Anything resulting in a defect for our customers in major.
Richard: Logging went to slowly.
Gavin: Need to quote against rules and checklists rather than describe problems.
Nick: We're told not to duplicate issues.  Don't know what was obvious and what 
was not, which could be useful.
Gavin: Tom says sometimes this is useful but doesn't help with the primary goal 
of review.
Nick: Logging time seems to be partly wasted for everyone else.
Gavin: Should be faster.  Hidden benefit in stimulating more issues.  Should be 
measured.

End: 16:40.

Estimated remaining major defects: 
Estimated saving: 

EDIT

1. fixed
2. fixed
3. done
4. fixed
5. in design
6. no
7. now consistent
8. yes
9. done
10. mailed
11. yes.  mail.richard_brooksby.1996-03-25.12-28, mail.dsm.1996-03-21.16-57, 
mail.richard.1996-03-21.16-25
12. same problems as with BTGet
13. moved.
14. done
15. doc
16. done
17. done
18. all tagged with *.improve.* as per mail.nickb.1996-07-16.10-16
19. done
20. fixed
21. doc
22. fixed
23. doc
24. rm (+ new SizeFloorLog2 interface)
25. rm
26. done
27. done
28. see point 18.
29. doc
30. done
31. see point 18.
32. doc
33. yes!
34. punted, I am unable to understand for intended link!
35. fixed
36. done
37. see point 18
38. rm
39. done
40. see point 18.
41. done
42. done
43. fixed, doc
44. possibly, but it stands
45. mailed
46. BT is defined by arena module
47. possibly
48. no (doc)
49. I do
50. yes
51. done
52. true, however arena is AVERed
53. true, see 45.
54. this was an init to remove compiler whinges.  doc
55. noted
56. done
57. fixed
58. possibly.  it stands.
59. rewrote completely
60. sadly there is no PageCheck
61. done
62. yes, but unavoidable given AVER before init rule
63. possibly.  it stands.
64. in design now
65. true, but it's an assumed invariant
66. yes
67. done
68. doc
69. ish
70. I think it's clearer this way.
71. because it is obtained using raw VM operations (which must be page aligned)
72. fixed
73. mailed
74. fixed (new VM{Reserved,Mapped} interface)
75. done
76. done
77. this is true.  it stands.
78. fixed
79. done
80. no, because we already have AVERT(Seg, seg)
81. dunno, do we?
82. rewritten
83. fixed
84. fixed
85. done
86. done
87. yes
88. disagree
89. done
90. yes (in particular see lo.c where SETBIT means precisely this)
91. noted
92. see point 45
93. rm
94. fixed
95. fixed
96. rm
97. fixed
98. fixed
99. doc
100. done
101. disagree
102. true.
103. fixed
104. rewritten
105. yes.  it stands.
106. doesn't
107. noted
108. correct
109. done


EXIT

Richard passed the module for exit 1996-07-22 13:24 with estimated 1 major 
defect remaining.


