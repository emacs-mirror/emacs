               REVIEW OF IMPL.C.ARENAVM(18) ON 1997-06-16
                        review.impl.c.arenavm.18
                           incomplete review
                           gavinm 1997-06-13

Rules: rule.impl
Candidate status: draft

Author: richard
Leader: gavinm
Editor: pekka
Scribe: gavinm

Entry: entry.universal, entry.impl
Entry manpower: .2


Entry notes:

entry.universal.source-available: No source documents available
entry.universal.training: Failed as usual
OK to proceed.  GavinM 1997-06-13


Loggingstart: 16:50 BST (10:30 EDT)
Loggingend: 17:20
Logginglength: 30
Loggingrate: 1.8

Checkers: GavinM (clarity);PTW (correctness);Richard (consistency;backwards)
Rate: 10 lines
Length: 703
Actual checking time: 242

Kickoff start: 1997-06-13 14:07 BST Pool Hall
Kickoff end: 14:14
Kickoff length: 7

Kickoff notes: Delayed because Richard not ready.
Plan to use IRC for logging effectively according to proc.review.log.  Aim to 
have logging rate up to 2 issues/minute.


ISSUES:

[ Only GavinM and PTW attended. ]

Richard: 2M 4m 1C 4I  53 minutes
GavinM: 2M 23m 3C 4q 3I  99 minutes
PTW: 3M 3m 4I 90 minutes

1. PTW 101 .improve.table.zone-zero M Does putting the management tables in the 
arena limit expansion to non-contiguous spaces?

2. PTW 121 .table.pages M Why not allocate the table pages to a pool rather 
than the free kludge?
3. PTW 133 M Also note the cost in complexity of refset preferencing.  Is this 
a worthwhile trade off?
4. Richard  637 M ?, Function does not check its parameters
5. Richard 314-329 M rule.impl.simple, Duplicated code.  Should use 
BTFind*Range.
6. GavinM 164,184,190,344,404,479,522,541,564,585,604 M Is it safe to take 
SpaceArena without checking Space?
7. GavinM 345 M Should check size
8. GavinM 22,etc m No tag
9. PTW 109 I MPS_WORD_WIDTH, MPS_WORD_SHIFT convey no information to me
10. PTW 135 I SizeFloorLog2 conveys no information to me
11. PTW 242/.SegPrefExpress I Is high/low not a crude Refset?  Could be an EP 
improvement?
12. PTW 272/.IndexOfAddr m Note this implementation prevents .ArenaExtend from 
being implemented
13. PTW 286/.improve.bit-twiddle m If the bit-tables were kept on a per-zone 
basis, it might make sense to keep a free-pointer hint for each
14. PTW  309/.SegAllocInArena m Should base and limit be aligned?
15. Richard proc.review.check.source I rule.universal.clear, "Do not waste too 
much time..." fairly meaningless.
16. Richard proc.review.check.note I rule.universal.clear, Suggest "you have 
the option of..."
17. Richard proc.review.check.class I rule.universal.clear, "End" is not a good 
heading.
18. Richard 690-691 m ?, What other restrictions?
19. Richard 692 m rule.universal.clear, Extra parens round "addr".
20. Richard 630-631 m rule.universal.cons, "A segment is present..." false.  
Needs rewriting.  Code is correct.
21. Richard 472-514 C ?, There is a cleverer (but probably less clear) 
implementation of this which doesn't involve a call to SegLimit.  Perhaps add 
comment to this effect?
22. Richard 430-432 m rule.universal.cons, This comment is out of date and 
inconsistent with the code.  There it no error case.
23. PTW .AVER I Some checks on range are really ³type² checks, should this be 
distinguished?  Should we distinguish between type checking and sanity 
checking?  Should type checking always be on?
24. GavinM - q What is the status of the design?
25. GavinM 49 m guide.impl.c.format.comment.column: More than one line
26. GavinM 65,etc m guide.impl.c.naming.method.prefix: Should be a method on an 
arena, not a space
27. GavinM 69 m design.mps.type.size.byte: f_words is in words
28. GavinM 69 m design.mps.tye.size.use: None of these are managed memory
29. GavinM 110,119 q Do we know that pageSize must be at least as strict an 
alignment as PageStruct requires?
30. GavinM 81,116 C doc.mps.ref-man.if-conv.res.error-path This is not the 
recommended error tidy-up style.
31. GavinM 110 m Should be BTSize
32. GavinM 191 q What is the difference between "mapped" and "committed"?
33. GavinM 203 m This check is unclear
34. GavinM 216 m This could be SizeAlignUp, but should use BTSize
35. GavinM 227 m Should explain why refSet cannot be checked
36. GavinM 242 m Inconsistent formal parameter for Segpref
37. GavinM 246 m Should explain why kind cannot be checked
38. GavinM 276 m Should explain why this is "<="
39. GavinM 286-287 m This no longer belongs here.
40. GavinM 290 m This method neither receives nor returns a Seg
41. GavinM 272,290,341,636 m guide.impl.c.naming.ident.static: Static method 
should commence with lowercase letter
42. GavinM 346 m rule.impl.mod: space internals
43. GavinM 363,365,370 m Inconsistent ordering of operands
44. GavinM 373 m This check is unclear.
45. GavinM 413 m Should cast constant 0
46. GavinM 77,415 q Why does the client know about page alignment on 
allocation, but not on creation?
47. GavinM 434 C VMMap could take base,size
48. GavinM 472 m guide.impl.c.adt.method.general: Seg is not first parameter
49. GavinM 476 m Clarity: Should document what these variables represent
50. GavinM 483 C Some parsers (e.g. LCLint) have trouble with compound member 
designators
51. GavinM 530-532 m Exposes the abstraction of PageBase
52. GavinM - m The PageStruct discrimination is ugly, underdocumented, and 
under-abstracted
53. GavinM - I Should have RefSet checking method for completeness
54. GavinM impl.h.mpmst I ArenaStruct: tablePages should not be Index 
(design.mps.type.index.use)
55. GavinM - I Should have a glossary of crucial terms like: segment, arena, 
space, segment, zone, refset, describing/referencing their design and 
relationships



Brainstorm start: 17:29 BST
Brainstorm end: 17:50
Brainstorm length: 21


BRAINSTORM:

[ Only GavinM and PTW. ]

Tables in arena: 
PTW: I don't rememer design discussion, but I remember disagreeing with 
Richard.  I believe you should be honest, even if it involves bootstrapping 
issues.  Internal datastructure should be in a pool and accounted for as user 
object are.  You may have to create things by hand, and patch them up later.  
The UK seems to believe that it's better not to worry about that but to hide 
these structure off to the side.  It seems dangerous to have a critical table 
marked free.   
GavinM: In a sense I agree with you, but it would be a hard bootstrap problem.  
PTW: I proposed having static objects, and the arena having discontinuous 
spaces.  
GavinM: Like a static MV pool that gets a lump out of the arena straight off?
PTW: It's because there's no static data involved.  If two components have the 
MPM, should they be separate or shared?  Another approach is to handcraft a 
pool in a segment that's owned by itself.  Less messy and less risky.
Idealism aside, it's unrealistic to have two MPMs battling for VM allocation.  
It make perfect sense for components to have separate pools, but arenas and 
spaces ought to be shared.  There should be an approved way to have components 
bolting together.

PTW: Don't let Tucker review document where he disagrees with the design!  Is 
this a major issue?  Richard may disagree.  
GavinM: I think this stems from disagreement about requirements that are 
undocumented.  Solution is to document them.  Am I being idealistic?
PTW: Perhaps.  I reluctantly accept Richard's approach, but I'm not convinced.  
You should have sceptics at your review.  

GavinM: We would have avoided these issues with a design.  Maybe.  

Review procedure

PTW: I hope to do better next time with my review loggin system.  
GavinM: Two-man logging and brainstorm has been a bit of a failure.


Number of major issues: 7
Number of minor issues: 30
Number of issues: 55

Edit manpower: ?


Edit notes:

1. Reject: Not a major defect -- no impact on present module requirements.
2. Reject: Not a major defect -- no impact on present module requirements.
3. Reject: Not a major defect -- this is a question.  Will answer.
4. Fix: Added parameter checks.
5. Fix: Inverted sense of free table and now uses BTFindResRange.
6. Reject: Not a major defect, however clarified with 
impl.c.arenavm.space-arena.
7. Fix: Checked all parameters.
8. Fix: Not sure what "etc" means.  I have tagged up most comments now.
12. Reject:  Not so.  See request.dylan.170028.sol.extend.
14. Fix: Added assertions.
18. Fix: There are none.  Removed comment.
19. Fix: Removed parens.
20. Fix: Corrected comment.
21. Fix: Added comment in impl.c.arenavm.seg-free.alt.
22. Fix: Clarified comment.
25. Fix: Moved comment up to paragraph comment and tagged.
26. Fix: Added comment documenting transgressions.
27. Fix: Changed to Count.
28. Reject: Debatable, probably false.
29. Fix: Asserted and documented assumption.
30. Fix: Put into approved error path style.
31. Fix: Fixed and improved variable names.
33. Fix: Implemented ShiftCheck and called that instead.
34. Fix: Fixed to use AddrAdd and BTSize.
35. Fix: Explained.
36. Fix: Made parameters consistent.
37. Fix: Explained.
38. Fix: Explained.
39. Fix: Removed it.
40. Fix: Changed SegAllocInArena to FindFreeInArea and SegAllocWithRefSet to 
FindFreeInRefSet.
41. Fix: Downcased initial letter.
42. Fix: Documented transgression.  Not worth changing before arena classes.
43. Reject: Disagree.  I think it's clearer as it is, because it is "limit" 
that is being tested.
44. Fix: Added comment.
45. Fix: Cast inserted.
47. Reject: Yes, but that would be inconsistent.
49. Fix: Improved variable names instead.
50. Reject: They aren't C parsers.
51. Fix: Removed details from comment.
52. Fix: Lifted out into PageIsHead.

[ Originally Richard, now Pekka.  GavinM 1997-12-12 ]

9. Reject: A longer name won't help if you don't know how we use Word.
10. Reject: A completely systematic name.  In any case, reviewers must refer 
back to the headers that are used.
11. Reject: No improvement suggested, or necessary.
13. Reject: Not a defect in the product doc.  This is now being considered as a 
part of pekka 1998-03-19
15. Reject: I don't see how that could be improved.
16. Pass: gavinm.
17. Reject: It's good enough.
23. Reject: This has been adequately considered during the variety design 
(design.mps.variety).
24. Mail: mail.pekka.1998-03-19.13-50.
32. Mail: mail.pekka.1998-03-19.13-50.
46. Mail: mail.pekka.1998-03-19.13-50.
48. Fix: Now it only takes Seg.
53. Fix: Added RefSetCheck.
54. Reject: The size of the table cannot be statically determined, since it 
depends on the page size.  In any case, design.mps.type.index.use is not 
prohibition, just a guideline.
55. Reject: If such a glossary is needed, it should be global rather than 
attached to a particular document.  IMO, a glossary is a cop-out: The terms 
used should either be found in the MM Glossary, or defined in an analysis or a 
design document of their own.



Exit: exit.universal
