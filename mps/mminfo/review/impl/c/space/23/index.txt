                       REVIEW OF IMPL.C.SPACE(23)
                         review.impl.c.space.23
                              draft review
                           gavinm 1996-08-13

Rules: rule.impl, rule.universal
Checklists: check.impl.c.clarity, check.impl.c.correctness, check.impl.c.conventions, 
check.impl.c.consistency, check.impl.c.source
Source: design.mps.thread-safety, design.mps.fault.win32, impl.h.mpmst
Candidate status: draft

Author: drj
Leader: gavinm
Editor: nickb
Scribe: gavinm;drj
Approved: Failed 1997-07-31

Entry: entry.universal, entry.impl
Entry manpower: .5


Entry notes:

DRJ is polishing impl.c.space(22) for this review.
Failed entry.universal.source-approved on all source documents.
Failed entry.universal.rules-approved on all rules.
Failed entry.universal.training, as usual.


Loggingstart: 15:13
Loggingend: 15:30
Logginglength: 17
Loggingrate: 2.1

Checkers: gavinm;drj;nickb
Rate: 10 lines/minute
Length: 348
Actual checking time: 105

Kickoff start: 1996-08-14 14:11 BST
Kickoff end: 14:15
Kickoff length: 4


ISSUES:

DRJ (Source, Backwards, Clarity): 3M 5m 1I
NickB (Consistency, Correctness): 3M 6m 1C 
GavinM (Source, Convention): 8m 6M 2I 2q

DRJ: 
1. 1 M What requirements?
2. 121 M space->trace not initialised
3. 51,157,145,impl.h.mpmst M All the lines using poolReadyField should be 
tagged and documented

NickB: 
4. 41-52 M Loads of unchecked fields
5. 121 M space->zoneShift not initialised
6. 201 M does not check space non-null
7. 214-289 M I don't know what these functions do

GavinM: 
8. 11 M design.mps.thread does not exist
9. 102 M spaceReturn, Addr, Size not checked
10. 201 M Should use AVERT
11. 72 M AVER after use of space

DRJ: 
12. 11 m Superfluous "to"
13. design.mps.thread-safety I spaceLock claim and release are now spaceEnter 
and Leave
14. 202 m Can AVERT space after claiming
15. 228,301,309 m Replace while with RING_FOR
16. 281 m Unclear since i is usually a loop index

NickB: 
17. 41-52 m Clarity: would be clearer if fields were checked in order
18. 79 m missing period
19. 118 m I think this ternary expression should be lifted
20. 136 m This is a Bool
21. 138,etc Should we use NULL for this?
22. 229 C Why not at line 239
23. 298,316 m No checking of results
24. 323,332-336 Unnecessarily verbose (could use baseReturn in place of address 
of base)

GavinM:
25. 10 I this document should exist.
26. 34 m link to .static
27. 41 m this line is redundant
28. 43 m no documentation or link
29. 57 q should 'bits' read 'flags'.
30. 100 m Size used in place of Index
31. 104 m unclear
32. 134,135 m inconsistent; no cast.
33. 190-193 q how do we know these are singleton.
34. 210 m no doc or reference
35. 298 I we should have a design doc for *Describe

new defects:

DRJ:
36. 111 mN inconsistent brace style





Brainstorm start: 15:43
Brainstorm end: 16:07
Brainstorm length: 24


BRAINSTORM:

1. NickB suggests writing reqs before impl.  DRJ says it's an indication of the 
immaturity of our software process.

2,5. zoneShift is initialise in ArenaVM.  Unclear.  
NickB: Modularity problem with whole file.  Space is means to have little 
global data.  Not clearly a good solution.  Cost of reduced modularity.  
DRJ: Used to be more modular; used to have pointers to structures.  
GavinM: embded isn't a problem.  What about a SerialRing?
DRJ: Canonical order would help.
NickB: Should all be specialised structures.
DRJ: Modularity violation of pool, root, format, and thread is trivial.
GavinM: Why do we want a serial at all?
DRJ: Richard added it for debugging; it hasn't been much used
NickB: Shield is more important. design.mps.space would have to address these 
issues.
DRJ: Modularity violation has occurred without sufficient documentation.  This 
means we cannot tell whether it is justified, and makes it hard to review.

3. DRJ: All part of bootstrap.  Avoids call on SpaceCheck before ready.  
Justifiable, but under-documented hack.

4. Should be comment.  
GavinM: Should check Bools
But how can we stop this sort of problem reaching review?
GavinM: structure maps, auto-check
NickB: Can't rely on auto-check
DRJ: This would encourage people not to write check methods, subtle 
interdependencies
NickB: Could imagine some automatic assistance, e.g. check every field appears.
DRJ: Could add to mpmst.h comment about changing Check method
NickB: and Describe, Init, Finish


Number of major issues: 11
Number of minor issues: 19
Number of issues: 36
Major defects remaining: 2

Edit manpower: 24


Edit notes:

20 hours of edits all together.

impl.c.space has moved on to version 24. The changes are in
SpaceDescribe, and are caused by the introduction of the mps_lib
interface. They do not overlap with the issues raised here.

impl.c.space has moved on to version 25. The changes are in
SpaceAlloc, and is relevant to issue 24 here.

impl.c.space has moved on to version 26. The change is in
SpaceDescribe, introducing the WriteF types.

impl.c.space has moved on to version 27. The change is to add history
and prehistory fields to the space structure

impl.c.space has moved on to version 28. The change is to rename
LockRelease as LockReleaseMPM and a minor clarity control-flow change
to SpaceCreate

impl.c.space has moved on to version 29. The minor change adds events.

impl.c.space has moved on to version 30. more checking, traces
introduced, actions

impl.c.space has moved on to version 31. This is a one line change to
add the allocTime field.

impl.c.space has moved on to version 32. This is a one line segabs change.

impl.c.space has moved on to version 33. The change is trivial to EVENT macros.

impl.c.space has moved on to version 34. The change is a check added
to SpaceCheck.

space.c:

1 Fix: of a sort. 
2 Fix: initialized with SigInvalid; comments, checks, design.
3 Fix: design.mps.space.pool.* added with linking comments.
4 Fix.
5 Comment: see design.mps.space.arena. Comment added.
6 Fix: added check.
7 Fix: lots of comment added.
8 Fix: changed to thread-safety.
9 Fix: AVERs added.
10 Fix: can't use AVERT until we have the lock. Added an AVERT after the lock.
11 Fix: can't AVERT it until we've got the lock. Added comment.

12 Fix.
13 Edit: design.mps.thread-safety.
14 Fix: see 10.
15 Fix: replaced a bunch of these with RING_FOR.
16 Fix: renamed to increment.
17 Fix.
18 Fix.
19 Fix.
20 Fix.
21 Raise: request.mps.170458
22 Reject: changed anyway as this has become RING_FOR.
23 Fix.
24 Reject: see (the new) .spacealloc.addr-conv.
25 Edit: design.mps.space (created)
26 Fix: add links in comments.
27 Fix: removed.
28 Reject: no, 0 is fine.
29 Mail: mail.nickb.1997-07-21.15-04
30 Fix.
31 Fix: condition reversed and comment added.
32 Fix: casts added here and elsewhere.
33 Mail: mail.nickb.1997-07-21.12-06
34 Fix: comment pointing to design.mps.prot.
35 Edit: design.mps.describe.
36 Fix.





Exit: exit.universal
Exit manpower: 0.2


Exit notes:

As the editor, I strongly recommend that this document fail exit. Too much has 
changed since it was reviewed. In my opinion the review has still been 
worthwhile, as the quality of the document, and of related documents, has 
increased considerably as a result of the review.  nickb 1997-07-21

Some metrics missing, filled in myself.  Failed exit on 
exit.universal.veto.author.  GavinM 1997-07-31


Manpowerused: 28.7
Manpowersaved: 110
