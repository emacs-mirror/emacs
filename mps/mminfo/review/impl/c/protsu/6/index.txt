                       REVIEW OF IMPL.C.PROTSU(6)
                         review.impl.c.protsu.6
                              draft review
                           gavinm 1996-09-24

Rules: rule.universal, rule.impl
Checklists: check.impl.*, check.universal.cons
Source: man pages
Candidate status: accepted

Author: drj
Leader: gavinm
Editor: drj
Scribe: gavinm
Approved: 1997-04-03

Entry: entry.universal, entry.impl
Entry manpower: 0.1


Entry notes:

entry.universal.rules-approved: Both rulesets are draft
entry.universal.source-available: No design doc
entry.universal.training: Failed as usual


Loggingstart: 15:18
Loggingend: 15:39
Logginglength: 21
Loggingrate: 2.4

Checkers: DRJ;Richard;NickB;PTW;GavinM
Rate: 10 lines
Length: 195
Actual checking time: 200

Kickoff start: 1996-09-24 14:00 BST Byre, Longstanton (see review.impl.c.protan.2)


ISSUES:

DRJ: 5M 4m 
Richard: 1I 11m 2C
NickB: 1M 9m 2C 2q 1I
PTW: 2M 3m
GavinM: 2M 8m 3q 1I

DRJ:
1. 38 M May not be compatible with same function without prottype
2. 111 M This won't work because SIGSEGV is masked out during calls to handlers 
for SIGSEGV
3. 153 M Unclear
4. 156 M AVER(mode)
5. 175 M AVERT(space)

Richard:
6. - M missing sources, design, readership, purpose

NickB:
7. 81 M code should be SEGV_CODE(code); see /usr/include/sys/signal.h

PTW:
8. 131ff M Should we be using our own signal stack?
9. 139-140 M Why is this not an error?

GavinM:
10. 91 M AVER sigNext not NULL
11. 165 M Should report errno set by mprotect

DRJ:
12. 48 m Justify these as static
13. 63 m This is not true; see man sigvec
14. 119-128,etc m mispaced design
15. 127-128 m Unclear

Richard: 
16. I (design.mps.exec-env) how can this (protsu.c) be part of freestanding mps?
17. 26-31 c .hack.sigdfl says gcc specific, so should check for gcc
18. 35 m this is not std.h any more and may no longer happen.  this comment is 
out of date
19. 58-60 m why is passing on a signal a problem?  (explain)
20. 63-64 m point to the lack of documentation
21. 66 m is this a requirement?  if so move
22. 70 m this appears to assume sparc.  we should check
23. 139-140 m it's unclear that protsetup is defined to be idempotent.
24a. 153 m Addr should be Size
24b. 153 m This should be explained
25. 156 m unclear
26. 165 m justify NOTREACHED
27. 171 m why not?

NickB
28. 25-31 c would prefer to see this after the typedef on line 41.
29. 51 m should be a banner comment header
30. 79 m we shouldn't check this.
31. 124-128 m tag and refer
32. 135 q check for error from signal? (next == -1)
33. 153 m this should be in some sort of MPSI check function which is platform 
specific
34. 158-162 m unclear
35. 176 m UNUSED
36. 174 q even less than protan.c?

PTW
37. 131 m justify not using sigvec
38. 188 m this duplicates protan.c.  single copy?

GavinM
39. 5 m this file was edited in 1996
40. I  we should have a design for protection interface.
50. 30 q why not NULL?
51. 38,41,42 m parameters in prototypes
52. 125 m spelling, honour
53. 139 q what does this test mean?
54. 153 m this test should be tagged
55. 153 m this test should reference some design or requirement.
56. 155 m why not null?
57. 159-161 m why not AccessEMPTY?
58. 182 m should be tagged
59. 184-185 m should have reference to the win32 stuff



Brainstorm start: 16:21
Brainstorm end: 16:32
Brainstorm length: 11


BRAINSTORM:

8. We don't want to be screwed by the application overrunning its own stack.  
Can we have an upper bound on our stack requirements?  Impact on user which 
could slip past.  Richard knew this when he wrote it.  Need to note lots of 
little things.  Could we have user doc buckets?  What is the user doc process?

9. Does ProtSetup need to be idempotent?  Catches two SraceCreate's from same 
application.  We could break.  Half-hearted error case?  Design would help.  
Testing here would help.  How would thi sbehave with two copies?  What about 
threads?


Number of major issues: 11
Number of minor issues: 32
Number of issues: 51
Major defects remaining: 3.4

Edit manpower: 13


Edit notes:

1. Fix: added comment about dependency and sources
2. Fix: see request.mps.170003
3. Fix: Actually it is Size and int that we make the assumption on.  Documented 
assumption and tagged.
4. Fix: added comment about why we don't AVER
5. Fix: added AVER, also UNUSED(space);
6. Fix: added design.mps.protsu, .readership, others belong elsewhere
7. Reject: I don't think so, from the sigvec(2) man page:
       No mapping fault                   SIGSEGV SEGV_NOMAP
       Protection fault                   SIGSEGV SEGV_PROT
       Object error                       SIGSEGV SEGV_CODE(code)=SEGV_OBJERR
       Object error number                SIGSEGV SEGV_ERRNO(code)
8. Fix: added note to design about how we could use a signal stack for the 
signal.
9. Fix: corrected code (by removing test) and clarified in design.
10. Fix: added
11. Fix: documented in design why this code is like it is, also left note in 
design that we need a policy
12. Fix: done in design.
13. Fix: changed comment. inserted reference to sigvec(2).
14. Fix: moved to design
15. Fix: clarified
16. Edit: edited design.mps.exec-env, added note that we need to discuss this 
issue.
17. Reject: .hack.sigdfl does not claim that is GCC specific, merely that GCC 
is amongst the compilers that cause the problem.
18. Fix
19. Fix:
20. Reject: see issue 13.
21. Reject: No, it is something that we do not do
22. Reject: It does not assume sparc, it assumes that the access affects only 
the faulting page.
23. Fix: not a requirement, just something that we do.
24a Fix: er, already
24b Fix: er, already. 
25. Fix: clarified.
26. Fix: reference made to design.mps.protsu.fun.protset.assume.mprotect
27. Fix: added comment.
28. Fix: moved
29. Fix
30. Reject: The kernel signal mechanism will always require this to be a valid 
pointer.
31. Fix, mostly
32. Considered as minor defect and fixed.  now AVERs return code.
33. reject: the assumption is local to this module.
34. Fix: clarified
35. Fix
36. mail: mail.drj.1997-04-02.14-24 (?)
37. forget
38. forget
39. fix: changed copyright
40. fix: create design.mps.prot, though it is not complete.
41-49 there are no issues
50. mail: mail.drj.1997-04-02.14-56
51. fix: removed named formals
52. fix: rm
53. question no longer relevant.
54. fix
55. reject it's not important enough for design (as there are other ways round 
the same problem).
56. fix: use (Addr)0
57. fix: rewrote code to use a switch
58. fix: moved to design
59. reject it would be design.mps.protnt, but there is no such document.



Exit: exit.universal
Exit manpower: 0.2


Exit notes:

Two questions not answered.  I'll highlight this in my mail.  GavinM


Manpowerused: 17.6
Manpowersaved: 110
