                        REVIEW OF IMPL.C.SEG(6)
                          review.impl.c.seg.6
                           incomplete review
                           gavinm 1997-08-28

Rules: rule.impl, rule.universal
Source: design.mps.seg, "hope diff -compound MMsrc trace.c -version 38 -to-version 39", 
impl.h.mpmst(lines 181-201)
Candidate status: draft

Author: richard
Leader: gavinm
Editor: richard
Scribe: gavinm

Entry: entry.univeral, entry.impl
Entry manpower: .2


Entry notes:

entry.universal.source-approved: Source documents not accepted.
entry.universal.brief-check: Has @@@@.
entry.universal.training: Failed as usual.

Nothing serious.  Let it pass.  GavinM 1997-08-28


Loggingstart: 15:45

Checkers: Richard;Sheep;NickB;GaavinM
Rate: 10 lines/minute
Length: 258 lines

Kickoff start: 1997-08-28 15:05 BST
Kickoff end: 15:11
Kickoff length: 6

Kickoff notes: recommend looking at change.dylan.honeybee.170421


ISSUES:

.nickb.14-56-58: 35 minutes, 1M, 10m, 1C, 3q, 12I

.gavinm.14-57-04: Everybody?

.gavinm.14-57-10: 4M 5m 2q 3I 1C  38 minutes

.nickb.14-57-16: whole file, but a bit rushed after line 200

.sheep.14-57-31: 1M 3m 38mins

.richard.14-57-47: 10m 1M 1I 4C 0Q  35 mins

1. Richard 117-118  M  Should come before line 112, because it ensures that 
condition.
2. NickB M 194-196: tab characters
3. Sheep line 10 states that pm and sm are not checked how ever line 54 and 55 
do check them
4. Sheep line 190 (seg strcut ) mentions _greyRing but the design doc does not
5. GavinM 10 M These invariants should be worked out and checked
6. GavinM 24 M Could check (effectively statically) that _pool is first member
7. GavinM - M Segs should have signatures or the transgression justified
8. GavinM 202 M Haven't checked that oldGrey is singleton

.gavinm.15-04-00: Done.

.gavinm.15-04-06: Any new major defects?

.richard.15-04-14: 202 is not an issue, I think.

.gavinm.15-04-27: Ok.  Non-majors, by person.  Richard?

.richard.15-04-39: 194-197  m  Tabs?  Spacing problem.

.richard.15-04-40: 180,153  m  Needs comment explaining condition.

.richard.15-04-40.1: 241  m  Refer to design.mps.seg.field.rankSet.single.

.richard.15-04-40.2: 223-231  m  Merge with design.mps.seg.

.richard.15-04-43: guide.impl.c  I  Introduce leading underscore convention.

.richard.15-04-43.1: 198  C  Replace by NOTREACHED?

.richard.15-04-43.2: 258,163  m  Inconsistent -- no event emitted

.richard.15-04-43.3: 135  m  Unclear

.richard.15-04-43.4: 157  C  Suggest !!, i.e. "not a strict subset".

.richard.15-04-43.5: -  m  No function versions of SegSetWhite etc., and 
therefore no events emitted for them.

.richard.15-04-49: 100  m  Should use PoolSegRing.

.richard.15-04-49.1: 100  m  Should not use SegPoolRing.  (Inconsistent.)

.richard.15-04-49.2: -  C  Suggest SegIsBuffered method rather than exposing 
the fact that seg->_buffer can be NULL.  Assert that it isn't in SegBuffer 
method.

.richard.15-04-49.3: -  C  Suggest #define iff == (silly)

.richard.15-04-49.4: 51  m  s/refs/objs/

.gavinm.15-07-51: That was too fast.

.gavinm.15-07-55: Is eveyone ready?

.sheep.15-08-03: yep

.gavinm.15-08-08: NickB?

.nickb.15-08-21: I'll go a bit slower.

.nickb.15-08-31: m 1-15: no .readership

.nickb.15-08-32: m 52-53: these cannot be deduced from the documentation, as the

.nickb.15-08-32.1:   summary and grey fields are conservative approximations.

.nickb.15-08-32.2: m 54-55: since the meaning of these fields is not adequately

.nickb.15-08-32.3:   documented, I cannot check whether these checks are

.nickb.15-08-32.4:   correct. Possibly the same defect as for lines 52-53.

.nickb.15-08-32.5: m 100: move to before 98? then comment on 38-40 changes

.gavinm.15-08-52: (and Richard isn't eliminating duplicate issues)

.nickb.15-08-57: m 136: "_may_ contain references", surely

.nickb.15-08-58: m 156-161: clarity. Why not test for equality with RefSetUNIV?

.nickb.15-08-58.1: m 234,142: isn't this going to be horribly inefficient? 
raising and

.nickb.15-08-58.2:   then lowering a barrier for a segment when the first 
reference is

.nickb.15-08-58.3:   introduced onto it?

.nickb.15-08-58.4: m 168: is 'ts' the same as 'grey'?

.nickb.15-09-35: m 193: better to have a function to extract the member from a 
singleton?

.nickb.15-09-36: C design.mps.seg: generally OK as a data structure 
description, but:

.richard.15-10-16: 52-53 Please clarify "documentation".

.nickb.15-10-56: 52-53: design.mps.seg, which makes it clear that these fields 
are conservative approximations, i.e. can be set to UNIV without harm.

.nickb.15-11-20: I design.mps.seg: greyRing field not in structure or documented

.nickb.15-11-21: I design.mps.seg: poolRing field not documented (e.g. what 
order is it in?)

.nickb.15-11-21.1: I design.mps.seg: structure description: field names 
out-of-date and

.nickb.15-11-21.2:   out-of-order (no blahs). Field descriptions need fixing up

.nickb.15-11-21.3: I design.mps.seg: no description of the field setters and 
getters

.nickb.15-11-21.4: I design.mps.seg.field.rankSet: consistency with other field

.nickb.15-11-21.5:   descriptions: 'empty' should be 'RankSetEMPTY'.

.nickb.15-11-21.6: I design.mps.seg.field.depth: spelling of "Sheild"

.nickb.15-11-21.7: I design.mps.seg.field.p.fatter: missing apostrophe

.nickb.15-11-24: I design.mps.seg.field.p.fatter: "most segments are AMC" is a

.nickb.15-11-24.1:   completely bogus assumption (e.g. for EP no segments are 
AMC).

.nickb.15-11-24.2: I design.mps.seg.field.black: this field does not exist, so 
this

.nickb.15-11-24.3:   documentation is bogus.

.nickb.15-11-24.4: I design.mps.seg.field.grey &c: are these colours of 
references or objects?

.nickb.15-11-27: I design.mps.seg.field.grey: spelling of "refrences"

.nickb.15-12-14: I impl.h.mpmst.194,199 consistency: 'unsigned' or 'unsigned 
int'?

.nickb.15-12-16: I impl.h.mpmst.199: document why this is not a Bool

.nickb.15-12-16.1: Q impl.h.mpmst.194: why unsigned and not Size

.gavinm.15-12-45: Sheep?

.nickb.15-13-11: Oh, BTW, some of those were new.

.nickb.15-13-20: (sorry, didn't note which)

.richard.15-13-47: design.mps.seg.field.p.fatter is recent, I think.

.sheep.15-15-31: m no document defining what should be in event stream

.richard.15-15-32: The "black" field will have to exist.  I should say so, 
though.

.sheep.15-15-42: m  absent of assorted events.

.gavinm.15-16-03: Sheep, can you give more details of that to Richard later?

.drj.15-16-12: indeed.  I added design.mps.seg.field.p.fatter in response to an 
issue of ptw's in a review of (LO? AWL? )

.sheep.15-16-16: m missmatching of oders in feilds

.sheep.15-16-24: orders in feilds

.richard.15-16-40: Do these apply to any lines in particular?

.sheep.15-17-17: what lines ? 

.sheep.15-18-14: m void p is undescriptive could be improved 

.gavinm.15-18-59: impl.h.mpmst, line 191?

.sheep.15-19-19: line 191 impl.h.mpmst void *p is undescriptive 

.sheep.15-20-16: I line 195  arena is used but is not checked (no AVERT on 
arena)

.sheep.15-20-29: done

.gavinm.15-20-44: Thanks.  GavinM?

.gavinm.15-20-54: 71 m Type inconsistency: Bool and unsigned

.gavinm.15-21-04: 135-139,etc m Misplaced design

.gavinm.15-21-18: 252 q Why would the client intend to set an empty rankSet to 
empty?

.gavinm.15-21-27: impl.h.mpmst q Why do all the structure members have leading 
underscores?

.gavinm.15-21-46: design.mps.seg I How about separating the arena, pool, and 
common fields more clearly, e.g. by structure?

.gavinm.15-21-56: - C I couldn't get much from the diff of trace.c

.gavinm.15-22-00: Done.

.gavinm.15-22-06: Any new issues?

.richard.15-22-15: Field order is significant for reasons of bitfields.

.richard.15-22-30: TraceSetSummary becomes SegSetSummary (more or less)

.richard.15-22-38: TraceSegGreyen became SegSetGrey (approximately)

.nickb.15-22-45: I've got a new issue:

.gavinm.15-23-06: Yes?

.gavinm.15-23-22: Any new issues, everybody?

.richard.15-23-26: Yes, Nick.

.nickb.15-23-35: If the segment is not white for one of these traces, then all 
its

.nickb.15-23-35.1: objects are grey for that trace 
(design.mps.poolams.invariant.condemn),

.nickb.15-23-35.2: o all objects need to be scanned. Therefore it only needs to 
be

.nickb.15-23-35.3: scanned once (design.mps.poolams.scan.multiple), as 
everything on

.nickb.15-23-35.4: it has been scanned after one iteration.

.nickb.15-23-35.5: Otherwise (i.e. the segment is white for all of these 
traces) we

.nickb.15-23-35.6: should only scan objects which are marked as grey in it, and

.nickb.15-23-35.7: objects in it may become grey during the scan, so the scan 
has to

.nickb.15-23-35.8: iterate until nothing in the segment is greyed.

.nickb.15-23-41: Whoops, not that at all.

.nickb.15-23-41.1: Sorry.

.gavinm.15-23-41: ACTION is on tenterhooks.

.nickb.15-23-48: Nm 118,149,243 pool used and not checked, arena used and not 
checked

.nickb.15-24-03: (Dunno how that happened)

.gavinm.15-24-23: Any more?

.richard.15-24-43: ACTION has phone call.  Back soon

.gavinm.15-24-49: Ok.  End of logging meeting.

.gavinm.15-25-05: Reconvene in about 5 minutes for process brainstorm. 

.gavinm.15-25-15: TOPIC: Coffee break

.nickb.15-25-21: Nm 155 in general this is not true, only for RefSetUNIV; 
clarify or do it differently.

.nickb.15-25-24: (belated, sorry)




Exit: exit.universal
