                 REVIEW OF IMPL.C.MPM(5), LINES 134-273
                          review.impl.c.mpm.5
                              draft review
                           gavinm 1996-09-11

Rules: rule.impl, rule.universal
Checklists: check.impl.*
Source: impl.h.mpm(9), design.mps.interface
Candidate status: accepted

Author: richard
Leader: gavinm
Editor: gavinm
Scribe: gavinm
Approved: 1996-11-20

Entry: entry.universal, entry.impl
Entry manpower: 0.2


Entry notes:

entry.universal.source-approved: Sources unapproved

entry.universal.rules-approved: rules unapproved

entry.universal.training: Failed as usual


Loggingstart: 15:45
Loggingend: 15:54
Logginglength: 9
Loggingrate: 1.2

Checkers: NickB;GavinM;PTW
Rate: 10 lines/minute
Length: 140 lines

Kickoff start: 1996-09-11 14:00 BST Byre, Longstanton (see review.impl.c.root.15)


ISSUES:

NickB: 1M, 1m, 1C Cons (impl.h.mpm)
PTW: 1M, 2m
GavinM : 4m, 1C Design (design.mps.interface)

NickB:
1. 232 M c should be type int, two implicit casts
2. 141 C I prefer lower case hexadecimal
3. 177-183 m Should refer to design document

PTW:
4. 214,220,240 M Should WIDTH calculation not be based on size of type?
5. " m Expressing base as 0x10 is obscure
6. 264 m No provision for printing signed

GavinM:
7. 166 m Pad character should be a general constraint
8. 179-180 m Also long in Word
9. 184 m Assuming that word width is a multiple of 4
10. 204 C inefficient
11. 232 m This trick should be documented

NickB:
12. - I root.c line 260, Casting a function pointer to void * may be undefined


Brainstorm start: 16:19
Brainstorm end: 16:58
Brainstorm length: 39


BRAINSTORM:

1. Using a lint would have picked this up.  This would always work in 
practice.  Might be difference between implementation-defined char and unsigned 
char.

4. Checked in mpsi.c, except for unsigned long in Word.  If one is aware of 
implementation dependencies, document and check.  Should have one design 
document for implementation assumptions, referred to throughout, referring to 
checks.  Function pointers can't be checked thoroughly.

Time for checking.  Tucker ran out.  Half-speed for header file.  Header file 
was very simple.  Complex things take longer to check.  Header files tend to be 
complex.  Tucker gets side-tracked.  Tucker at disadvantage, because we sit 
around in checking atmosphere.  Source roles and backwards are slower.  Tucker 
says this will improve with time, but this won't fix the scaleability problem.  
Tucker can't remember 25 checklist question.  NickB and GavinM, too.  Recall 
syntactic element checklists.  Need guide to InfoSys, intro to MM group.

Author.  problem not having author present in brainstorm.  Should avoid when we 
can.

Break Logging/Brainstorm: Good.  Need to implement lift idea.  Tucker is up at 
05:45 local time anyway.


Number of major issues: 2
Number of minor issues: 7
Number of issues: 12
Major defects remaining: 1

Edit manpower: 8


Edit notes:

1. Fix: Changed to int
2. Forget
3. Fix: Add reference to design.mps.writef, and also design.mps.lib
4. Fix: Add checks and comment
5. Fix: Changed 0x10 to 16 in all cases.  Justification for original was so 
that all bases would be "10" in their own base, but this makes the code less 
clear, because it deliberately obscures the base.
6. Reject: No requirement, but comment added
7. Fix: Add pad constant
8. Fix: Extended comment at .writef.p and added references
9. Fix: Now add 3 before dividing by four
10. Comment: 
11. Fix: Comment added
12. Fix: Added F code.

review.impl.root.14.issue.34: Fix: Added WriteF? types in impl.h.mpmtypes, and 
modified impl.c.amc, impl.c.assert, impl.c.buffer, impl.c.format, impl.c.pool, 
impl.c.poolmfs, impl.c.poolmv, impl.c.root, impl.c.space, impl.c.than, and 
impl.c.thnti3 (Sigh)


Exit: exit.universal
Exit manpower: 0.2

Manpowerused: 11.5
Manpowersaved: 20
