            PRODUCE AN OUTLINE FOR THE DESIGN DOCUMENTATION
                           obj.design-outline
                         obsolete complete obj
                           richard 1995-08-24

Responsible: richard
Due: 01/09/95
Products: .report
Sources: person.richard.brain
Procedures: proc.universal


Produce an outline of the design documentation we should have created earlier 
to support the current implementation.  The outline should cover all areas of 
the project which require design documentation, and include the tags for the 
proposed design documents.  The areas for documentation should also be 
prioritized against the current development plan, so that documentation is 
produced to support the next phase of development.  The result will be a set of 
empty (or outline) documents in a hierarchy tagged by "design.*".


REPORT:

Design documents
  by module
    std           support overview
      deque       double-ended queues
      error       run-time errors
      liban       library support
      sig         signatures
      assert      assert handling
      misc?       miscellaneous bits
    mpm           memory pool manager overview
      arena       arena manager (inc. address map)
      buffer      allocation buffers
      fix         generic fix function
      format      object formats
      pool        pools, pool classes, and dispatch
      interface   general allocation interface
      root        root management
      vm          virtual memory mapping abstraction
      vman        malloc-based fake virtual memory
      vmnt/vmsu   mmap-based virtual memory
      space       memory space
      pools       segment descriptor pool
    poolmv        manual variable pool class overview
    poolmfs       manual fixed small pool class overview
    poola         allocate-only pool class overview
    poolamc       automatic mostly-copying pool class overview
    dw            DylanWorks run-time system interface
      dwformat    DylanWorks container format     
  by process
    collection
      flip
      trace
        scan
        fix
      reclaim
    allocation
  by key feature
    pools         multiple policies
    interface     general allocation interface
    concurrent    concurrent collections
  by product
    internal
      dylan       DylanWorks Memory Manager
      epcore      Core RIP Memory Manager
    external
      simple
      profalloc
      ?
  by conceptual part or functional unit
    interfaces
      malloc            ANSI
      enhanced          enhanced alloc
      cons              conservative garbage collection
      exact             exact garbage collection
    arena               arena manager
    tracer              graph tracing
  by idea
    profiler
    performance analyzer
    debugger
    heap inspector
    bug analyzer
    object inspector
    automatic managers
  by protocol
    bufferup            buffer supply protocol
    bufferdown          buffer demand protocol
    poolclass           pool class protocol
    arena               arena management protocol
    pool                pool protocol
    format              container format protocol
  glossary


DylanWorks libraries?
Other MM systems?


