                     PORT THE SYSTEM TO A DEC ALPHA
                             obj.alpha-port
                         obsolete complete obj
                           richard 1995-08-15

Responsible: dsm
Due: 02/08/95


Port the Memory Manager to a DEC Alpha system in order to shake out 32-bit 
dependencies.


REPORT:

From: David Moore <dsm>
Date: Wed, 2 Aug 95 12:48:28 BST
To: mm
Subject: alpha port

These are my notes on the alpha port.  You may have some thoughts about
the problems I came across and how to avoid them in future.
These notes were created after I had done the port and are based on my
handwritten notes.


OSF/1 ALPHA GCC (o1algc) port notes
===================================

The port at present uses the ANSI-based arena (using malloc)
and not a VM (mmap) based one.
It is intended to use the VM arena in future.

tests/amccover
  Does not work.  One failure path succeeds because it relies on using
  a vm arena to fail.

Coverage tests have only been run.  Coverage has not been checked


Problems

UNINIT
  refsig field in AMC pool was not initialised
  Detected by amcstres

THIRTYTWO
  32-bit dependency in code

PARAWIDTH
  gcc gave warnings about explicit type conversions on parameters
  this showed up on the alpha since long!=int. So e.g.
  void f(long); f(0);
  gives a warning.

REDUNDANT
  code found that was no longer used
  Detected by compiler warning

WCONVERSION
  This gcc -Wconversion tells you when the parameter conversion would
  happen differently if there was no prototype present.
  e.g. void f(char c); void g(void){ f('a');}
  produces a warning.  Using this warning means we can't use types
  narrower than int in parameters.  This is a bit restrictive
  having -Wmissing-prototypes seems to be sufficient


Notes on Problems

UNINIT was the only significant problem found.  This defect was only
detected because the ansi arena was being used.  Since the type of
RefSig is actually Addr, and all valid values of Addr are valid refsigs
anything of the right type is valid.  As a result the vm arena code
does not have a RefSigIsValid() implementation.  RefSigIsValid() is
therefore not called anywhere outside arenan.c.  This is wrong.  A
trivial RefSigIsValid() method should be created, and the IsValid
function called in the appropriate places.  It is an unecessary
dependency on the implementation of refsigs to omit these checks.

This problem should have been picked up in review.  The refsig field
is not mentioned in the init method, yet it is a field in the
structure.

How can we avoid this sort of thing in future?
More care.
Write non-standard implementations of objects like this which have no
illegal values.

THIRTYTWO was caused by laziness in writing testing code.
I personally do not see this as a great problem.

PARAWIDTH raises some issues.
Should we not be much more explicit in the code what type a number is.
It strikes me that a lot of the time 1L is logically (Addr)1.
Should we be careful to be explicit when there is a conversion.


Changes

created  tools/o1algc/product.mak
  based on tools/gc/product.mak
  added LIBS parameter to allow linking of maths library required for
  some tests

created  products/std/tools/o1algc/makefile
created  products/std/include/archal.h
created  products/std/include/oso1.h
modified products/std/include/arch.h
modified products/std/include/os.h
  as appropriate

created  products/std/include/archtm.h
created  products/std/include/ostm.h
  I thought these template files might be useful.
  Should they go in etc/templates?

modified products/std/include/misc.h
  PARAWIDTH:  1 changed to 1L etc.


modified products/mpm/src/arenan.c
  PARAWIDTH:  0 to (Addr)0

modified products/mpm/include/arenast.h
  as appropriate (OS dependency) -- using ansi arena

modified products/mpm/include/root.h
  WCONVERSION:  changed RootMode to be unsigned int instead of 
  unsigned char.
modified tools/o1algc/product.mak
  WCONVERSION: removed -Wconversion flag.
modified products/mpm/include/root.h
  WCONVERSION:  changed RootMode back


modified products/poolamc/src/poolamc.c
  UNINIT:  initialised refsig in AMC init() method

modified products/poola/src/poola.c
  REDUNDANT: deleted unused print code

modified tests/amcstres/src/main.c
modified tests/dwstress/src/main.c
modified tests/dwcover/src/main.c
  THIRTYTWO: removed some of these dependencies

created  products/mpm/tools/o1algc/makefile
created  products/dw/tools/o1algc/makefile
created  products/poolamc/tools/o1algc/makefile
created  products/poola/tools/o1algc/makefile
created  tests/stress/tools/o1algc/makefile
created  tests/stdcover/tools/o1algc/makefile
created  tests/dwcover/tools/o1algc/makefile
created  tests/dwstress/tools/o1algc/makefile
created  tests/amcstres/tools/o1algc/makefile
created  tests/mpmcover/tools/o1algc/makefile
created  tests/testlib/tools/o1algc/makefile
created  tests/amccover/tools/o1algc/makefile
  as appropriate as I went along
  had to add LIBS = -lm to for some tests which used fmod


