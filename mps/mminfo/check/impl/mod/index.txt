         REVIEW CHECKLIST FOR IMPLEMENTATIONS: MODULARITY ROLE
                             check.impl.mod
                            incomplete check
                           gavinm 1996-08-21

Scope: This checklist is for use in reviews of implementations, using the modularity 
role (see rule.impl.mod).

Summary: Do implementations make no assumptions about other implementations, unless the assumptions form part of the interface between them?


DEFINTIIONS

.def.interface: Generally a module, and hence its implementation, will have a public interface which may include functions, data-types, macros, etc., but which is essentially a protocol.  Sometimes, a module may have differing interfaces between itself and different clients.


.adt: Does the implementation avoid accessing the value of abstract data types 
directly?

.align: Does the implementation avoid alignment assumptions not guaranteed by 
other modules?

.domain: Does the implementation avoid passing values to other modules outside 
their defined domain?

.coerce: Does the implementation avoid invalid type or value coercion (e.g. 
pointer punning, incorrect testing of non-native booleans)?

.rest: Does all code under special restrictions (e.g. thread-safe) transit 
these restrictions to other code only where supported by the interface?

.fail: Do all invocations of code which may fail check the status return?

