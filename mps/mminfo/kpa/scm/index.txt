                 L2: SOFTWARE CONFIGURATION MANAGEMENT
                                kpa.scm
                               draft doc
                           gavinm 1997-06-20

INTRODUCTION

.scope: This document represents the key process area of Software Configuration 
Management, a key area of Level 2 of the Capability Maturity Model, as 
described in paper.sei93.

.readership: This document is intended for anyone involved in project.process.

.purpose: The purpose of Software Configuration Management is to establish and 
maintain the integrity of the products of the software project throughout the 
project's software life cycle.

Software Configuration Management involves identifying the configuration of the 
software (i.e., selected software work products and their descriptions) at 
given points in time, systematically controlling changes to the configuration, 
and maintaining the integrity and traceability of the configuration throughout 
the software life cycle. The work products placed under software configuration 
management include the software products that are delivered to the customer 
(e.g., the software requirements document and the code) and the items that are 
identified with or required to create these software products (e.g., the 
compiler).

A software baseline library is established containing the software baselines as 
they are developed. Changes to baselines and the release of software products 
built from the software baseline library are systematically controlled via the 
change control and configuration auditing functions of software configuration 
management.

This key process area covers the practices for performing the software 
configuration mangement function. The practices identifying specific 
configuration items/units are contained in the key process areas that describe 
the development and maintenance of each configuration item/unit.


GOALS

.goal.plan: Software configuration management activities are planned.

.goal.avail: Selected software work products are identified, controlled, and 
available.

.goal.change: Changes to identified software work products are controlled.

.goal.inform: Affected groups and individuals are informed of the status and 
content of software baselines.

