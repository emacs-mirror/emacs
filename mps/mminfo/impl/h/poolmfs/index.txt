                      MANUAL FIXED SMALL UNIT POOL
                             impl.h.poolmfs
                               draft impl
                           gavinm 1996-09-17

     1 /*  impl.h.poolmfs  draft impl
     2  *
     3  *                    MANUAL FIXED SMALL UNIT POOL
     4  *
     5  *  $HopeName: MMsrc!poolmfs.h(trunk.4) $
     6  *
     7  *  Copyright (C) 1994,1995 Harlequin Group, all rights reserved
     8  *
     9  *  The MFS pool is used to manage small fixed-size chunks of memory.  It
    10  *  stores control structures in the memory it manages, rather than to 
one
    11  *  side.  It therefore achieves better locality for small objects, but
    12  *  wastes memory for large objects.  It should not be used unless you 
are
    13  *  packing a reasonable number of objects on to a page.
    14  *
    15  *  Create and Init take the following arguments:
    16  *
    17  *    Size extendBy
    18  *
    19  *  extendBy is the default number of bytes reserved by the pool at a 
time.
    20  *  A large size will make allocation cheaper but have a higher resource
    21  *  overhead.  A typical value might be 65536.  See note 2.
    22  *
    23  *    Size unitSize
    24  *
    25  *  unitSize is the size in bytes of the objects you with to allocate.  
It
    26  *  must be larger than the minimum unit size returned by GetInfo, and 
not
    27  *  larger than extendBy.
    28  */
    29 
    30 #ifndef poolmfs_h
    31 #define poolmfs_h
    32 
    33 #include "mpm.h"
    34 
    35 typedef struct MFSStruct *MFS;
    36 
    37 extern PoolClass PoolClassMFS(void);
    38 
    39 extern Bool MFSCheck(MFS mfs);
    40 extern Pool (MFSPool)(MFS mfs);
    41 
    42 
    43 typedef const struct MFSInfoStruct *MFSInfo;
    44 
    45 struct MFSInfoStruct {
    46   Size unitSizeMin;             /* minimum unit size */
    47 };
    48 
    49 extern MFSInfo MFSGetInfo(void);
    50 
    51 #endif /* poolmfs_h */

