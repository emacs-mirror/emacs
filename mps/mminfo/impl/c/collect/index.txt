                   GENERIC COLLECTION IMPLEMENTATION
                             impl.c.collect
                               draft impl
                             drj 1995-10-26

     1 /*  impl.c.collect
     2  *
     3  *           GENERIC COLLECTION IMPLEMENTATION
     4  *
     5  *  $HopeName$
     6  *
     7  *  Copyright (C) 1995 Harlequin Group, all rights reserved
     8  */
     9  
    10 #include "std.h"
    11 #include "deque.h"
    12 #include "collect.h"
    13 #include "pool.h"
    14 #include "space.h"
    15 #include "poolar.h"
    16 #include "trace.h"
    17 #include "rootst.h"
    18 #include "spacest.h"
    19 
    20 
    21 Error Collect(Pool pool)
    22 {
    23   Error e;
    24   Space space;
    25   Arena arena;
    26   Trace trace;
    27   Deque deque;
    28   DequeNode node;
    29   
    30   space = PoolSpace(pool);
    31   arena = SpaceArena(space);
    32   
    33   e = TraceCreate(&trace, space);
    34   if(e != ErrSUCCESS) return e;
    35 
    36   /* Flip: defined the condemned set and gray the roots */
    37   
    38   e = PoolCondemn(pool, trace);
    39   if(e != ErrSUCCESS) {
    40     TraceDestroy(trace);
    41     return e;
    42   }
    43 
    44   deque = SpaceRootDeque(space);
    45   node = DequeFirst(deque);
    46   while(node != DequeSentinel(deque)) {
    47     DequeNode next = DequeNodeNext(node);
    48     Root root = DEQUENODEELEMENT(Root, spaceDeque, node);
    49 
    50     RootMark(root, trace);
    51 
    52     node = next;
    53   }
    54 
    55   deque = SpacePoolDeque(space);
    56   node = DequeFirst(deque);
    57   while(node != DequeSentinel(deque)) {
    58     DequeNode next = DequeNodeNext(node);
    59     Pool p = DEQUENODEELEMENT(Pool, spaceDeque, node);
    60 
    61     PoolMark(p, trace); /* implicitly excludes condemned set */
    62 
    63     node = next;
    64   }
    65 
    66   /* Trace: trace the graph from the roots */
    67   
    68   e = TraceRun(trace);
    69   if(e != ErrSUCCESS)
    70     return e;
    71   
    72   /* Reclaim: free the condemned objects which weren't marked by tracing 
*/
    73   
    74   PoolReclaim(pool, trace);
    75 
    76   TraceDestroy(trace);
    77 
    78   return ErrSUCCESS;
    79 }

