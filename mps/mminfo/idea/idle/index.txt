                       UTILIZING IDLE TIME FOR GC
                               idea.idle
                               draft idea
                             ptw 1998-10-30

SUMMARY

1. Use idle time to improve refsets:  During idle time, refsets that have been 
invalidated because their segment has been written to can be recalculated and 
the write-barrier re-erected.  There is a high chance that the page will still 
be resident (having been recently written) and a reasonable likelihood that the 
mutator will not modify the page again (since it is idle).  Improving the 
refsets in this way reduces the effort required to finish a collection.  This 
can be a completely incremental operation because it is only an optimization.  
If the page scan is interrupted, its partial results are discarded.

2. Use idle time to perform collection.  Don't drive collection from allocation 
unless absolutely necessary.  At allocation time, you know the mutator is 
busy.  Forcing it to do collection work to satisfy an allocation is likely the 
worst possible time, especially for any task were response time is important.  
In a system where there are idle cycles, the GC should use idle cycles to make 
progress on a collection whenever one is in progress.  There still needs to be 
a check at allocation time that the collector is far enough ahead to not run 
out of memory, but work should only be done at allocation time if the collector 
is falling behind.


REFERENCES

mail.ptw.1994-09-12.17-43(0), mail.ptw.1997-11-06.17-05(0)

