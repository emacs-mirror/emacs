             NOTES FROM MM DEVELOPMENT AND PRODUCT MEETING
                        meeting.devel.1999-04-29
                             incomplete doc
                            tony 1999-05-04

Telecon: Dave Berry <daveb>, David Jones <drj>, Pekka Pirinen <pekka>,
Richard Tucker <rit>, Tony Mann <tony>.

(Andy Sizer wasn't around.)

Start 1999-04-29 11:37.


NEWS

tony: I don't have any.

daveb: John Hotchkiss hasn't been at the quartet for the last 2 weeks, so
we haven't discussed things on the marketing front.

tony: ... can we infer anything from that?

daveb: I think Kennebunk's taking longer than usual.

pekka: What's the situation with the sampler CD?

daveb: It's cancelled. We might make another one in the future, but we're
not going ahead with the current one.


RELEASES

* release.web.diadem

tony: Pekka did a candidate release of the MM reference last week.

pekka: I'm going to make a new candidiate, fixing some link problems that
rit found, and put that on the web.

rit: Sounds good.


* release.java.amaretto

drj: Unclear whether I'll have anything going by the end of this week
(especially if we have a review).

daveb: When do you think you will have something going?

drj: Hard to be exact, but early next week. I've now more-or-less
understood the build system. All I have to do is write functions which scan
the roots and the objects, which shouldn't be too bad.

drj: Debugging may be a problem, however. I tried with gdb on Solaris,
compiling with sunpro C, and I got the function names but nothing else (and
no arguments). I think it doesn't understand sunpro C's debug output.

drj: ... so as long as I don't need to debug it it should be OK 8-).

drj: I have once or twice asked sysadmins for DBX, but it costs something
like L2000, because you have to buy it with the C compiler.

rit: Is it possible to compile with GCC?

drj: Yes, but then it doesn't link. So there's almost support for GCC.

tony: Suggest try looking on the web for extensions to gdb.


* release.epcore.chub

tony: I've been looking at the viability of an SMP virtual arena on
Windows. Unfortunately it doesn't appear to be a good match: windows gives
support for committing shared memory, but not for uncommitting it. I think
this is too much of a stumbling block, and it may mean that we don't want to
do an SMP virtual arena for EP.

rit: Might they not think there's a benefit from being able to grow, even
if we can't shrink.

pekka: They do, but it's only a small benefit.

daveb: Other platforms?

tony: EP are interested in Irix too, ...

pekka: ... and Solaris. It's difficult on Unix: the shared memory system
doesn't really support what we want. You could simulate it, but at very
high cost. You'd have to create new segments instead of mapping, and
synchronize between the processes. We'll have a meeting with EP, and talk
about it. I think dtb will understand the difficulties.


* release.dylan.kinglet

tony: rit's been talking to Carl Gay about any problems that might have
turned up under Windows 95. Turns out Carl had a record of some MPS
assertions, but isn't clear whether they were on Windows 95/98, or NT.

tony: 2 problems. One was "base > limit" in stack scan. One was "base !=
limit" at end of stack scan. Second could be caused by same problem as the
first, or by a stack-alignment problem.

drj: Suspiciously, there's code in the Sun JVM that aligns the stack
pointer to a 4-byte boundary, and a comment that this is necessary in
Windows 95.

tony: It occurred to me this week that documentation that required that 
stack pointer should be aligned on a platform isn't the same as requiring 
it to be atomically updated.

drj: Yes. Or in this case, it could be 16-bit parts of Windows using
2-bytes at a time.

tony: ... but if the 16-bit stuff is addressing the stack in a different way,
there's a danger that when we try to scan the stack we'll look in the wrong 
place.
Issue with reuse of bottom 16 bits of ESP register as SP register. This is
a nagging fear, but I don't know yet whether it's founded.

tony: The "base > limit" one: rit and I have been talking about this. I'm
aware of a problem in Dylan which can cause this problem: foreign code
calls Dylan first time with deep stack and later with shallower stack.
Dylan know about this bug.

tony: But rit pointed out there's an equivalent problem even without two
calls to Dylan. If Dylan is invoked with a deep stack, and returns to a
shallow stack outside Dylan code, then problem can show up. rit's written a
test to provoke this. So there's a lurking bug for multi-threaded programs.
There's now a request in MM evolution to fix this.

rit: There's a request in MM evolution for the alignment question too.


* Dr Dobbs

tony: I've written a first draft. It's a bit long: 3500 words without
introduction or conclusion. It contains a lot of "how" and not quite as
much "why" as I wanted. My plan is to tidy this up and mail it out for
comments early next week. Hopefully that'll give us 2 weeks for discussion
and cleaning up before we can send it off to DDJ.

rit: How do we make sure not to give away Harlequin secrets?

tony: I'm intending that John Hotchkiss, Christine van Roosen and whoever
else will have a chance to read it and check.



PLAN

tony: I've done a new version since the other day, 'cos I found a ballsup
in which a task had been scheduled in the past (!).

tony: Main changes: linux work is scheduled a little earlier. Added tasks
for LW integration. Added task for JAM makefile stuff, and scheduled it
before the linux Dylan work (so we only have to do the makefile support
once). That's potentially a way to save a bit of work, but I'm not quite
sure whether we want to spend 3 weeks on it at that time.

tony: Also scheduled myself to do work on Dylan heap walker a little
earlier than before.

pekka: It strikes me that the Java work is all low-priority in the plan
currently?

tony: Hmm, the milestone for the real Java work (not the early-Java work)
is kind of late. Early September.

drj: Seems reasonable, though. Aren't we likely to have a better idea of
priority once we've started talking to people?

pekka: But we need to be working on it in the meantime. Admittedly a lot of
the work that is scheduled between now and then is directly relevant. But
it could maybe move by a month or two.

tony: There's also the strategy-prototyping stuff. There's no dependency in
the plan, but it's potentially useful to the Java work.

pekka: Well, we don't know that, but it might be.

rit: A more general question: should we be tracking how well we keep to our
plans?

tony: Yes. There's been quite a lot of slippage compared to our original
baselines. Two things can make us change: (1) things take longer than we
think. (2) New tasks are added. The second one we expect, and shouldn't
worry about. The first one we ought to look at, and find ways to attempt to
get the schedule to be accurate -- (e.g. by being more conservative or
adding tasks for things which currently we don't include in the plan).

daveb: There's at least questions of improving estimation, and working out
how much to allow for overheads due to unplanned work or new work being
added to plan.

tony: Also have to consider genuine changes in direction that occur -- it's
very hard to plan for them.

tony: If anyone has any good ideas about this, I'd be very interested to
hear them.

....

daveb: Many planning tools can compute information on estimated numbers of
man-hours etc.

tony: Maybe I should start collecting information like that when I do the
scheduling updates each week.


WORK PRACTICES

tony: We haven't had a review yet. drj's been doing some work on cleaning
up the bit-table design document.

drj: Yes, it's pretty-much ready for review. We could probably review it
this afternoon if people want to do that.

tony: I'm game.

rit: Me too.

tony: Ok, let's go for that.

drj: Say 2pm or 3pm -- I'll sort it out after this meeting.

-=-==-

Meeting finished at 12:06.

