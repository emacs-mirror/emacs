            REVIEW OF MINUTES FROM MEETING.DOC.1997-01-16/17
                         meeting.doc.1997-03-10
                             incomplete doc
                             lmb 1997-04-11

INTRODUCTION

.intro: Richard Brooksby and Leah Bateman met at Longstanton House on 
1997-03-10 to discuss the minutes from 1997-01-16/17.


CONCEPTS

.term.object: The terms "client" and "MPS" (for objects) are placeholders.

.concepts.source: Leah should go ahead and create the source text for the
concepts; we can worry about the boilerplate later.


ALLOCATION POINTS

.ap.purpose: The purpose of allocation points is to improve
performance in two ways.  .ap.purpose.lock-synch: One of these ways is
by avoiding locking synchronization (race condition; you lock a
variable by setting a flag), which is very expensive in terms of
overhead. [What's the other?]

.ap.type: Four types of allocation protocol:
   .ap.type.two-phase-loop: two-phase with loop
   .ap.type.two-phase-success: two-phase that's always successful
   .ap.type.one-phase: one-phase
   .ap.type.promise: promise -- ask for XM of mem; only deals with Limit

.ap.type.pool: The pool determines which two-phase protocol you use; some pools
require a two-phase protocol.

.ap.chapter.start: We may want to start the chapter on allocation
points with a discussion of "alloc".

.ap.alpha.barriers: On the DEC Alpha, code can be optimized during
runtime, so we have "memory barriers" that ensure that the code is
executed in the order *we* specify.

.gen.pools: We need a section somewhere on general stuff regarding
pools and pool classes.

.doc.maintenance: Aside: Think about a process for maintaining both
text and FrameMaker documents.  Where do we swap from one format to
the other?

.ap.alloc: We may do all allocations through APs.

.doc.if-conv: Aside: We need a section on interface conventions.

.gen.mostly-copying: Aside: Dylan's GC is automatic mostly-copying
(AMC).  It's only mostly copying because objects that are pointed to
by ambiguous references can't be moved; they're "pinned".


FORMATS

.scanning.word-based: Aside: MLWorks uses "word-based scanning", in
which the scanner fixes all words in the MLWorks heap.


ACTIONS

.act.counter-req: We need to come to some arrangement about how to
deal with Leah's counter-requirements; in particular, Leah needs to create
a schedule and indicate when she'll need particular things from the MM
Group.  She should give them a month's warning when she needs something,
such as example code.  We'll make a plan of action from these two
week's meetings and come up with a list of actions and
counter-requirements, to make sure everything is handled.

.act.member.virtual: Leah brought up the fact that, since she hadn't been
an official Watson Group member, she'd missed out on a lot of
information that might have been useful.  Richard said that he'd been
avoiding treating her as one because both Ken and Bob had given him the
impression that that wasn't how the Doc Group should be treated.  Leah
explained that she thought some of this was due to time issues, since
Doc Group members can be temporarily and/or partially reassigned, as
circumstances require.

.act.member.virtual.req: Richard stated that if Leah were to be treated
as a virtual member, he would have certain requirements of her, as
follows:

.act.member.virtual.req.plan.weekly:,
.act.member.virtual.req.meetings.group: In particular, Leah should turn
in a weekly plan on Mondays and attend group meetings on Wednesdays.

.act.member.virtual.review.formal: Attending formal reviews might be
beneficial for both the group and Leah's knowledge of C.

.act.member.virtual.mm.newsgroup: Leah should monitor the MM newsgroup
and yell if she notices something that's doc-related but hasn't been sent
to mm-doc.

