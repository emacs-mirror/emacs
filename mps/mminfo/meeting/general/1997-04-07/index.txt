             NOTES FROM GENERAL DESIGN MEETING, 1997-04-07
                       meeting.general.1997-04-07
                             incomplete doc
                           richard 1997-04-08

INTRODUCTION

.intro: Richard Brooksby <richard>, David Jones <drj>, Tucker Withington <ptw>, 
Nick Barnes <nickb>, and Gavin Matthews <gavinm> met at Longstanton House to 
discuss Richard's recent development of the AMC pool class and Tracer, and 
Gavin's event logging code.


GENERATIONAL AMC POOL

Richard described the data structures and processes invovled in the first 
generational version of the AMC Pool.

[Insert data structure diagram.]

Each generation contains an "Action" which is used to estimate the net benefit 
of collecting that generation.  The global strategy module regularly examines 
the set of available actions and takes those which have positive net benefit to 
the client, based on the client's own utility function specification.

The initial generational AMC checked into the trunk will have a simple 
hard-wired estimation function based on the generation "number", just like a 
traditional generational collector.  This will serve as a baseline and will 
give the Dylan group an initial performance boost which they badly need.  The 
next step will either be to improve the estimation, or implement segment 
preferencing and remembered sets using the write barrier.

It was decided that floating point would be used for calculations for the 
purposes of estimation.  The "time" (in allocated bytes) will be a "double".  
This allows simple calculation of the mean and standard deviation of birth time 
of objects, without the need for tricky fixed point analysis.  The "double" 
type is the simplest way of getting calculatons with more bits (51? bits) and 
the least error prone way of doing these calculations.


