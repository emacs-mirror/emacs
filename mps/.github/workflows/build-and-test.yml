# .github/workflows/build-and-test.yml
#
# GitHub CI <https://docs.github.com/en/actions/automating-builds-and-tests/about-continuous-integration>
#
# Adapted from <https://github.com/actions/starter-workflows/blob/9f245d9aba830ad16a097a45c78331a05114d815/ci/c-cpp.yml>
#
# TODO: Exclude certain branches.
#
# TODO: Regular builds of version branches.  See <https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule>.

name: build and test

on:
  - push
  - pull_request
  # Also run when triggered manually, e.g. by tool/github-ci-kick
  # <https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow>
  - workflow_dispatch

jobs:
  build-posix:
    # See <https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#using-a-matrix-strategy>.
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - env:
              CC: gcc
          - env:
              CC: clang
        exclude:
          - os: macos-latest
            env:
              CC: gcc

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make test
      run: make test

  # Both GCC and Clang are available on GitHub's runner
  # <https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md>
  # and the autoconf configure script prefers GCC, so we must build
  # LI*LL explicitly.
  # TODO: Might be better using <https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#expanding-or-adding-matrix-configurations>.

  LII6LL:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: make -C code -f lii6ll.gmk
    - name: make test
      # TODO: List of tests copied from Makefile.in.  Deduplicate!
      run: make -C code -f lii6ll.gmk testci testratio testscheme

  W3I6MV:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: make
      # Using path to Visual Studio documented at <https://github.com/actions/runner-images/blob/e6fcf60b8e6c0f80a065327eaefe836881c28b68/images/win/Windows2022-Readme.md?plain=1#L215>.
      run: |
         call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
         cd code
         nmake /f w3i6mv.nmk all testci testansi testpollnone
      shell: cmd
