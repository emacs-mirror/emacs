#!/usr/local/bin/bash
#
# Build and test MM (the MM_src compound) at tip of the trunk
# 
# $HopeName: HOMEmm!bin:build:MM_src_trunk(trunk.21) $
#

script="`basename $0`"
platform=$1

msg () {
  echo "$script $platform: $*" 1>&2
}

die () {
  msg "$@"
  exit 1
}

test -d $HOME/Builds || mkdir $HOME/Builds ||
  die "Unable to create Builds directory"

cd $HOME/Builds &&
rm -rf MM_src_trunk &&
mkdir MM_src_trunk &&
cd MM_src_trunk ||
  die "Unable to get to Builds/MM_src_trunk directory"

hope co -compound MMsrc -branch . -recursive \
  -writable-files quit -missing-dir create -extra-files skip ||
  die "Unable to check out MMsrc(trunk) from HOPE"


## Build a library
function build-lib {
  for variety in hi ci ti wi he ce
  do
    date
    gnumake -r -f ${platform}.gmk VARIETY=$variety $1 ||
      die "Unable to build library $1 of trunk"
  done
}

## Build and run a test
function do-test {
  for variety in hi ci ti wi he ce
  do
    date
    gnumake -r -f ${platform}.gmk VARIETY=$variety $1 ||
      die "Unable to build test $variety/$1 of trunk"
    ./$platform/$variety/$1 ||
      die "Failed test $variety/$1 of trunk"
    rm mpsio.log
  done
}


cd src

### SW builds have different compilation options, so they ought to be
### done separately.  Do them first.

build-lib mmsw.a

## do-test epvmss # Don't run epvmss, because it takes too long

### Then clean up and do the others.

gnumake -r -f $platform.gmk clean ||
  die "Unable to clean up trunk"

build-lib mps.a 

for test in amcss lockcov locv mpmss mpsicv poolncv \
            qs mpmconft finalcv arenacv awlut
            ## Don't run amsss, because it takes too long
            ## Don't run dwstress, because it's not a good test
do
  do-test $test
done

gnumake -r -f $platform.gmk clean ||
  die "Unable to clean up trunk"
