#!/bin/sh
#
# Build the MMsrc compound at tip of the trunk, and run QA tests
# 
# $HopeName: HOMEmm!bin:mmqa:MMQA_src_trunk(trunk.1) $


script="`basename $0`"
platform=$1
varieties="wi hi ci ti we he ce ii"


msg () {
  echo "$script $platform: $*" 1>&2
}

die () {
  msg "$@"
  exit 1
}


test -d $HOME/Builds || mkdir $HOME/Builds ||
  die "Unable to create Builds directory"

cd $HOME/Builds &&
rm -rf MMQA_src_trunk &&
mkdir MMQA_src_trunk &&
cd MMQA_src_trunk ||
  die "Unable to get to Builds/MMQA_src_trunk directory"

hope co -compound MMsrc -branch trunk -recursive \
  -writable-files quit -missing-dir create -extra-files skip ||
  die "Unable to check out MMsrc(trunk) from HOPE"

mmsrc=`pwd`/src



## Build a library
build_lib () {
  for variety in $varieties
  do
    date
    gnumake -rf ${platform}.gmk VARIETY=$variety $1 ||
      die "Unable to build library $1 of trunk"
  done
}

## Build and run MMQA test suites
mmqa_tests () {
  MMQA_MPS_INCLUDE_DIR=$mmsrc  export MMQA_MPS_INCLUDE_DIR
  MMQA_LOG_DIR=./log  export MMQA_LOG_DIR
  for variety in $varieties
  do
    MMQA_MPS_LINK_OBJ="$mmsrc/$platform/$variety/$2 \
                       $mmsrc/$platform/$variety/mpsplan.a" \
                       export MMQA_MPS_LINK_OBJ
    MMQA_MAIL_SUBJECT="MMQA $1 for variety $variety of trunk:" \
                       export MMQA_MAIL_SUBJECT
    perl5 ./test/qa clib || die "Unable to compile MMQA library"
    perl5 ./test/qa runset $1  || die "Failed to run MMQA testset"
  done
}


cd $HOME/Builds &&
rm -rf MMQA &&
mkdir MMQA &&
cd MMQA ||
  die "Unable to get to Builds/MMQA directory"

hope co -compound MMQA -branch trunk -recursive -missing-dir create ||
  die "Unable to check out MMQA(trunk) from HOPE"


### SW builds have different compilation options, so they ought to be
### done separately.  Do them first.

cd $mmsrc
build_lib mmsw.a
build_lib mpsplan.a

cd $HOME/Builds/MMQA &&
mmqa_tests testsets/dailysw mmsw.a


### Then clean up and do the others.

cd $mmsrc
gnumake -rf $platform.gmk clean ||
  die "Unable to clean up trunk"

build_lib mmdw.a
build_lib mpsplan.a

cd $HOME/Builds/MMQA &&
mmqa_tests testsets/dailydw mmdw.a


# If the tests succeeded, delete the junk
cd $HOME/Builds &&
rm -rf MMQA_src_trunk &&
rm -rf MMQA
