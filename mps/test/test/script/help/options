display options and their current values
% $Id$

Usage: qa options [<options>]

'options' prints out a table of all options and flags used
by the qa harness. Each may be specified by setting an
environment variable (to "on" or "off" in the case of a flag)
or as a command line option. The current values (i.e. resulting
from defaults, environment variables and any options given
to the 'options' command) are also shown. You can use command-
line options with the 'options' command to check that you're
specifying them correctly, but of course they won't remain
set for future commands.

In general, if you specify a command-line option or flag, it
will override whatever setting was made with environment variables.
If the option is _cumulative_, however, both will apply.

What the options mean:

MMQA_MPS_INCLUDE_DIR / -i
 a directory where the MPS source code may be found. Defaults to the
 code directory relative to the test script.

MMQA_MPS_LINK_OBJ / -l
 the MM libraries and plinth to link with. Separate multiple files
 with spaces. (Spaces in the paths will make the test harness go
 wrong, unfortunately.) Defaults to the appropriate file for the
 platform and variety.

MMQA_LOG_DIR / -g
 the directory in which log files should be saved. Default is
 'log' directory inside the MMQA 'test' directory.

MMQA_DATA_DIR / -data
 the diretory in which MMQA data files may be found. Default is
 '../data' from the MMQA 'test' directory. This is used when tests
 specify a particular file as their standard input. If you specify
 the standard input with MMQA_STDIN, the current directory is used.

MMQA_PLATFORM / -p
 the platform you are running on. This is determined automatically,
 and used to specify compiler options and command-line syntax for
 running tests. Setting it to a value not appropriate to the
 machine you are using will make the test system go wrong.

MMQA_VARIETY / -v
 the MPS variety to test. Defaults to cool.

MMQA_PARAMETERS / -a (cumulative)
 parameter settings to use for a test. These override any parameter
 settings specified in the test header. Examples (all equivalent):

 1) qa run test.c -a DEPTH=10 -a WIDTH=5

 2) qa run test.c -a "WIDTH=5 DEPTH=10"
 
 3) MMQA_PARAMETERS='DEPTH=10 WIDTH=5'
    qa run test.c

 4) MMQA_PARAMETERS='DEPTH=10'
    qa run test.c -a WIDTH=5

 Parameters may also be specified individually:

 5) MMQA_PARAM_DEPTH=10
    MMQA_PARAM_WIDTH=5
    qa run test.c

 All these kinds of parameter settings may be combined. In the case
 of a clash, the command-line setting takes precedence, then the
 setting via MMQA_PARAMETERS. I recommend using command-line settings
 only, otherwise there's a risk you'll leave the parameters set and
 end up using them by mistake with other tests.

MMQA_STDIN / -s
 allows you to specify what a test will use for its standard
 input. If unset, the file specified by the test itself will
 be used (from the MMQA_DATA_DIR directory). By setting MMQA_STDIN,
 you can use a file of your choosing, or specify "STDIN" if you want
 to force input from whatever is the qa harness's standard input
 (usually the keyboard).

MMQA_DEBUG_INFO / -[no]debug
 default is 'off'. If you turn this on, qa commands will output
 various diagnostic messages, which may or may not be useful in
 the event of a problem with the test system. Not recommended.

MMQA_DANGEROUS / -[no]danger
 default is 'off'. With default setting, the harness will refuse
 to run a test if it believes the test libraries may not be compatible
 with the current settings. Normally you will want to "qa clib" when
 this happens, but to force the harness to run the test with the
 old libraries (and symbol lists), turn this option on.

MMQA_MAIL_RESULTS / -[no]mail
 If MAIL_RESULTS is on, then MAIL_SUBJECT will be put at the beginning
 of the subject header when test logs are mailed out. Default is
 "MMQA-log". Don't change this unless you are going to change
 MMQA_MAIL_TO, in which case you might want to use it to help you
 filter your mail automatically.

MMQA_MAIL_TO / -m
 If MAIL_RESULTS is on, then MAIL_TO is who to mail test logs to.
 The default is mm-qa-test-log, which get archived in the
 "MM QA Test Log" Notes database. Leave this unchanged, unless for
 example you want to mail results (which are more detailed than
 those displayed on screen) to yourself.

MMQA_MAIL_SUBJECT / -subj
 If MAIL_RESULTS is on, then MAIL_SUBJECT will be put at the
 beginning of the subject header when test logs are mailed out.
 Default is "MMQA-log". Don't change this unless you are going to
 change MMQA_MAIL_TO, in which case you might want to use it to help
 you filter your mail automatically.

