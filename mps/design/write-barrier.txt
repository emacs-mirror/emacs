.. mode: -*- rst -*-

Write barrier
=============

:Tag: design.mps.write-barrier
:Author: Richard Brooksby
:Date: 2016-03-18
:Status: incomplete design
:Revision: $Id$
:Copyright: See `Copyright and License`_.
:Index terms: pair: write barrier; design


Introduction
------------

.intro: This document explains the design of the write barrer of the
Memory Pool System (MPS).

.readership: This document is intended for developers of the MPS.


Overview
--------

.overview: The MPS uses a combination of hardware memory protection
and BIBOP techniques to maintain an approximate remembered set.  The
remembered set keeps track of areas of memory that refer to each
other, so that the MPS can avoid scanning areas that are irrelevant
during a garbage collection.  The MPS write barrier is implemented by
a one-word "summary" of the zones referenced by a segment.  That
summary can be compared with the "white set" of a trace by a simple
logical AND operation.

[At this point I was interrupted by a man from Porlock.]


Write barrier deferral
----------------------

.deferral: The overheads hardware barriers varies widely between
operating systems.  On Windows it is very cheap to change memory
protection and to handle protecion faults.  On OS X it is very
expensive.  The balance between barriers and scanning work is
different.  There is no point in spending 1000 CPU units raising a
write barrier to avoid 10 CPU units of scanning cost.

The MPS balances these costs with write barrier deferral.  The write
barrier is not immediately raised when a segment is scanned.  Instead,
we store a deferral count with the segment.  Each time the segment is
"boring" scanned the count is decremented.  A boring scan is one that
found no interesting references (to white objects).  The write barrier
is raised only when the count reaches zero.  The count is reset after
three events:

1. segment creation (``WB_DEFER_INIT``)

2. an interesting scan (``WB_DEFER_DELAY``)

3. a barrier hit (``WB_DEFER_HIT``)

See also job003975.


Document History
----------------

- 2016-03-19  RB_  Created.

.. _RB: http://www.ravenbrook.com/consultants/rb/


Copyright and License
---------------------

Copyright Â© 2013-2014 Ravenbrook Limited. All rights reserved.
<http://www.ravenbrook.com/>. This is an open source license. Contact
Ravenbrook for commercial licensing options.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

#. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

#. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

#. Redistributions in any form must be accompanied by information on how
   to obtain complete source code for this software and any
   accompanying software that uses this software.  The source code must
   either be included in the distribution or be available for no more than
   the cost of distribution plus a nominal fee, and must be freely
   redistributable under reasonable conditions.  For an executable file,
   complete source code means the source code for all modules it contains.
   It does not include source code for modules or files that typically
   accompany the major components of the operating system on which the
   executable file runs.

**This software is provided by the copyright holders and contributors
"as is" and any express or implied warranties, including, but not
limited to, the implied warranties of merchantability, fitness for a
particular purpose, or non-infringement, are disclaimed.  In no event
shall the copyright holders and contributors be liable for any direct,
indirect, incidental, special, exemplary, or consequential damages
(including, but not limited to, procurement of substitute goods or
services; loss of use, data, or profits; or business interruption)
however caused and on any theory of liability, whether in contract,
strict liability, or tort (including negligence or otherwise) arising in
any way out of the use of this software, even if advised of the
possibility of such damage.**
