#!/usr/local/perl
# $HopeName: MMQA_harness!script:runtest(trunk.4) $
#
# provides subroutines to run tests and testsets
#

1;

# general routines first

# file, "yes", "result" for try
# file, "no", "full" for run

sub run_exe {
 local ($exefile, $interact, $stdin) = @_;

 if (! defined $stdin) {
  $stdin = "STDIN";
 } else {
  $stdin = $DATA_DIR."/".$stdin;
 }

 &log_system($exefile, $interact, $testlogfile, $stdin);
 &read_results($testlogfile);
 &verdict;
}

sub clib {
 local ($success) = (1);

 &logcomment("Compiling test libraries from $testlib_dir.");

 open(MANIFEST, "$testlib_dir/manifest");
 &compiler_settings;
 while ($tlfile = <MANIFEST>) {
  unless ($tlfile =~ /^%/) {
   chop($tlfile);
   $tlfile = $testlib_dir."/".$tlfile;
   $tlobj = $tlfile;
   $tlobj =~ s/\.c/$obj_suffix/;
   $tlobj =~ s/$testlib_dir/$obj_dir/;

   if (&compile($tlfile, $tlobj)) {
   } else {
    $success = 0;
    &logcomment(" failed on %tlfile.");
   }
  }
 }
 close(MANIFEST);
 $success;
}

sub run_test {
 local ($testfile, $interact, $report_type) = @_;

 &readheader($testfile);

 for $lang ($test_header{"language"}) {

  if ($lang =~ /^c$/) {
   $linkfiles = $test_header{"link"};
   $objfile = "$obj_dir/tmp_test";
   unless (&compile_and_link($testfile, $objfile, $linkfiles)) {
    die "Compilation failed on test ".$testfile.".\n";
   }
   $testlogfile = "$obj_dir/tmp_log.log";
   &run_exe($objfile, $interact, $test_header{"stdin"});
   &describe_test($report_type);
   last;
  };

  if ($lang =~ /^english$/) {
   print "Manual test -- you'll have to do it yourself.\n\n";
   &display_test_source($testfile, STDOUT, 75);
   last;
  };

  die "Don't know how to run tests in the $lang language.\n";
 }
}

sub run_from_testset {
 local ($testfile) = @_;

 &readheader($testfile);
 unless ($test_header{"language"} eq "c") {
  &logcomment("Skipping test $testfile: don't know how to run it in batch mode.");
  $testsetresults{$testfile}="/";
 } else {
  $linkfiles = $test_header{"link"};
  $objfile = "$obj_dir/tmp_test";
  $testlogfile = "$obj_dir/tmp_log.log";

  unless (&compile_and_link($testfile, $objfile, $linkfiles)) {
   &logcomment("Compilation failed on $testfile.");
   $testsetresults{$testfile}="C";
  } else {
   &run_exe($objfile, "no", $test_header{"stdin"});
   &describe_test("summary");
   &describe_test("summary", LOG_SUMMARY);
   &describe_test("results", LOG_RESULTS);
   &describe_test("full", LOG_FULL);
   if ($testconclusion eq "PASS") {
    $testsetresults{$testfile}=".";
   } else {
    $testsetresults{$testfile}="*";
   }
  }
 }
}

sub run_testset {
 local ($testsetfile, $logsummfile, $logresfile, $logfullfile) = @_;

 open(TESTSET, $testsetfile) ||
  die "Failed to open testset $testsetfile.";

 &ensuredir($LOG_DIR);

 %testsetresults = ();

 open(LOG_SUMMARY, ">".$logsummfile);
 open(LOG_RESULTS, ">".$logresfile);
 open(LOG_FULL,    ">".$logfullfile);
 @LOG_FILES = (STDOUT, LOG_SUMMARY, LOG_RESULTS, LOG_FULL);
 &logcomment("Test set $testsetfile");
 &logcomment("");

 unless (&clib) {
  &logcomment("Failed to compile libraries.");
 } else {
  while (<TESTSET>) {
   unless (/(^%)|(^\s*$)/) {
    chop;
    &run_from_testset($_);
   }
  }
 }

 close(LOG_SUMMARY);
 close(LOG_RESULTS);
 close(LOG_FULL);
}
 
