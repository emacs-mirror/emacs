# ==== SECOND COMMON FRAGMENT FOR PLATFORMS USING MV AND NMAKE
#
# $HopeName: MMsrc!commpost.nmk(trunk.8) $
# Copyright(C) 1997 Harlequin Group, all rights reserved
#
# DESCRIPTION
#
# Second common makefile fragment for w3*mv.nmk.  See commpre.nmk


# == Pseudo-targets

# "all" builds all the varieties of all targets
# %%TARGET: Add the target  to the all dependencies

all: mpmss.exe amcss.exe lockutw3.exe lockcov.exe \
     mpsicv.exe poolncv.exe locv.exe qs.exe mpm.lib weakcv.exe \
     mpmconft.exe finalcv.exe awlut.exe arenacv.exe

# Convenience targets
# %%TARGET: Add a pseudo-target for the new part

dwstress.exe amcss.exe lockutw3.exe lockcov.exe \
     mpmss.exe protcv.exe mpsicv.exe poolncv.exe locv.exe qs.exe \
     weakcv.exe mpmconft.exe finalcv.exe awlut.exe arenacv.exe \
     mpm.lib mmdw.lib mmsw.lib poolawl.lib mpsplan.lib:
!IFDEF VARIETY
	$(MAKE) /nologo /f $(PFM).nmk TARGET=$@ variety
!ELSE
	$(MAKE) /nologo /f $(PFM).nmk TARGET=$@ target
!ENDIF

mpsicv.cov:
	$(MAKE) /nologo /f $(PFM).nmk TARGET=$@ VARIETY=cv variety

# "clean" removes the directory containing the build results for the platform

clean:
	$(ECHO) $(PFM): $@
	-echo y | rmdir/s $(PFM)
	-deltree /Y $(PFM)

# target target
# %%VARIETY: Add a recusive make call for the new variety

!IFDEF TARGET
!IFNDEF VARIETY
target:
	$(MAKE) /nologo /f $(PFM).nmk VARIETY=df variety
	$(MAKE) /nologo /f $(PFM).nmk VARIETY=dp variety
	$(MAKE) /nologo /f $(PFM).nmk VARIETY=ds variety
	$(MAKE) /nologo /f $(PFM).nmk VARIETY=dl variety
	$(MAKE) /nologo /f $(PFM).nmk VARIETY=ro variety
!ENDIF
!ENDIF

# variety

!IFDEF VARIETY
!IFDEF TARGET
variety: $(PFM)\$(VARIETY)\$(TARGET)
!ENDIF
!ENDIF


# GENUINE TARGETS
#
# Each line defines an executable or library target to be built and the object
# files it is build from.  For an executable these lines add dependencies to
# the generic rules below, and should not include commands to execute.
# For a library this is not possible and the target should include commands
# to build it.
# %%TARGET: Add your new target here

!IFDEF VARIETY

$(PFM)\$(VARIETY)\weakcv.exe: $(PFM)\$(VARIETY)\weakcv.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(AMCOBJ) $(DWOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\finalcv.exe: $(PFM)\$(VARIETY)\finalcv.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(AMCOBJ) $(DWOBJ) $(MRGOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\mpmconft.exe: $(PFM)\$(VARIETY)\mpmconft.obj \
	$(MPMOBJ) $(PLINTHOBJ) 

$(PFM)\$(VARIETY)\mpmss.exe: $(PFM)\$(VARIETY)\mpmss.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\lockcov.exe: $(PFM)\$(VARIETY)\lockcov.obj \
	$(MPMOBJ) $(PLINTHOBJ) 

$(PFM)\$(VARIETY)\lockutw3.exe: $(PFM)\$(VARIETY)\lockutw3.obj \
	$(MPMOBJ) $(PLINTHOBJ) 

$(PFM)\$(VARIETY)\qs.exe:  $(PFM)\$(VARIETY)\qs.obj \
	$(AMCOBJ) $(MPMOBJ) $(PLINTHOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\amcss.exe:  $(PFM)\$(VARIETY)\amcss.obj \
	$(MPMOBJ) $(AMCOBJ) $(PLINTHOBJ) $(DWOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\mpsicv.exe:  $(PFM)\$(VARIETY)\mpsicv.obj \
	$(MPMOBJ) $(AMCOBJ) $(PLINTHOBJ) $(DWOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\dwstress.exe:  $(PFM)\$(VARIETY)\dwstress.obj \
	$(DWOBJ) $(MPMOBJ) $(PLINTHOBJ) $(AMCOBJ)

$(PFM)\$(VARIETY)\protcv.exe:  $(PFM)\$(VARIETY)\protcv.obj \
	$(MPMOBJ) $(PLINTHOBJ) 

$(PFM)\$(VARIETY)\poolncv.exe:  $(PFM)\$(VARIETY)\poolncv.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(TESTLIBOBJ) $(PFM)\$(VARIETY)\pooln.obj

$(PFM)\$(VARIETY)\locv.exe:  $(PFM)\$(VARIETY)\locv.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(TESTLIBOBJ) $(LOOBJ)

$(PFM)\$(VARIETY)\awlut.exe:  $(PFM)\$(VARIETY)\awlut.obj \
	$(PFM)/$(VARIETY)/fmtdy.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(TESTLIBOBJ) $(LOOBJ) $(AWLOBJ)

$(PFM)\$(VARIETY)\arenacv.exe:  $(PFM)\$(VARIETY)\arenacv.obj \
	$(MPMOBJ) $(PLINTHOBJ) $(TESTLIBOBJ)

$(PFM)\$(VARIETY)\mpm.lib: $(MPMOBJ)
	$(ECHO) $@
	$(LIBMAN) $(LIBFLAGS) /OUT:$@ $**

$(PFM)\$(VARIETY)\amc.lib: $(MPMOBJ) $(AMCOBJ)
	$(ECHO) $@
	$(LIBMAN) $(LIBFLAGS) /OUT:$@ $**

$(PFM)\$(VARIETY)\mmsw.lib: $(SWOBJ)
	$(ECHO) $@
	$(LIBMAN) $(LIBFLAGS) /OUT:$@ $**

$(PFM)\$(VARIETY)\mmdw.lib: $(MPMOBJ) $(AMCOBJ) $(DWOBJ) $(AWLOBJ) $(LOOBJ)
	$(ECHO) $@
	$(LIBMAN) $(LIBFLAGS) /OUT:$@ $**

$(PFM)\$(VARIETY)\mpsplan.lib: $(PLINTHOBJ)
	$(ECHO) $@
	$(LIBMAN) $(LIBFLAGS) /OUT:$@ $**

$(PFM)\$(VARIETY)\poolawl.lib: $(AWLOBJ)
	$(ECHO) $@
	$(LIBMAN) $(LIBFLAGS) /OUT:$@ $**

!ENDIF

# GENERIC RULES

# Object files
# [builds objects for static linking with libc]

{}.c{$(PFM)\$(VARIETY)}.obj:
	$(ECHO) $@
	@if not exist $(PFM) mkdir $(PFM)
	@if not exist $(PFM)\$(VARIETY) mkdir $(PFM)\$(VARIETY)
	cl /c $(CFLAGS) /Fd$(PFM)\$(VARIETY)\$(<:.obj=.pdb) /Fo$@ $<

{}.asm{$(PFM)\$(VARIETY)}.obj:
	$(ECHO) $@
	@if not exist $(PFM) mkdir $(PFM)
	@if not exist $(PFM)\$(VARIETY) mkdir $(PFM)\$(VARIETY)
	ml /nologo /c /coff /Fo$@ $<

# Coverage files
{$(PFM)\$(VARIETY)}.exe{$(PFM)\$(VARIETY)}.cov:
	$(ECHO) $@
	cd $(PFM)\$(VARIETY)
	prep /nologo /lv  $(<F)
	profile /nologo $(<B)
	prep /nologo /m $(<B)
	plist /nologo /D ..\.. $(<B) > $(@F)


# Dependencies
# [we can't build these at the moment]

# Executables
# libcmt.lib is the library needed for multi-threaded programs.

{$(PFM)\$(VARIETY)}.obj{$(PFM)\$(VARIETY)}.exe:
	$(ECHO) $@
	$(LINKER) $(LINKFLAGS) /OUT:$@ $(**) libcmt.lib
#!INCLUDE depend.mak
